version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 968


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1117145302 - 1120844115
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2542 0 0 1 0 0 1
+3 0 2542 0 0 0 0 0 0 0 0 2542
+2 0 2542
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2542 0x3877c7b8b0 0 
* 0 298264 77349 41193 23 6 0 23 6 0 73468 1241
* 0 2542 2542 0 1 1 0 1 1 0 0 0 2542

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2542 0 2542 1 0 0 1
+1 0 2542
+5 0 2542
+3 0 2542 0 2542
+1 0 2542
+4 0 2542 0 0 1 0 0 1
+3 0 2542
+4 0 2542
+3 0 2542 0 2542 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2542 0x3877c7aa50 0 
* 0 738472 106622 109630 51 38 69 51 38 69 123205 4378
* 0 2542 2542 0 1 1 0 1 1 0 0 0 2542
+5 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542
jcnd=2542/2542 +96 0 
* 0 
+96 0 2542 0 0 1 0 0 1
+4 0 2542 2542
+1 0 2542 2542
+1 0 2542 2542

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 631 0 631 1 0 0 1
+1 * 631
+3 * 631
+4 * 631 0 631
+4 * 631 0 631
+4 +1 631 631
+4 * 631
+3 * 631 0 631
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=631 0x402d74 645 
* * 8203 3786 1262
+5 * 631
+3 * 631 0 631
+3 +1 631 631
+6 * 631 0 631
+3 * 631 631
+6 * 631 0 631
+3 +1 631 631
+6 * 631 0 631 1 0 0 1
+3 * 631 631
+6 * 631 0 631
+3 +2 631 0 631
+7 * 631
jump=631 +86 * 
* * 
+2 +1 200027 200027
+3 * 200027
+3 * 200027 200027
+4 * 200027
+3 * 200027
+3 * 200027 0 200027
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=200027 0x402d9a 770 
* * 2200297 1000135 600081
+5 * 200027 200027
+4 * 200027 200027
+5 * 200027
+4 * 200027 0 200027
+5 +1 200027 200027
+3 * 200027
+3 * 200027 200027
+4 * 200027
+3 * 200027
+3 * 200027 0 200027
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=200027 0x402dba 770 
* * 2200297 1000135 600081 1 0 0 1
+5 * 200027 200027
+2 * 200027
+4 * 200027 200027
+5 * 200027
+4 * 200027 0 200027
+5 -2 200027 0 200027
+4 * 200027 200027
+3 * 200027
+3 * 200027 200027
+3 * 200027 0 0 0 0 0 0 0 0 200027 632
jcnd=199396/200027 -93 +1 
* * 
-9 * 631 631 0 1 0 0 1
+3 * 631
+3 * 631 631
+3 * 631 0 0 0 0 0 0 0 0 631
jcnd=631/631 -93 +1 
* * 
+2 +4 631 631
+3 * 631
+3 * 631
+4 * 631 631 0 1 0 0 1
+5 * 631
+4 * 631
+3 * 631 0 631
+5 +1 631 631
+3 * 631
+3 * 631
+4 * 631 631
+5 * 631
+4 * 631
+3 * 631 0 631
+5 +1 631 0 631
+7 * 631
jump=631 0x4016ee * 
* * 
+2 +1 200027 200027
+3 * 200027
+3 * 200027 200027
+4 * 200027
+3 * 200027 0 0 1 0 0 1
+3 * 200027 0 200027
cfi=(2)
cfn=(146)
calls=200027 0x402dba 770 
* * 2200297 1000135 600081
+5 * 200027 200027
+2 * 200027
+4 * 200027 200027
+5 * 200027 0 200027
+5 +1 200027 200027
+3 * 200027
+3 * 200027 200027
+4 * 200027
+3 * 200027
+3 * 200027 0 200027
cfi=(2)
cfn=(144)
calls=200027 0x402d9a 770 
* * 2200297 1000135 600081
+5 * 200027 200027
+4 * 200027 200027
+5 * 200027 0 200027
+5 +1 200027 200027
+5 * 200027 200027
+5 * 200027 200027
+5 * 200027
+4 * 200027 0 200027
+5 +1 200027 200027
+5 * 200027 200027
+5 * 200027 200027
+5 * 200027
+4 * 200027 0 200027
+5 -4 200027 0 200027
+4 * 200027 200027
+3 * 200027
+3 * 200027 200027
+3 * 200027 0 0 0 0 0 0 0 0 200027 632
jcnd=199396/200027 0x401672 +1 
* * 
-9 * 631 631 0 1 0 0 1
+3 * 631
+3 * 631 631
+3 * 631 0 0 0 0 0 0 0 0 631
jcnd=631/631 0x401672 +1 
* * 
+6 +6 631 631 0 1 0 0 1
+5 * 631 631
+5 * 631 0 631
+5 +2 631 631
+3 +1 631 0 631
+3 * 631 631
+5 * 631 631
+1 * 631 631

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 631
+7 * 631
+7 * 631
+3 * 631
+3 * 631 0 631
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=631 0x4030b2 310 
* * 808676 246083 234278 67 15 16 67 15 16 50880 1836 2522 315
+5 * 631
+7 * 631
+7 * 631
+3 * 631
+3 * 631 0 631
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=631 0x402ff4 310 
* * 803269 242569 229460 45 27 115 45 27 115 50078 2698 2522
+5 * 631 0 0 1 0 0 1
+7 * 631
+7 * 631
+3 * 631
+3 * 631 0 631
cfn=(142)
calls=631 0x401585 -52 
* * 20843823 9217017 4811375 8 0 0 8 0 0 401316 1264
+5 * 631 0 631
+8 * 631 631
+6 * 631 0 631
+6 * 631
+7 * 631
+3 * 631 0 631
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=631 0x402df4 414 
* * 161028 50665 35937 34 8 0 34 8 0 18553 514 1262
+5 * 631
+7 * 631
+3 * 631 0 631 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=631 0x402e74 414 
* * 168864 53391 38791 7 0 0 7 0 0 20483 105 1262
+5 +2 631
+7 * 631
+7 * 631
+3 * 631
+3 * 631 0 631
cfi=(2)
cfn=(4)
calls=631 0x4030b2 310 
* * 808263 246061 234181 2 0 1 2 0 1 50831 1126 2522
+5 * 631
+7 * 631
+7 * 631
+3 * 631
+3 * 631 0 631
cfi=(2)
cfn=(80)
calls=631 0x402ff4 310 
* * 801291 242437 229237 0 0 0 0 0 0 49673 1954 2522
+5 * 631 631
+6 * 631 0 0 1 0 0 1
+7 * 631
+7 * 631 0 631
+6 * 631 631
+8 * 631
+3 * 631
+3 * 631 0 631
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=631 0x401719 -33 
* * 9638525 4014422 2209762 4 0 0 4 0 0 200658 632
+5 * 631 0 631
+8 * 631 631
+6 * 631 0 631
+6 * 631
+7 * 631 0 0 1 0 0 1
+3 * 631 0 631
cfi=(2)
cfn=(148)
calls=631 0x402df4 414 
* * 161028 50665 35937 0 0 0 0 0 0 18553 507 1262
+5 * 631
+7 * 631
+3 * 631 0 631
cfi=(2)
cfn=(178)
calls=631 0x402e74 414 
* * 168864 53391 38791 0 0 0 0 0 0 20483 100 1262
+5 +2 631 631
+7 * 631
+3 * 631 0 631
cfi=(2)
cfn=(2)
calls=631 0x402d74 645 
* * 8203 3786 1262
+5 * 631 631
+6 * 631
+3 * 631
+3 * 631
+3 * 631 631
+7 * 631
+3 * 631 0 0 1 0 0 1
+3 * 631 0 631
cfi=(2)
cfn=(144)
calls=631 0x402d9a 770 
* * 6941 3155 1893
+5 * 631
+3 * 631
+7 * 631
+3 * 631
+3 * 631 0 631
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=631 0x402eda 901 
* * 55156 20937 15975 40 43 39 40 43 39 2262 83 53
+5 +1 631 631
+7 * 631
+3 * 631 0 631
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=631 0x402f54 645 
* * 8203 3786 1262 0 1 0 0 1
+5 * 631 631
+6 * 631
+3 * 631
+3 * 631
+3 * 631 631
+7 * 631 0 0 1 0 0 1
+3 * 631
+3 * 631 0 631
cfi=(2)
cfn=(146)
calls=631 0x402dba 770 
* * 6941 3155 1893
+5 * 631
+3 * 631
+7 * 631
+3 * 631
+3 * 631 0 631
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=631 0x402f7a 901 
* * 54135 20716 15772 24 40 90 24 40 90 2057 57 53
+5 +1 631 631
+7 * 631
+3 * 631 0 631
cfi=(2)
cfn=(10)
calls=631 0x402f54 645 
* * 8203 3786 1262
+5 * 631 631
+6 * 631
+3 * 631
+3 * 631
+3 * 631 631 0 1 0 0 1
+7 * 631
+3 * 631
+3 * 631 0 631
cfi=(2)
cfn=(146)
calls=631 0x402dba 770 
* * 6941 3155 1893
+5 * 631 631
+2 * 631
+4 * 631 631
+8 * 631 631
+8 * 631 0 631
+8 +1 631 631
+7 * 631
+3 * 631 0 631
cfi=(2)
cfn=(2)
calls=631 0x402d74 645 
* * 8203 3786 1262
+5 * 631 631 0 1 0 0 1
+6 * 631
+3 * 631
+3 * 631
+3 * 631 631
+7 * 631
+3 * 631
+3 * 631 0 631
cfi=(2)
cfn=(144)
calls=631 0x402d9a 770 
* * 6941 3155 1893
+5 * 631 631
+4 * 631 631
+8 * 631
+4 * 631 631
+8 * 631
+3 * 631 0 631
+8 +2 631 0 631
+7 -12 631 631
+8 * 631 631
+7 * 631 0 0 0 0 0 0 0 0 631 1
jcnd=1/631 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 631
+7 * 631
+3 * 631 0 631
cfi=(2)
cfn=(2)
calls=631 0x402d74 645 
* * 8203 3786 1262 2 0 1 2 0 1
+5 * 631
+3 * 631 631
+7 * 631
+3 * 631 0 631
cfi=(2)
cfn=(2)
calls=631 0x402d74 645 
* * 8203 3786 1262 0 1 0 0 1
+5 * 631
+3 * 631 0 0 0 0 0 0 0 0 631 3
+2 * 631 0 0 1 0 0 1
+5 * 631
jump=631 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 631
+2 * 631 0 0 0 0 0 0 0 0 631
jcnd=631/631 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 631 0 631
+1 * 631
+3 * 631
+4 * 631 0 631
+4 * 631 0 631
+4 * 631 0 631
+5 +1 631 631
+4 * 631
+3 * 631 0 631
cfi=(2)
cfn=(2)
calls=631 0x402d74 645 
* * 8203 3786 1262
+5 * 631
+3 * 631 0 631
+3 +1 631 631 0 1 0 0 1
+6 * 631 0 631
+3 * 631 631
+6 * 631 0 631
+3 +2 631 0 631
+7 * 631
jump=631 +86 * 
* * 
+2 +1 200027 200027
+3 * 200027
+3 * 200027 200027
+4 * 200027
+3 * 200027
+3 * 200027 0 200027
cfi=(2)
cfn=(144)
calls=200027 0x402d9a 770 
* * 2200297 1000135 600081
+5 * 200027 200027
+4 * 200027 200027
+5 * 200027
+4 * 200027 0 200027
+5 +1 200027 200027
+3 * 200027
+3 * 200027 200027
+4 * 200027
+3 * 200027
+3 * 200027 0 200027
cfi=(2)
cfn=(146)
calls=200027 0x402dba 770 
* * 2200297 1000135 600081
+5 * 200027 200027
+2 * 200027
+4 * 200027 200027
+5 * 200027
+4 * 200027 0 200027
+5 -2 200027 0 200027
+4 * 200027 200027
+3 * 200027
+3 * 200027 200027
+3 * 200027 0 0 0 0 0 0 0 0 200027 632
jcnd=199396/200027 -93 +1 
* * 
-9 * 631 631 0 1 0 0 1
+3 * 631
+3 * 631 631
+3 * 631 0 0 0 0 0 0 0 0 631
jcnd=631/631 -93 +1 
* * 
+2 +4 631 631
+3 * 631
+3 * 631 0 0 1 0 0 1
+4 * 631 631
+5 * 631
+4 * 631
+3 * 631 0 631
+5 +1 631 631
+3 * 631
+3 * 631
+4 * 631 631
+5 * 631
+4 * 631
+3 * 631 0 631
+5 +1 631 631
+5 * 631 631
+5 * 631 631
+5 * 631 0 0 1 0 0 1
+4 * 631
+3 * 631 0 631
+5 +2 631 631
+3 +1 631 0 631
+3 * 631 631
+5 * 631 631
+1 * 631 631

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1262 0x4044cc -35 
* * 6310 2524 2524
+5 * 1262 1262
+1 * 1262 1262

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262 1 0 0 1
+4 +1 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1262 0x4049d4 -35 
* * 7572 2524 3786 1 0 0 1
+5 * 1262 1262
+1 * 1262 1262

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1262 0x404520 -35 
* * 6310 2524 2524
+5 * 1262 1262
+1 * 1262 1262

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1262 0x404a28 -35 
* * 7572 2524 3786 1 0 1 1 0 1
+5 * 1262 1262
+1 * 1262 1262

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 631 0 631
+1 * 631
+3 * 631
+4 * 631 0 631
+4 * 631 0 631
+4 * 631 0 631
+4 +1 631 631
+4 * 631 631
+4 * 631 631
+4 * 631
+3 * 631
+3 * 631 0 631
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=631 0x403df2 -87 
* * 15144 5048 5679 0 40 27 0 40 27 631 2
+5 * 631 631
+1 * 631 631

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262 0 1262
+4 * 1262 1262
+4 * 1262 1262
+1 * 1262 1262

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 631 0 631
+1 * 631
+3 * 631
+4 * 631 0 631
+4 * 631 0 631
+4 * 631 0 631
+4 +1 631 631
+4 * 631 631
+4 * 631 631
+4 * 631
+3 * 631
+3 * 631 0 631
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=631 0x40406a -87 
* * 15144 5048 5679 0 40 31 0 40 31 631
+5 * 631 631
+1 * 631 631

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+4 * 1262 1262
+4 * 1262 1262
+1 * 1262 1262

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1352 0 1352
+1 * 1352
+3 * 1352 0 1352 0 0 1 0 0 1
+4 +1 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2524 0 2524 1 0 0 1
+1 * 2524
+3 * 2524
+4 * 2524 0 2524
+4 +1 2524
+4 * 2524
+3 * 2524 0 2524
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2524 0x404ffe 790 
* * 15144 7572 5048 1 0 0 1
+5 * 2524 2524
+3 * 2524 2524
+1 * 2524 2524

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2524 0 2524 1 0 0 1
+1 * 2524
+3 * 2524 0 2524
+4 +1 2524 2524
+4 * 2524 2524
+1 * 2524 2524

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2524 0 2524 1 0 0 1
+1 * 2524
+3 * 2524
+4 * 2524 0 2524
+4 +1 2524
+4 * 2524
+3 * 2524 0 2524 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2524 0x40500c 790 
* * 15144 7572 5048 1 0 0 1
+5 * 2524 2524
+3 * 2524 2524
+1 * 2524 2524

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2524 0 2524 1 0 0 1
+1 * 2524
+3 * 2524 0 2524
+4 +1 2524 2524 0 1 0 0 1
+4 * 2524 2524
+1 * 2524 2524

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 1262
+4 * 1262 1262
+1 * 1262 1262

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1271 0 1271 1 0 0 1
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 +2 1271 1271
+4 * 1271
+3 * 1271 0 1271
cfn=(102)
calls=1271 0x4048de +12 
* * 7626 2542 2542 1 0 0 1
+5 * 1271 1271
+4 * 1271 0 0 1 0 0 1
+3 * 1271
+2 * 1271 0 0 0 0 0 0 0 0 1271
jcnd=1271/1271 +7 +3 
* * 
+7 +3 1271 1271
+4 * 1271
+4 * 1271
+3 * 1271 0 1271
cob=(5)
cfi=(8)
cfn=(32)
calls=1271 0x387e4bd0b0 0 
* * 383927 54952 53854 33 29 54 33 29 54 62004 3054 1271
* * 1271 1271 0 0 0 0 0 0 0 0 0 1271
+5 +1 1271 1271
+1 * 1271 1271

fn=(18)
0x404a28 81 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262 0 1262 0 0 1 0 0 1
+4 * 1262 0 1262
+4 * 1262 1262
+1 * 1262 1262

fn=(92)
0x4049d4 81 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 1262
+1 * 1262 1262

fn=(196)
0x404520 86 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+4 * 1262 1262
+1 * 1262 1262

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1271 0 1271 1 0 0 1
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 * 1271 0 1271 1 0 0 1
+4 +2 1271 1271
+4 * 1271
+3 * 1271 0 1271
cfn=(28)
calls=1271 0x404992 +12 
* * 7626 2542 2542 1 0 0 1
+5 * 1271 1271
+4 * 1271
+3 * 1271
+2 * 1271 0 0 0 0 0 0 0 0 1271
jcnd=1271/1271 +7 +3 
* * 
+7 +3 1271 1271
+4 * 1271
+4 * 1271
+3 * 1271 0 1271
cob=(5)
cfi=(8)
cfn=(32)
calls=1271 0x387e4bd0b0 0 
* * 395217 61838 63402 22 10 16 22 10 16 63743 1324 1271
* * 1271 1271 0 1 1 0 1 1 0 0 0 1271
+5 +1 1271 1271
+1 * 1271 1271

fn=(102)
0x4048de 113 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289 0 1289
+4 +1 1289
+10 * 1289 1289
+1 * 1289 1289

fn=(266)
0x40406a 129 631 0 631
+1 * 631
+3 * 631
+4 * 631 0 631
+4 * 631 0 631
+4 * 631 0 631
+4 +1 631 631
+4 * 631
+3 * 631
+5 * 631 0 631
cfi=(16)
cfn=(226)
calls=631 0x402d61 -20 
* * 4417 1893 1893
+5 * 631
+3 * 631 0 0 0 0 0 0 0 0 631
+2 * 631 631
+4 * 631 631 0 0 40 0 0 40
+2 * 631 0 631 0 0 31 0 0 31
+2 * 631 631
+1 * 631 631

fn=(28)
0x404992 113 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289 0 1289
+4 +1 1289
+10 * 1289 1289
+1 * 1289 1289

fn=(176)
0x4044cc 86 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+4 * 1262 1262
+1 * 1262 1262

fn=(224)
0x403df2 129 631 0 631
+1 * 631
+3 * 631
+4 * 631 0 631
+4 * 631 0 631
+4 * 631 0 631
+4 +1 631 631
+4 * 631
+3 * 631
+5 * 631 0 631
cfi=(16)
cfn=(226)
calls=631 0x402d61 -20 
* * 4417 1893 1893
+5 * 631
+3 * 631 0 0 0 0 0 0 0 0 631 2
+2 * 631 631
+4 * 631 631 0 0 40 0 0 40
+2 * 631 0 631 0 0 27 0 0 27
+2 * 631 631
+1 * 631 631

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1271 0 1271
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 +1 1271 1271
+4 * 1271
+3 * 1271 0 1271
cob=(5)
cfi=(8)
cfn=(164)
calls=1271 0x387e4bb2f0 0 
* * 146346 37204 17737 23 7 0 23 7 0 36067 1025 1271
* * 1271 1271 0 1 1 0 1 1 0 0 0 1271
+5 * 1271 1271
+1 * 1271 1271

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1271 0 1271
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 +1 1271 1271
+4 * 1271
+3 * 1271 0 1271
cob=(5)
cfi=(8)
cfn=(164)
calls=1271 0x387e4bb2f0 0 
* * 162086 42687 23456 2 0 0 2 0 0 39943 216 1271
* * 1271 1271 0 0 0 0 0 0 0 0 0 1271
+5 * 1271 1271
+1 * 1271 1271

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +2 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1262 0x404484 107 
* * 881990 305736 298168 25 3 5 25 3 5 35788 1669 2520 315
+5 * 1262 1262
+1 * 1262 1262

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +2 1262 1262 0 1 0 0 1
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1262 0x404a36 450 
* * 846654 293116 285548 24 3 5 24 3 5 35788 1669 2520 315
+5 * 1262 1262
+1 * 1262 1262

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +2 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1262 0x40439c 107 
* * 881990 305736 298168 7 1 70 7 1 70 35788 1658 2520
+5 * 1262 1262
+1 * 1262 1262

fn=(116)
0x40439c 107 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +10 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1262 0x4047d7 -26 
* * 864322 299426 291858 7 1 70 7 1 70 35788 1658 2520
+5 +1 1262 1262
+1 * 1262 1262

fn=(118)
0x4047d7 91 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +2 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1262 0x4049e2 450 
* * 846654 293116 285548 7 1 70 7 1 70 35788 1658 2520
+5 * 1262 1262
+1 * 1262 1262

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 50 2 0 50 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(232)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 50 2 0 50 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 50 1 0 50 140 6 17
+5 * 18 18
+1 * 18 18

fn=(50)
0x404484 107 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +10 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(52)
calls=1262 0x404829 -26 
* * 864322 299426 291858 25 3 5 25 3 5 35788 1669 2520 315
+5 +1 1262 1262
+1 * 1262 1262

fn=(270)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 50 2 0 50 140 6 17
+5 * 18 18
+1 * 18 18

fl=(2)
fn=(4)
0x4030b2 310 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262 0 1262
+2 * 1262 0 1262
+2 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262 1 0 0 1
+4 * 1262 0 1262
+4 +2 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=1262 0x403b08 117 
* * 7572 3786 2524 1 0 1 1 0 1
+5 * 1262
+3 * 1262 0 1262
cfi=(3)
cfn=(8)
calls=1262 0x403afa -88 
* * 7572 3786 2524 1 0 0 1
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(10)
calls=1262 0x402f54 645 
* * 16406 7572 2524 1 1 0 1 1
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=1262 0x403b16 134 
* * 550697 118260 113501 31 11 11 31 11 11 65923 1293 2524
+5 +4 1262 1262 0 1 0 0 1
+4 * 1262
+3 * 1262 0 1262
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=1262 0x40333c 113 
* * 7572 3786 2524 2 0 0 2
+5 * 1262
+3 * 1262 1262
+4 * 1262 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=1262 0x403ba4 565 
* * 31550 12620 10096 3 0 0 3
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=1262 0x403b74 547 
* * 31550 12620 10096
+5 * 1262
+3 * 1262
+3 * 1262
+3 * 1262
+3 * 1262 0 1262 1 0 0 1
cfi=(11)
cfn=(48)
calls=1262 0x403bd5 -60 
* * 900920 312046 305740 26 3 5 26 3 5 35788 1669 2520 315
+5 -3 1262 1262
+4 * 1262 0 1262
+4 * 1262
jump=1262 +28 +4 
* * 
+28 +4 1262
+4 * 1262 1262
+1 * 1262 1262
+2 * 1262 1262
+2 * 1262 1262
+1 * 1262 1262

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+4 * 1262 0 1262
+4 * 1262
+4 * 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1262 0x404380 726 
* * 12620 6310 5048 1 0 0 1
+5 * 1262 1262
+4 * 1262 1262
+1 * 1262 1262

fn=(178)
0x402e74 414 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262 1 0 0 1
+4 +2 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(40)
calls=1262 0x40333c 113 
* * 7572 3786 2524
+5 * 1262
+3 * 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+3 -1 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1262 0x40334a 148 
* * 39122 12620 15144 2 0 0 2
+5 +1 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=1262 0x4032ca 159 
* * 260746 79018 52342 3 0 0 3 0 0 40966 205 2524
+5 * 1262
jump=1262 +28 * 
* * 
+28 * 1262 0 0 1 0 0 1
+4 * 1262 1262
+1 * 1262 1262
+1 * 1262 1262

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1271 0 1271 1 0 0 1
+1 * 1271 0 0 1 0 0 1
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 0 1271 1271
+5 0 1271 0 0 0 0 0 0 0 0 1271
+2 0 1271 1271
+4 0 1271 1271
+4 0 1271
+5 0 1271
+3 0 1271
+3 0 1271 0 1271
fi=(6) ???
cfi=(5)
cfn=(100)
calls=1271 0x40461a 99 
* 0 416973 65120 64022 36 29 54 36 29 54 63275 3054 2542
+5 0 1271
fi=(6)
jump=1271 +7 0 
* 0 
+7 0 1271 1271
+1 0 1271 1271

fn=(144)
0x402d9a 770 601343 0 601343
+1 * 601343
+3 * 601343 0 601343
+4 * 601343 0 601343
+4 +1 601343 601343
+4 * 601343 601343
+3 * 601343 601343
+4 * 601343
+4 * 601343
+3 * 601343 601343
+1 * 601343 601343

fn=(146)
0x402dba 770 601343 0 601343
+1 * 601343
+3 * 601343 0 601343 1 0 0 1
+4 * 601343 0 601343
+4 +1 601343 601343
+4 * 601343 601343
+3 * 601343 601343
+4 * 601343
+4 * 601343
+3 * 601343 601343
+1 * 601343 601343

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfi=(4)
cfn=(194)
calls=1262 0x403d7e +42 
* * 17668 6310 6310 1 0 0 1
+5 * 1262 1262
+1 * 1262 1262

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(186)
0x4032ca 159 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262
+4 +2 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262 1262
+4 * 1262 1262
+3 * 1262
+3 * 1262
+3 * 1262
+4 * 1262
+3 * 1262 1262
+4 * 1262 1262
+3 -1 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1262 0x403d98 +11 
* * 196384 55040 35936 1 0 0 1 0 0 40966 205 2524
+5 +1 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(192)
calls=1262 0x403296 -82 
* * 29026 10096 10096 1 0 0 1
+5 * 1262
jump=1262 +28 * 
* * 
+28 * 1262
+4 * 1262 1262
+1 * 1262 1262
+1 * 1262 1262

fn=(2)
0x402d74 645 5084 0 5084 1 0 0 1
+1 * 5084
+3 * 5084 0 5084 0 0 1 0 0 1
+4 +1 5084 5084
+4 * 5084 5084 0 1 1 0 1 1
+4 * 5084
+3 * 5084 5084
+4 * 5084 5084
+3 * 5084
+3 * 5084
+3 * 5084
+4 * 5084 5084
+1 * 5084 5084

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +2 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1262 0x404236 -14 
* * 445951 77876 78165 25 11 7 25 11 7 65923 1293 2524
+5 * 1262 1262
+4 * 1262 0 1262
+3 +1 1262 1262
+4 * 1262 1262 0 1 0 0 1
+3 * 1262 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+3 * 1262 1262
+4 * 1262
+4 * 1262
+3 * 1262 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+1 * 1262 1262

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +2 1262 1262
+4 * 1262 1262 0 1 0 0 1
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(96)
calls=1262 0x403fbe -14 
* * 433572 70738 68403 23 26 45 23 26 45 63963 2994 2524
+5 * 1262 1262
+4 * 1262 0 1262
+3 +1 1262 1262
+4 * 1262 1262
+3 * 1262 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+3 * 1262 1262
+4 * 1262
+4 * 1262
+3 * 1262 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+1 * 1262 1262

fn=(244)
0x402f7a 901 631 0 631
+1 * 631
+3 * 631 0 0 1 0 0 1
+4 * 631 0 631
+4 * 631 0 631
+4 +2 631 631
+4 * 631 631
+4 * 631 631
+4 * 631 631
+4 * 631
+3 * 631 0 0 0 0 0 0 0 0 631
jcnd=9/631 +51 +10 
* * 
+2 +3 622 622
+4 * 622 622
+4 * 622 622
+4 -1 622 622
+4 * 622
+3 * 622
+3 * 622 0 622
cfi=(3)
cfn=(264)
calls=622 0x4036b1 215 
* * 23636 8086 8708 0 33 26 0 33 26 622
+5 +2 622 622
+4 * 622 622
+4 * 622
+4 * 622 622
+4 * 622 0 622
+4 * 622
jump=622 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 13922 4382 3846 23 7 64 23 7 64 804 57 53
+5 +2 631 631
+1 * 631 631

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40)
0x40333c 113 2551 0 2551 1 0 0 1
+1 * 2551
+3 * 2551 0 2551 1 0 0 1
+4 +1 2551 2551
+4 * 2551 2551
+1 * 2551 2551

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+3 * 1262 0 1262
+4 * 1262
+4 * 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(10)
cfn=(110)
calls=1262 0x404380 726 
* * 12620 6310 5048
+5 * 1262 1262
+4 * 1262 1262
+1 * 1262 1262

fn=(148)
0x402df4 414 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262 1 0 0 1
+4 +2 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1262 0x40325e 113 
* * 7572 3786 2524
+5 * 1262
+3 * 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+3 -1 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1262 0x40326c 148 
* * 39122 12620 15144 4 0 0 4
+5 +1 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1262 0x4031ec 159 
* * 245074 73566 46634 28 8 0 28 8 0 37106 1021 2524
+5 * 1262
jump=1262 +28 * 
* * 
+28 * 1262 0 0 1 0 0 1
+4 * 1262 1262
+1 * 1262 1262
+1 * 1262 1262

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1271 0 1271 1 0 0 1
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 +2 1271 1271
+5 * 1271 0 0 0 0 0 0 0 0 1271
+2 +1 1271 1271
+4 * 1271 1271
+4 * 1271 1271
+4 * 1271
+3 * 1271
+3 * 1271 0 1271
cfi=(5)
cfn=(160)
calls=1271 0x4044d6 -65 
* * 161598 42288 24092 24 8 0 24 8 0 36067 1025 2542
+5 +1 1271 1271
+1 * 1271 1271

fn=(12)
0x403b16 134 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1262 0x4043ca -45 
* * 45432 16406 17668 4 0 4 4 0 4
+5 +1 1262 1262 0 1 0 0 1
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(20)
calls=1262 0x404412 +43 
* * 477501 93020 86999 26 11 7 26 11 7 65923 1293 2524
+5 * 1262
jump=1262 +28 * 
* * 
+28 * 1262
+4 * 1262 1262
+1 * 1262 1262
+1 * 1262 1262

fn=(14)
0x4043ca 90 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262
+4 * 1262 0 1262 0 0 1 0 0 1
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(4)
cfn=(16)
calls=1262 0x404804 +24 
* * 22716 7572 8834 2 0 1 2 0 1
+5 * 1262 1262
+4 * 1262 0 1262 0 0 2 0 0 2
+7 * 1262 1262
+4 * 1262 0 1262 1 0 0 1
+8 * 1262 1262
+4 * 1262 0 1262
+8 +1 1262 1262
+1 * 1262 1262

fn=(80)
0x402ff4 310 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262 0 1262
+2 * 1262 0 1262
+2 * 1262 0 1262
+1 * 1262 0 0 1 0 0 1
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +2 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(82)
calls=1262 0x4039fc 117 
* * 7572 3786 2524 2 0 0 2
+5 * 1262
+3 * 1262 0 1262
cfi=(3)
cfn=(84)
calls=1262 0x4039ed -88 
* * 7572 3786 2524
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(2)
calls=1262 0x402d74 645 
* * 16406 7572 2524
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262
+3 * 1262 0 1262 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1262 0x403a0a 134 
* * 538318 111122 103739 30 26 45 30 26 45 63963 2994 2524
+5 +4 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(106)
calls=1262 0x40325e 113 
* * 7572 3786 2524 1 0 0 1
+5 * 1262
+3 * 1262 1262
+4 * 1262 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(108)
calls=1262 0x403a98 565 
* * 31550 12620 10096 2 0 0 2
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(112)
calls=1262 0x403a68 547 
* * 31550 12620 10096
+5 * 1262
+3 * 1262
+3 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(11)
cfn=(114)
calls=1262 0x403ac9 -60 
* * 900920 312046 305740 7 1 70 7 1 70 35788 1658 2520
+5 -3 1262 1262
+4 * 1262 0 1262
+4 * 1262
jump=1262 +28 +4 
* * 
+28 +4 1262
+4 * 1262 1262
+1 * 1262 1262
+2 * 1262 1262
+2 * 1262 1262
+1 * 1262 1262

fn=(188)
0x403d98 171 1271 0 1271 1 0 0 1
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 +2 1271 1271
+5 * 1271 0 0 0 0 0 0 0 0 1271 9
+2 +1 1271 1271
+4 * 1271 1271
+4 * 1271 1271
+4 * 1271
+3 * 1271
+3 * 1271 0 1271
cfi=(5)
cfn=(190)
calls=1271 0x40452a -65 
* * 177338 47771 29811 2 0 0 2 0 0 39943 216 2542
+5 +1 1271 1271
+1 * 1271 1271

fn=(22)
0x404236 167 1271 0 1271 1 0 0 1
+1 * 1271
+3 * 1271
+4 * 1271 0 1271 1 0 0 1
+4 * 1271 0 1271
+4 0 1271 1271
+5 0 1271 0 0 0 0 0 0 0 0 1271
+2 0 1271 1271
+4 0 1271 1271
+4 0 1271
+5 0 1271
+3 0 1271
+3 0 1271 0 1271
fi=(6)
cfi=(5)
cfn=(26)
calls=1271 0x404730 99 
* 0 428263 72006 73570 26 11 16 26 11 16 65014 1324 2542
+5 0 1271
fi=(6)
jump=1271 +7 0 
* 0 
+7 0 1271 1271
+1 0 1271 1271

fn=(42)
0x403ba4 565 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+4 * 1262 0 1262
+4 * 1262
+4 * 1262 0 0 1 0 0 1
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1262 0x404468 726 
* * 12620 6310 5048 1 0 0 1
+5 * 1262 1262
+4 * 1262 1262
+1 * 1262 1262

fn=(46)
0x403b74 547 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+3 * 1262 0 1262
+4 * 1262
+4 * 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfi=(10)
cfn=(44)
calls=1262 0x404468 726 
* * 12620 6310 5048
+5 * 1262 1262
+4 * 1262 1262
+1 * 1262 1262

fn=(86)
0x403a0a 134 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1262 0x4042e2 -45 
* * 45432 16406 17668 5 0 0 5
+5 +1 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262 1 0 0 1
cfn=(94)
calls=1262 0x40432a +43 
* * 465122 85882 77237 24 26 45 24 26 45 63963 2994 2524
+5 * 1262
jump=1262 +28 * 
* * 
+28 * 1262
+4 * 1262 1262
+1 * 1262 1262
+1 * 1262 1262

fn=(88)
0x4042e2 90 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +1 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262 1 0 0 1
cfi=(4)
cfn=(90)
calls=1262 0x4047b2 +24 
* * 22716 7572 8834 3 0 0 3
+5 * 1262 1262
+4 * 1262 0 1262
+7 * 1262 1262
+4 * 1262 0 1262
+8 * 1262 1262
+4 * 1262 0 1262
+8 +1 1262 1262
+1 * 1262 1262

fn=(156)
0x4031ec 159 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262
+4 +2 1262 1262
+4 * 1262 1262 0 1 0 0 1
+4 * 1262
+3 * 1262 1262
+4 * 1262 1262
+3 * 1262
+3 * 1262
+3 * 1262
+4 * 1262
+3 * 1262 1262
+4 * 1262 1262
+3 -1 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(158)
calls=1262 0x403ce6 +11 
* * 180712 49588 30228 25 8 0 25 8 0 37106 1021 2524
+5 +1 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1262 0x4031b8 -82 
* * 29026 10096 10096 1 0 0 1
+5 * 1262
jump=1262 +28 * 
* * 
+28 * 1262
+4 * 1262 1262
+1 * 1262 1262
+1 * 1262 1262

fn=(172)
0x4031b8 79 1262 0 1262 1 0 0 1
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfi=(4)
cfn=(174)
calls=1262 0x403ccc +42 
* * 17668 6310 6310
+5 * 1262 1262
+1 * 1262 1262

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246)
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(10)
0x402f54 645 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560 0 2560
+4 +1 2560 2560
+4 * 2560 2560 0 0 2 0 0 2
+4 * 2560
+3 * 2560 2560
+4 * 2560 2560
+3 * 2560
+3 * 2560
+3 * 2560
+4 * 2560 2560
+1 * 2560 2560

fn=(106)
0x40325e 113 2551 0 2551 1 0 0 1
+1 * 2551
+3 * 2551 0 2551
+4 +1 2551 2551
+4 * 2551 2551
+1 * 2551 2551

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6)
0x403b08 117 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280 0 0 1 0 0 1
+4 +1 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(82)
0x4039fc 117 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280 1 0 0 1
+4 +1 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(200)
0x402eda 901 631 0 631
+1 * 631
+3 * 631
+4 * 631 0 631
+4 * 631 0 631
+4 +2 631 631
+4 * 631 631
+4 * 631 631
+4 * 631 631
+4 * 631
+3 * 631 0 0 0 0 0 0 0 0 631 9
jcnd=9/631 +51 +10 
* * 
+2 +3 622 622
+4 * 622 622
+4 * 622 622
+4 -1 622 622
+4 * 622
+3 * 622
+3 * 622 0 622
cfi=(3)
cfn=(222)
calls=622 0x403373 215 
* * 23636 8086 8708 0 39 26 0 39 26 622 2
+5 +2 622 622
+4 * 622 622
+4 * 622
+4 * 622 622
+4 * 622 0 622
+4 * 622
jump=622 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202)
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 14943 4603 4049 37 4 13 37 4 13 1009 72 53
+5 +2 631 631
+1 * 631 631

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 1316 0 1316 1 0 0 1
+1 * 1316
+3 * 1316
+4 * 1316 0 1316
+4 +1 1316 1316
+4 * 1316
+3 * 1316 0 1316 1 0 0 1
cfi=(13)
cfn=(64)
calls=1316 -33 -66 
* * 7896 3948 2632
+5 * 1316 1316
+1 * 1316 1316

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 2524 0 2524
+1 * 2524
+3 * 2524
+4 * 2524 0 2524
+4 +1 2524 2524
+4 * 2524
+3 * 2524 0 2524
cfi=(13)
cfn=(68)
calls=2524 0x404f1a -58 
* * 40384 15144 12620 2 0 1 2 0 1
+5 * 2524 2524
+1 * 2524 2524

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 50 0 0 50 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +10 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1262 0x404bc6 288 
* * 18930 7572 6310 3 0 0 3
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(122)
calls=1262 0x404bc6 288 
* * 18930 7572 6310
+5 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1262 0x404be0 -36 
* * 781030 270400 262832 4 1 70 4 1 70 35788 1658 2520
+5 +1 1262
+4 * 1262 1262
+1 * 1262 1262
+1 * 1262 1262

fn=(128)
0x404878 277 1316 0 1316
+1 * 1316
+3 * 1316
+4 * 1316 0 1316 1 0 0 1
+4 +1 1316 1316
+4 * 1316
+3 * 1316 0 1316
cfi=(13)
cfn=(130)
calls=1316 -33 -66 
* * 7896 3948 2632 0 0 1 0 0 1
+5 * 1316 1316
+1 * 1316 1316

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 2524 0 2524
+1 * 2524
+3 * 2524
+4 * 2524 0 2524
+4 +1 2524 2524
+4 * 2524
+3 * 2524 0 2524
cfi=(13)
cfn=(134)
calls=2524 0x404e98 -58 
* * 40384 15144 12620 2 0 0 2
+5 * 2524 2524
+1 * 2524 2524

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +8 1262 0 1262
+4 +3 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1262 0x404eb5 -22 
* * 644734 224968 216138 1 1 70 1 1 70 35788 1658 2520
+5 +1 1262 1262
+1 * 1262 1262

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 50 1 0 50 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 2524 0 2524 1 0 0 1
+1 * 2524
+3 * 2524
+4 * 2524 0 2524
+4 +1 2524 2524
+4 * 2524
+3 * 2524 0 2524
cfi=(13)
cfn=(124)
calls=2524 0x404d36 -77 
* * 15144 7572 5048 2 0 0 2
+5 * 2524 2524
+1 * 2524 2524

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 2524 0 2524 1 0 0 1
+1 * 2524
+3 * 2524
+4 * 2524 0 2524 1 0 0 1
+4 +1 2524 2524
+4 * 2524
+3 * 2524 0 2524
cfi=(13)
cfn=(58)
calls=2524 0x404d8f -77 
* * 15144 7572 5048 1 0 0 1
+5 * 2524 2524
+1 * 2524 2524

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280 1 0 0 1
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+5 * 1280 0 0 0 0 0 0 0 0 1280
jcnd=9/1280 +33 +2 
* * 
+2 +1 1271 1271
+4 * 1271
+8 * 1271 1271
+4 * 1271 1271
+4 * 1271
+3 * 1271 0 0 1 0 0 1
+3 * 1271 0 1271 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1271 0x3877c83840 0 
* * 611246 211665 209128 11 2 53 11 2 53 34648 1675 1266 315
* * 1271 1271 0 1 1 0 1 1 0 0 0 1271
+5 +1 1280 1280
+4 * 1280
+8 * 1280 1280
+4 * 1280
+3 +1 1280 1280
+1 * 1280 1280

fn=(140)
0x404eb5 368 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280 1 0 0 1
+4 * 1280 0 1280
+4 * 1280 0 1280 0 0 1 0 0 1
+4 +2 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+5 * 1280 0 0 0 0 0 0 0 0 1280
jcnd=9/1280 +33 +2 
* * 
+2 +1 1271 1271
+4 * 1271
+8 * 1271 1271
+4 * 1271 1271
+4 * 1271
+3 * 1271
+3 * 1271 0 1271
cob=(2)
cfi=(9)
cfn=(78)
calls=1271 0x3877c83840 0 
* * 611246 211665 209128 0 1 71 0 1 71 34648 1666 1266
* * 1271 1271 0 0 0 0 0 0 0 0 0 1271
+5 +1 1280 1280
+4 * 1280
+8 * 1280 1280
+4 * 1280
+3 +1 1280 1280
+1 * 1280 1280

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1262 0 1262
+1 * 1262
+3 * 1262
+4 * 1262 0 1262 1 0 0 1
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +8 1262 0 1262
+4 +3 1262 1262
+4 * 1262 1262
+4 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(74)
calls=1262 0x404f37 -22 
* * 644734 224968 216138 14 3 4 14 3 4 35788 1669 2520 315
+5 +1 1262 1262
+1 * 1262 1262

fn=(126)
0x404be0 424 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+2 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +4 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(128)
calls=1262 0x404878 277 
* * 18930 7572 6310 1 0 0 1
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(132)
calls=1262 0x404d44 277 
* * 31550 11358 10096 2 0 0 2
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(132)
calls=1262 0x404d44 277 
* * 31550 11358 10096
+5 * 1262
+3 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(138)
calls=1262 0x404d5e -49 
* * 663664 231278 223710 1 1 70 1 1 70 35788 1658 2520
+5 +1 1262
+4 * 1262 1262
+1 * 1262 1262
+2 * 1262 1262
+1 * 1262 1262

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(54)
0x404a36 450 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262 1 0 0 1
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +10 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(56)
calls=1262 0x404c38 288 
* * 18930 7572 6310 3 0 0 3
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(56)
calls=1262 0x404c38 288 
* * 18930 7572 6310
+5 * 1262 1262
+4 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1262 0x404c52 -36 
* * 781030 270400 262832 20 3 5 20 3 5 35788 1669 2520 315
+5 +1 1262
+4 * 1262 1262
+1 * 1262 1262
+1 * 1262 1262

fn=(60)
0x404c52 424 1262 0 1262
+1 * 1262
+3 * 1262 0 1262
+2 * 1262 0 1262
+1 * 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 * 1262 0 1262
+4 +4 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(62)
calls=1262 0x40492d 277 
* * 18930 7572 6310 2 0 0 2
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262 1 0 0 1
cfn=(66)
calls=1262 0x404d9d 277 
* * 31550 11358 10096 2 0 1 2 0 1
+5 * 1262
+3 * 1262 1262
+4 * 1262
+3 * 1262 0 1262
cfn=(66)
calls=1262 0x404d9d 277 
* * 31550 11358 10096
+5 * 1262
+3 * 1262
+3 * 1262
+3 * 1262 0 1262
cfn=(72)
calls=1262 0x404db7 -49 
* * 663664 231278 223710 15 3 4 15 3 4 35788 1669 2520 315
+5 +1 1262
+4 * 1262 1262
+1 * 1262 1262
+2 * 1262 1262
+1 * 1262 1262

fn=(282)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 50 0 0 50 140 6 17
+5 +1 18 18
+1 * 18 18

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 2524 0 2524 1 0 0 1
+1 * 2524
+3 * 2524 0 2524
+4 +1 2524 2524
+4 * 2524 2524
+1 * 2524 2524

fn=(110)
0x404380 726 2524 0 2524 1 0 0 1
+1 * 2524
+3 * 2524 0 2524
+4 * 2524 0 2524
+4 * 2524 2524
+4 * 2524 2524
+3 * 2524 2524
+4 * 2524 0 2524
+3 * 2524 2524
+1 * 2524 2524

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 2524 0 2524 1 0 0 1
+1 * 2524
+3 * 2524 0 2524
+4 +1 2524 2524
+4 * 2524 2524
+1 * 2524 2524

fn=(44)
0x404468 726 2524 0 2524
+1 * 2524
+3 * 2524 0 2524
+4 * 2524 0 2524
+4 * 2524 2524
+4 * 2524 2524
+3 * 2524 2524
+4 * 2524 0 2524 1 0 0 1
+3 * 2524 2524
+1 * 2524 2524

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 1271 0 1271 1 0 0 1
+1 * 1271
+3 * 1271 0 1271
+4 * 1271 0 1271
+4 * 1271 1271
+1 * 1271 1271

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1271 0 1271 1 0 0 1
+1 * 1271
+3 * 1271 0 1271
+4 * 1271 0 1271 1 0 0 1
+4 * 1271 1271
+1 * 1271 1271

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1271 0 1271 1 0 0 1
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 +4 1271 1271
+4 * 1271 1271
+4 * 1271
+3 * 1271
+3 * 1271 0 1271
cfn=(184)
calls=1271 0x40454c -14 
* * 7626 2542 3813 1 0 0 1
+5 +2 1271 1271
+1 * 1271 1271

fn=(150)
0x40326c 148 1271 0 1271
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 +3 1271 1271 0 1 0 0 1
+4 * 1271 1271
+4 * 1271
+3 * 1271
+3 * 1271 0 1271
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1271 0x403d1a -29 
* * 22878 7626 8897 3 0 0 3
+5 +1 1271 1271
+1 * 1271 1271

fn=(180)
0x40334a 148 1271 0 1271
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 +3 1271 1271
+4 * 1271 1271
+4 * 1271
+3 * 1271
+3 * 1271 0 1271
cfn=(182)
calls=1271 0x403dcc -29 
* * 22878 7626 8897 2 0 0 2
+5 +1 1271 1271
+1 * 1271 1271

fn=(152)
0x403d1a 122 1271 0 1271 1 0 0 1
+1 * 1271
+3 * 1271
+4 * 1271 0 1271
+4 * 1271 0 1271
+4 +4 1271 1271
+4 * 1271 1271
+4 * 1271
+3 * 1271
+3 * 1271 0 1271
cfn=(154)
calls=1271 0x4044f8 -14 
* * 7626 2542 3813 2 0 0 2
+5 +2 1271 1271
+1 * 1271 1271

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 2648 485 489 3 0 9 3 0 9 362 31 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 7 5 0 7 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 50 3 0 50 131 6 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1290 357 230 2 0 0 2 0 0 248 20 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 3737 737 703 15 3 9 15 3 9 583 60 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 8 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1222 326 219 0 0 0 0 0 0 232 4 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 2403 2403 0 1 0 0 1
+6 0 2403
+2 0 2403 0 0 0 0 0 0 0 0 2403 2
+2 0 2403 2403

fn=(38) _int_malloc
0x3877c79a00 0 2542 0 2542 1 0 0 1
+2 0 2542
+3 0 2542 0 2542
+2 0 2542 0 2542
+2 0 2542 0 2542 0 0 1 0 0 1
+2 0 2542
+3 0 2542 0 2542
+1 0 2542 0 2542
+1 0 2542
+4 0 2542
+4 0 2542 0 0 0 0 0 0 0 0 2542
+6 0 2542
+4 0 2542
+6 0 2542
+3 0 2542
+4 0 2542
+4 0 2542
+4 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542
+6 0 2542 2542 0 1 1 0 1 1
+7 0 2542 0 0 0 0 0 0 0 0 2542 7
jcnd=2420/2542 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 40
jcnd=24/122 0x3877c79af8 0 
* 0 
+6 0 98
+4 0 98 98 0 0 1 0 0 1
+4 0 98
+3 0 98
+4 0 98 98 0 0 1 0 0 1
+9 0 98 0 0 0 0 0 0 0 0 98 2
jcnd=98/98 +3 0 
* 0 
+3 0 98 0 98 1 0 0 1
+5 0 98
+3 0 98
+3 0 98 0 0 0 0 0 0 0 0 98
+2 0 98
jump=98 0x3877c7a2db 0 
* 0 
+46 0 98 98
+4 0 98 0 0 1 0 0 1
+3 0 98
+3 0 98
+2 0 98 0 0 0 0 0 0 0 0 98
+6 0 139 139
+6 0 139
+4 0 139
+2 0 139 0 0 0 0 0 0 0 0 139
+6 0 139
+3 0 139
+4 0 139 139
+1 0 139 139
+1 0 139 139
+2 0 139 139
+2 0 139 139
+2 0 139 139
+2 0 139 139
-14 0 2403
+4 0 2403 2403
+1 0 2403 2403
+1 0 2403 2403
+2 0 2403 2403
+2 0 2403 2403
+2 0 2403 2403
+2 0 2403 2403
+7 0 2444
+7 0 2444 0 0 1 0 0 1 0 0 2444 7
jcnd=1534/2444 0x3877c79b70 0 
* 0 
+2 0 910
+3 0 910
+5 0 910
+3 0 910
+4 0 910 0 910
+4 0 910
+2 0 910
+5 0 910 910 0 0 1 0 0 1
+4 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 1
jcnd=909/910 0x3877c79bc2 0 
* 0 
+6 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 0 1 1 0 0 1
+4 0 1 0 1
+4 0 1
+7 0 1 0 1
+6 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c79ace 0 
* 0 
+25 0 1534
+3 0 1534
+4 0 1534
+4 0 1534 0 0 1 0 0 1 0 0 1534 3
jcnd=1532/1534 0x3877c7a1a4 0 
* 0 
+6 0 2
+3 0 2
+4 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2
+3 0 2 0 2
+4 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +30 0 
* 0 
-11 0 1532 1532
+6 0 1532
+5 0 1532 0 0 0 0 0 0 0 0 1532 1
jcnd=1531/1532 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 860 230 181 8 1 0 8 1 0 178 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 2442 0 0 1 0 0 1
+3 0 2442
+3 0 2442
+3 0 2442
+4 0 2442
+3 0 2442
+4 0 2442 0 2442
+5 0 2442
+3 0 2442 0 2442
+4 0 2442 0 2442
+4 0 2442 0 2442
+5 0 2442
+3 0 2442
+3 0 2442
+3 0 2442
+3 0 2442
+4 0 2442
+4 0 2442 0 0 1 0 0 1
+4 0 2442 0 2442
+4 0 2442
+4 0 2442 0 2442
+5 0 2442 0 2442
+5 0 2442
+3 0 2442
+3 0 2442 0 2442
+5 0 2442
+5 0 2442
+3 0 2442 0 2442
+4 0 2442 0 2442
+4 0 2442
+6 0 2442 0 2442
+4 0 2442 0 2442
+5 0 2442 0 0 1 0 0 1
+3 0 2442
+3 0 2442
+3 0 2442
jump=2442 +87 0 
* 0 
+8 0 1251
+3 0 1251
+4 0 1251
+2 0 1251
+2 0 1251
+3 0 1251
+3 0 1251
+3 0 1251
+2 0 1251
+2 0 1251
+5 0 1251
+2 0 1251 1251
+4 0 1251
+3 0 1251
+4 0 1251 0 1251
+4 0 1251 0 1251
+8 0 1251
+7 0 1251 0 1251
+4 0 1251 0 1251
+4 0 1251 0 1251
+4 0 1251 0 0 0 0 0 0 0 0 1251
-38 0 1469
+3 0 1469
+4 0 1469 0 1469
+4 0 1469 0 1469
+8 0 1469
+7 0 1469 0 1469
+4 0 1469 0 1469 0 0 2 0 0 2
+4 0 1469 0 1469
+4 0 1469 0 0 0 0 0 0 0 0 1469
+6 0 5163 5163 0 1 0 0 1
+4 0 5163
+3 0 5163 0 0 0 0 0 0 0 0 5163 150
jcnd=2328/5163 0x3877c79ef0 0 
* 0 
+6 0 2835 2835
+4 0 2835 2835
+4 0 2835
+4 0 2835 0 0 0 0 0 0 0 0 2835
+6 0 2835 2835 0 1 0 0 1
+7 0 2835 0 0 0 0 0 0 0 0 2835 2
+6 0 2835
+4 0 2835
+7 0 2835 0 0 0 0 0 0 0 0 2835 6
jcnd=1756/2835 +11 0 
* 0 
+2 0 1079
+3 0 1079 0 0 0 0 0 0 0 0 1079 172
jcnd=880/1079 0x3877c79e28 0 
* 0 
+6 0 2760
+3 0 2760 0 2760
+4 0 2760 0 2760
+5 0 2760 0 0 0 0 0 0 0 0 2760 26
jcnd=40/2760 0x3877c7a090 0 
* 0 
+6 0 2720
+7 0 2720 0 0 0 0 0 0 0 0 2720 594
jcnd=1251/2720 0x3877c79c50 0 
* 0 
+6 0 1469 0 0 1 0 0 1
+3 0 1469
+4 0 1469
+4 0 1469 0 0 0 0 0 0 0 0 1469 79
jcnd=240/1469 0x3877c79db0 0 
* 0 
+6 0 1229
+3 0 1229
+4 0 1229
+2 0 1229
+2 0 1229
+3 0 1229
+3 0 1229
+8 0 1229
+3 0 1229
+2 0 1229
+2 0 1229
+4 0 1229 1229
+4 0 1229
+3 0 1229 0 0 1 0 0 1 0 0 1229 89
jcnd=1213/1229 0x3877c79e15 0 
* 0 
-36 0 240
+2 0 240
+2 0 240
+3 0 240
+3 0 240
+8 0 240
+3 0 240
+2 0 240
+2 0 240
+4 0 240 240
+4 0 240
+3 0 240 0 0 0 0 0 0 0 0 240
jcnd=240/240 0x3877c79e15 0 
* 0 
+6 0 16 16
+4 0 16
+4 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
jump=16 0x3877c79c73 0 
* 0 
+73 0 240 0 0 1 0 0 1
+3 0 240
+4 0 240
+4 0 240 0 0 0 0 0 0 0 0 240
+2 0 240
+3 0 240 0 0 1 0 0 1
+7 0 240
jump=240 0x3877c79d18 0 
* 0 
+78 0 1453 0 1453
+4 0 1453 0 1453
+4 0 1453
+3 0 1453
jump=1453 0x3877c79c73 0 
* 0 
+8 0 880 880 0 1 0 0 1
+4 0 880
+3 0 880 0 0 0 0 0 0 0 0 880 244
jcnd=443/880 0x3877c79ce1 0 
* 0 
+6 0 437 437
+5 0 437 0 0 0 0 0 0 0 0 437 9
jcnd=362/437 0x3877c79ce1 0 
* 0 
+6 0 75 0 0 1 0 0 1
+3 0 75
+3 0 75
+3 0 75
+7 0 75 0 75
+4 0 75 0 75
+4 0 75
+3 0 75 0 75
+4 0 75 0 75 0 0 17 0 0 17
+4 0 75 0 75
+4 0 75 0 0 0 0 0 0 0 0 75 1
jcnd=74/75 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+7 0 1 0 1
+4 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1
+3 0 1 0 1
cfn=(104)
calls=1 0x3877c77180 0 
* 0 4 2 0 0 0 0 0 0 0 1
-56 0 74
+7 0 74 0 74 1 0 0 1
+4 0 74
+3 0 74
+3 0 74
+3 0 74
+4 0 74
+3 0 74
+4 0 74
+3 0 74
+3 0 74
+4 0 74 0 74
+4 0 74 0 74 0 0 1 0 0 1
+4 0 74
+4 0 74
+3 0 74 0 74
cfn=(104)
calls=74 0x3877c77180 0 
* 0 296 148 0 0 0 0 0 0 0 74
+5 0 75
+3 0 75
jump=75 0x3877c79ae3 0 
* 0 
+55 0 2328 0 0 1 0 0 1
+7 0 2328
+3 0 2328 0 0 0 0 0 0 0 0 2328 6
jcnd=1518/2328 0x3877c7a0b0 0 
* 0 
+6 0 2295 2295 0 1 0 0 1
+4 0 2295
+3 0 2295
+3 0 2295
+2 0 2295
+4 0 2295
+3 0 2295
+3 0 2295
+2 0 2295
+2 0 2295
+2 0 2295
+2 0 2295 2295 0 0 1 0 0 1
+8 0 2295
+5 0 2295
+5 0 2295
+2 0 2295 0 0 0 0 0 0 0 0 2295
-2 0 1150
+2 0 1150 0 0 0 0 0 0 0 0 1150 2
jcnd=2/1150 +14 0 
* 0 
+2 0 3443
+2 0 3443 0 0 0 0 0 0 0 0 3443 74
jcnd=1770/3443 +64 0 
* 0 
+2 0 1673
+8 0 1673
+3 0 1673
+3 0 1673 0 0 0 0 0 0 0 0 1673 6
jcnd=79/1673 0x3877c79fc0 0 
* 0 
-6 0 677
+3 0 677
+3 0 677 0 0 0 0 0 0 0 0 677 4
jcnd=609/677 0x3877c79fc0 0 
* 0 
+2 0 1662
+2 0 1662 1662
+8 0 1662
+2 0 1662 0 0 0 0 0 0 0 0 1662 22
jcnd=675/1662 -20 0 
* 0 
+2 0 987
+2 0 987
+5 0 987
+3 0 987
+3 0 987
+2 0 987
+2 0 987
+5 0 987 0 0 0 0 0 0 0 0 987 1
jcnd=3/987 +14 0 
* 0 
+2 0 984
+2 0 984
+4 0 984
+2 0 984
+2 0 984 0 0 0 0 0 0 0 0 984
jcnd=984/984 -8 0 
* 0 
-8 0 16947
+4 0 16947
+2 0 16947
+2 0 16947 0 0 0 0 0 0 0 0 16947 1117
jcnd=14419/16947 -8 0 
* 0 
-2 0 1770 0 0 1 0 0 1
+2 0 1770 0 0 0 0 0 0 0 0 1770 34
jcnd=1544/1770 -8 0 
* 0 
+2 0 2757 2757 0 0 20 0 0 20
+4 0 2757 0 0 1 0 0 1
+3 0 2757 0 0 0 0 0 0 0 0 2757 1284
jcnd=1607/2757 0x3877c7a1cf 0 
* 0 
+6 0 1150
+2 0 1150
+4 0 1150
+2 0 1150
+2 0 1150
+2 0 1150 0 1150
+8 0 1150
jump=1150 0x3877c79f30 0 
* 0 
+37 0 688 688 0 1 0 0 1
+5 0 688 688
+4 0 688
+4 0 688 688
+5 0 688 0 0 0 0 0 0 0 0 688
jcnd=688/688 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 40 0 0 1 0 0 1
+7 0 40 0 40
+6 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c79ace 0 
* 0 
+16 0 1518 1518
+4 0 1518
+4 0 1518
+2 0 1518
+5 0 1518 1518 0 1 1 0 1 1
+4 0 1518
+3 0 1518 0 0 0 0 0 0 0 0 1518 13
jcnd=1453/1518 0x3877c79f00 0 
* 0 
+6 0 65 65
+4 0 65 0 0 0 0 0 0 0 0 65 4
jcnd=32/65 0x3877c79f00 0 
* 0 
+6 0 33
+3 0 33 33
+4 0 33 33
+4 0 33
+3 0 33
+4 0 33
+3 0 33 0 0 0 0 0 0 0 0 33
+2 0 33 33
+4 0 33
+3 0 33 0 0 0 0 0 0 0 0 33
jcnd=33/33 0x3877c7a650 0 
* 0 
+26 0 33 0 0 1 0 0 1
+3 0 33 33
+4 0 33
+3 0 33 33
+4 0 33 0 0 0 0 0 0 0 0 33
+6 0 33 33
+4 0 33 0 0 0 0 0 0 0 0 33 2
+6 0 33 33
+8 0 33 0 33
+4 0 33 0 33
+4 0 33 0 0 0 0 0 0 0 0 33
+2 0 33 33 0 1 0 0 1
+4 0 33
+3 0 33 0 0 0 0 0 0 0 0 33 27
jcnd=33/33 0x3877c7a659 0 
* 0 
+6 0 33
+4 0 33 0 0 0 0 0 0 0 0 33 4
jcnd=16/33 0x3877c7a2e3 0 
* 0 
+6 0 17 17
+4 0 17
+7 0 17 17
+4 0 17 0 0 0 0 0 0 0 0 17
+6 0 17
+4 0 17
+7 0 17 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17 0 0 0 0 0 0 0 0 17
jcnd=17/17 0x3877c7a285 0 
* 0 
+31 0 1532 0 0 1 0 0 1
+3 0 1532 0 1532
+4 0 1532
jump=1532 0x3877c79b99 0 
* 0 
+36 0 1607 1607 0 1 2 0 1 2
+4 0 1607 1607 0 0 1 0 0 1
+4 0 1607
+3 0 1607 1607
+4 0 1607
+4 0 1607
+3 0 1607
+3 0 1607 1607
+4 0 1607 0 0 0 0 0 0 0 0 1607
+6 0 1607 1607
+4 0 1607 0 0 0 0 0 0 0 0 1607
+6 0 1607 1607 0 1 0 0 1
+8 0 1607 0 1607
+4 0 1607 0 1607
+4 0 1607 0 0 0 0 0 0 0 0 1607 62
jcnd=329/1607 +38 0 
* 0 
+2 0 1278 1278 0 0 1 0 0 1
+4 0 1278
+3 0 1278 0 0 0 0 0 0 0 0 1278
+2 0 1278 1278
+5 0 1278 0 0 0 0 0 0 0 0 1278
+6 0 1278 1278
+4 0 1278 0 1278
+4 0 1278 1278
+4 0 1278 0 1278
+4 0 1278
+4 0 1278 0 0 0 0 0 0 0 0 1278
-4 0 329
+4 0 329 0 0 0 0 0 0 0 0 329 8
jcnd=20/329 0x3877c7a2e3 0 
* 0 
+6 0 1587 1587
+4 0 1587 1587 0 1 0 0 1
+4 0 1587 0 0 0 0 0 0 0 0 1587
+6 0 1587
+4 0 1587
+7 0 1587 0 1587 0 0 11 0 0 11
+4 0 1587 0 1587
+4 0 1587 0 1587
+4 0 1587 0 1587
+4 0 1587 0 0 0 0 0 0 0 0 1587 5
jcnd=965/1587 +7 0 
* 0 
+2 0 622 0 622
+5 0 622
+7 0 622 0 0 0 0 0 0 0 0 622 4
jcnd=554/622 +18 0 
* 0 
-7 0 965
+7 0 965 0 0 0 0 0 0 0 0 965 206
jcnd=561/965 +18 0 
* 0 
+2 0 472 0 472 0 0 4 0 0 4
+8 0 472 0 472
+8 0 472
+7 0 472 0 472 0 0 2 0 0 2
+4 0 472
+3 0 472
+3 0 472
+4 0 472
+3 0 472
+4 0 472
+3 0 472
+3 0 472
+4 0 472 0 472
+4 0 472 0 472 0 0 1 0 0 1
+4 0 472
jump=472 +71 0 
* 0 
-46 0 1132 0 0 1 0 0 1
+7 0 1132 0 1132 0 0 1 0 0 1
+4 0 1132
+3 0 1132
+3 0 1132
+4 0 1132
+3 0 1132
+4 0 1132
+3 0 1132
+3 0 1132
+4 0 1132 0 1132
+4 0 1132 0 1132 0 0 1 0 0 1
+4 0 1132
jump=1132 +71 0 
* 0 
+40 0 98 0 0 1 0 0 1
+3 0 98
jump=98 0x3877c79abc 0 
* 0 
+5 0 36
+7 0 36 0 36
+6 0 36
+3 0 36 0 0 0 0 0 0 0 0 36 2
jcnd=36/36 +7 0 
* 0 
+7 0 1640
+4 0 1640 0 0 1 0 0 1
+3 0 1640
+3 0 1640 0 1640
cfn=(104)
calls=1640 0x3877c77180 0 
* 0 6560 3280 0 1 0 0 1 0 0 1640
+5 0 1640
+3 0 1640
jump=1640 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 688 0 0 1 0 0 1
+7 0 688
+2 0 688
+4 0 688
+3 0 688
+3 0 688 0 688
+5 0 688
+3 0 688
+4 0 688
+3 0 688 0 0 1 0 0 1
+4 0 688
+4 0 688
+3 0 688
+4 0 688 0 688
+4 0 688 0 688 0 0 28 0 0 28
+4 0 688
+3 0 688
+3 0 688 0 688
cfn=(104)
calls=688 0x3877c77180 0 
* 0 2752 1376 0 0 0 0 0 0 0 688 2
+5 0 688
+3 0 688
jump=688 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 33 33 0 1 0 0 1
+4 0 33
jump=33 0x3877c7a10e 0 
* 0 
+5 0 33 33
+5 0 33 0 0 0 0 0 0 0 0 33
+2 0 33 33
+4 0 33 0 33
+4 0 33 33
+4 0 33 0 33
+4 0 33
jump=33 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 2542 0 2542 1 0 0 1
+5 0 2542 0 2542
+5 0 2542
+3 0 2542 0 2542
+5 0 2542
+4 0 2542 2542 0 0 1 0 0 1
+7 0 2542 2542 0 0 1 0 0 1
+3 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542 3
+6 0 2542 2542 0 0 1 0 0 1
+7 0 2542 2542 0 1 1 0 1 1
+4 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542
+2 0 2542 2542 0 0 1 0 0 1
+3 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542
jcnd=2542/2542 +97 0 
* 0 
+18 0 2542
+3 0 2542
+3 0 2542 0 2542
cfn=(38)
calls=2542 0x3877c79a00 0 
* 0 631708 78660 94378 47 32 69 47 32 69 97785 4344
+5 0 2542
+3 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542
+2 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542
+2 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542 22
+2 0 2542 2542
+7 0 2542 0 0 0 0 0 0 0 0 2542
jcnd=2542/2542 +13 0 
* 0 
+13 0 2542 0 2542
+2 0 2542 0 0 0 0 0 0 0 0 2542 9
+6 0 2542
+3 0 2542 2542
+4 0 2542 2542
+5 0 2542 2542
+5 0 2542
+4 0 2542 2542
+1 0 2542 0 0 1 0 0 1
+5 0 2542 2542 0 0 1 0 0 1
+7 0 2542 0 0 0 0 0 0 0 0 2542
jcnd=2542/2542 +14 0 
* 0 
+14 0 2542 0 2542 1 0 0 1
+3 0 2542 0 0 0 0 0 0 0 0 2542
+6 0 2542
jump=2542 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2542 0 2542 1 0 0 1
+2 0 2542
+3 0 2542
+3 0 2542 0 2542
+2 0 2542
+3 0 2542 0 2542
+1 0 2542
+3 0 2542 0 2542
+1 0 2542
+3 0 2542
+4 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542
+6 0 2542
+4 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542 7
jcnd=10/2542 0x3877c838d1 0 
* 0 
+2 0 2532
+3 0 2532
+3 0 2532
+3 0 2532
+3 0 2532
+3 0 2532 0 0 0 0 0 0 0 0 2532
jcnd=2532/2532 +41 0 
* 0 
+41 0 2532 0 0 1 0 0 1
+3 0 2532 0 0 0 0 0 0 0 0 2532
jcnd=2532/2532 0x3877c839c0 0 
* 0 
+24 0 2532
+3 0 2532
+4 0 2532
+3 0 2532
+3 0 2532
+3 0 2532
+3 0 2532
+3 0 2532 0 0 0 0 0 0 0 0 2532 1259
jcnd=1276/2532 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1266
+10 0 1266 1266 0 0 2 0 0 2
+3 0 1266
+4 0 1266 0 1266
+3 0 1266
+4 0 1266
+4 0 1266 0 0 0 0 0 0 0 0 1266
jcnd=1266/1266 -18 0 
* 0 
-18 0 3854 3854
+3 0 3854
+4 0 3854 0 3854
+3 0 3854
+4 0 3854
+4 0 3854 0 0 0 0 0 0 0 0 3854 11
jcnd=2588/3854 -18 0 
* 0 
+2 0 2542
+4 0 2542
+3 0 2542 2542
+1 0 2542 2542
+1 0 2542 2542
+2 0 2542 2542 0 1 0 0 1
+2 0 2542 2542
0x3877c839c0 0 2532 0 0 1 0 0 1
+3 0 2532
+3 0 2532
+3 0 2532
+4 0 2532 0 2532 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=2532 0x3877c89b20 0 
* 0 1078858 405500 400436 6 1 123 6 1 123 51486 2064 2532 315
+5 0 2532
jump=2532 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2542 2542 0 1 1 0 1 1
+7 0 2542 2542 0 0 1 0 0 1
+3 0 2542
+3 0 2542 0 0 1 0 0 1 0 0 2542
+6 0 2542
+3 0 2542 0 0 0 0 0 0 0 0 2542 2
+6 0 2542 2542
+4 0 2542
+4 0 2542
+2 0 2542 0 0 0 0 0 0 0 0 2542 2
+2 0 2542
+2 0 2542
+7 0 2542 0 0 0 0 0 0 0 0 2542
jcnd=2542/2542 +14 0 
* 0 
+14 0 2542
+2 0 2542
cfn=(170) _int_free
calls=2542 0x3877c78650 0 
* 0 260134 69723 41193 21 4 0 21 4 0 63300 1237

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 19 19 0 1 0 0 1
+4 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 3
jcnd=18/19 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 5
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 19 19 0 1 0 0 1
+4 0 19 19
+4 0 19
+3 0 19 0 0 1 0 0 1
+4 0 19
+4 0 19 19
+5 0 19
+4 0 19
+2 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=7/19 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +15 0 
* 0 
+15 0 19 19 0 1 0 0 1
+4 0 19 0 0 0 0 0 0 0 0 19
+2 0 19 19 0 0 1 0 0 1
+6 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=5/19 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 2542 0 2542 1 0 0 1
+2 0 2542 0 2542
+2 0 2542 0 2542
+2 0 2542
+3 0 2542 0 2542
+2 0 2542 0 2542
+1 0 2542 0 2542
+1 0 2542
+3 0 2542
+4 0 2542 2542
+4 0 2542 0 2542
+4 0 2542
+3 0 2542
+4 0 2542
+3 0 2542
+3 0 2542
+3 0 2542 0 0 1 0 0 1 0 0 2542
+6 0 2542
+4 0 2542 0 0 0 0 0 0 0 0 2542
+6 0 2542
+4 0 2542 0 0 0 0 0 0 0 0 2542
+6 0 2542 2542
+7 0 2542 0 0 0 0 0 0 0 0 2542 12
jcnd=2426/2542 0x3877c78778 0 
* 0 
+6 0 116
+4 0 116 116
+4 0 116
+4 0 116 0 0 0 0 0 0 0 0 116
+6 0 116
+4 0 116 116 0 0 1 0 0 1
+7 0 116 0 0 1 0 0 1 0 0 116
+6 0 116 116
+6 0 116
+2 0 116 0 0 0 0 0 0 0 0 116
+6 0 116 116
+9 0 116 0 0 0 0 0 0 0 0 116
jcnd=116/116 +3 0 
* 0 
+3 0 116 0 116
+5 0 116
+3 0 116
+3 0 116
+2 0 116 116
+5 0 116
+5 0 116
+3 0 116 0 0 0 0 0 0 0 0 116 2
+6 0 116 116 0 1 0 0 1
+4 0 116
+6 0 116
+2 0 116
+4 0 116
jump=116 +20 0 
* 0 
+20 0 116
+3 0 116
+4 0 116
+3 0 116 0 0 0 0 0 0 0 0 116
jcnd=116/116 +14 0 
* 0 
+14 0 116 0 116
+4 0 116 0 0 1 0 0 1
+3 0 116 116
+9 0 116 0 0 0 0 0 0 0 0 116
jcnd=116/116 +3 0 
* 0 
+3 0 116 0 116
+4 0 116
+3 0 116 0 0 0 0 0 0 0 0 116
+2 0 116
+3 0 116 0 0 0 0 0 0 0 0 116
jcnd=116/116 +11 0 
* 0 
+11 0 116
+4 0 116 116
+1 0 116 116
+1 0 116 116
+2 0 116 116
+2 0 116 116
+2 0 116 116
+2 0 116 116
+4 0 2426
+2 0 2426 0 0 0 0 0 0 0 0 2426
+6 0 2426 2426 0 1 0 0 1
+4 0 2426
+3 0 2426
+2 0 2426 0 0 0 0 0 0 0 0 2426
jcnd=2426/2426 0x3877c78a40 0 
* 0 
+6 0 2426 2426
+4 0 2426
+3 0 2426 0 0 0 0 0 0 0 0 2426
+6 0 2426 2426
+5 0 2426
+4 0 2426 0 0 0 0 0 0 0 0 2426
jcnd=2426/2426 0x3877c7907c 0 
* 0 
+6 0 2426 2426
+5 0 2426
+4 0 2426 0 0 0 0 0 0 0 0 2426
+6 0 2426
+4 0 2426 0 0 1 0 0 1 0 0 2426
+6 0 2426
+4 0 2426 2426
+7 0 2426 0 0 0 0 0 0 0 0 2426
+6 0 2426 2426
+6 0 2426
+2 0 2426 0 0 0 0 0 0 0 0 2426
+6 0 2426 2426
+4 0 2426 0 0 0 0 0 0 0 0 2426 6
jcnd=2421/2426 +70 0 
* 0 
+2 0 5 5
+3 0 5
+3 0 5
+3 0 5 5
+4 0 5 5
+4 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5 2
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=4/5 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 2426 2426 0 1 0 0 1
+4 0 2426 0 0 0 0 0 0 0 0 2426 684
jcnd=684/2426 0x3877c78bf0 0 
* 0 
+6 0 1742 1742 0 0 2 0 0 2
+6 0 1742 0 0 1 0 0 1 0 0 1742 88
jcnd=83/1742 0x3877c78a78 0 
* 0 
+6 0 1659 1659
+5 0 1659 1659
+5 0 1659 1659
+4 0 1659 0 0 0 0 0 0 0 0 1659
+6 0 1659 1659
+4 0 1659 0 0 0 0 0 0 0 0 1659
+6 0 1659 1659
+9 0 1659 0 1659
+4 0 1659 0 1659
+4 0 1659 0 0 0 0 0 0 0 0 1659 352
jcnd=1190/1659 +16 0 
* 0 
+2 0 469 469
+5 0 469
+3 0 469 0 0 0 0 0 0 0 0 469 9
jcnd=157/469 0x3877c78ee4 0 
* 0 
+6 0 1659
+3 0 1659
+4 0 1659 1659
+4 0 1659 1659
+4 0 1659 0 0 0 0 0 0 0 0 1659
-12 0 83 0 0 1 0 0 1
+4 0 83 83
+4 0 83 83
+4 0 83 0 0 0 0 0 0 0 0 83
+6 0 1742
+7 0 1742 0 1742
+4 0 1742 0 1742
+4 0 1742 0 0 0 0 0 0 0 0 1742 81
jcnd=416/1742 +18 0 
* 0 
+2 0 1326 0 1326
+8 0 1326 0 1326
+8 0 1326 0 1326
+4 0 1326
+3 0 1326 0 1326
+4 0 1326
+4 0 1326 0 1326
+4 0 1326 0 1326
+4 0 1326
+7 0 1326 0 0 0 0 0 0 0 0 1326
jcnd=1326/1326 0x3877c78b20 0 
* 0 
-30 0 416 0 416
+4 0 416
+3 0 416 0 416 1 0 0 1
+4 0 416
+4 0 416 0 416
+4 0 416 0 416
+4 0 416
+7 0 416 0 0 0 0 0 0 0 0 416
jcnd=416/416 0x3877c78b20 0 
* 0 
-7 0 684
+7 0 684 0 0 0 0 0 0 0 0 684
jcnd=684/684 0x3877c78b20 0 
* 0 
0x3877c78a40 0 2426 0 0 1 0 0 1
+5 0 2426 2426
+4 0 2426 2426
+7 0 2426 0 0 0 0 0 0 0 0 2426
jcnd=2426/2426 +16 0 
* 0 
+16 0 2426 0 2426
+5 0 2426 0 0 0 0 0 0 0 0 2426
+6 0 2426
+3 0 2426
jump=2426 0x3877c7878f 0 
* 0 
+10 0 83 0 83
+6 0 83 0 0 1 0 0 1
jump=83 0x3877c78885 0 
* 0 
0x3877c78b20 0 2426 2426 0 1 0 0 1
+4 0 2426
+2 0 2426 0 0 0 0 0 0 0 0 2426
+6 0 2426 2426
+7 0 2426 0 0 0 0 0 0 0 0 2426
jcnd=2426/2426 +15 0 
* 0 
+15 0 2426 0 2426 1 0 0 1
+4 0 2426 0 0 0 0 0 0 0 0 2426
+6 0 2426
+4 0 2426 2426
+1 0 2426 2426
+1 0 2426 2426
+2 0 2426 2426
+2 0 2426 2426
+2 0 2426 2426
+2 0 2426 2426
0x3877c78bf0 0 684 0 0 1 0 0 1
+3 0 684 0 684
+4 0 684
+3 0 684
+4 0 684 0 684 1 0 0 1
+4 0 684
jump=684 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 157 157 0 1 0 0 1
+5 0 157 0 0 0 0 0 0 0 0 157
+6 0 157 157
+5 0 157 0 157
+4 0 157 157
+5 0 157 0 157 1 0 0 1
+4 0 157
jump=157 0x3877c78882 0 
* 0 
+17 0 1 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 2426 2426 0 1 1 0 1 1
+4 0 2426 0 0 1 0 0 1
+7 0 2426
+4 0 2426
+3 0 2426
+3 0 2426 0 0 0 0 0 0 0 0 2426
jcnd=2426/2426 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 2532 0 0 1 0 0 1
+7 0 2532
+3 0 2532
+3 0 2532 2532 0 0 1 0 0 1
+4 0 2532
+4 0 2532 0 0 0 0 0 0 0 0 0 0 2532 315
jump=312 0x3877c89be8 0 
* 0 
jump=324 0x3877c89bd0 0 
* 0 
jump=312 0x3877c89bb8 0 
* 0 
jump=312 +11 0 
* 0 
jump=312 0x3877c89c48 0 
* 0 
jump=318 0x3877c89c30 0 
* 0 
jump=320 0x3877c89c18 0 
* 0 
jump=322 0x3877c89c00 0 
* 0 
+11 0 312 312
+3 0 312
+4 0 312
+4 0 312 312
+4 0 312
+4 0 312 0 312
+4 0 312
+9 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312
+4 0 312
+4 0 312 0 0 0 0 0 0 0 0 312
jcnd=8/312 0x3877c89c60 0 
* 0 
-40 0 49578 49578
+4 0 49578 0 49578 0 0 10 0 0 10
+4 0 49578 49578
+4 0 49578 0 49578 0 0 15 0 0 15
+4 0 49578 49578
+4 0 49578 0 49578 0 0 57 0 0 57
+4 0 49578 49578
+4 0 49578 0 49578 0 0 1 0 0 1
+4 0 49578
+4 0 49578
+4 0 49578 0 0 0 0 0 0 0 0 49578 2058
jcnd=2496/49578 0x3877c89c60 0 
* 0 
-32 0 318 318
+4 0 318 0 318
+4 0 318 318
+4 0 318 0 318
+4 0 318 318
+4 0 318 0 318
+4 0 318
+4 0 318
+4 0 318 0 0 0 0 0 0 0 0 318
jcnd=10/318 0x3877c89c60 0 
* 0 
-24 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320
+4 0 320
+4 0 320 0 0 0 0 0 0 0 0 320
jcnd=8/320 0x3877c89c60 0 
* 0 
-16 0 322 322 0 1 0 0 1
+4 0 322 0 322
+4 0 322 0 0 1 0 0 1
+4 0 322
+4 0 322 0 0 0 0 0 0 0 0 322 6
jcnd=10/322 0x3877c89c60 0 
* 0 
+6 0 48318
+4 0 48318 48318
+3 0 48318 0 48318 0 0 1 0 0 1
+3 0 48318 48318
+4 0 48318 0 48318 0 0 31 0 0 31
+4 0 48318 48318
+4 0 48318 0 48318 0 0 4 0 0 4
+4 0 48318 48318
+4 0 48318 0 48318 0 0 2 0 0 2
+4 0 48318
jump=48318 -80 0 
* 0 
-30 0 312 312
+3 0 312 0 312
+3 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312 0 0 1 0 0 1
+4 0 312 312
+4 0 312 0 312
+4 0 312
jump=312 -80 0 
* 0 
-24 0 324 324
+4 0 324 0 324 0 0 1 0 0 1
+4 0 324 324
+4 0 324 0 324
+4 0 324 324
+4 0 324 0 324
+4 0 324
jump=324 -80 0 
* 0 
-16 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312
jump=312 -80 0 
* 0 
+8 0 312 312
+3 0 312
+4 0 312 0 0 1 0 0 1
+4 0 312
+4 0 312
jump=312 -39 0 
* 0 
+9 0 324
+3 0 324 0 0 0 0 0 0 0 0 324
+6 0 324 324
+3 0 324
+4 0 324
jump=324 -72 0 
* 0 
+8 0 312
+4 0 312 312
+3 0 312 0 0 0 0 0 0 0 0 312
+2 0 312
+4 0 312
jump=312 -99 0 
* 0 
+11 0 322 322 0 1 0 0 1
+3 0 322
+4 0 322
+4 0 322
+4 0 322
jump=322 0x3877c89b78 0 
* 0 
+9 0 320 320
+3 0 320
+4 0 320
+4 0 320
+4 0 320
jump=320 0x3877c89b70 0 
* 0 
+9 0 318 318
+3 0 318
+4 0 318
+4 0 318
+4 0 318
jump=318 0x3877c89b68 0 
* 0 
+9 0 312 312
+3 0 312
+4 0 312
+4 0 312
+4 0 312
jump=312 0x3877c89b60 0 
* 0 
+9 0 2532 0 2532 1 0 0 1
+3 0 2532 2532

totals: 34633837 14509468 8163571 245 137 263 245 137 263 887722 10880 15242 315
