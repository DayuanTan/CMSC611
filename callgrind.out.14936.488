version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 488


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 581428842 - 583411449
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1808 0 0 1 0 0 1
+3 0 1808 0 0 0 0 0 0 0 0 1808
+2 0 1808
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1808 0x3877c7b8b0 0 
* 0 203967 52231 26877 21 5 0 21 5 0 50081 773
* 0 1808 1808 0 1 1 0 1 1 0 0 0 1808

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1808 0 1808 1 0 0 1
+1 0 1808
+5 0 1808
+3 0 1808 0 1808
+1 0 1808
+4 0 1808 0 0 1 0 0 1
+3 0 1808
+4 0 1808
+3 0 1808 0 1808 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1808 0x3877c7aa50 0 
* 0 493631 72003 72315 49 39 57 49 39 57 82061 2886
* 0 1808 1808 0 1 1 0 1 1 0 0 0 1808
+5 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808
jcnd=1808/1808 +96 0 
* 0 
+96 0 1808 0 0 1 0 0 1
+4 0 1808 1808
+1 0 1808 1808
+1 0 1808 1808

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 896
+4 * 896
+3 * 896 0 896
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=896 0x4044cc -35 
* * 4480 1792 1792
+5 * 896 896
+1 * 896 896

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896 1 0 0 1
+4 +1 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=896 0x4049d4 -35 
* * 5376 1792 2688 1 0 0 1
+5 * 896 896
+1 * 896 896

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 896
+4 * 896
+3 * 896 0 896
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=896 0x404520 -35 
* * 4480 1792 1792
+5 * 896 896
+1 * 896 896

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=896 0x404a28 -35 
* * 5376 1792 2688 1 0 1 1 0 1
+5 * 896 896
+1 * 896 896

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 896 0 896
+1 * 896
+3 * 896 0 896
+4 * 896 896
+4 * 896 896
+1 * 896 896

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=448 0x403df2 -87 
* * 10752 3584 4032 0 29 3 0 29 3 448 3
+5 * 448 448
+1 * 448 448

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+4 * 896 896
+4 * 896 896
+1 * 896 896

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=448 0x40406a -87 
* * 10752 3584 4032 0 28 20 0 28 20 448
+5 * 448 448
+1 * 448 448

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 976 0 976
+1 * 976
+3 * 976 0 976 0 0 1 0 0 1
+4 +1 976 976
+4 * 976 976
+1 * 976 976

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792
+4 * 1792 0 1792
+4 +1 1792
+4 * 1792
+3 * 1792 0 1792
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1792 0x404ffe 790 
* * 10752 5376 3584 1 0 0 1
+5 * 1792 1792
+3 * 1792 1792
+1 * 1792 1792

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792 0 1792
+4 +1 1792 1792
+4 * 1792 1792
+1 * 1792 1792

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792
+4 * 1792 0 1792
+4 +1 1792
+4 * 1792
+3 * 1792 0 1792 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1792 0x40500c 790 
* * 10752 5376 3584 1 0 0 1
+5 * 1792 1792
+3 * 1792 1792
+1 * 1792 1792

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 976 0 976
+1 * 976
+3 * 976 0 976
+4 +1 976 976
+4 * 976 976
+1 * 976 976

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792 0 1792
+4 +1 1792 1792 0 1 0 0 1
+4 * 1792 1792
+1 * 1792 1792

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 896 0 896
+1 * 896
+3 * 896 0 896
+4 * 896 0 896
+4 * 896 896
+4 * 896 896
+1 * 896 896

fl=(5)
fn=(102)
0x4048de 113 920 0 920 1 0 0 1
+1 * 920
+3 * 920 0 920
+4 +1 920
+10 * 920 920
+1 * 920 920

fn=(266)
0x40406a 129 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448
+3 * 448
+5 * 448 0 448
cfi=(16)
cfn=(226)
calls=448 0x402d61 -20 
* * 3136 1344 1344
+5 * 448
+3 * 448 0 0 0 0 0 0 0 0 448
+2 * 448 448
+4 * 448 448 0 0 28 0 0 28
+2 * 448 0 448 0 0 20 0 0 20
+2 * 448 448
+1 * 448 448

fn=(28)
0x404992 113 920 0 920 1 0 0 1
+1 * 920
+3 * 920 0 920
+4 +1 920
+10 * 920 920
+1 * 920 920

fn=(176)
0x4044cc 86 896 0 896
+1 * 896
+3 * 896 0 896
+4 * 896 896
+1 * 896 896

fn=(224)
0x403df2 129 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448
+3 * 448
+5 * 448 0 448
cfi=(16)
cfn=(226)
calls=448 0x402d61 -20 
* * 3136 1344 1344
+5 * 448
+3 * 448 0 0 0 0 0 0 0 0 448 3
+2 * 448 448
+4 * 448 448 0 0 29 0 0 29
+2 * 448 0 448 0 0 3 0 0 3
+2 * 448 448
+1 * 448 448

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 904 0 904
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 * 904 0 904
+4 +1 904 904
+4 * 904
+3 * 904 0 904
cob=(5)
cfi=(8)
cfn=(164)
calls=904 0x387e4bb2f0 0 
* * 99050 24643 11377 23 5 0 23 5 0 24146 710 904
* * 904 904 0 1 1 0 1 1 0 0 0 904
+5 * 904 904
+1 * 904 904

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 904 0 904
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 * 904 0 904
+4 +1 904 904
+4 * 904
+3 * 904 0 904
cob=(5)
cfi=(8)
cfn=(164)
calls=904 0x387e4bb2f0 0 
* * 112149 29396 15500 0 1 0 0 1 0 27743 63 904
* * 904 904 0 0 0 0 0 0 0 0 0 904
+5 * 904 904
+1 * 904 904

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 904 0 904 1 0 0 1
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 * 904 0 904
+4 +2 904 904
+4 * 904
+3 * 904 0 904
cfn=(102)
calls=904 0x4048de +12 
* * 5424 1808 1808 1 0 0 1
+5 * 904 904
+4 * 904 0 0 1 0 0 1
+3 * 904
+2 * 904 0 0 0 0 0 0 0 0 904
jcnd=904/904 +7 +3 
* * 
+7 +3 904 904
+4 * 904
+4 * 904
+3 * 904 0 904
cob=(5)
cfi=(8)
cfn=(32)
calls=904 0x387e4bd0b0 0 
* * 260288 38142 35999 33 20 44 33 20 44 41833 1740 904
* * 904 904 0 0 0 0 0 0 0 0 0 904
+5 +1 904 904
+1 * 904 904

fn=(18)
0x404a28 81 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896 0 0 1 0 0 1
+4 * 896 0 896
+4 * 896 896
+1 * 896 896

fn=(92)
0x4049d4 81 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+4 * 896 0 896
+4 * 896 896
+1 * 896 896

fn=(196)
0x404520 86 896 0 896
+1 * 896
+3 * 896 0 896
+4 * 896 896
+1 * 896 896

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 904 0 904 1 0 0 1
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 * 904 0 904 1 0 0 1
+4 +2 904 904
+4 * 904
+3 * 904 0 904
cfn=(28)
calls=904 0x404992 +12 
* * 5424 1808 1808 1 0 0 1
+5 * 904 904
+4 * 904
+3 * 904
+2 * 904 0 0 0 0 0 0 0 0 904
jcnd=904/904 +7 +3 
* * 
+7 +3 904 904
+4 * 904
+4 * 904
+3 * 904 0 904
cob=(5)
cfi=(8)
cfn=(32)
calls=904 0x387e4bd0b0 0 
* * 262271 41093 41740 20 20 14 20 20 14 42036 1146 904
* * 904 904 0 1 1 0 1 1 0 0 0 904
+5 +1 904 904
+1 * 904 904

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +2 896 896 0 1 0 0 1
+4 * 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=896 0x404a36 450 
* * 493538 167124 161752 24 3 4 24 3 4 20292 1121 1788 223
+5 * 896 896
+1 * 896 896

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +2 896 896
+4 * 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=896 0x40439c 107 
* * 518626 176084 170712 7 1 41 7 1 41 20292 1106 1788
+5 * 896 896
+1 * 896 896

fn=(116)
0x40439c 107 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +10 896 896
+4 * 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=896 0x4047d7 -26 
* * 506082 171604 166232 7 1 41 7 1 41 20292 1106 1788
+5 +1 896 896
+1 * 896 896

fn=(118)
0x4047d7 91 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +2 896 896
+4 * 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=896 0x4049e2 450 
* * 493538 167124 161752 7 1 41 7 1 41 20292 1106 1788
+5 * 896 896
+1 * 896 896

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +10 896 896
+4 * 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(52)
calls=896 0x404829 -26 
* * 506082 171604 166232 25 3 4 25 3 4 20292 1121 1788 223
+5 +1 896 896
+1 * 896 896

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +2 896 896
+4 * 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896 1 0 0 1
cfn=(50)
calls=896 0x404484 107 
* * 518626 176084 170712 25 3 4 25 3 4 20292 1121 1788 223
+5 * 896 896
+1 * 896 896

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 912 0 912 1 0 0 1
+1 * 912
+3 * 912 0 912 0 0 1 0 0 1
+4 +1 912 912
+4 * 912 912
+1 * 912 912

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 912 0 912 1 0 0 1
+1 * 912
+3 * 912 0 912 1 0 0 1
+4 +1 912 912
+4 * 912 912
+1 * 912 912

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448 0 0 0 0 0 0 0 0 448 9
jcnd=8/448 +51 +10 
* * 
+2 +3 440 440
+4 * 440 440
+4 * 440 440
+4 -1 440 440
+4 * 440
+3 * 440
+3 * 440 0 440
cfi=(3)
cfn=(222)
calls=440 0x403373 215 
* * 16720 5720 6160 0 28 2 0 28 2 440 3
+5 +2 440 440
+4 * 440 440
+4 * 440
+4 * 440 440
+4 * 440 0 440
+4 * 440
jump=440 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202) std::vector<float, std::allocator<float> >::end()
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12787 3926 3415 45 15 11 45 15 11 876 66 47
+5 +2 448 448
+1 * 448 448

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+2 * 896 0 896
+2 * 896 0 896
+1 * 896
+4 * 896 0 896 1 0 0 1
+4 * 896 0 896
+4 +2 896 896
+4 * 896
+3 * 896 0 896
cfn=(6)
calls=896 0x403b08 117 
* * 5376 2688 1792 1 0 1 1 0 1
+5 * 896
+3 * 896 0 896
cfi=(3)
cfn=(8)
calls=896 0x403afa -88 
* * 5376 2688 1792 1 0 0 1
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=896 0x402f54 645 
* * 11648 5376 1792 1 1 0 1 1
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896
+3 * 896
+3 * 896 0 896
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=896 0x403b16 134 
* * 372291 81088 77241 30 19 12 30 19 12 43528 1113 1792
+5 +4 896 896 0 1 0 0 1
+4 * 896
+3 * 896 0 896
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=896 0x40333c 113 
* * 5376 2688 1792 2 0 0 2
+5 * 896
+3 * 896 896
+4 * 896 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=896 0x403ba4 565 
* * 22400 8960 7168 3 0 0 3
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=896 0x403b74 547 
* * 22400 8960 7168
+5 * 896
+3 * 896
+3 * 896
+3 * 896
+3 * 896 0 896 1 0 0 1
cfi=(11)
cfn=(48)
calls=896 0x403bd5 -60 
* * 532066 180564 176088 26 3 4 26 3 4 20292 1121 1788 223
+5 -3 896 896
+4 * 896 0 896
+4 * 896
jump=896 +28 +4 
* * 
+28 +4 896
+4 * 896 896
+1 * 896 896
+2 * 896 896
+2 * 896 896
+1 * 896 896

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+4 * 896 0 896
+4 * 896
+4 * 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=896 0x404380 726 
* * 8960 4480 3584 1 0 0 1
+5 * 896 896
+4 * 896 896
+1 * 896 896

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 896 0 896
+1 * 896
+3 * 896 0 896
+1 * 896
+4 * 896 0 896 1 0 0 1
+4 +2 896 896
+4 * 896
+3 * 896 0 896
cfn=(40)
calls=896 0x40333c 113 
* * 5376 2688 1792
+5 * 896
+3 * 896 896
+4 * 896 896
+4 * 896 896
+4 * 896 896
+3 -1 896
+3 * 896
+3 * 896 0 896
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=896 0x40334a 148 
* * 27776 8960 10752 2 0 0 2
+5 +1 896 896
+4 * 896
+3 * 896 0 896
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=896 0x4032ca 159 
* * 182050 55156 35994 3 1 0 3 1 0 28436 53 1792
+5 * 896
jump=896 +28 * 
* * 
+28 * 896 0 0 1 0 0 1
+4 * 896 896
+1 * 896 896
+1 * 896 896

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 904 0 904 1 0 0 1
+1 * 904 0 0 1 0 0 1
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 0 904 904
+5 0 904 0 0 0 0 0 0 0 0 904
+2 0 904 904
+4 0 904 904
+4 0 904
+5 0 904
+3 0 904
+3 0 904 0 904
fi=(6) ???
cfi=(5)
cfn=(100)
calls=904 0x40461a 99 
* 0 283792 45374 43231 36 20 44 36 20 44 42737 1740 1808
+5 0 904
fi=(6)
jump=904 +7 0 
* 0 
+7 0 904 904
+1 0 904 904

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 303968 0 303968
+1 * 303968
+3 * 303968 0 303968
+4 * 303968 0 303968
+4 +1 303968 303968
+4 * 303968 303968
+3 * 303968 303968
+4 * 303968
+4 * 303968
+3 * 303968 303968
+1 * 303968 303968

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 303968 0 303968
+1 * 303968
+3 * 303968 0 303968 1 0 0 1
+4 * 303968 0 303968
+4 +1 303968 303968
+4 * 303968 303968
+3 * 303968 303968
+4 * 303968
+4 * 303968
+3 * 303968 303968
+1 * 303968 303968

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 896
+4 * 896
+3 * 896 0 896
cfi=(4)
cfn=(194)
calls=896 0x403d7e +42 
* * 12544 4480 4480 1 0 0 1
+5 * 896 896
+1 * 896 896

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+1 * 896
+4 * 896 0 896
+4 +2 896 896
+4 * 896 896
+4 * 896
+3 * 896 896
+4 * 896 896
+3 * 896
+3 * 896
+3 * 896
+4 * 896
+3 * 896 896
+4 * 896 896
+3 -1 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=896 0x403d98 +11 
* * 136354 38132 24346 1 1 0 1 1 0 28436 53 1792
+5 +1 896 896
+4 * 896
+3 * 896 0 896
cfn=(192)
calls=896 0x403296 -82 
* * 20608 7168 7168 1 0 0 1
+5 * 896
jump=896 +28 * 
* * 
+28 * 896
+4 * 896 896
+1 * 896 896
+1 * 896 896

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 3616 0 3616 1 0 0 1
+1 * 3616
+3 * 3616 0 3616 0 0 1 0 0 1
+4 +1 3616 3616
+4 * 3616 3616 0 1 1 0 1 1
+4 * 3616
+3 * 3616 3616
+4 * 3616 3616
+3 * 3616
+3 * 3616
+3 * 3616
+4 * 3616 3616
+1 * 3616 3616

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 +2 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=896 0x404236 -14 
* * 297923 52416 52153 24 19 8 24 19 8 43528 1113 1792
+5 * 896 896
+4 * 896 0 896
+3 +1 896 896
+4 * 896 896 0 1 0 0 1
+3 * 896 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+3 * 896 896
+4 * 896
+4 * 896
+3 * 896 896
+4 * 896 0 896
+4 +1 896 896
+1 * 896 896

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 +2 896 896
+4 * 896 896 0 1 0 0 1
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(96)
calls=896 0x403fbe -14 
* * 294897 49203 46204 16 7 37 16 7 37 43115 1686 1792
+5 * 896 896
+4 * 896 0 896
+3 +1 896 896
+4 * 896 896
+3 * 896 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+3 * 896 896
+4 * 896
+4 * 896
+3 * 896 896
+4 * 896 0 896
+4 +1 896 896
+1 * 896 896

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 448 0 448
+1 * 448
+3 * 448 0 0 1 0 0 1
+4 * 448 0 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448 0 0 0 0 0 0 0 0 448
jcnd=8/448 +51 +10 
* * 
+2 +3 440 440
+4 * 440 440
+4 * 440 440
+4 -1 440 440
+4 * 440
+3 * 440
+3 * 440 0 440
cfi=(3)
cfn=(264)
calls=440 0x4036b1 215 
* * 16720 5720 6160 0 28 16 0 28 16 440
+5 +2 440 440
+4 * 440 440
+4 * 440
+4 * 440 440
+4 * 440 0 440
+4 * 440
jump=440 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11777 3681 3210 20 2 28 20 2 28 675 55 47
+5 +2 448 448
+1 * 448 448

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1816 0 1816 1 0 0 1
+1 * 1816
+3 * 1816 0 1816 1 0 0 1
+4 +1 1816 1816
+4 * 1816 1816
+1 * 1816 1816

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+3 * 896 0 896
+4 * 896
+4 * 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfi=(10)
cfn=(110)
calls=896 0x404380 726 
* * 8960 4480 3584
+5 * 896 896
+4 * 896 896
+1 * 896 896

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 896 0 896
+1 * 896
+3 * 896 0 896
+1 * 896
+4 * 896 0 896 1 0 0 1
+4 +2 896 896
+4 * 896
+3 * 896 0 896
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=896 0x40325e 113 
* * 5376 2688 1792
+5 * 896
+3 * 896 896
+4 * 896 896
+4 * 896 896
+4 * 896 896
+3 -1 896
+3 * 896
+3 * 896 0 896
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=896 0x40326c 148 
* * 27776 8960 10752 4 0 0 4
+5 +1 896 896
+4 * 896
+3 * 896 0 896
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=896 0x4031ec 159 
* * 168984 50420 31874 27 5 0 27 5 0 24848 703 1792
+5 * 896
jump=896 +28 * 
* * 
+28 * 896 0 0 1 0 0 1
+4 * 896 896
+1 * 896 896
+1 * 896 896

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 904 0 904 1 0 0 1
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 * 904 0 904
+4 +2 904 904
+5 * 904 0 0 0 0 0 0 0 0 904
+2 +1 904 904
+4 * 904 904
+4 * 904 904
+4 * 904
+3 * 904
+3 * 904 0 904
cfi=(5)
cfn=(160)
calls=904 0x4044d6 -65 
* * 109898 28259 15897 24 6 0 24 6 0 24146 710 1808
+5 +1 904 904
+1 * 904 904

fn=(12)
0x403b16 134 896 0 896
+1 * 896
+3 * 896 0 896
+1 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=896 0x4043ca -45 
* * 32256 11648 12544 4 0 4 4 0 4
+5 +1 896 896 0 1 0 0 1
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(20)
calls=896 0x404412 +43 
* * 320323 63168 58425 25 19 8 25 19 8 43528 1113 1792
+5 * 896
jump=896 +28 * 
* * 
+28 * 896
+4 * 896 896
+1 * 896 896
+1 * 896 896

fn=(14)
0x4043ca 90 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896 0 0 1 0 0 1
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfi=(4)
cfn=(16)
calls=896 0x404804 +24 
* * 16128 5376 6272 2 0 1 2 0 1
+5 * 896 896
+4 * 896 0 896 0 0 2 0 0 2
+7 * 896 896
+4 * 896 0 896 1 0 0 1
+8 * 896 896
+4 * 896 0 896
+8 +1 896 896
+1 * 896 896

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+2 * 896 0 896
+2 * 896 0 896
+1 * 896 0 0 1 0 0 1
+4 * 896 0 896
+4 * 896 0 896
+4 +2 896 896
+4 * 896
+3 * 896 0 896
cfn=(82)
calls=896 0x4039fc 117 
* * 5376 2688 1792 2 0 0 2
+5 * 896
+3 * 896 0 896
cfi=(3)
cfn=(84)
calls=896 0x4039ed -88 
* * 5376 2688 1792
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(2)
calls=896 0x402d74 645 
* * 11648 5376 1792
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896
+3 * 896
+3 * 896 0 896 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=896 0x403a0a 134 
* * 369265 77875 71292 23 7 37 23 7 37 43115 1686 1792
+5 +4 896 896
+4 * 896
+3 * 896 0 896
cfn=(106)
calls=896 0x40325e 113 
* * 5376 2688 1792 1 0 0 1
+5 * 896
+3 * 896 896
+4 * 896 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(108)
calls=896 0x403a98 565 
* * 22400 8960 7168 2 0 0 2
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(112)
calls=896 0x403a68 547 
* * 22400 8960 7168
+5 * 896
+3 * 896
+3 * 896
+3 * 896
+3 * 896 0 896
cfi=(11)
cfn=(114)
calls=896 0x403ac9 -60 
* * 532066 180564 176088 7 1 41 7 1 41 20292 1106 1788
+5 -3 896 896
+4 * 896 0 896
+4 * 896
jump=896 +28 +4 
* * 
+28 +4 896
+4 * 896 896
+1 * 896 896
+2 * 896 896
+2 * 896 896
+1 * 896 896

fn=(188)
0x403d98 171 904 0 904 1 0 0 1
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 * 904 0 904
+4 +2 904 904
+5 * 904 0 0 0 0 0 0 0 0 904 8
+2 +1 904 904
+4 * 904 904
+4 * 904 904
+4 * 904
+3 * 904
+3 * 904 0 904
cfi=(5)
cfn=(190)
calls=904 0x40452a -65 
* * 122997 33012 20020 0 1 0 0 1 0 27743 63 1808
+5 +1 904 904
+1 * 904 904

fn=(22)
0x404236 167 904 0 904 1 0 0 1
+1 * 904
+3 * 904
+4 * 904 0 904 1 0 0 1
+4 * 904 0 904
+4 0 904 904
+5 0 904 0 0 0 0 0 0 0 0 904
+2 0 904 904
+4 0 904 904
+4 0 904
+5 0 904
+3 0 904
+3 0 904 0 904
fi=(6)
cfi=(5)
cfn=(26)
calls=904 0x404730 99 
* 0 285775 48325 48972 24 21 14 24 21 14 42940 1146 1808
+5 0 904
fi=(6)
jump=904 +7 0 
* 0 
+7 0 904 904
+1 0 904 904

fn=(42)
0x403ba4 565 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+4 * 896 0 896
+4 * 896
+4 * 896 0 0 1 0 0 1
+4 * 896
+3 * 896
+3 * 896 0 896
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=896 0x404468 726 
* * 8960 4480 3584 1 0 0 1
+5 * 896 896
+4 * 896 896
+1 * 896 896

fn=(46)
0x403b74 547 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+3 * 896 0 896
+4 * 896
+4 * 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfi=(10)
cfn=(44)
calls=896 0x404468 726 
* * 8960 4480 3584
+5 * 896 896
+4 * 896 896
+1 * 896 896

fn=(86)
0x403a0a 134 896 0 896
+1 * 896
+3 * 896 0 896
+1 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=896 0x4042e2 -45 
* * 32256 11648 12544 5 0 0 5
+5 +1 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896 1 0 0 1
cfn=(94)
calls=896 0x40432a +43 
* * 317297 59955 52476 17 7 37 17 7 37 43115 1686 1792
+5 * 896
jump=896 +28 * 
* * 
+28 * 896
+4 * 896 896
+1 * 896 896
+1 * 896 896

fn=(88)
0x4042e2 90 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896 1 0 0 1
cfi=(4)
cfn=(90)
calls=896 0x4047b2 +24 
* * 16128 5376 6272 3 0 0 3
+5 * 896 896
+4 * 896 0 896
+7 * 896 896
+4 * 896 0 896
+8 * 896 896
+4 * 896 0 896
+8 +1 896 896
+1 * 896 896

fn=(156)
0x4031ec 159 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+1 * 896
+4 * 896 0 896
+4 +2 896 896
+4 * 896 896 0 1 0 0 1
+4 * 896
+3 * 896 896
+4 * 896 896
+3 * 896
+3 * 896
+3 * 896
+4 * 896
+3 * 896 896
+4 * 896 896
+3 -1 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(158)
calls=896 0x403ce6 +11 
* * 123288 33396 20226 24 5 0 24 5 0 24848 703 1792
+5 +1 896 896
+4 * 896
+3 * 896 0 896
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=896 0x4031b8 -82 
* * 20608 7168 7168 1 0 0 1
+5 * 896
jump=896 +28 * 
* * 
+28 * 896
+4 * 896 896
+1 * 896 896
+1 * 896 896

fn=(172)
0x4031b8 79 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 896
+4 * 896
+3 * 896 0 896
cfi=(4)
cfn=(174)
calls=896 0x403ccc +42 
* * 12544 4480 4480
+5 * 896 896
+1 * 896 896

fn=(202)
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1824 0 1824 1 0 0 1
+1 * 1824
+3 * 1824 0 1824
+4 +1 1824 1824
+4 * 1824 1824 0 0 2 0 0 2
+4 * 1824
+3 * 1824 1824
+4 * 1824 1824
+3 * 1824
+3 * 1824
+3 * 1824
+4 * 1824 1824
+1 * 1824 1824

fn=(106)
0x40325e 113 1816 0 1816 1 0 0 1
+1 * 1816
+3 * 1816 0 1816
+4 +1 1816 1816
+4 * 1816 1816
+1 * 1816 1816

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 944 0 944 1 0 0 1
+1 * 944
+3 * 944
+4 * 944 0 944
+4 +1 944 944
+4 * 944
+3 * 944 0 944 1 0 0 1
cfi=(13)
cfn=(64)
calls=944 -33 -66 
* * 5664 2832 1888
+5 * 944 944
+1 * 944 944

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 1792 0 1792
+1 * 1792
+3 * 1792
+4 * 1792 0 1792
+4 +1 1792 1792
+4 * 1792
+3 * 1792 0 1792
cfi=(13)
cfn=(68)
calls=1792 0x404f1a -58 
* * 28672 10752 8960 2 0 1 2 0 1
+5 * 1792 1792
+1 * 1792 1792

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 896 0 896
+1 * 896
+3 * 896 0 896
+1 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +10 896 896
+4 * 896
+3 * 896 0 896
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=896 0x404bc6 288 
* * 13440 5376 4480 3 0 0 3
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(122)
calls=896 0x404bc6 288 
* * 13440 5376 4480
+5 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=896 0x404be0 -36 
* * 446946 150996 145624 4 1 41 4 1 41 20292 1106 1788
+5 +1 896
+4 * 896 896
+1 * 896 896
+1 * 896 896

fn=(128)
0x404878 277 944 0 944
+1 * 944
+3 * 944
+4 * 944 0 944 1 0 0 1
+4 +1 944 944
+4 * 944
+3 * 944 0 944
cfi=(13)
cfn=(130)
calls=944 -33 -66 
* * 5664 2832 1888 0 0 1 0 0 1
+5 * 944 944
+1 * 944 944

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1792 0 1792
+1 * 1792
+3 * 1792
+4 * 1792 0 1792
+4 +1 1792 1792
+4 * 1792
+3 * 1792 0 1792
cfi=(13)
cfn=(134)
calls=1792 0x404e98 -58 
* * 28672 10752 8960 2 0 0 2
+5 * 1792 1792
+1 * 1792 1792

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +8 896 0 896
+4 +3 896 896
+4 * 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=896 0x404eb5 -22 
* * 350178 118740 112472 1 1 41 1 1 41 20292 1106 1788
+5 +1 896 896
+1 * 896 896

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792
+4 * 1792 0 1792
+4 +1 1792 1792
+4 * 1792
+3 * 1792 0 1792
cfi=(13)
cfn=(124)
calls=1792 0x404d36 -77 
* * 10752 5376 3584 2 0 0 2
+5 * 1792 1792
+1 * 1792 1792

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792
+4 * 1792 0 1792 1 0 0 1
+4 +1 1792 1792
+4 * 1792
+3 * 1792 0 1792
cfi=(13)
cfn=(58)
calls=1792 0x404d8f -77 
* * 10752 5376 3584 1 0 0 1
+5 * 1792 1792
+1 * 1792 1792

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 912 0 912
+1 * 912
+3 * 912
+4 * 912 0 912 1 0 0 1
+4 * 912 0 912
+4 * 912 0 912
+4 +2 912 912
+4 * 912 912
+4 * 912
+3 * 912
+3 * 912
+4 * 912 0 912
+4 +1 912 912
+5 * 912 0 0 0 0 0 0 0 0 912
jcnd=8/912 +33 +2 
* * 
+2 +1 904 904
+4 * 904
+8 * 904 904
+4 * 904 904
+4 * 904
+3 * 904 0 0 1 0 0 1
+3 * 904 0 904 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=904 0x3877c83840 0 
* * 326212 109200 107397 11 2 20 11 2 20 19480 1125 899 223
* * 904 904 0 1 1 0 1 1 0 0 0 904
+5 +1 912 912
+4 * 912
+8 * 912 912
+4 * 912
+3 +1 912 912
+1 * 912 912

fn=(140)
0x404eb5 368 912 0 912
+1 * 912
+3 * 912
+4 * 912 0 912 1 0 0 1
+4 * 912 0 912
+4 * 912 0 912 0 0 1 0 0 1
+4 +2 912 912
+4 * 912 912
+4 * 912
+3 * 912
+3 * 912
+4 * 912 0 912
+4 +1 912 912
+5 * 912 0 0 0 0 0 0 0 0 912
jcnd=8/912 +33 +2 
* * 
+2 +1 904 904
+4 * 904
+8 * 904 904
+4 * 904 904
+4 * 904
+3 * 904
+3 * 904 0 904
cob=(2)
cfi=(9)
cfn=(78)
calls=904 0x3877c83840 0 
* * 326212 109200 107397 0 1 42 0 1 42 19480 1111 899
* * 904 904 0 0 0 0 0 0 0 0 0 904
+5 +1 912 912
+4 * 912
+8 * 912 912
+4 * 912
+3 +1 912 912
+1 * 912 912

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896 1 0 0 1
+4 * 896 0 896
+4 * 896 0 896
+4 +8 896 0 896
+4 +3 896 896
+4 * 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(74)
calls=896 0x404f37 -22 
* * 350178 118740 112472 14 3 3 14 3 3 20292 1121 1788 223
+5 +1 896 896
+1 * 896 896

fn=(126)
0x404be0 424 896 0 896
+1 * 896
+3 * 896 0 896
+2 * 896 0 896
+1 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +4 896 896
+4 * 896
+3 * 896 0 896
cfn=(128)
calls=896 0x404878 277 
* * 13440 5376 4480 1 0 0 1
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(132)
calls=896 0x404d44 277 
* * 22400 8064 7168 2 0 0 2
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(132)
calls=896 0x404d44 277 
* * 22400 8064 7168
+5 * 896
+3 * 896
+3 * 896
+3 * 896 0 896
cfn=(138)
calls=896 0x404d5e -49 
* * 363618 123220 117848 1 1 41 1 1 41 20292 1106 1788
+5 +1 896
+4 * 896 896
+1 * 896 896
+2 * 896 896
+1 * 896 896

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 896 0 896
+1 * 896
+3 * 896 0 896
+1 * 896
+4 * 896 0 896 1 0 0 1
+4 * 896 0 896
+4 * 896 0 896
+4 +10 896 896
+4 * 896
+3 * 896 0 896
cfn=(56)
calls=896 0x404c38 288 
* * 13440 5376 4480 3 0 0 3
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(56)
calls=896 0x404c38 288 
* * 13440 5376 4480
+5 * 896 896
+4 * 896
+3 * 896
+3 * 896 0 896
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=896 0x404c52 -36 
* * 446946 150996 145624 20 3 4 20 3 4 20292 1121 1788 223
+5 +1 896
+4 * 896 896
+1 * 896 896
+1 * 896 896

fn=(60)
0x404c52 424 896 0 896
+1 * 896
+3 * 896 0 896
+2 * 896 0 896
+1 * 896
+4 * 896 0 896
+4 * 896 0 896
+4 * 896 0 896
+4 +4 896 896
+4 * 896
+3 * 896 0 896
cfn=(62)
calls=896 0x40492d 277 
* * 13440 5376 4480 2 0 0 2
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896 1 0 0 1
cfn=(66)
calls=896 0x404d9d 277 
* * 22400 8064 7168 2 0 1 2 0 1
+5 * 896
+3 * 896 896
+4 * 896
+3 * 896 0 896
cfn=(66)
calls=896 0x404d9d 277 
* * 22400 8064 7168
+5 * 896
+3 * 896
+3 * 896
+3 * 896 0 896
cfn=(72)
calls=896 0x404db7 -49 
* * 363618 123220 117848 15 3 3 15 3 3 20292 1121 1788 223
+5 +1 896
+4 * 896 896
+1 * 896 896
+2 * 896 896
+1 * 896 896

fn=(282)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(10)
fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792 0 1792
+4 +1 1792 1792
+4 * 1792 1792
+1 * 1792 1792

fn=(110)
0x404380 726 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792 0 1792
+4 * 1792 0 1792
+4 * 1792 1792
+4 * 1792 1792
+3 * 1792 1792
+4 * 1792 0 1792
+3 * 1792 1792
+1 * 1792 1792

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792 0 1792
+4 +1 1792 1792
+4 * 1792 1792
+1 * 1792 1792

fn=(44)
0x404468 726 1792 0 1792
+1 * 1792
+3 * 1792 0 1792
+4 * 1792 0 1792
+4 * 1792 1792
+4 * 1792 1792
+3 * 1792 1792
+4 * 1792 0 1792 1 0 0 1
+3 * 1792 1792
+1 * 1792 1792

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 904 0 904 1 0 0 1
+1 * 904
+3 * 904 0 904
+4 * 904 0 904 1 0 0 1
+4 * 904 904
+1 * 904 904

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 904 0 904 1 0 0 1
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 +4 904 904
+4 * 904 904
+4 * 904
+3 * 904
+3 * 904 0 904
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=904 0x40454c -14 
* * 5424 1808 2712 1 0 0 1
+5 +2 904 904
+1 * 904 904

fn=(150)
0x40326c 148 904 0 904
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 * 904 0 904
+4 +3 904 904 0 1 0 0 1
+4 * 904 904
+4 * 904
+3 * 904
+3 * 904 0 904
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=904 0x403d1a -29 
* * 16272 5424 6328 3 0 0 3
+5 +1 904 904
+1 * 904 904

fn=(180)
0x40334a 148 904 0 904
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 * 904 0 904
+4 +3 904 904
+4 * 904 904
+4 * 904
+3 * 904
+3 * 904 0 904
cfn=(182)
calls=904 0x403dcc -29 
* * 16272 5424 6328 2 0 0 2
+5 +1 904 904
+1 * 904 904

fn=(152)
0x403d1a 122 904 0 904 1 0 0 1
+1 * 904
+3 * 904
+4 * 904 0 904
+4 * 904 0 904
+4 +4 904 904
+4 * 904 904
+4 * 904
+3 * 904
+3 * 904 0 904
cfn=(154)
calls=904 0x4044f8 -14 
* * 5424 1808 2712 2 0 0 2
+5 +2 904 904
+1 * 904 904

fn=(184)
0x40454c 112 904 0 904 1 0 0 1
+1 * 904
+3 * 904 0 904
+4 * 904 0 904
+4 * 904 904
+1 * 904 904

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2316 429 435 2 2 6 2 2 6 316 33 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 18 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3359 691 643 22 13 7 22 13 7 526 54 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 1 0 1 1 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448
+3 * 448 0 448
cfi=(2)
cfn=(2)
calls=448 0x402d74 645 
* * 5824 2688 896
+5 * 448
+3 * 448 0 448
+3 +1 448 448
+6 * 448 0 448
+3 * 448 448
+6 * 448 0 448
+3 +1 448 448
+6 * 448 0 448 1 0 0 1
+3 * 448 448
+6 * 448 0 448
+3 +2 448 0 448
+7 * 448
jump=448 +86 * 
* * 
+2 +1 101024 101024
+3 * 101024
+3 * 101024 101024
+4 * 101024
+3 * 101024
+3 * 101024 0 101024
cfi=(2)
cfn=(144)
calls=101024 0x402d9a 770 
* * 1111264 505120 303072
+5 * 101024 101024
+4 * 101024 101024
+5 * 101024
+4 * 101024 0 101024
+5 +1 101024 101024
+3 * 101024
+3 * 101024 101024
+4 * 101024
+3 * 101024
+3 * 101024 0 101024
cfi=(2)
cfn=(146)
calls=101024 0x402dba 770 
* * 1111264 505120 303072 1 0 0 1
+5 * 101024 101024
+2 * 101024
+4 * 101024 101024
+5 * 101024
+4 * 101024 0 101024
+5 -2 101024 0 101024
+4 * 101024 101024
+3 * 101024
+3 * 101024 101024
+3 * 101024 0 0 0 0 0 0 0 0 101024 450
jcnd=100576/101024 -93 +1 
* * 
-9 * 448 448 0 1 0 0 1
+3 * 448
+3 * 448 448
+3 * 448 0 0 0 0 0 0 0 0 448
jcnd=448/448 -93 +1 
* * 
+2 +4 448 448
+3 * 448
+3 * 448
+4 * 448 448 0 1 0 0 1
+5 * 448
+4 * 448
+3 * 448 0 448
+5 +1 448 448
+3 * 448
+3 * 448
+4 * 448 448
+5 * 448
+4 * 448
+3 * 448 0 448
+5 +1 448 0 448
+7 * 448
jump=448 0x4016ee * 
* * 
+2 +1 101024 101024
+3 * 101024
+3 * 101024 101024
+4 * 101024
+3 * 101024 0 0 1 0 0 1
+3 * 101024 0 101024
cfi=(2)
cfn=(146)
calls=101024 0x402dba 770 
* * 1111264 505120 303072
+5 * 101024 101024
+2 * 101024
+4 * 101024 101024
+5 * 101024 0 101024
+5 +1 101024 101024
+3 * 101024
+3 * 101024 101024
+4 * 101024
+3 * 101024
+3 * 101024 0 101024
cfi=(2)
cfn=(144)
calls=101024 0x402d9a 770 
* * 1111264 505120 303072
+5 * 101024 101024
+4 * 101024 101024
+5 * 101024 0 101024
+5 +1 101024 101024
+5 * 101024 101024
+5 * 101024 101024
+5 * 101024
+4 * 101024 0 101024
+5 +1 101024 101024
+5 * 101024 101024
+5 * 101024 101024
+5 * 101024
+4 * 101024 0 101024
+5 -4 101024 0 101024
+4 * 101024 101024
+3 * 101024
+3 * 101024 101024
+3 * 101024 0 0 0 0 0 0 0 0 101024 450
jcnd=100576/101024 0x401672 +1 
* * 
-9 * 448 448 0 1 0 0 1
+3 * 448
+3 * 448 448
+3 * 448 0 0 0 0 0 0 0 0 448
jcnd=448/448 0x401672 +1 
* * 
+6 +6 448 448 0 1 0 0 1
+5 * 448 448
+5 * 448 0 448
+5 +2 448 448
+3 +1 448 0 448
+3 * 448 448
+5 * 448 448
+1 * 448 448

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 448
+7 * 448
+7 * 448
+3 * 448
+3 * 448 0 448
cfi=(2)
cfn=(4)
calls=448 0x4030b2 310 
* * 511058 152793 144192 66 22 16 66 22 16 31928 1371 1790 223
+5 * 448
+7 * 448
+7 * 448
+3 * 448
+3 * 448 0 448
cfi=(2)
cfn=(80)
calls=448 0x402ff4 310 
* * 509781 151197 141231 38 8 76 38 8 76 31771 1659 1790
+5 * 448 0 0 1 0 0 1
+7 * 448
+7 * 448
+3 * 448
+3 * 448 0 448
cfn=(142)
calls=448 0x401585 -52 
* * 10535616 4658304 2432192 8 0 0 8 0 0 202944 900
+5 * 448 0 448
+8 * 448 448
+6 * 448 0 448
+6 * 448
+7 * 448
+3 * 448 0 448
cfi=(2)
cfn=(148)
calls=448 0x402df4 414 
* * 111820 35066 24897 33 5 0 33 5 0 12424 354 896
+5 * 448
+7 * 448
+3 * 448 0 448 1 0 0 1
cfi=(2)
cfn=(178)
calls=448 0x402e74 414 
* * 118353 37434 26957 7 1 0 7 1 0 14218 29 896
+5 +2 448
+7 * 448
+7 * 448
+3 * 448
+3 * 448 0 448
cfi=(2)
cfn=(4)
calls=448 0x4030b2 310 
* * 510675 152763 144081 2 1 1 2 1 1 31892 863 1790
+5 * 448
+7 * 448
+7 * 448
+3 * 448
+3 * 448 0 448
cfi=(2)
cfn=(80)
calls=448 0x402ff4 310 
* * 508926 151146 141093 0 0 2 0 0 2 31636 1133 1790
+5 * 448 448
+6 * 448 0 0 1 0 0 1
+7 * 448
+7 * 448 0 448
+6 * 448 448
+8 * 448
+3 * 448
+3 * 448 0 448
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=448 0x401719 -33 
* * 4875584 2030336 1117984 4 0 0 4 0 0 101472 450
+5 * 448 0 448
+8 * 448 448
+6 * 448 0 448
+6 * 448
+7 * 448 0 0 1 0 0 1
+3 * 448 0 448
cfi=(2)
cfn=(148)
calls=448 0x402df4 414 
* * 111820 35066 24897 0 0 0 0 0 0 12424 349 896
+5 * 448
+7 * 448
+3 * 448 0 448
cfi=(2)
cfn=(178)
calls=448 0x402e74 414 
* * 118353 37434 26957 0 0 0 0 0 0 14218 24 896
+5 +2 448 448
+7 * 448
+3 * 448 0 448
cfi=(2)
cfn=(2)
calls=448 0x402d74 645 
* * 5824 2688 896
+5 * 448 448
+6 * 448
+3 * 448
+3 * 448
+3 * 448 448
+7 * 448
+3 * 448 0 0 1 0 0 1
+3 * 448 0 448
cfi=(2)
cfn=(144)
calls=448 0x402d9a 770 
* * 4928 2240 1344
+5 * 448
+3 * 448
+7 * 448
+3 * 448
+3 * 448 0 448
cfi=(2)
cfn=(200)
calls=448 0x402eda 901 
* * 41307 15510 11871 48 43 13 48 43 13 1764 78 47
+5 +1 448 448
+7 * 448
+3 * 448 0 448
cfi=(2)
cfn=(10)
calls=448 0x402f54 645 
* * 5824 2688 896 0 1 0 0 1
+5 * 448 448
+6 * 448
+3 * 448
+3 * 448
+3 * 448 448
+7 * 448 0 0 1 0 0 1
+3 * 448
+3 * 448 0 448
cfi=(2)
cfn=(146)
calls=448 0x402dba 770 
* * 4928 2240 1344
+5 * 448
+3 * 448
+7 * 448
+3 * 448
+3 * 448 0 448
cfi=(2)
cfn=(244)
calls=448 0x402f7a 901 
* * 40297 15265 11666 21 30 44 21 30 44 1563 55 47
+5 +1 448 448
+7 * 448
+3 * 448 0 448
cfi=(2)
cfn=(10)
calls=448 0x402f54 645 
* * 5824 2688 896
+5 * 448 448
+6 * 448
+3 * 448
+3 * 448
+3 * 448 448 0 1 0 0 1
+7 * 448
+3 * 448
+3 * 448 0 448
cfi=(2)
cfn=(146)
calls=448 0x402dba 770 
* * 4928 2240 1344
+5 * 448 448
+2 * 448
+4 * 448 448
+8 * 448 448
+8 * 448 0 448
+8 +1 448 448
+7 * 448
+3 * 448 0 448
cfi=(2)
cfn=(2)
calls=448 0x402d74 645 
* * 5824 2688 896
+5 * 448 448 0 1 0 0 1
+6 * 448
+3 * 448
+3 * 448
+3 * 448 448
+7 * 448
+3 * 448
+3 * 448 0 448
cfi=(2)
cfn=(144)
calls=448 0x402d9a 770 
* * 4928 2240 1344
+5 * 448 448
+4 * 448 448
+8 * 448
+4 * 448 448
+8 * 448
+3 * 448 0 448
+8 +2 448 0 448
+7 -12 448 448
+8 * 448 448
+7 * 448 0 0 0 0 0 0 0 0 448 3
jcnd=1/448 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 448
+7 * 448
+3 * 448 0 448
cfi=(2)
cfn=(2)
calls=448 0x402d74 645 
* * 5824 2688 896 2 0 1 2 0 1
+5 * 448
+3 * 448 448
+7 * 448
+3 * 448 0 448
cfi=(2)
cfn=(2)
calls=448 0x402d74 645 
* * 5824 2688 896 0 1 0 0 1
+5 * 448
+3 * 448 0 0 0 0 0 0 0 0 448 1
+2 * 448 0 0 1 0 0 1
+5 * 448
jump=448 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 448
+2 * 448 0 0 0 0 0 0 0 0 448
jcnd=448/448 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+5 +1 448 448
+4 * 448
+3 * 448 0 448
cfi=(2)
cfn=(2)
calls=448 0x402d74 645 
* * 5824 2688 896
+5 * 448
+3 * 448 0 448
+3 +1 448 448 0 1 0 0 1
+6 * 448 0 448
+3 * 448 448
+6 * 448 0 448
+3 +2 448 0 448
+7 * 448
jump=448 +86 * 
* * 
+2 +1 101024 101024
+3 * 101024
+3 * 101024 101024
+4 * 101024
+3 * 101024
+3 * 101024 0 101024
cfi=(2)
cfn=(144)
calls=101024 0x402d9a 770 
* * 1111264 505120 303072
+5 * 101024 101024
+4 * 101024 101024
+5 * 101024
+4 * 101024 0 101024
+5 +1 101024 101024
+3 * 101024
+3 * 101024 101024
+4 * 101024
+3 * 101024
+3 * 101024 0 101024
cfi=(2)
cfn=(146)
calls=101024 0x402dba 770 
* * 1111264 505120 303072
+5 * 101024 101024
+2 * 101024
+4 * 101024 101024
+5 * 101024
+4 * 101024 0 101024
+5 -2 101024 0 101024
+4 * 101024 101024
+3 * 101024
+3 * 101024 101024
+3 * 101024 0 0 0 0 0 0 0 0 101024 450
jcnd=100576/101024 -93 +1 
* * 
-9 * 448 448 0 1 0 0 1
+3 * 448
+3 * 448 448
+3 * 448 0 0 0 0 0 0 0 0 448
jcnd=448/448 -93 +1 
* * 
+2 +4 448 448
+3 * 448
+3 * 448 0 0 1 0 0 1
+4 * 448 448
+5 * 448
+4 * 448
+3 * 448 0 448
+5 +1 448 448
+3 * 448
+3 * 448
+4 * 448 448
+5 * 448
+4 * 448
+3 * 448 0 448
+5 +1 448 448
+5 * 448 448
+5 * 448 448
+5 * 448 0 0 1 0 0 1
+4 * 448
+3 * 448 0 448
+5 +2 448 448
+3 +1 448 0 448
+3 * 448 448
+5 * 448 448
+1 * 448 448

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1808 0 1808 1 0 0 1
+5 0 1808 0 1808
+5 0 1808
+3 0 1808 0 1808
+5 0 1808
+4 0 1808 1808 0 0 1 0 0 1
+7 0 1808 1808 0 0 1 0 0 1
+3 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808
+6 0 1808 1808 0 0 1 0 0 1
+7 0 1808 1808 0 1 1 0 1 1
+4 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808
+2 0 1808 1808 0 0 1 0 0 1
+3 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808
jcnd=1808/1808 +97 0 
* 0 
+18 0 1808
+3 0 1808
+3 0 1808 0 1808
cfn=(38) _int_malloc
calls=1808 0x3877c79a00 0 
* 0 417695 52115 61467 45 33 57 45 33 57 63981 2861
+5 0 1808
+3 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808
+2 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808
+2 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808 13
+2 0 1808 1808
+7 0 1808 0 0 0 0 0 0 0 0 1808
jcnd=1808/1808 +13 0 
* 0 
+13 0 1808 0 1808
+2 0 1808 0 0 0 0 0 0 0 0 1808 12
+6 0 1808
+3 0 1808 1808
+4 0 1808 1808
+5 0 1808 1808
+5 0 1808
+4 0 1808 1808
+1 0 1808 0 0 1 0 0 1
+5 0 1808 1808 0 0 1 0 0 1
+7 0 1808 0 0 0 0 0 0 0 0 1808
jcnd=1808/1808 +14 0 
* 0 
+14 0 1808 0 1808 1 0 0 1
+3 0 1808 0 0 0 0 0 0 0 0 1808
+6 0 1808
jump=1808 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1808 0 1808 1 0 0 1
+2 0 1808
+3 0 1808
+3 0 1808 0 1808
+2 0 1808
+3 0 1808 0 1808
+1 0 1808
+3 0 1808 0 1808
+1 0 1808
+3 0 1808
+4 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808
+6 0 1808
+4 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808 4
jcnd=10/1808 0x3877c838d1 0 
* 0 
+2 0 1798
+3 0 1798
+3 0 1798
+3 0 1798
+3 0 1798
+3 0 1798 0 0 0 0 0 0 0 0 1798
jcnd=1798/1798 +41 0 
* 0 
+41 0 1798 0 0 1 0 0 1
+3 0 1798 0 0 0 0 0 0 0 0 1798
jcnd=1798/1798 0x3877c839c0 0 
* 0 
+24 0 1798
+3 0 1798
+4 0 1798
+3 0 1798
+3 0 1798
+3 0 1798
+3 0 1798
+3 0 1798 0 0 0 0 0 0 0 0 1798 896
jcnd=906/1798 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 902
+10 0 902 902 0 0 2 0 0 2
+3 0 902
+4 0 902 0 902
+3 0 902
+4 0 902
+4 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 -18 0 
* 0 
-18 0 2762 2762
+3 0 2762
+4 0 2762 0 2762
+3 0 2762
+4 0 2762
+4 0 2762 0 0 0 0 0 0 0 0 2762 8
jcnd=1860/2762 -18 0 
* 0 
+2 0 1808
+4 0 1808
+3 0 1808 1808
+1 0 1808 1808
+1 0 1808 1808
+2 0 1808 1808 0 1 0 0 1
+2 0 1808 1808
0x3877c839c0 0 1798 0 0 1 0 0 1
+3 0 1798
+3 0 1798
+3 0 1798
+4 0 1798 0 1798 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1798 0x3877c89b20 0 
* 0 550186 205696 202100 6 1 61 6 1 61 26276 1328 1798 223
+5 0 1798
jump=1798 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1808 1808 0 1 1 0 1 1
+7 0 1808 1808 0 0 1 0 0 1
+3 0 1808
+3 0 1808 0 0 1 0 0 1 0 0 1808
+6 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808
+6 0 1808 1808 0 0 1 0 0 1
+4 0 1808
+4 0 1808
+2 0 1808 0 0 0 0 0 0 0 0 1808
+2 0 1808
+2 0 1808
+7 0 1808 0 0 0 0 0 0 0 0 1808
jcnd=1808/1808 +14 0 
* 0 
+14 0 1808
+2 0 1808
cfn=(170) _int_free
calls=1808 0x3877c78650 0 
* 0 176847 46807 26877 19 2 0 19 2 0 42849 773

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 5
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 2
jcnd=10/12 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1808 0 1808 1 0 0 1
+2 0 1808 0 1808
+2 0 1808 0 1808
+2 0 1808
+3 0 1808 0 1808
+2 0 1808 0 1808
+1 0 1808 0 1808
+1 0 1808
+3 0 1808
+4 0 1808 1808
+4 0 1808 0 1808
+4 0 1808
+3 0 1808
+4 0 1808
+3 0 1808
+3 0 1808
+3 0 1808 0 0 1 0 0 1 0 0 1808
+6 0 1808
+4 0 1808 0 0 0 0 0 0 0 0 1808
+6 0 1808
+4 0 1808 0 0 0 0 0 0 0 0 1808
+6 0 1808 1808
+7 0 1808 0 0 0 0 0 0 0 0 1808 2
jcnd=1684/1808 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1684
+2 0 1684 0 0 0 0 0 0 0 0 1684
+6 0 1684 1684 0 1 0 0 1
+4 0 1684
+3 0 1684
+2 0 1684 0 0 0 0 0 0 0 0 1684
jcnd=1684/1684 0x3877c78a40 0 
* 0 
+6 0 1684 1684
+4 0 1684
+3 0 1684 0 0 0 0 0 0 0 0 1684
+6 0 1684 1684
+5 0 1684
+4 0 1684 0 0 0 0 0 0 0 0 1684
jcnd=1684/1684 0x3877c7907c 0 
* 0 
+6 0 1684 1684
+5 0 1684
+4 0 1684 0 0 0 0 0 0 0 0 1684
+6 0 1684
+4 0 1684 0 0 1 0 0 1 0 0 1684
+6 0 1684
+4 0 1684 1684
+7 0 1684 0 0 0 0 0 0 0 0 1684
+6 0 1684 1684
+6 0 1684
+2 0 1684 0 0 0 0 0 0 0 0 1684
+6 0 1684 1684
+4 0 1684 0 0 0 0 0 0 0 0 1684 5
jcnd=1680/1684 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1684 1684 0 1 0 0 1
+4 0 1684 0 0 0 0 0 0 0 0 1684 626
jcnd=678/1684 0x3877c78bf0 0 
* 0 
+6 0 1006 1006 0 0 1 0 0 1
+6 0 1006 0 0 1 0 0 1 0 0 1006 64
jcnd=61/1006 0x3877c78a78 0 
* 0 
+6 0 945 945
+5 0 945 945
+5 0 945 945
+4 0 945 0 0 0 0 0 0 0 0 945
+6 0 945 945
+4 0 945 0 0 0 0 0 0 0 0 945
+6 0 945 945
+9 0 945 0 945
+4 0 945 0 945
+4 0 945 0 0 0 0 0 0 0 0 945 4
jcnd=937/945 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 945
+3 0 945
+4 0 945 945
+4 0 945 945
+4 0 945 0 0 0 0 0 0 0 0 945
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 1006
+7 0 1006 0 1006
+4 0 1006 0 1006
+4 0 1006 0 0 0 0 0 0 0 0 1006 68
jcnd=441/1006 +18 0 
* 0 
+2 0 565 0 565
+8 0 565 0 565
+8 0 565 0 565
+4 0 565
+3 0 565 0 565 1 0 0 1
+4 0 565
+4 0 565 0 565
+4 0 565 0 565
+4 0 565
+7 0 565 0 0 0 0 0 0 0 0 565
jcnd=565/565 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 678
+7 0 678 0 0 0 0 0 0 0 0 678
jcnd=678/678 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1684 0 0 1 0 0 1
+5 0 1684 1684
+4 0 1684 1684
+7 0 1684 0 0 0 0 0 0 0 0 1684
jcnd=1684/1684 +16 0 
* 0 
+16 0 1684 0 1684
+5 0 1684 0 0 0 0 0 0 0 0 1684
+6 0 1684
+3 0 1684
jump=1684 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1684 1684 0 1 0 0 1
+4 0 1684
+2 0 1684 0 0 0 0 0 0 0 0 1684
+6 0 1684 1684
+7 0 1684 0 0 0 0 0 0 0 0 1684
jcnd=1684/1684 +15 0 
* 0 
+15 0 1684 0 1684 1 0 0 1
+4 0 1684 0 0 0 0 0 0 0 0 1684 2
+6 0 1684
+4 0 1684 1684
+1 0 1684 1684
+1 0 1684 1684
+2 0 1684 1684
+2 0 1684 1684
+2 0 1684 1684
+2 0 1684 1684
0x3877c78bf0 0 678 0 0 1 0 0 1
+3 0 678 0 678
+4 0 678
+3 0 678
+4 0 678 0 678 1 0 0 1
+4 0 678
jump=678 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1684 1684 0 1 1 0 1 1
+4 0 1684 0 0 1 0 0 1
+7 0 1684
+4 0 1684
+3 0 1684
+3 0 1684 0 0 0 0 0 0 0 0 1684
jcnd=1684/1684 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1798 0 0 1 0 0 1
+7 0 1798
+3 0 1798
+3 0 1798 1798 0 0 1 0 0 1
+4 0 1798
+4 0 1798 0 0 0 0 0 0 0 0 0 0 1798 223
jump=216 0x3877c89be8 0 
* 0 
jump=234 0x3877c89bd0 0 
* 0 
jump=224 0x3877c89bb8 0 
* 0 
jump=224 +11 0 
* 0 
jump=224 0x3877c89c48 0 
* 0 
jump=226 0x3877c89c30 0 
* 0 
jump=224 0x3877c89c18 0 
* 0 
jump=226 0x3877c89c00 0 
* 0 
+11 0 224 224
+3 0 224
+4 0 224
+4 0 224 224
+4 0 224
+4 0 224 0 224
+4 0 224
+9 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-40 0 24926 24926
+4 0 24926 0 24926 0 0 3 0 0 3
+4 0 24926 24926
+4 0 24926 0 24926 0 0 15 0 0 15
+4 0 24926 24926
+4 0 24926 0 24926 0 0 1 0 0 1
+4 0 24926 24926
+4 0 24926 0 24926
+4 0 24926
+4 0 24926
+4 0 24926 0 0 0 0 0 0 0 0 24926 1324
jcnd=1762/24926 0x3877c89c60 0 
* 0 
-32 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226
+4 0 226
+4 0 226 0 0 0 0 0 0 0 0 226
jcnd=10/226 0x3877c89c60 0 
* 0 
-24 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-16 0 226 226 0 1 0 0 1
+4 0 226 0 226
+4 0 226 0 0 1 0 0 1
+4 0 226
+4 0 226 0 0 0 0 0 0 0 0 226 4
jcnd=10/226 0x3877c89c60 0 
* 0 
+6 0 24028
+4 0 24028 24028
+3 0 24028 0 24028 0 0 20 0 0 20
+3 0 24028 24028
+4 0 24028 0 24028 0 0 3 0 0 3
+4 0 24028 24028
+4 0 24028 0 24028 0 0 18 0 0 18
+4 0 24028 24028
+4 0 24028 0 24028
+4 0 24028
jump=24028 -80 0 
* 0 
-30 0 216 216
+3 0 216 0 216
+3 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216 0 0 1 0 0 1
+4 0 216 216
+4 0 216 0 216
+4 0 216
jump=216 -80 0 
* 0 
-24 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234
jump=234 -80 0 
* 0 
-16 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
jump=224 -80 0 
* 0 
+8 0 224 224
+3 0 224
+4 0 224 0 0 1 0 0 1
+4 0 224
+4 0 224
jump=224 -39 0 
* 0 
+9 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+6 0 234 234
+3 0 234
+4 0 234
jump=234 -72 0 
* 0 
+8 0 216
+4 0 216 216
+3 0 216 0 0 0 0 0 0 0 0 216
+2 0 216
+4 0 216
jump=216 -99 0 
* 0 
+11 0 226 226 0 1 0 0 1
+3 0 226
+4 0 226
+4 0 226
+4 0 226
jump=226 0x3877c89b78 0 
* 0 
+9 0 224 224
+3 0 224
+4 0 224
+4 0 224
+4 0 224
jump=224 0x3877c89b70 0 
* 0 
+9 0 226 226
+3 0 226
+4 0 226
+4 0 226
+4 0 226
jump=226 0x3877c89b68 0 
* 0 
+9 0 224 224
+3 0 224
+4 0 224
+4 0 224
+4 0 224
jump=224 0x3877c89b60 0 
* 0 
+9 0 1798 0 1798 1 0 0 1
+3 0 1798 1798

fn=(104) alloc_perturb
0x3877c77180 0 1674 1674 0 1 0 0 1
+6 0 1674
+2 0 1674 0 0 0 0 0 0 0 0 1674 1
+2 0 1674 1674

fn=(38)
0x3877c79a00 0 1808 0 1808 1 0 0 1
+2 0 1808
+3 0 1808 0 1808
+2 0 1808 0 1808
+2 0 1808 0 1808 0 0 1 0 0 1
+2 0 1808
+3 0 1808 0 1808
+1 0 1808 0 1808
+1 0 1808
+4 0 1808
+4 0 1808 0 0 0 0 0 0 0 0 1808
+6 0 1808
+4 0 1808
+6 0 1808
+3 0 1808
+4 0 1808
+4 0 1808
+4 0 1808
+3 0 1808 0 0 0 0 0 0 0 0 1808
+6 0 1808 1808 0 1 1 0 1 1
+7 0 1808 0 0 0 0 0 0 0 0 1808 5
jcnd=1686/1808 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1674
+4 0 1674 1674
+1 0 1674 1674
+1 0 1674 1674
+2 0 1674 1674
+2 0 1674 1674
+2 0 1674 1674
+2 0 1674 1674
+7 0 1703
+7 0 1703 0 0 1 0 0 1 0 0 1703 5
jcnd=800/1703 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 11 0 0 11
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 800 0 0 1 0 0 1
+3 0 800
+4 0 800
+4 0 800 0 0 1 0 0 1 0 0 800
jcnd=800/800 0x3877c7a1a4 0 
* 0 
+30 0 800 800
+6 0 800
+5 0 800 0 0 0 0 0 0 0 0 800 1
jcnd=799/800 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 899 238 192 8 2 0 8 2 0 185 20
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1702 0 0 1 0 0 1
+3 0 1702
+3 0 1702
+3 0 1702
+4 0 1702
+3 0 1702
+4 0 1702 0 1702
+5 0 1702
+3 0 1702 0 1702
+4 0 1702 0 1702
+4 0 1702 0 1702
+5 0 1702
+3 0 1702
+3 0 1702
+3 0 1702
+3 0 1702
+4 0 1702
+4 0 1702 0 0 1 0 0 1
+4 0 1702 0 1702
+4 0 1702
+4 0 1702 0 1702
+5 0 1702 0 1702
+5 0 1702
+3 0 1702
+3 0 1702 0 1702
+5 0 1702
+5 0 1702
+3 0 1702 0 1702
+4 0 1702 0 1702
+4 0 1702
+6 0 1702 0 1702
+4 0 1702 0 1702
+5 0 1702 0 0 1 0 0 1
+3 0 1702
+3 0 1702
+3 0 1702
jump=1702 +87 0 
* 0 
+8 0 1178
+3 0 1178
+4 0 1178
+2 0 1178
+2 0 1178
+3 0 1178
+3 0 1178
+3 0 1178
+2 0 1178
+2 0 1178
+5 0 1178
+2 0 1178 1178 0 0 2 0 0 2
+4 0 1178
+3 0 1178
+4 0 1178 0 1178
+4 0 1178 0 1178
+8 0 1178
+7 0 1178 0 1178
+4 0 1178 0 1178 0 0 1 0 0 1
+4 0 1178 0 1178
+4 0 1178 0 0 0 0 0 0 0 0 1178
-38 0 555
+3 0 555
+4 0 555 0 555
+4 0 555 0 555
+8 0 555
+7 0 555 0 555
+4 0 555 0 555
+4 0 555 0 555
+4 0 555 0 0 0 0 0 0 0 0 555
+6 0 3436 3436 0 1 0 0 1
+4 0 3436
+3 0 3436 0 0 0 0 0 0 0 0 3436 169
jcnd=1654/3436 0x3877c79ef0 0 
* 0 
+6 0 1782 1782
+4 0 1782 1782 0 0 1 0 0 1
+4 0 1782
+4 0 1782 0 0 0 0 0 0 0 0 1782
+6 0 1782 1782 0 1 1 0 1 1
+7 0 1782 0 0 0 0 0 0 0 0 1782
+6 0 1782
+4 0 1782
+7 0 1782 0 0 0 0 0 0 0 0 1782 4
jcnd=872/1782 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1762
+3 0 1762 0 1762
+4 0 1762 0 1762
+5 0 1762 0 0 0 0 0 0 0 0 1762 13
jcnd=29/1762 0x3877c7a090 0 
* 0 
+6 0 1733
+7 0 1733 0 0 0 0 0 0 0 0 1733 475
jcnd=1178/1733 0x3877c79c50 0 
* 0 
+6 0 555 0 0 1 0 0 1
+3 0 555
+4 0 555
+4 0 555 0 0 0 0 0 0 0 0 555 1
+6 0 555
+3 0 555
+4 0 555
+2 0 555
+2 0 555
+3 0 555
+3 0 555
+8 0 555
+3 0 555
+2 0 555
+2 0 555
+4 0 555 555 0 0 2 0 0 2
+4 0 555
+3 0 555 0 0 1 0 0 1 0 0 555 9
jcnd=555/555 0x3877c79e15 0 
* 0 
0x3877c79e15 0 555 0 555
+4 0 555 0 555
+4 0 555
+3 0 555
jump=555 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 333
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 1654 0 0 1 0 0 1
+7 0 1654
+3 0 1654 0 0 0 0 0 0 0 0 1654 2
jcnd=792/1654 0x3877c7a0b0 0 
* 0 
+6 0 1638 1638 0 1 0 0 1
+4 0 1638
+3 0 1638
+3 0 1638
+2 0 1638
+4 0 1638
+3 0 1638
+3 0 1638
+2 0 1638
+2 0 1638
+2 0 1638
+2 0 1638 1638 0 0 1 0 0 1
+8 0 1638
+5 0 1638
+5 0 1638
+2 0 1638 0 0 0 0 0 0 0 0 1638
-2 0 775
+2 0 775 0 0 0 0 0 0 0 0 775
+2 0 2413
+2 0 2413 0 0 0 0 0 0 0 0 2413 34
jcnd=1458/2413 +64 0 
* 0 
+2 0 955
+8 0 955
+3 0 955
+3 0 955 0 0 0 0 0 0 0 0 955 1
jcnd=1/955 0x3877c79fc0 0 
* 0 
-6 0 1104
+3 0 1104
+3 0 1104 0 0 0 0 0 0 0 0 1104 9
jcnd=679/1104 0x3877c79fc0 0 
* 0 
+2 0 1379
+2 0 1379 1379
+8 0 1379
+2 0 1379 0 0 0 0 0 0 0 0 1379 22
jcnd=1104/1379 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 11543
+4 0 11543
+2 0 11543
+2 0 11543 0 0 0 0 0 0 0 0 11543 812
jcnd=9979/11543 -8 0 
* 0 
-2 0 1458 0 0 1 0 0 1
+2 0 1458 0 0 0 0 0 0 0 0 1458 17
jcnd=1351/1458 -8 0 
* 0 
+2 0 1733 1733 0 0 5 0 0 5
+4 0 1733 0 0 1 0 0 1
+3 0 1733 0 0 0 0 0 0 0 0 1733 762
jcnd=958/1733 0x3877c7a1cf 0 
* 0 
+6 0 775
+2 0 775
+4 0 775
+2 0 775
+2 0 775
+2 0 775 0 775
+8 0 775
jump=775 0x3877c79f30 0 
* 0 
+37 0 680 680 0 1 0 0 1
+5 0 680 680
+4 0 680
+4 0 680 680
+5 0 680 0 0 0 0 0 0 0 0 680
jcnd=680/680 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 792 792
+4 0 792
+4 0 792
+2 0 792
+5 0 792 792 0 1 1 0 1 1
+4 0 792
+3 0 792 0 0 0 0 0 0 0 0 792 8
jcnd=760/792 0x3877c79f00 0 
* 0 
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 6
jcnd=16/32 0x3877c79f00 0 
* 0 
+6 0 16
+3 0 16 16
+4 0 16 16
+4 0 16
+3 0 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a650 0 
* 0 
+26 0 16 0 0 1 0 0 1
+3 0 16 16
+4 0 16
+3 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16 2
+6 0 16 16
+8 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16 0 1 0 0 1
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 16
jcnd=16/16 0x3877c7a659 0 
* 0 
+6 0 16
+4 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c7a2e3 0 
* 0 
+6 0 8 8
+4 0 8
+7 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+4 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c7a285 0 
* 0 
+31 0 800 0 0 1 0 0 1
+3 0 800 0 800
+4 0 800
jump=800 0x3877c79b99 0 
* 0 
+36 0 958 958 0 1 1 0 1 1
+4 0 958 958 0 0 1 0 0 1
+4 0 958
+3 0 958 958
+4 0 958
+4 0 958
+3 0 958
+3 0 958 958
+4 0 958 0 0 0 0 0 0 0 0 958
+6 0 958 958
+4 0 958 0 0 0 0 0 0 0 0 958
+6 0 958 958 0 1 0 0 1
+8 0 958 0 958
+4 0 958 0 958
+4 0 958 0 0 0 0 0 0 0 0 958 12
jcnd=418/958 +38 0 
* 0 
+2 0 540 540 0 0 1 0 0 1
+4 0 540
+3 0 540 0 0 0 0 0 0 0 0 540
+2 0 540 540
+5 0 540 0 0 0 0 0 0 0 0 540
+6 0 540 540
+4 0 540 0 540
+4 0 540 540
+4 0 540 0 540
+4 0 540
+4 0 540 0 0 0 0 0 0 0 0 540
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 937 937
+4 0 937 937 0 1 0 0 1
+4 0 937 0 0 0 0 0 0 0 0 937
+6 0 937
+4 0 937
+7 0 937 0 937 0 0 7 0 0 7
+4 0 937 0 937
+4 0 937 0 937
+4 0 937 0 937
+4 0 937 0 0 0 0 0 0 0 0 937 3
jcnd=472/937 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 472
+7 0 472 0 0 0 0 0 0 0 0 472
jcnd=472/472 +18 0 
* 0 
+2 0 7 0 7 0 0 2 0 0 2
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 938
+7 0 938 0 938
+4 0 938
+3 0 938
+3 0 938
+4 0 938
+3 0 938
+4 0 938
+3 0 938
+3 0 938
+4 0 938 0 938
+4 0 938 0 938 0 0 1 0 0 1
+4 0 938
jump=938 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 974
+4 0 974 0 0 1 0 0 1
+3 0 974
+3 0 974 0 974
cfn=(104)
calls=974 0x3877c77180 0 
* 0 3896 1948 0 1 0 0 1 0 0 974
+5 0 974
+3 0 974
jump=974 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 680 0 0 1 0 0 1
+7 0 680
+2 0 680
+4 0 680
+3 0 680
+3 0 680 0 680
+5 0 680
+3 0 680
+4 0 680
+3 0 680 0 0 1 0 0 1
+4 0 680
+4 0 680
+3 0 680
+4 0 680 0 680
+4 0 680 0 680 0 0 24 0 0 24
+4 0 680
+3 0 680
+3 0 680 0 680
cfn=(104)
calls=680 0x3877c77180 0 
* 0 2720 1360 0 0 0 0 0 0 0 680 1
+5 0 680
+3 0 680
jump=680 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 16 16 0 1 0 0 1
+4 0 16
jump=16 0x3877c7a10e 0 
* 0 
+5 0 16 16
+5 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 0x3877c7a14b 0 
* 0 

totals: 18107840 7508605 4272211 241 114 154 241 114 154 489600 7269 10838 223
