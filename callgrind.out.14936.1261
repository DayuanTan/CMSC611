version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1261


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1628801757 - 1630297000
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1536 0 0 1 0 0 1
+3 0 1536 0 0 0 0 0 0 0 0 1536
+2 0 1536
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1536 0x3877c7b8b0 0 
* 0 183751 48007 26049 21 4 0 21 4 0 45337 609
* 0 1536 1536 0 1 1 0 1 1 0 0 0 1536

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1536 0 1536 1 0 0 1
+1 0 1536
+5 0 1536
+3 0 1536 0 1536
+1 0 1536
+4 0 1536 0 0 1 0 0 1
+3 0 1536
+4 0 1536
+3 0 1536 0 1536 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1536 0x3877c7aa50 0 
* 0 464757 66629 68940 51 42 55 51 42 55 79613 3710
* 0 1536 1536 0 1 1 0 1 1 0 0 0 1536
+5 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536
jcnd=1536/1536 +96 0 
* 0 
+96 0 1536 0 0 1 0 0 1
+4 0 1536 1536
+1 0 1536 1536
+1 0 1536 1536

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 380 0 380 1 0 0 1
+1 * 380
+3 * 380
+4 * 380 0 380
+4 * 380 0 380
+4 +1 380 380
+4 * 380
+3 * 380 0 380
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=380 0x402d74 645 
* * 4940 2280 760
+5 * 380
+3 * 380 0 380
+3 +1 380 380
+6 * 380 0 380
+3 * 380 380
+6 * 380 0 380
+3 +1 380 380
+6 * 380 0 380 1 0 0 1
+3 * 380 380
+6 * 380 0 380
+3 +2 380 0 380
+7 * 380
jump=380 +86 * 
* * 
+2 +1 72770 72770
+3 * 72770
+3 * 72770 72770
+4 * 72770
+3 * 72770
+3 * 72770 0 72770
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=72770 0x402d9a 770 
* * 800470 363850 218310
+5 * 72770 72770
+4 * 72770 72770
+5 * 72770
+4 * 72770 0 72770
+5 +1 72770 72770
+3 * 72770
+3 * 72770 72770
+4 * 72770
+3 * 72770
+3 * 72770 0 72770
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=72770 0x402dba 770 
* * 800470 363850 218310 1 0 0 1
+5 * 72770 72770
+2 * 72770
+4 * 72770 72770
+5 * 72770
+4 * 72770 0 72770
+5 -2 72770 0 72770
+4 * 72770 72770
+3 * 72770
+3 * 72770 72770
+3 * 72770 0 0 0 0 0 0 0 0 72770 381
jcnd=72390/72770 -93 +1 
* * 
-9 * 380 380 0 1 0 0 1
+3 * 380
+3 * 380 380
+3 * 380 0 0 0 0 0 0 0 0 380
jcnd=380/380 -93 +1 
* * 
+2 +4 380 380
+3 * 380
+3 * 380
+4 * 380 380 0 1 0 0 1
+5 * 380
+4 * 380
+3 * 380 0 380
+5 +1 380 380
+3 * 380
+3 * 380
+4 * 380 380
+5 * 380
+4 * 380
+3 * 380 0 380
+5 +1 380 0 380
+7 * 380
jump=380 0x4016ee * 
* * 
+2 +1 72770 72770
+3 * 72770
+3 * 72770 72770
+4 * 72770
+3 * 72770 0 0 1 0 0 1
+3 * 72770 0 72770
cfi=(2)
cfn=(146)
calls=72770 0x402dba 770 
* * 800470 363850 218310
+5 * 72770 72770
+2 * 72770
+4 * 72770 72770
+5 * 72770 0 72770
+5 +1 72770 72770
+3 * 72770
+3 * 72770 72770
+4 * 72770
+3 * 72770
+3 * 72770 0 72770
cfi=(2)
cfn=(144)
calls=72770 0x402d9a 770 
* * 800470 363850 218310
+5 * 72770 72770
+4 * 72770 72770
+5 * 72770 0 72770
+5 +1 72770 72770
+5 * 72770 72770
+5 * 72770 72770
+5 * 72770
+4 * 72770 0 72770
+5 +1 72770 72770
+5 * 72770 72770
+5 * 72770 72770
+5 * 72770
+4 * 72770 0 72770
+5 -4 72770 0 72770
+4 * 72770 72770
+3 * 72770
+3 * 72770 72770
+3 * 72770 0 0 0 0 0 0 0 0 72770 381
jcnd=72390/72770 0x401672 +1 
* * 
-9 * 380 380 0 1 0 0 1
+3 * 380
+3 * 380 380
+3 * 380 0 0 0 0 0 0 0 0 380
jcnd=380/380 0x401672 +1 
* * 
+6 +6 380 380 0 1 0 0 1
+5 * 380 380
+5 * 380 0 380
+5 +2 380 380
+3 +1 380 0 380
+3 * 380 380
+5 * 380 380
+1 * 380 380

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 380
+7 * 380
+7 * 380
+3 * 380
+3 * 380 0 380
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=380 0x4030b2 310 
* * 427046 123966 117480 67 21 15 67 21 15 28404 1499 1518 189
+5 * 380
+7 * 380
+7 * 380
+3 * 380
+3 * 380 0 380
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=380 0x402ff4 310 
* * 427407 123667 115428 45 12 78 45 12 78 28907 1538 1518
+5 * 380 0 0 1 0 0 1
+7 * 380
+7 * 380
+3 * 380
+3 * 380 0 380
cfn=(142)
calls=380 0x401585 -52 
* * 7592780 3356920 1752940 8 0 0 8 0 0 146300 762
+5 * 380 0 380
+8 * 380 380
+6 * 380 0 380
+6 * 380
+7 * 380
+3 * 380 0 380
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=380 0x402df4 414 
* * 100056 31536 22739 33 6 0 33 6 0 11926 102 760
+5 * 380
+7 * 380
+3 * 380 0 380 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=380 0x402e74 414 
* * 100425 31780 22853 7 0 0 7 0 0 12072 199 760
+5 +2 380
+7 * 380
+7 * 380
+3 * 380
+3 * 380 0 380
cfi=(2)
cfn=(4)
calls=380 0x4030b2 310 
* * 426835 123953 117391 4 0 1 4 0 1 28400 1139 1518
+5 * 380
+7 * 380
+7 * 380
+3 * 380
+3 * 380 0 380
cfi=(2)
cfn=(80)
calls=380 0x402ff4 310 
* * 426800 123618 115317 2 9 2 2 9 2 28817 1318 1518
+5 * 380 380
+6 * 380 0 0 1 0 0 1
+7 * 380
+7 * 380 0 380
+6 * 380 380
+8 * 380
+3 * 380
+3 * 380 0 380
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=380 0x401719 -33 
* * 3515380 1463760 806170 4 0 0 4 0 0 73150 381
+5 * 380 0 380
+8 * 380 380
+6 * 380 0 380
+6 * 380
+7 * 380 0 0 1 0 0 1
+3 * 380 0 380
cfi=(2)
cfn=(148)
calls=380 0x402df4 414 
* * 100056 31536 22739 0 0 0 0 0 0 11926 98 760
+5 * 380
+7 * 380
+3 * 380 0 380
cfi=(2)
cfn=(178)
calls=380 0x402e74 414 
* * 100425 31780 22853 0 0 0 0 0 0 12072 196 760
+5 +2 380 380
+7 * 380
+3 * 380 0 380
cfi=(2)
cfn=(2)
calls=380 0x402d74 645 
* * 4940 2280 760
+5 * 380 380
+6 * 380
+3 * 380
+3 * 380
+3 * 380 380
+7 * 380
+3 * 380 0 0 1 0 0 1
+3 * 380 0 380
cfi=(2)
cfn=(144)
calls=380 0x402d9a 770 
* * 4180 1900 1140
+5 * 380
+3 * 380
+7 * 380
+3 * 380
+3 * 380 0 380
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=380 0x402eda 901 
* * 36970 13746 10577 38 28 11 38 28 11 1642 78 47
+5 +1 380 380
+7 * 380
+3 * 380 0 380
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=380 0x402f54 645 
* * 4940 2280 760 0 1 0 0 1
+5 * 380 380
+6 * 380
+3 * 380
+3 * 380
+3 * 380 380
+7 * 380 0 0 1 0 0 1
+3 * 380
+3 * 380 0 380
cfi=(2)
cfn=(146)
calls=380 0x402dba 770 
* * 4180 1900 1140
+5 * 380
+3 * 380
+7 * 380
+3 * 380
+3 * 380 0 380
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=380 0x402f7a 901 
* * 36104 13510 10390 21 27 42 21 27 42 1464 67 47
+5 +1 380 380
+7 * 380
+3 * 380 0 380
cfi=(2)
cfn=(10)
calls=380 0x402f54 645 
* * 4940 2280 760
+5 * 380 380
+6 * 380
+3 * 380
+3 * 380
+3 * 380 380 0 1 0 0 1
+7 * 380
+3 * 380
+3 * 380 0 380
cfi=(2)
cfn=(146)
calls=380 0x402dba 770 
* * 4180 1900 1140
+5 * 380 380
+2 * 380
+4 * 380 380
+8 * 380 380
+8 * 380 0 380
+8 +1 380 380
+7 * 380
+3 * 380 0 380
cfi=(2)
cfn=(2)
calls=380 0x402d74 645 
* * 4940 2280 760
+5 * 380 380 0 1 0 0 1
+6 * 380
+3 * 380
+3 * 380
+3 * 380 380
+7 * 380
+3 * 380
+3 * 380 0 380
cfi=(2)
cfn=(144)
calls=380 0x402d9a 770 
* * 4180 1900 1140
+5 * 380 380
+4 * 380 380
+8 * 380
+4 * 380 380
+8 * 380
+3 * 380 0 380
+8 +2 380 0 380
+7 -12 380 380
+8 * 380 380
+7 * 380 0 0 0 0 0 0 0 0 380 2
jcnd=1/380 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 380
+7 * 380
+3 * 380 0 380
cfi=(2)
cfn=(2)
calls=380 0x402d74 645 
* * 4940 2280 760 2 0 1 2 0 1
+5 * 380
+3 * 380 380
+7 * 380
+3 * 380 0 380
cfi=(2)
cfn=(2)
calls=380 0x402d74 645 
* * 4940 2280 760 0 1 0 0 1
+5 * 380
+3 * 380 0 0 0 0 0 0 0 0 380 1
+2 * 380 0 0 1 0 0 1
+5 * 380
jump=380 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 380
+2 * 380 0 0 0 0 0 0 0 0 380
jcnd=380/380 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 380 0 380
+1 * 380
+3 * 380
+4 * 380 0 380
+4 * 380 0 380
+4 * 380 0 380
+5 +1 380 380
+4 * 380
+3 * 380 0 380
cfi=(2)
cfn=(2)
calls=380 0x402d74 645 
* * 4940 2280 760
+5 * 380
+3 * 380 0 380
+3 +1 380 380 0 1 0 0 1
+6 * 380 0 380
+3 * 380 380
+6 * 380 0 380
+3 +2 380 0 380
+7 * 380
jump=380 +86 * 
* * 
+2 +1 72770 72770
+3 * 72770
+3 * 72770 72770
+4 * 72770
+3 * 72770
+3 * 72770 0 72770
cfi=(2)
cfn=(144)
calls=72770 0x402d9a 770 
* * 800470 363850 218310
+5 * 72770 72770
+4 * 72770 72770
+5 * 72770
+4 * 72770 0 72770
+5 +1 72770 72770
+3 * 72770
+3 * 72770 72770
+4 * 72770
+3 * 72770
+3 * 72770 0 72770
cfi=(2)
cfn=(146)
calls=72770 0x402dba 770 
* * 800470 363850 218310
+5 * 72770 72770
+2 * 72770
+4 * 72770 72770
+5 * 72770
+4 * 72770 0 72770
+5 -2 72770 0 72770
+4 * 72770 72770
+3 * 72770
+3 * 72770 72770
+3 * 72770 0 0 0 0 0 0 0 0 72770 381
jcnd=72390/72770 -93 +1 
* * 
-9 * 380 380 0 1 0 0 1
+3 * 380
+3 * 380 380
+3 * 380 0 0 0 0 0 0 0 0 380
jcnd=380/380 -93 +1 
* * 
+2 +4 380 380
+3 * 380
+3 * 380 0 0 1 0 0 1
+4 * 380 380
+5 * 380
+4 * 380
+3 * 380 0 380
+5 +1 380 380
+3 * 380
+3 * 380
+4 * 380 380
+5 * 380
+4 * 380
+3 * 380 0 380
+5 +1 380 380
+5 * 380 380
+5 * 380 380
+5 * 380 0 0 1 0 0 1
+4 * 380
+3 * 380 0 380
+5 +2 380 380
+3 +1 380 0 380
+3 * 380 380
+5 * 380 380
+1 * 380 380

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 760
+4 * 760
+3 * 760 0 760
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=760 0x4044cc -35 
* * 3800 1520 1520
+5 * 760 760
+1 * 760 760

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 760 0 760 1 0 0 1
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760 1 0 0 1
+4 +1 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=760 0x4049d4 -35 
* * 4560 1520 2280 1 0 0 1
+5 * 760 760
+1 * 760 760

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 760 0 760 1 0 0 1
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 760
+4 * 760
+3 * 760 0 760
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=760 0x404520 -35 
* * 3800 1520 1520
+5 * 760 760
+1 * 760 760

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 760 0 760 1 0 0 1
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=760 0x404a28 -35 
* * 4560 1520 2280 1 0 1 1 0 1
+5 * 760 760
+1 * 760 760

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 380 0 380
+1 * 380
+3 * 380
+4 * 380 0 380
+4 * 380 0 380
+4 * 380 0 380
+4 +1 380 380
+4 * 380 380
+4 * 380 380
+4 * 380
+3 * 380
+3 * 380 0 380
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=380 0x403df2 -87 
* * 9120 3040 3420 0 24 4 0 24 4 380 2
+5 * 380 380
+1 * 380 380

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 760 0 760 1 0 0 1
+1 * 760
+3 * 760 0 760
+4 * 760 760
+4 * 760 760
+1 * 760 760

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 380 0 380
+1 * 380
+3 * 380
+4 * 380 0 380
+4 * 380 0 380
+4 * 380 0 380
+4 +1 380 380
+4 * 380 380
+4 * 380 380
+4 * 380
+3 * 380
+3 * 380 0 380
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=380 0x40406a -87 
* * 9120 3040 3420 0 25 16 0 25 16 380
+5 * 380 380
+1 * 380 380

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 760 0 760
+1 * 760
+3 * 760 0 760
+4 * 760 760
+4 * 760 760
+1 * 760 760

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 840 0 840
+1 * 840
+3 * 840 0 840
+4 +1 840 840
+4 * 840 840
+1 * 840 840

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1520 0 1520 1 0 0 1
+1 * 1520
+3 * 1520 0 1520
+4 +1 1520 1520 0 1 0 0 1
+4 * 1520 1520
+1 * 1520 1520

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 840 0 840
+1 * 840
+3 * 840 0 840 0 0 1 0 0 1
+4 +1 840 840
+4 * 840 840
+1 * 840 840

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1520 0 1520 1 0 0 1
+1 * 1520
+3 * 1520
+4 * 1520 0 1520
+4 +1 1520
+4 * 1520
+3 * 1520 0 1520
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1520 0x404ffe 790 
* * 9120 4560 3040 1 0 0 1
+5 * 1520 1520
+3 * 1520 1520
+1 * 1520 1520

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1520 0 1520 1 0 0 1
+1 * 1520
+3 * 1520 0 1520
+4 +1 1520 1520
+4 * 1520 1520
+1 * 1520 1520

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1520 0 1520 1 0 0 1
+1 * 1520
+3 * 1520
+4 * 1520 0 1520
+4 +1 1520
+4 * 1520
+3 * 1520 0 1520 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1520 0x40500c 790 
* * 9120 4560 3040 1 0 0 1
+5 * 1520 1520
+3 * 1520 1520
+1 * 1520 1520

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 760 0 760
+1 * 760
+3 * 760 0 760
+4 * 760 0 760
+4 * 760 760
+4 * 760 760
+1 * 760 760

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 768 0 768 1 0 0 1
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 * 768 0 768
+4 +2 768 768
+4 * 768
+3 * 768 0 768
cfn=(102)
calls=768 0x4048de +12 
* * 4608 1536 1536 1 0 0 1
+5 * 768 768
+4 * 768 0 0 1 0 0 1
+3 * 768
+2 * 768 0 0 0 0 0 0 0 0 768
jcnd=768/768 +7 +3 
* * 
+7 +3 768 768
+4 * 768
+4 * 768
+3 * 768 0 768
cob=(5)
cfi=(8)
cfn=(32)
calls=768 0x387e4bd0b0 0 
* * 245279 36196 34806 32 25 41 32 25 41 41128 2008 768
* * 768 768 0 0 0 0 0 0 0 0 0 768
+5 +1 768 768
+1 * 768 768

fn=(18)
0x404a28 81 760 0 760 1 0 0 1
+1 * 760
+3 * 760 0 760 0 0 1 0 0 1
+4 * 760 0 760
+4 * 760 760
+1 * 760 760

fn=(92)
0x4049d4 81 760 0 760 1 0 0 1
+1 * 760
+3 * 760 0 760
+4 * 760 0 760
+4 * 760 760
+1 * 760 760

fn=(196)
0x404520 86 760 0 760
+1 * 760
+3 * 760 0 760
+4 * 760 760
+1 * 760 760

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 768 0 768 1 0 0 1
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 * 768 0 768 1 0 0 1
+4 +2 768 768
+4 * 768
+3 * 768 0 768
cfn=(28)
calls=768 0x404992 +12 
* * 4608 1536 1536 1 0 0 1
+5 * 768 768
+4 * 768
+3 * 768
+2 * 768 0 0 0 0 0 0 0 0 768
jcnd=768/768 +7 +3 
* * 
+7 +3 768 768
+4 * 768
+4 * 768
+3 * 768 0 768
cob=(5)
cfi=(8)
cfn=(32)
calls=768 0x387e4bd0b0 0 
* * 244054 36577 38742 23 18 15 23 18 15 40021 1702 768
* * 768 768 0 1 1 0 1 1 0 0 0 768
+5 +1 768 768
+1 * 768 768

fn=(102)
0x4048de 113 784 0 784 1 0 0 1
+1 * 784
+3 * 784 0 784
+4 +1 784
+10 * 784 784
+1 * 784 784

fn=(266)
0x40406a 129 380 0 380
+1 * 380
+3 * 380
+4 * 380 0 380
+4 * 380 0 380
+4 * 380 0 380
+4 +1 380 380
+4 * 380
+3 * 380
+5 * 380 0 380
cfi=(16)
cfn=(226)
calls=380 0x402d61 -20 
* * 2660 1140 1140
+5 * 380
+3 * 380 0 0 0 0 0 0 0 0 380
+2 * 380 380
+4 * 380 380 0 0 25 0 0 25
+2 * 380 0 380 0 0 16 0 0 16
+2 * 380 380
+1 * 380 380

fn=(28)
0x404992 113 784 0 784 1 0 0 1
+1 * 784
+3 * 784 0 784
+4 +1 784
+10 * 784 784
+1 * 784 784

fn=(176)
0x4044cc 86 760 0 760
+1 * 760
+3 * 760 0 760
+4 * 760 760
+1 * 760 760

fn=(224)
0x403df2 129 380 0 380
+1 * 380
+3 * 380
+4 * 380 0 380
+4 * 380 0 380
+4 * 380 0 380
+4 +1 380 380
+4 * 380
+3 * 380
+5 * 380 0 380
cfi=(16)
cfn=(226)
calls=380 0x402d61 -20 
* * 2660 1140 1140
+5 * 380
+3 * 380 0 0 0 0 0 0 0 0 380 2
+2 * 380 380
+4 * 380 380 0 0 24 0 0 24
+2 * 380 0 380 0 0 4 0 0 4
+2 * 380 380
+1 * 380 380

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 768 0 768
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 * 768 0 768
+4 +1 768 768
+4 * 768
+3 * 768 0 768
cob=(5)
cfi=(8)
cfn=(164)
calls=768 0x387e4bb2f0 0 
* * 94562 24519 12909 23 5 0 23 5 0 23286 205 768
* * 768 768 0 1 1 0 1 1 0 0 0 768
+5 * 768 768
+1 * 768 768

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 768 0 768
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 * 768 0 768
+4 +1 768 768
+4 * 768
+3 * 768 0 768
cob=(5)
cfi=(8)
cfn=(164)
calls=768 0x387e4bb2f0 0 
* * 95333 25024 13140 0 0 0 0 0 0 23587 404 768
* * 768 768 0 0 0 0 0 0 0 0 0 768
+5 * 768 768
+1 * 768 768

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +2 760 760
+4 * 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=760 0x404484 107 
* * 406006 136440 131884 25 3 3 25 3 3 15600 982 1516 189
+5 * 760 760
+1 * 760 760

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +2 760 760 0 1 0 0 1
+4 * 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=760 0x404a36 450 
* * 384726 128840 124284 24 3 3 24 3 3 15600 982 1516 189
+5 * 760 760
+1 * 760 760

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +2 760 760
+4 * 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=760 0x40439c 107 
* * 406006 136440 131884 7 0 43 7 0 43 15600 905 1516
+5 * 760 760
+1 * 760 760

fn=(116)
0x40439c 107 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +10 760 760
+4 * 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=760 0x4047d7 -26 
* * 395366 132640 128084 7 0 43 7 0 43 15600 905 1516
+5 +1 760 760
+1 * 760 760

fn=(118)
0x4047d7 91 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +2 760 760
+4 * 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=760 0x4049e2 450 
* * 384726 128840 124284 7 0 43 7 0 43 15600 905 1516
+5 * 760 760
+1 * 760 760

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +10 760 760
+4 * 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(52)
calls=760 0x404829 -26 
* * 395366 132640 128084 25 3 3 25 3 3 15600 982 1516 189
+5 +1 760 760
+1 * 760 760

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 760 0 760 1 0 0 1
+1 * 760
+3 * 760 0 760
+1 * 760
+4 * 760 0 760
+4 +2 760 760
+4 * 760 760
+4 * 760
+3 * 760 760
+4 * 760 760
+3 * 760
+3 * 760
+3 * 760
+4 * 760
+3 * 760 760
+4 * 760 760
+3 -1 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=760 0x403d98 +11 
* * 115730 32400 20626 1 0 0 1 0 0 24144 395 1520
+5 +1 760 760
+4 * 760
+3 * 760 0 760
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=760 0x403296 -82 
* * 17480 6080 6080 1 0 0 1
+5 * 760
jump=760 +28 * 
* * 
+28 * 760
+4 * 760 760
+1 * 760 760
+1 * 760 760

fn=(2)
0x402d74 645 3072 0 3072 1 0 0 1
+1 * 3072
+3 * 3072 0 3072 0 0 1 0 0 1
+4 +1 3072 3072
+4 * 3072 3072 0 1 1 0 1 1
+4 * 3072
+3 * 3072 3072
+4 * 3072 3072
+3 * 3072
+3 * 3072
+3 * 3072
+4 * 3072 3072
+1 * 3072 3072

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 +2 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=760 0x404236 -14 
* * 273835 46119 47507 27 17 8 27 17 8 41204 1656 1520
+5 * 760 760
+4 * 760 0 760
+3 +1 760 760
+4 * 760 760 0 1 0 0 1
+3 * 760 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+3 * 760 760
+4 * 760
+4 * 760
+3 * 760 760
+4 * 760 0 760
+4 +1 760 760
+1 * 760 760

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 +2 760 760
+4 * 760 760 0 1 0 0 1
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=760 0x403fbe -14 
* * 274161 45485 43381 25 21 37 25 21 37 42124 1951 1520
+5 * 760 760
+4 * 760 0 760
+3 +1 760 760
+4 * 760 760
+3 * 760 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+3 * 760 760
+4 * 760
+4 * 760
+3 * 760 760
+4 * 760 0 760
+4 +1 760 760
+1 * 760 760

fn=(244)
0x402f7a 901 380 0 380
+1 * 380
+3 * 380 0 0 1 0 0 1
+4 * 380 0 380
+4 * 380 0 380
+4 +2 380 380
+4 * 380 380
+4 * 380 380
+4 * 380 380
+4 * 380
+3 * 380 0 0 0 0 0 0 0 0 380
jcnd=8/380 +51 +10 
* * 
+2 +3 372 372
+4 * 372 372
+4 * 372 372
+4 -1 372 372
+4 * 372
+3 * 372
+3 * 372 0 372
cfi=(3)
cfn=(264)
calls=372 0x4036b1 215 
* * 14136 4836 5208 0 24 12 0 24 12 372
+5 +2 372 372
+4 * 372 372
+4 * 372
+4 * 372 372
+4 * 372 0 372
+4 * 372
jump=372 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11936 3694 3226 20 3 30 20 3 30 712 67 47
+5 +2 380 380
+1 * 380 380

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1544 0 1544 1 0 0 1
+1 * 1544
+3 * 1544 0 1544 1 0 0 1
+4 +1 1544 1544
+4 * 1544 1544
+1 * 1544 1544

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+3 * 760 0 760
+4 * 760
+4 * 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=760 0x404380 726 
* * 7600 3800 3040
+5 * 760 760
+4 * 760 760
+1 * 760 760

fn=(148)
0x402df4 414 760 0 760
+1 * 760
+3 * 760 0 760
+1 * 760
+4 * 760 0 760 1 0 0 1
+4 +2 760 760
+4 * 760
+3 * 760 0 760
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=760 0x40325e 113 
* * 4560 2280 1520
+5 * 760
+3 * 760 760
+4 * 760 760
+4 * 760 760
+4 * 760 760
+3 -1 760
+3 * 760
+3 * 760 0 760
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=760 0x40326c 148 
* * 23560 7600 9120 4 0 0 4
+5 +1 760 760
+4 * 760
+3 * 760 0 760
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=760 0x4031ec 159 
* * 153752 46352 30278 27 6 0 27 6 0 23852 200 1520
+5 * 760
jump=760 +28 * 
* * 
+28 * 760 0 0 1 0 0 1
+4 * 760 760
+1 * 760 760
+1 * 760 760

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 768 0 768 1 0 0 1
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 * 768 0 768
+4 +2 768 768
+5 * 768 0 0 0 0 0 0 0 0 768
+2 +1 768 768
+4 * 768 768
+4 * 768 768
+4 * 768
+3 * 768
+3 * 768 0 768
cfi=(5)
cfn=(160)
calls=768 0x4044d6 -65 
* * 103778 27591 16749 24 6 0 24 6 0 23286 205 1536
+5 +1 768 768
+1 * 768 768

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 760 0 760
+1 * 760
+3 * 760 0 760
+1 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=760 0x4043ca -45 
* * 27360 9880 10640 4 0 4 4 0 4
+5 +1 760 760 0 1 0 0 1
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(20)
calls=760 0x404412 +43 
* * 292835 55239 52827 28 17 8 28 17 8 41204 1656 1520
+5 * 760
jump=760 +28 * 
* * 
+28 * 760
+4 * 760 760
+1 * 760 760
+1 * 760 760

fn=(14)
0x4043ca 90 760 0 760 1 0 0 1
+1 * 760
+3 * 760
+4 * 760 0 760 0 0 1 0 0 1
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfi=(4)
cfn=(16)
calls=760 0x404804 +24 
* * 13680 4560 5320 2 0 1 2 0 1
+5 * 760 760
+4 * 760 0 760 0 0 2 0 0 2
+7 * 760 760
+4 * 760 0 760 1 0 0 1
+8 * 760 760
+4 * 760 0 760
+8 +1 760 760
+1 * 760 760

fn=(80)
0x402ff4 310 760 0 760 1 0 0 1
+1 * 760
+3 * 760 0 760
+2 * 760 0 760
+2 * 760 0 760
+1 * 760 0 0 1 0 0 1
+4 * 760 0 760
+4 * 760 0 760
+4 +2 760 760
+4 * 760
+3 * 760 0 760
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=760 0x4039fc 117 
* * 4560 2280 1520 2 0 0 2
+5 * 760
+3 * 760 0 760
cfi=(3)
cfn=(84)
calls=760 0x4039ed -88 
* * 4560 2280 1520
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(2)
calls=760 0x402d74 645 
* * 9880 4560 1520
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760
+3 * 760
+3 * 760 0 760 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=760 0x403a0a 134 
* * 337241 69805 64661 32 21 37 32 21 37 42124 1951 1520
+5 +4 760 760
+4 * 760
+3 * 760 0 760
cfn=(106)
calls=760 0x40325e 113 
* * 4560 2280 1520 1 0 0 1
+5 * 760
+3 * 760 760
+4 * 760 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=760 0x403a98 565 
* * 19000 7600 6080 2 0 0 2
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(112)
calls=760 0x403a68 547 
* * 19000 7600 6080
+5 * 760
+3 * 760
+3 * 760
+3 * 760
+3 * 760 0 760
cfi=(11)
cfn=(114)
calls=760 0x403ac9 -60 
* * 417406 140240 136444 7 0 43 7 0 43 15600 905 1516
+5 -3 760 760
+4 * 760 0 760
+4 * 760
jump=760 +28 +4 
* * 
+28 +4 760
+4 * 760 760
+1 * 760 760
+2 * 760 760
+2 * 760 760
+1 * 760 760

fn=(188)
0x403d98 171 768 0 768 1 0 0 1
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 * 768 0 768
+4 +2 768 768
+5 * 768 0 0 0 0 0 0 0 0 768 8
+2 +1 768 768
+4 * 768 768
+4 * 768 768
+4 * 768
+3 * 768
+3 * 768 0 768
cfi=(5)
cfn=(190)
calls=768 0x40452a -65 
* * 104549 28096 16980 0 0 0 0 0 0 23587 404 1536
+5 +1 768 768
+1 * 768 768

fn=(22)
0x404236 167 768 0 768 1 0 0 1
+1 * 768
+3 * 768
+4 * 768 0 768 1 0 0 1
+4 * 768 0 768
+4 0 768 768
+5 0 768 0 0 0 0 0 0 0 0 768
+2 0 768 768
+4 0 768 768
+4 0 768
+5 0 768
+3 0 768
+3 0 768 0 768
fi=(6) ???
cfi=(5)
cfn=(26)
calls=768 0x404730 99 
* 0 264022 42721 44886 27 19 15 27 19 15 40789 1702 1536
+5 0 768
fi=(6)
jump=768 +7 0 
* 0 
+7 0 768 768
+1 0 768 768

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 760 0 760 1 0 0 1
+1 * 760
+3 * 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+4 * 760 0 760
+4 * 760
+4 * 760 0 0 1 0 0 1
+4 * 760
+3 * 760
+3 * 760 0 760
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=760 0x404468 726 
* * 7600 3800 3040 1 0 0 1
+5 * 760 760
+4 * 760 760
+1 * 760 760

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+3 * 760 0 760
+4 * 760
+4 * 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfi=(10)
cfn=(44)
calls=760 0x404468 726 
* * 7600 3800 3040
+5 * 760 760
+4 * 760 760
+1 * 760 760

fn=(86)
0x403a0a 134 760 0 760
+1 * 760
+3 * 760 0 760
+1 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=760 0x4042e2 -45 
* * 27360 9880 10640 5 0 0 5
+5 +1 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760 1 0 0 1
cfn=(94)
calls=760 0x40432a +43 
* * 293161 54605 48701 26 21 37 26 21 37 42124 1951 1520
+5 * 760
jump=760 +28 * 
* * 
+28 * 760
+4 * 760 760
+1 * 760 760
+1 * 760 760

fn=(88)
0x4042e2 90 760 0 760 1 0 0 1
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760 1 0 0 1
cfi=(4)
cfn=(90)
calls=760 0x4047b2 +24 
* * 13680 4560 5320 3 0 0 3
+5 * 760 760
+4 * 760 0 760
+7 * 760 760
+4 * 760 0 760
+8 * 760 760
+4 * 760 0 760
+8 +1 760 760
+1 * 760 760

fn=(156)
0x4031ec 159 760 0 760 1 0 0 1
+1 * 760
+3 * 760 0 760
+1 * 760
+4 * 760 0 760
+4 +2 760 760
+4 * 760 760 0 1 0 0 1
+4 * 760
+3 * 760 760
+4 * 760 760
+3 * 760
+3 * 760
+3 * 760
+4 * 760
+3 * 760 760
+4 * 760 760
+3 -1 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(158)
calls=760 0x403ce6 +11 
* * 114992 31912 20398 24 6 0 24 6 0 23852 200 1520
+5 +1 760 760
+4 * 760
+3 * 760 0 760
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=760 0x4031b8 -82 
* * 17480 6080 6080 1 0 0 1
+5 * 760
jump=760 +28 * 
* * 
+28 * 760
+4 * 760 760
+1 * 760 760
+1 * 760 760

fn=(172)
0x4031b8 79 760 0 760 1 0 0 1
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 760
+4 * 760
+3 * 760 0 760
cfi=(4)
cfn=(174)
calls=760 0x403ccc +42 
* * 10640 3800 3800
+5 * 760 760
+1 * 760 760

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1552 0 1552 1 0 0 1
+1 * 1552
+3 * 1552 0 1552
+4 +1 1552 1552
+4 * 1552 1552 0 0 2 0 0 2
+4 * 1552
+3 * 1552 1552
+4 * 1552 1552
+3 * 1552
+3 * 1552
+3 * 1552
+4 * 1552 1552
+1 * 1552 1552

fn=(106)
0x40325e 113 1544 0 1544 1 0 0 1
+1 * 1544
+3 * 1544 0 1544
+4 +1 1544 1544
+4 * 1544 1544
+1 * 1544 1544

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 776 0 776 1 0 0 1
+1 * 776
+3 * 776 0 776 0 0 1 0 0 1
+4 +1 776 776
+4 * 776 776
+1 * 776 776

fn=(82)
0x4039fc 117 776 0 776 1 0 0 1
+1 * 776
+3 * 776 0 776 1 0 0 1
+4 +1 776 776
+4 * 776 776
+1 * 776 776

fn=(200)
0x402eda 901 380 0 380
+1 * 380
+3 * 380
+4 * 380 0 380
+4 * 380 0 380
+4 +2 380 380
+4 * 380 380
+4 * 380 380
+4 * 380 380
+4 * 380
+3 * 380 0 0 0 0 0 0 0 0 380 9
jcnd=8/380 +51 +10 
* * 
+2 +3 372 372
+4 * 372 372
+4 * 372 372
+4 -1 372 372
+4 * 372
+3 * 372
+3 * 372 0 372
cfi=(3)
cfn=(222)
calls=372 0x403373 215 
* * 14136 4836 5208 0 23 3 0 23 3 372 2
+5 +2 372 372
+4 * 372 372
+4 * 372
+4 * 372 372
+4 * 372 0 372
+4 * 372
jump=372 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12802 3930 3413 35 5 8 35 5 8 890 67 47
+5 +2 380 380
+1 * 380 380

fn=(4)
0x4030b2 310 760 0 760 1 0 0 1
+1 * 760
+3 * 760 0 760
+2 * 760 0 760
+2 * 760 0 760
+1 * 760
+4 * 760 0 760 1 0 0 1
+4 * 760 0 760
+4 +2 760 760
+4 * 760
+3 * 760 0 760
cfn=(6)
calls=760 0x403b08 117 
* * 4560 2280 1520 1 0 1 1 0 1
+5 * 760
+3 * 760 0 760
cfi=(3)
cfn=(8)
calls=760 0x403afa -88 
* * 4560 2280 1520 1 0 0 1
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(10)
calls=760 0x402f54 645 
* * 9880 4560 1520 1 1 0 1 1
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760
+3 * 760
+3 * 760 0 760
cfn=(12)
calls=760 0x403b16 134 
* * 336915 70439 68787 33 17 12 33 17 12 41204 1656 1520
+5 +4 760 760 0 1 0 0 1
+4 * 760
+3 * 760 0 760
cfn=(40)
calls=760 0x40333c 113 
* * 4560 2280 1520 2 0 0 2
+5 * 760
+3 * 760 760
+4 * 760 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(42)
calls=760 0x403ba4 565 
* * 19000 7600 6080 3 0 0 3
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(46)
calls=760 0x403b74 547 
* * 19000 7600 6080
+5 * 760
+3 * 760
+3 * 760
+3 * 760
+3 * 760 0 760 1 0 0 1
cfi=(11)
cfn=(48)
calls=760 0x403bd5 -60 
* * 417406 140240 136444 26 3 3 26 3 3 15600 982 1516 189
+5 -3 760 760
+4 * 760 0 760
+4 * 760
jump=760 +28 +4 
* * 
+28 +4 760
+4 * 760 760
+1 * 760 760
+2 * 760 760
+2 * 760 760
+1 * 760 760

fn=(108)
0x403a98 565 760 0 760 1 0 0 1
+1 * 760
+3 * 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760 760
+4 * 760 0 760
+4 * 760
+4 * 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfi=(10)
cfn=(110)
calls=760 0x404380 726 
* * 7600 3800 3040 1 0 0 1
+5 * 760 760
+4 * 760 760
+1 * 760 760

fn=(178)
0x402e74 414 760 0 760
+1 * 760
+3 * 760 0 760
+1 * 760
+4 * 760 0 760 1 0 0 1
+4 +2 760 760
+4 * 760
+3 * 760 0 760
cfn=(40)
calls=760 0x40333c 113 
* * 4560 2280 1520
+5 * 760
+3 * 760 760
+4 * 760 760
+4 * 760 760
+4 * 760 760
+3 -1 760
+3 * 760
+3 * 760 0 760
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=760 0x40334a 148 
* * 23560 7600 9120 2 0 0 2
+5 +1 760 760
+4 * 760
+3 * 760 0 760
cfn=(186)
calls=760 0x4032ca 159 
* * 154490 46840 30506 3 0 0 3 0 0 24144 395 1520
+5 * 760
jump=760 +28 * 
* * 
+28 * 760 0 0 1 0 0 1
+4 * 760 760
+1 * 760 760
+1 * 760 760

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 768 0 768 1 0 0 1
+1 * 768 0 0 1 0 0 1
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 0 768 768
+5 0 768 0 0 0 0 0 0 0 0 768
+2 0 768 768
+4 0 768 768
+4 0 768
+5 0 768
+3 0 768
+3 0 768 0 768
fi=(6)
cfi=(5)
cfn=(100)
calls=768 0x40461a 99 
* 0 265247 42340 40950 35 25 41 35 25 41 41896 2008 1536
+5 0 768
fi=(6)
jump=768 +7 0 
* 0 
+7 0 768 768
+1 0 768 768

fn=(144)
0x402d9a 770 219070 0 219070
+1 * 219070
+3 * 219070 0 219070
+4 * 219070 0 219070
+4 +1 219070 219070
+4 * 219070 219070
+3 * 219070 219070
+4 * 219070
+4 * 219070
+3 * 219070 219070
+1 * 219070 219070

fn=(146)
0x402dba 770 219070 0 219070
+1 * 219070
+3 * 219070 0 219070 1 0 0 1
+4 * 219070 0 219070
+4 +1 219070 219070
+4 * 219070 219070
+3 * 219070 219070
+4 * 219070
+4 * 219070
+3 * 219070 219070
+1 * 219070 219070

fn=(192)
0x403296 79 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 760
+4 * 760
+3 * 760 0 760
cfi=(4)
cfn=(194)
calls=760 0x403d7e +42 
* * 10640 3800 3800 1 0 0 1
+5 * 760 760
+1 * 760 760

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404bc6 288 1520 0 1520 1 0 0 1
+1 * 1520
+3 * 1520
+4 * 1520 0 1520
+4 +1 1520 1520
+4 * 1520
+3 * 1520 0 1520
cfi=(13)
cfn=(124)
calls=1520 0x404d36 -77 
* * 9120 4560 3040 2 0 0 2
+5 * 1520 1520
+1 * 1520 1520

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1520 0 1520 1 0 0 1
+1 * 1520
+3 * 1520
+4 * 1520 0 1520 1 0 0 1
+4 +1 1520 1520
+4 * 1520
+3 * 1520 0 1520
cfi=(13)
cfn=(58)
calls=1520 0x404d8f -77 
* * 9120 4560 3040 1 0 0 1
+5 * 1520 1520
+1 * 1520 1520

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 776 0 776
+1 * 776
+3 * 776
+4 * 776 0 776 1 0 0 1
+4 * 776 0 776
+4 * 776 0 776
+4 +2 776 776
+4 * 776 776
+4 * 776
+3 * 776
+3 * 776
+4 * 776 0 776
+4 +1 776 776
+5 * 776 0 0 0 0 0 0 0 0 776
jcnd=8/776 +33 +2 
* * 
+2 +1 768 768
+4 * 768
+8 * 768 768
+4 * 768 768
+4 * 768
+3 * 768 0 0 1 0 0 1
+3 * 768 0 768 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=768 0x3877c83840 0 
* * 242968 79756 78225 11 2 20 11 2 20 14924 986 763 189
* * 768 768 0 1 1 0 1 1 0 0 0 768
+5 +1 776 776
+4 * 776
+8 * 776 776
+4 * 776
+3 +1 776 776
+1 * 776 776

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 776 0 776
+1 * 776
+3 * 776
+4 * 776 0 776 1 0 0 1
+4 * 776 0 776
+4 * 776 0 776 0 0 1 0 0 1
+4 +2 776 776
+4 * 776 776
+4 * 776
+3 * 776
+3 * 776
+4 * 776 0 776
+4 +1 776 776
+5 * 776 0 0 0 0 0 0 0 0 776
jcnd=8/776 +33 +2 
* * 
+2 +1 768 768
+4 * 768
+8 * 768 768
+4 * 768 768
+4 * 768
+3 * 768
+3 * 768 0 768
cob=(2)
cfi=(9)
cfn=(78)
calls=768 0x3877c83840 0 
* * 242968 79756 78225 0 0 44 0 0 44 14924 910 763
* * 768 768 0 0 0 0 0 0 0 0 0 768
+5 +1 776 776
+4 * 776
+8 * 776 776
+4 * 776
+3 +1 776 776
+1 * 776 776

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760 1 0 0 1
+4 * 760 0 760
+4 * 760 0 760
+4 +8 760 0 760
+4 +3 760 760
+4 * 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(74)
calls=760 0x404f37 -22 
* * 263126 87800 82484 14 3 2 14 3 2 15600 982 1516 189
+5 +1 760 760
+1 * 760 760

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 760 0 760
+1 * 760
+3 * 760 0 760
+2 * 760 0 760
+1 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +4 760 760
+4 * 760
+3 * 760 0 760
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=760 0x404878 277 
* * 11400 4560 3800 1 0 0 1
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=760 0x404d44 277 
* * 19000 6840 6080 2 0 0 2
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(132)
calls=760 0x404d44 277 
* * 19000 6840 6080
+5 * 760
+3 * 760
+3 * 760
+3 * 760 0 760
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=760 0x404d5e -49 
* * 274526 91600 87044 1 0 43 1 0 43 15600 905 1516
+5 +1 760
+4 * 760 760
+1 * 760 760
+2 * 760 760
+1 * 760 760

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 760 0 760
+1 * 760
+3 * 760 0 760
+1 * 760
+4 * 760 0 760 1 0 0 1
+4 * 760 0 760
+4 * 760 0 760
+4 +10 760 760
+4 * 760
+3 * 760 0 760
cfn=(56)
calls=760 0x404c38 288 
* * 11400 4560 3800 3 0 0 3
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(56)
calls=760 0x404c38 288 
* * 11400 4560 3800
+5 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=760 0x404c52 -36 
* * 345206 115160 110604 20 3 3 20 3 3 15600 982 1516 189
+5 +1 760
+4 * 760 760
+1 * 760 760
+1 * 760 760

fn=(60)
0x404c52 424 760 0 760
+1 * 760
+3 * 760 0 760
+2 * 760 0 760
+1 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +4 760 760
+4 * 760
+3 * 760 0 760
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=760 0x40492d 277 
* * 11400 4560 3800 2 0 0 2
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=760 0x404d9d 277 
* * 19000 6840 6080 2 0 1 2 0 1
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(66)
calls=760 0x404d9d 277 
* * 19000 6840 6080
+5 * 760
+3 * 760
+3 * 760
+3 * 760 0 760
cfn=(72)
calls=760 0x404db7 -49 
* * 274526 91600 87044 15 3 2 15 3 2 15600 982 1516 189
+5 +1 760
+4 * 760 760
+1 * 760 760
+2 * 760 760
+1 * 760 760

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808
+3 * 808 0 808 1 0 0 1
cfi=(13)
cfn=(64)
calls=808 -33 -66 
* * 4848 2424 1616
+5 * 808 808
+1 * 808 808

fn=(66)
0x404d9d 277 1520 0 1520
+1 * 1520
+3 * 1520
+4 * 1520 0 1520
+4 +1 1520 1520
+4 * 1520
+3 * 1520 0 1520
cfi=(13)
cfn=(68)
calls=1520 0x404f1a -58 
* * 24320 9120 7600 2 0 1 2 0 1
+5 * 1520 1520
+1 * 1520 1520

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 760 0 760
+1 * 760
+3 * 760 0 760
+1 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +10 760 760
+4 * 760
+3 * 760 0 760
cfn=(122)
calls=760 0x404bc6 288 
* * 11400 4560 3800 3 0 0 3
+5 * 760
+3 * 760 760
+4 * 760
+3 * 760 0 760
cfn=(122)
calls=760 0x404bc6 288 
* * 11400 4560 3800
+5 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(126)
calls=760 0x404be0 -36 
* * 345206 115160 110604 4 0 43 4 0 43 15600 905 1516
+5 +1 760
+4 * 760 760
+1 * 760 760
+1 * 760 760

fn=(128)
0x404878 277 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808 1 0 0 1
+4 +1 808 808
+4 * 808
+3 * 808 0 808
cfi=(13)
cfn=(130)
calls=808 -33 -66 
* * 4848 2424 1616 0 0 1 0 0 1
+5 * 808 808
+1 * 808 808

fn=(132)
0x404d44 277 1520 0 1520
+1 * 1520
+3 * 1520
+4 * 1520 0 1520
+4 +1 1520 1520
+4 * 1520
+3 * 1520 0 1520
cfi=(13)
cfn=(134)
calls=1520 0x404e98 -58 
* * 24320 9120 7600 2 0 0 2
+5 * 1520 1520
+1 * 1520 1520

fn=(138)
0x404d5e 379 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760
+4 * 760 0 760
+4 * 760 0 760
+4 +8 760 0 760
+4 +3 760 760
+4 * 760 760
+4 * 760 760
+4 * 760
+3 * 760
+3 * 760 0 760
cfn=(140)
calls=760 0x404eb5 -22 
* * 263126 87800 82484 1 0 43 1 0 43 15600 905 1516
+5 +1 760 760
+1 * 760 760

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1520 0 1520 1 0 0 1
+1 * 1520
+3 * 1520 0 1520
+4 +1 1520 1520
+4 * 1520 1520
+1 * 1520 1520

fn=(110)
0x404380 726 1520 0 1520 1 0 0 1
+1 * 1520
+3 * 1520 0 1520
+4 * 1520 0 1520
+4 * 1520 1520
+4 * 1520 1520
+3 * 1520 1520
+4 * 1520 0 1520
+3 * 1520 1520
+1 * 1520 1520

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1520 0 1520 1 0 0 1
+1 * 1520
+3 * 1520 0 1520
+4 +1 1520 1520
+4 * 1520 1520
+1 * 1520 1520

fn=(44)
0x404468 726 1520 0 1520
+1 * 1520
+3 * 1520 0 1520
+4 * 1520 0 1520
+4 * 1520 1520
+4 * 1520 1520
+3 * 1520 1520
+4 * 1520 0 1520 1 0 0 1
+3 * 1520 1520
+1 * 1520 1520

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 768 0 768 1 0 0 1
+1 * 768
+3 * 768 0 768
+4 * 768 0 768 1 0 0 1
+4 * 768 768
+1 * 768 768

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 768 0 768 1 0 0 1
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 +4 768 768
+4 * 768 768
+4 * 768
+3 * 768
+3 * 768 0 768
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=768 0x40454c -14 
* * 4608 1536 2304 1 0 0 1
+5 +2 768 768
+1 * 768 768

fn=(150)
0x40326c 148 768 0 768
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 * 768 0 768
+4 +3 768 768 0 1 0 0 1
+4 * 768 768
+4 * 768
+3 * 768
+3 * 768 0 768
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=768 0x403d1a -29 
* * 13824 4608 5376 3 0 0 3
+5 +1 768 768
+1 * 768 768

fn=(180)
0x40334a 148 768 0 768
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 * 768 0 768
+4 +3 768 768
+4 * 768 768
+4 * 768
+3 * 768
+3 * 768 0 768
cfn=(182)
calls=768 0x403dcc -29 
* * 13824 4608 5376 2 0 0 2
+5 +1 768 768
+1 * 768 768

fn=(152)
0x403d1a 122 768 0 768 1 0 0 1
+1 * 768
+3 * 768
+4 * 768 0 768
+4 * 768 0 768
+4 +4 768 768
+4 * 768 768
+4 * 768
+3 * 768
+3 * 768 0 768
cfn=(154)
calls=768 0x4044f8 -14 
* * 4608 1536 2304 2 0 0 2
+5 +2 768 768
+1 * 768 768

fn=(184)
0x40454c 112 768 0 768 1 0 0 1
+1 * 768
+3 * 768 0 768
+4 * 768 0 768
+4 * 768 768
+1 * 768 768

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2475 442 451 2 2 7 2 2 7 353 46 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3374 695 641 12 4 4 12 4 4 540 57 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 5 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1536 0 1536 1 0 0 1
+5 0 1536 0 1536
+5 0 1536
+3 0 1536 0 1536
+5 0 1536
+4 0 1536 1536 0 0 1 0 0 1
+7 0 1536 1536 0 0 1 0 0 1
+3 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536
+6 0 1536 1536 0 0 1 0 0 1
+7 0 1536 1536 0 1 1 0 1 1
+4 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536
+2 0 1536 1536 0 0 1 0 0 1
+3 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536
jcnd=1536/1536 +97 0 
* 0 
+18 0 1536
+3 0 1536
+3 0 1536 0 1536
cfn=(38) _int_malloc
calls=1536 0x3877c79a00 0 
* 0 400245 49733 59724 47 36 55 47 36 55 64253 3613
+5 0 1536
+3 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536
+2 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536
+2 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536 19
+2 0 1536 1536
+7 0 1536 0 0 0 0 0 0 0 0 1536
jcnd=1536/1536 +13 0 
* 0 
+13 0 1536 0 1536
+2 0 1536 0 0 0 0 0 0 0 0 1536 78
+6 0 1536
+3 0 1536 1536
+4 0 1536 1536
+5 0 1536 1536
+5 0 1536
+4 0 1536 1536
+1 0 1536 0 0 1 0 0 1
+5 0 1536 1536 0 0 1 0 0 1
+7 0 1536 0 0 0 0 0 0 0 0 1536
jcnd=1536/1536 +14 0 
* 0 
+14 0 1536 0 1536 1 0 0 1
+3 0 1536 0 0 0 0 0 0 0 0 1536
+6 0 1536
jump=1536 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1536 0 1536 1 0 0 1
+2 0 1536
+3 0 1536
+3 0 1536 0 1536
+2 0 1536
+3 0 1536 0 1536
+1 0 1536
+3 0 1536 0 1536
+1 0 1536
+3 0 1536
+4 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536
+6 0 1536
+4 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536 4
jcnd=10/1536 0x3877c838d1 0 
* 0 
+2 0 1526
+3 0 1526
+3 0 1526
+3 0 1526
+3 0 1526
+3 0 1526 0 0 0 0 0 0 0 0 1526
jcnd=1526/1526 +41 0 
* 0 
+41 0 1526 0 0 1 0 0 1
+3 0 1526 0 0 0 0 0 0 0 0 1526
jcnd=1526/1526 0x3877c839c0 0 
* 0 
+24 0 1526
+3 0 1526
+4 0 1526
+3 0 1526
+3 0 1526
+3 0 1526
+3 0 1526
+3 0 1526 0 0 0 0 0 0 0 0 1526 829
jcnd=770/1526 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 766
+10 0 766 766 0 0 1 0 0 1
+3 0 766
+4 0 766 0 766
+3 0 766
+4 0 766
+4 0 766 0 0 0 0 0 0 0 0 766
jcnd=766/766 -18 0 
* 0 
-18 0 2354 2354
+3 0 2354
+4 0 2354 0 2354
+3 0 2354
+4 0 2354
+4 0 2354 0 0 0 0 0 0 0 0 2354 8
jcnd=1588/2354 -18 0 
* 0 
+2 0 1536
+4 0 1536
+3 0 1536 1536
+1 0 1536 1536
+1 0 1536 1536
+2 0 1536 1536 0 1 0 0 1
+2 0 1536 1536
0x3877c839c0 0 1526 0 0 1 0 0 1
+3 0 1526
+3 0 1526
+3 0 1526
+4 0 1526 0 1526 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1526 0x3877c89b20 0 
* 0 399066 148712 145660 6 1 63 6 1 63 19068 1055 1526 189
+5 0 1526
jump=1526 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1536 1536 0 1 1 0 1 1
+7 0 1536 1536 0 0 1 0 0 1
+3 0 1536
+3 0 1536 0 0 1 0 0 1 0 0 1536
+6 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536
+6 0 1536 1536
+4 0 1536
+4 0 1536
+2 0 1536 0 0 0 0 0 0 0 0 1536
+2 0 1536
+2 0 1536
+7 0 1536 0 0 0 0 0 0 0 0 1536
jcnd=1536/1536 +14 0 
* 0 
+14 0 1536
+2 0 1536
cfn=(170) _int_free
calls=1536 0x3877c78650 0 
* 0 160711 43399 26049 19 2 0 19 2 0 39193 609

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 4
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1536 0 1536 1 0 0 1
+2 0 1536 0 1536
+2 0 1536 0 1536
+2 0 1536
+3 0 1536 0 1536
+2 0 1536 0 1536
+1 0 1536 0 1536
+1 0 1536
+3 0 1536
+4 0 1536 1536
+4 0 1536 0 1536
+4 0 1536
+3 0 1536
+4 0 1536
+3 0 1536
+3 0 1536
+3 0 1536 0 0 1 0 0 1 0 0 1536
+6 0 1536
+4 0 1536 0 0 0 0 0 0 0 0 1536
+6 0 1536
+4 0 1536 0 0 0 0 0 0 0 0 1536
+6 0 1536 1536
+7 0 1536 0 0 0 0 0 0 0 0 1536 2
jcnd=1412/1536 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1412
+2 0 1412 0 0 0 0 0 0 0 0 1412
+6 0 1412 1412 0 1 0 0 1
+4 0 1412
+3 0 1412
+2 0 1412 0 0 0 0 0 0 0 0 1412
jcnd=1412/1412 0x3877c78a40 0 
* 0 
+6 0 1412 1412
+4 0 1412
+3 0 1412 0 0 0 0 0 0 0 0 1412
+6 0 1412 1412
+5 0 1412
+4 0 1412 0 0 0 0 0 0 0 0 1412
jcnd=1412/1412 0x3877c7907c 0 
* 0 
+6 0 1412 1412
+5 0 1412
+4 0 1412 0 0 0 0 0 0 0 0 1412
+6 0 1412
+4 0 1412 0 0 1 0 0 1 0 0 1412
+6 0 1412
+4 0 1412 1412
+7 0 1412 0 0 0 0 0 0 0 0 1412
+6 0 1412 1412
+6 0 1412
+2 0 1412 0 0 0 0 0 0 0 0 1412
+6 0 1412 1412
+4 0 1412 0 0 0 0 0 0 0 0 1412 5
jcnd=1408/1412 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1412 1412 0 1 0 0 1
+4 0 1412 0 0 0 0 0 0 0 0 1412 134
jcnd=134/1412 0x3877c78bf0 0 
* 0 
+6 0 1278 1278 0 0 1 0 0 1
+6 0 1278 0 0 1 0 0 1 0 0 1278 53
jcnd=73/1278 0x3877c78a78 0 
* 0 
+6 0 1205 1205
+5 0 1205 1205
+5 0 1205 1205
+4 0 1205 0 0 0 0 0 0 0 0 1205
+6 0 1205 1205
+4 0 1205 0 0 0 0 0 0 0 0 1205
+6 0 1205 1205
+9 0 1205 0 1205
+4 0 1205 0 1205
+4 0 1205 0 0 0 0 0 0 0 0 1205 389
jcnd=737/1205 +16 0 
* 0 
+2 0 468 468
+5 0 468
+3 0 468 0 0 1 0 0 1 0 0 468
+6 0 1205
+3 0 1205
+4 0 1205 1205
+4 0 1205 1205
+4 0 1205 0 0 0 0 0 0 0 0 1205
-12 0 73
+4 0 73 73
+4 0 73 73
+4 0 73 0 0 0 0 0 0 0 0 73
+6 0 1278
+7 0 1278 0 1278
+4 0 1278 0 1278
+4 0 1278 0 0 0 0 0 0 0 0 1278 24
jcnd=441/1278 +18 0 
* 0 
+2 0 837 0 837
+8 0 837 0 837
+8 0 837 0 837
+4 0 837
+3 0 837 0 837 1 0 0 1
+4 0 837
+4 0 837 0 837
+4 0 837 0 837
+4 0 837
+7 0 837 0 0 0 0 0 0 0 0 837
jcnd=837/837 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 134
+7 0 134 0 0 0 0 0 0 0 0 134
jcnd=134/134 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1412 0 0 1 0 0 1
+5 0 1412 1412
+4 0 1412 1412
+7 0 1412 0 0 0 0 0 0 0 0 1412
jcnd=1412/1412 +16 0 
* 0 
+16 0 1412 0 1412
+5 0 1412 0 0 0 0 0 0 0 0 1412
+6 0 1412
+3 0 1412
jump=1412 0x3877c7878f 0 
* 0 
+10 0 73 0 73
+6 0 73 0 0 1 0 0 1
jump=73 0x3877c78885 0 
* 0 
0x3877c78b20 0 1412 1412 0 1 0 0 1
+4 0 1412
+2 0 1412 0 0 0 0 0 0 0 0 1412
+6 0 1412 1412
+7 0 1412 0 0 0 0 0 0 0 0 1412
jcnd=1412/1412 +15 0 
* 0 
+15 0 1412 0 1412 1 0 0 1
+4 0 1412 0 0 0 0 0 0 0 0 1412
+6 0 1412
+4 0 1412 1412
+1 0 1412 1412
+1 0 1412 1412
+2 0 1412 1412
+2 0 1412 1412
+2 0 1412 1412
+2 0 1412 1412
0x3877c78bf0 0 134 0 0 1 0 0 1
+3 0 134 0 134
+4 0 134
+3 0 134
+4 0 134 0 134 1 0 0 1
+4 0 134
jump=134 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1412 1412 0 1 1 0 1 1
+4 0 1412 0 0 1 0 0 1
+7 0 1412
+4 0 1412
+3 0 1412
+3 0 1412 0 0 0 0 0 0 0 0 1412
jcnd=1412/1412 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1526 0 0 1 0 0 1
+7 0 1526
+3 0 1526
+3 0 1526 1526 0 0 1 0 0 1
+4 0 1526
+4 0 1526 0 0 0 0 0 0 0 0 0 0 1526 189
jump=184 0x3877c89be8 0 
* 0 
jump=194 0x3877c89bd0 0 
* 0 
jump=184 0x3877c89bb8 0 
* 0 
jump=192 +11 0 
* 0 
jump=192 0x3877c89c48 0 
* 0 
jump=194 0x3877c89c30 0 
* 0 
jump=192 0x3877c89c18 0 
* 0 
jump=194 0x3877c89c00 0 
* 0 
+11 0 192 192
+3 0 192
+4 0 192
+4 0 192 192
+4 0 192
+4 0 192 0 192
+4 0 192
+9 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192
+4 0 192
+4 0 192
+4 0 192 0 0 0 0 0 0 0 0 192
jcnd=8/192 0x3877c89c60 0 
* 0 
-40 0 17918 17918
+4 0 17918 0 17918 0 0 14 0 0 14
+4 0 17918 17918
+4 0 17918 0 17918 0 0 3 0 0 3
+4 0 17918 17918
+4 0 17918 0 17918 0 0 4 0 0 4
+4 0 17918 17918
+4 0 17918 0 17918 0 0 15 0 0 15
+4 0 17918
+4 0 17918
+4 0 17918 0 0 0 0 0 0 0 0 17918 1051
jcnd=1490/17918 0x3877c89c60 0 
* 0 
-32 0 194 194
+4 0 194 0 194
+4 0 194 194
+4 0 194 0 194
+4 0 194 194
+4 0 194 0 194
+4 0 194
+4 0 194
+4 0 194 0 0 0 0 0 0 0 0 194
jcnd=10/194 0x3877c89c60 0 
* 0 
-24 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192
+4 0 192
+4 0 192
+4 0 192 0 0 0 0 0 0 0 0 192
jcnd=8/192 0x3877c89c60 0 
* 0 
-16 0 194 194 0 1 0 0 1
+4 0 194 0 194
+4 0 194 0 0 1 0 0 1
+4 0 194
+4 0 194 0 0 0 0 0 0 0 0 194 4
jcnd=10/194 0x3877c89c60 0 
* 0 
+6 0 17164
+4 0 17164 17164
+3 0 17164 0 17164 0 0 2 0 0 2
+3 0 17164 17164
+4 0 17164 0 17164 0 0 1 0 0 1
+4 0 17164 17164
+4 0 17164 0 17164 0 0 20 0 0 20
+4 0 17164 17164
+4 0 17164 0 17164 0 0 3 0 0 3
+4 0 17164
jump=17164 -80 0 
* 0 
-30 0 184 184
+3 0 184 0 184
+3 0 184 184
+4 0 184 0 184
+4 0 184 184
+4 0 184 0 184
+4 0 184 184
+4 0 184 0 184
+4 0 184
jump=184 -80 0 
* 0 
-24 0 194 194
+4 0 194 0 194
+4 0 194 194
+4 0 194 0 194
+4 0 194 194
+4 0 194 0 194 0 0 1 0 0 1
+4 0 194
jump=194 -80 0 
* 0 
-16 0 184 184
+4 0 184 0 184
+4 0 184 184
+4 0 184 0 184
+4 0 184
jump=184 -80 0 
* 0 
+8 0 184 184
+3 0 184
+4 0 184 0 0 1 0 0 1
+4 0 184
+4 0 184
jump=184 -39 0 
* 0 
+9 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
+6 0 194 194
+3 0 194
+4 0 194
jump=194 -72 0 
* 0 
+8 0 184
+4 0 184 184
+3 0 184 0 0 0 0 0 0 0 0 184
+2 0 184
+4 0 184
jump=184 -99 0 
* 0 
+11 0 194 194 0 1 0 0 1
+3 0 194
+4 0 194
+4 0 194
+4 0 194
jump=194 0x3877c89b78 0 
* 0 
+9 0 192 192
+3 0 192
+4 0 192
+4 0 192
+4 0 192
jump=192 0x3877c89b70 0 
* 0 
+9 0 194 194
+3 0 194
+4 0 194
+4 0 194
+4 0 194
jump=194 0x3877c89b68 0 
* 0 
+9 0 192 192
+3 0 192
+4 0 192
+4 0 192
+4 0 192
jump=192 0x3877c89b60 0 
* 0 
+9 0 1526 0 1526 1 0 0 1
+3 0 1526 1526

fn=(104) alloc_perturb
0x3877c77180 0 1394 1394 0 1 0 0 1
+6 0 1394
+2 0 1394 0 0 0 0 0 0 0 0 1394 34
+2 0 1394 1394

fn=(38)
0x3877c79a00 0 1536 0 1536 1 0 0 1
+2 0 1536
+3 0 1536 0 1536
+2 0 1536 0 1536
+2 0 1536 0 1536 0 0 1 0 0 1
+2 0 1536
+3 0 1536 0 1536
+1 0 1536 0 1536
+1 0 1536
+4 0 1536
+4 0 1536 0 0 0 0 0 0 0 0 1536
+6 0 1536
+4 0 1536
+6 0 1536
+3 0 1536
+4 0 1536
+4 0 1536
+4 0 1536
+3 0 1536 0 0 0 0 0 0 0 0 1536
+6 0 1536 1536 0 1 1 0 1 1
+7 0 1536 0 0 0 0 0 0 0 0 1536 5
jcnd=1414/1536 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 142 142
+6 0 142
+4 0 142
+2 0 142 0 0 0 0 0 0 0 0 142
+6 0 142
+3 0 142
+4 0 142 142
+1 0 142 142
+1 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
-14 0 1394
+4 0 1394 1394
+1 0 1394 1394
+1 0 1394 1394
+2 0 1394 1394
+2 0 1394 1394
+2 0 1394 1394
+2 0 1394 1394
+7 0 1431
+7 0 1431 0 0 1 0 0 1 0 0 1431 5
jcnd=528/1431 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 7 0 0 7
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 528 0 0 1 0 0 1
+3 0 528
+4 0 528
+4 0 528 0 0 1 0 0 1 0 0 528
jcnd=528/528 0x3877c7a1a4 0 
* 0 
+30 0 528 528
+6 0 528
+5 0 528 0 0 0 0 0 0 0 0 528 1
jcnd=527/528 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 912 244 194 8 1 0 8 1 0 188 29
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1430 0 0 1 0 0 1
+3 0 1430
+3 0 1430
+3 0 1430
+4 0 1430
+3 0 1430
+4 0 1430 0 1430
+5 0 1430
+3 0 1430 0 1430
+4 0 1430 0 1430
+4 0 1430 0 1430
+5 0 1430
+3 0 1430
+3 0 1430
+3 0 1430
+3 0 1430
+4 0 1430
+4 0 1430 0 0 1 0 0 1
+4 0 1430 0 1430
+4 0 1430
+4 0 1430 0 1430
+5 0 1430 0 1430
+5 0 1430
+3 0 1430
+3 0 1430 0 1430
+5 0 1430
+5 0 1430
+3 0 1430 0 1430
+4 0 1430 0 1430
+4 0 1430
+6 0 1430 0 1430
+4 0 1430 0 1430
+5 0 1430 0 0 1 0 0 1
+3 0 1430
+3 0 1430
+3 0 1430
jump=1430 +87 0 
* 0 
+8 0 1035
+3 0 1035
+4 0 1035
+2 0 1035
+2 0 1035
+3 0 1035
+3 0 1035
+3 0 1035
+2 0 1035
+2 0 1035
+5 0 1035
+2 0 1035 1035 0 0 2 0 0 2
+4 0 1035
+3 0 1035
+4 0 1035 0 1035
+4 0 1035 0 1035 0 0 1 0 0 1
+8 0 1035
+7 0 1035 0 1035
+4 0 1035 0 1035 0 0 1 0 0 1
+4 0 1035 0 1035
+4 0 1035 0 0 0 0 0 0 0 0 1035
-38 0 812
+3 0 812
+4 0 812 0 812
+4 0 812 0 812
+8 0 812
+7 0 812 0 812
+4 0 812 0 812
+4 0 812 0 812
+4 0 812 0 0 0 0 0 0 0 0 812
+6 0 3278 3278 0 1 0 0 1
+4 0 3278
+3 0 3278 0 0 0 0 0 0 0 0 3278 170
jcnd=1360/3278 0x3877c79ef0 0 
* 0 
+6 0 1918 1918
+4 0 1918 1918 0 0 1 0 0 1
+4 0 1918
+4 0 1918 0 0 0 0 0 0 0 0 1918
+6 0 1918 1918 0 1 1 0 1 1
+7 0 1918 0 0 0 0 0 0 0 0 1918
+6 0 1918
+4 0 1918
+7 0 1918 0 0 0 0 0 0 0 0 1918 7
jcnd=635/1918 +11 0 
* 0 
+2 0 1283
+3 0 1283 0 0 0 0 0 0 0 0 1283 608
jcnd=864/1283 0x3877c79e28 0 
* 0 
+6 0 1884
+3 0 1884 0 1884
+4 0 1884 0 1884
+5 0 1884 0 0 0 0 0 0 0 0 1884 22
jcnd=37/1884 0x3877c7a090 0 
* 0 
+6 0 1847
+7 0 1847 0 0 0 0 0 0 0 0 1847 355
jcnd=1035/1847 0x3877c79c50 0 
* 0 
+6 0 812 0 0 1 0 0 1
+3 0 812
+4 0 812
+4 0 812 0 0 0 0 0 0 0 0 812 8
jcnd=384/812 0x3877c79db0 0 
* 0 
+6 0 428
+3 0 428
+4 0 428
+2 0 428
+2 0 428
+3 0 428
+3 0 428
+8 0 428
+3 0 428
+2 0 428
+2 0 428
+4 0 428 428 0 0 1 0 0 1
+4 0 428
+3 0 428 0 0 1 0 0 1 0 0 428 66
jcnd=428/428 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 812 0 812
+4 0 812 0 812
+4 0 812
+3 0 812
jump=812 0x3877c79c73 0 
* 0 
+8 0 864 864 0 1 0 0 1
+4 0 864
+3 0 864 0 0 0 0 0 0 0 0 864 30
jcnd=437/864 0x3877c79ce1 0 
* 0 
+6 0 427 427
+5 0 427 0 0 0 0 0 0 0 0 427 9
jcnd=393/427 0x3877c79ce1 0 
* 0 
+6 0 34 0 0 1 0 0 1
+3 0 34
+3 0 34
+3 0 34
+7 0 34 0 34
+4 0 34 0 34
+4 0 34
+3 0 34 0 34
+4 0 34 0 34 0 0 16 0 0 16
+4 0 34 0 34
+4 0 34 0 0 0 0 0 0 0 0 34 7
jcnd=11/34 +18 0 
* 0 
+2 0 23 0 23 0 0 1 0 0 1
+8 0 23 0 23
+8 0 23
+7 0 23 0 23
+4 0 23
+3 0 23
+3 0 23
+3 0 23
+4 0 23
+3 0 23
+4 0 23
+3 0 23
+3 0 23
+4 0 23 0 23
+4 0 23 0 23 0 0 2 0 0 2
+4 0 23
+4 0 23
+3 0 23 0 23
cfn=(104)
calls=23 0x3877c77180 0 
* 0 92 46 0 0 0 0 0 0 0 23
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 34
+3 0 34
jump=34 0x3877c79ae3 0 
* 0 
+55 0 1360 0 0 1 0 0 1
+7 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360 6
jcnd=520/1360 0x3877c7a0b0 0 
* 0 
+6 0 1336 1336 0 1 0 0 1
+4 0 1336
+3 0 1336
+3 0 1336
+2 0 1336
+4 0 1336
+3 0 1336
+3 0 1336
+2 0 1336
+2 0 1336
+2 0 1336
+2 0 1336 1336
+8 0 1336
+5 0 1336
+5 0 1336
+2 0 1336 0 0 0 0 0 0 0 0 1336
-2 0 649
+2 0 649 0 0 0 0 0 0 0 0 649
+2 0 1985
+2 0 1985 0 0 0 0 0 0 0 0 1985 46
jcnd=1202/1985 +64 0 
* 0 
+2 0 783
+8 0 783
+3 0 783
+3 0 783 0 0 0 0 0 0 0 0 783 1
jcnd=1/783 0x3877c79fc0 0 
* 0 
-6 0 549
+3 0 549
+3 0 549 0 0 0 0 0 0 0 0 549 4
jcnd=133/549 0x3877c79fc0 0 
* 0 
+2 0 1198
+2 0 1198 1198
+8 0 1198
+2 0 1198 0 0 0 0 0 0 0 0 1198 16
jcnd=549/1198 -20 0 
* 0 
+2 0 649
+2 0 649
+5 0 649
+3 0 649
+3 0 649
+2 0 649
+2 0 649
+5 0 649 0 0 0 0 0 0 0 0 649
+2 0 649
+2 0 649
+4 0 649
+2 0 649
+2 0 649 0 0 0 0 0 0 0 0 649
jcnd=649/649 -8 0 
* 0 
-8 0 11768
+4 0 11768
+2 0 11768
+2 0 11768 0 0 0 0 0 0 0 0 11768 824
jcnd=10027/11768 -8 0 
* 0 
-2 0 1202 0 0 1 0 0 1
+2 0 1202 0 0 0 0 0 0 0 0 1202 22
jcnd=1092/1202 -8 0 
* 0 
+2 0 1851 1851 0 0 11 0 0 11
+4 0 1851 0 0 1 0 0 1
+3 0 1851 0 0 0 0 0 0 0 0 1851 990
jcnd=1202/1851 0x3877c7a1cf 0 
* 0 
+6 0 649
+2 0 649
+4 0 649
+2 0 649
+2 0 649
+2 0 649 0 649
+8 0 649
jump=649 0x3877c79f30 0 
* 0 
+37 0 134 134 0 1 0 0 1
+5 0 134 134
+4 0 134
+4 0 134 134
+5 0 134 0 0 0 0 0 0 0 0 134
jcnd=134/134 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 37 0 0 1 0 0 1
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37
jcnd=37/37 0x3877c79ace 0 
* 0 
+16 0 520 520
+4 0 520
+4 0 520
+2 0 520
+5 0 520 520 0 1 1 0 1 1
+4 0 520
+3 0 520 0 0 0 0 0 0 0 0 520 4
jcnd=496/520 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 528 0 0 1 0 0 1
+3 0 528 0 528
+4 0 528
jump=528 0x3877c79b99 0 
* 0 
+36 0 1202 1202 0 1 3 0 1 3
+4 0 1202 1202 0 0 1 0 0 1
+4 0 1202
+3 0 1202 1202
+4 0 1202
+4 0 1202
+3 0 1202
+3 0 1202 1202
+4 0 1202 0 0 0 0 0 0 0 0 1202
+6 0 1202 1202 0 0 1 0 0 1
+4 0 1202 0 0 0 0 0 0 0 0 1202
+6 0 1202 1202 0 1 0 0 1
+8 0 1202 0 1202
+4 0 1202 0 1202
+4 0 1202 0 0 0 0 0 0 0 0 1202 272
jcnd=412/1202 +38 0 
* 0 
+2 0 790 790 0 0 2 0 0 2
+4 0 790
+3 0 790 0 0 0 0 0 0 0 0 790
+2 0 790 790
+5 0 790 0 0 0 0 0 0 0 0 790
+6 0 790 790
+4 0 790 0 790
+4 0 790 790
+4 0 790 0 790
+4 0 790
+4 0 790 0 0 0 0 0 0 0 0 790
-4 0 412
+4 0 412 0 0 0 0 0 0 0 0 412 6
jcnd=26/412 0x3877c7a2e3 0 
* 0 
+6 0 1176 1176
+4 0 1176 1176 0 1 0 0 1
+4 0 1176 0 0 0 0 0 0 0 0 1176
+6 0 1176
+4 0 1176
+7 0 1176 0 1176 0 0 8 0 0 8
+4 0 1176 0 1176
+4 0 1176 0 1176
+4 0 1176 0 1176
+4 0 1176 0 0 0 0 0 0 0 0 1176 5
jcnd=362/1176 +7 0 
* 0 
+2 0 814 0 814
+5 0 814
+7 0 814 0 0 0 0 0 0 0 0 814 1
jcnd=387/814 +18 0 
* 0 
-7 0 362
+7 0 362 0 0 0 0 0 0 0 0 362 4
jcnd=337/362 +18 0 
* 0 
+2 0 452 0 452 0 0 14 0 0 14
+8 0 452 0 452
+8 0 452
+7 0 452 0 452 0 0 3 0 0 3
+4 0 452
+3 0 452
+3 0 452
+4 0 452
+3 0 452
+4 0 452
+3 0 452
+3 0 452
+4 0 452 0 452
+4 0 452 0 452
+4 0 452
jump=452 +71 0 
* 0 
-46 0 740 0 0 1 0 0 1
+7 0 740 0 740 0 0 1 0 0 1
+4 0 740
+3 0 740
+3 0 740
+4 0 740
+3 0 740
+4 0 740
+3 0 740
+3 0 740
+4 0 740 0 740
+4 0 740 0 740
+4 0 740
jump=740 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 34
+7 0 34 0 34
+6 0 34
+3 0 34 0 0 0 0 0 0 0 0 34 2
jcnd=34/34 +7 0 
* 0 
+7 0 1226
+4 0 1226 0 0 1 0 0 1
+3 0 1226
+3 0 1226 0 1226
cfn=(104)
calls=1226 0x3877c77180 0 
* 0 4904 2452 0 1 0 0 1 0 0 1226 33
+5 0 1226
+3 0 1226
jump=1226 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 134 0 0 1 0 0 1
+7 0 134
+2 0 134
+4 0 134
+3 0 134
+3 0 134 0 134
+5 0 134
+3 0 134
+4 0 134
+3 0 134 0 0 1 0 0 1
+4 0 134
+4 0 134
+3 0 134
+4 0 134 0 134
+4 0 134 0 134 0 0 5 0 0 5
+4 0 134
+3 0 134
+3 0 134 0 134
cfn=(104)
calls=134 0x3877c77180 0 
* 0 536 268 0 0 0 0 0 0 0 134 1
+5 0 134
+3 0 134
jump=134 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

totals: 13387194 5500555 3157398 243 107 151 243 107 151 386222 7380 9206 189
