version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1389


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1792388421 - 1792549385
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 396 0 0 1 0 0 1
+3 0 396 0 0 0 0 0 0 0 0 396
+2 0 396
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=396 0x3877c7b8b0 0 
* 0 42708 10800 5656 21 3 0 21 3 0 10158 169
* 0 396 396 0 1 1 0 1 1 0 0 0 396

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 396 0 396 1 0 0 1
+1 0 396
+5 0 396
+3 0 396 0 396
+1 0 396
+4 0 396 0 0 1 0 0 1
+3 0 396
+4 0 396
+3 0 396 0 396 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=396 0x3877c7aa50 0 
* 0 91328 14572 13904 34 31 35 34 31 35 15079 470
* 0 396 396 0 1 1 0 1 1 0 0 0 396
+5 0 396
+3 0 396 0 0 0 0 0 0 0 0 396
jcnd=396/396 +96 0 
* 0 
+96 0 396 0 0 1 0 0 1
+4 0 396 396
+1 0 396 396
+1 0 396 396

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 252 0 252
+1 * 252
+3 * 252 0 252
+4 +1 252 252
+4 * 252 252
+1 * 252 252

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 384 0 384 1 0 0 1
+1 * 384
+3 * 384 0 384
+4 +1 384 384 0 1 0 0 1
+4 * 384 384
+1 * 384 384

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 252 0 252
+1 * 252
+3 * 252 0 252 0 0 1 0 0 1
+4 +1 252 252
+4 * 252 252
+1 * 252 252

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 384 0 384 1 0 0 1
+1 * 384
+3 * 384
+4 * 384 0 384
+4 +1 384
+4 * 384
+3 * 384 0 384
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=384 0x404ffe 790 
* * 2304 1152 768 1 0 0 1
+5 * 384 384
+3 * 384 384
+1 * 384 384

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 384 0 384 1 0 0 1
+1 * 384
+3 * 384 0 384
+4 +1 384 384
+4 * 384 384
+1 * 384 384

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 384 0 384 1 0 0 1
+1 * 384
+3 * 384
+4 * 384 0 384
+4 +1 384
+4 * 384
+3 * 384 0 384 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=384 0x40500c 790 
* * 2304 1152 768 1 0 0 1
+5 * 384 384
+3 * 384 384
+1 * 384 384

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 192 0 192
+1 * 192
+3 * 192 0 192
+4 * 192 0 192
+4 * 192 192
+4 * 192 192
+1 * 192 192

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 198 0 198
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 * 198 0 198
+4 +1 198 198
+4 * 198
+3 * 198 0 198
cob=(5)
cfi=(8)
cfn=(164)
calls=198 0x387e4bb2f0 0 
* * 21680 5406 2730 23 4 0 23 4 0 5130 136 198
* * 198 198 0 1 1 0 1 1 0 0 0 198
+5 * 198 198
+1 * 198 198

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 198 0 198
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 * 198 0 198
+4 +1 198 198
+4 * 198
+3 * 198 0 198
cob=(5)
cfi=(8)
cfn=(164)
calls=198 0x387e4bb2f0 0 
* * 22612 5790 2926 0 0 0 0 0 0 5424 33 198
* * 198 198 0 0 0 0 0 0 0 0 0 198
+5 * 198 198
+1 * 198 198

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 198 0 198 1 0 0 1
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 * 198 0 198
+4 +2 198 198
+4 * 198
+3 * 198 0 198
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=198 0x4048de +12 
* * 1188 396 396 1 0 0 1
+5 * 198 198
+4 * 198 0 0 1 0 0 1
+3 * 198
+2 * 198 0 0 0 0 0 0 0 0 198
jcnd=198/198 +7 +3 
* * 
+7 +3 198 198
+4 * 198
+4 * 198
+3 * 198 0 198
cob=(5)
cfi=(8)
cfn=(32)
calls=198 0x387e4bd0b0 0 
* * 48761 8052 7171 14 9 22 14 9 22 7750 226 198
* * 198 198 0 0 0 0 0 0 0 0 0 198
+5 +1 198 198
+1 * 198 198

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 192 0 192 1 0 0 1
+1 * 192
+3 * 192 0 192 0 0 1 0 0 1
+4 * 192 0 192
+4 * 192 192
+1 * 192 192

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 192 0 192 1 0 0 1
+1 * 192
+3 * 192 0 192
+4 * 192 0 192
+4 * 192 192
+1 * 192 192

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 192 0 192
+1 * 192
+3 * 192 0 192
+4 * 192 192
+1 * 192 192

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 198 0 198 1 0 0 1
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 * 198 0 198 1 0 0 1
+4 +2 198 198
+4 * 198
+3 * 198 0 198
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=198 0x404992 +12 
* * 1188 396 396 1 0 0 1
+5 * 198 198
+4 * 198
+3 * 198
+2 * 198 0 0 0 0 0 0 0 0 198
jcnd=198/198 +7 +3 
* * 
+7 +3 198 198
+4 * 198
+4 * 198
+3 * 198 0 198
cob=(5)
cfi=(8)
cfn=(32)
calls=198 0x387e4bd0b0 0 
* * 48903 8104 7921 24 23 14 24 23 14 7725 244 198
* * 198 198 0 1 1 0 1 1 0 0 0 198
+5 +1 198 198
+1 * 198 198

fn=(102)
0x4048de 113 210 0 210 1 0 0 1
+1 * 210
+3 * 210 0 210
+4 +1 210
+10 * 210 210
+1 * 210 210

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 96 0 96
+1 * 96
+3 * 96
+4 * 96 0 96
+4 * 96 0 96
+4 * 96 0 96
+4 +1 96 96
+4 * 96
+3 * 96
+5 * 96 0 96
cfi=(16)
cfn=(226)
calls=96 0x402d61 -20 
* * 672 288 288
+5 * 96
+3 * 96 0 0 0 0 0 0 0 0 96
+2 * 96 96
+4 * 96 96 0 0 6 0 0 6
+2 * 96 0 96 0 0 6 0 0 6
+2 * 96 96
+1 * 96 96

fn=(28)
0x404992 113 210 0 210 1 0 0 1
+1 * 210
+3 * 210 0 210
+4 +1 210
+10 * 210 210
+1 * 210 210

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 192 0 192
+1 * 192
+3 * 192 0 192
+4 * 192 192
+1 * 192 192

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 96 0 96
+1 * 96
+3 * 96
+4 * 96 0 96
+4 * 96 0 96
+4 * 96 0 96
+4 +1 96 96
+4 * 96
+3 * 96
+5 * 96 0 96
cfi=(16)
cfn=(226)
calls=96 0x402d61 -20 
* * 672 288 288
+5 * 96
+3 * 96 0 0 0 0 0 0 0 0 96
+2 * 96 96
+4 * 96 96 0 0 7 0 0 7
+2 * 96 0 96 0 0 2 0 0 2
+2 * 96 96
+1 * 96 96

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +2 192 192
+4 * 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=192 0x404484 107 
* * 66834 20852 19704 25 3 4 25 3 4 2252 124 380 47
+5 * 192 192
+1 * 192 192

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +2 192 192 0 1 0 0 1
+4 * 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=192 0x404a36 450 
* * 61458 18932 17784 24 3 4 24 3 4 2252 124 380 47
+5 * 192 192
+1 * 192 192

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +2 192 192
+4 * 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=192 0x40439c 107 
* * 66834 20852 19704 7 1 7 7 1 7 2252 108 380
+5 * 192 192
+1 * 192 192

fn=(116)
0x40439c 107 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +10 192 192
+4 * 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=192 0x4047d7 -26 
* * 64146 19892 18744 7 1 7 7 1 7 2252 108 380
+5 +1 192 192
+1 * 192 192

fn=(118)
0x4047d7 91 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +2 192 192
+4 * 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=192 0x4049e2 450 
* * 61458 18932 17784 7 1 7 7 1 7 2252 108 380
+5 * 192 192
+1 * 192 192

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +10 192 192
+4 * 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(52)
calls=192 0x404829 -26 
* * 64146 19892 18744 25 3 4 25 3 4 2252 124 380 47
+5 +1 192 192
+1 * 192 192

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 198 0 198 1 0 0 1
+1 * 198 0 0 1 0 0 1
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 0 198 198
+5 0 198 0 0 0 0 0 0 0 0 198
+2 0 198 198
+4 0 198 198
+4 0 198
+5 0 198
+3 0 198
+3 0 198 0 198
fi=(6) ???
cfi=(5)
cfn=(100)
calls=198 0x40461a 99 
* 0 53909 9636 8755 17 9 22 17 9 22 7948 226 396
+5 0 198
fi=(6)
jump=198 +7 0 
* 0 
+7 0 198 198
+1 0 198 198

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 14448 0 14448
+1 * 14448
+3 * 14448 0 14448
+4 * 14448 0 14448
+4 +1 14448 14448
+4 * 14448 14448
+3 * 14448 14448
+4 * 14448
+4 * 14448
+3 * 14448 14448
+1 * 14448 14448

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 14448 0 14448
+1 * 14448
+3 * 14448 0 14448 1 0 0 1
+4 * 14448 0 14448
+4 +1 14448 14448
+4 * 14448 14448
+3 * 14448 14448
+4 * 14448
+4 * 14448
+3 * 14448 14448
+1 * 14448 14448

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 192
+4 * 192
+3 * 192 0 192
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(194) std::allocator<int>::~allocator()
calls=192 0x403d7e +42 
* * 2688 960 960 1 0 0 1
+5 * 192 192
+1 * 192 192

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 192 0 192 1 0 0 1
+1 * 192
+3 * 192 0 192
+1 * 192
+4 * 192 0 192
+4 +2 192 192
+4 * 192 192
+4 * 192
+3 * 192 192
+4 * 192 192
+3 * 192
+3 * 192
+3 * 192
+4 * 192
+3 * 192 192
+4 * 192 192
+3 -1 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=192 0x403d98 +11 
* * 27374 7560 4770 1 0 0 1 0 0 5480 27 384
+5 +1 192 192
+4 * 192
+3 * 192 0 192
cfn=(192)
calls=192 0x403296 -82 
* * 4416 1536 1536 1 0 0 1
+5 * 192
jump=192 +28 * 
* * 
+28 * 192
+4 * 192 192
+1 * 192 192
+1 * 192 192

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 792 0 792 1 0 0 1
+1 * 792
+3 * 792 0 792 0 0 1 0 0 1
+4 +1 792 792
+4 * 792 792 0 1 1 0 1 1
+4 * 792
+3 * 792 792
+4 * 792 792
+3 * 792
+3 * 792
+3 * 792
+4 * 792 792
+1 * 792 792

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 +2 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=192 0x404236 -14 
* * 55357 10349 9971 21 15 8 21 15 8 7848 206 384
+5 * 192 192
+4 * 192 0 192
+3 +1 192 192
+4 * 192 192 0 1 0 0 1
+3 * 192 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+3 * 192 192
+4 * 192
+4 * 192
+3 * 192 192
+4 * 192 0 192
+4 +1 192 192
+1 * 192 192

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 +2 192 192
+4 * 192 192 0 1 0 0 1
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(96)
calls=192 0x403fbe -14 
* * 55469 10319 9245 18 6 18 18 6 18 7926 216 384
+5 * 192 192
+4 * 192 0 192
+3 +1 192 192
+4 * 192 192
+3 * 192 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+3 * 192 192
+4 * 192
+4 * 192
+3 * 192 192
+4 * 192 0 192
+4 +1 192 192
+1 * 192 192

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 96 0 96
+1 * 96
+3 * 96 0 0 1 0 0 1
+4 * 96 0 96
+4 * 96 0 96
+4 +2 96 96
+4 * 96 96
+4 * 96 96
+4 * 96 96
+4 * 96
+3 * 96 0 0 0 0 0 0 0 0 96
jcnd=6/96 +51 +10 
* * 
+2 +3 90 90
+4 * 90 90
+4 * 90 90
+4 -1 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(3)
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=90 0x4036b1 215 
* * 3420 1170 1260 0 6 3 0 6 3 90
+5 +2 90 90
+4 * 90 90
+4 * 90
+4 * 90 90
+4 * 90 0 90
+4 * 90
jump=90 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8578 2623 2271 27 9 12 27 9 12 511 52 35
+5 +2 96 96
+1 * 96 96

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 402 0 402 1 0 0 1
+1 * 402
+3 * 402 0 402 1 0 0 1
+4 +1 402 402
+4 * 402 402
+1 * 402 402

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+3 * 192 0 192
+4 * 192
+4 * 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=192 0x404380 726 
* * 1920 960 768
+5 * 192 192
+4 * 192 192
+1 * 192 192

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 192 0 192
+1 * 192
+3 * 192 0 192
+1 * 192
+4 * 192 0 192 1 0 0 1
+4 +2 192 192
+4 * 192
+3 * 192 0 192
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=192 0x40325e 113 
* * 1152 576 384
+5 * 192
+3 * 192 192
+4 * 192 192
+4 * 192 192
+4 * 192 192
+3 -1 192
+3 * 192
+3 * 192 0 192
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=192 0x40326c 148 
* * 5952 1920 2304 4 0 0 4
+5 +1 192 192
+4 * 192
+3 * 192 0 192
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=192 0x4031ec 159 
* * 36260 10836 7074 27 5 0 27 5 0 5192 134 384
+5 * 192
jump=192 +28 * 
* * 
+28 * 192 0 0 1 0 0 1
+4 * 192 192
+1 * 192 192
+1 * 192 192

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 198 0 198 1 0 0 1
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 * 198 0 198
+4 +2 198 198
+5 * 198 0 0 0 0 0 0 0 0 198
+2 +1 198 198
+4 * 198 198
+4 * 198 198
+4 * 198
+3 * 198
+3 * 198 0 198
cfi=(5)
cfn=(160)
calls=198 0x4044d6 -65 
* * 24056 6198 3720 24 5 0 24 5 0 5130 136 396
+5 +1 198 198
+1 * 198 198

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 192 0 192
+1 * 192
+3 * 192 0 192
+1 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=192 0x4043ca -45 
* * 6912 2496 2688 4 0 4 4 0 4
+5 +1 192 192 0 1 0 0 1
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(20)
calls=192 0x404412 +43 
* * 60157 12653 11315 22 15 8 22 15 8 7848 206 384
+5 * 192
jump=192 +28 * 
* * 
+28 * 192
+4 * 192 192
+1 * 192 192
+1 * 192 192

fn=(14)
0x4043ca 90 192 0 192 1 0 0 1
+1 * 192
+3 * 192
+4 * 192 0 192 0 0 1 0 0 1
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=192 0x404804 +24 
* * 3456 1152 1344 2 0 1 2 0 1
+5 * 192 192
+4 * 192 0 192 0 0 2 0 0 2
+7 * 192 192
+4 * 192 0 192 1 0 0 1
+8 * 192 192
+4 * 192 0 192
+8 +1 192 192
+1 * 192 192

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 192 0 192 1 0 0 1
+1 * 192
+3 * 192 0 192
+2 * 192 0 192
+2 * 192 0 192
+1 * 192 0 0 1 0 0 1
+4 * 192 0 192
+4 * 192 0 192
+4 +2 192 192
+4 * 192
+3 * 192 0 192
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=192 0x4039fc 117 
* * 1152 576 384 2 0 0 2
+5 * 192
+3 * 192 0 192
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=192 0x4039ed -88 
* * 1152 576 384
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(2)
calls=192 0x402d74 645 
* * 2496 1152 384
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192
+3 * 192
+3 * 192 0 192 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=192 0x403a0a 134 
* * 71405 16463 14621 25 6 18 25 6 18 7926 216 384
+5 +4 192 192
+4 * 192
+3 * 192 0 192
cfn=(106)
calls=192 0x40325e 113 
* * 1152 576 384 1 0 0 1
+5 * 192
+3 * 192 192
+4 * 192 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=192 0x403a98 565 
* * 4800 1920 1536 2 0 0 2
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(112)
calls=192 0x403a68 547 
* * 4800 1920 1536
+5 * 192
+3 * 192
+3 * 192
+3 * 192
+3 * 192 0 192
cfi=(11)
cfn=(114)
calls=192 0x403ac9 -60 
* * 69714 21812 20856 7 1 7 7 1 7 2252 108 380
+5 -3 192 192
+4 * 192 0 192
+4 * 192
jump=192 +28 +4 
* * 
+28 +4 192
+4 * 192 192
+1 * 192 192
+2 * 192 192
+2 * 192 192
+1 * 192 192

fn=(188)
0x403d98 171 198 0 198 1 0 0 1
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 * 198 0 198
+4 +2 198 198
+5 * 198 0 0 0 0 0 0 0 0 198 6
+2 +1 198 198
+4 * 198 198
+4 * 198 198
+4 * 198
+3 * 198
+3 * 198 0 198
cfi=(5)
cfn=(190)
calls=198 0x40452a -65 
* * 24988 6582 3916 0 0 0 0 0 0 5424 33 396
+5 +1 198 198
+1 * 198 198

fn=(22)
0x404236 167 198 0 198 1 0 0 1
+1 * 198
+3 * 198
+4 * 198 0 198 1 0 0 1
+4 * 198 0 198
+4 0 198 198
+5 0 198 0 0 0 0 0 0 0 0 198
+2 0 198 198
+4 0 198 198
+4 0 198
+5 0 198
+3 0 198
+3 0 198 0 198
fi=(6)
cfi=(5)
cfn=(26)
calls=198 0x404730 99 
* 0 54051 9688 9505 28 24 14 28 24 14 7923 244 396
+5 0 198
fi=(6)
jump=198 +7 0 
* 0 
+7 0 198 198
+1 0 198 198

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 192 0 192 1 0 0 1
+1 * 192
+3 * 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+4 * 192 0 192
+4 * 192
+4 * 192 0 0 1 0 0 1
+4 * 192
+3 * 192
+3 * 192 0 192
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=192 0x404468 726 
* * 1920 960 768 1 0 0 1
+5 * 192 192
+4 * 192 192
+1 * 192 192

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+3 * 192 0 192
+4 * 192
+4 * 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfi=(10)
cfn=(44)
calls=192 0x404468 726 
* * 1920 960 768
+5 * 192 192
+4 * 192 192
+1 * 192 192

fn=(86)
0x403a0a 134 192 0 192
+1 * 192
+3 * 192 0 192
+1 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=192 0x4042e2 -45 
* * 6912 2496 2688 5 0 0 5
+5 +1 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192 1 0 0 1
cfn=(94)
calls=192 0x40432a +43 
* * 60269 12623 10589 19 6 18 19 6 18 7926 216 384
+5 * 192
jump=192 +28 * 
* * 
+28 * 192
+4 * 192 192
+1 * 192 192
+1 * 192 192

fn=(88)
0x4042e2 90 192 0 192 1 0 0 1
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=192 0x4047b2 +24 
* * 3456 1152 1344 3 0 0 3
+5 * 192 192
+4 * 192 0 192
+7 * 192 192
+4 * 192 0 192
+8 * 192 192
+4 * 192 0 192
+8 +1 192 192
+1 * 192 192

fn=(156)
0x4031ec 159 192 0 192 1 0 0 1
+1 * 192
+3 * 192 0 192
+1 * 192
+4 * 192 0 192
+4 +2 192 192
+4 * 192 192 0 1 0 0 1
+4 * 192
+3 * 192 192
+4 * 192 192
+3 * 192
+3 * 192
+3 * 192
+4 * 192
+3 * 192 192
+4 * 192 192
+3 -1 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(158)
calls=192 0x403ce6 +11 
* * 26468 7188 4578 24 5 0 24 5 0 5192 134 384
+5 +1 192 192
+4 * 192
+3 * 192 0 192
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=192 0x4031b8 -82 
* * 4416 1536 1536 1 0 0 1
+5 * 192
jump=192 +28 * 
* * 
+28 * 192
+4 * 192 192
+1 * 192 192
+1 * 192 192

fn=(172)
0x4031b8 79 192 0 192 1 0 0 1
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 192
+4 * 192
+3 * 192 0 192
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=192 0x403ccc +42 
* * 2688 960 960
+5 * 192 192
+1 * 192 192

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246)
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 408 0 408 1 0 0 1
+1 * 408
+3 * 408 0 408
+4 +1 408 408
+4 * 408 408 0 0 2 0 0 2
+4 * 408
+3 * 408 408
+4 * 408 408
+3 * 408
+3 * 408
+3 * 408
+4 * 408 408
+1 * 408 408

fn=(106)
0x40325e 113 402 0 402 1 0 0 1
+1 * 402
+3 * 402 0 402
+4 +1 402 402
+4 * 402 402
+1 * 402 402

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6)
0x403b08 117 204 0 204 1 0 0 1
+1 * 204
+3 * 204 0 204 0 0 1 0 0 1
+4 +1 204 204
+4 * 204 204
+1 * 204 204

fn=(82)
0x4039fc 117 204 0 204 1 0 0 1
+1 * 204
+3 * 204 0 204 1 0 0 1
+4 +1 204 204
+4 * 204 204
+1 * 204 204

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 96 0 96
+1 * 96
+3 * 96
+4 * 96 0 96
+4 * 96 0 96
+4 +2 96 96
+4 * 96 96
+4 * 96 96
+4 * 96 96
+4 * 96
+3 * 96 0 0 0 0 0 0 0 0 96 6
jcnd=6/96 +51 +10 
* * 
+2 +3 90 90
+4 * 90 90
+4 * 90 90
+4 -1 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=90 0x403373 215 
* * 3420 1170 1260 0 6 1 0 6 1 90
+5 +2 90 90
+4 * 90 90
+4 * 90
+4 * 90 90
+4 * 90 0 90
+4 * 90
jump=90 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8298 2589 2243 24 4 8 24 4 8 452 16 35
+5 +2 96 96
+1 * 96 96

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 192 0 192 1 0 0 1
+1 * 192
+3 * 192 0 192
+2 * 192 0 192
+2 * 192 0 192
+1 * 192
+4 * 192 0 192 1 0 0 1
+4 * 192 0 192
+4 +2 192 192
+4 * 192
+3 * 192 0 192
cfn=(6)
calls=192 0x403b08 117 
* * 1152 576 384 1 0 1 1 0 1
+5 * 192
+3 * 192 0 192
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=192 0x403afa -88 
* * 1152 576 384 1 0 0 1
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(10)
calls=192 0x402f54 645 
* * 2496 1152 384 1 1 0 1 1
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192
+3 * 192
+3 * 192 0 192
cfn=(12)
calls=192 0x403b16 134 
* * 71293 16493 15347 27 15 12 27 15 12 7848 206 384
+5 +4 192 192 0 1 0 0 1
+4 * 192
+3 * 192 0 192
cfn=(40)
calls=192 0x40333c 113 
* * 1152 576 384 2 0 0 2
+5 * 192
+3 * 192 192
+4 * 192 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(42)
calls=192 0x403ba4 565 
* * 4800 1920 1536 3 0 0 3
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(46)
calls=192 0x403b74 547 
* * 4800 1920 1536
+5 * 192
+3 * 192
+3 * 192
+3 * 192
+3 * 192 0 192 1 0 0 1
cfi=(11)
cfn=(48)
calls=192 0x403bd5 -60 
* * 69714 21812 20856 26 3 4 26 3 4 2252 124 380 47
+5 -3 192 192
+4 * 192 0 192
+4 * 192
jump=192 +28 +4 
* * 
+28 +4 192
+4 * 192 192
+1 * 192 192
+2 * 192 192
+2 * 192 192
+1 * 192 192

fn=(108)
0x403a98 565 192 0 192 1 0 0 1
+1 * 192
+3 * 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+4 * 192 0 192
+4 * 192
+4 * 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfi=(10)
cfn=(110)
calls=192 0x404380 726 
* * 1920 960 768 1 0 0 1
+5 * 192 192
+4 * 192 192
+1 * 192 192

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 192 0 192
+1 * 192
+3 * 192 0 192
+1 * 192
+4 * 192 0 192 1 0 0 1
+4 +2 192 192
+4 * 192
+3 * 192 0 192
cfn=(40)
calls=192 0x40333c 113 
* * 1152 576 384
+5 * 192
+3 * 192 192
+4 * 192 192
+4 * 192 192
+4 * 192 192
+3 -1 192
+3 * 192
+3 * 192 0 192
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=192 0x40334a 148 
* * 5952 1920 2304 2 0 0 2
+5 +1 192 192
+4 * 192
+3 * 192 0 192
cfn=(186)
calls=192 0x4032ca 159 
* * 37166 11208 7266 3 0 0 3 0 0 5480 27 384
+5 * 192
jump=192 +28 * 
* * 
+28 * 192 0 0 1 0 0 1
+4 * 192 192
+1 * 192 192
+1 * 192 192

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fl=(12)
fn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404bc6 288 384 0 384 1 0 0 1
+1 * 384
+3 * 384
+4 * 384 0 384
+4 +1 384 384
+4 * 384
+3 * 384 0 384
cfi=(13)
cfn=(124)
calls=384 0x404d36 -77 
* * 2304 1152 768 2 0 0 2
+5 * 384 384
+1 * 384 384

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 384 0 384 1 0 0 1
+1 * 384
+3 * 384
+4 * 384 0 384 1 0 0 1
+4 +1 384 384
+4 * 384
+3 * 384 0 384
cfi=(13)
cfn=(58)
calls=384 0x404d8f -77 
* * 2304 1152 768 1 0 0 1
+5 * 384 384
+1 * 384 384

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 204 0 204
+1 * 204
+3 * 204
+4 * 204 0 204 1 0 0 1
+4 * 204 0 204
+4 * 204 0 204
+4 +2 204 204
+4 * 204 204
+4 * 204
+3 * 204
+3 * 204
+4 * 204 0 204
+4 +1 204 204
+5 * 204 0 0 0 0 0 0 0 0 204
jcnd=6/204 +33 +2 
* * 
+2 +1 198 198
+4 * 198
+8 * 198 198
+4 * 198 198
+4 * 198
+3 * 198 0 0 1 0 0 1
+3 * 198 0 198 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=198 0x3877c83840 0 
* * 25872 6562 6171 11 2 5 11 2 5 2108 126 193 47
* * 198 198 0 1 1 0 1 1 0 0 0 198
+5 +1 204 204
+4 * 204
+8 * 204 204
+4 * 204
+3 +1 204 204
+1 * 204 204

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 204 0 204
+1 * 204
+3 * 204
+4 * 204 0 204 1 0 0 1
+4 * 204 0 204
+4 * 204 0 204 0 0 1 0 0 1
+4 +2 204 204
+4 * 204 204
+4 * 204
+3 * 204
+3 * 204
+4 * 204 0 204
+4 +1 204 204
+5 * 204 0 0 0 0 0 0 0 0 204
jcnd=6/204 +33 +2 
* * 
+2 +1 198 198
+4 * 198
+8 * 198 198
+4 * 198 198
+4 * 198
+3 * 198
+3 * 198 0 198
cob=(2)
cfi=(9)
cfn=(78)
calls=198 0x3877c83840 0 
* * 25872 6562 6171 0 1 8 0 1 8 2108 112 193
* * 198 198 0 0 0 0 0 0 0 0 0 198
+5 +1 204 204
+4 * 204
+8 * 204 204
+4 * 204
+3 +1 204 204
+1 * 204 204

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192 1 0 0 1
+4 * 192 0 192
+4 * 192 0 192
+4 +8 192 0 192
+4 +3 192 192
+4 * 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(74)
calls=192 0x404f37 -22 
* * 30738 8564 7224 14 3 3 14 3 3 2252 124 380 47
+5 +1 192 192
+1 * 192 192

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 192 0 192
+1 * 192
+3 * 192 0 192
+2 * 192 0 192
+1 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +4 192 192
+4 * 192
+3 * 192 0 192
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=192 0x404878 277 
* * 2880 1152 960 1 0 0 1
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=192 0x404d44 277 
* * 4800 1728 1536 2 0 0 2
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(132)
calls=192 0x404d44 277 
* * 4800 1728 1536
+5 * 192
+3 * 192
+3 * 192
+3 * 192 0 192
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=192 0x404d5e -49 
* * 33618 9524 8376 1 1 7 1 1 7 2252 108 380
+5 +1 192
+4 * 192 192
+1 * 192 192
+2 * 192 192
+1 * 192 192

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 192 0 192
+1 * 192
+3 * 192 0 192
+1 * 192
+4 * 192 0 192 1 0 0 1
+4 * 192 0 192
+4 * 192 0 192
+4 +10 192 192
+4 * 192
+3 * 192 0 192
cfn=(56)
calls=192 0x404c38 288 
* * 2880 1152 960 3 0 0 3
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(56)
calls=192 0x404c38 288 
* * 2880 1152 960
+5 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=192 0x404c52 -36 
* * 51474 15476 14328 20 3 4 20 3 4 2252 124 380 47
+5 +1 192
+4 * 192 192
+1 * 192 192
+1 * 192 192

fn=(60)
0x404c52 424 192 0 192
+1 * 192
+3 * 192 0 192
+2 * 192 0 192
+1 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +4 192 192
+4 * 192
+3 * 192 0 192
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=192 0x40492d 277 
* * 2880 1152 960 2 0 0 2
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=192 0x404d9d 277 
* * 4800 1728 1536 2 0 1 2 0 1
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(66)
calls=192 0x404d9d 277 
* * 4800 1728 1536
+5 * 192
+3 * 192
+3 * 192
+3 * 192 0 192
cfn=(72)
calls=192 0x404db7 -49 
* * 33618 9524 8376 15 3 3 15 3 3 2252 124 380 47
+5 +1 192
+4 * 192 192
+1 * 192 192
+2 * 192 192
+1 * 192 192

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 228 0 228 1 0 0 1
+1 * 228
+3 * 228
+4 * 228 0 228
+4 +1 228 228
+4 * 228
+3 * 228 0 228 1 0 0 1
cfi=(13)
cfn=(64)
calls=228 -33 -66 
* * 1368 684 456
+5 * 228 228
+1 * 228 228

fn=(66)
0x404d9d 277 384 0 384
+1 * 384
+3 * 384
+4 * 384 0 384
+4 +1 384 384
+4 * 384
+3 * 384 0 384
cfi=(13)
cfn=(68)
calls=384 0x404f1a -58 
* * 6144 2304 1920 2 0 1 2 0 1
+5 * 384 384
+1 * 384 384

fn=(240)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 192 0 192
+1 * 192
+3 * 192 0 192
+1 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +10 192 192
+4 * 192
+3 * 192 0 192
cfn=(122)
calls=192 0x404bc6 288 
* * 2880 1152 960 3 0 0 3
+5 * 192
+3 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(122)
calls=192 0x404bc6 288 
* * 2880 1152 960
+5 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(126)
calls=192 0x404be0 -36 
* * 51474 15476 14328 4 1 7 4 1 7 2252 108 380
+5 +1 192
+4 * 192 192
+1 * 192 192
+1 * 192 192

fn=(128)
0x404878 277 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228 1 0 0 1
+4 +1 228 228
+4 * 228
+3 * 228 0 228
cfi=(13)
cfn=(130)
calls=228 -33 -66 
* * 1368 684 456 0 0 1 0 0 1
+5 * 228 228
+1 * 228 228

fn=(132)
0x404d44 277 384 0 384
+1 * 384
+3 * 384
+4 * 384 0 384
+4 +1 384 384
+4 * 384
+3 * 384 0 384
cfi=(13)
cfn=(134)
calls=384 0x404e98 -58 
* * 6144 2304 1920 2 0 0 2
+5 * 384 384
+1 * 384 384

fn=(138)
0x404d5e 379 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 * 192 0 192
+4 +8 192 0 192
+4 +3 192 192
+4 * 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfn=(140)
calls=192 0x404eb5 -22 
* * 30738 8564 7224 1 1 7 1 1 7 2252 108 380
+5 +1 192 192
+1 * 192 192

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 384 0 384 1 0 0 1
+1 * 384
+3 * 384 0 384
+4 +1 384 384
+4 * 384 384
+1 * 384 384

fn=(110)
0x404380 726 384 0 384 1 0 0 1
+1 * 384
+3 * 384 0 384
+4 * 384 0 384
+4 * 384 384
+4 * 384 384
+3 * 384 384
+4 * 384 0 384
+3 * 384 384
+1 * 384 384

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 384 0 384 1 0 0 1
+1 * 384
+3 * 384 0 384
+4 +1 384 384
+4 * 384 384
+1 * 384 384

fn=(44)
0x404468 726 384 0 384
+1 * 384
+3 * 384 0 384
+4 * 384 0 384
+4 * 384 384
+4 * 384 384
+3 * 384 384
+4 * 384 0 384 1 0 0 1
+3 * 384 384
+1 * 384 384

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262)
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fl=(14)
fn=(150)
0x40326c 148 198 0 198
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 * 198 0 198
+4 +3 198 198 0 1 0 0 1
+4 * 198 198
+4 * 198
+3 * 198
+3 * 198 0 198
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=198 0x403d1a -29 
* * 3564 1188 1386 3 0 0 3
+5 +1 198 198
+1 * 198 198

fn=(180)
0x40334a 148 198 0 198
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 * 198 0 198
+4 +3 198 198
+4 * 198 198
+4 * 198
+3 * 198
+3 * 198 0 198
cfn=(182) void std::_Destroy<int*>(int*, int*)
calls=198 0x403dcc -29 
* * 3564 1188 1386 2 0 0 2
+5 +1 198 198
+1 * 198 198

fn=(152)
0x403d1a 122 198 0 198 1 0 0 1
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 +4 198 198
+4 * 198 198
+4 * 198
+3 * 198
+3 * 198 0 198
cfn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
calls=198 0x4044f8 -14 
* * 1188 396 594 2 0 0 2
+5 +2 198 198
+1 * 198 198

fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 198 0 198 1 0 0 1
+1 * 198
+3 * 198 0 198
+4 * 198 0 198
+4 * 198 198
+1 * 198 198

fn=(154)
0x4044f8 112 198 0 198 1 0 0 1
+1 * 198
+3 * 198 0 198
+4 * 198 0 198 1 0 0 1
+4 * 198 198
+1 * 198 198

fn=(182)
0x403dcc 122 198 0 198 1 0 0 1
+1 * 198
+3 * 198
+4 * 198 0 198
+4 * 198 0 198
+4 +4 198 198
+4 * 198 198
+4 * 198
+3 * 198
+3 * 198 0 198
cfn=(184)
calls=198 0x40454c -14 
* * 1188 396 594 1 0 0 1
+5 +2 198 198
+1 * 198 198

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1862 329 326 9 9 6 9 9 6 273 38 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 12 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1608 307 302 1 3 4 1 3 4 220 10 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 4 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 96 0 96 1 0 0 1
+1 * 96
+3 * 96
+4 * 96 0 96
+4 * 96 0 96
+4 +1 96 96
+4 * 96
+3 * 96 0 96
cfi=(2)
cfn=(2)
calls=96 0x402d74 645 
* * 1248 576 192
+5 * 96
+3 * 96 0 96
+3 +1 96 96
+6 * 96 0 96
+3 * 96 96
+6 * 96 0 96
+3 +1 96 96
+6 * 96 0 96 1 0 0 1
+3 * 96 96
+6 * 96 0 96
+3 +2 96 0 96
+7 * 96
jump=96 +86 * 
* * 
+2 +1 4752 4752
+3 * 4752
+3 * 4752 4752
+4 * 4752
+3 * 4752
+3 * 4752 0 4752
cfi=(2)
cfn=(144)
calls=4752 0x402d9a 770 
* * 52272 23760 14256
+5 * 4752 4752
+4 * 4752 4752
+5 * 4752
+4 * 4752 0 4752
+5 +1 4752 4752
+3 * 4752
+3 * 4752 4752
+4 * 4752
+3 * 4752
+3 * 4752 0 4752
cfi=(2)
cfn=(146)
calls=4752 0x402dba 770 
* * 52272 23760 14256 1 0 0 1
+5 * 4752 4752
+2 * 4752
+4 * 4752 4752
+5 * 4752
+4 * 4752 0 4752
+5 -2 4752 0 4752
+4 * 4752 4752
+3 * 4752
+3 * 4752 4752
+3 * 4752 0 0 0 0 0 0 0 0 4752 97
jcnd=4656/4752 -93 +1 
* * 
-9 * 96 96 0 1 0 0 1
+3 * 96
+3 * 96 96
+3 * 96 0 0 0 0 0 0 0 0 96
jcnd=96/96 -93 +1 
* * 
+2 +4 96 96
+3 * 96
+3 * 96
+4 * 96 96 0 1 0 0 1
+5 * 96
+4 * 96
+3 * 96 0 96
+5 +1 96 96
+3 * 96
+3 * 96
+4 * 96 96
+5 * 96
+4 * 96
+3 * 96 0 96
+5 +1 96 0 96
+7 * 96
jump=96 0x4016ee * 
* * 
+2 +1 4752 4752
+3 * 4752
+3 * 4752 4752
+4 * 4752
+3 * 4752 0 0 1 0 0 1
+3 * 4752 0 4752
cfi=(2)
cfn=(146)
calls=4752 0x402dba 770 
* * 52272 23760 14256
+5 * 4752 4752
+2 * 4752
+4 * 4752 4752
+5 * 4752 0 4752
+5 +1 4752 4752
+3 * 4752
+3 * 4752 4752
+4 * 4752
+3 * 4752
+3 * 4752 0 4752
cfi=(2)
cfn=(144)
calls=4752 0x402d9a 770 
* * 52272 23760 14256
+5 * 4752 4752
+4 * 4752 4752
+5 * 4752 0 4752
+5 +1 4752 4752
+5 * 4752 4752
+5 * 4752 4752
+5 * 4752
+4 * 4752 0 4752
+5 +1 4752 4752
+5 * 4752 4752
+5 * 4752 4752
+5 * 4752
+4 * 4752 0 4752
+5 -4 4752 0 4752
+4 * 4752 4752
+3 * 4752
+3 * 4752 4752
+3 * 4752 0 0 0 0 0 0 0 0 4752 97
jcnd=4656/4752 0x401672 +1 
* * 
-9 * 96 96 0 1 0 0 1
+3 * 96
+3 * 96 96
+3 * 96 0 0 0 0 0 0 0 0 96
jcnd=96/96 0x401672 +1 
* * 
+6 +6 96 96 0 1 0 0 1
+5 * 96 96
+5 * 96 0 96
+5 +2 96 96
+3 +1 96 0 96
+3 * 96 96
+5 * 96 96
+1 * 96 96

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 96
+7 * 96
+7 * 96
+3 * 96
+3 * 96 0 96
cfi=(2)
cfn=(4)
calls=96 0x4030b2 310 
* * 83243 23868 21897 63 18 16 63 18 16 5062 227 382 47
+5 * 96
+7 * 96
+7 * 96
+3 * 96
+3 * 96 0 96
cfi=(2)
cfn=(80)
calls=96 0x402ff4 310 
* * 83549 23867 21554 40 7 23 40 7 23 5151 237 382
+5 * 96 0 0 1 0 0 1
+7 * 96
+7 * 96
+3 * 96
+3 * 96 0 96
cfn=(142)
calls=96 0x401585 -52 
* * 500448 220992 115680 8 0 0 8 0 0 9696 194
+5 * 96 0 96
+8 * 96 96
+6 * 96 0 96
+6 * 96
+7 * 96
+3 * 96 0 96
cfi=(2)
cfn=(148)
calls=96 0x402df4 414 
* * 23986 7530 5457 33 5 0 33 5 0 2596 69 192
+5 * 96
+7 * 96
+3 * 96 0 96 1 0 0 1
cfi=(2)
cfn=(178)
calls=96 0x402e74 414 
* * 24439 7716 5553 7 0 0 7 0 0 2740 16 192
+5 +2 96
+7 * 96
+7 * 96
+3 * 96
+3 * 96 0 96
cfi=(2)
cfn=(4)
calls=96 0x4030b2 310 
* * 82916 23845 21794 2 1 1 2 1 1 5038 103 382
+5 * 96
+7 * 96
+7 * 96
+3 * 96
+3 * 96 0 96
cfi=(2)
cfn=(80)
calls=96 0x402ff4 310 
* * 82722 23816 21411 0 0 2 0 0 2 5027 87 382
+5 * 96 96
+6 * 96 0 0 1 0 0 1
+7 * 96
+7 * 96 0 96
+6 * 96 96
+8 * 96
+3 * 96
+3 * 96 0 96
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=96 0x401719 -33 
* * 233760 97152 53712 4 0 0 4 0 0 4848 97
+5 * 96 0 96
+8 * 96 96
+6 * 96 0 96
+6 * 96
+7 * 96 0 0 1 0 0 1
+3 * 96 0 96
cfi=(2)
cfn=(148)
calls=96 0x402df4 414 
* * 23986 7530 5457 0 0 0 0 0 0 2596 65 192
+5 * 96
+7 * 96
+3 * 96 0 96
cfi=(2)
cfn=(178)
calls=96 0x402e74 414 
* * 24439 7716 5553 0 0 0 0 0 0 2740 11 192
+5 +2 96 96
+7 * 96
+3 * 96 0 96
cfi=(2)
cfn=(2)
calls=96 0x402d74 645 
* * 1248 576 192
+5 * 96 96
+6 * 96
+3 * 96
+3 * 96
+3 * 96 96
+7 * 96
+3 * 96 0 0 1 0 0 1
+3 * 96 0 96
cfi=(2)
cfn=(144)
calls=96 0x402d9a 770 
* * 1056 480 288
+5 * 96
+3 * 96
+7 * 96
+3 * 96
+3 * 96 0 96
cfi=(2)
cfn=(200)
calls=96 0x402eda 901 
* * 14328 5037 4025 27 10 9 27 10 9 638 22 35
+5 +1 96 96
+7 * 96
+3 * 96 0 96
cfi=(2)
cfn=(10)
calls=96 0x402f54 645 
* * 1248 576 192 0 1 0 0 1
+5 * 96 96
+6 * 96
+3 * 96
+3 * 96
+3 * 96 96
+7 * 96 0 0 1 0 0 1
+3 * 96
+3 * 96 0 96
cfi=(2)
cfn=(146)
calls=96 0x402dba 770 
* * 1056 480 288
+5 * 96
+3 * 96
+7 * 96
+3 * 96
+3 * 96 0 96
cfi=(2)
cfn=(244)
calls=96 0x402f7a 901 
* * 14608 5071 4053 28 15 15 28 15 15 697 52 35
+5 +1 96 96
+7 * 96
+3 * 96 0 96
cfi=(2)
cfn=(10)
calls=96 0x402f54 645 
* * 1248 576 192
+5 * 96 96
+6 * 96
+3 * 96
+3 * 96
+3 * 96 96 0 1 0 0 1
+7 * 96
+3 * 96
+3 * 96 0 96
cfi=(2)
cfn=(146)
calls=96 0x402dba 770 
* * 1056 480 288
+5 * 96 96
+2 * 96
+4 * 96 96
+8 * 96 96
+8 * 96 0 96
+8 +1 96 96
+7 * 96
+3 * 96 0 96
cfi=(2)
cfn=(2)
calls=96 0x402d74 645 
* * 1248 576 192
+5 * 96 96 0 1 0 0 1
+6 * 96
+3 * 96
+3 * 96
+3 * 96 96
+7 * 96
+3 * 96
+3 * 96 0 96
cfi=(2)
cfn=(144)
calls=96 0x402d9a 770 
* * 1056 480 288
+5 * 96 96
+4 * 96 96
+8 * 96
+4 * 96 96
+8 * 96
+3 * 96 0 96
+8 +2 96 0 96
+7 -12 96 96
+8 * 96 96
+7 * 96 0 0 0 0 0 0 0 0 96 1
jcnd=1/96 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 96
+7 * 96
+3 * 96 0 96
cfi=(2)
cfn=(2)
calls=96 0x402d74 645 
* * 1248 576 192 2 0 1 2 0 1
+5 * 96
+3 * 96 96
+7 * 96
+3 * 96 0 96
cfi=(2)
cfn=(2)
calls=96 0x402d74 645 
* * 1248 576 192 0 1 0 0 1
+5 * 96
+3 * 96 0 0 0 0 0 0 0 0 96 1
+2 * 96 0 0 1 0 0 1
+5 * 96
jump=96 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 96
+2 * 96 0 0 0 0 0 0 0 0 96
jcnd=96/96 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 96 0 96
+1 * 96
+3 * 96
+4 * 96 0 96
+4 * 96 0 96
+4 * 96 0 96
+5 +1 96 96
+4 * 96
+3 * 96 0 96
cfi=(2)
cfn=(2)
calls=96 0x402d74 645 
* * 1248 576 192
+5 * 96
+3 * 96 0 96
+3 +1 96 96 0 1 0 0 1
+6 * 96 0 96
+3 * 96 96
+6 * 96 0 96
+3 +2 96 0 96
+7 * 96
jump=96 +86 * 
* * 
+2 +1 4752 4752
+3 * 4752
+3 * 4752 4752
+4 * 4752
+3 * 4752
+3 * 4752 0 4752
cfi=(2)
cfn=(144)
calls=4752 0x402d9a 770 
* * 52272 23760 14256
+5 * 4752 4752
+4 * 4752 4752
+5 * 4752
+4 * 4752 0 4752
+5 +1 4752 4752
+3 * 4752
+3 * 4752 4752
+4 * 4752
+3 * 4752
+3 * 4752 0 4752
cfi=(2)
cfn=(146)
calls=4752 0x402dba 770 
* * 52272 23760 14256
+5 * 4752 4752
+2 * 4752
+4 * 4752 4752
+5 * 4752
+4 * 4752 0 4752
+5 -2 4752 0 4752
+4 * 4752 4752
+3 * 4752
+3 * 4752 4752
+3 * 4752 0 0 0 0 0 0 0 0 4752 97
jcnd=4656/4752 -93 +1 
* * 
-9 * 96 96 0 1 0 0 1
+3 * 96
+3 * 96 96
+3 * 96 0 0 0 0 0 0 0 0 96
jcnd=96/96 -93 +1 
* * 
+2 +4 96 96
+3 * 96
+3 * 96 0 0 1 0 0 1
+4 * 96 96
+5 * 96
+4 * 96
+3 * 96 0 96
+5 +1 96 96
+3 * 96
+3 * 96
+4 * 96 96
+5 * 96
+4 * 96
+3 * 96 0 96
+5 +1 96 96
+5 * 96 96
+5 * 96 96
+5 * 96 0 0 1 0 0 1
+4 * 96
+3 * 96 0 96
+5 +2 96 96
+3 +1 96 0 96
+3 * 96 96
+5 * 96 96
+1 * 96 96

fl=(4)
fn=(174)
0x403ccc 121 192 0 192
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 192
+4 * 192
+3 * 192 0 192
cfi=(5)
cfn=(176)
calls=192 0x4044cc -35 
* * 960 384 384
+5 * 192 192
+1 * 192 192

fn=(90)
0x4047b2 115 192 0 192 1 0 0 1
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192 1 0 0 1
+4 +1 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfi=(5)
cfn=(92)
calls=192 0x4049d4 -35 
* * 1152 384 576 1 0 0 1
+5 * 192 192
+1 * 192 192

fn=(194)
0x403d7e 121 192 0 192 1 0 0 1
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 192
+4 * 192
+3 * 192 0 192
cfi=(5)
cfn=(196)
calls=192 0x404520 -35 
* * 960 384 384
+5 * 192 192
+1 * 192 192

fn=(16)
0x404804 115 192 0 192 1 0 0 1
+1 * 192
+3 * 192
+4 * 192 0 192
+4 * 192 0 192
+4 +1 192 192
+4 * 192 192
+4 * 192
+3 * 192
+3 * 192 0 192
cfi=(5)
cfn=(18)
calls=192 0x404a28 -35 
* * 1152 384 576 1 0 1 1 0 1
+5 * 192 192
+1 * 192 192

fl=(3)
fn=(8)
0x403afa 224 192 0 192 1 0 0 1
+1 * 192
+3 * 192 0 192
+4 * 192 192
+4 * 192 192
+1 * 192 192

fn=(264)
0x4036b1 215 96 0 96
+1 * 96
+3 * 96
+4 * 96 0 96
+4 * 96 0 96
+4 * 96 0 96
+4 +1 96 96
+4 * 96 96
+4 * 96 96
+4 * 96
+3 * 96
+3 * 96 0 96
cfi=(5)
cfn=(266)
calls=96 0x40406a -87 
* * 2304 768 864 0 6 6 0 6 6 96
+5 * 96 96
+1 * 96 96

fn=(212)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102)
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28)
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84)
0x4039ed 224 192 0 192
+1 * 192
+3 * 192 0 192
+4 * 192 192
+4 * 192 192
+1 * 192 192

fn=(222)
0x403373 215 96 0 96
+1 * 96
+3 * 96
+4 * 96 0 96
+4 * 96 0 96
+4 * 96 0 96
+4 +1 96 96
+4 * 96 96
+4 * 96 96
+4 * 96
+3 * 96
+3 * 96 0 96
cfi=(5)
cfn=(224)
calls=96 0x403df2 -87 
* * 2304 768 864 0 7 2 0 7 2 96
+5 * 96 96
+1 * 96 96

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 396 0 396 1 0 0 1
+5 0 396 0 396
+5 0 396
+3 0 396 0 396
+5 0 396
+4 0 396 396 0 0 1 0 0 1
+7 0 396 396 0 0 1 0 0 1
+3 0 396
+3 0 396 0 0 0 0 0 0 0 0 396
+6 0 396 396 0 0 1 0 0 1
+7 0 396 396 0 1 1 0 1 1
+4 0 396
+3 0 396 0 0 0 0 0 0 0 0 396
+2 0 396 396 0 0 1 0 0 1
+3 0 396
+3 0 396 0 0 0 0 0 0 0 0 396
jcnd=396/396 +97 0 
* 0 
+18 0 396
+3 0 396
+3 0 396 0 396
cfn=(38) _int_malloc
calls=396 0x3877c79a00 0 
* 0 74696 10216 11528 30 25 35 30 25 35 11119 455
+5 0 396
+3 0 396
+3 0 396 0 0 0 0 0 0 0 0 396
+2 0 396
+3 0 396 0 0 0 0 0 0 0 0 396
+2 0 396
+3 0 396 0 0 0 0 0 0 0 0 396 3
+2 0 396 396
+7 0 396 0 0 0 0 0 0 0 0 396
jcnd=396/396 +13 0 
* 0 
+13 0 396 0 396
+2 0 396 0 0 0 0 0 0 0 0 396 12
+6 0 396
+3 0 396 396
+4 0 396 396
+5 0 396 396
+5 0 396
+4 0 396 396
+1 0 396 0 0 1 0 0 1
+5 0 396 396 0 0 1 0 0 1
+7 0 396 0 0 0 0 0 0 0 0 396
jcnd=396/396 +14 0 
* 0 
+14 0 396 0 396 1 0 0 1
+3 0 396 0 0 0 0 0 0 0 0 396
+6 0 396
jump=396 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 396 0 396 1 0 0 1
+2 0 396
+3 0 396
+3 0 396 0 396
+2 0 396
+3 0 396 0 396
+1 0 396
+3 0 396 0 396
+1 0 396
+3 0 396
+4 0 396
+3 0 396 0 0 0 0 0 0 0 0 396
+6 0 396
+4 0 396
+3 0 396 0 0 0 0 0 0 0 0 396 7
jcnd=10/396 0x3877c838d1 0 
* 0 
+2 0 386
+3 0 386
+3 0 386
+3 0 386
+3 0 386
+3 0 386 0 0 0 0 0 0 0 0 386
jcnd=386/386 +41 0 
* 0 
+41 0 386 0 0 1 0 0 1
+3 0 386 0 0 0 0 0 0 0 0 386
jcnd=386/386 0x3877c839c0 0 
* 0 
+24 0 386
+3 0 386
+4 0 386
+3 0 386
+3 0 386
+3 0 386
+3 0 386
+3 0 386 0 0 0 0 0 0 0 0 386 192
jcnd=198/386 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 198
+10 0 198 198 0 0 2 0 0 2
+3 0 198
+4 0 198 0 198
+3 0 198
+4 0 198
+4 0 198 0 0 0 0 0 0 0 0 198
jcnd=198/198 -18 0 
* 0 
-18 0 650 650
+3 0 650
+4 0 650 0 650
+3 0 650
+4 0 650
+4 0 650 0 0 0 0 0 0 0 0 650 11
jcnd=452/650 -18 0 
* 0 
+2 0 396
+4 0 396
+3 0 396 396
+1 0 396 396
+1 0 396 396
+2 0 396 396 0 1 0 0 1
+2 0 396 396
0x3877c839c0 0 386 0 0 1 0 0 1
+3 0 386
+3 0 386
+3 0 386
+4 0 386 0 386 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=386 0x3877c89b20 0 
* 0 29234 10296 9524 6 1 12 6 1 12 1408 28 386 47
+5 0 386
jump=386 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 396 396 0 1 1 0 1 1
+7 0 396 396 0 0 1 0 0 1
+3 0 396
+3 0 396 0 0 1 0 0 1 0 0 396
+6 0 396
+3 0 396 0 0 0 0 0 0 0 0 396
+6 0 396 396
+4 0 396
+4 0 396
+2 0 396 0 0 0 0 0 0 0 0 396
+2 0 396
+2 0 396
+7 0 396 0 0 0 0 0 0 0 0 396
jcnd=396/396 +14 0 
* 0 
+14 0 396
+2 0 396
cfn=(170) _int_free
calls=396 0x3877c78650 0 
* 0 36768 9612 5656 19 1 0 19 1 0 8574 169

fn=(170)
0x3877c78650 0 396 0 396 1 0 0 1
+2 0 396 0 396
+2 0 396 0 396
+2 0 396
+3 0 396 0 396
+2 0 396 0 396
+1 0 396 0 396
+1 0 396
+3 0 396
+4 0 396 396
+4 0 396 0 396
+4 0 396
+3 0 396
+4 0 396
+3 0 396
+3 0 396
+3 0 396 0 0 1 0 0 1 0 0 396
+6 0 396
+4 0 396 0 0 0 0 0 0 0 0 396
+6 0 396
+4 0 396 0 0 0 0 0 0 0 0 396
+6 0 396 396
+7 0 396 0 0 0 0 0 0 0 0 396 4
jcnd=272/396 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 272
+2 0 272 0 0 0 0 0 0 0 0 272
+6 0 272 272 0 1 0 0 1
+4 0 272
+3 0 272
+2 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 0x3877c78a40 0 
* 0 
+6 0 272 272
+4 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
+6 0 272 272
+5 0 272
+4 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 0x3877c7907c 0 
* 0 
+6 0 272 272
+5 0 272
+4 0 272 0 0 0 0 0 0 0 0 272
+6 0 272
+4 0 272 0 0 1 0 0 1 0 0 272
+6 0 272
+4 0 272 272
+7 0 272 0 0 0 0 0 0 0 0 272
+6 0 272 272
+6 0 272
+2 0 272 0 0 0 0 0 0 0 0 272
+6 0 272 272
+4 0 272 0 0 0 0 0 0 0 0 272 2
jcnd=270/272 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 272 272 0 1 0 0 1
+4 0 272 0 0 0 0 0 0 0 0 272 54
jcnd=54/272 0x3877c78bf0 0 
* 0 
+6 0 218 218
+6 0 218 0 0 1 0 0 1 0 0 218 39
jcnd=24/218 0x3877c78a78 0 
* 0 
+6 0 194 194
+5 0 194 194
+5 0 194 194
+4 0 194 0 0 0 0 0 0 0 0 194
+6 0 194 194
+4 0 194 0 0 0 0 0 0 0 0 194
+6 0 194 194
+9 0 194 0 194
+4 0 194 0 194
+4 0 194 0 0 0 0 0 0 0 0 194 4
jcnd=186/194 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 194
+3 0 194
+4 0 194 194
+4 0 194 194
+4 0 194 0 0 0 0 0 0 0 0 194
-12 0 24
+4 0 24 24
+4 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 218
+7 0 218 0 218
+4 0 218 0 218
+4 0 218 0 0 0 0 0 0 0 0 218 60
jcnd=150/218 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 150 0 150
+4 0 150
+3 0 150 0 150
+4 0 150
+4 0 150 0 150
+4 0 150 0 150
+4 0 150
+7 0 150 0 0 0 0 0 0 0 0 150
jcnd=150/150 0x3877c78b20 0 
* 0 
-7 0 54
+7 0 54 0 0 0 0 0 0 0 0 54
jcnd=54/54 0x3877c78b20 0 
* 0 
0x3877c78a40 0 272 0 0 1 0 0 1
+5 0 272 272
+4 0 272 272
+7 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 +16 0 
* 0 
+16 0 272 0 272
+5 0 272 0 0 0 0 0 0 0 0 272
+6 0 272
+3 0 272
jump=272 0x3877c7878f 0 
* 0 
+10 0 24 0 24
+6 0 24 0 0 1 0 0 1
jump=24 0x3877c78885 0 
* 0 
0x3877c78b20 0 272 272 0 1 0 0 1
+4 0 272
+2 0 272 0 0 0 0 0 0 0 0 272
+6 0 272 272
+7 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 +15 0 
* 0 
+15 0 272 0 272 1 0 0 1
+4 0 272 0 0 0 0 0 0 0 0 272 2
+6 0 272
+4 0 272 272
+1 0 272 272
+1 0 272 272
+2 0 272 272
+2 0 272 272
+2 0 272 272
+2 0 272 272
0x3877c78bf0 0 54 0 0 1 0 0 1
+3 0 54 0 54
+4 0 54
+3 0 54
+4 0 54 0 54 1 0 0 1
+4 0 54
jump=54 0x3877c788cf 0 
* 0 
0x3877c7907c 0 272 272 0 1 1 0 1 1
+4 0 272 0 0 1 0 0 1
+7 0 272
+4 0 272
+3 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 386 0 0 1 0 0 1
+7 0 386
+3 0 386
+3 0 386 386 0 0 1 0 0 1
+4 0 386
+4 0 386 0 0 0 0 0 0 0 0 0 0 386 47
jump=40 0x3877c89be8 0 
* 0 
jump=54 0x3877c89bd0 0 
* 0 
jump=48 0x3877c89bb8 0 
* 0 
jump=48 +11 0 
* 0 
jump=48 0x3877c89c48 0 
* 0 
jump=50 0x3877c89c30 0 
* 0 
jump=48 0x3877c89c18 0 
* 0 
jump=50 0x3877c89c00 0 
* 0 
+11 0 48 48
+3 0 48
+4 0 48
+4 0 48 48
+4 0 48
+4 0 48 0 48
+4 0 48
+9 0 48 48
+4 0 48 0 48
+4 0 48 48
+4 0 48 0 48
+4 0 48 48
+4 0 48 0 48
+4 0 48 48
+4 0 48 0 48
+4 0 48
+4 0 48
+4 0 48 0 0 0 0 0 0 0 0 48
jcnd=8/48 0x3877c89c60 0 
* 0 
-40 0 1118 1118
+4 0 1118 0 1118 0 0 3 0 0 3
+4 0 1118 1118
+4 0 1118 0 1118
+4 0 1118 1118
+4 0 1118 0 1118 0 0 1 0 0 1
+4 0 1118 1118
+4 0 1118 0 1118
+4 0 1118
+4 0 1118
+4 0 1118 0 0 0 0 0 0 0 0 1118 24
jcnd=350/1118 0x3877c89c60 0 
* 0 
-32 0 50 50
+4 0 50 0 50
+4 0 50 50
+4 0 50 0 50
+4 0 50 50
+4 0 50 0 50
+4 0 50
+4 0 50
+4 0 50 0 0 0 0 0 0 0 0 50
jcnd=10/50 0x3877c89c60 0 
* 0 
-24 0 48 48
+4 0 48 0 48
+4 0 48 48
+4 0 48 0 48
+4 0 48
+4 0 48
+4 0 48 0 0 0 0 0 0 0 0 48
jcnd=8/48 0x3877c89c60 0 
* 0 
-16 0 50 50 0 1 0 0 1
+4 0 50 0 50
+4 0 50 0 0 1 0 0 1
+4 0 50
+4 0 50 0 0 0 0 0 0 0 0 50 4
jcnd=10/50 0x3877c89c60 0 
* 0 
+6 0 928
+4 0 928 928
+3 0 928 0 928 0 0 1 0 0 1
+3 0 928 928
+4 0 928 0 928 0 0 3 0 0 3
+4 0 928 928
+4 0 928 0 928 0 0 4 0 0 4
+4 0 928 928
+4 0 928 0 928
+4 0 928
jump=928 -80 0 
* 0 
-30 0 40 40
+3 0 40 0 40
+3 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 -80 0 
* 0 
-24 0 54 54
+4 0 54 0 54
+4 0 54 54
+4 0 54 0 54
+4 0 54 54
+4 0 54 0 54
+4 0 54
jump=54 -80 0 
* 0 
-16 0 48 48
+4 0 48 0 48
+4 0 48 48
+4 0 48 0 48
+4 0 48
jump=48 -80 0 
* 0 
+8 0 48 48
+3 0 48
+4 0 48 0 0 1 0 0 1
+4 0 48
+4 0 48
jump=48 -39 0 
* 0 
+9 0 54
+3 0 54 0 0 0 0 0 0 0 0 54
+6 0 54 54
+3 0 54
+4 0 54
jump=54 -72 0 
* 0 
+8 0 40
+4 0 40 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40
+4 0 40
jump=40 -99 0 
* 0 
+11 0 50 50 0 1 0 0 1
+3 0 50
+4 0 50
+4 0 50
+4 0 50
jump=50 0x3877c89b78 0 
* 0 
+9 0 48 48
+3 0 48
+4 0 48
+4 0 48
+4 0 48
jump=48 0x3877c89b70 0 
* 0 
+9 0 50 50
+3 0 50
+4 0 50
+4 0 50
+4 0 50
jump=50 0x3877c89b68 0 
* 0 
+9 0 48 48
+3 0 48
+4 0 48
+4 0 48
+4 0 48
jump=48 0x3877c89b60 0 
* 0 
+9 0 386 0 386 1 0 0 1
+3 0 386 386

fn=(104) alloc_perturb
0x3877c77180 0 278 278 0 1 0 0 1
+6 0 278
+2 0 278 0 0 0 0 0 0 0 0 278 1
+2 0 278 278

fn=(38)
0x3877c79a00 0 396 0 396 1 0 0 1
+2 0 396
+3 0 396 0 396
+2 0 396 0 396
+2 0 396 0 396 0 0 1 0 0 1
+2 0 396
+3 0 396 0 396
+1 0 396 0 396
+1 0 396
+4 0 396
+4 0 396 0 0 0 0 0 0 0 0 396
+6 0 396
+4 0 396
+6 0 396
+3 0 396
+4 0 396
+4 0 396
+4 0 396
+3 0 396 0 0 0 0 0 0 0 0 396
+6 0 396 396 0 1 1 0 1 1
+7 0 396 0 0 0 0 0 0 0 0 396 7
jcnd=274/396 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 1
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 278
+4 0 278 278
+1 0 278 278
+1 0 278 278
+2 0 278 278
+2 0 278 278
+2 0 278 278
+2 0 278 278
+7 0 291
+7 0 291 0 0 1 0 0 1 0 0 291
+2 0 291
+3 0 291
+5 0 291
+3 0 291
+4 0 291 0 291
+4 0 291
+2 0 291
+5 0 291 291 0 0 5 0 0 5
+4 0 291
+3 0 291 0 0 0 0 0 0 0 0 291
jcnd=291/291 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 291 0 0 1 0 0 1
+3 0 291
+3 0 291
+3 0 291
+4 0 291
+3 0 291
+4 0 291 0 291
+5 0 291
+3 0 291 0 291
+4 0 291 0 291
+4 0 291 0 291
+5 0 291
+3 0 291
+3 0 291
+3 0 291
+3 0 291
+4 0 291
+4 0 291 0 0 1 0 0 1
+4 0 291 0 291
+4 0 291
+4 0 291 0 291
+5 0 291 0 291
+5 0 291
+3 0 291
+3 0 291 0 291
+5 0 291
+5 0 291
+3 0 291 0 291
+4 0 291 0 291
+4 0 291
+6 0 291 0 291
+4 0 291 0 291
+5 0 291 0 0 1 0 0 1
+3 0 291
+3 0 291
+3 0 291
jump=291 +87 0 
* 0 
+8 0 250
+3 0 250
+4 0 250
+2 0 250
+2 0 250
+3 0 250
+3 0 250
+3 0 250
+2 0 250
+2 0 250
+5 0 250
+2 0 250 250 0 0 1 0 0 1
+4 0 250
+3 0 250
+4 0 250 0 250
+4 0 250 0 250
+8 0 250
+7 0 250 0 250
+4 0 250 0 250
+4 0 250 0 250
+4 0 250 0 0 0 0 0 0 0 0 250
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 607 607 0 1 0 0 1
+4 0 607
+3 0 607 0 0 0 0 0 0 0 0 607 18
jcnd=258/607 0x3877c79ef0 0 
* 0 
+6 0 349 349
+4 0 349 349
+4 0 349
+4 0 349 0 0 0 0 0 0 0 0 349
+6 0 349 349 0 1 1 0 1 1
+7 0 349 0 0 0 0 0 0 0 0 349
+6 0 349
+4 0 349
+7 0 349 0 0 0 0 0 0 0 0 349
+2 0 349
+3 0 349 0 0 0 0 0 0 0 0 349 62
jcnd=273/349 0x3877c79e28 0 
* 0 
+6 0 329
+3 0 329 0 329
+4 0 329 0 329
+5 0 329 0 0 0 0 0 0 0 0 329 9
jcnd=13/329 0x3877c7a090 0 
* 0 
+6 0 316
+7 0 316 0 0 0 0 0 0 0 0 316 8
jcnd=250/316 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66 0 0 2 0 0 2
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 3
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 273 273 0 1 0 0 1
+4 0 273
+3 0 273 0 0 0 0 0 0 0 0 273 61
jcnd=137/273 0x3877c79ce1 0 
* 0 
+6 0 136 136
+5 0 136 0 0 0 0 0 0 0 0 136 6
jcnd=116/136 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 258 0 0 1 0 0 1
+7 0 258
+3 0 258 0 0 0 0 0 0 0 0 258
+6 0 258 258 0 1 0 0 1
+4 0 258
+3 0 258
+3 0 258
+2 0 258
+4 0 258
+3 0 258
+3 0 258
+2 0 258
+2 0 258
+2 0 258
+2 0 258 258 0 0 1 0 0 1
+8 0 258
+5 0 258
+5 0 258
+2 0 258 0 0 0 0 0 0 0 0 258
-2 0 136
+2 0 136 0 0 0 0 0 0 0 0 136
+2 0 394
+2 0 394 0 0 0 0 0 0 0 0 394 21
jcnd=150/394 +64 0 
* 0 
+2 0 244
+8 0 244
+3 0 244
+3 0 244 0 0 0 0 0 0 0 0 244 1
jcnd=1/244 0x3877c79fc0 0 
* 0 
-6 0 173
+3 0 173
+3 0 173 0 0 0 0 0 0 0 0 173 2
jcnd=53/173 0x3877c79fc0 0 
* 0 
+2 0 363
+2 0 363 363
+8 0 363
+2 0 363 0 0 0 0 0 0 0 0 363 15
jcnd=173/363 -20 0 
* 0 
+2 0 190
+2 0 190
+5 0 190
+3 0 190
+3 0 190
+2 0 190
+2 0 190
+5 0 190 0 0 0 0 0 0 0 0 190
+2 0 190
+2 0 190
+4 0 190
+2 0 190
+2 0 190 0 0 0 0 0 0 0 0 190 6
jcnd=128/190 -8 0 
* 0 
-8 0 682
+4 0 682
+2 0 682
+2 0 682 0 0 0 0 0 0 0 0 682 58
jcnd=429/682 -8 0 
* 0 
-2 0 150 0 0 1 0 0 1
+2 0 150 0 0 0 0 0 0 0 0 150 13
jcnd=125/150 -8 0 
* 0 
+2 0 340 340 0 0 7 0 0 7
+4 0 340 0 0 1 0 0 1
+3 0 340 0 0 0 0 0 0 0 0 340 117
jcnd=204/340 0x3877c7a1cf 0 
* 0 
+6 0 136
+2 0 136
+4 0 136
+2 0 136
+2 0 136
+2 0 136 0 136
+8 0 136
jump=136 0x3877c79f30 0 
* 0 
+37 0 54 54 0 1 0 0 1
+5 0 54 54
+4 0 54
+4 0 54 54
+5 0 54 0 0 0 0 0 0 0 0 54
jcnd=54/54 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 204 204 0 1 1 0 1 1
+4 0 204 204
+4 0 204
+3 0 204 204
+4 0 204
+4 0 204
+3 0 204
+3 0 204 204
+4 0 204 0 0 0 0 0 0 0 0 204
+6 0 204 204
+4 0 204 0 0 0 0 0 0 0 0 204
+6 0 204 204 0 1 0 0 1
+8 0 204 0 204
+4 0 204 0 204
+4 0 204 0 0 0 0 0 0 0 0 204 5
jcnd=136/204 +38 0 
* 0 
+2 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 136
+4 0 136 0 0 0 0 0 0 0 0 136 7
jcnd=9/136 0x3877c7a2e3 0 
* 0 
+6 0 195 195
+4 0 195 195 0 1 0 0 1
+4 0 195 0 0 0 0 0 0 0 0 195
+6 0 195
+4 0 195
+7 0 195 0 195 0 0 7 0 0 7
+4 0 195 0 195
+4 0 195 0 195
+4 0 195 0 195
+4 0 195 0 0 0 0 0 0 0 0 195
+2 0 195 0 195
+5 0 195
+7 0 195 0 0 0 0 0 0 0 0 195 4
jcnd=188/195 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 188
+7 0 188 0 188
+4 0 188
+3 0 188
+3 0 188
+4 0 188
+3 0 188
+4 0 188
+3 0 188
+3 0 188
+4 0 188 0 188
+4 0 188 0 188 0 0 1 0 0 1
+4 0 188
jump=188 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 9
+7 0 9 0 9
+6 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +7 0 
* 0 
+7 0 204
+4 0 204 0 0 1 0 0 1
+3 0 204
+3 0 204 0 204
cfn=(104)
calls=204 0x3877c77180 0 
* 0 816 408 0 0 0 0 0 0 0 204
+5 0 204
+3 0 204
jump=204 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 54 0 0 1 0 0 1
+7 0 54
+2 0 54
+4 0 54
+3 0 54
+3 0 54 0 54
+5 0 54
+3 0 54
+4 0 54
+3 0 54 0 0 1 0 0 1
+4 0 54
+4 0 54
+3 0 54
+4 0 54 0 54
+4 0 54 0 54 0 0 3 0 0 3
+4 0 54
+3 0 54
+3 0 54 0 54
cfn=(104)
calls=54 0x3877c77180 0 
* 0 216 108 0 0 0 0 0 0 0 54 1
+5 0 54
+3 0 54
jump=54 0x3877c79ae3 0 
* 0 

totals: 1216914 461919 291331 226 60 68 226 60 68 47119 1182 2366 47
