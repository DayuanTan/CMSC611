version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 329


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 296478800 - 297542534
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1272 0 0 1 0 0 1
+3 0 1272 0 0 0 0 0 0 0 0 1272
+2 0 1272
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1272 0x3877c7b8b0 0 
* 0 142579 36495 18645 21 4 0 21 4 0 34929 533
* 0 1272 1272 0 1 1 0 1 1 0 0 0 1272

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1272 0 1272 1 0 0 1
+1 0 1272
+5 0 1272
+3 0 1272 0 1272
+1 0 1272
+4 0 1272 0 0 1 0 0 1
+3 0 1272
+4 0 1272
+3 0 1272 0 1272 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1272 0x3877c7aa50 0 
* 0 343124 49708 49689 49 38 51 49 38 51 57495 2029
* 0 1272 1272 0 1 1 0 1 1 0 0 0 1272
+5 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272
jcnd=1272/1272 +96 0 
* 0 
+96 0 1272 0 0 1 0 0 1
+4 0 1272 1272
+1 0 1272 1272
+1 0 1272 1272

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 708 0 708
+1 * 708
+3 * 708 0 708
+4 +1 708 708
+4 * 708 708
+1 * 708 708

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256 0 1256
+4 +1 1256 1256 0 1 0 0 1
+4 * 1256 1256
+1 * 1256 1256

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 708 0 708
+1 * 708
+3 * 708 0 708 0 0 1 0 0 1
+4 +1 708 708
+4 * 708 708
+1 * 708 708

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256
+4 * 1256 0 1256
+4 +1 1256
+4 * 1256
+3 * 1256 0 1256
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1256 0x404ffe 790 
* * 7536 3768 2512 1 0 0 1
+5 * 1256 1256
+3 * 1256 1256
+1 * 1256 1256

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256 0 1256
+4 +1 1256 1256
+4 * 1256 1256
+1 * 1256 1256

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256
+4 * 1256 0 1256
+4 +1 1256
+4 * 1256
+3 * 1256 0 1256 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1256 0x40500c 790 
* * 7536 3768 2512 1 0 0 1
+5 * 1256 1256
+3 * 1256 1256
+1 * 1256 1256

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 628 0 628
+1 * 628
+3 * 628 0 628
+4 * 628 0 628
+4 * 628 628
+4 * 628 628
+1 * 628 628

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 636 0 636 1 0 0 1
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 * 636 0 636
+4 +2 636 636
+4 * 636
+3 * 636 0 636
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=636 0x4048de +12 
* * 3816 1272 1272 1 0 0 1
+5 * 636 636
+4 * 636 0 0 1 0 0 1
+3 * 636
+2 * 636 0 0 0 0 0 0 0 0 636
jcnd=636/636 +7 +3 
* * 
+7 +3 636 636
+4 * 636
+4 * 636
+3 * 636 0 636
cob=(5)
cfi=(8)
cfn=(32)
calls=636 0x387e4bd0b0 0 
* * 182992 26921 25079 33 12 37 33 12 37 29797 1095 636
* * 636 636 0 0 0 0 0 0 0 0 0 636
+5 +1 636 636
+1 * 636 636

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628 0 0 1 0 0 1
+4 * 628 0 628
+4 * 628 628
+1 * 628 628

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+4 * 628 0 628
+4 * 628 628
+1 * 628 628

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 628 0 628
+1 * 628
+3 * 628 0 628
+4 * 628 628
+1 * 628 628

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 636 0 636 1 0 0 1
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 * 636 0 636 1 0 0 1
+4 +2 636 636
+4 * 636
+3 * 636 0 636
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=636 0x404992 +12 
* * 3816 1272 1272 1 0 0 1
+5 * 636 636
+4 * 636
+3 * 636
+2 * 636 0 0 0 0 0 0 0 0 636
jcnd=636/636 +7 +3 
* * 
+7 +3 636 636
+4 * 636
+4 * 636
+3 * 636 0 636
cob=(5)
cfi=(8)
cfn=(32)
calls=636 0x387e4bd0b0 0 
* * 180484 27875 28426 20 27 15 20 27 15 28970 934 636
* * 636 636 0 1 1 0 1 1 0 0 0 636
+5 +1 636 636
+1 * 636 636

fn=(102)
0x4048de 113 652 0 652 1 0 0 1
+1 * 652
+3 * 652 0 652
+4 +1 652
+10 * 652 652
+1 * 652 652

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 314 0 314
+1 * 314
+3 * 314
+4 * 314 0 314
+4 * 314 0 314
+4 * 314 0 314
+4 +1 314 314
+4 * 314
+3 * 314
+5 * 314 0 314
cfi=(16)
cfn=(226)
calls=314 0x402d61 -20 
* * 2198 942 942
+5 * 314
+3 * 314 0 0 0 0 0 0 0 0 314
+2 * 314 314
+4 * 314 314 0 0 20 0 0 20
+2 * 314 0 314 0 0 12 0 0 12
+2 * 314 314
+1 * 314 314

fn=(28)
0x404992 113 652 0 652 1 0 0 1
+1 * 652
+3 * 652 0 652
+4 +1 652
+10 * 652 652
+1 * 652 652

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 628 0 628
+1 * 628
+3 * 628 0 628
+4 * 628 628
+1 * 628 628

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 314 0 314
+1 * 314
+3 * 314
+4 * 314 0 314
+4 * 314 0 314
+4 * 314 0 314
+4 +1 314 314
+4 * 314
+3 * 314
+5 * 314 0 314
cfi=(16)
cfn=(226)
calls=314 0x402d61 -20 
* * 2198 942 942
+5 * 314
+3 * 314 0 0 0 0 0 0 0 0 314 2
+2 * 314 314
+4 * 314 314 0 0 21 0 0 21
+2 * 314 0 314 0 0 3 0 0 3
+2 * 314 314
+1 * 314 314

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 636 0 636
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 * 636 0 636
+4 +1 636 636
+4 * 636
+3 * 636 0 636
cob=(5)
cfi=(8)
cfn=(164)
calls=636 0x387e4bb2f0 0 
* * 70090 17483 8237 23 4 0 23 4 0 17034 466 636
* * 636 636 0 1 1 0 1 1 0 0 0 636
+5 * 636 636
+1 * 636 636

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 636 0 636
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 * 636 0 636
+4 +1 636 636
+4 * 636
+3 * 636 0 636
cob=(5)
cfi=(8)
cfn=(164)
calls=636 0x387e4bb2f0 0 
* * 77577 20284 10408 0 1 0 0 1 0 19167 67 636
* * 636 636 0 0 0 0 0 0 0 0 0 636
+5 * 636 636
+1 * 636 636

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628 0 1 0 0 1
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=628 0x404a36 450 
* * 290720 96104 92340 24 3 4 24 3 4 11600 722 1252 156
+5 * 628 628
+1 * 628 628

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=628 0x40439c 107 
* * 308304 102384 98620 7 1 40 7 1 40 11600 706 1252
+5 * 628 628
+1 * 628 628

fn=(116)
0x40439c 107 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +10 628 628
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=628 0x4047d7 -26 
* * 299512 99244 95480 7 1 40 7 1 40 11600 706 1252
+5 +1 628 628
+1 * 628 628

fn=(118)
0x4047d7 91 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=628 0x4049e2 450 
* * 290720 96104 92340 7 1 40 7 1 40 11600 706 1252
+5 * 628 628
+1 * 628 628

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +10 628 628
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(52)
calls=628 0x404829 -26 
* * 299512 99244 95480 25 3 4 25 3 4 11600 722 1252 156
+5 +1 628 628
+1 * 628 628

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628 1 0 0 1
cfn=(50)
calls=628 0x404484 107 
* * 308304 102384 98620 25 3 4 25 3 4 11600 722 1252 156
+5 * 628 628
+1 * 628 628

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 636 0 636 1 0 0 1
+1 * 636 0 0 1 0 0 1
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 0 636 636
+5 0 636 0 0 0 0 0 0 0 0 636
+2 0 636 636
+4 0 636 636
+4 0 636
+5 0 636
+3 0 636
+3 0 636 0 636
fi=(6) ???
cfi=(5)
cfn=(100)
calls=636 0x40461a 99 
* 0 199528 32009 30167 36 12 37 36 12 37 30433 1095 1272
+5 0 636
fi=(6)
jump=636 +7 0 
* 0 
+7 0 636 636
+1 0 636 636

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 149935 0 149935
+1 * 149935
+3 * 149935 0 149935
+4 * 149935 0 149935
+4 +1 149935 149935
+4 * 149935 149935
+3 * 149935 149935
+4 * 149935
+4 * 149935
+3 * 149935 149935
+1 * 149935 149935

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 149935 0 149935
+1 * 149935
+3 * 149935 0 149935 1 0 0 1
+4 * 149935 0 149935
+4 +1 149935 149935
+4 * 149935 149935
+3 * 149935 149935
+4 * 149935
+4 * 149935
+3 * 149935 149935
+1 * 149935 149935

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 628
+4 * 628
+3 * 628 0 628
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(194) std::allocator<int>::~allocator()
calls=628 0x403d7e +42 
* * 8792 3140 3140 1 0 0 1
+5 * 628 628
+1 * 628 628

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+1 * 628
+4 * 628 0 628
+4 +2 628 628
+4 * 628 628
+4 * 628
+3 * 628 628
+4 * 628 628
+3 * 628
+3 * 628
+3 * 628
+4 * 628
+3 * 628 628
+4 * 628 628
+3 -1 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=628 0x403d98 +11 
* * 94278 26340 16574 1 1 0 1 1 0 19592 58 1256
+5 +1 628 628
+4 * 628
+3 * 628 0 628
cfn=(192)
calls=628 0x403296 -82 
* * 14444 5024 5024 1 0 0 1
+5 * 628
jump=628 +28 * 
* * 
+28 * 628
+4 * 628 628
+1 * 628 628
+1 * 628 628

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2544 0 2544 1 0 0 1
+1 * 2544
+3 * 2544 0 2544 0 0 1 0 0 1
+4 +1 2544 2544
+4 * 2544 2544 0 1 1 0 1 1
+4 * 2544
+3 * 2544 2544
+4 * 2544 2544
+3 * 2544
+3 * 2544
+3 * 2544
+4 * 2544 2544
+1 * 2544 2544

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=628 0x404236 -14 
* * 204223 35672 35589 26 14 8 26 14 8 29768 875 1256
+5 * 628 628
+4 * 628 0 628
+3 +1 628 628
+4 * 628 628 0 1 0 0 1
+3 * 628 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+3 * 628 628
+4 * 628
+4 * 628
+3 * 628 628
+4 * 628 0 628
+4 +1 628 628
+1 * 628 628

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628
+4 * 628 628 0 1 0 0 1
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(96)
calls=628 0x403fbe -14 
* * 206522 34517 32098 26 7 32 26 7 32 30570 1043 1256
+5 * 628 628
+4 * 628 0 628
+3 +1 628 628
+4 * 628 628
+3 * 628 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+3 * 628 628
+4 * 628
+4 * 628
+3 * 628 628
+4 * 628 0 628
+4 +1 628 628
+1 * 628 628

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 314 0 314
+1 * 314
+3 * 314 0 0 1 0 0 1
+4 * 314 0 314
+4 * 314 0 314
+4 +2 314 314
+4 * 314 314
+4 * 314 314
+4 * 314 314
+4 * 314
+3 * 314 0 0 0 0 0 0 0 0 314
jcnd=8/314 +51 +10 
* * 
+2 +3 306 306
+4 * 306 306
+4 * 306 306
+4 -1 306 306
+4 * 306
+3 * 306
+3 * 306 0 306
cfi=(3)
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=306 0x4036b1 215 
* * 11628 3978 4284 0 20 8 0 20 8 306
+5 +2 306 306
+4 * 306 306
+4 * 306
+4 * 306 306
+4 * 306 0 306
+4 * 306
jump=306 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12434 3723 3244 18 14 29 18 14 29 833 80 47
+5 +2 314 314
+1 * 314 314

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280 1 0 0 1
+4 +1 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+3 * 628 0 628
+4 * 628
+4 * 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=628 0x404380 726 
* * 6280 3140 2512
+5 * 628 628
+4 * 628 628
+1 * 628 628

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 628 0 628
+1 * 628
+3 * 628 0 628
+1 * 628
+4 * 628 0 628 1 0 0 1
+4 +2 628 628
+4 * 628
+3 * 628 0 628
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=628 0x40325e 113 
* * 3768 1884 1256
+5 * 628
+3 * 628 628
+4 * 628 628
+4 * 628 628
+4 * 628 628
+3 -1 628
+3 * 628
+3 * 628 0 628
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=628 0x40326c 148 
* * 19468 6280 7536 4 0 0 4
+5 +1 628 628
+4 * 628
+3 * 628 0 628
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=628 0x4031ec 159 
* * 118852 35488 22570 27 5 0 27 5 0 17468 460 1256
+5 * 628
jump=628 +28 * 
* * 
+28 * 628 0 0 1 0 0 1
+4 * 628 628
+1 * 628 628
+1 * 628 628

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 636 0 636 1 0 0 1
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 * 636 0 636
+4 +2 636 636
+5 * 636 0 0 0 0 0 0 0 0 636
+2 +1 636 636
+4 * 636 636
+4 * 636 636
+4 * 636
+3 * 636
+3 * 636 0 636
cfi=(5)
cfn=(160)
calls=636 0x4044d6 -65 
* * 77722 20027 11417 24 5 0 24 5 0 17034 466 1272
+5 +1 636 636
+1 * 636 636

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 628 0 628
+1 * 628
+3 * 628 0 628
+1 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=628 0x4043ca -45 
* * 22608 8164 8792 4 0 4 4 0 4
+5 +1 628 628 0 1 0 0 1
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(20)
calls=628 0x404412 +43 
* * 219923 43208 39985 27 14 8 27 14 8 29768 875 1256
+5 * 628
jump=628 +28 * 
* * 
+28 * 628
+4 * 628 628
+1 * 628 628
+1 * 628 628

fn=(14)
0x4043ca 90 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628 0 0 1 0 0 1
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=628 0x404804 +24 
* * 11304 3768 4396 2 0 1 2 0 1
+5 * 628 628
+4 * 628 0 628 0 0 2 0 0 2
+7 * 628 628
+4 * 628 0 628 1 0 0 1
+8 * 628 628
+4 * 628 0 628
+8 +1 628 628
+1 * 628 628

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+2 * 628 0 628
+2 * 628 0 628
+1 * 628 0 0 1 0 0 1
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628
+4 * 628
+3 * 628 0 628
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=628 0x4039fc 117 
* * 3768 1884 1256 2 0 0 2
+5 * 628
+3 * 628 0 628
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=628 0x4039ed -88 
* * 3768 1884 1256
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(2)
calls=628 0x402d74 645 
* * 8164 3768 1256
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628
+3 * 628
+3 * 628 0 628 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=628 0x403a0a 134 
* * 258646 54613 49682 33 7 32 33 7 32 30570 1043 1256
+5 +4 628 628
+4 * 628
+3 * 628 0 628
cfn=(106)
calls=628 0x40325e 113 
* * 3768 1884 1256 1 0 0 1
+5 * 628
+3 * 628 628
+4 * 628 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=628 0x403a98 565 
* * 15700 6280 5024 2 0 0 2
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(112)
calls=628 0x403a68 547 
* * 15700 6280 5024
+5 * 628
+3 * 628
+3 * 628
+3 * 628
+3 * 628 0 628
cfi=(11)
cfn=(114)
calls=628 0x403ac9 -60 
* * 317724 105524 102388 7 1 40 7 1 40 11600 706 1252
+5 -3 628 628
+4 * 628 0 628
+4 * 628
jump=628 +28 +4 
* * 
+28 +4 628
+4 * 628 628
+1 * 628 628
+2 * 628 628
+2 * 628 628
+1 * 628 628

fn=(188)
0x403d98 171 636 0 636 1 0 0 1
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 * 636 0 636
+4 +2 636 636
+5 * 636 0 0 0 0 0 0 0 0 636 8
+2 +1 636 636
+4 * 636 636
+4 * 636 636
+4 * 636
+3 * 636
+3 * 636 0 636
cfi=(5)
cfn=(190)
calls=636 0x40452a -65 
* * 85209 22828 13588 0 1 0 0 1 0 19167 67 1272
+5 +1 636 636
+1 * 636 636

fn=(22)
0x404236 167 636 0 636 1 0 0 1
+1 * 636
+3 * 636
+4 * 636 0 636 1 0 0 1
+4 * 636 0 636
+4 0 636 636
+5 0 636 0 0 0 0 0 0 0 0 636
+2 0 636 636
+4 0 636 636
+4 0 636
+5 0 636
+3 0 636
+3 0 636 0 636
fi=(6)
cfi=(5)
cfn=(26)
calls=636 0x404730 99 
* 0 197020 32963 33514 24 28 15 24 28 15 29606 934 1272
+5 0 636
fi=(6)
jump=636 +7 0 
* 0 
+7 0 636 636
+1 0 636 636

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+4 * 628 0 628
+4 * 628
+4 * 628 0 0 1 0 0 1
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=628 0x404468 726 
* * 6280 3140 2512 1 0 0 1
+5 * 628 628
+4 * 628 628
+1 * 628 628

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+3 * 628 0 628
+4 * 628
+4 * 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(10)
cfn=(44)
calls=628 0x404468 726 
* * 6280 3140 2512
+5 * 628 628
+4 * 628 628
+1 * 628 628

fn=(86)
0x403a0a 134 628 0 628
+1 * 628
+3 * 628 0 628
+1 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=628 0x4042e2 -45 
* * 22608 8164 8792 5 0 0 5
+5 +1 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628 1 0 0 1
cfn=(94)
calls=628 0x40432a +43 
* * 222222 42053 36494 27 7 32 27 7 32 30570 1043 1256
+5 * 628
jump=628 +28 * 
* * 
+28 * 628
+4 * 628 628
+1 * 628 628
+1 * 628 628

fn=(88)
0x4042e2 90 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=628 0x4047b2 +24 
* * 11304 3768 4396 3 0 0 3
+5 * 628 628
+4 * 628 0 628
+7 * 628 628
+4 * 628 0 628
+8 * 628 628
+4 * 628 0 628
+8 +1 628 628
+1 * 628 628

fn=(156)
0x4031ec 159 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+1 * 628
+4 * 628 0 628
+4 +2 628 628
+4 * 628 628 0 1 0 0 1
+4 * 628
+3 * 628 628
+4 * 628 628
+3 * 628
+3 * 628
+3 * 628
+4 * 628
+3 * 628 628
+4 * 628 628
+3 -1 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(158)
calls=628 0x403ce6 +11 
* * 86824 23556 14406 24 5 0 24 5 0 17468 460 1256
+5 +1 628 628
+4 * 628
+3 * 628 0 628
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=628 0x4031b8 -82 
* * 14444 5024 5024 1 0 0 1
+5 * 628
jump=628 +28 * 
* * 
+28 * 628
+4 * 628 628
+1 * 628 628
+1 * 628 628

fn=(172)
0x4031b8 79 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 628
+4 * 628
+3 * 628 0 628
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=628 0x403ccc +42 
* * 8792 3140 3140
+5 * 628 628
+1 * 628 628

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288 0 1288
+4 +1 1288 1288
+4 * 1288 1288 0 0 2 0 0 2
+4 * 1288
+3 * 1288 1288
+4 * 1288 1288
+3 * 1288
+3 * 1288
+3 * 1288
+4 * 1288 1288
+1 * 1288 1288

fn=(106)
0x40325e 113 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644 0 0 1 0 0 1
+4 +1 644 644
+4 * 644 644
+1 * 644 644

fn=(82)
0x4039fc 117 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644 1 0 0 1
+4 +1 644 644
+4 * 644 644
+1 * 644 644

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 314 0 314
+1 * 314
+3 * 314
+4 * 314 0 314
+4 * 314 0 314
+4 +2 314 314
+4 * 314 314
+4 * 314 314
+4 * 314 314
+4 * 314
+3 * 314 0 0 0 0 0 0 0 0 314 8
jcnd=8/314 +51 +10 
* * 
+2 +3 306 306
+4 * 306 306
+4 * 306 306
+4 -1 306 306
+4 * 306
+3 * 306
+3 * 306 0 306
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=306 0x403373 215 
* * 11628 3978 4284 0 20 2 0 20 2 306 2
+5 +2 306 306
+4 * 306 306
+4 * 306
+4 * 306 306
+4 * 306 0 306
+4 * 306
jump=306 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12610 3907 3385 35 6 9 35 6 9 849 64 47
+5 +2 314 314
+1 * 314 314

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+2 * 628 0 628
+2 * 628 0 628
+1 * 628
+4 * 628 0 628 1 0 0 1
+4 * 628 0 628
+4 +2 628 628
+4 * 628
+3 * 628 0 628
cfn=(6)
calls=628 0x403b08 117 
* * 3768 1884 1256 1 0 1 1 0 1
+5 * 628
+3 * 628 0 628
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=628 0x403afa -88 
* * 3768 1884 1256 1 0 0 1
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(10)
calls=628 0x402f54 645 
* * 8164 3768 1256 1 1 0 1 1
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628
+3 * 628
+3 * 628 0 628
cfn=(12)
calls=628 0x403b16 134 
* * 256347 55768 53173 32 14 12 32 14 12 29768 875 1256
+5 +4 628 628 0 1 0 0 1
+4 * 628
+3 * 628 0 628
cfn=(40)
calls=628 0x40333c 113 
* * 3768 1884 1256 2 0 0 2
+5 * 628
+3 * 628 628
+4 * 628 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(42)
calls=628 0x403ba4 565 
* * 15700 6280 5024 3 0 0 3
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(46)
calls=628 0x403b74 547 
* * 15700 6280 5024
+5 * 628
+3 * 628
+3 * 628
+3 * 628
+3 * 628 0 628 1 0 0 1
cfi=(11)
cfn=(48)
calls=628 0x403bd5 -60 
* * 317724 105524 102388 26 3 4 26 3 4 11600 722 1252 156
+5 -3 628 628
+4 * 628 0 628
+4 * 628
jump=628 +28 +4 
* * 
+28 +4 628
+4 * 628 628
+1 * 628 628
+2 * 628 628
+2 * 628 628
+1 * 628 628

fn=(108)
0x403a98 565 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+4 * 628 0 628
+4 * 628
+4 * 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(10)
cfn=(110)
calls=628 0x404380 726 
* * 6280 3140 2512 1 0 0 1
+5 * 628 628
+4 * 628 628
+1 * 628 628

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 628 0 628
+1 * 628
+3 * 628 0 628
+1 * 628
+4 * 628 0 628 1 0 0 1
+4 +2 628 628
+4 * 628
+3 * 628 0 628
cfn=(40)
calls=628 0x40333c 113 
* * 3768 1884 1256
+5 * 628
+3 * 628 628
+4 * 628 628
+4 * 628 628
+4 * 628 628
+3 -1 628
+3 * 628
+3 * 628 0 628
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=628 0x40334a 148 
* * 19468 6280 7536 2 0 0 2
+5 +1 628 628
+4 * 628
+3 * 628 0 628
cfn=(186)
calls=628 0x4032ca 159 
* * 126306 38272 24738 3 1 0 3 1 0 19592 58 1256
+5 * 628
jump=628 +28 * 
* * 
+28 * 628 0 0 1 0 0 1
+4 * 628 628
+1 * 628 628
+1 * 628 628

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628 1 0 0 1
+4 * 628 0 628
+4 * 628 0 628
+4 +8 628 0 628
+4 +3 628 628
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=628 0x404f37 -22 
* * 190240 62192 57800 14 3 3 14 3 3 11600 722 1252 156
+5 +1 628 628
+1 * 628 628

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 628 0 628
+1 * 628
+3 * 628 0 628
+2 * 628 0 628
+1 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +4 628 628
+4 * 628
+3 * 628 0 628
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=628 0x404878 277 
* * 9420 3768 3140 1 0 0 1
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=628 0x404d44 277 
* * 15700 5652 5024 2 0 0 2
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(132)
calls=628 0x404d44 277 
* * 15700 5652 5024
+5 * 628
+3 * 628
+3 * 628
+3 * 628 0 628
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=628 0x404d5e -49 
* * 199660 65332 61568 1 1 40 1 1 40 11600 706 1252
+5 +1 628
+4 * 628 628
+1 * 628 628
+2 * 628 628
+1 * 628 628

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 628 0 628
+1 * 628
+3 * 628 0 628
+1 * 628
+4 * 628 0 628 1 0 0 1
+4 * 628 0 628
+4 * 628 0 628
+4 +10 628 628
+4 * 628
+3 * 628 0 628
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=628 0x404c38 288 
* * 9420 3768 3140 3 0 0 3
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(56)
calls=628 0x404c38 288 
* * 9420 3768 3140
+5 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=628 0x404c52 -36 
* * 258064 84800 81036 20 3 4 20 3 4 11600 722 1252 156
+5 +1 628
+4 * 628 628
+1 * 628 628
+1 * 628 628

fn=(60)
0x404c52 424 628 0 628
+1 * 628
+3 * 628 0 628
+2 * 628 0 628
+1 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +4 628 628
+4 * 628
+3 * 628 0 628
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=628 0x40492d 277 
* * 9420 3768 3140 2 0 0 2
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=628 0x404d9d 277 
* * 15700 5652 5024 2 0 1 2 0 1
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(66)
calls=628 0x404d9d 277 
* * 15700 5652 5024
+5 * 628
+3 * 628
+3 * 628
+3 * 628 0 628
cfn=(72)
calls=628 0x404db7 -49 
* * 199660 65332 61568 15 3 3 15 3 3 11600 722 1252 156
+5 +1 628
+4 * 628 628
+1 * 628 628
+2 * 628 628
+1 * 628 628

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 676 0 676 1 0 0 1
+1 * 676
+3 * 676
+4 * 676 0 676
+4 +1 676 676
+4 * 676
+3 * 676 0 676 1 0 0 1
cfi=(13)
cfn=(64)
calls=676 -33 -66 
* * 4056 2028 1352
+5 * 676 676
+1 * 676 676

fn=(66)
0x404d9d 277 1256 0 1256
+1 * 1256
+3 * 1256
+4 * 1256 0 1256
+4 +1 1256 1256
+4 * 1256
+3 * 1256 0 1256
cfi=(13)
cfn=(68)
calls=1256 0x404f1a -58 
* * 20096 7536 6280 2 0 1 2 0 1
+5 * 1256 1256
+1 * 1256 1256

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 628 0 628
+1 * 628
+3 * 628 0 628
+1 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +10 628 628
+4 * 628
+3 * 628 0 628
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=628 0x404bc6 288 
* * 9420 3768 3140 3 0 0 3
+5 * 628
+3 * 628 628
+4 * 628
+3 * 628 0 628
cfn=(122)
calls=628 0x404bc6 288 
* * 9420 3768 3140
+5 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(126)
calls=628 0x404be0 -36 
* * 258064 84800 81036 4 1 40 4 1 40 11600 706 1252
+5 +1 628
+4 * 628 628
+1 * 628 628
+1 * 628 628

fn=(128)
0x404878 277 676 0 676
+1 * 676
+3 * 676
+4 * 676 0 676 1 0 0 1
+4 +1 676 676
+4 * 676
+3 * 676 0 676
cfi=(13)
cfn=(130)
calls=676 -33 -66 
* * 4056 2028 1352 0 0 1 0 0 1
+5 * 676 676
+1 * 676 676

fn=(132)
0x404d44 277 1256 0 1256
+1 * 1256
+3 * 1256
+4 * 1256 0 1256
+4 +1 1256 1256
+4 * 1256
+3 * 1256 0 1256
cfi=(13)
cfn=(134)
calls=1256 0x404e98 -58 
* * 20096 7536 6280 2 0 0 2
+5 * 1256 1256
+1 * 1256 1256

fn=(138)
0x404d5e 379 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +8 628 0 628
+4 +3 628 628
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=628 0x404eb5 -22 
* * 190240 62192 57800 1 1 40 1 1 40 11600 706 1252
+5 +1 628 628
+1 * 628 628

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256
+4 * 1256 0 1256
+4 +1 1256 1256
+4 * 1256
+3 * 1256 0 1256
cfi=(13)
cfn=(124)
calls=1256 0x404d36 -77 
* * 7536 3768 2512 2 0 0 2
+5 * 1256 1256
+1 * 1256 1256

fn=(56)
0x404c38 288 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256
+4 * 1256 0 1256 1 0 0 1
+4 +1 1256 1256
+4 * 1256
+3 * 1256 0 1256
cfi=(13)
cfn=(58)
calls=1256 0x404d8f -77 
* * 7536 3768 2512 1 0 0 1
+5 * 1256 1256
+1 * 1256 1256

fn=(74)
0x404f37 368 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644 1 0 0 1
+4 * 644 0 644
+4 * 644 0 644
+4 +2 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644
+4 * 644 0 644
+4 +1 644 644
+5 * 644 0 0 0 0 0 0 0 0 644
jcnd=8/644 +33 +2 
* * 
+2 +1 636 636
+4 * 636
+8 * 636 636
+4 * 636 636
+4 * 636
+3 * 636 0 0 1 0 0 1
+3 * 636 0 636 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=636 0x3877c83840 0 
* * 173778 55600 54333 11 2 20 11 2 20 11056 726 631 156
* * 636 636 0 1 1 0 1 1 0 0 0 636
+5 +1 644 644
+4 * 644
+8 * 644 644
+4 * 644
+3 +1 644 644
+1 * 644 644

fn=(140)
0x404eb5 368 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644 1 0 0 1
+4 * 644 0 644
+4 * 644 0 644 0 0 1 0 0 1
+4 +2 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644
+4 * 644 0 644
+4 +1 644 644
+5 * 644 0 0 0 0 0 0 0 0 644
jcnd=8/644 +33 +2 
* * 
+2 +1 636 636
+4 * 636
+8 * 636 636
+4 * 636 636
+4 * 636
+3 * 636
+3 * 636 0 636
cob=(2)
cfi=(9)
cfn=(78)
calls=636 0x3877c83840 0 
* * 173778 55600 54333 0 1 41 0 1 41 11056 712 631
* * 636 636 0 0 0 0 0 0 0 0 0 636
+5 +1 644 644
+4 * 644
+8 * 644 644
+4 * 644
+3 +1 644 644
+1 * 644 644

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256 0 1256
+4 +1 1256 1256
+4 * 1256 1256
+1 * 1256 1256

fn=(110)
0x404380 726 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256 0 1256
+4 * 1256 0 1256
+4 * 1256 1256
+4 * 1256 1256
+3 * 1256 1256
+4 * 1256 0 1256
+3 * 1256 1256
+1 * 1256 1256

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256 0 1256
+4 +1 1256 1256
+4 * 1256 1256
+1 * 1256 1256

fn=(44)
0x404468 726 1256 0 1256
+1 * 1256
+3 * 1256 0 1256
+4 * 1256 0 1256
+4 * 1256 1256
+4 * 1256 1256
+3 * 1256 1256
+4 * 1256 0 1256 1 0 0 1
+3 * 1256 1256
+1 * 1256 1256

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 636 0 636 1 0 0 1
+1 * 636
+3 * 636 0 636
+4 * 636 0 636 1 0 0 1
+4 * 636 636
+1 * 636 636

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 636 0 636 1 0 0 1
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 +4 636 636
+4 * 636 636
+4 * 636
+3 * 636
+3 * 636 0 636
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=636 0x40454c -14 
* * 3816 1272 1908 1 0 0 1
+5 +2 636 636
+1 * 636 636

fn=(150)
0x40326c 148 636 0 636
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 * 636 0 636
+4 +3 636 636 0 1 0 0 1
+4 * 636 636
+4 * 636
+3 * 636
+3 * 636 0 636
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=636 0x403d1a -29 
* * 11448 3816 4452 3 0 0 3
+5 +1 636 636
+1 * 636 636

fn=(180)
0x40334a 148 636 0 636
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 * 636 0 636
+4 +3 636 636
+4 * 636 636
+4 * 636
+3 * 636
+3 * 636 0 636
cfn=(182)
calls=636 0x403dcc -29 
* * 11448 3816 4452 2 0 0 2
+5 +1 636 636
+1 * 636 636

fn=(152)
0x403d1a 122 636 0 636 1 0 0 1
+1 * 636
+3 * 636
+4 * 636 0 636
+4 * 636 0 636
+4 +4 636 636
+4 * 636 636
+4 * 636
+3 * 636
+3 * 636 0 636
cfn=(154)
calls=636 0x4044f8 -14 
* * 3816 1272 1908 2 0 0 2
+5 +2 636 636
+1 * 636 636

fn=(184)
0x40454c 112 636 0 636 1 0 0 1
+1 * 636
+3 * 636 0 636
+4 * 636 0 636
+4 * 636 636
+1 * 636 636

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2973 471 469 0 14 7 0 14 7 474 59 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3182 672 613 12 5 5 12 5 5 499 52 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 314 0 314 1 0 0 1
+1 * 314
+3 * 314
+4 * 314 0 314
+4 * 314 0 314
+4 +1 314 314
+4 * 314
+3 * 314 0 314
cfi=(2)
cfn=(2)
calls=314 0x402d74 645 
* * 4082 1884 628
+5 * 314
+3 * 314 0 314
+3 +1 314 314
+6 * 314 0 314
+3 * 314 314
+6 * 314 0 314
+3 +1 314 314
+6 * 314 0 314 1 0 0 1
+3 * 314 314
+6 * 314 0 314
+3 +2 314 0 314
+7 * 314
jump=314 +86 * 
* * 
+2 +1 49769 49769
+3 * 49769
+3 * 49769 49769
+4 * 49769
+3 * 49769
+3 * 49769 0 49769
cfi=(2)
cfn=(144)
calls=49769 0x402d9a 770 
* * 547459 248845 149307
+5 * 49769 49769
+4 * 49769 49769
+5 * 49769
+4 * 49769 0 49769
+5 +1 49769 49769
+3 * 49769
+3 * 49769 49769
+4 * 49769
+3 * 49769
+3 * 49769 0 49769
cfi=(2)
cfn=(146)
calls=49769 0x402dba 770 
* * 547459 248845 149307 1 0 0 1
+5 * 49769 49769
+2 * 49769
+4 * 49769 49769
+5 * 49769
+4 * 49769 0 49769
+5 -2 49769 0 49769
+4 * 49769 49769
+3 * 49769
+3 * 49769 49769
+3 * 49769 0 0 0 0 0 0 0 0 49769 315
jcnd=49455/49769 -93 +1 
* * 
-9 * 314 314 0 1 0 0 1
+3 * 314
+3 * 314 314
+3 * 314 0 0 0 0 0 0 0 0 314
jcnd=314/314 -93 +1 
* * 
+2 +4 314 314
+3 * 314
+3 * 314
+4 * 314 314 0 1 0 0 1
+5 * 314
+4 * 314
+3 * 314 0 314
+5 +1 314 314
+3 * 314
+3 * 314
+4 * 314 314
+5 * 314
+4 * 314
+3 * 314 0 314
+5 +1 314 0 314
+7 * 314
jump=314 0x4016ee * 
* * 
+2 +1 49769 49769
+3 * 49769
+3 * 49769 49769
+4 * 49769
+3 * 49769 0 0 1 0 0 1
+3 * 49769 0 49769
cfi=(2)
cfn=(146)
calls=49769 0x402dba 770 
* * 547459 248845 149307
+5 * 49769 49769
+2 * 49769
+4 * 49769 49769
+5 * 49769 0 49769
+5 +1 49769 49769
+3 * 49769
+3 * 49769 49769
+4 * 49769
+3 * 49769
+3 * 49769 0 49769
cfi=(2)
cfn=(144)
calls=49769 0x402d9a 770 
* * 547459 248845 149307
+5 * 49769 49769
+4 * 49769 49769
+5 * 49769 0 49769
+5 +1 49769 49769
+5 * 49769 49769
+5 * 49769 49769
+5 * 49769
+4 * 49769 0 49769
+5 +1 49769 49769
+5 * 49769 49769
+5 * 49769 49769
+5 * 49769
+4 * 49769 0 49769
+5 -4 49769 0 49769
+4 * 49769 49769
+3 * 49769
+3 * 49769 49769
+3 * 49769 0 0 0 0 0 0 0 0 49769 315
jcnd=49455/49769 0x401672 +1 
* * 
-9 * 314 314 0 1 0 0 1
+3 * 314
+3 * 314 314
+3 * 314 0 0 0 0 0 0 0 0 314
jcnd=314/314 0x401672 +1 
* * 
+6 +6 314 314 0 1 0 0 1
+5 * 314 314
+5 * 314 0 314
+5 +2 314 314
+3 +1 314 0 314
+3 * 314 314
+5 * 314 314
+1 * 314 314

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 314
+7 * 314
+7 * 314
+3 * 314
+3 * 314 0 314
cfi=(2)
cfn=(4)
calls=314 0x4030b2 310 
* * 328361 96047 90082 68 17 16 68 17 16 20702 984 1254 156
+5 * 314
+7 * 314
+7 * 314
+3 * 314
+3 * 314 0 314
cfi=(2)
cfn=(80)
calls=314 0x402ff4 310 
* * 329825 95489 88365 48 8 70 48 8 70 21164 1074 1254
+5 * 314 0 0 1 0 0 1
+7 * 314
+7 * 314
+3 * 314
+3 * 314 0 314
cfn=(142)
calls=314 0x401585 -52 
* * 5196386 2297224 1199794 8 0 0 8 0 0 100166 630
+5 * 314 0 314
+8 * 314 314
+6 * 314 0 314
+6 * 314
+7 * 314
+3 * 314 0 314
cfi=(2)
cfn=(148)
calls=314 0x402df4 414 
* * 78580 24652 17565 33 5 0 33 5 0 8734 233 628
+5 * 314
+7 * 314
+3 * 314 0 314 1 0 0 1
cfi=(2)
cfn=(178)
calls=314 0x402e74 414 
* * 82307 26044 18649 7 1 0 7 1 0 9796 32 628
+5 +2 314
+7 * 314
+7 * 314
+3 * 314
+3 * 314 0 314
cfi=(2)
cfn=(4)
calls=314 0x4030b2 310 
* * 327978 96017 89971 2 1 1 2 1 1 20666 613 1254
+5 * 314
+7 * 314
+7 * 314
+3 * 314
+3 * 314 0 314
cfi=(2)
cfn=(80)
calls=314 0x402ff4 310 
* * 328813 95420 88197 0 0 2 0 0 2 21006 675 1254
+5 * 314 314
+6 * 314 0 0 1 0 0 1
+7 * 314
+7 * 314 0 314
+6 * 314 314
+8 * 314
+3 * 314
+3 * 314 0 314
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=314 0x401719 -33 
* * 2407438 1002288 552169 4 0 0 4 0 0 50083 315
+5 * 314 0 314
+8 * 314 314
+6 * 314 0 314
+6 * 314
+7 * 314 0 0 1 0 0 1
+3 * 314 0 314
cfi=(2)
cfn=(148)
calls=314 0x402df4 414 
* * 78580 24652 17565 0 0 0 0 0 0 8734 227 628
+5 * 314
+7 * 314
+3 * 314 0 314
cfi=(2)
cfn=(178)
calls=314 0x402e74 414 
* * 82307 26044 18649 0 0 0 0 0 0 9796 26 628
+5 +2 314 314
+7 * 314
+3 * 314 0 314
cfi=(2)
cfn=(2)
calls=314 0x402d74 645 
* * 4082 1884 628
+5 * 314 314
+6 * 314
+3 * 314
+3 * 314
+3 * 314 314
+7 * 314
+3 * 314 0 0 1 0 0 1
+3 * 314 0 314
cfi=(2)
cfn=(144)
calls=314 0x402d9a 770 
* * 3454 1570 942
+5 * 314
+3 * 314
+7 * 314
+3 * 314
+3 * 314 0 314
cfi=(2)
cfn=(200)
calls=314 0x402eda 901 
* * 32554 12007 9295 38 26 11 38 26 11 1469 74 47
+5 +1 314 314
+7 * 314
+3 * 314 0 314
cfi=(2)
cfn=(10)
calls=314 0x402f54 645 
* * 4082 1884 628 0 1 0 0 1
+5 * 314 314
+6 * 314
+3 * 314
+3 * 314
+3 * 314 314
+7 * 314 0 0 1 0 0 1
+3 * 314
+3 * 314 0 314
cfi=(2)
cfn=(146)
calls=314 0x402dba 770 
* * 3454 1570 942
+5 * 314
+3 * 314
+7 * 314
+3 * 314
+3 * 314 0 314
cfi=(2)
cfn=(244)
calls=314 0x402f7a 901 
* * 32378 11823 9154 19 34 37 19 34 37 1453 80 47
+5 +1 314 314
+7 * 314
+3 * 314 0 314
cfi=(2)
cfn=(10)
calls=314 0x402f54 645 
* * 4082 1884 628
+5 * 314 314
+6 * 314
+3 * 314
+3 * 314
+3 * 314 314 0 1 0 0 1
+7 * 314
+3 * 314
+3 * 314 0 314
cfi=(2)
cfn=(146)
calls=314 0x402dba 770 
* * 3454 1570 942
+5 * 314 314
+2 * 314
+4 * 314 314
+8 * 314 314
+8 * 314 0 314
+8 +1 314 314
+7 * 314
+3 * 314 0 314
cfi=(2)
cfn=(2)
calls=314 0x402d74 645 
* * 4082 1884 628
+5 * 314 314 0 1 0 0 1
+6 * 314
+3 * 314
+3 * 314
+3 * 314 314
+7 * 314
+3 * 314
+3 * 314 0 314
cfi=(2)
cfn=(144)
calls=314 0x402d9a 770 
* * 3454 1570 942
+5 * 314 314
+4 * 314 314
+8 * 314
+4 * 314 314
+8 * 314
+3 * 314 0 314
+8 +2 314 0 314
+7 -12 314 314
+8 * 314 314
+7 * 314 0 0 0 0 0 0 0 0 314 1
jcnd=1/314 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 314
+7 * 314
+3 * 314 0 314
cfi=(2)
cfn=(2)
calls=314 0x402d74 645 
* * 4082 1884 628 2 0 1 2 0 1
+5 * 314
+3 * 314 314
+7 * 314
+3 * 314 0 314
cfi=(2)
cfn=(2)
calls=314 0x402d74 645 
* * 4082 1884 628 0 1 0 0 1
+5 * 314
+3 * 314 0 0 0 0 0 0 0 0 314 2
+2 * 314 0 0 1 0 0 1
+5 * 314
jump=314 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 314
+2 * 314 0 0 0 0 0 0 0 0 314
jcnd=314/314 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 314 0 314
+1 * 314
+3 * 314
+4 * 314 0 314
+4 * 314 0 314
+4 * 314 0 314
+5 +1 314 314
+4 * 314
+3 * 314 0 314
cfi=(2)
cfn=(2)
calls=314 0x402d74 645 
* * 4082 1884 628
+5 * 314
+3 * 314 0 314
+3 +1 314 314 0 1 0 0 1
+6 * 314 0 314
+3 * 314 314
+6 * 314 0 314
+3 +2 314 0 314
+7 * 314
jump=314 +86 * 
* * 
+2 +1 49769 49769
+3 * 49769
+3 * 49769 49769
+4 * 49769
+3 * 49769
+3 * 49769 0 49769
cfi=(2)
cfn=(144)
calls=49769 0x402d9a 770 
* * 547459 248845 149307
+5 * 49769 49769
+4 * 49769 49769
+5 * 49769
+4 * 49769 0 49769
+5 +1 49769 49769
+3 * 49769
+3 * 49769 49769
+4 * 49769
+3 * 49769
+3 * 49769 0 49769
cfi=(2)
cfn=(146)
calls=49769 0x402dba 770 
* * 547459 248845 149307
+5 * 49769 49769
+2 * 49769
+4 * 49769 49769
+5 * 49769
+4 * 49769 0 49769
+5 -2 49769 0 49769
+4 * 49769 49769
+3 * 49769
+3 * 49769 49769
+3 * 49769 0 0 0 0 0 0 0 0 49769 315
jcnd=49455/49769 -93 +1 
* * 
-9 * 314 314 0 1 0 0 1
+3 * 314
+3 * 314 314
+3 * 314 0 0 0 0 0 0 0 0 314
jcnd=314/314 -93 +1 
* * 
+2 +4 314 314
+3 * 314
+3 * 314 0 0 1 0 0 1
+4 * 314 314
+5 * 314
+4 * 314
+3 * 314 0 314
+5 +1 314 314
+3 * 314
+3 * 314
+4 * 314 314
+5 * 314
+4 * 314
+3 * 314 0 314
+5 +1 314 314
+5 * 314 314
+5 * 314 314
+5 * 314 0 0 1 0 0 1
+4 * 314
+3 * 314 0 314
+5 +2 314 314
+3 +1 314 0 314
+3 * 314 314
+5 * 314 314
+1 * 314 314

fl=(4)
fn=(174)
0x403ccc 121 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 628
+4 * 628
+3 * 628 0 628
cfi=(5)
cfn=(176)
calls=628 0x4044cc -35 
* * 3140 1256 1256
+5 * 628 628
+1 * 628 628

fn=(90)
0x4047b2 115 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628 1 0 0 1
+4 +1 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(5)
cfn=(92)
calls=628 0x4049d4 -35 
* * 3768 1256 1884 1 0 0 1
+5 * 628 628
+1 * 628 628

fn=(194)
0x403d7e 121 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 628
+4 * 628
+3 * 628 0 628
cfi=(5)
cfn=(196)
calls=628 0x404520 -35 
* * 3140 1256 1256
+5 * 628 628
+1 * 628 628

fn=(16)
0x404804 115 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(5)
cfn=(18)
calls=628 0x404a28 -35 
* * 3768 1256 1884 1 0 1 1 0 1
+5 * 628 628
+1 * 628 628

fl=(3)
fn=(222)
0x403373 215 314 0 314
+1 * 314
+3 * 314
+4 * 314 0 314
+4 * 314 0 314
+4 * 314 0 314
+4 +1 314 314
+4 * 314 314
+4 * 314 314
+4 * 314
+3 * 314
+3 * 314 0 314
cfi=(5)
cfn=(224)
calls=314 0x403df2 -87 
* * 7536 2512 2826 0 21 3 0 21 3 314 2
+5 * 314 314
+1 * 314 314

fn=(8)
0x403afa 224 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+4 * 628 628
+4 * 628 628
+1 * 628 628

fn=(264)
0x4036b1 215 314 0 314
+1 * 314
+3 * 314
+4 * 314 0 314
+4 * 314 0 314
+4 * 314 0 314
+4 +1 314 314
+4 * 314 314
+4 * 314 314
+4 * 314
+3 * 314
+3 * 314 0 314
cfi=(5)
cfn=(266)
calls=314 0x40406a -87 
* * 7536 2512 2826 0 20 12 0 20 12 314
+5 * 314 314
+1 * 314 314

fn=(212)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102)
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28)
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84)
0x4039ed 224 628 0 628
+1 * 628
+3 * 628 0 628
+4 * 628 628
+4 * 628 628
+1 * 628 628

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1272 0 1272 1 0 0 1
+5 0 1272 0 1272
+5 0 1272
+3 0 1272 0 1272
+5 0 1272
+4 0 1272 1272 0 0 1 0 0 1
+7 0 1272 1272 0 0 1 0 0 1
+3 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272 2
+6 0 1272 1272 0 0 1 0 0 1
+7 0 1272 1272 0 1 1 0 1 1
+4 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272
+2 0 1272 1272 0 0 1 0 0 1
+3 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272
jcnd=1272/1272 +97 0 
* 0 
+18 0 1272
+3 0 1272
+3 0 1272 0 1272
cfn=(38) _int_malloc
calls=1272 0x3877c79a00 0 
* 0 289700 35716 42057 45 32 51 45 32 51 44775 1992
+5 0 1272
+3 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272
+2 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272
+2 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272 23
+2 0 1272 1272
+7 0 1272 0 0 0 0 0 0 0 0 1272
jcnd=1272/1272 +13 0 
* 0 
+13 0 1272 0 1272
+2 0 1272 0 0 0 0 0 0 0 0 1272 12
+6 0 1272
+3 0 1272 1272
+4 0 1272 1272
+5 0 1272 1272
+5 0 1272
+4 0 1272 1272
+1 0 1272 0 0 1 0 0 1
+5 0 1272 1272 0 0 1 0 0 1
+7 0 1272 0 0 0 0 0 0 0 0 1272
jcnd=1272/1272 +14 0 
* 0 
+14 0 1272 0 1272 1 0 0 1
+3 0 1272 0 0 0 0 0 0 0 0 1272
+6 0 1272
jump=1272 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1272 0 1272 1 0 0 1
+2 0 1272
+3 0 1272
+3 0 1272 0 1272
+2 0 1272
+3 0 1272 0 1272
+1 0 1272
+3 0 1272 0 1272
+1 0 1272
+3 0 1272
+4 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272
+6 0 1272
+4 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272 7
jcnd=10/1272 0x3877c838d1 0 
* 0 
+2 0 1262
+3 0 1262
+3 0 1262
+3 0 1262
+3 0 1262
+3 0 1262 0 0 0 0 0 0 0 0 1262
jcnd=1262/1262 +41 0 
* 0 
+41 0 1262 0 0 1 0 0 1
+3 0 1262 0 0 0 0 0 0 0 0 1262
jcnd=1262/1262 0x3877c839c0 0 
* 0 
+24 0 1262
+3 0 1262
+4 0 1262
+3 0 1262
+3 0 1262
+3 0 1262
+3 0 1262
+3 0 1262 0 0 0 0 0 0 0 0 1262 628
jcnd=638/1262 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 634
+10 0 634 634 0 0 2 0 0 2
+3 0 634
+4 0 634 0 634
+3 0 634
+4 0 634
+4 0 634 0 0 0 0 0 0 0 0 634
jcnd=634/634 -18 0 
* 0 
-18 0 1958 1958
+3 0 1958
+4 0 1958 0 1958
+3 0 1958
+4 0 1958
+4 0 1958 0 0 0 0 0 0 0 0 1958 11
jcnd=1324/1958 -18 0 
* 0 
+2 0 1272
+4 0 1272
+3 0 1272 1272
+1 0 1272 1272
+1 0 1272 1272
+2 0 1272 1272 0 1 0 0 1
+2 0 1272 1272
0x3877c839c0 0 1262 0 0 1 0 0 1
+3 0 1262
+3 0 1262
+3 0 1262
+4 0 1262 0 1262 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1262 0x3877c89b20 0 
* 0 275602 102248 99724 6 1 60 6 1 60 13180 792 1262 156
+5 0 1262
jump=1262 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1272 1272 0 1 1 0 1 1
+7 0 1272 1272 0 0 1 0 0 1
+3 0 1272
+3 0 1272 0 0 1 0 0 1 0 0 1272
+6 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272
+6 0 1272 1272
+4 0 1272
+4 0 1272
+2 0 1272 0 0 0 0 0 0 0 0 1272 2
+2 0 1272
+2 0 1272
+7 0 1272 0 0 0 0 0 0 0 0 1272
jcnd=1272/1272 +14 0 
* 0 
+14 0 1272
+2 0 1272
cfn=(170) _int_free
calls=1272 0x3877c78650 0 
* 0 123499 32679 18645 19 2 0 19 2 0 29841 531

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=11/12 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1272 0 1272 1 0 0 1
+2 0 1272 0 1272
+2 0 1272 0 1272
+2 0 1272
+3 0 1272 0 1272
+2 0 1272 0 1272
+1 0 1272 0 1272
+1 0 1272
+3 0 1272
+4 0 1272 1272
+4 0 1272 0 1272
+4 0 1272
+3 0 1272
+4 0 1272
+3 0 1272
+3 0 1272
+3 0 1272 0 0 1 0 0 1 0 0 1272
+6 0 1272
+4 0 1272 0 0 0 0 0 0 0 0 1272
+6 0 1272
+4 0 1272 0 0 0 0 0 0 0 0 1272
+6 0 1272 1272
+7 0 1272 0 0 0 0 0 0 0 0 1272 4
jcnd=1148/1272 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1148
+2 0 1148 0 0 0 0 0 0 0 0 1148
+6 0 1148 1148 0 1 0 0 1
+4 0 1148
+3 0 1148
+2 0 1148 0 0 0 0 0 0 0 0 1148
jcnd=1148/1148 0x3877c78a40 0 
* 0 
+6 0 1148 1148
+4 0 1148
+3 0 1148 0 0 0 0 0 0 0 0 1148
+6 0 1148 1148
+5 0 1148
+4 0 1148 0 0 0 0 0 0 0 0 1148
jcnd=1148/1148 0x3877c7907c 0 
* 0 
+6 0 1148 1148
+5 0 1148
+4 0 1148 0 0 0 0 0 0 0 0 1148
+6 0 1148
+4 0 1148 0 0 1 0 0 1 0 0 1148
+6 0 1148
+4 0 1148 1148
+7 0 1148 0 0 0 0 0 0 0 0 1148
+6 0 1148 1148
+6 0 1148
+2 0 1148 0 0 0 0 0 0 0 0 1148
+6 0 1148 1148
+4 0 1148 0 0 0 0 0 0 0 0 1148 5
jcnd=1144/1148 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1148 1148 0 1 0 0 1
+4 0 1148 0 0 0 0 0 0 0 0 1148 382
jcnd=434/1148 0x3877c78bf0 0 
* 0 
+6 0 714 714 0 0 1 0 0 1
+6 0 714 0 0 1 0 0 1 0 0 714 64
jcnd=61/714 0x3877c78a78 0 
* 0 
+6 0 653 653
+5 0 653 653
+5 0 653 653
+4 0 653 0 0 0 0 0 0 0 0 653
+6 0 653 653
+4 0 653 0 0 0 0 0 0 0 0 653
+6 0 653 653
+9 0 653 0 653
+4 0 653 0 653
+4 0 653 0 0 0 0 0 0 0 0 653 4
jcnd=645/653 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 653
+3 0 653
+4 0 653 653
+4 0 653 653
+4 0 653 0 0 0 0 0 0 0 0 653
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 714
+7 0 714 0 714
+4 0 714 0 714
+4 0 714 0 0 0 0 0 0 0 0 714 68
jcnd=441/714 +18 0 
* 0 
+2 0 273 0 273
+8 0 273 0 273
+8 0 273 0 273
+4 0 273
+3 0 273 0 273 1 0 0 1
+4 0 273
+4 0 273 0 273
+4 0 273 0 273
+4 0 273
+7 0 273 0 0 0 0 0 0 0 0 273
jcnd=273/273 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 434
+7 0 434 0 0 0 0 0 0 0 0 434
jcnd=434/434 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1148 0 0 1 0 0 1
+5 0 1148 1148
+4 0 1148 1148
+7 0 1148 0 0 0 0 0 0 0 0 1148
jcnd=1148/1148 +16 0 
* 0 
+16 0 1148 0 1148
+5 0 1148 0 0 0 0 0 0 0 0 1148
+6 0 1148
+3 0 1148
jump=1148 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1148 1148 0 1 0 0 1
+4 0 1148
+2 0 1148 0 0 0 0 0 0 0 0 1148
+6 0 1148 1148
+7 0 1148 0 0 0 0 0 0 0 0 1148
jcnd=1148/1148 +15 0 
* 0 
+15 0 1148 0 1148 1 0 0 1
+4 0 1148 0 0 0 0 0 0 0 0 1148 2
+6 0 1148
+4 0 1148 1148
+1 0 1148 1148
+1 0 1148 1148
+2 0 1148 1148
+2 0 1148 1148
+2 0 1148 1148
+2 0 1148 1148
0x3877c78bf0 0 434 0 0 1 0 0 1
+3 0 434 0 434
+4 0 434
+3 0 434
+4 0 434 0 434 1 0 0 1
+4 0 434
jump=434 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1148 1148 0 1 1 0 1 1
+4 0 1148 0 0 1 0 0 1
+7 0 1148
+4 0 1148
+3 0 1148
+3 0 1148 0 0 0 0 0 0 0 0 1148
jcnd=1148/1148 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1262 0 0 1 0 0 1
+7 0 1262
+3 0 1262
+3 0 1262 1262 0 0 1 0 0 1
+4 0 1262
+4 0 1262 0 0 0 0 0 0 0 0 0 0 1262 156
jump=152 0x3877c89be8 0 
* 0 
jump=162 0x3877c89bd0 0 
* 0 
jump=152 0x3877c89bb8 0 
* 0 
jump=152 +11 0 
* 0 
jump=160 0x3877c89c48 0 
* 0 
jump=162 0x3877c89c30 0 
* 0 
jump=160 0x3877c89c18 0 
* 0 
jump=162 0x3877c89c00 0 
* 0 
+11 0 152 152
+3 0 152
+4 0 152
+4 0 152 152
+4 0 152
+4 0 152 0 152
+4 0 152
+9 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-40 0 12230 12230
+4 0 12230 0 12230 0 0 3 0 0 3
+4 0 12230 12230
+4 0 12230 0 12230 0 0 15 0 0 15
+4 0 12230 12230
+4 0 12230 0 12230 0 0 19 0 0 19
+4 0 12230 12230
+4 0 12230 0 12230
+4 0 12230
+4 0 12230
+4 0 12230 0 0 0 0 0 0 0 0 12230 788
jcnd=1226/12230 0x3877c89c60 0 
* 0 
-32 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162
jcnd=10/162 0x3877c89c60 0 
* 0 
-24 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
jcnd=8/160 0x3877c89c60 0 
* 0 
-16 0 162 162 0 1 0 0 1
+4 0 162 0 162
+4 0 162 0 0 1 0 0 1
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162 4
jcnd=10/162 0x3877c89c60 0 
* 0 
+6 0 11604
+4 0 11604 11604
+3 0 11604 0 11604 0 0 1 0 0 1
+3 0 11604 11604
+4 0 11604 0 11604 0 0 3 0 0 3
+4 0 11604 11604
+4 0 11604 0 11604 0 0 18 0 0 18
+4 0 11604 11604
+4 0 11604 0 11604
+4 0 11604
jump=11604 -80 0 
* 0 
-30 0 152 152
+3 0 152 0 152
+3 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152 0 0 1 0 0 1
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
-24 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
jump=162 -80 0 
* 0 
-16 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
+8 0 152 152
+3 0 152
+4 0 152 0 0 1 0 0 1
+4 0 152
+4 0 152
jump=152 -39 0 
* 0 
+9 0 162
+3 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+3 0 162
+4 0 162
jump=162 -72 0 
* 0 
+8 0 152
+4 0 152 152
+3 0 152 0 0 0 0 0 0 0 0 152
+2 0 152
+4 0 152
jump=152 -99 0 
* 0 
+11 0 162 162 0 1 0 0 1
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b78 0 
* 0 
+9 0 160 160
+3 0 160
+4 0 160
+4 0 160
+4 0 160
jump=160 0x3877c89b70 0 
* 0 
+9 0 162 162
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b68 0 
* 0 
+9 0 160 160
+3 0 160
+4 0 160
+4 0 160
+4 0 160
jump=160 0x3877c89b60 0 
* 0 
+9 0 1262 0 1262 1 0 0 1
+3 0 1262 1262

fn=(104) alloc_perturb
0x3877c77180 0 1138 1138 0 1 0 0 1
+6 0 1138
+2 0 1138 0 0 0 0 0 0 0 0 1138 1
+2 0 1138 1138

fn=(38)
0x3877c79a00 0 1272 0 1272 1 0 0 1
+2 0 1272
+3 0 1272 0 1272
+2 0 1272 0 1272
+2 0 1272 0 1272 0 0 1 0 0 1
+2 0 1272
+3 0 1272 0 1272
+1 0 1272 0 1272
+1 0 1272
+4 0 1272
+4 0 1272 0 0 0 0 0 0 0 0 1272
+6 0 1272
+4 0 1272
+6 0 1272
+3 0 1272
+4 0 1272
+4 0 1272
+4 0 1272
+3 0 1272 0 0 0 0 0 0 0 0 1272
+6 0 1272 1272 0 1 1 0 1 1
+7 0 1272 0 0 0 0 0 0 0 0 1272 7
jcnd=1150/1272 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1138
+4 0 1138 1138
+1 0 1138 1138
+1 0 1138 1138
+2 0 1138 1138
+2 0 1138 1138
+2 0 1138 1138
+2 0 1138 1138
+7 0 1167
+7 0 1167 0 0 1 0 0 1 0 0 1167 7
jcnd=264/1167 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 3 0 0 3
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 264 0 0 1 0 0 1
+3 0 264
+4 0 264
+4 0 264 0 0 1 0 0 1 0 0 264
jcnd=264/264 0x3877c7a1a4 0 
* 0 
+30 0 264 264
+6 0 264
+5 0 264 0 0 0 0 0 0 0 0 264 1
jcnd=263/264 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 894 237 190 8 2 0 8 2 0 184 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1166 0 0 1 0 0 1
+3 0 1166
+3 0 1166
+3 0 1166
+4 0 1166
+3 0 1166
+4 0 1166 0 1166
+5 0 1166
+3 0 1166 0 1166
+4 0 1166 0 1166
+4 0 1166 0 1166
+5 0 1166
+3 0 1166
+3 0 1166
+3 0 1166
+3 0 1166
+4 0 1166
+4 0 1166 0 0 1 0 0 1
+4 0 1166 0 1166
+4 0 1166
+4 0 1166 0 1166
+5 0 1166 0 1166
+5 0 1166
+3 0 1166
+3 0 1166 0 1166
+5 0 1166
+5 0 1166
+3 0 1166 0 1166
+4 0 1166 0 1166
+4 0 1166
+6 0 1166 0 1166
+4 0 1166 0 1166
+5 0 1166 0 0 1 0 0 1
+3 0 1166
+3 0 1166
+3 0 1166
jump=1166 +87 0 
* 0 
+8 0 911
+3 0 911
+4 0 911
+2 0 911
+2 0 911
+3 0 911
+3 0 911
+3 0 911
+2 0 911
+2 0 911
+5 0 911
+2 0 911 911 0 0 2 0 0 2
+4 0 911
+3 0 911
+4 0 911 0 911
+4 0 911 0 911 0 0 1 0 0 1
+8 0 911
+7 0 911 0 911
+4 0 911 0 911 0 0 2 0 0 2
+4 0 911 0 911
+4 0 911 0 0 0 0 0 0 0 0 911
-38 0 263
+3 0 263
+4 0 263 0 263
+4 0 263 0 263
+8 0 263
+7 0 263 0 263
+4 0 263 0 263
+4 0 263 0 263
+4 0 263 0 0 0 0 0 0 0 0 263
+6 0 2341 2341 0 1 0 0 1
+4 0 2341
+3 0 2341 0 0 0 0 0 0 0 0 2341 149
jcnd=1119/2341 0x3877c79ef0 0 
* 0 
+6 0 1222 1222
+4 0 1222 1222 0 0 1 0 0 1
+4 0 1222
+4 0 1222 0 0 0 0 0 0 0 0 1222
+6 0 1222 1222 0 1 1 0 1 1
+7 0 1222 0 0 0 0 0 0 0 0 1222
+6 0 1222
+4 0 1222
+7 0 1222 0 0 0 0 0 0 0 0 1222 6
jcnd=312/1222 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1203
+3 0 1203 0 1203
+4 0 1203 0 1203
+5 0 1203 0 0 0 0 0 0 0 0 1203 17
jcnd=29/1203 0x3877c7a090 0 
* 0 
+6 0 1174
+7 0 1174 0 0 0 0 0 0 0 0 1174 117
jcnd=911/1174 0x3877c79c50 0 
* 0 
+6 0 263 0 0 1 0 0 1
+3 0 263
+4 0 263
+4 0 263 0 0 0 0 0 0 0 0 263
+6 0 263
+3 0 263
+4 0 263
+2 0 263
+2 0 263
+3 0 263
+3 0 263
+8 0 263
+3 0 263
+2 0 263
+2 0 263
+4 0 263 263 0 0 2 0 0 2
+4 0 263
+3 0 263 0 0 1 0 0 1 0 0 263 9
jcnd=263/263 0x3877c79e15 0 
* 0 
0x3877c79e15 0 263 0 263
+4 0 263 0 263
+4 0 263
+3 0 263
jump=263 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=387/406 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1119 0 0 1 0 0 1
+7 0 1119
+3 0 1119 0 0 0 0 0 0 0 0 1119 4
jcnd=256/1119 0x3877c7a0b0 0 
* 0 
+6 0 1095 1095 0 1 0 0 1
+4 0 1095
+3 0 1095
+3 0 1095
+2 0 1095
+4 0 1095
+3 0 1095
+3 0 1095
+2 0 1095
+2 0 1095
+2 0 1095
+2 0 1095 1095
+8 0 1095
+5 0 1095
+5 0 1095
+2 0 1095 0 0 0 0 0 0 0 0 1095
-2 0 528
+2 0 528 0 0 0 0 0 0 0 0 528
+2 0 1623
+2 0 1623 0 0 0 0 0 0 0 0 1623 33
jcnd=911/1623 +64 0 
* 0 
+2 0 712
+8 0 712
+3 0 712
+3 0 712 0 0 0 0 0 0 0 0 712 1
jcnd=1/712 0x3877c79fc0 0 
* 0 
-6 0 859
+3 0 859
+3 0 859 0 0 0 0 0 0 0 0 859 11
jcnd=435/859 0x3877c79fc0 0 
* 0 
+2 0 1135
+2 0 1135 1135
+8 0 1135
+2 0 1135 0 0 0 0 0 0 0 0 1135 26
jcnd=859/1135 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
+2 0 276
+2 0 276
+4 0 276
+2 0 276
+2 0 276 0 0 0 0 0 0 0 0 276 6
jcnd=214/276 -8 0 
* 0 
-8 0 8466
+4 0 8466
+2 0 8466
+2 0 8466 0 0 0 0 0 0 0 0 8466 579
jcnd=7474/8466 -8 0 
* 0 
-2 0 911 0 0 1 0 0 1
+2 0 911 0 0 0 0 0 0 0 0 911 25
jcnd=778/911 -8 0 
* 0 
+2 0 1187 1187 0 0 13 0 0 13
+4 0 1187 0 0 1 0 0 1
+3 0 1187 0 0 0 0 0 0 0 0 1187 477
jcnd=659/1187 0x3877c7a1cf 0 
* 0 
+6 0 528
+2 0 528
+4 0 528
+2 0 528
+2 0 528
+2 0 528 0 528
+8 0 528
jump=528 0x3877c79f30 0 
* 0 
+37 0 436 436 0 1 0 0 1
+5 0 436 436
+4 0 436
+4 0 436 436
+5 0 436 0 0 0 0 0 0 0 0 436
jcnd=436/436 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 256 256
+4 0 256
+4 0 256
+2 0 256
+5 0 256 256 0 1 0 0 1
+4 0 256
+3 0 256 0 0 0 0 0 0 0 0 256 4
jcnd=232/256 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 264 0 0 1 0 0 1
+3 0 264 0 264
+4 0 264
jump=264 0x3877c79b99 0 
* 0 
+36 0 659 659 0 1 1 0 1 1
+4 0 659 659
+4 0 659
+3 0 659 659
+4 0 659
+4 0 659
+3 0 659
+3 0 659 659
+4 0 659 0 0 0 0 0 0 0 0 659
+6 0 659 659
+4 0 659 0 0 0 0 0 0 0 0 659
+6 0 659 659 0 1 0 0 1
+8 0 659 0 659
+4 0 659 0 659
+4 0 659 0 0 0 0 0 0 0 0 659 11
jcnd=419/659 +38 0 
* 0 
+2 0 240 240 0 0 2 0 0 2
+4 0 240
+3 0 240 0 0 0 0 0 0 0 0 240
+2 0 240 240
+5 0 240 0 0 0 0 0 0 0 0 240
+6 0 240 240
+4 0 240 0 240
+4 0 240 240
+4 0 240 0 240
+4 0 240
+4 0 240 0 0 0 0 0 0 0 0 240
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 638 638
+4 0 638 638 0 1 0 0 1
+4 0 638 0 0 0 0 0 0 0 0 638
+6 0 638
+4 0 638
+7 0 638 0 638 0 0 7 0 0 7
+4 0 638 0 638
+4 0 638 0 638
+4 0 638 0 638
+4 0 638 0 0 0 0 0 0 0 0 638 4
jcnd=172/638 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 172
+7 0 172 0 0 0 0 0 0 0 0 172
jcnd=172/172 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 647 0 0 1 0 0 1
+7 0 647 0 647
+4 0 647
+3 0 647
+3 0 647
+4 0 647
+3 0 647
+4 0 647
+3 0 647
+3 0 647
+4 0 647 0 647
+4 0 647 0 647 0 0 1 0 0 1
+4 0 647
jump=647 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 683
+4 0 683 0 0 1 0 0 1
+3 0 683
+3 0 683 0 683
cfn=(104)
calls=683 0x3877c77180 0 
* 0 2732 1366 0 1 0 0 1 0 0 683
+5 0 683
+3 0 683
jump=683 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 436 0 0 1 0 0 1
+7 0 436
+2 0 436
+4 0 436
+3 0 436
+3 0 436 0 436
+5 0 436
+3 0 436
+4 0 436
+3 0 436 0 0 1 0 0 1
+4 0 436
+4 0 436
+3 0 436
+4 0 436 0 436
+4 0 436 0 436 0 0 17 0 0 17
+4 0 436
+3 0 436
+3 0 436 0 436
cfn=(104)
calls=436 0x3877c77180 0 
* 0 1744 872 0 0 0 0 0 0 0 436 1
+5 0 436
+3 0 436
jump=436 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

totals: 9385587 3833144 2216412 241 96 139 241 96 139 274713 4966 7622 156
