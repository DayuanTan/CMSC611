version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2492


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2955687265 - 2955776839
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 264 0 0 1 0 0 1
+3 0 264 0 0 0 0 0 0 0 0 264
+2 0 264
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=264 0x3877c7b8b0 0 
* 0 27714 6936 3748 19 4 0 19 4 0 6426 86
* 0 264 264 0 1 1 0 1 1 0 0 0 264

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 264 0 264 1 0 0 1
+1 0 264
+5 0 264
+3 0 264 0 264
+1 0 264
+4 0 264 0 0 1 0 0 1
+3 0 264
+4 0 264
+3 0 264 0 264 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=264 0x3877c7aa50 0 
* 0 56339 9396 8678 31 27 32 31 27 32 9510 308
* 0 264 264 0 1 1 0 1 1 0 0 0 264
+5 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 +96 0 
* 0 
+96 0 264 0 0 1 0 0 1
+4 0 264 264
+1 0 264 264
+1 0 264 264

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 63 0 63 1 0 0 1
+1 * 63
+3 * 63
+4 * 63 0 63
+4 * 63 0 63
+4 +1 63 63
+4 * 63
+3 * 63 0 63
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=63 0x402d74 645 
* * 819 378 126
+5 * 63
+3 * 63 0 63
+3 +1 63 63
+6 * 63 0 63
+3 * 63 63
+6 * 63 0 63
+3 +1 63 63
+6 * 63 0 63 1 0 0 1
+3 * 63 63
+6 * 63 0 63
+3 +2 63 0 63
+7 * 63
jump=63 +86 * 
* * 
+2 +1 2079 2079
+3 * 2079
+3 * 2079 2079
+4 * 2079
+3 * 2079
+3 * 2079 0 2079
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=2079 0x402d9a 770 
* * 22869 10395 6237
+5 * 2079 2079
+4 * 2079 2079
+5 * 2079
+4 * 2079 0 2079
+5 +1 2079 2079
+3 * 2079
+3 * 2079 2079
+4 * 2079
+3 * 2079
+3 * 2079 0 2079
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=2079 0x402dba 770 
* * 22869 10395 6237 1 0 0 1
+5 * 2079 2079
+2 * 2079
+4 * 2079 2079
+5 * 2079
+4 * 2079 0 2079
+5 -2 2079 0 2079
+4 * 2079 2079
+3 * 2079
+3 * 2079 2079
+3 * 2079 0 0 0 0 0 0 0 0 2079 64
jcnd=2016/2079 -93 +1 
* * 
-9 * 63 63 0 1 0 0 1
+3 * 63
+3 * 63 63
+3 * 63 0 0 0 0 0 0 0 0 63
jcnd=63/63 -93 +1 
* * 
+2 +4 63 63
+3 * 63
+3 * 63
+4 * 63 63 0 1 0 0 1
+5 * 63
+4 * 63
+3 * 63 0 63
+5 +1 63 63
+3 * 63
+3 * 63
+4 * 63 63
+5 * 63
+4 * 63
+3 * 63 0 63
+5 +1 63 0 63
+7 * 63
jump=63 0x4016ee * 
* * 
+2 +1 2079 2079
+3 * 2079
+3 * 2079 2079
+4 * 2079
+3 * 2079 0 0 1 0 0 1
+3 * 2079 0 2079
cfi=(2)
cfn=(146)
calls=2079 0x402dba 770 
* * 22869 10395 6237
+5 * 2079 2079
+2 * 2079
+4 * 2079 2079
+5 * 2079 0 2079
+5 +1 2079 2079
+3 * 2079
+3 * 2079 2079
+4 * 2079
+3 * 2079
+3 * 2079 0 2079
cfi=(2)
cfn=(144)
calls=2079 0x402d9a 770 
* * 22869 10395 6237
+5 * 2079 2079
+4 * 2079 2079
+5 * 2079 0 2079
+5 +1 2079 2079
+5 * 2079 2079
+5 * 2079 2079
+5 * 2079
+4 * 2079 0 2079
+5 +1 2079 2079
+5 * 2079 2079
+5 * 2079 2079
+5 * 2079
+4 * 2079 0 2079
+5 -4 2079 0 2079
+4 * 2079 2079
+3 * 2079
+3 * 2079 2079
+3 * 2079 0 0 0 0 0 0 0 0 2079 64
jcnd=2016/2079 0x401672 +1 
* * 
-9 * 63 63 0 1 0 0 1
+3 * 63
+3 * 63 63
+3 * 63 0 0 0 0 0 0 0 0 63
jcnd=63/63 0x401672 +1 
* * 
+6 +6 63 63 0 1 0 0 1
+5 * 63 63
+5 * 63 0 63
+5 +2 63 63
+3 +1 63 0 63
+3 * 63 63
+5 * 63 63
+1 * 63 63

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 63
+7 * 63
+7 * 63
+3 * 63
+3 * 63 0 63
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=63 0x4030b2 310 
* * 52356 15045 13695 65 16 16 65 16 16 3154 162 250 31
+5 * 63
+7 * 63
+7 * 63
+3 * 63
+3 * 63 0 63
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=63 0x402ff4 310 
* * 52276 15102 13526 42 8 17 42 8 17 3171 143 250
+5 * 63 0 0 1 0 0 1
+7 * 63
+7 * 63
+3 * 63
+3 * 63 0 63
cfn=(142)
calls=63 0x401585 -52 
* * 220311 97209 50967 8 0 0 8 0 0 4284 128
+5 * 63 0 63
+8 * 63 63
+6 * 63 0 63
+6 * 63
+7 * 63
+3 * 63 0 63
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=63 0x402df4 414 
* * 15742 4941 3639 31 6 0 31 6 0 1669 34 126
+5 * 63
+7 * 63
+3 * 63 0 63 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=63 0x402e74 414 
* * 15682 4941 3579 7 0 0 7 0 0 1669 9 126
+5 +2 63
+7 * 63
+7 * 63
+3 * 63
+3 * 63 0 63
cfi=(2)
cfn=(4)
calls=63 0x4030b2 310 
* * 52070 15027 13599 2 1 1 2 1 1 3138 76 250
+5 * 63
+7 * 63
+7 * 63
+3 * 63
+3 * 63 0 63
cfi=(2)
cfn=(80)
calls=63 0x402ff4 310 
* * 51599 15050 13386 0 0 2 0 0 2 3083 34 250
+5 * 63 63
+6 * 63 0 0 1 0 0 1
+7 * 63
+7 * 63 0 63
+6 * 63 63
+8 * 63
+3 * 63
+3 * 63 0 63
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=63 0x401719 -33 
* * 103509 42966 23814 4 0 0 4 0 0 2142 64
+5 * 63 0 63
+8 * 63 63
+6 * 63 0 63
+6 * 63
+7 * 63 0 0 1 0 0 1
+3 * 63 0 63
cfi=(2)
cfn=(148)
calls=63 0x402df4 414 
* * 15742 4941 3639 0 0 0 0 0 0 1669 31 126
+5 * 63
+7 * 63
+3 * 63 0 63
cfi=(2)
cfn=(178)
calls=63 0x402e74 414 
* * 15682 4941 3579 0 0 0 0 0 0 1669 6 126
+5 +2 63 63
+7 * 63
+3 * 63 0 63
cfi=(2)
cfn=(2)
calls=63 0x402d74 645 
* * 819 378 126
+5 * 63 63
+6 * 63
+3 * 63
+3 * 63
+3 * 63 63
+7 * 63
+3 * 63 0 0 1 0 0 1
+3 * 63 0 63
cfi=(2)
cfn=(144)
calls=63 0x402d9a 770 
* * 693 315 189
+5 * 63
+3 * 63
+7 * 63
+3 * 63
+3 * 63 0 63
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=63 0x402eda 901 
* * 12216 4179 3398 29 9 8 29 9 8 572 26 35
+5 +1 63 63
+7 * 63
+3 * 63 0 63
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=63 0x402f54 645 
* * 819 378 126 0 1 0 0 1
+5 * 63 63
+6 * 63
+3 * 63
+3 * 63
+3 * 63 63
+7 * 63 0 0 1 0 0 1
+3 * 63
+3 * 63 0 63
cfi=(2)
cfn=(146)
calls=63 0x402dba 770 
* * 693 315 189
+5 * 63
+3 * 63
+7 * 63
+3 * 63
+3 * 63 0 63
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=63 0x402f7a 901 
* * 12348 4205 3418 19 9 13 19 9 13 594 42 35
+5 +1 63 63
+7 * 63
+3 * 63 0 63
cfi=(2)
cfn=(10)
calls=63 0x402f54 645 
* * 819 378 126
+5 * 63 63
+6 * 63
+3 * 63
+3 * 63
+3 * 63 63 0 1 0 0 1
+7 * 63
+3 * 63
+3 * 63 0 63
cfi=(2)
cfn=(146)
calls=63 0x402dba 770 
* * 693 315 189
+5 * 63 63
+2 * 63
+4 * 63 63
+8 * 63 63
+8 * 63 0 63
+8 +1 63 63
+7 * 63
+3 * 63 0 63
cfi=(2)
cfn=(2)
calls=63 0x402d74 645 
* * 819 378 126
+5 * 63 63 0 1 0 0 1
+6 * 63
+3 * 63
+3 * 63
+3 * 63 63
+7 * 63
+3 * 63
+3 * 63 0 63
cfi=(2)
cfn=(144)
calls=63 0x402d9a 770 
* * 693 315 189
+5 * 63 63
+4 * 63 63
+8 * 63
+4 * 63 63
+8 * 63
+3 * 63 0 63
+8 +2 63 0 63
+7 -12 63 63
+8 * 63 63
+7 * 63 0 0 0 0 0 0 0 0 63 2
jcnd=1/63 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 63
+7 * 63
+3 * 63 0 63
cfi=(2)
cfn=(2)
calls=63 0x402d74 645 
* * 819 378 126 2 0 1 2 0 1
+5 * 63
+3 * 63 63
+7 * 63
+3 * 63 0 63
cfi=(2)
cfn=(2)
calls=63 0x402d74 645 
* * 819 378 126 0 1 0 0 1
+5 * 63
+3 * 63 0 0 0 0 0 0 0 0 63
+2 * 63 0 0 1 0 0 1
+5 * 63
jump=63 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 63
+2 * 63 0 0 0 0 0 0 0 0 63
jcnd=63/63 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 63 0 63
+1 * 63
+3 * 63
+4 * 63 0 63
+4 * 63 0 63
+4 * 63 0 63
+5 +1 63 63
+4 * 63
+3 * 63 0 63
cfi=(2)
cfn=(2)
calls=63 0x402d74 645 
* * 819 378 126
+5 * 63
+3 * 63 0 63
+3 +1 63 63 0 1 0 0 1
+6 * 63 0 63
+3 * 63 63
+6 * 63 0 63
+3 +2 63 0 63
+7 * 63
jump=63 +86 * 
* * 
+2 +1 2079 2079
+3 * 2079
+3 * 2079 2079
+4 * 2079
+3 * 2079
+3 * 2079 0 2079
cfi=(2)
cfn=(144)
calls=2079 0x402d9a 770 
* * 22869 10395 6237
+5 * 2079 2079
+4 * 2079 2079
+5 * 2079
+4 * 2079 0 2079
+5 +1 2079 2079
+3 * 2079
+3 * 2079 2079
+4 * 2079
+3 * 2079
+3 * 2079 0 2079
cfi=(2)
cfn=(146)
calls=2079 0x402dba 770 
* * 22869 10395 6237
+5 * 2079 2079
+2 * 2079
+4 * 2079 2079
+5 * 2079
+4 * 2079 0 2079
+5 -2 2079 0 2079
+4 * 2079 2079
+3 * 2079
+3 * 2079 2079
+3 * 2079 0 0 0 0 0 0 0 0 2079 64
jcnd=2016/2079 -93 +1 
* * 
-9 * 63 63 0 1 0 0 1
+3 * 63
+3 * 63 63
+3 * 63 0 0 0 0 0 0 0 0 63
jcnd=63/63 -93 +1 
* * 
+2 +4 63 63
+3 * 63
+3 * 63 0 0 1 0 0 1
+4 * 63 63
+5 * 63
+4 * 63
+3 * 63 0 63
+5 +1 63 63
+3 * 63
+3 * 63
+4 * 63 63
+5 * 63
+4 * 63
+3 * 63 0 63
+5 +1 63 63
+5 * 63 63
+5 * 63 63
+5 * 63 0 0 1 0 0 1
+4 * 63
+3 * 63 0 63
+5 +2 63 63
+3 +1 63 0 63
+3 * 63 63
+5 * 63 63
+1 * 63 63

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 126
+4 * 126
+3 * 126 0 126
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=126 0x4044cc -35 
* * 630 252 252
+5 * 126 126
+1 * 126 126

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 126 0 126 1 0 0 1
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126 1 0 0 1
+4 +1 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=126 0x4049d4 -35 
* * 756 252 378 1 0 0 1
+5 * 126 126
+1 * 126 126

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 126 0 126 1 0 0 1
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 126
+4 * 126
+3 * 126 0 126
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=126 0x404520 -35 
* * 630 252 252
+5 * 126 126
+1 * 126 126

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 126 0 126 1 0 0 1
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=126 0x404a28 -35 
* * 756 252 378 1 0 1 1 0 1
+5 * 126 126
+1 * 126 126

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 126 0 126 1 0 0 1
+1 * 126
+3 * 126 0 126
+4 * 126 126
+4 * 126 126
+1 * 126 126

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 63 0 63
+1 * 63
+3 * 63
+4 * 63 0 63
+4 * 63 0 63
+4 * 63 0 63
+4 +1 63 63
+4 * 63 63
+4 * 63 63
+4 * 63
+3 * 63
+3 * 63 0 63
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=63 0x40406a -87 
* * 1512 504 567 0 4 4 0 4 4 63
+5 * 63 63
+1 * 63 63

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 126 0 126
+1 * 126
+3 * 126 0 126
+4 * 126 126
+4 * 126 126
+1 * 126 126

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 63 0 63
+1 * 63
+3 * 63
+4 * 63 0 63
+4 * 63 0 63
+4 * 63 0 63
+4 +1 63 63
+4 * 63 63
+4 * 63 63
+4 * 63
+3 * 63
+3 * 63 0 63
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=63 0x403df2 -87 
* * 1512 504 567 0 5 1 0 5 1 63
+5 * 63 63
+1 * 63 63

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 252 0 252 1 0 0 1
+1 * 252
+3 * 252 0 252
+4 +1 252 252
+4 * 252 252
+1 * 252 252

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 252 0 252 1 0 0 1
+1 * 252
+3 * 252
+4 * 252 0 252
+4 +1 252
+4 * 252
+3 * 252 0 252 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=252 0x40500c 790 
* * 1512 756 504 1 0 0 1
+5 * 252 252
+3 * 252 252
+1 * 252 252

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 186 0 186
+1 * 186
+3 * 186 0 186
+4 +1 186 186
+4 * 186 186
+1 * 186 186

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 252 0 252 1 0 0 1
+1 * 252
+3 * 252 0 252
+4 +1 252 252 0 1 0 0 1
+4 * 252 252
+1 * 252 252

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 186 0 186
+1 * 186
+3 * 186 0 186 0 0 1 0 0 1
+4 +1 186 186
+4 * 186 186
+1 * 186 186

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 252 0 252 1 0 0 1
+1 * 252
+3 * 252
+4 * 252 0 252
+4 +1 252
+4 * 252
+3 * 252 0 252
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=252 0x404ffe 790 
* * 1512 756 504 1 0 0 1
+5 * 252 252
+3 * 252 252
+1 * 252 252

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 126 0 126
+1 * 126
+3 * 126 0 126
+4 * 126 0 126
+4 * 126 126
+4 * 126 126
+1 * 126 126

fl=(5)
fn=(28)
0x404992 113 144 0 144 1 0 0 1
+1 * 144
+3 * 144 0 144
+4 +1 144
+10 * 144 144
+1 * 144 144

fn=(176)
0x4044cc 86 126 0 126
+1 * 126
+3 * 126 0 126
+4 * 126 126
+1 * 126 126

fn=(224)
0x403df2 129 63 0 63
+1 * 63
+3 * 63
+4 * 63 0 63
+4 * 63 0 63
+4 * 63 0 63
+4 +1 63 63
+4 * 63
+3 * 63
+5 * 63 0 63
cfi=(16)
cfn=(226)
calls=63 0x402d61 -20 
* * 441 189 189
+5 * 63
+3 * 63 0 0 0 0 0 0 0 0 63
+2 * 63 63
+4 * 63 63 0 0 5 0 0 5
+2 * 63 0 63 0 0 1 0 0 1
+2 * 63 63
+1 * 63 63

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +1 132 132
+4 * 132
+3 * 132 0 132
cob=(5)
cfi=(8)
cfn=(164)
calls=132 0x387e4bb2f0 0 
* * 14432 3594 1932 21 5 0 21 5 0 3342 67 132
* * 132 132 0 1 1 0 1 1 0 0 0 132
+5 * 132 132
+1 * 132 132

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +1 132 132
+4 * 132
+3 * 132 0 132
cob=(5)
cfi=(8)
cfn=(164)
calls=132 0x387e4bb2f0 0 
* * 14338 3606 1816 0 0 0 0 0 0 3348 19 132
* * 132 132 0 0 0 0 0 0 0 0 0 132
+5 * 132 132
+1 * 132 132

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 132 0 132 1 0 0 1
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +2 132 132
+4 * 132
+3 * 132 0 132
cfn=(102)
calls=132 0x4048de +12 
* * 792 264 264 1 0 0 1
+5 * 132 132
+4 * 132 0 0 1 0 0 1
+3 * 132
+2 * 132 0 0 0 0 0 0 0 0 132
jcnd=132/132 +7 +3 
* * 
+7 +3 132 132
+4 * 132
+4 * 132
+3 * 132 0 132
cob=(5)
cfi=(8)
cfn=(32)
calls=132 0x387e4bd0b0 0 
* * 29953 5259 4536 18 11 19 18 11 19 4860 117 132
* * 132 132 0 0 0 0 0 0 0 0 0 132
+5 +1 132 132
+1 * 132 132

fn=(18)
0x404a28 81 126 0 126 1 0 0 1
+1 * 126
+3 * 126 0 126 0 0 1 0 0 1
+4 * 126 0 126
+4 * 126 126
+1 * 126 126

fn=(92)
0x4049d4 81 126 0 126 1 0 0 1
+1 * 126
+3 * 126 0 126
+4 * 126 0 126
+4 * 126 126
+1 * 126 126

fn=(196)
0x404520 86 126 0 126
+1 * 126
+3 * 126 0 126
+4 * 126 126
+1 * 126 126

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 132 0 132 1 0 0 1
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132 1 0 0 1
+4 +2 132 132
+4 * 132
+3 * 132 0 132
cfn=(28)
calls=132 0x404992 +12 
* * 792 264 264 1 0 0 1
+5 * 132 132
+4 * 132
+3 * 132
+2 * 132 0 0 0 0 0 0 0 0 132
jcnd=132/132 +7 +3 
* * 
+7 +3 132 132
+4 * 132
+4 * 132
+3 * 132 0 132
cob=(5)
cfi=(8)
cfn=(32)
calls=132 0x387e4bd0b0 0 
* * 30610 5193 4934 17 17 14 17 17 14 4914 191 132
* * 132 132 0 1 1 0 1 1 0 0 0 132
+5 +1 132 132
+1 * 132 132

fn=(102)
0x4048de 113 144 0 144 1 0 0 1
+1 * 144
+3 * 144 0 144
+4 +1 144
+10 * 144 144
+1 * 144 144

fn=(266)
0x40406a 129 63 0 63
+1 * 63
+3 * 63
+4 * 63 0 63
+4 * 63 0 63
+4 * 63 0 63
+4 +1 63 63
+4 * 63
+3 * 63
+5 * 63 0 63
cfi=(16)
cfn=(226)
calls=63 0x402d61 -20 
* * 441 189 189
+5 * 63
+3 * 63 0 0 0 0 0 0 0 0 63
+2 * 63 63
+4 * 63 63 0 0 4 0 0 4
+2 * 63 0 63 0 0 4 0 0 4
+2 * 63 63
+1 * 63 63

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +2 126 126
+4 * 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=126 0x404484 107 
* * 41132 12648 11896 25 3 4 25 3 4 1350 77 248 31
+5 * 126 126
+1 * 126 126

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +2 126 126 0 1 0 0 1
+4 * 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=126 0x404a36 450 
* * 37604 11388 10636 24 3 4 24 3 4 1350 77 248 31
+5 * 126 126
+1 * 126 126

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +2 126 126
+4 * 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=126 0x40439c 107 
* * 41132 12648 11896 7 1 4 7 1 4 1350 74 248
+5 * 126 126
+1 * 126 126

fn=(116)
0x40439c 107 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +10 126 126
+4 * 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=126 0x4047d7 -26 
* * 39368 12018 11266 7 1 4 7 1 4 1350 74 248
+5 +1 126 126
+1 * 126 126

fn=(118)
0x4047d7 91 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +2 126 126
+4 * 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=126 0x4049e2 450 
* * 37604 11388 10636 7 1 4 7 1 4 1350 74 248
+5 * 126 126
+1 * 126 126

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +10 126 126
+4 * 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(52)
calls=126 0x404829 -26 
* * 39368 12018 11266 25 3 4 25 3 4 1350 77 248 31
+5 +1 126 126
+1 * 126 126

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(234)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fl=(2)
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 132 0 132 1 0 0 1
+1 * 132 0 0 1 0 0 1
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 0 132 132
+5 0 132 0 0 0 0 0 0 0 0 132
+2 0 132 132
+4 0 132 132
+4 0 132
+5 0 132
+3 0 132
+3 0 132 0 132
fi=(6) ???
cfi=(5)
cfn=(100)
calls=132 0x40461a 99 
* 0 33385 6315 5592 21 11 19 21 11 19 4992 117 264
+5 0 132
fi=(6)
jump=132 +7 0 
* 0 
+7 0 132 132
+1 0 132 132

fn=(144)
0x402d9a 770 6363 0 6363
+1 * 6363
+3 * 6363 0 6363
+4 * 6363 0 6363
+4 +1 6363 6363
+4 * 6363 6363
+3 * 6363 6363
+4 * 6363
+4 * 6363
+3 * 6363 6363
+1 * 6363 6363

fn=(146)
0x402dba 770 6363 0 6363
+1 * 6363
+3 * 6363 0 6363 1 0 0 1
+4 * 6363 0 6363
+4 +1 6363 6363
+4 * 6363 6363
+3 * 6363 6363
+4 * 6363
+4 * 6363
+3 * 6363 6363
+1 * 6363 6363

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 126
+4 * 126
+3 * 126 0 126
cfi=(4)
cfn=(194)
calls=126 0x403d7e +42 
* * 1764 630 630 1 0 0 1
+5 * 126 126
+1 * 126 126

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 126 0 126 1 0 0 1
+1 * 126
+3 * 126 0 126
+1 * 126
+4 * 126 0 126
+4 +2 126 126
+4 * 126 126
+4 * 126
+3 * 126 126
+4 * 126 126
+3 * 126
+3 * 126
+3 * 126
+4 * 126
+3 * 126 126
+4 * 126 126
+3 -1 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=126 0x403d98 +11 
* * 17252 4716 3000 1 0 0 1 0 0 3338 15 252
+5 +1 126 126
+4 * 126
+3 * 126 0 126
cfn=(192)
calls=126 0x403296 -82 
* * 2898 1008 1008 1 0 0 1
+5 * 126
jump=126 +28 * 
* * 
+28 * 126
+4 * 126 126
+1 * 126 126
+1 * 126 126

fn=(2)
0x402d74 645 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528 0 0 1 0 0 1
+4 +1 528 528
+4 * 528 528 0 1 1 0 1 1
+4 * 528
+3 * 528 528
+4 * 528 528
+3 * 528
+3 * 528
+3 * 528
+4 * 528 528
+1 * 528 528

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 +2 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=126 0x404236 -14 
* * 34440 6588 6200 23 13 8 23 13 8 4942 161 252
+5 * 126 126
+4 * 126 0 126
+3 +1 126 126
+4 * 126 126 0 1 0 0 1
+3 * 126 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+3 * 126 126
+4 * 126
+4 * 126
+3 * 126 126
+4 * 126 0 126
+4 +1 126 126
+1 * 126 126

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 +2 126 126
+4 * 126 126 0 1 0 0 1
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(96)
calls=126 0x403fbe -14 
* * 33889 6668 5818 20 7 15 20 7 15 4904 103 252
+5 * 126 126
+4 * 126 0 126
+3 +1 126 126
+4 * 126 126
+3 * 126 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+3 * 126 126
+4 * 126
+4 * 126
+3 * 126 126
+4 * 126 0 126
+4 +1 126 126
+1 * 126 126

fn=(244)
0x402f7a 901 63 0 63
+1 * 63
+3 * 63 0 0 1 0 0 1
+4 * 63 0 63
+4 * 63 0 63
+4 +2 63 63
+4 * 63 63
+4 * 63 63
+4 * 63 63
+4 * 63
+3 * 63 0 0 0 0 0 0 0 0 63
jcnd=6/63 +51 +10 
* * 
+2 +3 57 57
+4 * 57 57
+4 * 57 57
+4 -1 57 57
+4 * 57
+3 * 57
+3 * 57 0 57
cfi=(3)
cfn=(264)
calls=57 0x4036b1 215 
* * 2166 741 798 0 4 1 0 4 1 57
+5 +2 57 57
+4 * 57 57
+4 * 57
+4 * 57 57
+4 * 57 0 57
+4 * 57
jump=57 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8430 2615 2263 18 5 12 18 5 12 474 42 35
+5 +2 63 63
+1 * 63 63

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 270 0 270 1 0 0 1
+1 * 270
+3 * 270 0 270 1 0 0 1
+4 +1 270 270
+4 * 270 270
+1 * 270 270

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+3 * 126 0 126
+4 * 126
+4 * 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=126 0x404380 726 
* * 1260 630 504
+5 * 126 126
+4 * 126 126
+1 * 126 126

fn=(148)
0x402df4 414 126 0 126
+1 * 126
+3 * 126 0 126
+1 * 126
+4 * 126 0 126 1 0 0 1
+4 +2 126 126
+4 * 126
+3 * 126 0 126
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=126 0x40325e 113 
* * 756 378 252
+5 * 126
+3 * 126 126
+4 * 126 126
+4 * 126 126
+4 * 126 126
+3 -1 126
+3 * 126
+3 * 126 0 126
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=126 0x40326c 148 
* * 3906 1260 1512 4 0 0 4
+5 +1 126 126
+4 * 126
+3 * 126 0 126
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=126 0x4031ec 159 
* * 23798 7110 4758 25 6 0 25 6 0 3338 65 252
+5 * 126
jump=126 +28 * 
* * 
+28 * 126 0 0 1 0 0 1
+4 * 126 126
+1 * 126 126
+1 * 126 126

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 132 0 132 1 0 0 1
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +2 132 132
+5 * 132 0 0 0 0 0 0 0 0 132
+2 +1 132 132
+4 * 132 132
+4 * 132 132
+4 * 132
+3 * 132
+3 * 132 0 132
cfi=(5)
cfn=(160)
calls=132 0x4044d6 -65 
* * 16016 4122 2592 22 6 0 22 6 0 3342 67 264
+5 +1 132 132
+1 * 132 132

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 126 0 126
+1 * 126
+3 * 126 0 126
+1 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=126 0x4043ca -45 
* * 4536 1638 1764 4 0 4 4 0 4
+5 +1 126 126 0 1 0 0 1
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(20)
calls=126 0x404412 +43 
* * 37590 8100 7082 24 13 8 24 13 8 4942 161 252
+5 * 126
jump=126 +28 * 
* * 
+28 * 126
+4 * 126 126
+1 * 126 126
+1 * 126 126

fn=(14)
0x4043ca 90 126 0 126 1 0 0 1
+1 * 126
+3 * 126
+4 * 126 0 126 0 0 1 0 0 1
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfi=(4)
cfn=(16)
calls=126 0x404804 +24 
* * 2268 756 882 2 0 1 2 0 1
+5 * 126 126
+4 * 126 0 126 0 0 2 0 0 2
+7 * 126 126
+4 * 126 0 126 1 0 0 1
+8 * 126 126
+4 * 126 0 126
+8 +1 126 126
+1 * 126 126

fn=(80)
0x402ff4 310 126 0 126 1 0 0 1
+1 * 126
+3 * 126 0 126
+2 * 126 0 126
+2 * 126 0 126
+1 * 126 0 0 1 0 0 1
+4 * 126 0 126
+4 * 126 0 126
+4 +2 126 126
+4 * 126
+3 * 126 0 126
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=126 0x4039fc 117 
* * 756 378 252 2 0 0 2
+5 * 126
+3 * 126 0 126
cfi=(3)
cfn=(84)
calls=126 0x4039ed -88 
* * 756 378 252
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(2)
calls=126 0x402d74 645 
* * 1638 756 252
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126
+3 * 126
+3 * 126 0 126 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=126 0x403a0a 134 
* * 44347 10700 9346 27 7 15 27 7 15 4904 103 252
+5 +4 126 126
+4 * 126
+3 * 126 0 126
cfn=(106)
calls=126 0x40325e 113 
* * 756 378 252 1 0 0 1
+5 * 126
+3 * 126 126
+4 * 126 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=126 0x403a98 565 
* * 3150 1260 1008 2 0 0 2
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(112)
calls=126 0x403a68 547 
* * 3150 1260 1008
+5 * 126
+3 * 126
+3 * 126
+3 * 126
+3 * 126 0 126
cfi=(11)
cfn=(114)
calls=126 0x403ac9 -60 
* * 43022 13278 12652 7 1 4 7 1 4 1350 74 248
+5 -3 126 126
+4 * 126 0 126
+4 * 126
jump=126 +28 +4 
* * 
+28 +4 126
+4 * 126 126
+1 * 126 126
+2 * 126 126
+2 * 126 126
+1 * 126 126

fn=(188)
0x403d98 171 132 0 132 1 0 0 1
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +2 132 132
+5 * 132 0 0 0 0 0 0 0 0 132 6
+2 +1 132 132
+4 * 132 132
+4 * 132 132
+4 * 132
+3 * 132
+3 * 132 0 132
cfi=(5)
cfn=(190)
calls=132 0x40452a -65 
* * 15922 4134 2476 0 0 0 0 0 0 3348 19 264
+5 +1 132 132
+1 * 132 132

fn=(22)
0x404236 167 132 0 132 1 0 0 1
+1 * 132
+3 * 132
+4 * 132 0 132 1 0 0 1
+4 * 132 0 132
+4 0 132 132
+5 0 132 0 0 0 0 0 0 0 0 132
+2 0 132 132
+4 0 132 132
+4 0 132
+5 0 132
+3 0 132
+3 0 132 0 132
fi=(6)
cfi=(5)
cfn=(26)
calls=132 0x404730 99 
* 0 34042 6249 5990 21 18 14 21 18 14 5046 191 264
+5 0 132
fi=(6)
jump=132 +7 0 
* 0 
+7 0 132 132
+1 0 132 132

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 126 0 126 1 0 0 1
+1 * 126
+3 * 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+4 * 126 0 126
+4 * 126
+4 * 126 0 0 1 0 0 1
+4 * 126
+3 * 126
+3 * 126 0 126
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=126 0x404468 726 
* * 1260 630 504 1 0 0 1
+5 * 126 126
+4 * 126 126
+1 * 126 126

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+3 * 126 0 126
+4 * 126
+4 * 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfi=(10)
cfn=(44)
calls=126 0x404468 726 
* * 1260 630 504
+5 * 126 126
+4 * 126 126
+1 * 126 126

fn=(86)
0x403a0a 134 126 0 126
+1 * 126
+3 * 126 0 126
+1 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=126 0x4042e2 -45 
* * 4536 1638 1764 5 0 0 5
+5 +1 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126 1 0 0 1
cfn=(94)
calls=126 0x40432a +43 
* * 37039 8180 6700 21 7 15 21 7 15 4904 103 252
+5 * 126
jump=126 +28 * 
* * 
+28 * 126
+4 * 126 126
+1 * 126 126
+1 * 126 126

fn=(88)
0x4042e2 90 126 0 126 1 0 0 1
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126 1 0 0 1
cfi=(4)
cfn=(90)
calls=126 0x4047b2 +24 
* * 2268 756 882 3 0 0 3
+5 * 126 126
+4 * 126 0 126
+7 * 126 126
+4 * 126 0 126
+8 * 126 126
+4 * 126 0 126
+8 +1 126 126
+1 * 126 126

fn=(156)
0x4031ec 159 126 0 126 1 0 0 1
+1 * 126
+3 * 126 0 126
+1 * 126
+4 * 126 0 126
+4 +2 126 126
+4 * 126 126 0 1 0 0 1
+4 * 126
+3 * 126 126
+4 * 126 126
+3 * 126
+3 * 126
+3 * 126
+4 * 126
+3 * 126 126
+4 * 126 126
+3 -1 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(158)
calls=126 0x403ce6 +11 
* * 17372 4716 3120 22 6 0 22 6 0 3338 65 252
+5 +1 126 126
+4 * 126
+3 * 126 0 126
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=126 0x4031b8 -82 
* * 2898 1008 1008 1 0 0 1
+5 * 126
jump=126 +28 * 
* * 
+28 * 126
+4 * 126 126
+1 * 126 126
+1 * 126 126

fn=(172)
0x4031b8 79 126 0 126 1 0 0 1
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 126
+4 * 126
+3 * 126 0 126
cfi=(4)
cfn=(174)
calls=126 0x403ccc +42 
* * 1764 630 630
+5 * 126 126
+1 * 126 126

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246)
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10)
0x402f54 645 276 0 276 1 0 0 1
+1 * 276
+3 * 276 0 276
+4 +1 276 276
+4 * 276 276 0 0 2 0 0 2
+4 * 276
+3 * 276 276
+4 * 276 276
+3 * 276
+3 * 276
+3 * 276
+4 * 276 276
+1 * 276 276

fn=(106)
0x40325e 113 270 0 270 1 0 0 1
+1 * 270
+3 * 270 0 270
+4 +1 270 270
+4 * 270 270
+1 * 270 270

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6)
0x403b08 117 138 0 138 1 0 0 1
+1 * 138
+3 * 138 0 138 0 0 1 0 0 1
+4 +1 138 138
+4 * 138 138
+1 * 138 138

fn=(82)
0x4039fc 117 138 0 138 1 0 0 1
+1 * 138
+3 * 138 0 138 1 0 0 1
+4 +1 138 138
+4 * 138 138
+1 * 138 138

fn=(200)
0x402eda 901 63 0 63
+1 * 63
+3 * 63
+4 * 63 0 63
+4 * 63 0 63
+4 +2 63 63
+4 * 63 63
+4 * 63 63
+4 * 63 63
+4 * 63
+3 * 63 0 0 0 0 0 0 0 0 63 7
jcnd=6/63 +51 +10 
* * 
+2 +3 57 57
+4 * 57 57
+4 * 57 57
+4 -1 57 57
+4 * 57
+3 * 57
+3 * 57 0 57
cfi=(3)
cfn=(222)
calls=57 0x403373 215 
* * 2166 741 798 0 4 0 0 4 0 57
+5 +2 57 57
+4 * 57 57
+4 * 57
+4 * 57 57
+4 * 57 0 57
+4 * 57
jump=57 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8298 2589 2243 26 5 8 26 5 8 452 19 35
+5 +2 63 63
+1 * 63 63

fn=(4)
0x4030b2 310 126 0 126 1 0 0 1
+1 * 126
+3 * 126 0 126
+2 * 126 0 126
+2 * 126 0 126
+1 * 126
+4 * 126 0 126 1 0 0 1
+4 * 126 0 126
+4 +2 126 126
+4 * 126
+3 * 126 0 126
cfn=(6)
calls=126 0x403b08 117 
* * 756 378 252 1 0 1 1 0 1
+5 * 126
+3 * 126 0 126
cfi=(3)
cfn=(8)
calls=126 0x403afa -88 
* * 756 378 252 1 0 0 1
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(10)
calls=126 0x402f54 645 
* * 1638 756 252 1 1 0 1 1
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126
+3 * 126
+3 * 126 0 126
cfn=(12)
calls=126 0x403b16 134 
* * 44898 10620 9728 29 13 12 29 13 12 4942 161 252
+5 +4 126 126 0 1 0 0 1
+4 * 126
+3 * 126 0 126
cfn=(40)
calls=126 0x40333c 113 
* * 756 378 252 2 0 0 2
+5 * 126
+3 * 126 126
+4 * 126 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(42)
calls=126 0x403ba4 565 
* * 3150 1260 1008 3 0 0 3
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(46)
calls=126 0x403b74 547 
* * 3150 1260 1008
+5 * 126
+3 * 126
+3 * 126
+3 * 126
+3 * 126 0 126 1 0 0 1
cfi=(11)
cfn=(48)
calls=126 0x403bd5 -60 
* * 43022 13278 12652 26 3 4 26 3 4 1350 77 248 31
+5 -3 126 126
+4 * 126 0 126
+4 * 126
jump=126 +28 +4 
* * 
+28 +4 126
+4 * 126 126
+1 * 126 126
+2 * 126 126
+2 * 126 126
+1 * 126 126

fn=(108)
0x403a98 565 126 0 126 1 0 0 1
+1 * 126
+3 * 126
+4 * 126 0 126
+4 +1 126 126
+4 * 126 126
+4 * 126 0 126
+4 * 126
+4 * 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfi=(10)
cfn=(110)
calls=126 0x404380 726 
* * 1260 630 504 1 0 0 1
+5 * 126 126
+4 * 126 126
+1 * 126 126

fn=(178)
0x402e74 414 126 0 126
+1 * 126
+3 * 126 0 126
+1 * 126
+4 * 126 0 126 1 0 0 1
+4 +2 126 126
+4 * 126
+3 * 126 0 126
cfn=(40)
calls=126 0x40333c 113 
* * 756 378 252
+5 * 126
+3 * 126 126
+4 * 126 126
+4 * 126 126
+4 * 126 126
+3 -1 126
+3 * 126
+3 * 126 0 126
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=126 0x40334a 148 
* * 3906 1260 1512 2 0 0 2
+5 +1 126 126
+4 * 126
+3 * 126 0 126
cfn=(186)
calls=126 0x4032ca 159 
* * 23678 7110 4638 3 0 0 3 0 0 3338 15 252
+5 * 126
jump=126 +28 * 
* * 
+28 * 126 0 0 1 0 0 1
+4 * 126 126
+1 * 126 126
+1 * 126 126

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126 1 0 0 1
+4 * 126 0 126
+4 * 126 0 126
+4 +8 126 0 126
+4 +3 126 126
+4 * 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=126 0x404f37 -22 
* * 17444 4584 3706 14 3 3 14 3 3 1350 77 248 31
+5 +1 126 126
+1 * 126 126

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 126 0 126
+1 * 126
+3 * 126 0 126
+2 * 126 0 126
+1 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +4 126 126
+4 * 126
+3 * 126 0 126
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=126 0x404878 277 
* * 1890 756 630 1 0 0 1
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=126 0x404d44 277 
* * 3150 1134 1008 2 0 0 2
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(132)
calls=126 0x404d44 277 
* * 3150 1134 1008
+5 * 126
+3 * 126
+3 * 126
+3 * 126 0 126
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=126 0x404d5e -49 
* * 19334 5214 4462 1 1 4 1 1 4 1350 74 248
+5 +1 126
+4 * 126 126
+1 * 126 126
+2 * 126 126
+1 * 126 126

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 126 0 126
+1 * 126
+3 * 126 0 126
+1 * 126
+4 * 126 0 126 1 0 0 1
+4 * 126 0 126
+4 * 126 0 126
+4 +10 126 126
+4 * 126
+3 * 126 0 126
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=126 0x404c38 288 
* * 1890 756 630 3 0 0 3
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(56)
calls=126 0x404c38 288 
* * 1890 756 630
+5 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=126 0x404c52 -36 
* * 31052 9120 8368 20 3 4 20 3 4 1350 77 248 31
+5 +1 126
+4 * 126 126
+1 * 126 126
+1 * 126 126

fn=(60)
0x404c52 424 126 0 126
+1 * 126
+3 * 126 0 126
+2 * 126 0 126
+1 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +4 126 126
+4 * 126
+3 * 126 0 126
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=126 0x40492d 277 
* * 1890 756 630 2 0 0 2
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=126 0x404d9d 277 
* * 3150 1134 1008 2 0 1 2 0 1
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(66)
calls=126 0x404d9d 277 
* * 3150 1134 1008
+5 * 126
+3 * 126
+3 * 126
+3 * 126 0 126
cfn=(72)
calls=126 0x404db7 -49 
* * 19334 5214 4462 15 3 3 15 3 3 1350 77 248 31
+5 +1 126
+4 * 126 126
+1 * 126 126
+2 * 126 126
+1 * 126 126

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 162 0 162 1 0 0 1
+1 * 162
+3 * 162
+4 * 162 0 162
+4 +1 162 162
+4 * 162
+3 * 162 0 162 1 0 0 1
cfi=(13)
cfn=(64)
calls=162 -33 -66 
* * 972 486 324
+5 * 162 162
+1 * 162 162

fn=(66)
0x404d9d 277 252 0 252
+1 * 252
+3 * 252
+4 * 252 0 252
+4 +1 252 252
+4 * 252
+3 * 252 0 252
cfi=(13)
cfn=(68)
calls=252 0x404f1a -58 
* * 4032 1512 1260 2 0 1 2 0 1
+5 * 252 252
+1 * 252 252

fn=(240)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 126 0 126
+1 * 126
+3 * 126 0 126
+1 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +10 126 126
+4 * 126
+3 * 126 0 126
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=126 0x404bc6 288 
* * 1890 756 630 3 0 0 3
+5 * 126
+3 * 126 126
+4 * 126
+3 * 126 0 126
cfn=(122)
calls=126 0x404bc6 288 
* * 1890 756 630
+5 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(126)
calls=126 0x404be0 -36 
* * 31052 9120 8368 4 1 4 4 1 4 1350 74 248
+5 +1 126
+4 * 126 126
+1 * 126 126
+1 * 126 126

fn=(128)
0x404878 277 162 0 162
+1 * 162
+3 * 162
+4 * 162 0 162 1 0 0 1
+4 +1 162 162
+4 * 162
+3 * 162 0 162
cfi=(13)
cfn=(130)
calls=162 -33 -66 
* * 972 486 324 0 0 1 0 0 1
+5 * 162 162
+1 * 162 162

fn=(132)
0x404d44 277 252 0 252
+1 * 252
+3 * 252
+4 * 252 0 252
+4 +1 252 252
+4 * 252
+3 * 252 0 252
cfi=(13)
cfn=(134)
calls=252 0x404e98 -58 
* * 4032 1512 1260 2 0 0 2
+5 * 252 252
+1 * 252 252

fn=(138)
0x404d5e 379 126 0 126
+1 * 126
+3 * 126
+4 * 126 0 126
+4 * 126 0 126
+4 * 126 0 126
+4 +8 126 0 126
+4 +3 126 126
+4 * 126 126
+4 * 126 126
+4 * 126
+3 * 126
+3 * 126 0 126
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=126 0x404eb5 -22 
* * 17444 4584 3706 1 1 4 1 1 4 1350 74 248
+5 +1 126 126
+1 * 126 126

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 252 0 252 1 0 0 1
+1 * 252
+3 * 252
+4 * 252 0 252
+4 +1 252 252
+4 * 252
+3 * 252 0 252
cfi=(13)
cfn=(124)
calls=252 0x404d36 -77 
* * 1512 756 504 2 0 0 2
+5 * 252 252
+1 * 252 252

fn=(56)
0x404c38 288 252 0 252 1 0 0 1
+1 * 252
+3 * 252
+4 * 252 0 252 1 0 0 1
+4 +1 252 252
+4 * 252
+3 * 252 0 252
cfi=(13)
cfn=(58)
calls=252 0x404d8f -77 
* * 1512 756 504 1 0 0 1
+5 * 252 252
+1 * 252 252

fn=(74)
0x404f37 368 138 0 138
+1 * 138
+3 * 138
+4 * 138 0 138 1 0 0 1
+4 * 138 0 138
+4 * 138 0 138
+4 +2 138 138
+4 * 138 138
+4 * 138
+3 * 138
+3 * 138
+4 * 138 0 138
+4 +1 138 138
+5 * 138 0 0 0 0 0 0 0 0 138
jcnd=6/138 +33 +2 
* * 
+2 +1 132 132
+4 * 132
+8 * 132 132
+4 * 132 132
+4 * 132
+3 * 132 0 0 1 0 0 1
+3 * 132 0 132 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=132 0x3877c83840 0 
* * 14426 3308 3049 11 2 5 11 2 5 1272 79 127 31
* * 132 132 0 1 1 0 1 1 0 0 0 132
+5 +1 138 138
+4 * 138
+8 * 138 138
+4 * 138
+3 +1 138 138
+1 * 138 138

fn=(140)
0x404eb5 368 138 0 138
+1 * 138
+3 * 138
+4 * 138 0 138 1 0 0 1
+4 * 138 0 138
+4 * 138 0 138 0 0 1 0 0 1
+4 +2 138 138
+4 * 138 138
+4 * 138
+3 * 138
+3 * 138
+4 * 138 0 138
+4 +1 138 138
+5 * 138 0 0 0 0 0 0 0 0 138
jcnd=6/138 +33 +2 
* * 
+2 +1 132 132
+4 * 132
+8 * 132 132
+4 * 132 132
+4 * 132
+3 * 132
+3 * 132 0 132
cob=(2)
cfi=(9)
cfn=(78)
calls=132 0x3877c83840 0 
* * 14426 3308 3049 0 1 5 0 1 5 1272 77 127
* * 132 132 0 0 0 0 0 0 0 0 0 132
+5 +1 138 138
+4 * 138
+8 * 138 138
+4 * 138
+3 +1 138 138
+1 * 138 138

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 252 0 252 1 0 0 1
+1 * 252
+3 * 252 0 252
+4 +1 252 252
+4 * 252 252
+1 * 252 252

fn=(110)
0x404380 726 252 0 252 1 0 0 1
+1 * 252
+3 * 252 0 252
+4 * 252 0 252
+4 * 252 252
+4 * 252 252
+3 * 252 252
+4 * 252 0 252
+3 * 252 252
+1 * 252 252

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 252 0 252 1 0 0 1
+1 * 252
+3 * 252 0 252
+4 +1 252 252
+4 * 252 252
+1 * 252 252

fn=(44)
0x404468 726 252 0 252
+1 * 252
+3 * 252 0 252
+4 * 252 0 252
+4 * 252 252
+4 * 252 252
+3 * 252 252
+4 * 252 0 252 1 0 0 1
+3 * 252 252
+1 * 252 252

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 132 0 132 1 0 0 1
+1 * 132
+3 * 132 0 132
+4 * 132 0 132 1 0 0 1
+4 * 132 132
+1 * 132 132

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 132 0 132 1 0 0 1
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 +4 132 132
+4 * 132 132
+4 * 132
+3 * 132
+3 * 132 0 132
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=132 0x40454c -14 
* * 792 264 396 1 0 0 1
+5 +2 132 132
+1 * 132 132

fn=(150)
0x40326c 148 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +3 132 132 0 1 0 0 1
+4 * 132 132
+4 * 132
+3 * 132
+3 * 132 0 132
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=132 0x403d1a -29 
* * 2376 792 924 3 0 0 3
+5 +1 132 132
+1 * 132 132

fn=(180)
0x40334a 148 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +3 132 132
+4 * 132 132
+4 * 132
+3 * 132
+3 * 132 0 132
cfn=(182)
calls=132 0x403dcc -29 
* * 2376 792 924 2 0 0 2
+5 +1 132 132
+1 * 132 132

fn=(152)
0x403d1a 122 132 0 132 1 0 0 1
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 +4 132 132
+4 * 132 132
+4 * 132
+3 * 132
+3 * 132 0 132
cfn=(154)
calls=132 0x4044f8 -14 
* * 792 264 396 2 0 0 2
+5 +2 132 132
+1 * 132 132

fn=(184)
0x40454c 112 132 0 132 1 0 0 1
+1 * 132
+3 * 132 0 132
+4 * 132 0 132
+4 * 132 132
+1 * 132 132

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1714 321 318 0 5 6 0 5 6 236 30 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1608 307 302 3 4 4 3 4 4 220 14 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 264 0 264 1 0 0 1
+2 0 264 0 264
+2 0 264 0 264
+2 0 264
+3 0 264 0 264
+2 0 264 0 264
+1 0 264 0 264
+1 0 264
+3 0 264
+4 0 264 264
+4 0 264 0 264
+4 0 264
+3 0 264
+4 0 264
+3 0 264
+3 0 264
+3 0 264 0 0 1 0 0 1 0 0 264
+6 0 264
+4 0 264 0 0 0 0 0 0 0 0 264
+6 0 264
+4 0 264 0 0 0 0 0 0 0 0 264
+6 0 264 264
+7 0 264 0 0 0 0 0 0 0 0 264 2
jcnd=140/264 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 140
+2 0 140 0 0 0 0 0 0 0 0 140
+6 0 140 140 0 1 0 0 1
+4 0 140
+3 0 140
+2 0 140 0 0 0 0 0 0 0 0 140
jcnd=140/140 0x3877c78a40 0 
* 0 
+6 0 140 140
+4 0 140
+3 0 140 0 0 0 0 0 0 0 0 140
+6 0 140 140
+5 0 140
+4 0 140 0 0 0 0 0 0 0 0 140
jcnd=140/140 0x3877c7907c 0 
* 0 
+6 0 140 140
+5 0 140
+4 0 140 0 0 0 0 0 0 0 0 140
+6 0 140
+4 0 140 0 0 1 0 0 1 0 0 140
+6 0 140
+4 0 140 140
+7 0 140 0 0 0 0 0 0 0 0 140
+6 0 140 140
+6 0 140
+2 0 140 0 0 0 0 0 0 0 0 140
+6 0 140 140
+4 0 140 0 0 0 0 0 0 0 0 140 2
jcnd=138/140 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 140 140 0 1 0 0 1
+4 0 140 0 0 0 0 0 0 0 0 140
+6 0 140 140
+6 0 140 0 0 1 0 0 1 0 0 140 14
jcnd=12/140 0x3877c78a78 0 
* 0 
+6 0 128 128
+5 0 128 128
+5 0 128 128
+4 0 128 0 0 0 0 0 0 0 0 128
+6 0 128 128
+4 0 128 0 0 0 0 0 0 0 0 128
+6 0 128 128
+9 0 128 0 128
+4 0 128 0 128
+4 0 128 0 0 0 0 0 0 0 0 128 4
jcnd=120/128 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 128
+3 0 128
+4 0 128 128
+4 0 128 128
+4 0 128 0 0 0 0 0 0 0 0 128
-12 0 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 140
+7 0 140 0 140
+4 0 140 0 140
+4 0 140 0 0 0 0 0 0 0 0 140 60
jcnd=72/140 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 72 0 72
+4 0 72
+3 0 72 0 72
+4 0 72
+4 0 72 0 72
+4 0 72 0 72
+4 0 72
+7 0 72 0 0 0 0 0 0 0 0 72
jcnd=72/72 0x3877c78b20 0 
* 0 
0x3877c78a40 0 140 0 0 1 0 0 1
+5 0 140 140
+4 0 140 140
+7 0 140 0 0 0 0 0 0 0 0 140
jcnd=140/140 +16 0 
* 0 
+16 0 140 0 140
+5 0 140 0 0 0 0 0 0 0 0 140
+6 0 140
+3 0 140
jump=140 0x3877c7878f 0 
* 0 
+10 0 12 0 12
+6 0 12 0 0 1 0 0 1
jump=12 0x3877c78885 0 
* 0 
0x3877c78b20 0 140 140 0 1 0 0 1
+4 0 140
+2 0 140 0 0 0 0 0 0 0 0 140
+6 0 140 140
+7 0 140 0 0 0 0 0 0 0 0 140
jcnd=140/140 +15 0 
* 0 
+15 0 140 0 140 1 0 0 1
+4 0 140 0 0 0 0 0 0 0 0 140 2
+6 0 140
+4 0 140 140
+1 0 140 140
+1 0 140 140
+2 0 140 140
+2 0 140 140
+2 0 140 140
+2 0 140 140
0x3877c7907c 0 140 140 0 1 1 0 1 1
+4 0 140 0 0 1 0 0 1
+7 0 140
+4 0 140
+3 0 140
+3 0 140 0 0 0 0 0 0 0 0 140
jcnd=140/140 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 254 0 0 1 0 0 1
+7 0 254
+3 0 254
+3 0 254 254 0 0 1 0 0 1
+4 0 254
+4 0 254 0 0 0 0 0 0 0 0 0 0 254 31
jump=24 0x3877c89be8 0 
* 0 
jump=34 0x3877c89bd0 0 
* 0 
jump=32 0x3877c89bb8 0 
* 0 
jump=32 +11 0 
* 0 
jump=32 0x3877c89c48 0 
* 0 
jump=34 0x3877c89c30 0 
* 0 
jump=32 0x3877c89c18 0 
* 0 
jump=34 0x3877c89c00 0 
* 0 
+11 0 32 32
+3 0 32
+4 0 32
+4 0 32 32
+4 0 32
+4 0 32 0 32
+4 0 32
+9 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-40 0 478 478
+4 0 478 0 478
+4 0 478 478
+4 0 478 0 478
+4 0 478 478
+4 0 478 0 478 0 0 1 0 0 1
+4 0 478 478
+4 0 478 0 478
+4 0 478
+4 0 478
+4 0 478 0 0 0 0 0 0 0 0 478 17
jcnd=218/478 0x3877c89c60 0 
* 0 
-32 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
jcnd=10/34 0x3877c89c60 0 
* 0 
-24 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-16 0 34 34 0 1 0 0 1
+4 0 34 0 34
+4 0 34 0 0 1 0 0 1
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34 4
jcnd=10/34 0x3877c89c60 0 
* 0 
+6 0 356
+4 0 356 356
+3 0 356 0 356 0 0 1 0 0 1
+3 0 356 356
+4 0 356 0 356 0 0 3 0 0 3
+4 0 356 356
+4 0 356 0 356 0 0 4 0 0 4
+4 0 356 356
+4 0 356 0 356
+4 0 356
jump=356 -80 0 
* 0 
-30 0 24 24
+3 0 24 0 24
+3 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
-24 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34
jump=34 -80 0 
* 0 
-16 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
+8 0 32 32
+3 0 32
+4 0 32 0 0 1 0 0 1
+4 0 32
+4 0 32
jump=32 -39 0 
* 0 
+9 0 34
+3 0 34 0 0 0 0 0 0 0 0 34
+6 0 34 34
+3 0 34
+4 0 34
jump=34 -72 0 
* 0 
+8 0 24
+4 0 24 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24
+4 0 24
jump=24 -99 0 
* 0 
+11 0 34 34 0 1 0 0 1
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b78 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b70 0 
* 0 
+9 0 34 34
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b68 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b60 0 
* 0 
+9 0 254 0 254 1 0 0 1
+3 0 254 254

fn=(104) alloc_perturb
0x3877c77180 0 154 154 0 1 0 0 1
+6 0 154
+2 0 154 0 0 0 0 0 0 0 0 154
+2 0 154 154

fn=(38) _int_malloc
0x3877c79a00 0 264 0 264 1 0 0 1
+2 0 264
+3 0 264 0 264
+2 0 264 0 264
+2 0 264 0 264 0 0 1 0 0 1
+2 0 264
+3 0 264 0 264
+1 0 264 0 264
+1 0 264
+4 0 264
+4 0 264 0 0 0 0 0 0 0 0 264
+6 0 264
+4 0 264
+6 0 264
+3 0 264
+4 0 264
+4 0 264
+4 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
+6 0 264 264 0 1 1 0 1 1
+7 0 264 0 0 0 0 0 0 0 0 264 5
jcnd=142/264 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 110 110
+6 0 110
+4 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+3 0 110
+4 0 110 110
+1 0 110 110
+1 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
-14 0 154
+4 0 154 154
+1 0 154 154
+1 0 154 154
+2 0 154 154
+2 0 154 154
+2 0 154 154
+2 0 154 154
+7 0 159
+7 0 159 0 0 1 0 0 1 0 0 159 2
+2 0 159
+3 0 159
+5 0 159
+3 0 159
+4 0 159 0 159
+4 0 159
+2 0 159
+5 0 159 159 0 0 5 0 0 5
+4 0 159
+3 0 159 0 0 0 0 0 0 0 0 159
jcnd=159/159 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 159 0 0 1 0 0 1
+3 0 159
+3 0 159
+3 0 159
+4 0 159
+3 0 159
+4 0 159 0 159
+5 0 159
+3 0 159 0 159
+4 0 159 0 159
+4 0 159 0 159
+5 0 159
+3 0 159
+3 0 159
+3 0 159
+3 0 159
+4 0 159
+4 0 159 0 0 1 0 0 1
+4 0 159 0 159
+4 0 159
+4 0 159 0 159
+5 0 159 0 159
+5 0 159
+3 0 159
+3 0 159 0 159
+5 0 159
+5 0 159
+3 0 159 0 159
+4 0 159 0 159
+4 0 159
+6 0 159 0 159
+4 0 159 0 159
+5 0 159 0 0 1 0 0 1
+3 0 159
+3 0 159
+3 0 159
jump=159 +87 0 
* 0 
+8 0 125
+3 0 125
+4 0 125
+2 0 125
+2 0 125
+3 0 125
+3 0 125
+3 0 125
+2 0 125
+2 0 125
+5 0 125
+2 0 125 125 0 0 1 0 0 1
+4 0 125
+3 0 125
+4 0 125 0 125
+4 0 125 0 125
+8 0 125
+7 0 125 0 125
+4 0 125 0 125
+4 0 125 0 125
+4 0 125 0 0 0 0 0 0 0 0 125
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 350 350 0 1 0 0 1
+4 0 350
+3 0 350 0 0 0 0 0 0 0 0 350 11
jcnd=135/350 0x3877c79ef0 0 
* 0 
+6 0 215 215
+4 0 215 215
+4 0 215
+4 0 215 0 0 0 0 0 0 0 0 215
+6 0 215 215 0 1 0 0 1
+7 0 215 0 0 0 0 0 0 0 0 215
+6 0 215
+4 0 215
+7 0 215 0 0 0 0 0 0 0 0 215 2
+2 0 215
+3 0 215 0 0 0 0 0 0 0 0 215 60
jcnd=152/215 0x3877c79e28 0 
* 0 
+6 0 196
+3 0 196 0 196
+4 0 196 0 196
+5 0 196 0 0 0 0 0 0 0 0 196 7
jcnd=5/196 0x3877c7a090 0 
* 0 
+6 0 191
+7 0 191 0 0 0 0 0 0 0 0 191 7
jcnd=125/191 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66 0 0 2 0 0 2
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 5
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 152 152 0 1 0 0 1
+4 0 152
+3 0 152 0 0 0 0 0 0 0 0 152 9
jcnd=71/152 0x3877c79ce1 0 
* 0 
+6 0 81 81
+5 0 81 0 0 0 0 0 0 0 0 81 5
jcnd=62/81 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 135 0 0 1 0 0 1
+7 0 135
+3 0 135 0 0 0 0 0 0 0 0 135 2
+6 0 135 135 0 1 0 0 1
+4 0 135
+3 0 135
+3 0 135
+2 0 135
+4 0 135
+3 0 135
+3 0 135
+2 0 135
+2 0 135
+2 0 135
+2 0 135 135 0 0 1 0 0 1
+8 0 135
+5 0 135
+5 0 135
+2 0 135 0 0 0 0 0 0 0 0 135
-2 0 65
+2 0 65 0 0 0 0 0 0 0 0 65
+2 0 200
+2 0 200 0 0 0 0 0 0 0 0 200 9
jcnd=132/200 +64 0 
* 0 
+2 0 68
+8 0 68
+3 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
-6 0 67
+3 0 67
+3 0 67 0 0 0 0 0 0 0 0 67
+2 0 135
+2 0 135 135
+8 0 135
+2 0 135 0 0 0 0 0 0 0 0 135 6
jcnd=67/135 -20 0 
* 0 
+2 0 68
+2 0 68
+5 0 68
+3 0 68
+3 0 68
+2 0 68
+2 0 68
+5 0 68 0 0 0 0 0 0 0 0 68
+2 0 68
+2 0 68
+4 0 68
+2 0 68
+2 0 68 0 0 0 0 0 0 0 0 68 5
jcnd=7/68 -8 0 
* 0 
-8 0 538
+4 0 538
+2 0 538
+2 0 538 0 0 0 0 0 0 0 0 538 49
jcnd=411/538 -8 0 
* 0 
-2 0 132 0 0 1 0 0 1
+2 0 132 0 0 0 0 0 0 0 0 132 10
jcnd=120/132 -8 0 
* 0 
+2 0 200 200 0 0 3 0 0 3
+4 0 200 0 0 1 0 0 1
+3 0 200 0 0 0 0 0 0 0 0 200 68
jcnd=135/200 0x3877c7a1cf 0 
* 0 
+6 0 65
+2 0 65
+4 0 65
+2 0 65
+2 0 65
+2 0 65 0 65
+8 0 65
jump=65 0x3877c79f30 0 
* 0 
0x3877c7a090 0 5 0 0 1 0 0 1
+7 0 5 0 5
+6 0 5
+3 0 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 135 135 0 1 2 0 1 2
+4 0 135 135 0 0 1 0 0 1
+4 0 135
+3 0 135 135
+4 0 135
+4 0 135
+3 0 135
+3 0 135 135
+4 0 135 0 0 0 0 0 0 0 0 135
+6 0 135 135
+4 0 135 0 0 0 0 0 0 0 0 135
+6 0 135 135 0 1 0 0 1
+8 0 135 0 135
+4 0 135 0 135
+4 0 135 0 0 0 0 0 0 0 0 135 5
jcnd=67/135 +38 0 
* 0 
+2 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 67
+4 0 67 0 0 0 0 0 0 0 0 67 2
jcnd=5/67 0x3877c7a2e3 0 
* 0 
+6 0 130 130
+4 0 130 130 0 1 0 0 1
+4 0 130 0 0 0 0 0 0 0 0 130
+6 0 130
+4 0 130
+7 0 130 0 130 0 0 7 0 0 7
+4 0 130 0 130
+4 0 130 0 130
+4 0 130 0 130
+4 0 130 0 0 0 0 0 0 0 0 130 2
+2 0 130 0 130
+5 0 130
+7 0 130 0 0 0 0 0 0 0 0 130 4
jcnd=123/130 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 123 0 0 1 0 0 1
+7 0 123 0 123 0 0 1 0 0 1
+4 0 123
+3 0 123
+3 0 123
+4 0 123
+3 0 123
+4 0 123
+3 0 123
+3 0 123
+4 0 123 0 123
+4 0 123 0 123 0 0 1 0 0 1
+4 0 123
jump=123 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 5
+7 0 5 0 5
+6 0 5
+3 0 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +7 0 
* 0 
+7 0 135
+4 0 135 0 0 1 0 0 1
+3 0 135
+3 0 135 0 135
cfn=(104)
calls=135 0x3877c77180 0 
* 0 540 270 0 1 0 0 1 0 0 135
+5 0 135
+3 0 135
jump=135 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 264 0 264 1 0 0 1
+5 0 264 0 264
+5 0 264
+3 0 264 0 264
+5 0 264
+4 0 264 264 0 0 1 0 0 1
+7 0 264 264 0 0 1 0 0 1
+3 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
+6 0 264 264 0 0 1 0 0 1
+7 0 264 264 0 1 1 0 1 1
+4 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
+2 0 264 264 0 0 1 0 0 1
+3 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 +97 0 
* 0 
+18 0 264
+3 0 264
+3 0 264 0 264
cfn=(38)
calls=264 0x3877c79a00 0 
* 0 45251 6492 7094 27 21 32 27 21 32 6870 304
+5 0 264
+3 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
+2 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
+2 0 264
+3 0 264 0 0 0 0 0 0 0 0 264 3
+2 0 264 264
+7 0 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 +13 0 
* 0 
+13 0 264 0 264
+2 0 264 0 0 0 0 0 0 0 0 264 1
+6 0 264
+3 0 264 264
+4 0 264 264
+5 0 264 264
+5 0 264
+4 0 264 264
+1 0 264 0 0 1 0 0 1
+5 0 264 264 0 0 1 0 0 1
+7 0 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 +14 0 
* 0 
+14 0 264 0 264 1 0 0 1
+3 0 264 0 0 0 0 0 0 0 0 264
+6 0 264
jump=264 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 264 0 264 1 0 0 1
+2 0 264
+3 0 264
+3 0 264 0 264
+2 0 264
+3 0 264 0 264
+1 0 264
+3 0 264 0 264
+1 0 264
+3 0 264
+4 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
+6 0 264
+4 0 264
+3 0 264 0 0 0 0 0 0 0 0 264 4
jcnd=10/264 0x3877c838d1 0 
* 0 
+2 0 254
+3 0 254
+3 0 254
+3 0 254
+3 0 254
+3 0 254 0 0 0 0 0 0 0 0 254
jcnd=254/254 +41 0 
* 0 
+41 0 254 0 0 1 0 0 1
+3 0 254 0 0 0 0 0 0 0 0 254
jcnd=254/254 0x3877c839c0 0 
* 0 
+24 0 254
+3 0 254
+4 0 254
+3 0 254
+3 0 254
+3 0 254
+3 0 254
+3 0 254 0 0 0 0 0 0 0 0 254 123
jcnd=134/254 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 130
+10 0 130 130 0 0 2 0 0 2
+3 0 130
+4 0 130 0 130
+3 0 130
+4 0 130
+4 0 130 0 0 0 0 0 0 0 0 130
jcnd=130/130 -18 0 
* 0 
-18 0 446 446
+3 0 446
+4 0 446 0 446
+3 0 446
+4 0 446
+4 0 446 0 0 0 0 0 0 0 0 446 8
jcnd=316/446 -18 0 
* 0 
+2 0 264
+4 0 264
+3 0 264 264
+1 0 264 264
+1 0 264 264
+2 0 264 264 0 1 0 0 1
+2 0 264 264
0x3877c839c0 0 254 0 0 1 0 0 1
+3 0 254
+3 0 254
+3 0 254
+4 0 254 0 254 0 0 1 0 0 1
cfn=(284)
calls=254 0x3877c89b20 0 
* 0 13850 4720 4212 6 1 9 6 1 9 668 21 254 31
+5 0 254
jump=254 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 264 264 0 1 1 0 1 1
+7 0 264 264 0 0 1 0 0 1
+3 0 264
+3 0 264 0 0 1 0 0 1 0 0 264
+6 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
+6 0 264 264
+4 0 264
+4 0 264
+2 0 264 0 0 0 0 0 0 0 0 264
+2 0 264
+2 0 264
+7 0 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 +14 0 
* 0 
+14 0 264
+2 0 264
cfn=(170)
calls=264 0x3877c78650 0 
* 0 23754 6144 3748 17 2 0 17 2 0 5370 86

totals: 635608 233653 153642 221 53 59 221 53 59 27005 757 1574 31
