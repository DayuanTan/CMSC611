version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2323


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2768830828 - 2772399503
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2498 0 0 1 0 0 1
+3 0 2498 0 0 0 0 0 0 0 0 2498
+2 0 2498
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2498 0x3877c7b8b0 0 
* 0 283858 72857 37501 23 4 0 23 4 0 69674 1124
* 0 2498 2498 0 1 1 0 1 1 0 0 0 2498

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2498 0 2498 1 0 0 1
+1 0 2498
+5 0 2498
+3 0 2498 0 2498
+1 0 2498
+4 0 2498 0 0 1 0 0 1
+3 0 2498
+4 0 2498
+3 0 2498 0 2498 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2498 0x3877c7aa50 0 
* 0 679451 99961 100999 51 41 73 51 41 73 111048 3600
* 0 2498 2498 0 1 1 0 1 1 0 0 0 2498
+5 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498
jcnd=2498/2498 +96 0 
* 0 
+96 0 2498 0 0 1 0 0 1
+4 0 2498 2498
+1 0 2498 2498
+1 0 2498 2498

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2480 0 2480 1 0 0 1
+1 * 2480
+3 * 2480 0 2480
+4 +1 2480 2480
+4 * 2480 2480
+1 * 2480 2480

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2480 0 2480 1 0 0 1
+1 * 2480
+3 * 2480
+4 * 2480 0 2480
+4 +1 2480
+4 * 2480
+3 * 2480 0 2480 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2480 0x40500c 790 
* * 14880 7440 4960 1 0 0 1
+5 * 2480 2480
+3 * 2480 2480
+1 * 2480 2480

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1330 0 1330
+1 * 1330
+3 * 1330 0 1330
+4 +1 1330 1330
+4 * 1330 1330
+1 * 1330 1330

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2480 0 2480 1 0 0 1
+1 * 2480
+3 * 2480 0 2480
+4 +1 2480 2480 0 1 0 0 1
+4 * 2480 2480
+1 * 2480 2480

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1330 0 1330
+1 * 1330
+3 * 1330 0 1330 0 0 1 0 0 1
+4 +1 1330 1330
+4 * 1330 1330
+1 * 1330 1330

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2480 0 2480 1 0 0 1
+1 * 2480
+3 * 2480
+4 * 2480 0 2480
+4 +1 2480
+4 * 2480
+3 * 2480 0 2480
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2480 0x404ffe 790 
* * 14880 7440 4960 1 0 0 1
+5 * 2480 2480
+3 * 2480 2480
+1 * 2480 2480

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1249 0 1249
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 +1 1249 1249
+4 * 1249
+3 * 1249 0 1249
cob=(5)
cfi=(8)
cfn=(164)
calls=1249 0x387e4bb2f0 0 
* * 135690 33628 15207 23 4 0 23 4 0 33131 1034 1249
* * 1249 1249 0 1 1 0 1 1 0 0 0 1249
+5 * 1249 1249
+1 * 1249 1249

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1249 0 1249
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 +1 1249 1249
+4 * 1249
+3 * 1249 0 1249
cob=(5)
cfi=(8)
cfn=(164)
calls=1249 0x387e4bb2f0 0 
* * 158160 41727 22294 2 1 0 2 1 0 39041 90 1249
* * 1249 1249 0 0 0 0 0 0 0 0 0 1249
+5 * 1249 1249
+1 * 1249 1249

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1249 0 1249 1 0 0 1
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 +2 1249 1249
+4 * 1249
+3 * 1249 0 1249
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=1249 0x4048de +12 
* * 7494 2498 2498 1 0 0 1
+5 * 1249 1249
+4 * 1249 0 0 1 0 0 1
+3 * 1249
+2 * 1249 0 0 0 0 0 0 0 0 1249
jcnd=1249/1249 +7 +3 
* * 
+7 +3 1249 1249
+4 * 1249
+4 * 1249
+3 * 1249 0 1249
cob=(5)
cfi=(8)
cfn=(32)
calls=1249 0x387e4bd0b0 0 
* * 355320 52190 49943 33 26 58 33 26 58 55802 2383 1249
* * 1249 1249 0 0 0 0 0 0 0 0 0 1249
+5 +1 1249 1249
+1 * 1249 1249

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240 0 0 1 0 0 1
+4 * 1240 0 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1249 0 1249 1 0 0 1
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 * 1249 0 1249 1 0 0 1
+4 +2 1249 1249
+4 * 1249
+3 * 1249 0 1249
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=1249 0x404992 +12 
* * 7494 2498 2498 1 0 0 1
+5 * 1249 1249
+4 * 1249
+3 * 1249
+2 * 1249 0 0 0 0 0 0 0 0 1249
jcnd=1249/1249 +7 +3 
* * 
+7 +3 1249 1249
+4 * 1249
+4 * 1249
+3 * 1249 0 1249
cob=(5)
cfi=(8)
cfn=(32)
calls=1249 0x387e4bd0b0 0 
* * 364099 57763 58550 22 16 16 22 16 16 57744 1217 1249
* * 1249 1249 0 1 1 0 1 1 0 0 0 1249
+5 +1 1249 1249
+1 * 1249 1249

fn=(102)
0x4048de 113 1267 0 1267 1 0 0 1
+1 * 1267
+3 * 1267 0 1267
+4 +1 1267
+10 * 1267 1267
+1 * 1267 1267

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620
+3 * 620
+5 * 620 0 620
cfi=(16)
cfn=(226)
calls=620 0x402d61 -20 
* * 4340 1860 1860
+5 * 620
+3 * 620 0 0 0 0 0 0 0 0 620
+2 * 620 620
+4 * 620 620 0 0 39 0 0 39
+2 * 620 0 620 0 0 30 0 0 30
+2 * 620 620
+1 * 620 620

fn=(28)
0x404992 113 1267 0 1267 1 0 0 1
+1 * 1267
+3 * 1267 0 1267
+4 +1 1267
+10 * 1267 1267
+1 * 1267 1267

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620
+3 * 620
+5 * 620 0 620
cfi=(16)
cfn=(226)
calls=620 0x402d61 -20 
* * 4340 1860 1860
+5 * 620
+3 * 620 0 0 0 0 0 0 0 0 620 2
+2 * 620 620
+4 * 620 620 0 0 40 0 0 40
+2 * 620 0 620 0 0 3 0 0 3
+2 * 620 620
+1 * 620 620

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +10 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1240 0x404829 -26 
* * 840326 290800 283364 25 3 4 25 3 4 34740 1640 2476 309
+5 +1 1240 1240
+1 * 1240 1240

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 49 2 0 49 140 5 17
+5 * 18 18
+1 * 18 18

fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 7 17
+5 * 18 18
+1 * 18 18

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +2 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240 1 0 0 1
cfn=(50)
calls=1240 0x404484 107 
* * 857686 297000 289564 25 3 4 25 3 4 34740 1640 2476 309
+5 * 1240 1240
+1 * 1240 1240

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 7 17
+5 * 18 18
+1 * 18 18

fn=(52)
0x404829 91 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +2 1240 1240 0 1 0 0 1
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1240 0x404a36 450 
* * 822966 284600 277164 24 3 4 24 3 4 34740 1640 2476 309
+5 * 1240 1240
+1 * 1240 1240

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +2 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1240 0x40439c 107 
* * 857686 297000 289564 7 1 103 7 1 103 34740 1624 2476
+5 * 1240 1240
+1 * 1240 1240

fn=(116)
0x40439c 107 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +10 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1240 0x4047d7 -26 
* * 840326 290800 283364 7 1 103 7 1 103 34740 1624 2476
+5 +1 1240 1240
+1 * 1240 1240

fn=(118)
0x4047d7 91 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +2 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1240 0x4049e2 450 
* * 822966 284600 277164 7 1 103 7 1 103 34740 1624 2476
+5 * 1240 1240
+1 * 1240 1240

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 49 2 0 49 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 7 17
+5 +1 18 18
+1 * 18 18

fn=(232)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 7 17
+5 +1 18 18
+1 * 18 18

fn=(272)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 49 2 0 49 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 49 1 0 49 140 5 17
+5 * 18 18
+1 * 18 18

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240
+4 +2 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240 1240
+4 * 1240 1240
+3 * 1240
+3 * 1240
+3 * 1240
+4 * 1240
+3 * 1240 1240
+4 * 1240 1240
+3 -1 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1240 0x403d98 +11 
* * 191854 53864 34558 2 1 0 2 1 0 40044 78 2480
+5 +1 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=1240 0x403296 -82 
* * 28520 9920 9920 1 0 0 1
+5 * 1240
jump=1240 +28 * 
* * 
+28 * 1240
+4 * 1240 1240
+1 * 1240 1240
+1 * 1240 1240

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 4996 0 4996 1 0 0 1
+1 * 4996
+3 * 4996 0 4996 0 0 1 0 0 1
+4 +1 4996 4996
+4 * 4996 4996 0 1 1 0 1 1
+4 * 4996
+3 * 4996 4996
+4 * 4996 4996
+3 * 4996
+3 * 4996
+3 * 4996
+4 * 4996 4996
+1 * 4996 4996

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +2 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1240 0x404236 -14 
* * 413948 73519 73050 26 15 8 26 15 8 59889 1173 2480
+5 * 1240 1240
+4 * 1240 0 1240
+3 +1 1240 1240
+4 * 1240 1240 0 1 0 0 1
+3 * 1240 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+3 * 1240 1240
+4 * 1240
+4 * 1240
+3 * 1240 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+1 * 1240 1240

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +2 1240 1240
+4 * 1240 1240 0 1 0 0 1
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=1240 0x403fbe -14 
* * 403629 67659 64220 16 6 51 16 6 51 57609 2300 2480
+5 * 1240 1240
+4 * 1240 0 1240
+3 +1 1240 1240
+4 * 1240 1240
+3 * 1240 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+3 * 1240 1240
+4 * 1240
+4 * 1240
+3 * 1240 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+1 * 1240 1240

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 620 0 620
+1 * 620
+3 * 620 0 0 1 0 0 1
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620 0 0 0 0 0 0 0 0 620
jcnd=9/620 +51 +10 
* * 
+2 +3 611 611
+4 * 611 611
+4 * 611 611
+4 -1 611 611
+4 * 611
+3 * 611
+3 * 611 0 611
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=611 0x4036b1 215 
* * 23218 7943 8554 0 39 25 0 39 25 611
+5 +2 611 611
+4 * 611 611
+4 * 611
+4 * 611 611
+4 * 611 0 611
+4 * 611
jump=611 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 13871 4374 3841 21 2 62 21 2 62 793 70 53
+5 +2 620 620
+1 * 620 620

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 2507 0 2507 1 0 0 1
+1 * 2507
+3 * 2507 0 2507 1 0 0 1
+4 +1 2507 2507
+4 * 2507 2507
+1 * 2507 2507

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+3 * 1240 0 1240
+4 * 1240
+4 * 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1240 0x404380 726 
* * 12400 6200 4960
+5 * 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240 1 0 0 1
+4 +2 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1240 0x40325e 113 
* * 7440 3720 2480
+5 * 1240
+3 * 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+3 -1 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1240 0x40326c 148 
* * 38440 12400 14880 4 0 0 4
+5 +1 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1240 0x4031ec 159 
* * 232680 69352 43598 27 5 0 27 5 0 34148 1026 2480
+5 * 1240
jump=1240 +28 * 
* * 
+28 * 1240 0 0 1 0 0 1
+4 * 1240 1240
+1 * 1240 1240
+1 * 1240 1240

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1249 0 1249 1 0 0 1
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 +2 1249 1249
+5 * 1249 0 0 0 0 0 0 0 0 1249
+2 +1 1249 1249
+4 * 1249 1249
+4 * 1249 1249
+4 * 1249
+3 * 1249
+3 * 1249 0 1249
cfi=(5)
cfn=(160)
calls=1249 0x4044d6 -65 
* * 150678 38624 21452 24 5 0 24 5 0 33131 1034 2498
+5 +1 1249 1249
+1 * 1249 1249

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1240 0x4043ca -45 
* * 44640 16120 17360 4 0 4 4 0 4
+5 +1 1240 1240 0 1 0 0 1
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(20)
calls=1240 0x404412 +43 
* * 444948 88399 81730 27 15 8 27 15 8 59889 1173 2480
+5 * 1240
jump=1240 +28 * 
* * 
+28 * 1240
+4 * 1240 1240
+1 * 1240 1240
+1 * 1240 1240

fn=(14)
0x4043ca 90 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240 0 0 1 0 0 1
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=1240 0x404804 +24 
* * 22320 7440 8680 2 0 1 2 0 1
+5 * 1240 1240
+4 * 1240 0 1240 0 0 2 0 0 2
+7 * 1240 1240
+4 * 1240 0 1240 1 0 0 1
+8 * 1240 1240
+4 * 1240 0 1240
+8 +1 1240 1240
+1 * 1240 1240

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+2 * 1240 0 1240
+2 * 1240 0 1240
+1 * 1240 0 0 1 0 0 1
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +2 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=1240 0x4039fc 117 
* * 7440 3720 2480 2 0 0 2
+5 * 1240
+3 * 1240 0 1240
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=1240 0x4039ed -88 
* * 7440 3720 2480
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(2)
calls=1240 0x402d74 645 
* * 16120 7440 2480
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240
+3 * 1240 0 1240 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1240 0x403a0a 134 
* * 506549 107339 98940 23 6 51 23 6 51 57609 2300 2480
+5 +4 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(106)
calls=1240 0x40325e 113 
* * 7440 3720 2480 1 0 0 1
+5 * 1240
+3 * 1240 1240
+4 * 1240 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=1240 0x403a98 565 
* * 31000 12400 9920 2 0 0 2
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(112)
calls=1240 0x403a68 547 
* * 31000 12400 9920
+5 * 1240
+3 * 1240
+3 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(11)
cfn=(114)
calls=1240 0x403ac9 -60 
* * 876286 303200 297004 7 1 103 7 1 103 34740 1624 2476
+5 -3 1240 1240
+4 * 1240 0 1240
+4 * 1240
jump=1240 +28 +4 
* * 
+28 +4 1240
+4 * 1240 1240
+1 * 1240 1240
+2 * 1240 1240
+2 * 1240 1240
+1 * 1240 1240

fn=(188)
0x403d98 171 1249 0 1249 1 0 0 1
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 +2 1249 1249
+5 * 1249 0 0 0 0 0 0 0 0 1249 9
+2 +1 1249 1249
+4 * 1249 1249
+4 * 1249 1249
+4 * 1249
+3 * 1249
+3 * 1249 0 1249
cfi=(5)
cfn=(190)
calls=1249 0x40452a -65 
* * 173148 46723 28539 2 1 0 2 1 0 39041 90 2498
+5 +1 1249 1249
+1 * 1249 1249

fn=(22)
0x404236 167 1249 0 1249 1 0 0 1
+1 * 1249
+3 * 1249
+4 * 1249 0 1249 1 0 0 1
+4 * 1249 0 1249
+4 0 1249 1249
+5 0 1249 0 0 0 0 0 0 0 0 1249
+2 0 1249 1249
+4 0 1249 1249
+4 0 1249
+5 0 1249
+3 0 1249
+3 0 1249 0 1249
fi=(6) ???
cfi=(5)
cfn=(26)
calls=1249 0x404730 99 
* 0 396573 67755 68542 26 17 16 26 17 16 58993 1217 2498
+5 0 1249
fi=(6)
jump=1249 +7 0 
* 0 
+7 0 1249 1249
+1 0 1249 1249

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+4 * 1240 0 1240
+4 * 1240
+4 * 1240 0 0 1 0 0 1
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1240 0x404468 726 
* * 12400 6200 4960 1 0 0 1
+5 * 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+3 * 1240 0 1240
+4 * 1240
+4 * 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(10)
cfn=(44)
calls=1240 0x404468 726 
* * 12400 6200 4960
+5 * 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(86)
0x403a0a 134 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1240 0x4042e2 -45 
* * 44640 16120 17360 5 0 0 5
+5 +1 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240 1 0 0 1
cfn=(94)
calls=1240 0x40432a +43 
* * 434629 82539 72900 17 6 51 17 6 51 57609 2300 2480
+5 * 1240
jump=1240 +28 * 
* * 
+28 * 1240
+4 * 1240 1240
+1 * 1240 1240
+1 * 1240 1240

fn=(88)
0x4042e2 90 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=1240 0x4047b2 +24 
* * 22320 7440 8680 3 0 0 3
+5 * 1240 1240
+4 * 1240 0 1240
+7 * 1240 1240
+4 * 1240 0 1240
+8 * 1240 1240
+4 * 1240 0 1240
+8 +1 1240 1240
+1 * 1240 1240

fn=(156)
0x4031ec 159 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240
+4 +2 1240 1240
+4 * 1240 1240 0 1 0 0 1
+4 * 1240
+3 * 1240 1240
+4 * 1240 1240
+3 * 1240
+3 * 1240
+3 * 1240
+4 * 1240
+3 * 1240 1240
+4 * 1240 1240
+3 -1 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(158)
calls=1240 0x403ce6 +11 
* * 169440 45792 27478 24 5 0 24 5 0 34148 1026 2480
+5 +1 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1240 0x4031b8 -82 
* * 28520 9920 9920 1 0 0 1
+5 * 1240
jump=1240 +28 * 
* * 
+28 * 1240
+4 * 1240 1240
+1 * 1240 1240
+1 * 1240 1240

fn=(172)
0x4031b8 79 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=1240 0x403ccc +42 
* * 17360 6200 6200
+5 * 1240 1240
+1 * 1240 1240

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246)
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 2516 0 2516 1 0 0 1
+1 * 2516
+3 * 2516 0 2516
+4 +1 2516 2516
+4 * 2516 2516 0 0 2 0 0 2
+4 * 2516
+3 * 2516 2516
+4 * 2516 2516
+3 * 2516
+3 * 2516
+3 * 2516
+4 * 2516 2516
+1 * 2516 2516

fn=(106)
0x40325e 113 2507 0 2507 1 0 0 1
+1 * 2507
+3 * 2507 0 2507
+4 +1 2507 2507
+4 * 2507 2507
+1 * 2507 2507

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 1258 0 1258 1 0 0 1
+1 * 1258
+3 * 1258 0 1258 0 0 1 0 0 1
+4 +1 1258 1258
+4 * 1258 1258
+1 * 1258 1258

fn=(82)
0x4039fc 117 1258 0 1258 1 0 0 1
+1 * 1258
+3 * 1258 0 1258 1 0 0 1
+4 +1 1258 1258
+4 * 1258 1258
+1 * 1258 1258

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620 0 0 0 0 0 0 0 0 620 9
jcnd=9/620 +51 +10 
* * 
+2 +3 611 611
+4 * 611 611
+4 * 611 611
+4 -1 611 611
+4 * 611
+3 * 611
+3 * 611 0 611
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=611 0x403373 215 
* * 23218 7943 8554 0 39 2 0 39 2 611 2
+5 +2 611 611
+4 * 611 611
+4 * 611
+4 * 611 611
+4 * 611 0 611
+4 * 611
jump=611 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202)
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 15355 4634 4057 45 21 11 45 21 11 1117 98 53
+5 +2 620 620
+1 * 620 620

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+2 * 1240 0 1240
+2 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240 1 0 0 1
+4 * 1240 0 1240
+4 +2 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(6)
calls=1240 0x403b08 117 
* * 7440 3720 2480 1 0 1 1 0 1
+5 * 1240
+3 * 1240 0 1240
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=1240 0x403afa -88 
* * 7440 3720 2480 1 0 0 1
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(10)
calls=1240 0x402f54 645 
* * 16120 7440 2480 1 1 0 1 1
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(12)
calls=1240 0x403b16 134 
* * 516868 113199 107770 32 15 12 32 15 12 59889 1173 2480
+5 +4 1240 1240 0 1 0 0 1
+4 * 1240
+3 * 1240 0 1240
cfn=(40)
calls=1240 0x40333c 113 
* * 7440 3720 2480 2 0 0 2
+5 * 1240
+3 * 1240 1240
+4 * 1240 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(42)
calls=1240 0x403ba4 565 
* * 31000 12400 9920 3 0 0 3
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(46)
calls=1240 0x403b74 547 
* * 31000 12400 9920
+5 * 1240
+3 * 1240
+3 * 1240
+3 * 1240
+3 * 1240 0 1240 1 0 0 1
cfi=(11)
cfn=(48)
calls=1240 0x403bd5 -60 
* * 876286 303200 297004 26 3 4 26 3 4 34740 1640 2476 309
+5 -3 1240 1240
+4 * 1240 0 1240
+4 * 1240
jump=1240 +28 +4 
* * 
+28 +4 1240
+4 * 1240 1240
+1 * 1240 1240
+2 * 1240 1240
+2 * 1240 1240
+1 * 1240 1240

fn=(108)
0x403a98 565 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+4 * 1240 0 1240
+4 * 1240
+4 * 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(10)
cfn=(110)
calls=1240 0x404380 726 
* * 12400 6200 4960 1 0 0 1
+5 * 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240 1 0 0 1
+4 +2 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(40)
calls=1240 0x40333c 113 
* * 7440 3720 2480
+5 * 1240
+3 * 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+3 -1 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1240 0x40334a 148 
* * 38440 12400 14880 2 0 0 2
+5 +1 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(186)
calls=1240 0x4032ca 159 
* * 255094 77424 50678 4 1 0 4 1 0 40044 78 2480
+5 * 1240
jump=1240 +28 * 
* * 
+28 * 1240 0 0 1 0 0 1
+4 * 1240 1240
+1 * 1240 1240
+1 * 1240 1240

fn=(210)
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82)
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96)
0x403fbe 167 1249 0 1249 1 0 0 1
+1 * 1249 0 0 1 0 0 1
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 0 1249 1249
+5 0 1249 0 0 0 0 0 0 0 0 1249
+2 0 1249 1249
+4 0 1249 1249
+4 0 1249
+5 0 1249
+3 0 1249
+3 0 1249 0 1249
fi=(6)
cfi=(5)
cfn=(100)
calls=1249 0x40461a 99 
* 0 387794 62182 59935 36 26 58 36 26 58 57051 2383 2498
+5 0 1249
fi=(6)
jump=1249 +7 0 
* 0 
+7 0 1249 1249
+1 0 1249 1249

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 580630 0 580630
+1 * 580630
+3 * 580630 0 580630
+4 * 580630 0 580630
+4 +1 580630 580630
+4 * 580630 580630
+3 * 580630 580630
+4 * 580630
+4 * 580630
+3 * 580630 580630
+1 * 580630 580630

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 580630 0 580630
+1 * 580630
+3 * 580630 0 580630 1 0 0 1
+4 * 580630 0 580630
+4 +1 580630 580630
+4 * 580630 580630
+3 * 580630 580630
+4 * 580630
+4 * 580630
+3 * 580630 580630
+1 * 580630 580630

fn=(192)
0x403296 79 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=1240 0x403d7e +42 
* * 17360 6200 6200 1 0 0 1
+5 * 1240 1240
+1 * 1240 1240

fn=(254)
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240 1 0 0 1
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +8 1240 0 1240
+4 +3 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=1240 0x404f37 -22 
* * 624566 217640 208964 14 3 3 14 3 3 34740 1640 2476 309
+5 +1 1240 1240
+1 * 1240 1240

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+2 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +4 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=1240 0x404878 277 
* * 18600 7440 6200 1 0 0 1
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1240 0x404d44 277 
* * 31000 11160 9920 2 0 0 2
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(132)
calls=1240 0x404d44 277 
* * 31000 11160 9920
+5 * 1240
+3 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=1240 0x404d5e -49 
* * 643166 223840 216404 1 1 103 1 1 103 34740 1624 2476
+5 +1 1240
+4 * 1240 1240
+1 * 1240 1240
+2 * 1240 1240
+1 * 1240 1240

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 7 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(54)
0x404a36 450 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240 1 0 0 1
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +10 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1240 0x404c38 288 
* * 18600 7440 6200 3 0 0 3
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(56)
calls=1240 0x404c38 288 
* * 18600 7440 6200
+5 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1240 0x404c52 -36 
* * 758486 262280 254844 20 3 4 20 3 4 34740 1640 2476 309
+5 +1 1240
+4 * 1240 1240
+1 * 1240 1240
+1 * 1240 1240

fn=(60)
0x404c52 424 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+2 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +4 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1240 0x40492d 277 
* * 18600 7440 6200 2 0 0 2
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1240 0x404d9d 277 
* * 31000 11160 9920 2 0 1 2 0 1
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(66)
calls=1240 0x404d9d 277 
* * 31000 11160 9920
+5 * 1240
+3 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(72)
calls=1240 0x404db7 -49 
* * 643166 223840 216404 15 3 3 15 3 3 34740 1640 2476 309
+5 +1 1240
+4 * 1240 1240
+1 * 1240 1240
+2 * 1240 1240
+1 * 1240 1240

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 49 0 0 49 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(62)
0x40492d 277 1294 0 1294 1 0 0 1
+1 * 1294
+3 * 1294
+4 * 1294 0 1294
+4 +1 1294 1294
+4 * 1294
+3 * 1294 0 1294 1 0 0 1
cfi=(13)
cfn=(64)
calls=1294 -33 -66 
* * 7764 3882 2588
+5 * 1294 1294
+1 * 1294 1294

fn=(66)
0x404d9d 277 2480 0 2480
+1 * 2480
+3 * 2480
+4 * 2480 0 2480
+4 +1 2480 2480
+4 * 2480
+3 * 2480 0 2480
cfi=(13)
cfn=(68)
calls=2480 0x404f1a -58 
* * 39680 14880 12400 2 0 1 2 0 1
+5 * 2480 2480
+1 * 2480 2480

fn=(240)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 7 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 49 0 0 49 140 5 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+1 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +10 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1240 0x404bc6 288 
* * 18600 7440 6200 3 0 0 3
+5 * 1240
+3 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfn=(122)
calls=1240 0x404bc6 288 
* * 18600 7440 6200
+5 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(126)
calls=1240 0x404be0 -36 
* * 758486 262280 254844 4 1 103 4 1 103 34740 1624 2476
+5 +1 1240
+4 * 1240 1240
+1 * 1240 1240
+1 * 1240 1240

fn=(128)
0x404878 277 1294 0 1294
+1 * 1294
+3 * 1294
+4 * 1294 0 1294 1 0 0 1
+4 +1 1294 1294
+4 * 1294
+3 * 1294 0 1294
cfi=(13)
cfn=(130)
calls=1294 -33 -66 
* * 7764 3882 2588 0 0 1 0 0 1
+5 * 1294 1294
+1 * 1294 1294

fn=(132)
0x404d44 277 2480 0 2480
+1 * 2480
+3 * 2480
+4 * 2480 0 2480
+4 +1 2480 2480
+4 * 2480
+3 * 2480 0 2480
cfi=(13)
cfn=(134)
calls=2480 0x404e98 -58 
* * 39680 14880 12400 2 0 0 2
+5 * 2480 2480
+1 * 2480 2480

fn=(138)
0x404d5e 379 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +8 1240 0 1240
+4 +3 1240 1240
+4 * 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1240 0x404eb5 -22 
* * 624566 217640 208964 1 1 103 1 1 103 34740 1624 2476
+5 +1 1240 1240
+1 * 1240 1240

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 7 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 49 1 0 49 140 5 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 2480 0 2480 1 0 0 1
+1 * 2480
+3 * 2480
+4 * 2480 0 2480
+4 +1 2480 2480
+4 * 2480
+3 * 2480 0 2480
cfi=(13)
cfn=(124)
calls=2480 0x404d36 -77 
* * 14880 7440 4960 2 0 0 2
+5 * 2480 2480
+1 * 2480 2480

fn=(56)
0x404c38 288 2480 0 2480 1 0 0 1
+1 * 2480
+3 * 2480
+4 * 2480 0 2480 1 0 0 1
+4 +1 2480 2480
+4 * 2480
+3 * 2480 0 2480
cfi=(13)
cfn=(58)
calls=2480 0x404d8f -77 
* * 14880 7440 4960 1 0 0 1
+5 * 2480 2480
+1 * 2480 2480

fn=(74)
0x404f37 368 1258 0 1258
+1 * 1258
+3 * 1258
+4 * 1258 0 1258 1 0 0 1
+4 * 1258 0 1258
+4 * 1258 0 1258
+4 +2 1258 1258
+4 * 1258 1258
+4 * 1258
+3 * 1258
+3 * 1258
+4 * 1258 0 1258
+4 +1 1258 1258
+5 * 1258 0 0 0 0 0 0 0 0 1258
jcnd=9/1258 +33 +2 
* * 
+2 +1 1249 1249
+4 * 1249
+8 * 1249 1249
+4 * 1249 1249
+4 * 1249
+3 * 1249 0 0 1 0 0 1
+3 * 1249 0 1249 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1249 0x3877c83840 0 
* * 591694 204579 202086 11 2 51 11 2 51 33622 1645 1244 309
* * 1249 1249 0 1 1 0 1 1 0 0 0 1249
+5 +1 1258 1258
+4 * 1258
+8 * 1258 1258
+4 * 1258
+3 +1 1258 1258
+1 * 1258 1258

fn=(140)
0x404eb5 368 1258 0 1258
+1 * 1258
+3 * 1258
+4 * 1258 0 1258 1 0 0 1
+4 * 1258 0 1258
+4 * 1258 0 1258 0 0 1 0 0 1
+4 +2 1258 1258
+4 * 1258 1258
+4 * 1258
+3 * 1258
+3 * 1258
+4 * 1258 0 1258
+4 +1 1258 1258
+5 * 1258 0 0 0 0 0 0 0 0 1258
jcnd=9/1258 +33 +2 
* * 
+2 +1 1249 1249
+4 * 1249
+8 * 1249 1249
+4 * 1249 1249
+4 * 1249
+3 * 1249
+3 * 1249 0 1249
cob=(2)
cfi=(9)
cfn=(78)
calls=1249 0x3877c83840 0 
* * 591694 204579 202086 0 1 104 0 1 104 33622 1631 1244
* * 1249 1249 0 0 0 0 0 0 0 0 0 1249
+5 +1 1258 1258
+4 * 1258
+8 * 1258 1258
+4 * 1258
+3 +1 1258 1258
+1 * 1258 1258

fl=(10)
fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 2480 0 2480 1 0 0 1
+1 * 2480
+3 * 2480 0 2480
+4 +1 2480 2480
+4 * 2480 2480
+1 * 2480 2480

fn=(110)
0x404380 726 2480 0 2480 1 0 0 1
+1 * 2480
+3 * 2480 0 2480
+4 * 2480 0 2480
+4 * 2480 2480
+4 * 2480 2480
+3 * 2480 2480
+4 * 2480 0 2480
+3 * 2480 2480
+1 * 2480 2480

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 2480 0 2480 1 0 0 1
+1 * 2480
+3 * 2480 0 2480
+4 +1 2480 2480
+4 * 2480 2480
+1 * 2480 2480

fn=(44)
0x404468 726 2480 0 2480
+1 * 2480
+3 * 2480 0 2480
+4 * 2480 0 2480
+4 * 2480 2480
+4 * 2480 2480
+3 * 2480 2480
+4 * 2480 0 2480 1 0 0 1
+3 * 2480 2480
+1 * 2480 2480

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(262)
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1249 0 1249 1 0 0 1
+1 * 1249
+3 * 1249 0 1249
+4 * 1249 0 1249 1 0 0 1
+4 * 1249 1249
+1 * 1249 1249

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1249 0 1249 1 0 0 1
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 +4 1249 1249
+4 * 1249 1249
+4 * 1249
+3 * 1249
+3 * 1249 0 1249
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1249 0x40454c -14 
* * 7494 2498 3747 1 0 0 1
+5 +2 1249 1249
+1 * 1249 1249

fn=(150)
0x40326c 148 1249 0 1249
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 +3 1249 1249 0 1 0 0 1
+4 * 1249 1249
+4 * 1249
+3 * 1249
+3 * 1249 0 1249
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1249 0x403d1a -29 
* * 22482 7494 8743 3 0 0 3
+5 +1 1249 1249
+1 * 1249 1249

fn=(180)
0x40334a 148 1249 0 1249
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 +3 1249 1249
+4 * 1249 1249
+4 * 1249
+3 * 1249
+3 * 1249 0 1249
cfn=(182)
calls=1249 0x403dcc -29 
* * 22482 7494 8743 2 0 0 2
+5 +1 1249 1249
+1 * 1249 1249

fn=(152)
0x403d1a 122 1249 0 1249 1 0 0 1
+1 * 1249
+3 * 1249
+4 * 1249 0 1249
+4 * 1249 0 1249
+4 +4 1249 1249
+4 * 1249 1249
+4 * 1249
+3 * 1249
+3 * 1249 0 1249
cfn=(154)
calls=1249 0x4044f8 -14 
* * 7494 2498 3747 2 0 0 2
+5 +2 1249 1249
+1 * 1249 1249

fn=(184)
0x40454c 112 1249 0 1249 1 0 0 1
+1 * 1249
+3 * 1249 0 1249
+4 * 1249 0 1249
+4 * 1249 1249
+1 * 1249 1249

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 2609 481 488 2 2 8 2 2 8 353 44 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 0 5 0 0 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 49 3 0 49 131 5 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1278 353 226 1 0 0 1 0 0 246 21 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 4149 768 711 22 20 7 22 20 7 691 83 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 7 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1222 326 219 1 0 0 1 0 0 232 8 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 620 0 620 1 0 0 1
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620
+3 * 620 0 620
cfi=(2)
cfn=(2)
calls=620 0x402d74 645 
* * 8060 3720 1240
+5 * 620
+3 * 620 0 620
+3 +1 620 620
+6 * 620 0 620
+3 * 620 620
+6 * 620 0 620
+3 +1 620 620
+6 * 620 0 620 1 0 0 1
+3 * 620 620
+6 * 620 0 620
+3 +2 620 0 620
+7 * 620
jump=620 +86 * 
* * 
+2 +1 193130 193130
+3 * 193130
+3 * 193130 193130
+4 * 193130
+3 * 193130
+3 * 193130 0 193130
cfi=(2)
cfn=(144)
calls=193130 0x402d9a 770 
* * 2124430 965650 579390
+5 * 193130 193130
+4 * 193130 193130
+5 * 193130
+4 * 193130 0 193130
+5 +1 193130 193130
+3 * 193130
+3 * 193130 193130
+4 * 193130
+3 * 193130
+3 * 193130 0 193130
cfi=(2)
cfn=(146)
calls=193130 0x402dba 770 
* * 2124430 965650 579390 1 0 0 1
+5 * 193130 193130
+2 * 193130
+4 * 193130 193130
+5 * 193130
+4 * 193130 0 193130
+5 -2 193130 0 193130
+4 * 193130 193130
+3 * 193130
+3 * 193130 193130
+3 * 193130 0 0 0 0 0 0 0 0 193130 621
jcnd=192510/193130 -93 +1 
* * 
-9 * 620 620 0 1 0 0 1
+3 * 620
+3 * 620 620
+3 * 620 0 0 0 0 0 0 0 0 620
jcnd=620/620 -93 +1 
* * 
+2 +4 620 620
+3 * 620
+3 * 620
+4 * 620 620 0 1 0 0 1
+5 * 620
+4 * 620
+3 * 620 0 620
+5 +1 620 620
+3 * 620
+3 * 620
+4 * 620 620
+5 * 620
+4 * 620
+3 * 620 0 620
+5 +1 620 0 620
+7 * 620
jump=620 0x4016ee * 
* * 
+2 +1 193130 193130
+3 * 193130
+3 * 193130 193130
+4 * 193130
+3 * 193130 0 0 1 0 0 1
+3 * 193130 0 193130
cfi=(2)
cfn=(146)
calls=193130 0x402dba 770 
* * 2124430 965650 579390
+5 * 193130 193130
+2 * 193130
+4 * 193130 193130
+5 * 193130 0 193130
+5 +1 193130 193130
+3 * 193130
+3 * 193130 193130
+4 * 193130
+3 * 193130
+3 * 193130 0 193130
cfi=(2)
cfn=(144)
calls=193130 0x402d9a 770 
* * 2124430 965650 579390
+5 * 193130 193130
+4 * 193130 193130
+5 * 193130 0 193130
+5 +1 193130 193130
+5 * 193130 193130
+5 * 193130 193130
+5 * 193130
+4 * 193130 0 193130
+5 +1 193130 193130
+5 * 193130 193130
+5 * 193130 193130
+5 * 193130
+4 * 193130 0 193130
+5 -4 193130 0 193130
+4 * 193130 193130
+3 * 193130
+3 * 193130 193130
+3 * 193130 0 0 0 0 0 0 0 0 193130 621
jcnd=192510/193130 0x401672 +1 
* * 
-9 * 620 620 0 1 0 0 1
+3 * 620
+3 * 620 620
+3 * 620 0 0 0 0 0 0 0 0 620
jcnd=620/620 0x401672 +1 
* * 
+6 +6 620 620 0 1 0 0 1
+5 * 620 620
+5 * 620 0 620
+5 +2 620 620
+3 +1 620 0 620
+3 * 620 620
+5 * 620 620
+1 * 620 620

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 620
+7 * 620
+7 * 620
+3 * 620
+3 * 620 0 620
cfi=(2)
cfn=(4)
calls=620 0x4030b2 310 
* * 778013 238597 226627 68 18 16 68 18 16 47337 1753 2478 309
+5 * 620
+7 * 620
+7 * 620
+3 * 620
+3 * 620 0 620
cfi=(2)
cfn=(80)
calls=620 0x402ff4 310 
* * 773065 235675 222221 38 7 152 38 7 152 46242 2321 2478
+5 * 620 0 0 1 0 0 1
+7 * 620
+7 * 620
+3 * 620
+3 * 620 0 620
cfn=(142)
calls=620 0x401585 -52 
* * 20125820 8899480 4645660 8 0 0 8 0 0 387500 1242
+5 * 620 0 620
+8 * 620 620
+6 * 620 0 620
+6 * 620
+7 * 620
+3 * 620 0 620
cfi=(2)
cfn=(148)
calls=620 0x402df4 414 
* * 154160 48316 34199 33 5 0 33 5 0 17074 517 1240
+5 * 620
+7 * 620
+3 * 620 0 620 1 0 0 1
cfi=(2)
cfn=(178)
calls=620 0x402e74 414 
* * 165367 52352 37739 8 1 0 8 1 0 20022 43 1240
+5 +2 620
+7 * 620
+7 * 620
+3 * 620
+3 * 620 0 620
cfi=(2)
cfn=(4)
calls=620 0x4030b2 310 
* * 777581 238562 226507 2 1 1 2 1 1 47292 1060 2478
+5 * 620
+7 * 620
+7 * 620
+3 * 620
+3 * 620 0 620
cfi=(2)
cfn=(80)
calls=620 0x402ff4 310 
* * 772210 235624 222083 0 0 2 0 0 2 46107 1603 2478
+5 * 620 620
+6 * 620 0 0 1 0 0 1
+7 * 620
+7 * 620 0 620
+6 * 620 620
+8 * 620
+3 * 620
+3 * 620 0 620
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=620 0x401719 -33 
* * 9306820 3876240 2133730 4 0 0 4 0 0 193750 621
+5 * 620 0 620
+8 * 620 620
+6 * 620 0 620
+6 * 620
+7 * 620 0 0 1 0 0 1
+3 * 620 0 620
cfi=(2)
cfn=(148)
calls=620 0x402df4 414 
* * 154160 48316 34199 0 0 0 0 0 0 17074 509 1240
+5 * 620
+7 * 620
+3 * 620 0 620
cfi=(2)
cfn=(178)
calls=620 0x402e74 414 
* * 165367 52352 37739 0 0 0 0 0 0 20022 35 1240
+5 +2 620 620
+7 * 620
+3 * 620 0 620
cfi=(2)
cfn=(2)
calls=620 0x402d74 645 
* * 8060 3720 1240
+5 * 620 620
+6 * 620
+3 * 620
+3 * 620
+3 * 620 620
+7 * 620
+3 * 620 0 0 1 0 0 1
+3 * 620 0 620
cfi=(2)
cfn=(144)
calls=620 0x402d9a 770 
* * 6820 3100 1860
+5 * 620
+3 * 620
+7 * 620
+3 * 620
+3 * 620 0 620
cfi=(2)
cfn=(200)
calls=620 0x402eda 901 
* * 54864 20682 15774 48 60 13 48 60 13 2348 109 53
+5 +1 620 620
+7 * 620
+3 * 620 0 620
cfi=(2)
cfn=(10)
calls=620 0x402f54 645 
* * 8060 3720 1240 0 1 0 0 1
+5 * 620 620
+6 * 620
+3 * 620
+3 * 620
+3 * 620 620
+7 * 620 0 0 1 0 0 1
+3 * 620
+3 * 620 0 620
cfi=(2)
cfn=(146)
calls=620 0x402dba 770 
* * 6820 3100 1860
+5 * 620
+3 * 620
+7 * 620
+3 * 620
+3 * 620 0 620
cfi=(2)
cfn=(244)
calls=620 0x402f7a 901 
* * 53380 20422 15558 22 41 87 22 41 87 2024 70 53
+5 +1 620 620
+7 * 620
+3 * 620 0 620
cfi=(2)
cfn=(10)
calls=620 0x402f54 645 
* * 8060 3720 1240
+5 * 620 620
+6 * 620
+3 * 620
+3 * 620
+3 * 620 620 0 1 0 0 1
+7 * 620
+3 * 620
+3 * 620 0 620
cfi=(2)
cfn=(146)
calls=620 0x402dba 770 
* * 6820 3100 1860
+5 * 620 620
+2 * 620
+4 * 620 620
+8 * 620 620
+8 * 620 0 620
+8 +1 620 620
+7 * 620
+3 * 620 0 620
cfi=(2)
cfn=(2)
calls=620 0x402d74 645 
* * 8060 3720 1240
+5 * 620 620 0 1 0 0 1
+6 * 620
+3 * 620
+3 * 620
+3 * 620 620
+7 * 620
+3 * 620
+3 * 620 0 620
cfi=(2)
cfn=(144)
calls=620 0x402d9a 770 
* * 6820 3100 1860
+5 * 620 620
+4 * 620 620
+8 * 620
+4 * 620 620
+8 * 620
+3 * 620 0 620
+8 +2 620 0 620
+7 -12 620 620
+8 * 620 620
+7 * 620 0 0 0 0 0 0 0 0 620 1
jcnd=1/620 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 620
+7 * 620
+3 * 620 0 620
cfi=(2)
cfn=(2)
calls=620 0x402d74 645 
* * 8060 3720 1240 2 0 1 2 0 1
+5 * 620
+3 * 620 620
+7 * 620
+3 * 620 0 620
cfi=(2)
cfn=(2)
calls=620 0x402d74 645 
* * 8060 3720 1240 0 1 0 0 1
+5 * 620
+3 * 620 0 0 0 0 0 0 0 0 620 1
+2 * 620 0 0 1 0 0 1
+5 * 620
jump=620 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 620
+2 * 620 0 0 0 0 0 0 0 0 620
jcnd=620/620 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+5 +1 620 620
+4 * 620
+3 * 620 0 620
cfi=(2)
cfn=(2)
calls=620 0x402d74 645 
* * 8060 3720 1240
+5 * 620
+3 * 620 0 620
+3 +1 620 620 0 1 0 0 1
+6 * 620 0 620
+3 * 620 620
+6 * 620 0 620
+3 +2 620 0 620
+7 * 620
jump=620 +86 * 
* * 
+2 +1 193130 193130
+3 * 193130
+3 * 193130 193130
+4 * 193130
+3 * 193130
+3 * 193130 0 193130
cfi=(2)
cfn=(144)
calls=193130 0x402d9a 770 
* * 2124430 965650 579390
+5 * 193130 193130
+4 * 193130 193130
+5 * 193130
+4 * 193130 0 193130
+5 +1 193130 193130
+3 * 193130
+3 * 193130 193130
+4 * 193130
+3 * 193130
+3 * 193130 0 193130
cfi=(2)
cfn=(146)
calls=193130 0x402dba 770 
* * 2124430 965650 579390
+5 * 193130 193130
+2 * 193130
+4 * 193130 193130
+5 * 193130
+4 * 193130 0 193130
+5 -2 193130 0 193130
+4 * 193130 193130
+3 * 193130
+3 * 193130 193130
+3 * 193130 0 0 0 0 0 0 0 0 193130 621
jcnd=192510/193130 -93 +1 
* * 
-9 * 620 620 0 1 0 0 1
+3 * 620
+3 * 620 620
+3 * 620 0 0 0 0 0 0 0 0 620
jcnd=620/620 -93 +1 
* * 
+2 +4 620 620
+3 * 620
+3 * 620 0 0 1 0 0 1
+4 * 620 620
+5 * 620
+4 * 620
+3 * 620 0 620
+5 +1 620 620
+3 * 620
+3 * 620
+4 * 620 620
+5 * 620
+4 * 620
+3 * 620 0 620
+5 +1 620 620
+5 * 620 620
+5 * 620 620
+5 * 620 0 0 1 0 0 1
+4 * 620
+3 * 620 0 620
+5 +2 620 620
+3 +1 620 0 620
+3 * 620 620
+5 * 620 620
+1 * 620 620

fl=(4)
fn=(174)
0x403ccc 121 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfi=(5)
cfn=(176)
calls=1240 0x4044cc -35 
* * 6200 2480 2480
+5 * 1240 1240
+1 * 1240 1240

fn=(90)
0x4047b2 115 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240 1 0 0 1
+4 +1 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(5)
cfn=(92)
calls=1240 0x4049d4 -35 
* * 7440 2480 3720 1 0 0 1
+5 * 1240 1240
+1 * 1240 1240

fn=(194)
0x403d7e 121 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfi=(5)
cfn=(196)
calls=1240 0x404520 -35 
* * 6200 2480 2480
+5 * 1240 1240
+1 * 1240 1240

fn=(16)
0x404804 115 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+4 * 1240
+3 * 1240
+3 * 1240 0 1240
cfi=(5)
cfn=(18)
calls=1240 0x404a28 -35 
* * 7440 2480 3720 1 0 1 1 0 1
+5 * 1240 1240
+1 * 1240 1240

fl=(3)
fn=(222)
0x403373 215 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(5)
cfn=(224)
calls=620 0x403df2 -87 
* * 14880 4960 5580 0 40 3 0 40 3 620 2
+5 * 620 620
+1 * 620 620

fn=(8)
0x403afa 224 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+4 * 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(264)
0x4036b1 215 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(5)
cfn=(266)
calls=620 0x40406a -87 
* * 14880 4960 5580 0 39 30 0 39 30 620
+5 * 620 620
+1 * 620 620

fn=(212)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102)
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(256)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28)
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84)
0x4039ed 224 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+4 * 1240 1240
+4 * 1240 1240
+1 * 1240 1240

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 2498 0 2498 1 0 0 1
+5 0 2498 0 2498
+5 0 2498
+3 0 2498 0 2498
+5 0 2498
+4 0 2498 2498 0 0 1 0 0 1
+7 0 2498 2498 0 0 1 0 0 1
+3 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498 3
+6 0 2498 2498 0 0 1 0 0 1
+7 0 2498 2498 0 1 1 0 1 1
+4 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498
+2 0 2498 2498 0 0 1 0 0 1
+3 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498
jcnd=2498/2498 +97 0 
* 0 
+18 0 2498
+3 0 2498
+3 0 2498 0 2498
cfn=(38) _int_malloc
calls=2498 0x3877c79a00 0 
* 0 574535 72483 86011 47 35 73 47 35 73 86068 3560
+5 0 2498
+3 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498
+2 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498
+2 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498 23
+2 0 2498 2498
+7 0 2498 0 0 0 0 0 0 0 0 2498
jcnd=2498/2498 +13 0 
* 0 
+13 0 2498 0 2498
+2 0 2498 0 0 0 0 0 0 0 0 2498 14
+6 0 2498
+3 0 2498 2498
+4 0 2498 2498
+5 0 2498 2498
+5 0 2498
+4 0 2498 2498
+1 0 2498 0 0 1 0 0 1
+5 0 2498 2498 0 0 1 0 0 1
+7 0 2498 0 0 0 0 0 0 0 0 2498
jcnd=2498/2498 +14 0 
* 0 
+14 0 2498 0 2498 1 0 0 1
+3 0 2498 0 0 0 0 0 0 0 0 2498
+6 0 2498
jump=2498 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2498 0 2498 1 0 0 1
+2 0 2498
+3 0 2498
+3 0 2498 0 2498
+2 0 2498
+3 0 2498 0 2498
+1 0 2498
+3 0 2498 0 2498
+1 0 2498
+3 0 2498
+4 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498
+6 0 2498
+4 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498 7
jcnd=10/2498 0x3877c838d1 0 
* 0 
+2 0 2488
+3 0 2488
+3 0 2488
+3 0 2488
+3 0 2488
+3 0 2488 0 0 0 0 0 0 0 0 2488
jcnd=2488/2488 +41 0 
* 0 
+41 0 2488 0 0 1 0 0 1
+3 0 2488 0 0 0 0 0 0 0 0 2488
jcnd=2488/2488 0x3877c839c0 0 
* 0 
+24 0 2488
+3 0 2488
+4 0 2488
+3 0 2488
+3 0 2488
+3 0 2488
+3 0 2488
+3 0 2488 0 0 0 0 0 0 0 0 2488 1240
jcnd=1252/2488 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1246
+10 0 1246 1246 0 0 2 0 0 2
+3 0 1246
+4 0 1246 0 1246
+3 0 1246
+4 0 1246
+4 0 1246 0 0 0 0 0 0 0 0 1246
jcnd=1246/1246 -18 0 
* 0 
-18 0 3794 3794
+3 0 3794
+4 0 3794 0 3794
+3 0 3794
+4 0 3794
+4 0 3794 0 0 0 0 0 0 0 0 3794 11
jcnd=2548/3794 -18 0 
* 0 
+2 0 2498
+4 0 2498
+3 0 2498 2498
+1 0 2498 2498
+1 0 2498 2498
+2 0 2498 2498 0 1 0 0 1
+2 0 2498 2498
0x3877c839c0 0 2488 0 0 1 0 0 1
+3 0 2488
+3 0 2488
+3 0 2488
+4 0 2488 0 2488 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=2488 0x3877c89b20 0 
* 0 1042190 391628 386652 6 1 154 6 1 154 49734 2018 2488 309
+5 0 2488
jump=2488 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2498 2498 0 1 1 0 1 1
+7 0 2498 2498 0 0 1 0 0 1
+3 0 2498
+3 0 2498 0 0 1 0 0 1 0 0 2498
+6 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498
+6 0 2498 2498
+4 0 2498
+4 0 2498
+2 0 2498 0 0 0 0 0 0 0 0 2498 2
+2 0 2498
+2 0 2498
+7 0 2498 0 0 0 0 0 0 0 0 2498
jcnd=2498/2498 +14 0 
* 0 
+14 0 2498
+2 0 2498
cfn=(170) _int_free
calls=2498 0x3877c78650 0 
* 0 246388 65363 37501 21 2 0 21 2 0 59682 1122

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 6
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 2
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 2498 0 2498 1 0 0 1
+2 0 2498 0 2498
+2 0 2498 0 2498
+2 0 2498
+3 0 2498 0 2498
+2 0 2498 0 2498
+1 0 2498 0 2498
+1 0 2498
+3 0 2498
+4 0 2498 2498
+4 0 2498 0 2498
+4 0 2498
+3 0 2498
+4 0 2498
+3 0 2498
+3 0 2498
+3 0 2498 0 0 1 0 0 1 0 0 2498
+6 0 2498
+4 0 2498 0 0 0 0 0 0 0 0 2498
+6 0 2498
+4 0 2498 0 0 0 0 0 0 0 0 2498
+6 0 2498 2498
+7 0 2498 0 0 0 0 0 0 0 0 2498 4
jcnd=2374/2498 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 2374
+2 0 2374 0 0 0 0 0 0 0 0 2374
+6 0 2374 2374 0 1 0 0 1
+4 0 2374
+3 0 2374
+2 0 2374 0 0 0 0 0 0 0 0 2374
jcnd=2374/2374 0x3877c78a40 0 
* 0 
+6 0 2374 2374
+4 0 2374
+3 0 2374 0 0 0 0 0 0 0 0 2374
+6 0 2374 2374
+5 0 2374
+4 0 2374 0 0 0 0 0 0 0 0 2374
jcnd=2374/2374 0x3877c7907c 0 
* 0 
+6 0 2374 2374
+5 0 2374
+4 0 2374 0 0 0 0 0 0 0 0 2374
+6 0 2374
+4 0 2374 0 0 1 0 0 1 0 0 2374
+6 0 2374
+4 0 2374 2374
+7 0 2374 0 0 0 0 0 0 0 0 2374
+6 0 2374 2374
+6 0 2374
+2 0 2374 0 0 0 0 0 0 0 0 2374
+6 0 2374 2374
+4 0 2374 0 0 0 0 0 0 0 0 2374 6
jcnd=2369/2374 +70 0 
* 0 
+2 0 5 5
+3 0 5
+3 0 5
+3 0 5 5
+4 0 5 5
+4 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5 2
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=4/5 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 2374 2374 0 1 0 0 1
+4 0 2374 0 0 0 0 0 0 0 0 2374 950
jcnd=1038/2374 0x3877c78bf0 0 
* 0 
+6 0 1336 1336 0 0 1 0 0 1
+6 0 1336 0 0 1 0 0 1 0 0 1336 71
jcnd=83/1336 0x3877c78a78 0 
* 0 
+6 0 1253 1253
+5 0 1253 1253
+5 0 1253 1253
+4 0 1253 0 0 0 0 0 0 0 0 1253
+6 0 1253 1253
+4 0 1253 0 0 0 0 0 0 0 0 1253
+6 0 1253 1253
+9 0 1253 0 1253
+4 0 1253 0 1253
+4 0 1253 0 0 0 0 0 0 0 0 1253 6
jcnd=1027/1253 +16 0 
* 0 
+2 0 226 226
+5 0 226
+3 0 226 0 0 1 0 0 1 0 0 226 6
jcnd=206/226 0x3877c78ee4 0 
* 0 
+6 0 1253
+3 0 1253
+4 0 1253 1253
+4 0 1253 1253
+4 0 1253 0 0 0 0 0 0 0 0 1253
-12 0 83
+4 0 83 83
+4 0 83 83
+4 0 83 0 0 0 0 0 0 0 0 83
+6 0 1336
+7 0 1336 0 1336
+4 0 1336 0 1336
+4 0 1336 0 0 0 0 0 0 0 0 1336 71
jcnd=441/1336 +18 0 
* 0 
+2 0 895 0 895
+8 0 895 0 895
+8 0 895 0 895
+4 0 895
+3 0 895 0 895 1 0 0 1
+4 0 895
+4 0 895 0 895
+4 0 895 0 895
+4 0 895
+7 0 895 0 0 0 0 0 0 0 0 895
jcnd=895/895 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 1038
+7 0 1038 0 0 0 0 0 0 0 0 1038
jcnd=1038/1038 0x3877c78b20 0 
* 0 
0x3877c78a40 0 2374 0 0 1 0 0 1
+5 0 2374 2374
+4 0 2374 2374
+7 0 2374 0 0 0 0 0 0 0 0 2374
jcnd=2374/2374 +16 0 
* 0 
+16 0 2374 0 2374
+5 0 2374 0 0 0 0 0 0 0 0 2374
+6 0 2374
+3 0 2374
jump=2374 0x3877c7878f 0 
* 0 
+10 0 83 0 83
+6 0 83 0 0 1 0 0 1
jump=83 0x3877c78885 0 
* 0 
0x3877c78b20 0 2374 2374 0 1 0 0 1
+4 0 2374
+2 0 2374 0 0 0 0 0 0 0 0 2374
+6 0 2374 2374
+7 0 2374 0 0 0 0 0 0 0 0 2374
jcnd=2374/2374 +15 0 
* 0 
+15 0 2374 0 2374 1 0 0 1
+4 0 2374 0 0 0 0 0 0 0 0 2374 4
+6 0 2374
+4 0 2374 2374
+1 0 2374 2374
+1 0 2374 2374
+2 0 2374 2374
+2 0 2374 2374
+2 0 2374 2374
+2 0 2374 2374
0x3877c78bf0 0 1038 0 0 1 0 0 1
+3 0 1038 0 1038
+4 0 1038
+3 0 1038
+4 0 1038 0 1038 1 0 0 1
+4 0 1038
jump=1038 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 206 206 0 1 0 0 1
+5 0 206 0 0 0 0 0 0 0 0 206
+6 0 206 206
+5 0 206 0 206
+4 0 206 206
+5 0 206 0 206
+4 0 206
jump=206 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 2374 2374 0 1 1 0 1 1
+4 0 2374 0 0 1 0 0 1
+7 0 2374
+4 0 2374
+3 0 2374
+3 0 2374 0 0 0 0 0 0 0 0 2374
jcnd=2374/2374 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 2488 0 0 1 0 0 1
+7 0 2488
+3 0 2488
+3 0 2488 2488 0 0 1 0 0 1
+4 0 2488
+4 0 2488 0 0 0 0 0 0 0 0 0 0 2488 309
jump=304 0x3877c89be8 0 
* 0 
jump=316 0x3877c89bd0 0 
* 0 
jump=304 0x3877c89bb8 0 
* 0 
jump=312 +11 0 
* 0 
jump=312 0x3877c89c48 0 
* 0 
jump=314 0x3877c89c30 0 
* 0 
jump=312 0x3877c89c18 0 
* 0 
jump=314 0x3877c89c00 0 
* 0 
+11 0 312 312
+3 0 312
+4 0 312
+4 0 312 312
+4 0 312
+4 0 312 0 312
+4 0 312
+9 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312
+4 0 312
+4 0 312 0 0 0 0 0 0 0 0 312
jcnd=8/312 0x3877c89c60 0 
* 0 
-40 0 47862 47862
+4 0 47862 0 47862 0 0 3 0 0 3
+4 0 47862 47862
+4 0 47862 0 47862 0 0 15 0 0 15
+4 0 47862 47862
+4 0 47862 0 47862 0 0 32 0 0 32
+4 0 47862 47862
+4 0 47862 0 47862
+4 0 47862
+4 0 47862
+4 0 47862 0 0 0 0 0 0 0 0 47862 2014
jcnd=2452/47862 0x3877c89c60 0 
* 0 
-32 0 314 314
+4 0 314 0 314
+4 0 314 314
+4 0 314 0 314
+4 0 314 314
+4 0 314 0 314
+4 0 314
+4 0 314
+4 0 314 0 0 0 0 0 0 0 0 314
jcnd=10/314 0x3877c89c60 0 
* 0 
-24 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312
+4 0 312
+4 0 312 0 0 0 0 0 0 0 0 312
jcnd=8/312 0x3877c89c60 0 
* 0 
-16 0 314 314 0 1 0 0 1
+4 0 314 0 314
+4 0 314 0 0 1 0 0 1
+4 0 314
+4 0 314 0 0 0 0 0 0 0 0 314 4
jcnd=10/314 0x3877c89c60 0 
* 0 
+6 0 46626
+4 0 46626 46626
+3 0 46626 0 46626 0 0 20 0 0 20
+3 0 46626 46626
+4 0 46626 0 46626 0 0 34 0 0 34
+4 0 46626 46626
+4 0 46626 0 46626 0 0 49 0 0 49
+4 0 46626 46626
+4 0 46626 0 46626
+4 0 46626
jump=46626 -80 0 
* 0 
-30 0 304 304
+3 0 304 0 304
+3 0 304 304
+4 0 304 0 304
+4 0 304 304
+4 0 304 0 304 0 0 1 0 0 1
+4 0 304 304
+4 0 304 0 304
+4 0 304
jump=304 -80 0 
* 0 
-24 0 316 316
+4 0 316 0 316
+4 0 316 316
+4 0 316 0 316
+4 0 316 316
+4 0 316 0 316
+4 0 316
jump=316 -80 0 
* 0 
-16 0 304 304
+4 0 304 0 304
+4 0 304 304
+4 0 304 0 304
+4 0 304
jump=304 -80 0 
* 0 
+8 0 304 304
+3 0 304
+4 0 304 0 0 1 0 0 1
+4 0 304
+4 0 304
jump=304 -39 0 
* 0 
+9 0 316
+3 0 316 0 0 0 0 0 0 0 0 316
+6 0 316 316
+3 0 316
+4 0 316
jump=316 -72 0 
* 0 
+8 0 304
+4 0 304 304
+3 0 304 0 0 0 0 0 0 0 0 304
+2 0 304
+4 0 304
jump=304 -99 0 
* 0 
+11 0 314 314 0 1 0 0 1
+3 0 314
+4 0 314
+4 0 314
+4 0 314
jump=314 0x3877c89b78 0 
* 0 
+9 0 312 312
+3 0 312
+4 0 312
+4 0 312
+4 0 312
jump=312 0x3877c89b70 0 
* 0 
+9 0 314 314
+3 0 314
+4 0 314
+4 0 314
+4 0 314
jump=314 0x3877c89b68 0 
* 0 
+9 0 312 312
+3 0 312
+4 0 312
+4 0 312
+4 0 312
jump=312 0x3877c89b60 0 
* 0 
+9 0 2488 0 2488 1 0 0 1
+3 0 2488 2488

fn=(104) alloc_perturb
0x3877c77180 0 2352 2352 0 1 0 0 1
+6 0 2352
+2 0 2352 0 0 0 0 0 0 0 0 2352 2
+2 0 2352 2352

fn=(38)
0x3877c79a00 0 2498 0 2498 1 0 0 1
+2 0 2498
+3 0 2498 0 2498
+2 0 2498 0 2498
+2 0 2498 0 2498 0 0 1 0 0 1
+2 0 2498
+3 0 2498 0 2498
+1 0 2498 0 2498
+1 0 2498
+4 0 2498
+4 0 2498 0 0 0 0 0 0 0 0 2498
+6 0 2498
+4 0 2498
+6 0 2498
+3 0 2498
+4 0 2498
+4 0 2498
+4 0 2498
+3 0 2498 0 0 0 0 0 0 0 0 2498
+6 0 2498 2498 0 1 1 0 1 1
+7 0 2498 0 0 0 0 0 0 0 0 2498 7
jcnd=2376/2498 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 146 146
+6 0 146
+4 0 146
+2 0 146 0 0 0 0 0 0 0 0 146
+6 0 146
+3 0 146
+4 0 146 146
+1 0 146 146
+1 0 146 146
+2 0 146 146
+2 0 146 146
+2 0 146 146
+2 0 146 146
-14 0 2352
+4 0 2352 2352
+1 0 2352 2352
+1 0 2352 2352
+2 0 2352 2352
+2 0 2352 2352
+2 0 2352 2352
+2 0 2352 2352
+7 0 2393
+7 0 2393 0 0 1 0 0 1 0 0 2393 7
jcnd=1490/2393 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 3 0 0 3
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 1490 0 0 1 0 0 1
+3 0 1490
+4 0 1490
+4 0 1490 0 0 1 0 0 1 0 0 1490 3
jcnd=1488/1490 0x3877c7a1a4 0 
* 0 
+6 0 2
+3 0 2
+4 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2
+3 0 2 0 2
+4 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +30 0 
* 0 
-11 0 1488 1488
+6 0 1488
+5 0 1488 0 0 0 0 0 0 0 0 1488 1
jcnd=1487/1488 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 912 244 194 8 2 0 8 2 0 188 26
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 2392 0 0 1 0 0 1
+3 0 2392
+3 0 2392
+3 0 2392
+4 0 2392
+3 0 2392
+4 0 2392 0 2392
+5 0 2392
+3 0 2392 0 2392
+4 0 2392 0 2392
+4 0 2392 0 2392
+5 0 2392
+3 0 2392
+3 0 2392
+3 0 2392
+3 0 2392
+4 0 2392
+4 0 2392 0 0 1 0 0 1
+4 0 2392 0 2392
+4 0 2392
+4 0 2392 0 2392
+5 0 2392 0 2392
+5 0 2392
+3 0 2392
+3 0 2392 0 2392
+5 0 2392
+5 0 2392
+3 0 2392 0 2392
+4 0 2392 0 2392
+4 0 2392
+6 0 2392 0 2392
+4 0 2392 0 2392
+5 0 2392 0 0 1 0 0 1
+3 0 2392
+3 0 2392
+3 0 2392
jump=2392 +87 0 
* 0 
+8 0 1267
+3 0 1267
+4 0 1267
+2 0 1267
+2 0 1267
+3 0 1267
+3 0 1267
+3 0 1267
+2 0 1267
+2 0 1267
+5 0 1267
+2 0 1267 1267 0 0 2 0 0 2
+4 0 1267
+3 0 1267
+4 0 1267 0 1267
+4 0 1267 0 1267
+8 0 1267
+7 0 1267 0 1267
+4 0 1267 0 1267 0 0 1 0 0 1
+4 0 1267 0 1267
+4 0 1267 0 0 0 0 0 0 0 0 1267
-38 0 1087
+3 0 1087
+4 0 1087 0 1087
+4 0 1087 0 1087
+8 0 1087
+7 0 1087 0 1087
+4 0 1087 0 1087 0 0 1 0 0 1
+4 0 1087 0 1087
+4 0 1087 0 0 0 0 0 0 0 0 1087
+6 0 4747 4747 0 1 0 0 1
+4 0 4747
+3 0 4747 0 0 0 0 0 0 0 0 4747 196
jcnd=2332/4747 0x3877c79ef0 0 
* 0 
+6 0 2415 2415
+4 0 2415 2415
+4 0 2415
+4 0 2415 0 0 0 0 0 0 0 0 2415
+6 0 2415 2415 0 1 1 0 1 1
+7 0 2415 0 0 0 0 0 0 0 0 2415
+6 0 2415
+4 0 2415
+7 0 2415 0 0 0 0 0 0 0 0 2415 6
jcnd=1505/2415 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 2395
+3 0 2395 0 2395
+4 0 2395 0 2395
+5 0 2395 0 0 0 0 0 0 0 0 2395 29
jcnd=41/2395 0x3877c7a090 0 
* 0 
+6 0 2354
+7 0 2354 0 0 0 0 0 0 0 0 2354 474
jcnd=1267/2354 0x3877c79c50 0 
* 0 
+6 0 1087 0 0 1 0 0 1
+3 0 1087
+4 0 1087
+4 0 1087 0 0 0 0 0 0 0 0 1087 216
jcnd=218/1087 0x3877c79db0 0 
* 0 
+6 0 869
+3 0 869
+4 0 869
+2 0 869
+2 0 869
+3 0 869
+3 0 869
+8 0 869
+3 0 869
+2 0 869
+2 0 869
+4 0 869 869 0 0 2 0 0 2
+4 0 869
+3 0 869 0 0 1 0 0 1 0 0 869 13
jcnd=837/869 0x3877c79e15 0 
* 0 
-36 0 218
+2 0 218
+2 0 218
+3 0 218
+3 0 218
+8 0 218
+3 0 218
+2 0 218
+2 0 218
+4 0 218 218
+4 0 218
+3 0 218 0 0 0 0 0 0 0 0 218
jcnd=218/218 0x3877c79e15 0 
* 0 
+6 0 32 32
+4 0 32
+4 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=16/32 +38 0 
* 0 
+2 0 16 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
jump=16 0x3877c79c73 0 
* 0 
+13 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c79ee0 0 
* 0 
+6 0 8 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
-4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
+14 0 218 0 0 1 0 0 1
+3 0 218
+4 0 218
+4 0 218 0 0 0 0 0 0 0 0 218
+2 0 218
+3 0 218 0 0 1 0 0 1
+7 0 218
jump=218 0x3877c79d18 0 
* 0 
+78 0 1055 0 1055
+4 0 1055 0 1055
+4 0 1055
+3 0 1055
jump=1055 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+39 0 8 8
+4 0 8
jump=8 0x3877c79d9e 0 
* 0 
+12 0 2332 0 0 1 0 0 1
+7 0 2332
+3 0 2332 0 0 0 0 0 0 0 0 2332 14
jcnd=1470/2332 0x3877c7a0b0 0 
* 0 
+6 0 2300 2300 0 1 0 0 1
+4 0 2300
+3 0 2300
+3 0 2300
+2 0 2300
+4 0 2300
+3 0 2300
+3 0 2300
+2 0 2300
+2 0 2300
+2 0 2300
+2 0 2300 2300 0 0 1 0 0 1
+8 0 2300
+5 0 2300
+5 0 2300
+2 0 2300 0 0 0 0 0 0 0 0 2300
-2 0 1100
+2 0 1100 0 0 0 0 0 0 0 0 1100
+2 0 3400
+2 0 3400 0 0 0 0 0 0 0 0 3400 52
jcnd=1650/3400 +64 0 
* 0 
+2 0 1750
+8 0 1750
+3 0 1750
+3 0 1750 0 0 0 0 0 0 0 0 1750 4
jcnd=217/1750 0x3877c79fc0 0 
* 0 
-6 0 1249
+3 0 1249
+3 0 1249 0 0 0 0 0 0 0 0 1249 11
jcnd=825/1249 0x3877c79fc0 0 
* 0 
+2 0 1957
+2 0 1957 1957
+8 0 1957
+2 0 1957 0 0 0 0 0 0 0 0 1957 33
jcnd=1249/1957 -20 0 
* 0 
+2 0 708
+2 0 708
+5 0 708
+3 0 708
+3 0 708
+2 0 708
+2 0 708
+5 0 708 0 0 0 0 0 0 0 0 708
+2 0 708
+2 0 708
+4 0 708
+2 0 708
+2 0 708 0 0 0 0 0 0 0 0 708 6
jcnd=646/708 -8 0 
* 0 
-8 0 12567
+4 0 12567
+2 0 12567
+2 0 12567 0 0 0 0 0 0 0 0 12567 826
jcnd=10468/12567 -8 0 
* 0 
-2 0 1650 0 0 1 0 0 1
+2 0 1650 0 0 0 0 0 0 0 0 1650 25
jcnd=1453/1650 -8 0 
* 0 
+2 0 2358 2358 0 0 14 0 0 14
+4 0 2358 0 0 1 0 0 1
+3 0 2358 0 0 0 0 0 0 0 0 2358 1084
jcnd=1258/2358 0x3877c7a1cf 0 
* 0 
+6 0 1100
+2 0 1100
+4 0 1100
+2 0 1100
+2 0 1100
+2 0 1100 0 1100
+8 0 1100
jump=1100 0x3877c79f30 0 
* 0 
+37 0 1042 1042 0 1 0 0 1
+5 0 1042 1042
+4 0 1042
+4 0 1042 1042
+5 0 1042 0 0 0 0 0 0 0 0 1042 1
jcnd=1042/1042 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 41 0 0 1 0 0 1
+7 0 41 0 41
+6 0 41
+3 0 41 0 0 0 0 0 0 0 0 41
jcnd=41/41 0x3877c79ace 0 
* 0 
+16 0 1470 1470
+4 0 1470
+4 0 1470
+2 0 1470
+5 0 1470 1470 0 1 2 0 1 2
+4 0 1470
+3 0 1470 0 0 0 0 0 0 0 0 1470 17
jcnd=1398/1470 0x3877c79f00 0 
* 0 
+6 0 72 72
+4 0 72 0 0 0 0 0 0 0 0 72 8
jcnd=40/72 0x3877c79f00 0 
* 0 
+6 0 32
+3 0 32 32
+4 0 32 32
+4 0 32
+3 0 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 0x3877c7a650 0 
* 0 
+26 0 32 0 0 1 0 0 1
+3 0 32 32
+4 0 32
+3 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 2
+6 0 32 32
+8 0 32 0 32
+4 0 32 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32 0 1 0 0 1
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32 18
jcnd=32/32 0x3877c7a659 0 
* 0 
+6 0 32
+4 0 32 0 0 0 0 0 0 0 0 32 8
jcnd=16/32 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 1488 0 0 1 0 0 1
+3 0 1488 0 1488
+4 0 1488
jump=1488 0x3877c79b99 0 
* 0 
+36 0 1258 1258 0 1 1 0 1 1
+4 0 1258 1258 0 0 1 0 0 1
+4 0 1258
+3 0 1258 1258
+4 0 1258
+4 0 1258
+3 0 1258
+3 0 1258 1258
+4 0 1258 0 0 0 0 0 0 0 0 1258
+6 0 1258 1258
+4 0 1258 0 0 0 0 0 0 0 0 1258
+6 0 1258 1258 0 1 0 0 1
+8 0 1258 0 1258
+4 0 1258 0 1258
+4 0 1258 0 0 0 0 0 0 0 0 1258 11
jcnd=418/1258 +38 0 
* 0 
+2 0 840 840 0 0 1 0 0 1
+4 0 840
+3 0 840 0 0 0 0 0 0 0 0 840
+2 0 840 840
+5 0 840 0 0 0 0 0 0 0 0 840
+6 0 840 840
+4 0 840 0 840
+4 0 840 840
+4 0 840 0 840
+4 0 840
+4 0 840 0 0 0 0 0 0 0 0 840
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 1237 1237
+4 0 1237 1237 0 1 0 0 1
+4 0 1237 0 0 0 0 0 0 0 0 1237
+6 0 1237
+4 0 1237
+7 0 1237 0 1237 0 0 7 0 0 7
+4 0 1237 0 1237
+4 0 1237 0 1237
+4 0 1237 0 1237
+4 0 1237 0 0 0 0 0 0 0 0 1237 4
jcnd=772/1237 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 772
+7 0 772 0 0 0 0 0 0 0 0 772 2
jcnd=554/772 +18 0 
* 0 
+2 0 225 0 225 0 0 2 0 0 2
+8 0 225 0 225 1 0 0 1
+8 0 225
+7 0 225 0 225 0 0 2 0 0 2
+4 0 225
+3 0 225
+3 0 225
+4 0 225
+3 0 225
+4 0 225
+3 0 225
+3 0 225
+4 0 225 0 225
+4 0 225 0 225
+4 0 225
jump=225 +71 0 
* 0 
-46 0 1028
+7 0 1028 0 1028
+4 0 1028
+3 0 1028
+3 0 1028
+4 0 1028
+3 0 1028
+4 0 1028
+3 0 1028
+3 0 1028
+4 0 1028 0 1028
+4 0 1028 0 1028 0 0 1 0 0 1
+4 0 1028
jump=1028 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 37
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37 2
jcnd=37/37 +7 0 
* 0 
+7 0 1290
+4 0 1290 0 0 1 0 0 1
+3 0 1290
+3 0 1290 0 1290
cfn=(104)
calls=1290 0x3877c77180 0 
* 0 5160 2580 0 1 0 0 1 0 0 1290
+5 0 1290
+3 0 1290
jump=1290 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1042 0 0 1 0 0 1
+7 0 1042
+2 0 1042
+4 0 1042
+3 0 1042
+3 0 1042 0 1042
+5 0 1042
+3 0 1042
+4 0 1042
+3 0 1042 0 0 1 0 0 1
+4 0 1042
+4 0 1042
+3 0 1042
+4 0 1042 0 1042
+4 0 1042 0 1042 0 0 39 0 0 39
+4 0 1042
+3 0 1042
+3 0 1042 0 1042
cfn=(104)
calls=1042 0x3877c77180 0 
* 0 4168 2084 0 0 0 0 0 0 0 1042 2
+5 0 1042
+3 0 1042
jump=1042 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 32 32 0 1 0 0 1
+4 0 32
jump=32 0x3877c7a10e 0 
* 0 
+5 0 32 32
+5 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 0x3877c7a14b 0 
* 0 

totals: 33438917 14016841 7885517 245 137 273 245 137 273 848654 9885 14978 309
