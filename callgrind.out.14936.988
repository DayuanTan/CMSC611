version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 988


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1152636828 - 1154271815
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1620 0 0 1 0 0 1
+3 0 1620 0 0 0 0 0 0 0 0 1620
+2 0 1620
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1620 0x3877c7b8b0 0 
* 0 198137 51994 28984 21 4 0 21 4 0 48919 305
* 0 1620 1620 0 1 1 0 1 1 0 0 0 1620

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1620 0 1620 1 0 0 1
+1 0 1620
+5 0 1620
+3 0 1620 0 1620
+1 0 1620
+4 0 1620 0 0 1 0 0 1
+3 0 1620
+4 0 1620
+3 0 1620 0 1620 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1620 0x3877c7aa50 0 
* 0 451905 68137 71906 48 41 60 48 41 60 75221 2305
* 0 1620 1620 0 1 1 0 1 1 0 0 0 1620
+5 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 +96 0 
* 0 
+96 0 1620 0 0 1 0 0 1
+4 0 1620 1620
+1 0 1620 1620
+1 0 1620 1620

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 401 0 401 1 0 0 1
+1 * 401
+3 * 401
+4 * 401 0 401
+4 * 401 0 401
+4 +1 401 401
+4 * 401
+3 * 401 0 401
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=401 0x402d74 645 
* * 5213 2406 802
+5 * 401
+3 * 401 0 401
+3 +1 401 401
+6 * 401 0 401
+3 * 401 401
+6 * 401 0 401
+3 +1 401 401
+6 * 401 0 401 1 0 0 1
+3 * 401 401
+6 * 401 0 401
+3 +2 401 0 401
+7 * 401
jump=401 +86 * 
* * 
+2 +1 81002 81002
+3 * 81002
+3 * 81002 81002
+4 * 81002
+3 * 81002
+3 * 81002 0 81002
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=81002 0x402d9a 770 
* * 891022 405010 243006
+5 * 81002 81002
+4 * 81002 81002
+5 * 81002
+4 * 81002 0 81002
+5 +1 81002 81002
+3 * 81002
+3 * 81002 81002
+4 * 81002
+3 * 81002
+3 * 81002 0 81002
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=81002 0x402dba 770 
* * 891022 405010 243006 1 0 0 1
+5 * 81002 81002
+2 * 81002
+4 * 81002 81002
+5 * 81002
+4 * 81002 0 81002
+5 -2 81002 0 81002
+4 * 81002 81002
+3 * 81002
+3 * 81002 81002
+3 * 81002 0 0 0 0 0 0 0 0 81002 402
jcnd=80601/81002 -93 +1 
* * 
-9 * 401 401 0 1 0 0 1
+3 * 401
+3 * 401 401
+3 * 401 0 0 0 0 0 0 0 0 401
jcnd=401/401 -93 +1 
* * 
+2 +4 401 401
+3 * 401
+3 * 401
+4 * 401 401 0 1 0 0 1
+5 * 401
+4 * 401
+3 * 401 0 401
+5 +1 401 401
+3 * 401
+3 * 401
+4 * 401 401
+5 * 401
+4 * 401
+3 * 401 0 401
+5 +1 401 0 401
+7 * 401
jump=401 0x4016ee * 
* * 
+2 +1 81002 81002
+3 * 81002
+3 * 81002 81002
+4 * 81002
+3 * 81002 0 0 1 0 0 1
+3 * 81002 0 81002
cfi=(2)
cfn=(146)
calls=81002 0x402dba 770 
* * 891022 405010 243006
+5 * 81002 81002
+2 * 81002
+4 * 81002 81002
+5 * 81002 0 81002
+5 +1 81002 81002
+3 * 81002
+3 * 81002 81002
+4 * 81002
+3 * 81002
+3 * 81002 0 81002
cfi=(2)
cfn=(144)
calls=81002 0x402d9a 770 
* * 891022 405010 243006
+5 * 81002 81002
+4 * 81002 81002
+5 * 81002 0 81002
+5 +1 81002 81002
+5 * 81002 81002
+5 * 81002 81002
+5 * 81002
+4 * 81002 0 81002
+5 +1 81002 81002
+5 * 81002 81002
+5 * 81002 81002
+5 * 81002
+4 * 81002 0 81002
+5 -4 81002 0 81002
+4 * 81002 81002
+3 * 81002
+3 * 81002 81002
+3 * 81002 0 0 0 0 0 0 0 0 81002 402
jcnd=80601/81002 0x401672 +1 
* * 
-9 * 401 401 0 1 0 0 1
+3 * 401
+3 * 401 401
+3 * 401 0 0 0 0 0 0 0 0 401
jcnd=401/401 0x401672 +1 
* * 
+6 +6 401 401 0 1 0 0 1
+5 * 401 401
+5 * 401 0 401
+5 +2 401 401
+3 +1 401 0 401
+3 * 401 401
+5 * 401 401
+1 * 401 401

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 401
+7 * 401
+7 * 401
+3 * 401
+3 * 401 0 401
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=401 0x4030b2 310 
* * 454337 133422 126423 68 27 19 68 27 19 29552 1152 1602 200
+5 * 401
+7 * 401
+7 * 401
+3 * 401
+3 * 401 0 401
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=401 0x402ff4 310 
* * 439318 131040 123192 43 7 69 43 7 69 27080 1247 1602
+5 * 401 0 0 1 0 0 1
+7 * 401
+7 * 401
+3 * 401
+3 * 401 0 401
cfn=(142)
calls=401 0x401585 -52 
* * 8450273 3736117 1950865 8 0 0 8 0 0 162806 804
+5 * 401 0 401
+8 * 401 401
+6 * 401 0 401
+6 * 401
+7 * 401
+3 * 401 0 401
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=401 0x402df4 414 
* * 107216 33867 24517 31 5 0 31 5 0 13031 95 802
+5 * 401
+7 * 401
+3 * 401 0 401 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=401 0x402e74 414 
* * 106502 33625 24347 7 1 0 7 1 0 12841 53 802
+5 +2 401
+7 * 401
+7 * 401
+3 * 401
+3 * 401 0 401
cfi=(2)
cfn=(4)
calls=401 0x4030b2 310 
* * 453822 133386 126288 2 0 1 2 0 1 29499 828 1602
+5 * 401
+7 * 401
+7 * 401
+3 * 401
+3 * 401 0 401
cfi=(2)
cfn=(80)
calls=401 0x402ff4 310 
* * 438508 130988 123030 0 0 0 0 0 0 26971 946 1602
+5 * 401 401
+6 * 401 0 0 1 0 0 1
+7 * 401
+7 * 401 0 401
+6 * 401 401
+8 * 401
+3 * 401
+3 * 401 0 401
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=401 0x401719 -33 
* * 3911755 1628862 897037 4 0 0 4 0 0 81403 402
+5 * 401 0 401
+8 * 401 401
+6 * 401 0 401
+6 * 401
+7 * 401 0 0 1 0 0 1
+3 * 401 0 401
cfi=(2)
cfn=(148)
calls=401 0x402df4 414 
* * 107216 33867 24517 0 0 0 0 0 0 13031 92 802
+5 * 401
+7 * 401
+3 * 401 0 401
cfi=(2)
cfn=(178)
calls=401 0x402e74 414 
* * 106502 33625 24347 0 0 0 0 0 0 12841 50 802
+5 +2 401 401
+7 * 401
+3 * 401 0 401
cfi=(2)
cfn=(2)
calls=401 0x402d74 645 
* * 5213 2406 802
+5 * 401 401
+6 * 401
+3 * 401
+3 * 401
+3 * 401 401
+7 * 401
+3 * 401 0 0 1 0 0 1
+3 * 401 0 401
cfi=(2)
cfn=(144)
calls=401 0x402d9a 770 
* * 4411 2005 1203
+5 * 401
+3 * 401
+7 * 401
+3 * 401
+3 * 401 0 401
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=401 0x402eda 901 
* * 38396 14303 10993 42 31 12 42 31 12 1699 78 47
+5 +1 401 401
+7 * 401
+3 * 401 0 401
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=401 0x402f54 645 
* * 5213 2406 802 0 1 0 0 1
+5 * 401 401
+6 * 401
+3 * 401
+3 * 401
+3 * 401 401
+7 * 401 0 0 1 0 0 1
+3 * 401
+3 * 401 0 401
cfi=(2)
cfn=(146)
calls=401 0x402dba 770 
* * 4411 2005 1203
+5 * 401
+3 * 401
+7 * 401
+3 * 401
+3 * 401 0 401
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=401 0x402f7a 901 
* * 37641 14068 10804 21 32 43 21 32 43 1547 62 47
+5 +1 401 401
+7 * 401
+3 * 401 0 401
cfi=(2)
cfn=(10)
calls=401 0x402f54 645 
* * 5213 2406 802
+5 * 401 401
+6 * 401
+3 * 401
+3 * 401
+3 * 401 401 0 1 0 0 1
+7 * 401
+3 * 401
+3 * 401 0 401
cfi=(2)
cfn=(146)
calls=401 0x402dba 770 
* * 4411 2005 1203
+5 * 401 401
+2 * 401
+4 * 401 401
+8 * 401 401
+8 * 401 0 401
+8 +1 401 401
+7 * 401
+3 * 401 0 401
cfi=(2)
cfn=(2)
calls=401 0x402d74 645 
* * 5213 2406 802
+5 * 401 401 0 1 0 0 1
+6 * 401
+3 * 401
+3 * 401
+3 * 401 401
+7 * 401
+3 * 401
+3 * 401 0 401
cfi=(2)
cfn=(144)
calls=401 0x402d9a 770 
* * 4411 2005 1203
+5 * 401 401
+4 * 401 401
+8 * 401
+4 * 401 401
+8 * 401
+3 * 401 0 401
+8 +2 401 0 401
+7 -12 401 401
+8 * 401 401
+7 * 401 0 0 0 0 0 0 0 0 401 3
jcnd=1/401 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 401
+7 * 401
+3 * 401 0 401
cfi=(2)
cfn=(2)
calls=401 0x402d74 645 
* * 5213 2406 802 2 0 1 2 0 1
+5 * 401
+3 * 401 401
+7 * 401
+3 * 401 0 401
cfi=(2)
cfn=(2)
calls=401 0x402d74 645 
* * 5213 2406 802 0 1 0 0 1
+5 * 401
+3 * 401 0 0 0 0 0 0 0 0 401 2
+2 * 401 0 0 1 0 0 1
+5 * 401
jump=401 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 401
+2 * 401 0 0 0 0 0 0 0 0 401
jcnd=401/401 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 401 0 401
+1 * 401
+3 * 401
+4 * 401 0 401
+4 * 401 0 401
+4 * 401 0 401
+5 +1 401 401
+4 * 401
+3 * 401 0 401
cfi=(2)
cfn=(2)
calls=401 0x402d74 645 
* * 5213 2406 802
+5 * 401
+3 * 401 0 401
+3 +1 401 401 0 1 0 0 1
+6 * 401 0 401
+3 * 401 401
+6 * 401 0 401
+3 +2 401 0 401
+7 * 401
jump=401 +86 * 
* * 
+2 +1 81002 81002
+3 * 81002
+3 * 81002 81002
+4 * 81002
+3 * 81002
+3 * 81002 0 81002
cfi=(2)
cfn=(144)
calls=81002 0x402d9a 770 
* * 891022 405010 243006
+5 * 81002 81002
+4 * 81002 81002
+5 * 81002
+4 * 81002 0 81002
+5 +1 81002 81002
+3 * 81002
+3 * 81002 81002
+4 * 81002
+3 * 81002
+3 * 81002 0 81002
cfi=(2)
cfn=(146)
calls=81002 0x402dba 770 
* * 891022 405010 243006
+5 * 81002 81002
+2 * 81002
+4 * 81002 81002
+5 * 81002
+4 * 81002 0 81002
+5 -2 81002 0 81002
+4 * 81002 81002
+3 * 81002
+3 * 81002 81002
+3 * 81002 0 0 0 0 0 0 0 0 81002 402
jcnd=80601/81002 -93 +1 
* * 
-9 * 401 401 0 1 0 0 1
+3 * 401
+3 * 401 401
+3 * 401 0 0 0 0 0 0 0 0 401
jcnd=401/401 -93 +1 
* * 
+2 +4 401 401
+3 * 401
+3 * 401 0 0 1 0 0 1
+4 * 401 401
+5 * 401
+4 * 401
+3 * 401 0 401
+5 +1 401 401
+3 * 401
+3 * 401
+4 * 401 401
+5 * 401
+4 * 401
+3 * 401 0 401
+5 +1 401 401
+5 * 401 401
+5 * 401 401
+5 * 401 0 0 1 0 0 1
+4 * 401
+3 * 401 0 401
+5 +2 401 401
+3 +1 401 0 401
+3 * 401 401
+5 * 401 401
+1 * 401 401

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 802 0 802 1 0 0 1
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802 1 0 0 1
+4 +1 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=802 0x4049d4 -35 
* * 4812 1604 2406 1 0 0 1
+5 * 802 802
+1 * 802 802

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 802 0 802 1 0 0 1
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 802
+4 * 802
+3 * 802 0 802
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=802 0x404520 -35 
* * 4010 1604 1604
+5 * 802 802
+1 * 802 802

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 802 0 802 1 0 0 1
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=802 0x404a28 -35 
* * 4812 1604 2406 1 0 1 1 0 1
+5 * 802 802
+1 * 802 802

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 802
+4 * 802
+3 * 802 0 802
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=802 0x4044cc -35 
* * 4010 1604 1604
+5 * 802 802
+1 * 802 802

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 401 0 401
+1 * 401
+3 * 401
+4 * 401 0 401
+4 * 401 0 401
+4 * 401 0 401
+4 +1 401 401
+4 * 401 401
+4 * 401 401
+4 * 401
+3 * 401
+3 * 401 0 401
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=401 0x403df2 -87 
* * 9624 3208 3609 0 24 3 0 24 3 401 2
+5 * 401 401
+1 * 401 401

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 802 0 802 1 0 0 1
+1 * 802
+3 * 802 0 802
+4 * 802 802
+4 * 802 802
+1 * 802 802

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 401 0 401
+1 * 401
+3 * 401
+4 * 401 0 401
+4 * 401 0 401
+4 * 401 0 401
+4 +1 401 401
+4 * 401 401
+4 * 401 401
+4 * 401
+3 * 401
+3 * 401 0 401
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=401 0x40406a -87 
* * 9624 3208 3609 0 26 17 0 26 17 401
+5 * 401 401
+1 * 401 401

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 802 0 802
+1 * 802
+3 * 802 0 802
+4 * 802 802
+4 * 802 802
+1 * 802 802

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 882 0 882
+1 * 882
+3 * 882 0 882
+4 +1 882 882
+4 * 882 882
+1 * 882 882

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1604 0 1604 1 0 0 1
+1 * 1604
+3 * 1604 0 1604
+4 +1 1604 1604 0 1 0 0 1
+4 * 1604 1604
+1 * 1604 1604

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 882 0 882
+1 * 882
+3 * 882 0 882 0 0 1 0 0 1
+4 +1 882 882
+4 * 882 882
+1 * 882 882

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1604 0 1604 1 0 0 1
+1 * 1604
+3 * 1604
+4 * 1604 0 1604
+4 +1 1604
+4 * 1604
+3 * 1604 0 1604
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1604 0x404ffe 790 
* * 9624 4812 3208 1 0 0 1
+5 * 1604 1604
+3 * 1604 1604
+1 * 1604 1604

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1604 0 1604 1 0 0 1
+1 * 1604
+3 * 1604 0 1604
+4 +1 1604 1604
+4 * 1604 1604
+1 * 1604 1604

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1604 0 1604 1 0 0 1
+1 * 1604
+3 * 1604
+4 * 1604 0 1604
+4 +1 1604
+4 * 1604
+3 * 1604 0 1604 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1604 0x40500c 790 
* * 9624 4812 3208 1 0 0 1
+5 * 1604 1604
+3 * 1604 1604
+1 * 1604 1604

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 802 0 802
+1 * 802
+3 * 802 0 802
+4 * 802 0 802
+4 * 802 802
+4 * 802 802
+1 * 802 802

fl=(5)
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 810 0 810
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 * 810 0 810
+4 +1 810 810
+4 * 810
+3 * 810 0 810
cob=(5)
cfi=(8)
cfn=(164)
calls=810 0x387e4bb2f0 0 
* * 103011 27044 14660 21 4 0 21 4 0 25457 195 810
* * 810 810 0 1 1 0 1 1 0 0 0 810
+5 * 810 810
+1 * 810 810

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 810 0 810
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 * 810 0 810
+4 +1 810 810
+4 * 810
+3 * 810 0 810
cob=(5)
cfi=(8)
cfn=(164)
calls=810 0x387e4bb2f0 0 
* * 101606 26570 14324 2 1 0 2 1 0 25082 110 810
* * 810 810 0 0 0 0 0 0 0 0 0 810
+5 * 810 810
+1 * 810 810

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 810 0 810 1 0 0 1
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 * 810 0 810
+4 +2 810 810
+4 * 810
+3 * 810 0 810
cfn=(102)
calls=810 0x4048de +12 
* * 4860 1620 1620 1 0 0 1
+5 * 810 810
+4 * 810 0 0 1 0 0 1
+3 * 810
+2 * 810 0 0 0 0 0 0 0 0 810
jcnd=810/810 +7 +3 
* * 
+7 +3 810 810
+4 * 810
+4 * 810
+3 * 810 0 810
cob=(5)
cfi=(8)
cfn=(32)
calls=810 0x387e4bd0b0 0 
* * 224135 35041 35235 32 14 41 32 14 41 35999 1278 810
* * 810 810 0 0 0 0 0 0 0 0 0 810
+5 +1 810 810
+1 * 810 810

fn=(18)
0x404a28 81 802 0 802 1 0 0 1
+1 * 802
+3 * 802 0 802 0 0 1 0 0 1
+4 * 802 0 802
+4 * 802 802
+1 * 802 802

fn=(92)
0x4049d4 81 802 0 802 1 0 0 1
+1 * 802
+3 * 802 0 802
+4 * 802 0 802
+4 * 802 802
+1 * 802 802

fn=(196)
0x404520 86 802 0 802
+1 * 802
+3 * 802 0 802
+4 * 802 802
+1 * 802 802

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 810 0 810 1 0 0 1
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 * 810 0 810 1 0 0 1
+4 +2 810 810
+4 * 810
+3 * 810 0 810
cfn=(28)
calls=810 0x404992 +12 
* * 4860 1620 1620 1 0 0 1
+5 * 810 810
+4 * 810
+3 * 810
+2 * 810 0 0 0 0 0 0 0 0 810
jcnd=810/810 +7 +3 
* * 
+7 +3 810 810
+4 * 810
+4 * 810
+3 * 810 0 810
cob=(5)
cfi=(8)
cfn=(32)
calls=810 0x387e4bd0b0 0 
* * 253690 39576 41531 20 28 20 20 28 20 40842 1027 810
* * 810 810 0 1 1 0 1 1 0 0 0 810
+5 +1 810 810
+1 * 810 810

fn=(102)
0x4048de 113 826 0 826 1 0 0 1
+1 * 826
+3 * 826 0 826
+4 +1 826
+10 * 826 826
+1 * 826 826

fn=(266)
0x40406a 129 401 0 401
+1 * 401
+3 * 401
+4 * 401 0 401
+4 * 401 0 401
+4 * 401 0 401
+4 +1 401 401
+4 * 401
+3 * 401
+5 * 401 0 401
cfi=(16)
cfn=(226)
calls=401 0x402d61 -20 
* * 2807 1203 1203
+5 * 401
+3 * 401 0 0 0 0 0 0 0 0 401
+2 * 401 401
+4 * 401 401 0 0 26 0 0 26
+2 * 401 0 401 0 0 17 0 0 17
+2 * 401 401
+1 * 401 401

fn=(28)
0x404992 113 826 0 826 1 0 0 1
+1 * 826
+3 * 826 0 826
+4 +1 826
+10 * 826 826
+1 * 826 826

fn=(176)
0x4044cc 86 802 0 802
+1 * 802
+3 * 802 0 802
+4 * 802 802
+1 * 802 802

fn=(224)
0x403df2 129 401 0 401
+1 * 401
+3 * 401
+4 * 401 0 401
+4 * 401 0 401
+4 * 401 0 401
+4 +1 401 401
+4 * 401
+3 * 401
+5 * 401 0 401
cfi=(16)
cfn=(226)
calls=401 0x402d61 -20 
* * 2807 1203 1203
+5 * 401
+3 * 401 0 0 0 0 0 0 0 0 401 2
+2 * 401 401
+4 * 401 401 0 0 24 0 0 24
+2 * 401 0 401 0 0 3 0 0 3
+2 * 401 401
+1 * 401 401

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +2 802 802
+4 * 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=802 0x404484 107 
* * 439460 148186 143378 25 3 4 25 3 4 16984 996 1600 200
+5 * 802 802
+1 * 802 802

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +2 802 802 0 1 0 0 1
+4 * 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=802 0x404a36 450 
* * 417004 140166 135358 24 3 4 24 3 4 16984 996 1600 200
+5 * 802 802
+1 * 802 802

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +2 802 802
+4 * 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=802 0x40439c 107 
* * 439460 148186 143378 7 0 34 7 0 34 16984 969 1600
+5 * 802 802
+1 * 802 802

fn=(116)
0x40439c 107 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +10 802 802
+4 * 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=802 0x4047d7 -26 
* * 428232 144176 139368 7 0 34 7 0 34 16984 969 1600
+5 +1 802 802
+1 * 802 802

fn=(118)
0x4047d7 91 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +2 802 802
+4 * 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=802 0x4049e2 450 
* * 417004 140166 135358 7 0 34 7 0 34 16984 969 1600
+5 * 802 802
+1 * 802 802

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 17 2 0 17 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 17 2 0 17 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 17 1 0 17 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +10 802 802
+4 * 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(52)
calls=802 0x404829 -26 
* * 428232 144176 139368 25 3 4 25 3 4 16984 996 1600 200
+5 +1 802 802
+1 * 802 802

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 17 2 0 17 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 818 0 818 1 0 0 1
+1 * 818
+3 * 818 0 818 0 0 1 0 0 1
+4 +1 818 818
+4 * 818 818
+1 * 818 818

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 818 0 818 1 0 0 1
+1 * 818
+3 * 818 0 818 1 0 0 1
+4 +1 818 818
+4 * 818 818
+1 * 818 818

fn=(200)
0x402eda 901 401 0 401
+1 * 401
+3 * 401
+4 * 401 0 401
+4 * 401 0 401
+4 +2 401 401
+4 * 401 401
+4 * 401 401
+4 * 401 401
+4 * 401
+3 * 401 0 0 0 0 0 0 0 0 401 9
jcnd=8/401 +51 +10 
* * 
+2 +3 393 393
+4 * 393 393
+4 * 393 393
+4 -1 393 393
+4 * 393
+3 * 393
+3 * 393 0 393
cfi=(3)
cfn=(222)
calls=393 0x403373 215 
* * 14934 5109 5502 0 24 2 0 24 2 393 2
+5 +2 393 393
+4 * 393 393
+4 * 393
+4 * 393 393
+4 * 393 0 393
+4 * 393
jump=393 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202) std::vector<float, std::allocator<float> >::end()
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12884 3941 3430 39 7 10 39 7 10 905 67 47
+5 +2 401 401
+1 * 401 401

fn=(4)
0x4030b2 310 802 0 802 1 0 0 1
+1 * 802
+3 * 802 0 802
+2 * 802 0 802
+2 * 802 0 802
+1 * 802
+4 * 802 0 802 1 0 0 1
+4 * 802 0 802
+4 +2 802 802
+4 * 802
+3 * 802 0 802
cfn=(6)
calls=802 0x403b08 117 
* * 4812 2406 1604 1 0 1 1 0 1
+5 * 802
+3 * 802 0 802
cfi=(3)
cfn=(8)
calls=802 0x403afa -88 
* * 4812 2406 1604 1 0 0 1
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(10)
calls=802 0x402f54 645 
* * 10426 4812 1604 1 1 0 1 1
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802
+3 * 802
+3 * 802 0 802
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=802 0x403b16 134 
* * 351607 75314 73243 32 23 15 32 23 15 42067 984 1604
+5 +4 802 802 0 1 0 0 1
+4 * 802
+3 * 802 0 802
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=802 0x40333c 113 
* * 4812 2406 1604 2 0 0 2
+5 * 802
+3 * 802 802
+4 * 802 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=802 0x403ba4 565 
* * 20050 8020 6416 3 0 0 3
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=802 0x403b74 547 
* * 20050 8020 6416
+5 * 802
+3 * 802
+3 * 802
+3 * 802
+3 * 802 0 802 1 0 0 1
cfi=(11)
cfn=(48)
calls=802 0x403bd5 -60 
* * 451490 152196 148190 26 3 4 26 3 4 16984 996 1600 200
+5 -3 802 802
+4 * 802 0 802
+4 * 802
jump=802 +28 +4 
* * 
+28 +4 802
+4 * 802 802
+1 * 802 802
+2 * 802 802
+2 * 802 802
+1 * 802 802

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 802 0 802 1 0 0 1
+1 * 802
+3 * 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+4 * 802 0 802
+4 * 802
+4 * 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=802 0x404380 726 
* * 8020 4010 3208 1 0 0 1
+5 * 802 802
+4 * 802 802
+1 * 802 802

fn=(178)
0x402e74 414 802 0 802
+1 * 802
+3 * 802 0 802
+1 * 802
+4 * 802 0 802 1 0 0 1
+4 +2 802 802
+4 * 802
+3 * 802 0 802
cfn=(40)
calls=802 0x40333c 113 
* * 4812 2406 1604
+5 * 802
+3 * 802 802
+4 * 802 802
+4 * 802 802
+4 * 802 802
+3 -1 802
+3 * 802
+3 * 802 0 802
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=802 0x40334a 148 
* * 24862 8020 9624 2 0 0 2
+5 +1 802 802
+4 * 802
+3 * 802 0 802
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=802 0x4032ca 159 
* * 164082 49606 32654 3 1 0 3 1 0 25682 103 1604
+5 * 802
jump=802 +28 * 
* * 
+28 * 802 0 0 1 0 0 1
+4 * 802 802
+1 * 802 802
+1 * 802 802

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 810 0 810 1 0 0 1
+1 * 810 0 0 1 0 0 1
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 0 810 810
+5 0 810 0 0 0 0 0 0 0 0 810
+2 0 810 810
+4 0 810 810
+4 0 810
+5 0 810
+3 0 810
+3 0 810 0 810
fi=(6) ???
cfi=(5)
cfn=(100)
calls=810 0x40461a 99 
* 0 245195 41521 41715 35 14 41 35 14 41 36809 1278 1620
+5 0 810
fi=(6)
jump=810 +7 0 
* 0 
+7 0 810 810
+1 0 810 810

fn=(144)
0x402d9a 770 243808 0 243808
+1 * 243808
+3 * 243808 0 243808
+4 * 243808 0 243808
+4 +1 243808 243808
+4 * 243808 243808
+3 * 243808 243808
+4 * 243808
+4 * 243808
+3 * 243808 243808
+1 * 243808 243808

fn=(146)
0x402dba 770 243808 0 243808
+1 * 243808
+3 * 243808 0 243808 1 0 0 1
+4 * 243808 0 243808
+4 +1 243808 243808
+4 * 243808 243808
+3 * 243808 243808
+4 * 243808
+4 * 243808
+3 * 243808 243808
+1 * 243808 243808

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 802
+4 * 802
+3 * 802 0 802
cfi=(4)
cfn=(194)
calls=802 0x403d7e +42 
* * 11228 4010 4010 1 0 0 1
+5 * 802 802
+1 * 802 802

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 802 0 802 1 0 0 1
+1 * 802
+3 * 802 0 802
+1 * 802
+4 * 802 0 802
+4 +2 802 802
+4 * 802 802
+4 * 802
+3 * 802 802
+4 * 802 802
+3 * 802
+3 * 802
+3 * 802
+4 * 802
+3 * 802 802
+4 * 802 802
+3 -1 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=802 0x403d98 +11 
* * 123180 34368 22228 1 1 0 1 1 0 25682 103 1604
+5 +1 802 802
+4 * 802
+3 * 802 0 802
cfn=(192)
calls=802 0x403296 -82 
* * 18446 6416 6416 1 0 0 1
+5 * 802
jump=802 +28 * 
* * 
+28 * 802
+4 * 802 802
+1 * 802 802
+1 * 802 802

fn=(2)
0x402d74 645 3240 0 3240 1 0 0 1
+1 * 3240
+3 * 3240 0 3240 0 0 1 0 0 1
+4 +1 3240 3240
+4 * 3240 3240 0 1 1 0 1 1
+4 * 3240
+3 * 3240 3240
+4 * 3240 3240
+3 * 3240
+3 * 3240
+3 * 3240
+4 * 3240 3240
+1 * 3240 3240

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 +2 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=802 0x404236 -14 
* * 285041 49650 50787 26 23 11 26 23 11 42067 984 1604
+5 * 802 802
+4 * 802 0 802
+3 +1 802 802
+4 * 802 802 0 1 0 0 1
+3 * 802 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+3 * 802 802
+4 * 802
+4 * 802
+3 * 802 802
+4 * 802 0 802
+4 +1 802 802
+1 * 802 802

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 +2 802 802
+4 * 802 802 0 1 0 0 1
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(96)
calls=802 0x403fbe -14 
* * 254708 44870 44298 21 7 35 21 7 35 37067 1224 1604
+5 * 802 802
+4 * 802 0 802
+3 +1 802 802
+4 * 802 802
+3 * 802 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+3 * 802 802
+4 * 802
+4 * 802
+3 * 802 802
+4 * 802 0 802
+4 +1 802 802
+1 * 802 802

fn=(244)
0x402f7a 901 401 0 401
+1 * 401
+3 * 401 0 0 1 0 0 1
+4 * 401 0 401
+4 * 401 0 401
+4 +2 401 401
+4 * 401 401
+4 * 401 401
+4 * 401 401
+4 * 401
+3 * 401 0 0 0 0 0 0 0 0 401
jcnd=8/401 +51 +10 
* * 
+2 +3 393 393
+4 * 393 393
+4 * 393 393
+4 -1 393 393
+4 * 393
+3 * 393
+3 * 393 0 393
cfi=(3)
cfn=(264)
calls=393 0x4036b1 215 
* * 14934 5109 5502 0 25 13 0 25 13 393
+5 +2 393 393
+4 * 393 393
+4 * 393
+4 * 393 393
+4 * 393 0 393
+4 * 393
jump=393 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12129 3706 3241 20 7 30 20 7 30 753 62 47
+5 +2 401 401
+1 * 401 401

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1628 0 1628 1 0 0 1
+1 * 1628
+3 * 1628 0 1628 1 0 0 1
+4 +1 1628 1628
+4 * 1628 1628
+1 * 1628 1628

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+3 * 802 0 802
+4 * 802
+4 * 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfi=(10)
cfn=(110)
calls=802 0x404380 726 
* * 8020 4010 3208
+5 * 802 802
+4 * 802 802
+1 * 802 802

fn=(148)
0x402df4 414 802 0 802
+1 * 802
+3 * 802 0 802
+1 * 802
+4 * 802 0 802 1 0 0 1
+4 +2 802 802
+4 * 802
+3 * 802 0 802
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=802 0x40325e 113 
* * 4812 2406 1604
+5 * 802
+3 * 802 802
+4 * 802 802
+4 * 802 802
+4 * 802 802
+3 -1 802
+3 * 802
+3 * 802 0 802
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=802 0x40326c 148 
* * 24862 8020 9624 4 0 0 4
+5 +1 802 802
+4 * 802
+3 * 802 0 802
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=802 0x4031ec 159 
* * 165510 50090 32994 25 5 0 25 5 0 26062 187 1604
+5 * 802
jump=802 +28 * 
* * 
+28 * 802 0 0 1 0 0 1
+4 * 802 802
+1 * 802 802
+1 * 802 802

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 810 0 810 1 0 0 1
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 * 810 0 810
+4 +2 810 810
+5 * 810 0 0 0 0 0 0 0 0 810
+2 +1 810 810
+4 * 810 810
+4 * 810 810
+4 * 810
+3 * 810
+3 * 810 0 810
cfi=(5)
cfn=(160)
calls=810 0x4044d6 -65 
* * 112731 30284 18710 22 5 0 22 5 0 25457 195 1620
+5 +1 810 810
+1 * 810 810

fn=(12)
0x403b16 134 802 0 802
+1 * 802
+3 * 802 0 802
+1 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=802 0x4043ca -45 
* * 28872 10426 11228 4 0 4 4 0 4
+5 +1 802 802 0 1 0 0 1
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(20)
calls=802 0x404412 +43 
* * 305091 59274 56401 27 23 11 27 23 11 42067 984 1604
+5 * 802
jump=802 +28 * 
* * 
+28 * 802
+4 * 802 802
+1 * 802 802
+1 * 802 802

fn=(14)
0x4043ca 90 802 0 802 1 0 0 1
+1 * 802
+3 * 802
+4 * 802 0 802 0 0 1 0 0 1
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfi=(4)
cfn=(16)
calls=802 0x404804 +24 
* * 14436 4812 5614 2 0 1 2 0 1
+5 * 802 802
+4 * 802 0 802 0 0 2 0 0 2
+7 * 802 802
+4 * 802 0 802 1 0 0 1
+8 * 802 802
+4 * 802 0 802
+8 +1 802 802
+1 * 802 802

fn=(80)
0x402ff4 310 802 0 802 1 0 0 1
+1 * 802
+3 * 802 0 802
+2 * 802 0 802
+2 * 802 0 802
+1 * 802 0 0 1 0 0 1
+4 * 802 0 802
+4 * 802 0 802
+4 +2 802 802
+4 * 802
+3 * 802 0 802
cfn=(82)
calls=802 0x4039fc 117 
* * 4812 2406 1604 2 0 0 2
+5 * 802
+3 * 802 0 802
cfi=(3)
cfn=(84)
calls=802 0x4039ed -88 
* * 4812 2406 1604
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(2)
calls=802 0x402d74 645 
* * 10426 4812 1604
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802
+3 * 802
+3 * 802 0 802 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=802 0x403a0a 134 
* * 321274 70534 66754 28 7 35 28 7 35 37067 1224 1604
+5 +4 802 802
+4 * 802
+3 * 802 0 802
cfn=(106)
calls=802 0x40325e 113 
* * 4812 2406 1604 1 0 0 1
+5 * 802
+3 * 802 802
+4 * 802 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(108)
calls=802 0x403a98 565 
* * 20050 8020 6416 2 0 0 2
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(112)
calls=802 0x403a68 547 
* * 20050 8020 6416
+5 * 802
+3 * 802
+3 * 802
+3 * 802
+3 * 802 0 802
cfi=(11)
cfn=(114)
calls=802 0x403ac9 -60 
* * 451490 152196 148190 7 0 34 7 0 34 16984 969 1600
+5 -3 802 802
+4 * 802 0 802
+4 * 802
jump=802 +28 +4 
* * 
+28 +4 802
+4 * 802 802
+1 * 802 802
+2 * 802 802
+2 * 802 802
+1 * 802 802

fn=(188)
0x403d98 171 810 0 810 1 0 0 1
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 * 810 0 810
+4 +2 810 810
+5 * 810 0 0 0 0 0 0 0 0 810 8
+2 +1 810 810
+4 * 810 810
+4 * 810 810
+4 * 810
+3 * 810
+3 * 810 0 810
cfi=(5)
cfn=(190)
calls=810 0x40452a -65 
* * 111326 29810 18374 2 1 0 2 1 0 25082 110 1620
+5 +1 810 810
+1 * 810 810

fn=(22)
0x404236 167 810 0 810 1 0 0 1
+1 * 810
+3 * 810
+4 * 810 0 810 1 0 0 1
+4 * 810 0 810
+4 0 810 810
+5 0 810 0 0 0 0 0 0 0 0 810
+2 0 810 810
+4 0 810 810
+4 0 810
+5 0 810
+3 0 810
+3 0 810 0 810
fi=(6)
cfi=(5)
cfn=(26)
calls=810 0x404730 99 
* 0 274750 46056 48011 24 29 20 24 29 20 41652 1027 1620
+5 0 810
fi=(6)
jump=810 +7 0 
* 0 
+7 0 810 810
+1 0 810 810

fn=(42)
0x403ba4 565 802 0 802 1 0 0 1
+1 * 802
+3 * 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+4 * 802 0 802
+4 * 802
+4 * 802 0 0 1 0 0 1
+4 * 802
+3 * 802
+3 * 802 0 802
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=802 0x404468 726 
* * 8020 4010 3208 1 0 0 1
+5 * 802 802
+4 * 802 802
+1 * 802 802

fn=(46)
0x403b74 547 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+3 * 802 0 802
+4 * 802
+4 * 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfi=(10)
cfn=(44)
calls=802 0x404468 726 
* * 8020 4010 3208
+5 * 802 802
+4 * 802 802
+1 * 802 802

fn=(86)
0x403a0a 134 802 0 802
+1 * 802
+3 * 802 0 802
+1 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=802 0x4042e2 -45 
* * 28872 10426 11228 5 0 0 5
+5 +1 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802 1 0 0 1
cfn=(94)
calls=802 0x40432a +43 
* * 274758 54494 49912 22 7 35 22 7 35 37067 1224 1604
+5 * 802
jump=802 +28 * 
* * 
+28 * 802
+4 * 802 802
+1 * 802 802
+1 * 802 802

fn=(88)
0x4042e2 90 802 0 802 1 0 0 1
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 +1 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802 1 0 0 1
cfi=(4)
cfn=(90)
calls=802 0x4047b2 +24 
* * 14436 4812 5614 3 0 0 3
+5 * 802 802
+4 * 802 0 802
+7 * 802 802
+4 * 802 0 802
+8 * 802 802
+4 * 802 0 802
+8 +1 802 802
+1 * 802 802

fn=(156)
0x4031ec 159 802 0 802 1 0 0 1
+1 * 802
+3 * 802 0 802
+1 * 802
+4 * 802 0 802
+4 +2 802 802
+4 * 802 802 0 1 0 0 1
+4 * 802
+3 * 802 802
+4 * 802 802
+3 * 802
+3 * 802
+3 * 802
+4 * 802
+3 * 802 802
+4 * 802 802
+3 -1 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(158)
calls=802 0x403ce6 +11 
* * 124608 34852 22568 22 5 0 22 5 0 26062 187 1604
+5 +1 802 802
+4 * 802
+3 * 802 0 802
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=802 0x4031b8 -82 
* * 18446 6416 6416 1 0 0 1
+5 * 802
jump=802 +28 * 
* * 
+28 * 802
+4 * 802 802
+1 * 802 802
+1 * 802 802

fn=(172)
0x4031b8 79 802 0 802 1 0 0 1
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 802
+4 * 802
+3 * 802 0 802
cfi=(4)
cfn=(174)
calls=802 0x403ccc +42 
* * 11228 4010 4010
+5 * 802 802
+1 * 802 802

fn=(202)
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1636 0 1636 1 0 0 1
+1 * 1636
+3 * 1636 0 1636
+4 +1 1636 1636
+4 * 1636 1636 0 0 2 0 0 2
+4 * 1636
+3 * 1636 1636
+4 * 1636 1636
+3 * 1636
+3 * 1636
+3 * 1636
+4 * 1636 1636
+1 * 1636 1636

fn=(106)
0x40325e 113 1628 0 1628 1 0 0 1
+1 * 1628
+3 * 1628 0 1628
+4 +1 1628 1628
+4 * 1628 1628
+1 * 1628 1628

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 850 0 850 1 0 0 1
+1 * 850
+3 * 850
+4 * 850 0 850
+4 +1 850 850
+4 * 850
+3 * 850 0 850 1 0 0 1
cfi=(13)
cfn=(64)
calls=850 -33 -66 
* * 5100 2550 1700
+5 * 850 850
+1 * 850 850

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 1604 0 1604
+1 * 1604
+3 * 1604
+4 * 1604 0 1604
+4 +1 1604 1604
+4 * 1604
+3 * 1604 0 1604
cfi=(13)
cfn=(68)
calls=1604 0x404f1a -58 
* * 25664 9624 8020 2 0 1 2 0 1
+5 * 1604 1604
+1 * 1604 1604

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 17 0 0 17 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 802 0 802
+1 * 802
+3 * 802 0 802
+1 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +10 802 802
+4 * 802
+3 * 802 0 802
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=802 0x404bc6 288 
* * 12030 4812 4010 3 0 0 3
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(122)
calls=802 0x404bc6 288 
* * 12030 4812 4010
+5 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=802 0x404be0 -36 
* * 375300 125730 120922 4 0 34 4 0 34 16984 969 1600
+5 +1 802
+4 * 802 802
+1 * 802 802
+1 * 802 802

fn=(128)
0x404878 277 850 0 850
+1 * 850
+3 * 850
+4 * 850 0 850 1 0 0 1
+4 +1 850 850
+4 * 850
+3 * 850 0 850
cfi=(13)
cfn=(130)
calls=850 -33 -66 
* * 5100 2550 1700 0 0 1 0 0 1
+5 * 850 850
+1 * 850 850

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1604 0 1604
+1 * 1604
+3 * 1604
+4 * 1604 0 1604
+4 +1 1604 1604
+4 * 1604
+3 * 1604 0 1604
cfi=(13)
cfn=(134)
calls=1604 0x404e98 -58 
* * 25664 9624 8020 2 0 0 2
+5 * 1604 1604
+1 * 1604 1604

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +8 802 0 802
+4 +3 802 802
+4 * 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=802 0x404eb5 -22 
* * 288684 96858 91248 1 0 34 1 0 34 16984 969 1600
+5 +1 802 802
+1 * 802 802

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 17 1 0 17 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1604 0 1604 1 0 0 1
+1 * 1604
+3 * 1604
+4 * 1604 0 1604
+4 +1 1604 1604
+4 * 1604
+3 * 1604 0 1604
cfi=(13)
cfn=(124)
calls=1604 0x404d36 -77 
* * 9624 4812 3208 2 0 0 2
+5 * 1604 1604
+1 * 1604 1604

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1604 0 1604 1 0 0 1
+1 * 1604
+3 * 1604
+4 * 1604 0 1604 1 0 0 1
+4 +1 1604 1604
+4 * 1604
+3 * 1604 0 1604
cfi=(13)
cfn=(58)
calls=1604 0x404d8f -77 
* * 9624 4812 3208 1 0 0 1
+5 * 1604 1604
+1 * 1604 1604

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 818 0 818
+1 * 818
+3 * 818
+4 * 818 0 818 1 0 0 1
+4 * 818 0 818
+4 * 818 0 818
+4 +2 818 818
+4 * 818 818
+4 * 818
+3 * 818
+3 * 818
+4 * 818 0 818
+4 +1 818 818
+5 * 818 0 0 0 0 0 0 0 0 818
jcnd=8/818 +33 +2 
* * 
+2 +1 810 810
+4 * 810
+8 * 810 810
+4 * 810 810
+4 * 810
+3 * 810 0 0 1 0 0 1
+3 * 810 0 810 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=810 0x3877c83840 0 
* * 267350 88352 86737 11 2 19 11 2 19 16266 1000 805 200
* * 810 810 0 1 1 0 1 1 0 0 0 810
+5 +1 818 818
+4 * 818
+8 * 818 818
+4 * 818
+3 +1 818 818
+1 * 818 818

fn=(140)
0x404eb5 368 818 0 818
+1 * 818
+3 * 818
+4 * 818 0 818 1 0 0 1
+4 * 818 0 818
+4 * 818 0 818 0 0 1 0 0 1
+4 +2 818 818
+4 * 818 818
+4 * 818
+3 * 818
+3 * 818
+4 * 818 0 818
+4 +1 818 818
+5 * 818 0 0 0 0 0 0 0 0 818
jcnd=8/818 +33 +2 
* * 
+2 +1 810 810
+4 * 810
+8 * 810 810
+4 * 810 810
+4 * 810
+3 * 810
+3 * 810 0 810
cob=(2)
cfi=(9)
cfn=(78)
calls=810 0x3877c83840 0 
* * 267350 88352 86737 0 0 35 0 0 35 16266 974 805
* * 810 810 0 0 0 0 0 0 0 0 0 810
+5 +1 818 818
+4 * 818
+8 * 818 818
+4 * 818
+3 +1 818 818
+1 * 818 818

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 802 0 802
+1 * 802
+3 * 802
+4 * 802 0 802 1 0 0 1
+4 * 802 0 802
+4 * 802 0 802
+4 +8 802 0 802
+4 +3 802 802
+4 * 802 802
+4 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(74)
calls=802 0x404f37 -22 
* * 288684 96858 91248 14 3 3 14 3 3 16984 996 1600 200
+5 +1 802 802
+1 * 802 802

fn=(126)
0x404be0 424 802 0 802
+1 * 802
+3 * 802 0 802
+2 * 802 0 802
+1 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +4 802 802
+4 * 802
+3 * 802 0 802
cfn=(128)
calls=802 0x404878 277 
* * 12030 4812 4010 1 0 0 1
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(132)
calls=802 0x404d44 277 
* * 20050 7218 6416 2 0 0 2
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(132)
calls=802 0x404d44 277 
* * 20050 7218 6416
+5 * 802
+3 * 802
+3 * 802
+3 * 802 0 802
cfn=(138)
calls=802 0x404d5e -49 
* * 300714 100868 96060 1 0 34 1 0 34 16984 969 1600
+5 +1 802
+4 * 802 802
+1 * 802 802
+2 * 802 802
+1 * 802 802

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 802 0 802
+1 * 802
+3 * 802 0 802
+1 * 802
+4 * 802 0 802 1 0 0 1
+4 * 802 0 802
+4 * 802 0 802
+4 +10 802 802
+4 * 802
+3 * 802 0 802
cfn=(56)
calls=802 0x404c38 288 
* * 12030 4812 4010 3 0 0 3
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(56)
calls=802 0x404c38 288 
* * 12030 4812 4010
+5 * 802 802
+4 * 802
+3 * 802
+3 * 802 0 802
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=802 0x404c52 -36 
* * 375300 125730 120922 20 3 4 20 3 4 16984 996 1600 200
+5 +1 802
+4 * 802 802
+1 * 802 802
+1 * 802 802

fn=(60)
0x404c52 424 802 0 802
+1 * 802
+3 * 802 0 802
+2 * 802 0 802
+1 * 802
+4 * 802 0 802
+4 * 802 0 802
+4 * 802 0 802
+4 +4 802 802
+4 * 802
+3 * 802 0 802
cfn=(62)
calls=802 0x40492d 277 
* * 12030 4812 4010 2 0 0 2
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802 1 0 0 1
cfn=(66)
calls=802 0x404d9d 277 
* * 20050 7218 6416 2 0 1 2 0 1
+5 * 802
+3 * 802 802
+4 * 802
+3 * 802 0 802
cfn=(66)
calls=802 0x404d9d 277 
* * 20050 7218 6416
+5 * 802
+3 * 802
+3 * 802
+3 * 802 0 802
cfn=(72)
calls=802 0x404db7 -49 
* * 300714 100868 96060 15 3 3 15 3 3 16984 996 1600 200
+5 +1 802
+4 * 802 802
+1 * 802 802
+2 * 802 802
+1 * 802 802

fn=(282)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 17 0 0 17 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(10)
fn=(136)
0x404ffe 790 1604 0 1604 1 0 0 1
+1 * 1604
+3 * 1604 0 1604
+4 +1 1604 1604
+4 * 1604 1604
+1 * 1604 1604

fn=(44)
0x404468 726 1604 0 1604
+1 * 1604
+3 * 1604 0 1604
+4 * 1604 0 1604
+4 * 1604 1604
+4 * 1604 1604
+3 * 1604 1604
+4 * 1604 0 1604 1 0 0 1
+3 * 1604 1604
+1 * 1604 1604

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1604 0 1604 1 0 0 1
+1 * 1604
+3 * 1604 0 1604
+4 +1 1604 1604
+4 * 1604 1604
+1 * 1604 1604

fn=(110)
0x404380 726 1604 0 1604 1 0 0 1
+1 * 1604
+3 * 1604 0 1604
+4 * 1604 0 1604
+4 * 1604 1604
+4 * 1604 1604
+3 * 1604 1604
+4 * 1604 0 1604
+3 * 1604 1604
+1 * 1604 1604

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 810 0 810 1 0 0 1
+1 * 810
+3 * 810 0 810
+4 * 810 0 810
+4 * 810 810
+1 * 810 810

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 810 0 810 1 0 0 1
+1 * 810
+3 * 810 0 810
+4 * 810 0 810 1 0 0 1
+4 * 810 810
+1 * 810 810

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 810 0 810 1 0 0 1
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 +4 810 810
+4 * 810 810
+4 * 810
+3 * 810
+3 * 810 0 810
cfn=(184)
calls=810 0x40454c -14 
* * 4860 1620 2430 1 0 0 1
+5 +2 810 810
+1 * 810 810

fn=(150)
0x40326c 148 810 0 810
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 * 810 0 810
+4 +3 810 810 0 1 0 0 1
+4 * 810 810
+4 * 810
+3 * 810
+3 * 810 0 810
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=810 0x403d1a -29 
* * 14580 4860 5670 3 0 0 3
+5 +1 810 810
+1 * 810 810

fn=(180)
0x40334a 148 810 0 810
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 * 810 0 810
+4 +3 810 810
+4 * 810 810
+4 * 810
+3 * 810
+3 * 810 0 810
cfn=(182)
calls=810 0x403dcc -29 
* * 14580 4860 5670 2 0 0 2
+5 +1 810 810
+1 * 810 810

fn=(152)
0x403d1a 122 810 0 810 1 0 0 1
+1 * 810
+3 * 810
+4 * 810 0 810
+4 * 810 0 810
+4 +4 810 810
+4 * 810 810
+4 * 810
+3 * 810
+3 * 810 0 810
cfn=(154)
calls=810 0x4044f8 -14 
* * 4860 1620 2430 2 0 0 2
+5 +2 810 810
+1 * 810 810

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2669 456 464 0 6 9 0 6 9 395 43 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 17 3 0 17 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1106 302 196 2 0 0 2 0 0 210 15 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3447 701 657 16 7 6 16 7 6 552 54 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 0 1 0 0 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1083 292 192 1 0 0 1 0 0 205 8 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 1471 1471 0 1 0 0 1
+6 0 1471
+2 0 1471 0 0 0 0 0 0 0 0 1471 33
+2 0 1471 1471

fn=(38) _int_malloc
0x3877c79a00 0 1620 0 1620 1 0 0 1
+2 0 1620
+3 0 1620 0 1620
+2 0 1620 0 1620
+2 0 1620 0 1620 0 0 1 0 0 1
+2 0 1620
+3 0 1620 0 1620
+1 0 1620 0 1620
+1 0 1620
+4 0 1620
+4 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620
+4 0 1620
+6 0 1620
+3 0 1620
+4 0 1620
+4 0 1620
+4 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620 1620 0 1 1 0 1 1
+7 0 1620 0 0 0 0 0 0 0 0 1620 5
jcnd=1498/1620 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 149 149
+6 0 149
+4 0 149
+2 0 149 0 0 0 0 0 0 0 0 149
+6 0 149
+3 0 149
+4 0 149 149
+1 0 149 149
+1 0 149 149
+2 0 149 149
+2 0 149 149
+2 0 149 149
+2 0 149 149
-14 0 1471
+4 0 1471 1471
+1 0 1471 1471
+1 0 1471 1471
+2 0 1471 1471
+2 0 1471 1471
+2 0 1471 1471
+2 0 1471 1471
+7 0 1515
+7 0 1515 0 0 1 0 0 1 0 0 1515 7
jcnd=612/1515 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 12 0 0 12
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 612 0 0 1 0 0 1
+3 0 612
+4 0 612
+4 0 612 0 0 1 0 0 1 0 0 612
jcnd=612/612 0x3877c7a1a4 0 
* 0 
+30 0 612 612
+6 0 612
+5 0 612 0 0 0 0 0 0 0 0 612 1
jcnd=611/612 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 935 255 198 8 1 0 8 1 0 195 28
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1514 0 0 1 0 0 1
+3 0 1514
+3 0 1514
+3 0 1514
+4 0 1514
+3 0 1514
+4 0 1514 0 1514
+5 0 1514
+3 0 1514 0 1514
+4 0 1514 0 1514
+4 0 1514 0 1514
+5 0 1514
+3 0 1514
+3 0 1514
+3 0 1514
+3 0 1514
+4 0 1514
+4 0 1514 0 0 1 0 0 1
+4 0 1514 0 1514
+4 0 1514
+4 0 1514 0 1514
+5 0 1514 0 1514
+5 0 1514
+3 0 1514
+3 0 1514 0 1514
+5 0 1514
+5 0 1514
+3 0 1514 0 1514
+4 0 1514 0 1514
+4 0 1514
+6 0 1514 0 1514
+4 0 1514 0 1514
+5 0 1514 0 0 1 0 0 1
+3 0 1514
+3 0 1514
+3 0 1514
jump=1514 +87 0 
* 0 
+8 0 718
+3 0 718
+4 0 718
+2 0 718
+2 0 718
+3 0 718
+3 0 718
+3 0 718
+2 0 718
+2 0 718
+5 0 718
+2 0 718 718 0 0 1 0 0 1
+4 0 718
+3 0 718
+4 0 718 0 718
+4 0 718 0 718
+8 0 718
+7 0 718 0 718
+4 0 718 0 718 0 0 1 0 0 1
+4 0 718 0 718
+4 0 718 0 0 0 0 0 0 0 0 718
-38 0 963
+3 0 963
+4 0 963 0 963
+4 0 963 0 963
+8 0 963
+7 0 963 0 963
+4 0 963 0 963
+4 0 963 0 963
+4 0 963 0 0 0 0 0 0 0 0 963
+6 0 3196 3196 0 1 0 0 1
+4 0 3196
+3 0 3196 0 0 0 0 0 0 0 0 3196 353
jcnd=1233/3196 0x3877c79ef0 0 
* 0 
+6 0 1963 1963
+4 0 1963 1963
+4 0 1963
+4 0 1963 0 0 0 0 0 0 0 0 1963
+6 0 1963 1963 0 1 0 0 1
+7 0 1963 0 0 0 0 0 0 0 0 1963
+6 0 1963
+4 0 1963
+7 0 1963 0 0 0 0 0 0 0 0 1963 10
jcnd=877/1963 +11 0 
* 0 
+2 0 1086
+3 0 1086 0 0 0 0 0 0 0 0 1086 194
jcnd=866/1086 0x3877c79e28 0 
* 0 
+6 0 1725
+3 0 1725 0 1725
+4 0 1725 0 1725
+5 0 1725 0 0 0 0 0 0 0 0 1725 23
jcnd=44/1725 0x3877c7a090 0 
* 0 
+6 0 1681
+7 0 1681 0 0 0 0 0 0 0 0 1681 275
jcnd=718/1681 0x3877c79c50 0 
* 0 
+6 0 963 0 0 1 0 0 1
+3 0 963
+4 0 963
+4 0 963 0 0 0 0 0 0 0 0 963 9
jcnd=387/963 0x3877c79db0 0 
* 0 
+6 0 576
+3 0 576
+4 0 576
+2 0 576
+2 0 576
+3 0 576
+3 0 576
+8 0 576
+3 0 576
+2 0 576
+2 0 576
+4 0 576 576 0 0 2 0 0 2
+4 0 576
+3 0 576 0 0 1 0 0 1 0 0 576 7
jcnd=576/576 0x3877c79e15 0 
* 0 
-36 0 387
+2 0 387
+2 0 387
+3 0 387
+3 0 387
+8 0 387
+3 0 387
+2 0 387
+2 0 387
+4 0 387 387
+4 0 387
+3 0 387 0 0 0 0 0 0 0 0 387
jcnd=387/387 0x3877c79e15 0 
* 0 
0x3877c79db0 0 387 0 0 1 0 0 1
+3 0 387
+4 0 387
+4 0 387 0 0 0 0 0 0 0 0 387
+2 0 387
+3 0 387 0 0 1 0 0 1
+7 0 387
jump=387 0x3877c79d18 0 
* 0 
+78 0 963 0 963
+4 0 963 0 963
+4 0 963
+3 0 963
jump=963 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 227
jcnd=443/866 0x3877c79ce1 0 
* 0 
+6 0 423 423
+5 0 423 0 0 0 0 0 0 0 0 423 5
jcnd=185/423 0x3877c79ce1 0 
* 0 
+6 0 238 0 0 1 0 0 1
+3 0 238
+3 0 238
+3 0 238
+7 0 238 0 238
+4 0 238 0 238
+4 0 238
+3 0 238 0 238
+4 0 238 0 238 0 0 18 0 0 18
+4 0 238 0 238
+4 0 238 0 0 0 0 0 0 0 0 238 4
jcnd=10/238 +18 0 
* 0 
+2 0 228 0 228 0 0 16 0 0 16
+8 0 228 0 228
+8 0 228
+7 0 228 0 228 1 0 0 1
+4 0 228
+3 0 228
+3 0 228
+3 0 228
+4 0 228
+3 0 228
+4 0 228
+3 0 228
+3 0 228
+4 0 228 0 228
+4 0 228 0 228
+4 0 228
+4 0 228
+3 0 228 0 228
cfn=(104)
calls=228 0x3877c77180 0 
* 0 912 456 0 0 0 0 0 0 0 228
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 238
+3 0 238
jump=238 0x3877c79ae3 0 
* 0 
+55 0 1233 0 0 1 0 0 1
+7 0 1233
+3 0 1233 0 0 0 0 0 0 0 0 1233 8
jcnd=596/1233 0x3877c7a0b0 0 
* 0 
+6 0 1201 1201 0 1 0 0 1
+4 0 1201
+3 0 1201
+3 0 1201
+2 0 1201
+4 0 1201
+3 0 1201
+3 0 1201
+2 0 1201
+2 0 1201
+2 0 1201
+2 0 1201 1201 0 0 1 0 0 1
+8 0 1201
+5 0 1201
+5 0 1201
+2 0 1201 0 0 0 0 0 0 0 0 1201
-2 0 465
+2 0 465 0 0 0 0 0 0 0 0 465
+2 0 1666
+2 0 1666 0 0 0 0 0 0 0 0 1666 31
jcnd=1018/1666 +64 0 
* 0 
+2 0 648
+8 0 648
+3 0 648
+3 0 648 0 0 0 0 0 0 0 0 648
-6 0 358
+3 0 358
+3 0 358 0 0 0 0 0 0 0 0 358 1
+2 0 1006
+2 0 1006 1006 0 0 1 0 0 1
+8 0 1006
+2 0 1006 0 0 0 0 0 0 0 0 1006 19
jcnd=358/1006 -20 0 
* 0 
+2 0 648
+2 0 648
+5 0 648
+3 0 648
+3 0 648
+2 0 648
+2 0 648
+5 0 648 0 0 0 0 0 0 0 0 648 1
jcnd=1/648 +14 0 
* 0 
+2 0 647
+2 0 647
+4 0 647
+2 0 647
+2 0 647 0 0 0 0 0 0 0 0 647 2
jcnd=645/647 -8 0 
* 0 
-8 0 7414
+4 0 7414
+2 0 7414
+2 0 7414 0 0 0 0 0 0 0 0 7414 306
jcnd=5920/7414 -8 0 
* 0 
-2 0 1018 0 0 1 0 0 1
+2 0 1018 0 0 0 0 0 0 0 0 1018 24
jcnd=849/1018 -8 0 
* 0 
+2 0 1666 1666 0 0 6 0 0 6
+4 0 1666 0 0 1 0 0 1
+3 0 1666 0 0 0 0 0 0 0 0 1666 508
jcnd=1201/1666 0x3877c7a1cf 0 
* 0 
+6 0 465
+2 0 465
+4 0 465
+2 0 465
+2 0 465
+2 0 465 0 465
+8 0 465
jump=465 0x3877c79f30 0 
* 0 
0x3877c7a090 0 44 0 0 1 0 0 1
+7 0 44 0 44
+6 0 44
+3 0 44 0 0 0 0 0 0 0 0 44
jcnd=44/44 0x3877c79ace 0 
* 0 
+16 0 596 596
+4 0 596
+4 0 596
+2 0 596
+5 0 596 596 0 1 2 0 1 2
+4 0 596
+3 0 596 0 0 0 0 0 0 0 0 596 6
jcnd=564/596 0x3877c79f00 0 
* 0 
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 2
+6 0 32
+3 0 32 32
+4 0 32 32
+4 0 32
+3 0 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 0x3877c7a650 0 
* 0 
+26 0 32 0 0 1 0 0 1
+3 0 32 32
+4 0 32
+3 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 2
+6 0 32 32
+8 0 32 0 32
+4 0 32 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32 0 1 0 0 1
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32 32
jcnd=32/32 0x3877c7a659 0 
* 0 
+6 0 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=16/32 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 612 0 0 1 0 0 1
+3 0 612 0 612
+4 0 612
jump=612 0x3877c79b99 0 
* 0 
+36 0 1201 1201 0 1 3 0 1 3
+4 0 1201 1201 0 0 1 0 0 1
+4 0 1201
+3 0 1201 1201
+4 0 1201
+4 0 1201
+3 0 1201
+3 0 1201 1201
+4 0 1201 0 0 0 0 0 0 0 0 1201
+6 0 1201 1201
+4 0 1201 0 0 0 0 0 0 0 0 1201
+6 0 1201 1201 0 1 0 0 1
+8 0 1201 0 1201
+4 0 1201 0 1201
+4 0 1201 0 0 0 0 0 0 0 0 1201 24
jcnd=269/1201 +38 0 
* 0 
+2 0 932 932 0 0 1 0 0 1
+4 0 932
+3 0 932 0 0 0 0 0 0 0 0 932
+2 0 932 932
+5 0 932 0 0 0 0 0 0 0 0 932
+6 0 932 932
+4 0 932 0 932
+4 0 932 932
+4 0 932 0 932
+4 0 932
+4 0 932 0 0 0 0 0 0 0 0 932
-4 0 269
+4 0 269 0 0 0 0 0 0 0 0 269 4
jcnd=24/269 0x3877c7a2e3 0 
* 0 
+6 0 1177 1177
+4 0 1177 1177 0 1 0 0 1
+4 0 1177 0 0 0 0 0 0 0 0 1177
+6 0 1177
+4 0 1177
+7 0 1177 0 1177 0 0 10 0 0 10
+4 0 1177 0 1177
+4 0 1177 0 1177
+4 0 1177 0 1177
+4 0 1177 0 0 0 0 0 0 0 0 1177 5
jcnd=564/1177 +7 0 
* 0 
+2 0 613 0 613
+5 0 613
+7 0 613 0 0 0 0 0 0 0 0 613 1
jcnd=246/613 +18 0 
* 0 
-7 0 564
+7 0 564 0 0 0 0 0 0 0 0 564 69
jcnd=458/564 +18 0 
* 0 
+2 0 473 0 473 0 0 7 0 0 7
+8 0 473 0 473 1 0 0 1
+8 0 473
+7 0 473 0 473 0 0 3 0 0 3
+4 0 473
+3 0 473
+3 0 473
+4 0 473
+3 0 473
+4 0 473
+3 0 473
+3 0 473
+4 0 473 0 473
+4 0 473 0 473 0 0 1 0 0 1
+4 0 473
jump=473 +71 0 
* 0 
-46 0 720
+7 0 720 0 720
+4 0 720
+3 0 720
+3 0 720
+4 0 720
+3 0 720
+4 0 720
+3 0 720
+3 0 720
+4 0 720 0 720
+4 0 720 0 720 0 0 1 0 0 1
+4 0 720
jump=720 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 40
+7 0 40 0 40
+6 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 2
jcnd=40/40 +7 0 
* 0 
+7 0 1233
+4 0 1233 0 0 1 0 0 1
+3 0 1233
+3 0 1233 0 1233
cfn=(104)
calls=1233 0x3877c77180 0 
* 0 4932 2466 0 1 0 0 1 0 0 1233 33
+5 0 1233
+3 0 1233
jump=1233 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 32 32 0 1 0 0 1
+4 0 32
jump=32 0x3877c7a10e 0 
* 0 
+5 0 32 32
+5 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1620 0 1620 1 0 0 1
+5 0 1620 0 1620
+5 0 1620
+3 0 1620 0 1620
+5 0 1620
+4 0 1620 1620 0 0 1 0 0 1
+7 0 1620 1620 0 0 1 0 0 1
+3 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620 1620 0 0 1 0 0 1
+7 0 1620 1620 0 1 1 0 1 1
+4 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
+2 0 1620 1620 0 0 1 0 0 1
+3 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 +97 0 
* 0 
+18 0 1620
+3 0 1620
+3 0 1620 0 1620
cfn=(38)
calls=1620 0x3877c79a00 0 
* 0 383865 50317 62186 44 35 60 44 35 60 59021 2257
+5 0 1620
+3 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
+2 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
+2 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620 20
+2 0 1620 1620
+7 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 +13 0 
* 0 
+13 0 1620 0 1620
+2 0 1620 0 0 0 0 0 0 0 0 1620 28
+6 0 1620
+3 0 1620 1620
+4 0 1620 1620
+5 0 1620 1620
+5 0 1620
+4 0 1620 1620
+1 0 1620 0 0 1 0 0 1
+5 0 1620 1620 0 0 1 0 0 1
+7 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 +14 0 
* 0 
+14 0 1620 0 1620 1 0 0 1
+3 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620
jump=1620 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1620 0 1620 1 0 0 1
+2 0 1620
+3 0 1620
+3 0 1620 0 1620
+2 0 1620
+3 0 1620 0 1620
+1 0 1620
+3 0 1620 0 1620
+1 0 1620
+3 0 1620
+4 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620
+4 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620 4
jcnd=10/1620 0x3877c838d1 0 
* 0 
+2 0 1610
+3 0 1610
+3 0 1610
+3 0 1610
+3 0 1610
+3 0 1610 0 0 0 0 0 0 0 0 1610
jcnd=1610/1610 +41 0 
* 0 
+41 0 1610 0 0 1 0 0 1
+3 0 1610 0 0 0 0 0 0 0 0 1610
jcnd=1610/1610 0x3877c839c0 0 
* 0 
+24 0 1610
+3 0 1610
+4 0 1610
+3 0 1610
+3 0 1610
+3 0 1610
+3 0 1610
+3 0 1610 0 0 0 0 0 0 0 0 1610 821
jcnd=814/1610 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 806
+10 0 806 806 0 0 1 0 0 1
+3 0 806
+4 0 806 0 806
+3 0 806
+4 0 806
+4 0 806 0 0 0 0 0 0 0 0 806
jcnd=806/806 -18 0 
* 0 
-18 0 2474 2474
+3 0 2474
+4 0 2474 0 2474
+3 0 2474
+4 0 2474
+4 0 2474 0 0 0 0 0 0 0 0 2474 8
jcnd=1668/2474 -18 0 
* 0 
+2 0 1620
+4 0 1620
+3 0 1620 1620
+1 0 1620 1620
+1 0 1620 1620
+2 0 1620 1620 0 1 0 0 1
+2 0 1620 1620
0x3877c839c0 0 1610 0 0 1 0 0 1
+3 0 1610
+3 0 1610
+3 0 1610
+4 0 1610 0 1610 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1610 0x3877c89b20 0 
* 0 443134 165324 162104 6 1 53 6 1 53 21172 1141 1610 200
+5 0 1610
jump=1610 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1620 1620 0 1 1 0 1 1
+7 0 1620 1620 0 0 1 0 0 1
+3 0 1620
+3 0 1620 0 0 1 0 0 1 0 0 1620
+6 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620 1620
+4 0 1620
+4 0 1620
+2 0 1620 0 0 0 0 0 0 0 0 1620
+2 0 1620
+2 0 1620
+7 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 +14 0 
* 0 
+14 0 1620
+2 0 1620
cfn=(170) _int_free
calls=1620 0x3877c78650 0 
* 0 173837 47134 28984 19 2 0 19 2 0 42439 305

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 2
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 7 7
+5 0 7
+3 0 7 7
+5 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+9 0 7 0 7
+4 0 7 0 7
+4 0 7 0 0 0 0 0 0 0 0 7 3
jcnd=7/7 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=16/20 +18 0 
* 0 
+2 0 4 0 4
+8 0 4 0 4
+8 0 4
+3 0 4 0 4
+4 0 4 0 4
+4 0 4
+4 0 4 0 4
+4 0 4 0 4
+4 0 4
+3 0 4
+3 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=2/4 0x3877c75f78 0 
* 0 
-29 0 16
+3 0 16 0 16
+4 0 16 0 16
+4 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 6
jcnd=5/16 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=10/13 +15 0 
* 0 
+2 0 3 3
+4 0 3
+3 0 3 0 0 0 0 0 0 0 0 3
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=7/20 0x3877c75e68 0 
* 0 
+6 0 13 0 13
+6 0 13
jump=13 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1620 0 1620 1 0 0 1
+2 0 1620 0 1620
+2 0 1620 0 1620
+2 0 1620
+3 0 1620 0 1620
+2 0 1620 0 1620
+1 0 1620 0 1620
+1 0 1620
+3 0 1620
+4 0 1620 1620
+4 0 1620 0 1620
+4 0 1620
+3 0 1620
+4 0 1620
+3 0 1620
+3 0 1620
+3 0 1620 0 0 1 0 0 1 0 0 1620
+6 0 1620
+4 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620
+4 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620 1620
+7 0 1620 0 0 0 0 0 0 0 0 1620 2
jcnd=1496/1620 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1496
+2 0 1496 0 0 0 0 0 0 0 0 1496
+6 0 1496 1496 0 1 0 0 1
+4 0 1496
+3 0 1496
+2 0 1496 0 0 0 0 0 0 0 0 1496
jcnd=1496/1496 0x3877c78a40 0 
* 0 
+6 0 1496 1496
+4 0 1496
+3 0 1496 0 0 0 0 0 0 0 0 1496
+6 0 1496 1496
+5 0 1496
+4 0 1496 0 0 0 0 0 0 0 0 1496
jcnd=1496/1496 0x3877c7907c 0 
* 0 
+6 0 1496 1496
+5 0 1496
+4 0 1496 0 0 0 0 0 0 0 0 1496
+6 0 1496
+4 0 1496 0 0 1 0 0 1 0 0 1496
+6 0 1496
+4 0 1496 1496
+7 0 1496 0 0 0 0 0 0 0 0 1496
+6 0 1496 1496
+6 0 1496
+2 0 1496 0 0 0 0 0 0 0 0 1496
+6 0 1496 1496
+4 0 1496 0 0 0 0 0 0 0 0 1496 3
jcnd=1493/1496 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3
jcnd=3/3 +15 0 
* 0 
+15 0 1496 1496 0 1 0 0 1
+4 0 1496 0 0 0 0 0 0 0 0 1496
+6 0 1496 1496 0 0 1 0 0 1
+6 0 1496 0 0 1 0 0 1 0 0 1496 69
jcnd=88/1496 0x3877c78a78 0 
* 0 
+6 0 1408 1408
+5 0 1408 1408
+5 0 1408 1408
+4 0 1408 0 0 0 0 0 0 0 0 1408
+6 0 1408 1408
+4 0 1408 0 0 0 0 0 0 0 0 1408
+6 0 1408 1408
+9 0 1408 0 1408
+4 0 1408 0 1408
+4 0 1408 0 0 0 0 0 0 0 0 1408 199
jcnd=719/1408 +16 0 
* 0 
+2 0 689 689
+5 0 689
+3 0 689 0 0 1 0 0 1 0 0 689 1
jcnd=1/689 0x3877c78ee4 0 
* 0 
+6 0 1408
+3 0 1408
+4 0 1408 1408
+4 0 1408 1408
+4 0 1408 0 0 0 0 0 0 0 0 1408
-12 0 88
+4 0 88 88
+4 0 88 88
+4 0 88 0 0 0 0 0 0 0 0 88
+6 0 1496
+7 0 1496 0 1496
+4 0 1496 0 1496
+4 0 1496 0 0 0 0 0 0 0 0 1496 29
jcnd=300/1496 +18 0 
* 0 
+2 0 1196 0 1196
+8 0 1196 0 1196
+8 0 1196 0 1196
+4 0 1196
+3 0 1196 0 1196 1 0 0 1
+4 0 1196
+4 0 1196 0 1196
+4 0 1196 0 1196
+4 0 1196
+7 0 1196 0 0 0 0 0 0 0 0 1196
jcnd=1196/1196 0x3877c78b20 0 
* 0 
-30 0 300 0 300
+4 0 300
+3 0 300 0 300
+4 0 300
+4 0 300 0 300
+4 0 300 0 300
+4 0 300
+7 0 300 0 0 0 0 0 0 0 0 300
jcnd=300/300 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1496 0 0 1 0 0 1
+5 0 1496 1496
+4 0 1496 1496
+7 0 1496 0 0 0 0 0 0 0 0 1496
jcnd=1496/1496 +16 0 
* 0 
+16 0 1496 0 1496
+5 0 1496 0 0 0 0 0 0 0 0 1496
+6 0 1496
+3 0 1496
jump=1496 0x3877c7878f 0 
* 0 
+10 0 88 0 88
+6 0 88 0 0 1 0 0 1
jump=88 0x3877c78885 0 
* 0 
0x3877c78b20 0 1496 1496 0 1 0 0 1
+4 0 1496
+2 0 1496 0 0 0 0 0 0 0 0 1496
+6 0 1496 1496
+7 0 1496 0 0 0 0 0 0 0 0 1496
jcnd=1496/1496 +15 0 
* 0 
+15 0 1496 0 1496 1 0 0 1
+4 0 1496 0 0 0 0 0 0 0 0 1496
+6 0 1496
+4 0 1496 1496
+1 0 1496 1496
+1 0 1496 1496
+2 0 1496 1496
+2 0 1496 1496
+2 0 1496 1496
+2 0 1496 1496
0x3877c78ee4 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+5 0 1 0 1
+4 0 1 1
+5 0 1 0 1 1 0 0 1
+4 0 1
jump=1 0x3877c78882 0 
* 0 
0x3877c7907c 0 1496 1496 0 1 1 0 1 1
+4 0 1496 0 0 1 0 0 1
+7 0 1496
+4 0 1496
+3 0 1496
+3 0 1496 0 0 0 0 0 0 0 0 1496
jcnd=1496/1496 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1610 0 0 1 0 0 1
+7 0 1610
+3 0 1610
+3 0 1610 1610 0 0 1 0 0 1
+4 0 1610
+4 0 1610 0 0 0 0 0 0 0 0 0 0 1610 200
jump=196 0x3877c89be8 0 
* 0 
jump=210 0x3877c89bd0 0 
* 0 
jump=200 0x3877c89bb8 0 
* 0 
jump=200 +11 0 
* 0 
jump=200 0x3877c89c48 0 
* 0 
jump=202 0x3877c89c30 0 
* 0 
jump=200 0x3877c89c18 0 
* 0 
jump=202 0x3877c89c00 0 
* 0 
+11 0 200 200
+3 0 200
+4 0 200
+4 0 200 200
+4 0 200
+4 0 200 0 200
+4 0 200
+9 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-40 0 19962 19962
+4 0 19962 0 19962
+4 0 19962 19962
+4 0 19962 0 19962
+4 0 19962 19962
+4 0 19962 0 19962 0 0 4 0 0 4
+4 0 19962 19962
+4 0 19962 0 19962
+4 0 19962
+4 0 19962
+4 0 19962 0 0 0 0 0 0 0 0 19962 1137
jcnd=1574/19962 0x3877c89c60 0 
* 0 
-32 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202
jcnd=10/202 0x3877c89c60 0 
* 0 
-24 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-16 0 202 202 0 1 0 0 1
+4 0 202 0 202
+4 0 202 0 0 1 0 0 1
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202 4
jcnd=10/202 0x3877c89c60 0 
* 0 
+6 0 19156
+4 0 19156 19156
+3 0 19156 0 19156 0 0 2 0 0 2
+3 0 19156 19156
+4 0 19156 0 19156 0 0 18 0 0 18
+4 0 19156 19156
+4 0 19156 0 19156 0 0 26 0 0 26
+4 0 19156 19156
+4 0 19156 0 19156 0 0 2 0 0 2
+4 0 19156
jump=19156 -80 0 
* 0 
-30 0 196 196
+3 0 196 0 196
+3 0 196 196
+4 0 196 0 196
+4 0 196 196
+4 0 196 0 196 0 0 1 0 0 1
+4 0 196 196
+4 0 196 0 196
+4 0 196
jump=196 -80 0 
* 0 
-24 0 210 210
+4 0 210 0 210
+4 0 210 210
+4 0 210 0 210
+4 0 210 210
+4 0 210 0 210
+4 0 210
jump=210 -80 0 
* 0 
-16 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
jump=200 -80 0 
* 0 
+8 0 200 200
+3 0 200
+4 0 200 0 0 1 0 0 1
+4 0 200
+4 0 200
jump=200 -39 0 
* 0 
+9 0 210
+3 0 210 0 0 0 0 0 0 0 0 210
+6 0 210 210
+3 0 210
+4 0 210
jump=210 -72 0 
* 0 
+8 0 196
+4 0 196 196
+3 0 196 0 0 0 0 0 0 0 0 196
+2 0 196
+4 0 196
jump=196 -99 0 
* 0 
+11 0 202 202 0 1 0 0 1
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b78 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b70 0 
* 0 
+9 0 202 202
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b68 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b60 0 
* 0 
+9 0 1610 0 1610 1 0 0 1
+3 0 1610 1610

totals: 14753751 6089654 3488015 240 107 146 240 107 146 413506 5814 9710 200
