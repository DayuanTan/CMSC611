version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1692


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2108649422 - 2109760312
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1304 0 0 1 0 0 1
+3 0 1304 0 0 0 0 0 0 0 0 1304
+2 0 1304
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1304 0x3877c7b8b0 0 
* 0 146211 37423 19125 21 5 0 21 5 0 35825 549
* 0 1304 1304 0 1 1 0 1 1 0 0 0 1304

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1304 0 1304 1 0 0 1
+1 0 1304
+5 0 1304
+3 0 1304 0 1304
+1 0 1304
+4 0 1304 0 0 1 0 0 1
+3 0 1304
+4 0 1304
+3 0 1304 0 1304 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1304 0x3877c7aa50 0 
* 0 352550 51016 51013 49 38 51 49 38 51 59076 2125
* 0 1304 1304 0 1 1 0 1 1 0 0 0 1304
+5 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 +96 0 
* 0 
+96 0 1304 0 0 1 0 0 1
+4 0 1304 1304
+1 0 1304 1304
+1 0 1304 1304

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 322 0 322 1 0 0 1
+1 * 322
+3 * 322
+4 * 322 0 322
+4 * 322 0 322
+4 +1 322 322
+4 * 322
+3 * 322 0 322
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=322 0x402d74 645 
* * 4186 1932 644
+5 * 322
+3 * 322 0 322
+3 +1 322 322
+6 * 322 0 322
+3 * 322 322
+6 * 322 0 322
+3 +1 322 322
+6 * 322 0 322 1 0 0 1
+3 * 322 322
+6 * 322 0 322
+3 +2 322 0 322
+7 * 322
jump=322 +86 * 
* * 
+2 +1 52325 52325
+3 * 52325
+3 * 52325 52325
+4 * 52325
+3 * 52325
+3 * 52325 0 52325
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=52325 0x402d9a 770 
* * 575575 261625 156975
+5 * 52325 52325
+4 * 52325 52325
+5 * 52325
+4 * 52325 0 52325
+5 +1 52325 52325
+3 * 52325
+3 * 52325 52325
+4 * 52325
+3 * 52325
+3 * 52325 0 52325
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=52325 0x402dba 770 
* * 575575 261625 156975 1 0 0 1
+5 * 52325 52325
+2 * 52325
+4 * 52325 52325
+5 * 52325
+4 * 52325 0 52325
+5 -2 52325 0 52325
+4 * 52325 52325
+3 * 52325
+3 * 52325 52325
+3 * 52325 0 0 0 0 0 0 0 0 52325 323
jcnd=52003/52325 -93 +1 
* * 
-9 * 322 322 0 1 0 0 1
+3 * 322
+3 * 322 322
+3 * 322 0 0 0 0 0 0 0 0 322
jcnd=322/322 -93 +1 
* * 
+2 +4 322 322
+3 * 322
+3 * 322
+4 * 322 322 0 1 0 0 1
+5 * 322
+4 * 322
+3 * 322 0 322
+5 +1 322 322
+3 * 322
+3 * 322
+4 * 322 322
+5 * 322
+4 * 322
+3 * 322 0 322
+5 +1 322 0 322
+7 * 322
jump=322 0x4016ee * 
* * 
+2 +1 52325 52325
+3 * 52325
+3 * 52325 52325
+4 * 52325
+3 * 52325 0 0 1 0 0 1
+3 * 52325 0 52325
cfi=(2)
cfn=(146)
calls=52325 0x402dba 770 
* * 575575 261625 156975
+5 * 52325 52325
+2 * 52325
+4 * 52325 52325
+5 * 52325 0 52325
+5 +1 52325 52325
+3 * 52325
+3 * 52325 52325
+4 * 52325
+3 * 52325
+3 * 52325 0 52325
cfi=(2)
cfn=(144)
calls=52325 0x402d9a 770 
* * 575575 261625 156975
+5 * 52325 52325
+4 * 52325 52325
+5 * 52325 0 52325
+5 +1 52325 52325
+5 * 52325 52325
+5 * 52325 52325
+5 * 52325
+4 * 52325 0 52325
+5 +1 52325 52325
+5 * 52325 52325
+5 * 52325 52325
+5 * 52325
+4 * 52325 0 52325
+5 -4 52325 0 52325
+4 * 52325 52325
+3 * 52325
+3 * 52325 52325
+3 * 52325 0 0 0 0 0 0 0 0 52325 323
jcnd=52003/52325 0x401672 +1 
* * 
-9 * 322 322 0 1 0 0 1
+3 * 322
+3 * 322 322
+3 * 322 0 0 0 0 0 0 0 0 322
jcnd=322/322 0x401672 +1 
* * 
+6 +6 322 322 0 1 0 0 1
+5 * 322 322
+5 * 322 0 322
+5 +2 322 322
+3 +1 322 0 322
+3 * 322 322
+5 * 322 322
+1 * 322 322

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 322
+7 * 322
+7 * 322
+3 * 322
+3 * 322 0 322
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=322 0x4030b2 310 
* * 338707 99179 93054 68 16 16 68 16 16 21370 1005 1286 160
+5 * 322
+7 * 322
+7 * 322
+3 * 322
+3 * 322 0 322
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=322 0x402ff4 310 
* * 339912 98546 91243 45 9 70 45 9 70 21775 1132 1286
+5 * 322 0 0 1 0 0 1
+7 * 322
+7 * 322
+3 * 322
+3 * 322 0 322
cfn=(142)
calls=322 0x401585 -52 
* * 5462730 2415000 1261274 8 0 0 8 0 0 105294 646
+5 * 322 0 322
+8 * 322 322
+6 * 322 0 322
+6 * 322
+7 * 322
+3 * 322 0 322
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=322 0x402df4 414 
* * 80548 25268 17997 33 6 0 33 6 0 8950 241 644
+5 * 322
+7 * 322
+3 * 322 0 322 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=322 0x402e74 414 
* * 84459 26724 19145 7 1 0 7 1 0 10060 32 644
+5 +2 322
+7 * 322
+7 * 322
+3 * 322
+3 * 322 0 322
cfi=(2)
cfn=(4)
calls=322 0x4030b2 310 
* * 338324 99149 92943 2 1 1 2 1 1 21334 626 1286
+5 * 322
+7 * 322
+7 * 322
+3 * 322
+3 * 322 0 322
cfi=(2)
cfn=(80)
calls=322 0x402ff4 310 
* * 338999 98488 91097 0 0 2 0 0 2 21634 722 1286
+5 * 322 322
+6 * 322 0 0 1 0 0 1
+7 * 322
+7 * 322 0 322
+6 * 322 322
+8 * 322
+3 * 322
+3 * 322 0 322
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=322 0x401719 -33 
* * 2530598 1053584 580405 4 0 0 4 0 0 52647 323
+5 * 322 0 322
+8 * 322 322
+6 * 322 0 322
+6 * 322
+7 * 322 0 0 1 0 0 1
+3 * 322 0 322
cfi=(2)
cfn=(148)
calls=322 0x402df4 414 
* * 80548 25268 17997 0 0 0 0 0 0 8950 235 644
+5 * 322
+7 * 322
+3 * 322 0 322
cfi=(2)
cfn=(178)
calls=322 0x402e74 414 
* * 84459 26724 19145 0 0 0 0 0 0 10060 26 644
+5 +2 322 322
+7 * 322
+3 * 322 0 322
cfi=(2)
cfn=(2)
calls=322 0x402d74 645 
* * 4186 1932 644
+5 * 322 322
+6 * 322
+3 * 322
+3 * 322
+3 * 322 322
+7 * 322
+3 * 322 0 0 1 0 0 1
+3 * 322 0 322
cfi=(2)
cfn=(144)
calls=322 0x402d9a 770 
* * 3542 1610 966
+5 * 322
+3 * 322
+7 * 322
+3 * 322
+3 * 322 0 322
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=322 0x402eda 901 
* * 33127 12220 9463 41 26 11 41 26 11 1493 77 47
+5 +1 322 322
+7 * 322
+3 * 322 0 322
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=322 0x402f54 645 
* * 4186 1932 644 0 1 0 0 1
+5 * 322 322
+6 * 322
+3 * 322
+3 * 322
+3 * 322 322
+7 * 322 0 0 1 0 0 1
+3 * 322
+3 * 322 0 322
cfi=(2)
cfn=(146)
calls=322 0x402dba 770 
* * 3542 1610 966
+5 * 322
+3 * 322
+7 * 322
+3 * 322
+3 * 322 0 322
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=322 0x402f7a 901 
* * 32914 12033 9308 19 34 37 19 34 37 1475 82 47
+5 +1 322 322
+7 * 322
+3 * 322 0 322
cfi=(2)
cfn=(10)
calls=322 0x402f54 645 
* * 4186 1932 644
+5 * 322 322
+6 * 322
+3 * 322
+3 * 322
+3 * 322 322 0 1 0 0 1
+7 * 322
+3 * 322
+3 * 322 0 322
cfi=(2)
cfn=(146)
calls=322 0x402dba 770 
* * 3542 1610 966
+5 * 322 322
+2 * 322
+4 * 322 322
+8 * 322 322
+8 * 322 0 322
+8 +1 322 322
+7 * 322
+3 * 322 0 322
cfi=(2)
cfn=(2)
calls=322 0x402d74 645 
* * 4186 1932 644
+5 * 322 322 0 1 0 0 1
+6 * 322
+3 * 322
+3 * 322
+3 * 322 322
+7 * 322
+3 * 322
+3 * 322 0 322
cfi=(2)
cfn=(144)
calls=322 0x402d9a 770 
* * 3542 1610 966
+5 * 322 322
+4 * 322 322
+8 * 322
+4 * 322 322
+8 * 322
+3 * 322 0 322
+8 +2 322 0 322
+7 -12 322 322
+8 * 322 322
+7 * 322 0 0 0 0 0 0 0 0 322 1
jcnd=1/322 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 322
+7 * 322
+3 * 322 0 322
cfi=(2)
cfn=(2)
calls=322 0x402d74 645 
* * 4186 1932 644 2 0 1 2 0 1
+5 * 322
+3 * 322 322
+7 * 322
+3 * 322 0 322
cfi=(2)
cfn=(2)
calls=322 0x402d74 645 
* * 4186 1932 644 0 1 0 0 1
+5 * 322
+3 * 322 0 0 0 0 0 0 0 0 322 2
+2 * 322 0 0 1 0 0 1
+5 * 322
jump=322 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 322
+2 * 322 0 0 0 0 0 0 0 0 322
jcnd=322/322 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 322 0 322
+1 * 322
+3 * 322
+4 * 322 0 322
+4 * 322 0 322
+4 * 322 0 322
+5 +1 322 322
+4 * 322
+3 * 322 0 322
cfi=(2)
cfn=(2)
calls=322 0x402d74 645 
* * 4186 1932 644
+5 * 322
+3 * 322 0 322
+3 +1 322 322 0 1 0 0 1
+6 * 322 0 322
+3 * 322 322
+6 * 322 0 322
+3 +2 322 0 322
+7 * 322
jump=322 +86 * 
* * 
+2 +1 52325 52325
+3 * 52325
+3 * 52325 52325
+4 * 52325
+3 * 52325
+3 * 52325 0 52325
cfi=(2)
cfn=(144)
calls=52325 0x402d9a 770 
* * 575575 261625 156975
+5 * 52325 52325
+4 * 52325 52325
+5 * 52325
+4 * 52325 0 52325
+5 +1 52325 52325
+3 * 52325
+3 * 52325 52325
+4 * 52325
+3 * 52325
+3 * 52325 0 52325
cfi=(2)
cfn=(146)
calls=52325 0x402dba 770 
* * 575575 261625 156975
+5 * 52325 52325
+2 * 52325
+4 * 52325 52325
+5 * 52325
+4 * 52325 0 52325
+5 -2 52325 0 52325
+4 * 52325 52325
+3 * 52325
+3 * 52325 52325
+3 * 52325 0 0 0 0 0 0 0 0 52325 323
jcnd=52003/52325 -93 +1 
* * 
-9 * 322 322 0 1 0 0 1
+3 * 322
+3 * 322 322
+3 * 322 0 0 0 0 0 0 0 0 322
jcnd=322/322 -93 +1 
* * 
+2 +4 322 322
+3 * 322
+3 * 322 0 0 1 0 0 1
+4 * 322 322
+5 * 322
+4 * 322
+3 * 322 0 322
+5 +1 322 322
+3 * 322
+3 * 322
+4 * 322 322
+5 * 322
+4 * 322
+3 * 322 0 322
+5 +1 322 322
+5 * 322 322
+5 * 322 322
+5 * 322 0 0 1 0 0 1
+4 * 322
+3 * 322 0 322
+5 +2 322 322
+3 +1 322 0 322
+3 * 322 322
+5 * 322 322
+1 * 322 322

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 644
+4 * 644
+3 * 644 0 644
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=644 0x4044cc -35 
* * 3220 1288 1288
+5 * 644 644
+1 * 644 644

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 644 0 644 1 0 0 1
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644 1 0 0 1
+4 +1 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=644 0x4049d4 -35 
* * 3864 1288 1932 1 0 0 1
+5 * 644 644
+1 * 644 644

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 644 0 644 1 0 0 1
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 644
+4 * 644
+3 * 644 0 644
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=644 0x404520 -35 
* * 3220 1288 1288
+5 * 644 644
+1 * 644 644

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 644 0 644 1 0 0 1
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=644 0x404a28 -35 
* * 3864 1288 1932 1 0 1 1 0 1
+5 * 644 644
+1 * 644 644

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644
+4 * 644 644
+4 * 644 644
+1 * 644 644

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 322 0 322
+1 * 322
+3 * 322
+4 * 322 0 322
+4 * 322 0 322
+4 * 322 0 322
+4 +1 322 322
+4 * 322 322
+4 * 322 322
+4 * 322
+3 * 322
+3 * 322 0 322
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=322 0x40406a -87 
* * 7728 2576 2898 0 20 12 0 20 12 322
+5 * 322 322
+1 * 322 322

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 644 0 644
+1 * 644
+3 * 644 0 644
+4 * 644 644
+4 * 644 644
+1 * 644 644

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 322 0 322
+1 * 322
+3 * 322
+4 * 322 0 322
+4 * 322 0 322
+4 * 322 0 322
+4 +1 322 322
+4 * 322 322
+4 * 322 322
+4 * 322
+3 * 322
+3 * 322 0 322
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=322 0x403df2 -87 
* * 7728 2576 2898 0 21 3 0 21 3 322 2
+5 * 322 322
+1 * 322 322

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288 0 1288
+4 +1 1288 1288
+4 * 1288 1288
+1 * 1288 1288

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288
+4 * 1288 0 1288
+4 +1 1288
+4 * 1288
+3 * 1288 0 1288 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1288 0x40500c 790 
* * 7728 3864 2576 1 0 0 1
+5 * 1288 1288
+3 * 1288 1288
+1 * 1288 1288

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 724 0 724
+1 * 724
+3 * 724 0 724
+4 +1 724 724
+4 * 724 724
+1 * 724 724

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288 0 1288
+4 +1 1288 1288 0 1 0 0 1
+4 * 1288 1288
+1 * 1288 1288

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 724 0 724
+1 * 724
+3 * 724 0 724 0 0 1 0 0 1
+4 +1 724 724
+4 * 724 724
+1 * 724 724

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288
+4 * 1288 0 1288
+4 +1 1288
+4 * 1288
+3 * 1288 0 1288
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1288 0x404ffe 790 
* * 7728 3864 2576 1 0 0 1
+5 * 1288 1288
+3 * 1288 1288
+1 * 1288 1288

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 644 0 644
+1 * 644
+3 * 644 0 644
+4 * 644 0 644
+4 * 644 644
+4 * 644 644
+1 * 644 644

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 652 0 652 1 0 0 1
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 * 652 0 652
+4 +2 652 652
+4 * 652
+3 * 652 0 652
cfn=(102)
calls=652 0x4048de +12 
* * 3912 1304 1304 1 0 0 1
+5 * 652 652
+4 * 652 0 0 1 0 0 1
+3 * 652
+2 * 652 0 0 0 0 0 0 0 0 652
jcnd=652/652 +7 +3 
* * 
+7 +3 652 652
+4 * 652
+4 * 652
+3 * 652 0 652
cob=(5)
cfi=(8)
cfn=(32)
calls=652 0x387e4bd0b0 0 
* * 187770 27571 25713 33 13 37 33 13 37 30556 1179 652
* * 652 652 0 0 0 0 0 0 0 0 0 652
+5 +1 652 652
+1 * 652 652

fn=(18)
0x404a28 81 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644 0 0 1 0 0 1
+4 * 644 0 644
+4 * 644 644
+1 * 644 644

fn=(92)
0x4049d4 81 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644
+4 * 644 0 644
+4 * 644 644
+1 * 644 644

fn=(196)
0x404520 86 644 0 644
+1 * 644
+3 * 644 0 644
+4 * 644 644
+1 * 644 644

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 652 0 652 1 0 0 1
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 * 652 0 652 1 0 0 1
+4 +2 652 652
+4 * 652
+3 * 652 0 652
cfn=(28)
calls=652 0x404992 +12 
* * 3912 1304 1304 1 0 0 1
+5 * 652 652
+4 * 652
+3 * 652
+2 * 652 0 0 0 0 0 0 0 0 652
jcnd=652/652 +7 +3 
* * 
+7 +3 652 652
+4 * 652
+4 * 652
+3 * 652 0 652
cob=(5)
cfi=(8)
cfn=(32)
calls=652 0x387e4bd0b0 0 
* * 185644 28661 29212 20 26 15 20 26 15 29824 946 652
* * 652 652 0 1 1 0 1 1 0 0 0 652
+5 +1 652 652
+1 * 652 652

fn=(102)
0x4048de 113 668 0 668 1 0 0 1
+1 * 668
+3 * 668 0 668
+4 +1 668
+10 * 668 668
+1 * 668 668

fn=(266)
0x40406a 129 322 0 322
+1 * 322
+3 * 322
+4 * 322 0 322
+4 * 322 0 322
+4 * 322 0 322
+4 +1 322 322
+4 * 322
+3 * 322
+5 * 322 0 322
cfi=(16)
cfn=(226)
calls=322 0x402d61 -20 
* * 2254 966 966
+5 * 322
+3 * 322 0 0 0 0 0 0 0 0 322
+2 * 322 322
+4 * 322 322 0 0 20 0 0 20
+2 * 322 0 322 0 0 12 0 0 12
+2 * 322 322
+1 * 322 322

fn=(28)
0x404992 113 668 0 668 1 0 0 1
+1 * 668
+3 * 668 0 668
+4 +1 668
+10 * 668 668
+1 * 668 668

fn=(176)
0x4044cc 86 644 0 644
+1 * 644
+3 * 644 0 644
+4 * 644 644
+1 * 644 644

fn=(224)
0x403df2 129 322 0 322
+1 * 322
+3 * 322
+4 * 322 0 322
+4 * 322 0 322
+4 * 322 0 322
+4 +1 322 322
+4 * 322
+3 * 322
+5 * 322 0 322
cfi=(16)
cfn=(226)
calls=322 0x402d61 -20 
* * 2254 966 966
+5 * 322
+3 * 322 0 0 0 0 0 0 0 0 322 2
+2 * 322 322
+4 * 322 322 0 0 21 0 0 21
+2 * 322 0 322 0 0 3 0 0 3
+2 * 322 322
+1 * 322 322

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 652 0 652
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 * 652 0 652
+4 +1 652 652
+4 * 652
+3 * 652 0 652
cob=(5)
cfi=(8)
cfn=(164)
calls=652 0x387e4bb2f0 0 
* * 71786 17899 8413 23 5 0 23 5 0 17450 482 652
* * 652 652 0 1 1 0 1 1 0 0 0 652
+5 * 652 652
+1 * 652 652

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 652 0 652
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 * 652 0 652
+4 +1 652 652
+4 * 652
+3 * 652 0 652
cob=(5)
cfi=(8)
cfn=(164)
calls=652 0x387e4bb2f0 0 
* * 79641 20828 10712 0 1 0 0 1 0 19679 67 652
* * 652 652 0 0 0 0 0 0 0 0 0 652
+5 * 652 652
+1 * 652 652

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +2 644 644
+4 * 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=644 0x404484 107 
* * 319524 106280 102420 25 3 4 25 3 4 12056 746 1284 160
+5 * 644 644
+1 * 644 644

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +2 644 644 0 1 0 0 1
+4 * 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=644 0x404a36 450 
* * 301492 99840 95980 24 3 4 24 3 4 12056 746 1284 160
+5 * 644 644
+1 * 644 644

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +2 644 644
+4 * 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=644 0x40439c 107 
* * 319524 106280 102420 7 1 40 7 1 40 12056 730 1284
+5 * 644 644
+1 * 644 644

fn=(116)
0x40439c 107 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +10 644 644
+4 * 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=644 0x4047d7 -26 
* * 310508 103060 99200 7 1 40 7 1 40 12056 730 1284
+5 +1 644 644
+1 * 644 644

fn=(118)
0x4047d7 91 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +2 644 644
+4 * 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=644 0x4049e2 450 
* * 301492 99840 95980 7 1 40 7 1 40 12056 730 1284
+5 * 644 644
+1 * 644 644

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +10 644 644
+4 * 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(52)
calls=644 0x404829 -26 
* * 310508 103060 99200 25 3 4 25 3 4 12056 746 1284 160
+5 +1 644 644
+1 * 644 644

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 652 0 652 1 0 0 1
+1 * 652 0 0 1 0 0 1
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 0 652 652
+5 0 652 0 0 0 0 0 0 0 0 652
+2 0 652 652
+4 0 652 652
+4 0 652
+5 0 652
+3 0 652
+3 0 652 0 652
fi=(6) ???
cfi=(5)
cfn=(100)
calls=652 0x40461a 99 
* 0 204722 32787 30929 36 13 37 36 13 37 31208 1179 1304
+5 0 652
fi=(6)
jump=652 +7 0 
* 0 
+7 0 652 652
+1 0 652 652

fn=(144)
0x402d9a 770 157619 0 157619
+1 * 157619
+3 * 157619 0 157619
+4 * 157619 0 157619
+4 +1 157619 157619
+4 * 157619 157619
+3 * 157619 157619
+4 * 157619
+4 * 157619
+3 * 157619 157619
+1 * 157619 157619

fn=(146)
0x402dba 770 157619 0 157619
+1 * 157619
+3 * 157619 0 157619 1 0 0 1
+4 * 157619 0 157619
+4 +1 157619 157619
+4 * 157619 157619
+3 * 157619 157619
+4 * 157619
+4 * 157619
+3 * 157619 157619
+1 * 157619 157619

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 644
+4 * 644
+3 * 644 0 644
cfi=(4)
cfn=(194)
calls=644 0x403d7e +42 
* * 9016 3220 3220 1 0 0 1
+5 * 644 644
+1 * 644 644

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644
+1 * 644
+4 * 644 0 644
+4 +2 644 644
+4 * 644 644
+4 * 644
+3 * 644 644
+4 * 644 644
+3 * 644
+3 * 644
+3 * 644
+4 * 644
+3 * 644 644
+4 * 644 644
+3 -1 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=644 0x403d98 +11 
* * 96790 27044 17038 1 1 0 1 1 0 20120 58 1288
+5 +1 644 644
+4 * 644
+3 * 644 0 644
cfn=(192)
calls=644 0x403296 -82 
* * 14812 5152 5152 1 0 0 1
+5 * 644
jump=644 +28 * 
* * 
+28 * 644
+4 * 644 644
+1 * 644 644
+1 * 644 644

fn=(2)
0x402d74 645 2608 0 2608 1 0 0 1
+1 * 2608
+3 * 2608 0 2608 0 0 1 0 0 1
+4 +1 2608 2608
+4 * 2608 2608 0 1 1 0 1 1
+4 * 2608
+3 * 2608 2608
+4 * 2608 2608
+3 * 2608
+3 * 2608
+3 * 2608
+4 * 2608 2608
+1 * 2608 2608

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 +2 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=644 0x404236 -14 
* * 210031 36664 36565 26 13 8 26 13 8 30648 885 1288
+5 * 644 644
+4 * 644 0 644
+3 +1 644 644
+4 * 644 644 0 1 0 0 1
+3 * 644 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+3 * 644 644
+4 * 644
+4 * 644
+3 * 644 644
+4 * 644 0 644
+4 +1 644 644
+1 * 644 644

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 +2 644 644
+4 * 644 644 0 1 0 0 1
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(96)
calls=644 0x403fbe -14 
* * 211911 35370 32908 23 8 32 23 8 32 31353 1124 1288
+5 * 644 644
+4 * 644 0 644
+3 +1 644 644
+4 * 644 644
+3 * 644 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+3 * 644 644
+4 * 644
+4 * 644
+3 * 644 644
+4 * 644 0 644
+4 +1 644 644
+1 * 644 644

fn=(244)
0x402f7a 901 322 0 322
+1 * 322
+3 * 322 0 0 1 0 0 1
+4 * 322 0 322
+4 * 322 0 322
+4 +2 322 322
+4 * 322 322
+4 * 322 322
+4 * 322 322
+4 * 322
+3 * 322 0 0 0 0 0 0 0 0 322
jcnd=8/322 +51 +10 
* * 
+2 +3 314 314
+4 * 314 314
+4 * 314 314
+4 -1 314 314
+4 * 314
+3 * 314
+3 * 314 0 314
cfi=(3)
cfn=(264)
calls=314 0x4036b1 215 
* * 11932 4082 4396 0 20 8 0 20 8 314
+5 +2 314 314
+4 * 314 314
+4 * 314
+4 * 314 314
+4 * 314 0 314
+4 * 314
jump=314 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12458 3725 3246 18 14 29 18 14 29 839 82 47
+5 +2 322 322
+1 * 322 322

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1312 0 1312 1 0 0 1
+1 * 1312
+3 * 1312 0 1312 1 0 0 1
+4 +1 1312 1312
+4 * 1312 1312
+1 * 1312 1312

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+3 * 644 0 644
+4 * 644
+4 * 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=644 0x404380 726 
* * 6440 3220 2576
+5 * 644 644
+4 * 644 644
+1 * 644 644

fn=(148)
0x402df4 414 644 0 644
+1 * 644
+3 * 644 0 644
+1 * 644
+4 * 644 0 644 1 0 0 1
+4 +2 644 644
+4 * 644
+3 * 644 0 644
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=644 0x40325e 113 
* * 3864 1932 1288
+5 * 644
+3 * 644 644
+4 * 644 644
+4 * 644 644
+4 * 644 644
+3 -1 644
+3 * 644
+3 * 644 0 644
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=644 0x40326c 148 
* * 19964 6440 7728 4 0 0 4
+5 +1 644 644
+4 * 644
+3 * 644 0 644
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=644 0x4031ec 159 
* * 121812 36368 23114 27 6 0 27 6 0 17900 476 1288
+5 * 644
jump=644 +28 * 
* * 
+28 * 644 0 0 1 0 0 1
+4 * 644 644
+1 * 644 644
+1 * 644 644

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 652 0 652 1 0 0 1
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 * 652 0 652
+4 +2 652 652
+5 * 652 0 0 0 0 0 0 0 0 652
+2 +1 652 652
+4 * 652 652
+4 * 652 652
+4 * 652
+3 * 652
+3 * 652 0 652
cfi=(5)
cfn=(160)
calls=652 0x4044d6 -65 
* * 79610 20507 11673 24 6 0 24 6 0 17450 482 1304
+5 +1 652 652
+1 * 652 652

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 644 0 644
+1 * 644
+3 * 644 0 644
+1 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=644 0x4043ca -45 
* * 23184 8372 9016 4 0 4 4 0 4
+5 +1 644 644 0 1 0 0 1
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(20)
calls=644 0x404412 +43 
* * 226131 44392 41073 27 13 8 27 13 8 30648 885 1288
+5 * 644
jump=644 +28 * 
* * 
+28 * 644
+4 * 644 644
+1 * 644 644
+1 * 644 644

fn=(14)
0x4043ca 90 644 0 644 1 0 0 1
+1 * 644
+3 * 644
+4 * 644 0 644 0 0 1 0 0 1
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfi=(4)
cfn=(16)
calls=644 0x404804 +24 
* * 11592 3864 4508 2 0 1 2 0 1
+5 * 644 644
+4 * 644 0 644 0 0 2 0 0 2
+7 * 644 644
+4 * 644 0 644 1 0 0 1
+8 * 644 644
+4 * 644 0 644
+8 +1 644 644
+1 * 644 644

fn=(80)
0x402ff4 310 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644
+2 * 644 0 644
+2 * 644 0 644
+1 * 644 0 0 1 0 0 1
+4 * 644 0 644
+4 * 644 0 644
+4 +2 644 644
+4 * 644
+3 * 644 0 644
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=644 0x4039fc 117 
* * 3864 1932 1288 2 0 0 2
+5 * 644
+3 * 644 0 644
cfi=(3)
cfn=(84)
calls=644 0x4039ed -88 
* * 3864 1932 1288
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(2)
calls=644 0x402d74 645 
* * 8372 3864 1288
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644
+3 * 644
+3 * 644 0 644 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=644 0x403a0a 134 
* * 265363 55978 50940 30 8 32 30 8 32 31353 1124 1288
+5 +4 644 644
+4 * 644
+3 * 644 0 644
cfn=(106)
calls=644 0x40325e 113 
* * 3864 1932 1288 1 0 0 1
+5 * 644
+3 * 644 644
+4 * 644 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=644 0x403a98 565 
* * 16100 6440 5152 2 0 0 2
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(112)
calls=644 0x403a68 547 
* * 16100 6440 5152
+5 * 644
+3 * 644
+3 * 644
+3 * 644
+3 * 644 0 644
cfi=(11)
cfn=(114)
calls=644 0x403ac9 -60 
* * 329184 109500 106284 7 1 40 7 1 40 12056 730 1284
+5 -3 644 644
+4 * 644 0 644
+4 * 644
jump=644 +28 +4 
* * 
+28 +4 644
+4 * 644 644
+1 * 644 644
+2 * 644 644
+2 * 644 644
+1 * 644 644

fn=(188)
0x403d98 171 652 0 652 1 0 0 1
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 * 652 0 652
+4 +2 652 652
+5 * 652 0 0 0 0 0 0 0 0 652 8
+2 +1 652 652
+4 * 652 652
+4 * 652 652
+4 * 652
+3 * 652
+3 * 652 0 652
cfi=(5)
cfn=(190)
calls=652 0x40452a -65 
* * 87465 23436 13972 0 1 0 0 1 0 19679 67 1304
+5 +1 652 652
+1 * 652 652

fn=(22)
0x404236 167 652 0 652 1 0 0 1
+1 * 652
+3 * 652
+4 * 652 0 652 1 0 0 1
+4 * 652 0 652
+4 0 652 652
+5 0 652 0 0 0 0 0 0 0 0 652
+2 0 652 652
+4 0 652 652
+4 0 652
+5 0 652
+3 0 652
+3 0 652 0 652
fi=(6)
cfi=(5)
cfn=(26)
calls=652 0x404730 99 
* 0 202596 33877 34428 24 27 15 24 27 15 30476 946 1304
+5 0 652
fi=(6)
jump=652 +7 0 
* 0 
+7 0 652 652
+1 0 652 652

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 644 0 644 1 0 0 1
+1 * 644
+3 * 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+4 * 644 0 644
+4 * 644
+4 * 644 0 0 1 0 0 1
+4 * 644
+3 * 644
+3 * 644 0 644
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=644 0x404468 726 
* * 6440 3220 2576 1 0 0 1
+5 * 644 644
+4 * 644 644
+1 * 644 644

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+3 * 644 0 644
+4 * 644
+4 * 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfi=(10)
cfn=(44)
calls=644 0x404468 726 
* * 6440 3220 2576
+5 * 644 644
+4 * 644 644
+1 * 644 644

fn=(86)
0x403a0a 134 644 0 644
+1 * 644
+3 * 644 0 644
+1 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=644 0x4042e2 -45 
* * 23184 8372 9016 5 0 0 5
+5 +1 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644 1 0 0 1
cfn=(94)
calls=644 0x40432a +43 
* * 228011 43098 37416 24 8 32 24 8 32 31353 1124 1288
+5 * 644
jump=644 +28 * 
* * 
+28 * 644
+4 * 644 644
+1 * 644 644
+1 * 644 644

fn=(88)
0x4042e2 90 644 0 644 1 0 0 1
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644 1 0 0 1
cfi=(4)
cfn=(90)
calls=644 0x4047b2 +24 
* * 11592 3864 4508 3 0 0 3
+5 * 644 644
+4 * 644 0 644
+7 * 644 644
+4 * 644 0 644
+8 * 644 644
+4 * 644 0 644
+8 +1 644 644
+1 * 644 644

fn=(156)
0x4031ec 159 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644
+1 * 644
+4 * 644 0 644
+4 +2 644 644
+4 * 644 644 0 1 0 0 1
+4 * 644
+3 * 644 644
+4 * 644 644
+3 * 644
+3 * 644
+3 * 644
+4 * 644
+3 * 644 644
+4 * 644 644
+3 -1 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(158)
calls=644 0x403ce6 +11 
* * 88968 24132 14742 24 6 0 24 6 0 17900 476 1288
+5 +1 644 644
+4 * 644
+3 * 644 0 644
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=644 0x4031b8 -82 
* * 14812 5152 5152 1 0 0 1
+5 * 644
jump=644 +28 * 
* * 
+28 * 644
+4 * 644 644
+1 * 644 644
+1 * 644 644

fn=(172)
0x4031b8 79 644 0 644 1 0 0 1
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 644
+4 * 644
+3 * 644 0 644
cfi=(4)
cfn=(174)
calls=644 0x403ccc +42 
* * 9016 3220 3220
+5 * 644 644
+1 * 644 644

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1320 0 1320 1 0 0 1
+1 * 1320
+3 * 1320 0 1320
+4 +1 1320 1320
+4 * 1320 1320 0 0 2 0 0 2
+4 * 1320
+3 * 1320 1320
+4 * 1320 1320
+3 * 1320
+3 * 1320
+3 * 1320
+4 * 1320 1320
+1 * 1320 1320

fn=(106)
0x40325e 113 1312 0 1312 1 0 0 1
+1 * 1312
+3 * 1312 0 1312
+4 +1 1312 1312
+4 * 1312 1312
+1 * 1312 1312

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 660 0 660 1 0 0 1
+1 * 660
+3 * 660 0 660 0 0 1 0 0 1
+4 +1 660 660
+4 * 660 660
+1 * 660 660

fn=(82)
0x4039fc 117 660 0 660 1 0 0 1
+1 * 660
+3 * 660 0 660 1 0 0 1
+4 +1 660 660
+4 * 660 660
+1 * 660 660

fn=(200)
0x402eda 901 322 0 322
+1 * 322
+3 * 322
+4 * 322 0 322
+4 * 322 0 322
+4 +2 322 322
+4 * 322 322
+4 * 322 322
+4 * 322 322
+4 * 322
+3 * 322 0 0 0 0 0 0 0 0 322 8
jcnd=8/322 +51 +10 
* * 
+2 +3 314 314
+4 * 314 314
+4 * 314 314
+4 -1 314 314
+4 * 314
+3 * 314
+3 * 314 0 314
cfi=(3)
cfn=(222)
calls=314 0x403373 215 
* * 11932 4082 4396 0 20 2 0 20 2 314 2
+5 +2 314 314
+4 * 314 314
+4 * 314
+4 * 314 314
+4 * 314 0 314
+4 * 314
jump=314 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12671 3912 3401 38 6 9 38 6 9 857 67 47
+5 +2 322 322
+1 * 322 322

fn=(4)
0x4030b2 310 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644
+2 * 644 0 644
+2 * 644 0 644
+1 * 644
+4 * 644 0 644 1 0 0 1
+4 * 644 0 644
+4 +2 644 644
+4 * 644
+3 * 644 0 644
cfn=(6)
calls=644 0x403b08 117 
* * 3864 1932 1288 1 0 1 1 0 1
+5 * 644
+3 * 644 0 644
cfi=(3)
cfn=(8)
calls=644 0x403afa -88 
* * 3864 1932 1288 1 0 0 1
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(10)
calls=644 0x402f54 645 
* * 8372 3864 1288 1 1 0 1 1
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644
+3 * 644
+3 * 644 0 644
cfn=(12)
calls=644 0x403b16 134 
* * 263483 57272 54597 32 13 12 32 13 12 30648 885 1288
+5 +4 644 644 0 1 0 0 1
+4 * 644
+3 * 644 0 644
cfn=(40)
calls=644 0x40333c 113 
* * 3864 1932 1288 2 0 0 2
+5 * 644
+3 * 644 644
+4 * 644 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(42)
calls=644 0x403ba4 565 
* * 16100 6440 5152 3 0 0 3
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(46)
calls=644 0x403b74 547 
* * 16100 6440 5152
+5 * 644
+3 * 644
+3 * 644
+3 * 644
+3 * 644 0 644 1 0 0 1
cfi=(11)
cfn=(48)
calls=644 0x403bd5 -60 
* * 329184 109500 106284 26 3 4 26 3 4 12056 746 1284 160
+5 -3 644 644
+4 * 644 0 644
+4 * 644
jump=644 +28 +4 
* * 
+28 +4 644
+4 * 644 644
+1 * 644 644
+2 * 644 644
+2 * 644 644
+1 * 644 644

fn=(108)
0x403a98 565 644 0 644 1 0 0 1
+1 * 644
+3 * 644
+4 * 644 0 644
+4 +1 644 644
+4 * 644 644
+4 * 644 0 644
+4 * 644
+4 * 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfi=(10)
cfn=(110)
calls=644 0x404380 726 
* * 6440 3220 2576 1 0 0 1
+5 * 644 644
+4 * 644 644
+1 * 644 644

fn=(178)
0x402e74 414 644 0 644
+1 * 644
+3 * 644 0 644
+1 * 644
+4 * 644 0 644 1 0 0 1
+4 +2 644 644
+4 * 644
+3 * 644 0 644
cfn=(40)
calls=644 0x40333c 113 
* * 3864 1932 1288
+5 * 644
+3 * 644 644
+4 * 644 644
+4 * 644 644
+4 * 644 644
+3 -1 644
+3 * 644
+3 * 644 0 644
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=644 0x40334a 148 
* * 19964 6440 7728 2 0 0 2
+5 +1 644 644
+4 * 644
+3 * 644 0 644
cfn=(186)
calls=644 0x4032ca 159 
* * 129634 39280 25410 3 1 0 3 1 0 20120 58 1288
+5 * 644
jump=644 +28 * 
* * 
+28 * 644 0 0 1 0 0 1
+4 * 644 644
+1 * 644 644
+1 * 644 644

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(120)
0x4049e2 450 644 0 644
+1 * 644
+3 * 644 0 644
+1 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +10 644 644
+4 * 644
+3 * 644 0 644
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=644 0x404bc6 288 
* * 9660 3864 3220 3 0 0 3
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(122)
calls=644 0x404bc6 288 
* * 9660 3864 3220
+5 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=644 0x404be0 -36 
* * 268004 88248 84388 4 1 40 4 1 40 12056 730 1284
+5 +1 644
+4 * 644 644
+1 * 644 644
+1 * 644 644

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 692 0 692
+1 * 692
+3 * 692
+4 * 692 0 692 1 0 0 1
+4 +1 692 692
+4 * 692
+3 * 692 0 692
cfi=(13)
cfn=(130)
calls=692 -33 -66 
* * 4152 2076 1384 0 0 1 0 0 1
+5 * 692 692
+1 * 692 692

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1288 0 1288
+1 * 1288
+3 * 1288
+4 * 1288 0 1288
+4 +1 1288 1288
+4 * 1288
+3 * 1288 0 1288
cfi=(13)
cfn=(134)
calls=1288 0x404e98 -58 
* * 20608 7728 6440 2 0 0 2
+5 * 1288 1288
+1 * 1288 1288

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +8 644 0 644
+4 +3 644 644
+4 * 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=644 0x404eb5 -22 
* * 198452 65064 60560 1 1 40 1 1 40 12056 730 1284
+5 +1 644 644
+1 * 644 644

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288
+4 * 1288 0 1288
+4 +1 1288 1288
+4 * 1288
+3 * 1288 0 1288
cfi=(13)
cfn=(124)
calls=1288 0x404d36 -77 
* * 7728 3864 2576 2 0 0 2
+5 * 1288 1288
+1 * 1288 1288

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288
+4 * 1288 0 1288 1 0 0 1
+4 +1 1288 1288
+4 * 1288
+3 * 1288 0 1288
cfi=(13)
cfn=(58)
calls=1288 0x404d8f -77 
* * 7728 3864 2576 1 0 0 1
+5 * 1288 1288
+1 * 1288 1288

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 660 0 660
+1 * 660
+3 * 660
+4 * 660 0 660 1 0 0 1
+4 * 660 0 660
+4 * 660 0 660
+4 +2 660 660
+4 * 660 660
+4 * 660
+3 * 660
+3 * 660
+4 * 660 0 660
+4 +1 660 660
+5 * 660 0 0 0 0 0 0 0 0 660
jcnd=8/660 +33 +2 
* * 
+2 +1 652 652
+4 * 652
+8 * 652 652
+4 * 652 652
+4 * 652
+3 * 652 0 0 1 0 0 1
+3 * 652 0 652 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=652 0x3877c83840 0 
* * 181542 58296 56997 11 2 20 11 2 20 11496 750 647 160
* * 652 652 0 1 1 0 1 1 0 0 0 652
+5 +1 660 660
+4 * 660
+8 * 660 660
+4 * 660
+3 +1 660 660
+1 * 660 660

fn=(140)
0x404eb5 368 660 0 660
+1 * 660
+3 * 660
+4 * 660 0 660 1 0 0 1
+4 * 660 0 660
+4 * 660 0 660 0 0 1 0 0 1
+4 +2 660 660
+4 * 660 660
+4 * 660
+3 * 660
+3 * 660
+4 * 660 0 660
+4 +1 660 660
+5 * 660 0 0 0 0 0 0 0 0 660
jcnd=8/660 +33 +2 
* * 
+2 +1 652 652
+4 * 652
+8 * 652 652
+4 * 652 652
+4 * 652
+3 * 652
+3 * 652 0 652
cob=(2)
cfi=(9)
cfn=(78)
calls=652 0x3877c83840 0 
* * 181542 58296 56997 0 1 41 0 1 41 11496 736 647
* * 652 652 0 0 0 0 0 0 0 0 0 652
+5 +1 660 660
+4 * 660
+8 * 660 660
+4 * 660
+3 +1 660 660
+1 * 660 660

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 644 0 644
+1 * 644
+3 * 644
+4 * 644 0 644 1 0 0 1
+4 * 644 0 644
+4 * 644 0 644
+4 +8 644 0 644
+4 +3 644 644
+4 * 644 644
+4 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(74)
calls=644 0x404f37 -22 
* * 198452 65064 60560 14 3 3 14 3 3 12056 746 1284 160
+5 +1 644 644
+1 * 644 644

fn=(126)
0x404be0 424 644 0 644
+1 * 644
+3 * 644 0 644
+2 * 644 0 644
+1 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +4 644 644
+4 * 644
+3 * 644 0 644
cfn=(128)
calls=644 0x404878 277 
* * 9660 3864 3220 1 0 0 1
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(132)
calls=644 0x404d44 277 
* * 16100 5796 5152 2 0 0 2
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(132)
calls=644 0x404d44 277 
* * 16100 5796 5152
+5 * 644
+3 * 644
+3 * 644
+3 * 644 0 644
cfn=(138)
calls=644 0x404d5e -49 
* * 208112 68284 64424 1 1 40 1 1 40 12056 730 1284
+5 +1 644
+4 * 644 644
+1 * 644 644
+2 * 644 644
+1 * 644 644

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 644 0 644
+1 * 644
+3 * 644 0 644
+1 * 644
+4 * 644 0 644 1 0 0 1
+4 * 644 0 644
+4 * 644 0 644
+4 +10 644 644
+4 * 644
+3 * 644 0 644
cfn=(56)
calls=644 0x404c38 288 
* * 9660 3864 3220 3 0 0 3
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(56)
calls=644 0x404c38 288 
* * 9660 3864 3220
+5 * 644 644
+4 * 644
+3 * 644
+3 * 644 0 644
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=644 0x404c52 -36 
* * 268004 88248 84388 20 3 4 20 3 4 12056 746 1284 160
+5 +1 644
+4 * 644 644
+1 * 644 644
+1 * 644 644

fn=(60)
0x404c52 424 644 0 644
+1 * 644
+3 * 644 0 644
+2 * 644 0 644
+1 * 644
+4 * 644 0 644
+4 * 644 0 644
+4 * 644 0 644
+4 +4 644 644
+4 * 644
+3 * 644 0 644
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=644 0x40492d 277 
* * 9660 3864 3220 2 0 0 2
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=644 0x404d9d 277 
* * 16100 5796 5152 2 0 1 2 0 1
+5 * 644
+3 * 644 644
+4 * 644
+3 * 644 0 644
cfn=(66)
calls=644 0x404d9d 277 
* * 16100 5796 5152
+5 * 644
+3 * 644
+3 * 644
+3 * 644 0 644
cfn=(72)
calls=644 0x404db7 -49 
* * 208112 68284 64424 15 3 3 15 3 3 12056 746 1284 160
+5 +1 644
+4 * 644 644
+1 * 644 644
+2 * 644 644
+1 * 644 644

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 +1 692 692
+4 * 692
+3 * 692 0 692 1 0 0 1
cfi=(13)
cfn=(64)
calls=692 -33 -66 
* * 4152 2076 1384
+5 * 692 692
+1 * 692 692

fn=(66)
0x404d9d 277 1288 0 1288
+1 * 1288
+3 * 1288
+4 * 1288 0 1288
+4 +1 1288 1288
+4 * 1288
+3 * 1288 0 1288
cfi=(13)
cfn=(68)
calls=1288 0x404f1a -58 
* * 20608 7728 6440 2 0 1 2 0 1
+5 * 1288 1288
+1 * 1288 1288

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288 0 1288
+4 +1 1288 1288
+4 * 1288 1288
+1 * 1288 1288

fn=(110)
0x404380 726 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288 0 1288
+4 * 1288 0 1288
+4 * 1288 1288
+4 * 1288 1288
+3 * 1288 1288
+4 * 1288 0 1288
+3 * 1288 1288
+1 * 1288 1288

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1288 0 1288 1 0 0 1
+1 * 1288
+3 * 1288 0 1288
+4 +1 1288 1288
+4 * 1288 1288
+1 * 1288 1288

fn=(44)
0x404468 726 1288 0 1288
+1 * 1288
+3 * 1288 0 1288
+4 * 1288 0 1288
+4 * 1288 1288
+4 * 1288 1288
+3 * 1288 1288
+4 * 1288 0 1288 1 0 0 1
+3 * 1288 1288
+1 * 1288 1288

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 652 0 652 1 0 0 1
+1 * 652
+3 * 652 0 652
+4 * 652 0 652 1 0 0 1
+4 * 652 652
+1 * 652 652

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 652 0 652 1 0 0 1
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 +4 652 652
+4 * 652 652
+4 * 652
+3 * 652
+3 * 652 0 652
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=652 0x40454c -14 
* * 3912 1304 1956 1 0 0 1
+5 +2 652 652
+1 * 652 652

fn=(150)
0x40326c 148 652 0 652
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 * 652 0 652
+4 +3 652 652 0 1 0 0 1
+4 * 652 652
+4 * 652
+3 * 652
+3 * 652 0 652
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=652 0x403d1a -29 
* * 11736 3912 4564 3 0 0 3
+5 +1 652 652
+1 * 652 652

fn=(180)
0x40334a 148 652 0 652
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 * 652 0 652
+4 +3 652 652
+4 * 652 652
+4 * 652
+3 * 652
+3 * 652 0 652
cfn=(182)
calls=652 0x403dcc -29 
* * 11736 3912 4564 2 0 0 2
+5 +1 652 652
+1 * 652 652

fn=(152)
0x403d1a 122 652 0 652 1 0 0 1
+1 * 652
+3 * 652
+4 * 652 0 652
+4 * 652 0 652
+4 +4 652 652
+4 * 652 652
+4 * 652
+3 * 652
+3 * 652 0 652
cfn=(154)
calls=652 0x4044f8 -14 
* * 3912 1304 1956 2 0 0 2
+5 +2 652 652
+1 * 652 652

fn=(184)
0x40454c 112 652 0 652 1 0 0 1
+1 * 652
+3 * 652 0 652
+4 * 652 0 652
+4 * 652 652
+1 * 652 652

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2997 473 471 0 14 7 0 14 7 480 61 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3243 677 629 15 5 5 15 5 5 507 55 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1304 0 1304 1 0 0 1
+2 0 1304 0 1304
+2 0 1304 0 1304
+2 0 1304
+3 0 1304 0 1304
+2 0 1304 0 1304
+1 0 1304 0 1304
+1 0 1304
+3 0 1304
+4 0 1304 1304
+4 0 1304 0 1304
+4 0 1304
+3 0 1304
+4 0 1304
+3 0 1304
+3 0 1304
+3 0 1304 0 0 1 0 0 1 0 0 1304
+6 0 1304
+4 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304
+4 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304 1304
+7 0 1304 0 0 0 0 0 0 0 0 1304 4
jcnd=1180/1304 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1180
+2 0 1180 0 0 0 0 0 0 0 0 1180
+6 0 1180 1180 0 1 0 0 1
+4 0 1180
+3 0 1180
+2 0 1180 0 0 0 0 0 0 0 0 1180
jcnd=1180/1180 0x3877c78a40 0 
* 0 
+6 0 1180 1180
+4 0 1180
+3 0 1180 0 0 0 0 0 0 0 0 1180
+6 0 1180 1180
+5 0 1180
+4 0 1180 0 0 0 0 0 0 0 0 1180
jcnd=1180/1180 0x3877c7907c 0 
* 0 
+6 0 1180 1180
+5 0 1180
+4 0 1180 0 0 0 0 0 0 0 0 1180
+6 0 1180
+4 0 1180 0 0 1 0 0 1 0 0 1180
+6 0 1180
+4 0 1180 1180
+7 0 1180 0 0 0 0 0 0 0 0 1180
+6 0 1180 1180
+6 0 1180
+2 0 1180 0 0 0 0 0 0 0 0 1180
+6 0 1180 1180
+4 0 1180 0 0 0 0 0 0 0 0 1180 5
jcnd=1176/1180 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1180 1180 0 1 0 0 1
+4 0 1180 0 0 0 0 0 0 0 0 1180 398
jcnd=450/1180 0x3877c78bf0 0 
* 0 
+6 0 730 730 0 0 1 0 0 1
+6 0 730 0 0 1 0 0 1 0 0 730 64
jcnd=61/730 0x3877c78a78 0 
* 0 
+6 0 669 669
+5 0 669 669
+5 0 669 669
+4 0 669 0 0 0 0 0 0 0 0 669
+6 0 669 669
+4 0 669 0 0 0 0 0 0 0 0 669
+6 0 669 669
+9 0 669 0 669
+4 0 669 0 669
+4 0 669 0 0 0 0 0 0 0 0 669 4
jcnd=661/669 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 669
+3 0 669
+4 0 669 669
+4 0 669 669
+4 0 669 0 0 0 0 0 0 0 0 669
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 730
+7 0 730 0 730
+4 0 730 0 730
+4 0 730 0 0 0 0 0 0 0 0 730 68
jcnd=441/730 +18 0 
* 0 
+2 0 289 0 289
+8 0 289 0 289
+8 0 289 0 289
+4 0 289
+3 0 289 0 289 1 0 0 1
+4 0 289
+4 0 289 0 289
+4 0 289 0 289
+4 0 289
+7 0 289 0 0 0 0 0 0 0 0 289
jcnd=289/289 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 450
+7 0 450 0 0 0 0 0 0 0 0 450
jcnd=450/450 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1180 0 0 1 0 0 1
+5 0 1180 1180
+4 0 1180 1180
+7 0 1180 0 0 0 0 0 0 0 0 1180
jcnd=1180/1180 +16 0 
* 0 
+16 0 1180 0 1180
+5 0 1180 0 0 0 0 0 0 0 0 1180
+6 0 1180
+3 0 1180
jump=1180 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1180 1180 0 1 0 0 1
+4 0 1180
+2 0 1180 0 0 0 0 0 0 0 0 1180
+6 0 1180 1180
+7 0 1180 0 0 0 0 0 0 0 0 1180
jcnd=1180/1180 +15 0 
* 0 
+15 0 1180 0 1180 1 0 0 1
+4 0 1180 0 0 0 0 0 0 0 0 1180 2
+6 0 1180
+4 0 1180 1180
+1 0 1180 1180
+1 0 1180 1180
+2 0 1180 1180
+2 0 1180 1180
+2 0 1180 1180
+2 0 1180 1180
0x3877c78bf0 0 450 0 0 1 0 0 1
+3 0 450 0 450
+4 0 450
+3 0 450
+4 0 450 0 450 1 0 0 1
+4 0 450
jump=450 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1180 1180 0 1 1 0 1 1
+4 0 1180 0 0 1 0 0 1
+7 0 1180
+4 0 1180
+3 0 1180
+3 0 1180 0 0 0 0 0 0 0 0 1180
jcnd=1180/1180 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1294 0 0 1 0 0 1
+7 0 1294
+3 0 1294
+3 0 1294 1294 0 0 1 0 0 1
+4 0 1294
+4 0 1294 0 0 0 0 0 0 0 0 0 0 1294 160
jump=160 0x3877c89be8 0 
* 0 
jump=170 0x3877c89bd0 0 
* 0 
jump=160 0x3877c89bb8 0 
* 0 
jump=160 +11 0 
* 0 
jump=160 0x3877c89c48 0 
* 0 
jump=162 0x3877c89c30 0 
* 0 
jump=160 0x3877c89c18 0 
* 0 
jump=162 0x3877c89c00 0 
* 0 
+11 0 160 160
+3 0 160
+4 0 160
+4 0 160 160
+4 0 160
+4 0 160 0 160
+4 0 160
+9 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
jcnd=8/160 0x3877c89c60 0 
* 0 
-40 0 12862 12862
+4 0 12862 0 12862 0 0 3 0 0 3
+4 0 12862 12862
+4 0 12862 0 12862 0 0 15 0 0 15
+4 0 12862 12862
+4 0 12862 0 12862 0 0 19 0 0 19
+4 0 12862 12862
+4 0 12862 0 12862
+4 0 12862
+4 0 12862
+4 0 12862 0 0 0 0 0 0 0 0 12862 820
jcnd=1258/12862 0x3877c89c60 0 
* 0 
-32 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162
jcnd=10/162 0x3877c89c60 0 
* 0 
-24 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
jcnd=8/160 0x3877c89c60 0 
* 0 
-16 0 162 162 0 1 0 0 1
+4 0 162 0 162
+4 0 162 0 0 1 0 0 1
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162 4
jcnd=10/162 0x3877c89c60 0 
* 0 
+6 0 12212
+4 0 12212 12212
+3 0 12212 0 12212 0 0 1 0 0 1
+3 0 12212 12212
+4 0 12212 0 12212 0 0 3 0 0 3
+4 0 12212 12212
+4 0 12212 0 12212 0 0 18 0 0 18
+4 0 12212 12212
+4 0 12212 0 12212
+4 0 12212
jump=12212 -80 0 
* 0 
-30 0 160 160
+3 0 160 0 160
+3 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160 0 0 1 0 0 1
+4 0 160 160
+4 0 160 0 160
+4 0 160
jump=160 -80 0 
* 0 
-24 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
jump=170 -80 0 
* 0 
-16 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
jump=160 -80 0 
* 0 
+8 0 160 160
+3 0 160
+4 0 160 0 0 1 0 0 1
+4 0 160
+4 0 160
jump=160 -39 0 
* 0 
+9 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+6 0 170 170
+3 0 170
+4 0 170
jump=170 -72 0 
* 0 
+8 0 160
+4 0 160 160
+3 0 160 0 0 0 0 0 0 0 0 160
+2 0 160
+4 0 160
jump=160 -99 0 
* 0 
+11 0 162 162 0 1 0 0 1
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b78 0 
* 0 
+9 0 160 160
+3 0 160
+4 0 160
+4 0 160
+4 0 160
jump=160 0x3877c89b70 0 
* 0 
+9 0 162 162
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b68 0 
* 0 
+9 0 160 160
+3 0 160
+4 0 160
+4 0 160
+4 0 160
jump=160 0x3877c89b60 0 
* 0 
+9 0 1294 0 1294 1 0 0 1
+3 0 1294 1294

fn=(104) alloc_perturb
0x3877c77180 0 1170 1170 0 1 0 0 1
+6 0 1170
+2 0 1170 0 0 0 0 0 0 0 0 1170 1
+2 0 1170 1170

fn=(38) _int_malloc
0x3877c79a00 0 1304 0 1304 1 0 0 1
+2 0 1304
+3 0 1304 0 1304
+2 0 1304 0 1304
+2 0 1304 0 1304 0 0 1 0 0 1
+2 0 1304
+3 0 1304 0 1304
+1 0 1304 0 1304
+1 0 1304
+4 0 1304
+4 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304
+4 0 1304
+6 0 1304
+3 0 1304
+4 0 1304
+4 0 1304
+4 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304 1304 0 1 1 0 1 1
+7 0 1304 0 0 0 0 0 0 0 0 1304 7
jcnd=1182/1304 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1170
+4 0 1170 1170
+1 0 1170 1170
+1 0 1170 1170
+2 0 1170 1170
+2 0 1170 1170
+2 0 1170 1170
+2 0 1170 1170
+7 0 1199
+7 0 1199 0 0 1 0 0 1 0 0 1199 7
jcnd=296/1199 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 3 0 0 3
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 296 0 0 1 0 0 1
+3 0 296
+4 0 296
+4 0 296 0 0 1 0 0 1 0 0 296
jcnd=296/296 0x3877c7a1a4 0 
* 0 
+30 0 296 296
+6 0 296
+5 0 296 0 0 0 0 0 0 0 0 296 1
jcnd=295/296 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 898 238 191 8 2 0 8 2 0 184 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1198 0 0 1 0 0 1
+3 0 1198
+3 0 1198
+3 0 1198
+4 0 1198
+3 0 1198
+4 0 1198 0 1198
+5 0 1198
+3 0 1198 0 1198
+4 0 1198 0 1198
+4 0 1198 0 1198
+5 0 1198
+3 0 1198
+3 0 1198
+3 0 1198
+3 0 1198
+4 0 1198
+4 0 1198 0 0 1 0 0 1
+4 0 1198 0 1198
+4 0 1198
+4 0 1198 0 1198
+5 0 1198 0 1198
+5 0 1198
+3 0 1198
+3 0 1198 0 1198
+5 0 1198
+5 0 1198
+3 0 1198 0 1198
+4 0 1198 0 1198
+4 0 1198
+6 0 1198 0 1198
+4 0 1198 0 1198
+5 0 1198 0 0 1 0 0 1
+3 0 1198
+3 0 1198
+3 0 1198
jump=1198 +87 0 
* 0 
+8 0 926
+3 0 926
+4 0 926
+2 0 926
+2 0 926
+3 0 926
+3 0 926
+3 0 926
+2 0 926
+2 0 926
+5 0 926
+2 0 926 926 0 0 2 0 0 2
+4 0 926
+3 0 926
+4 0 926 0 926
+4 0 926 0 926
+8 0 926
+7 0 926 0 926
+4 0 926 0 926 0 0 1 0 0 1
+4 0 926 0 926
+4 0 926 0 0 0 0 0 0 0 0 926
-38 0 279
+3 0 279
+4 0 279 0 279
+4 0 279 0 279
+8 0 279
+7 0 279 0 279
+4 0 279 0 279
+4 0 279 0 279
+4 0 279 0 0 0 0 0 0 0 0 279
+6 0 2404 2404 0 1 0 0 1
+4 0 2404
+3 0 2404 0 0 0 0 0 0 0 0 2404 150
jcnd=1151/2404 0x3877c79ef0 0 
* 0 
+6 0 1253 1253
+4 0 1253 1253
+4 0 1253
+4 0 1253 0 0 0 0 0 0 0 0 1253
+6 0 1253 1253 0 1 0 0 1
+7 0 1253 0 0 0 0 0 0 0 0 1253
+6 0 1253
+4 0 1253
+7 0 1253 0 0 0 0 0 0 0 0 1253 6
jcnd=344/1253 +11 0 
* 0 
+2 0 909
+3 0 909 0 0 0 0 0 0 0 0 909 62
jcnd=833/909 0x3877c79e28 0 
* 0 
+6 0 1234
+3 0 1234 0 1234
+4 0 1234 0 1234
+5 0 1234 0 0 0 0 0 0 0 0 1234 17
jcnd=29/1234 0x3877c7a090 0 
* 0 
+6 0 1205
+7 0 1205 0 0 0 0 0 0 0 0 1205 133
jcnd=926/1205 0x3877c79c50 0 
* 0 
+6 0 279 0 0 1 0 0 1
+3 0 279
+4 0 279
+4 0 279 0 0 0 0 0 0 0 0 279
+6 0 279
+3 0 279
+4 0 279
+2 0 279
+2 0 279
+3 0 279
+3 0 279
+8 0 279
+3 0 279
+2 0 279
+2 0 279
+4 0 279 279 0 0 2 0 0 2
+4 0 279
+3 0 279 0 0 1 0 0 1 0 0 279 9
jcnd=279/279 0x3877c79e15 0 
* 0 
0x3877c79e15 0 279 0 279
+4 0 279 0 279
+4 0 279
+3 0 279
jump=279 0x3877c79c73 0 
* 0 
+8 0 833 833 0 1 0 0 1
+4 0 833
+3 0 833 0 0 0 0 0 0 0 0 833 335
jcnd=428/833 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 5
jcnd=386/405 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1151 0 0 1 0 0 1
+7 0 1151
+3 0 1151 0 0 0 0 0 0 0 0 1151 4
jcnd=288/1151 0x3877c7a0b0 0 
* 0 
+6 0 1127 1127 0 1 0 0 1
+4 0 1127
+3 0 1127
+3 0 1127
+2 0 1127
+4 0 1127
+3 0 1127
+3 0 1127
+2 0 1127
+2 0 1127
+2 0 1127
+2 0 1127 1127 0 0 1 0 0 1
+8 0 1127
+5 0 1127
+5 0 1127
+2 0 1127 0 0 0 0 0 0 0 0 1127
-2 0 546
+2 0 546 0 0 0 0 0 0 0 0 546
+2 0 1673
+2 0 1673 0 0 0 0 0 0 0 0 1673 33
jcnd=945/1673 +64 0 
* 0 
+2 0 728
+8 0 728
+3 0 728
+3 0 728 0 0 0 0 0 0 0 0 728 1
jcnd=1/728 0x3877c79fc0 0 
* 0 
-6 0 875
+3 0 875
+3 0 875 0 0 0 0 0 0 0 0 875 11
jcnd=451/875 0x3877c79fc0 0 
* 0 
+2 0 1151
+2 0 1151 1151
+8 0 1151
+2 0 1151 0 0 0 0 0 0 0 0 1151 27
jcnd=875/1151 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
+2 0 276
+2 0 276
+4 0 276
+2 0 276
+2 0 276 0 0 0 0 0 0 0 0 276 6
jcnd=214/276 -8 0 
* 0 
-8 0 8785
+4 0 8785
+2 0 8785
+2 0 8785 0 0 0 0 0 0 0 0 8785 609
jcnd=7762/8785 -8 0 
* 0 
-2 0 945 0 0 1 0 0 1
+2 0 945 0 0 0 0 0 0 0 0 945 29
jcnd=809/945 -8 0 
* 0 
+2 0 1221 1221 0 0 13 0 0 13
+4 0 1221 0 0 1 0 0 1
+3 0 1221 0 0 0 0 0 0 0 0 1221 519
jcnd=675/1221 0x3877c7a1cf 0 
* 0 
+6 0 546
+2 0 546
+4 0 546
+2 0 546
+2 0 546
+2 0 546 0 546
+8 0 546
jump=546 0x3877c79f30 0 
* 0 
+37 0 452 452 0 1 0 0 1
+5 0 452 452
+4 0 452
+4 0 452 452
+5 0 452 0 0 0 0 0 0 0 0 452
jcnd=452/452 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 288 288
+4 0 288
+4 0 288
+2 0 288
+5 0 288 288 0 1 0 0 1
+4 0 288
+3 0 288 0 0 0 0 0 0 0 0 288 4
jcnd=264/288 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 296 0 0 1 0 0 1
+3 0 296 0 296
+4 0 296
jump=296 0x3877c79b99 0 
* 0 
+36 0 675 675 0 1 2 0 1 2
+4 0 675 675 0 0 1 0 0 1
+4 0 675
+3 0 675 675
+4 0 675
+4 0 675
+3 0 675
+3 0 675 675
+4 0 675 0 0 0 0 0 0 0 0 675
+6 0 675 675
+4 0 675 0 0 0 0 0 0 0 0 675
+6 0 675 675 0 1 0 0 1
+8 0 675 0 675
+4 0 675 0 675
+4 0 675 0 0 0 0 0 0 0 0 675 11
jcnd=419/675 +38 0 
* 0 
+2 0 256 256 0 0 2 0 0 2
+4 0 256
+3 0 256 0 0 0 0 0 0 0 0 256
+2 0 256 256
+5 0 256 0 0 0 0 0 0 0 0 256
+6 0 256 256
+4 0 256 0 256
+4 0 256 256
+4 0 256 0 256
+4 0 256
+4 0 256 0 0 0 0 0 0 0 0 256
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 8
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 654 654
+4 0 654 654 0 1 0 0 1
+4 0 654 0 0 0 0 0 0 0 0 654
+6 0 654
+4 0 654
+7 0 654 0 654 0 0 7 0 0 7
+4 0 654 0 654
+4 0 654 0 654
+4 0 654 0 654
+4 0 654 0 0 0 0 0 0 0 0 654 4
jcnd=188/654 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 188
+7 0 188 0 0 0 0 0 0 0 0 188
jcnd=188/188 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 663 0 0 1 0 0 1
+7 0 663 0 663 0 0 1 0 0 1
+4 0 663
+3 0 663
+3 0 663
+4 0 663
+3 0 663
+4 0 663
+3 0 663
+3 0 663
+4 0 663 0 663
+4 0 663 0 663 0 0 1 0 0 1
+4 0 663
jump=663 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 699
+4 0 699 0 0 1 0 0 1
+3 0 699
+3 0 699 0 699
cfn=(104)
calls=699 0x3877c77180 0 
* 0 2796 1398 0 1 0 0 1 0 0 699
+5 0 699
+3 0 699
jump=699 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 452 0 0 1 0 0 1
+7 0 452
+2 0 452
+4 0 452
+3 0 452
+3 0 452 0 452
+5 0 452
+3 0 452
+4 0 452
+3 0 452 0 0 1 0 0 1
+4 0 452
+4 0 452
+3 0 452
+4 0 452 0 452
+4 0 452 0 452 0 0 18 0 0 18
+4 0 452
+3 0 452
+3 0 452 0 452
cfn=(104)
calls=452 0x3877c77180 0 
* 0 1808 904 0 0 0 0 0 0 0 452 1
+5 0 452
+3 0 452
jump=452 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1304 0 1304 1 0 0 1
+5 0 1304 0 1304
+5 0 1304
+3 0 1304 0 1304
+5 0 1304
+4 0 1304 1304 0 0 1 0 0 1
+7 0 1304 1304 0 0 1 0 0 1
+3 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304 2
+6 0 1304 1304 0 0 1 0 0 1
+7 0 1304 1304 0 1 1 0 1 1
+4 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
+2 0 1304 1304 0 0 1 0 0 1
+3 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 +97 0 
* 0 
+18 0 1304
+3 0 1304
+3 0 1304 0 1304
cfn=(38)
calls=1304 0x3877c79a00 0 
* 0 297782 36672 43189 45 32 51 45 32 51 46036 2088
+5 0 1304
+3 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
+2 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
+2 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304 23
+2 0 1304 1304
+7 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 +13 0 
* 0 
+13 0 1304 0 1304
+2 0 1304 0 0 0 0 0 0 0 0 1304 12
+6 0 1304
+3 0 1304 1304
+4 0 1304 1304
+5 0 1304 1304
+5 0 1304
+4 0 1304 1304
+1 0 1304 0 0 1 0 0 1
+5 0 1304 1304 0 0 1 0 0 1
+7 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 +14 0 
* 0 
+14 0 1304 0 1304 1 0 0 1
+3 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304
jump=1304 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1304 0 1304 1 0 0 1
+2 0 1304
+3 0 1304
+3 0 1304 0 1304
+2 0 1304
+3 0 1304 0 1304
+1 0 1304
+3 0 1304 0 1304
+1 0 1304
+3 0 1304
+4 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304
+4 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304 7
jcnd=10/1304 0x3877c838d1 0 
* 0 
+2 0 1294
+3 0 1294
+3 0 1294
+3 0 1294
+3 0 1294
+3 0 1294 0 0 0 0 0 0 0 0 1294
jcnd=1294/1294 +41 0 
* 0 
+41 0 1294 0 0 1 0 0 1
+3 0 1294 0 0 0 0 0 0 0 0 1294
jcnd=1294/1294 0x3877c839c0 0 
* 0 
+24 0 1294
+3 0 1294
+4 0 1294
+3 0 1294
+3 0 1294
+3 0 1294
+3 0 1294
+3 0 1294 0 0 0 0 0 0 0 0 1294 644
jcnd=654/1294 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 650
+10 0 650 650 0 0 2 0 0 2
+3 0 650
+4 0 650 0 650
+3 0 650
+4 0 650
+4 0 650 0 0 0 0 0 0 0 0 650
jcnd=650/650 -18 0 
* 0 
-18 0 2006 2006
+3 0 2006
+4 0 2006 0 2006
+3 0 2006
+4 0 2006
+4 0 2006 0 0 0 0 0 0 0 0 2006 11
jcnd=1356/2006 -18 0 
* 0 
+2 0 1304
+4 0 1304
+3 0 1304 1304
+1 0 1304 1304
+1 0 1304 1304
+2 0 1304 1304 0 1 0 0 1
+2 0 1304 1304
0x3877c839c0 0 1294 0 0 1 0 0 1
+3 0 1294
+3 0 1294
+3 0 1294
+4 0 1294 0 1294 0 0 1 0 0 1
cfn=(284)
calls=1294 0x3877c89b20 0 
* 0 289322 107416 104828 6 1 60 6 1 60 13836 824 1294 160
+5 0 1294
jump=1294 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1304 1304 0 1 1 0 1 1
+7 0 1304 1304 0 0 1 0 0 1
+3 0 1304
+3 0 1304 0 0 1 0 0 1 0 0 1304
+6 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304 1304
+4 0 1304
+4 0 1304
+2 0 1304 0 0 0 0 0 0 0 0 1304 2
+2 0 1304
+2 0 1304
+7 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 +14 0 
* 0 
+14 0 1304
+2 0 1304
cfn=(170)
calls=1304 0x3877c78650 0 
* 0 126651 33511 19125 19 3 0 19 3 0 30609 547

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 9827445 4018268 2320460 241 97 139 241 97 139 286010 5150 7814 160
