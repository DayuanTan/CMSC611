version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1834


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2397938406 - 2400006571
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1844 0 0 1 0 0 1
+3 0 1844 0 0 0 0 0 0 0 0 1844
+2 0 1844
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1844 0x3877c7b8b0 0 
* 0 219629 57259 30989 21 6 0 21 6 0 54201 727
* 0 1844 1844 0 1 1 0 1 1 0 0 0 1844

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1844 0 1844 1 0 0 1
+1 0 1844
+5 0 1844
+3 0 1844 0 1844
+1 0 1844
+4 0 1844 0 0 1 0 0 1
+3 0 1844
+4 0 1844
+3 0 1844 0 1844 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1844 0x3877c7aa50 0 
* 0 551325 79917 82457 48 39 58 48 39 58 93664 4124
* 0 1844 1844 0 1 1 0 1 1 0 0 0 1844
+5 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844
jcnd=1844/1844 +96 0 
* 0 
+96 0 1844 0 0 1 0 0 1
+4 0 1844 1844
+1 0 1844 1844
+1 0 1844 1844

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 457 0 457
+1 * 457
+3 * 457
+4 * 457 0 457
+4 * 457 0 457
+4 * 457 0 457
+4 +1 457 457
+4 * 457 457
+4 * 457 457
+4 * 457
+3 * 457
+3 * 457 0 457
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=457 0x403df2 -87 
* * 10968 3656 4113 0 29 4 0 29 4 457 2
+5 * 457 457
+1 * 457 457

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 914 0 914 1 0 0 1
+1 * 914
+3 * 914 0 914
+4 * 914 914
+4 * 914 914
+1 * 914 914

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 457 0 457
+1 * 457
+3 * 457
+4 * 457 0 457
+4 * 457 0 457
+4 * 457 0 457
+4 +1 457 457
+4 * 457 457
+4 * 457 457
+4 * 457
+3 * 457
+3 * 457 0 457
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=457 0x40406a -87 
* * 10968 3656 4113 0 30 20 0 30 20 457
+5 * 457 457
+1 * 457 457

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 914 0 914
+1 * 914
+3 * 914 0 914
+4 * 914 914
+4 * 914 914
+1 * 914 914

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 994 0 994
+1 * 994
+3 * 994 0 994 0 0 1 0 0 1
+4 +1 994 994
+4 * 994 994
+1 * 994 994

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828
+4 * 1828 0 1828
+4 +1 1828
+4 * 1828
+3 * 1828 0 1828
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1828 0x404ffe 790 
* * 10968 5484 3656 1 0 0 1
+5 * 1828 1828
+3 * 1828 1828
+1 * 1828 1828

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828 0 1828
+4 +1 1828 1828
+4 * 1828 1828
+1 * 1828 1828

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828
+4 * 1828 0 1828
+4 +1 1828
+4 * 1828
+3 * 1828 0 1828 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1828 0x40500c 790 
* * 10968 5484 3656 1 0 0 1
+5 * 1828 1828
+3 * 1828 1828
+1 * 1828 1828

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 994 0 994
+1 * 994
+3 * 994 0 994
+4 +1 994 994
+4 * 994 994
+1 * 994 994

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828 0 1828
+4 +1 1828 1828 0 1 0 0 1
+4 * 1828 1828
+1 * 1828 1828

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 914 0 914
+1 * 914
+3 * 914 0 914
+4 * 914 0 914
+4 * 914 914
+4 * 914 914
+1 * 914 914

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 922 0 922 1 0 0 1
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 * 922 0 922 1 0 0 1
+4 +2 922 922
+4 * 922
+3 * 922 0 922
cfn=(28)
calls=922 0x404992 +12 
* * 5532 1844 1844 1 0 0 1
+5 * 922 922
+4 * 922
+3 * 922
+2 * 922 0 0 0 0 0 0 0 0 922
jcnd=922/922 +7 +3 
* * 
+7 +3 922 922
+4 * 922
+4 * 922
+3 * 922 0 922
cob=(5)
cfi=(8)
cfn=(32)
calls=922 0x387e4bd0b0 0 
* * 292193 44420 46707 17 28 16 17 28 16 47688 1896 922
* * 922 922 0 1 1 0 1 1 0 0 0 922
+5 +1 922 922
+1 * 922 922

fn=(102)
0x4048de 113 938 0 938 1 0 0 1
+1 * 938
+3 * 938 0 938
+4 +1 938
+10 * 938 938
+1 * 938 938

fn=(266)
0x40406a 129 457 0 457
+1 * 457
+3 * 457
+4 * 457 0 457
+4 * 457 0 457
+4 * 457 0 457
+4 +1 457 457
+4 * 457
+3 * 457
+5 * 457 0 457
cfi=(16)
cfn=(226)
calls=457 0x402d61 -20 
* * 3199 1371 1371
+5 * 457
+3 * 457 0 0 0 0 0 0 0 0 457
+2 * 457 457
+4 * 457 457 0 0 30 0 0 30
+2 * 457 0 457 0 0 20 0 0 20
+2 * 457 457
+1 * 457 457

fn=(28)
0x404992 113 938 0 938 1 0 0 1
+1 * 938
+3 * 938 0 938
+4 +1 938
+10 * 938 938
+1 * 938 938

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 914 0 914
+1 * 914
+3 * 914 0 914
+4 * 914 914
+1 * 914 914

fn=(224)
0x403df2 129 457 0 457
+1 * 457
+3 * 457
+4 * 457 0 457
+4 * 457 0 457
+4 * 457 0 457
+4 +1 457 457
+4 * 457
+3 * 457
+5 * 457 0 457
cfi=(16)
cfn=(226)
calls=457 0x402d61 -20 
* * 3199 1371 1371
+5 * 457
+3 * 457 0 0 0 0 0 0 0 0 457 2
+2 * 457 457
+4 * 457 457 0 0 29 0 0 29
+2 * 457 0 457 0 0 4 0 0 4
+2 * 457 457
+1 * 457 457

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 922 0 922
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 * 922 0 922
+4 +1 922 922
+4 * 922
+3 * 922 0 922
cob=(5)
cfi=(8)
cfn=(164)
calls=922 0x387e4bb2f0 0 
* * 111806 28843 14923 23 6 0 23 6 0 27530 320 922
* * 922 922 0 1 1 0 1 1 0 0 0 922
+5 * 922 922
+1 * 922 922

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 922 0 922
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 * 922 0 922
+4 +1 922 922
+4 * 922
+3 * 922 0 922
cob=(5)
cfi=(8)
cfn=(164)
calls=922 0x387e4bb2f0 0 
* * 115199 30260 16066 0 1 0 0 1 0 28515 407 922
* * 922 922 0 0 0 0 0 0 0 0 0 922
+5 * 922 922
+1 * 922 922

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 922 0 922 1 0 0 1
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 * 922 0 922
+4 +2 922 922
+4 * 922
+3 * 922 0 922
cfn=(102)
calls=922 0x4048de +12 
* * 5532 1844 1844 1 0 0 1
+5 * 922 922
+4 * 922 0 0 1 0 0 1
+3 * 922
+2 * 922 0 0 0 0 0 0 0 0 922
jcnd=922/922 +7 +3 
* * 
+7 +3 922 922
+4 * 922
+4 * 922
+3 * 922 0 922
cob=(5)
cfi=(8)
cfn=(32)
calls=922 0x387e4bd0b0 0 
* * 288636 42873 41282 35 12 43 35 12 43 47820 2228 922
* * 922 922 0 0 0 0 0 0 0 0 0 922
+5 +1 922 922
+1 * 922 922

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 914 0 914 1 0 0 1
+1 * 914
+3 * 914 0 914 0 0 1 0 0 1
+4 * 914 0 914
+4 * 914 914
+1 * 914 914

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 914 0 914 1 0 0 1
+1 * 914
+3 * 914 0 914
+4 * 914 0 914
+4 * 914 914
+1 * 914 914

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 914 0 914
+1 * 914
+3 * 914 0 914
+4 * 914 914
+1 * 914 914

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +2 914 914
+4 * 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=914 0x404484 107 
* * 534426 181674 176194 25 3 3 25 3 3 20954 1217 1824 228
+5 * 914 914
+1 * 914 914

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +2 914 914 0 1 0 0 1
+4 * 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=914 0x404a36 450 
* * 508834 172534 167054 24 3 3 24 3 3 20954 1217 1824 228
+5 * 914 914
+1 * 914 914

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +2 914 914
+4 * 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=914 0x40439c 107 
* * 534426 181674 176194 7 1 43 7 1 43 20954 1139 1824
+5 * 914 914
+1 * 914 914

fn=(116)
0x40439c 107 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +10 914 914
+4 * 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=914 0x4047d7 -26 
* * 521630 177104 171624 7 1 43 7 1 43 20954 1139 1824
+5 +1 914 914
+1 * 914 914

fn=(118)
0x4047d7 91 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +2 914 914
+4 * 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=914 0x4049e2 450 
* * 508834 172534 167054 7 1 43 7 1 43 20954 1139 1824
+5 * 914 914
+1 * 914 914

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +10 914 914
+4 * 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(52)
calls=914 0x404829 -26 
* * 521630 177104 171624 25 3 3 25 3 3 20954 1217 1824 228
+5 +1 914 914
+1 * 914 914

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 922 0 922 1 0 0 1
+1 * 922 0 0 1 0 0 1
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 0 922 922
+5 0 922 0 0 0 0 0 0 0 0 922
+2 0 922 922
+4 0 922 922
+4 0 922
+5 0 922
+3 0 922
+3 0 922 0 922
fi=(6) ???
cfi=(5)
cfn=(100)
calls=922 0x40461a 99 
* 0 312608 50249 48658 38 12 43 38 12 43 48742 2228 1844
+5 0 922
fi=(6)
jump=922 +7 0 
* 0 
+7 0 922 922
+1 0 922 922

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 316244 0 316244
+1 * 316244
+3 * 316244 0 316244
+4 * 316244 0 316244
+4 +1 316244 316244
+4 * 316244 316244
+3 * 316244 316244
+4 * 316244
+4 * 316244
+3 * 316244 316244
+1 * 316244 316244

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 316244 0 316244
+1 * 316244
+3 * 316244 0 316244 1 0 0 1
+4 * 316244 0 316244
+4 +1 316244 316244
+4 * 316244 316244
+3 * 316244 316244
+4 * 316244
+4 * 316244
+3 * 316244 316244
+1 * 316244 316244

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 914
+4 * 914
+3 * 914 0 914
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(194) std::allocator<int>::~allocator()
calls=914 0x403d7e +42 
* * 12796 4570 4570 1 0 0 1
+5 * 914 914
+1 * 914 914

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 914 0 914 1 0 0 1
+1 * 914
+3 * 914 0 914
+1 * 914
+4 * 914 0 914
+4 +2 914 914
+4 * 914 914
+4 * 914
+3 * 914 914
+4 * 914 914
+3 * 914
+3 * 914
+3 * 914
+4 * 914
+3 * 914 914
+4 * 914 914
+3 -1 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=914 0x403d98 +11 
* * 139908 39176 25092 1 1 0 1 1 0 29226 398 1828
+5 +1 914 914
+4 * 914
+3 * 914 0 914
cfn=(192)
calls=914 0x403296 -82 
* * 21022 7312 7312 1 0 0 1
+5 * 914
jump=914 +28 * 
* * 
+28 * 914
+4 * 914 914
+1 * 914 914
+1 * 914 914

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 3688 0 3688 1 0 0 1
+1 * 3688
+3 * 3688 0 3688 0 0 1 0 0 1
+4 +1 3688 3688
+4 * 3688 3688 0 1 1 0 1 1
+4 * 3688
+3 * 3688 3688
+4 * 3688 3688
+3 * 3688
+3 * 3688
+3 * 3688
+4 * 3688 3688
+1 * 3688 3688

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 +2 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=914 0x404236 -14 
* * 328388 55953 57318 23 25 11 23 25 11 49166 1845 1828
+5 * 914 914
+4 * 914 0 914
+3 +1 914 914
+4 * 914 914 0 1 0 0 1
+3 * 914 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+3 * 914 914
+4 * 914
+4 * 914
+3 * 914 914
+4 * 914 0 914
+4 +1 914 914
+1 * 914 914

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 +2 914 914
+4 * 914 914 0 1 0 0 1
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(96)
calls=914 0x403fbe -14 
* * 323904 54166 51686 24 11 40 24 11 40 49116 2179 1828
+5 * 914 914
+4 * 914 0 914
+3 +1 914 914
+4 * 914 914
+3 * 914 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+3 * 914 914
+4 * 914
+4 * 914
+3 * 914 914
+4 * 914 0 914
+4 +1 914 914
+1 * 914 914

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 457 0 457
+1 * 457
+3 * 457 0 0 1 0 0 1
+4 * 457 0 457
+4 * 457 0 457
+4 +2 457 457
+4 * 457 457
+4 * 457 457
+4 * 457 457
+4 * 457
+3 * 457 0 0 0 0 0 0 0 0 457
jcnd=8/457 +51 +10 
* * 
+2 +3 449 449
+4 * 449 449
+4 * 449 449
+4 -1 449 449
+4 * 449
+3 * 449
+3 * 449 0 449
cfi=(3)
cfn=(264)
calls=449 0x4036b1 215 
* * 17062 5837 6286 0 29 16 0 29 16 449
+5 +2 449 449
+4 * 449 449
+4 * 449
+4 * 449 449
+4 * 449 0 449
+4 * 449
jump=449 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11990 3705 3228 18 5 28 18 5 28 725 72 47
+5 +2 457 457
+1 * 457 457

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1852 0 1852 1 0 0 1
+1 * 1852
+3 * 1852 0 1852 1 0 0 1
+4 +1 1852 1852
+4 * 1852 1852
+1 * 1852 1852

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+3 * 914 0 914
+4 * 914
+4 * 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=914 0x404380 726 
* * 9140 4570 3656
+5 * 914 914
+4 * 914 914
+1 * 914 914

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 914 0 914
+1 * 914
+3 * 914 0 914
+1 * 914
+4 * 914 0 914 1 0 0 1
+4 +2 914 914
+4 * 914
+3 * 914 0 914
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=914 0x40325e 113 
* * 5484 2742 1828
+5 * 914
+3 * 914 914
+4 * 914 914
+4 * 914 914
+4 * 914 914
+3 -1 914
+3 * 914
+3 * 914 0 914
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=914 0x40326c 148 
* * 28334 9140 10968 4 0 0 4
+5 +1 914 914
+4 * 914
+3 * 914 0 914
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=914 0x4031ec 159 
* * 183162 55142 35834 27 7 0 27 7 0 28250 315 1828
+5 * 914
jump=914 +28 * 
* * 
+28 * 914 0 0 1 0 0 1
+4 * 914 914
+1 * 914 914
+1 * 914 914

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 922 0 922 1 0 0 1
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 * 922 0 922
+4 +2 922 922
+5 * 922 0 0 0 0 0 0 0 0 922
+2 +1 922 922
+4 * 922 922
+4 * 922 922
+4 * 922
+3 * 922
+3 * 922 0 922
cfi=(5)
cfn=(160)
calls=922 0x4044d6 -65 
* * 122870 32531 19533 24 7 0 24 7 0 27530 320 1844
+5 +1 922 922
+1 * 922 922

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 914 0 914
+1 * 914
+3 * 914 0 914
+1 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=914 0x4043ca -45 
* * 32904 11882 12796 4 0 4 4 0 4
+5 +1 914 914 0 1 0 0 1
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(20)
calls=914 0x404412 +43 
* * 351238 66921 63716 24 25 11 24 25 11 49166 1845 1828
+5 * 914
jump=914 +28 * 
* * 
+28 * 914
+4 * 914 914
+1 * 914 914
+1 * 914 914

fn=(14)
0x4043ca 90 914 0 914 1 0 0 1
+1 * 914
+3 * 914
+4 * 914 0 914 0 0 1 0 0 1
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=914 0x404804 +24 
* * 16452 5484 6398 2 0 1 2 0 1
+5 * 914 914
+4 * 914 0 914 0 0 2 0 0 2
+7 * 914 914
+4 * 914 0 914 1 0 0 1
+8 * 914 914
+4 * 914 0 914
+8 +1 914 914
+1 * 914 914

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 914 0 914 1 0 0 1
+1 * 914
+3 * 914 0 914
+2 * 914 0 914
+2 * 914 0 914
+1 * 914 0 0 1 0 0 1
+4 * 914 0 914
+4 * 914 0 914
+4 +2 914 914
+4 * 914
+3 * 914 0 914
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=914 0x4039fc 117 
* * 5484 2742 1828 2 0 0 2
+5 * 914
+3 * 914 0 914
cfi=(3)
cfn=(84)
calls=914 0x4039ed -88 
* * 5484 2742 1828
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(2)
calls=914 0x402d74 645 
* * 11882 5484 1828
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914
+3 * 914
+3 * 914 0 914 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=914 0x403a0a 134 
* * 399766 83414 77278 31 11 40 31 11 40 49116 2179 1828
+5 +4 914 914
+4 * 914
+3 * 914 0 914
cfn=(106)
calls=914 0x40325e 113 
* * 5484 2742 1828 1 0 0 1
+5 * 914
+3 * 914 914
+4 * 914 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=914 0x403a98 565 
* * 22850 9140 7312 2 0 0 2
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(112)
calls=914 0x403a68 547 
* * 22850 9140 7312
+5 * 914
+3 * 914
+3 * 914
+3 * 914
+3 * 914 0 914
cfi=(11)
cfn=(114)
calls=914 0x403ac9 -60 
* * 548136 186244 181678 7 1 43 7 1 43 20954 1139 1824
+5 -3 914 914
+4 * 914 0 914
+4 * 914
jump=914 +28 +4 
* * 
+28 +4 914
+4 * 914 914
+1 * 914 914
+2 * 914 914
+2 * 914 914
+1 * 914 914

fn=(188)
0x403d98 171 922 0 922 1 0 0 1
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 * 922 0 922
+4 +2 922 922
+5 * 922 0 0 0 0 0 0 0 0 922 8
+2 +1 922 922
+4 * 922 922
+4 * 922 922
+4 * 922
+3 * 922
+3 * 922 0 922
cfi=(5)
cfn=(190)
calls=922 0x40452a -65 
* * 126263 33948 20676 0 1 0 0 1 0 28515 407 1844
+5 +1 922 922
+1 * 922 922

fn=(22)
0x404236 167 922 0 922 1 0 0 1
+1 * 922
+3 * 922
+4 * 922 0 922 1 0 0 1
+4 * 922 0 922
+4 0 922 922
+5 0 922 0 0 0 0 0 0 0 0 922
+2 0 922 922
+4 0 922 922
+4 0 922
+5 0 922
+3 0 922
+3 0 922 0 922
fi=(6)
cfi=(5)
cfn=(26)
calls=922 0x404730 99 
* 0 316165 51796 54083 21 29 16 21 29 16 48610 1896 1844
+5 0 922
fi=(6)
jump=922 +7 0 
* 0 
+7 0 922 922
+1 0 922 922

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 914 0 914 1 0 0 1
+1 * 914
+3 * 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+4 * 914 0 914
+4 * 914
+4 * 914 0 0 1 0 0 1
+4 * 914
+3 * 914
+3 * 914 0 914
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=914 0x404468 726 
* * 9140 4570 3656 1 0 0 1
+5 * 914 914
+4 * 914 914
+1 * 914 914

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+3 * 914 0 914
+4 * 914
+4 * 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfi=(10)
cfn=(44)
calls=914 0x404468 726 
* * 9140 4570 3656
+5 * 914 914
+4 * 914 914
+1 * 914 914

fn=(86)
0x403a0a 134 914 0 914
+1 * 914
+3 * 914 0 914
+1 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=914 0x4042e2 -45 
* * 32904 11882 12796 5 0 0 5
+5 +1 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914 1 0 0 1
cfn=(94)
calls=914 0x40432a +43 
* * 346754 65134 58084 25 11 40 25 11 40 49116 2179 1828
+5 * 914
jump=914 +28 * 
* * 
+28 * 914
+4 * 914 914
+1 * 914 914
+1 * 914 914

fn=(88)
0x4042e2 90 914 0 914 1 0 0 1
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=914 0x4047b2 +24 
* * 16452 5484 6398 3 0 0 3
+5 * 914 914
+4 * 914 0 914
+7 * 914 914
+4 * 914 0 914
+8 * 914 914
+4 * 914 0 914
+8 +1 914 914
+1 * 914 914

fn=(156)
0x4031ec 159 914 0 914 1 0 0 1
+1 * 914
+3 * 914 0 914
+1 * 914
+4 * 914 0 914
+4 +2 914 914
+4 * 914 914 0 1 0 0 1
+4 * 914
+3 * 914 914
+4 * 914 914
+3 * 914
+3 * 914
+3 * 914
+4 * 914
+3 * 914 914
+4 * 914 914
+3 -1 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(158)
calls=914 0x403ce6 +11 
* * 136548 37776 23952 24 7 0 24 7 0 28250 315 1828
+5 +1 914 914
+4 * 914
+3 * 914 0 914
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=914 0x4031b8 -82 
* * 21022 7312 7312 1 0 0 1
+5 * 914
jump=914 +28 * 
* * 
+28 * 914
+4 * 914 914
+1 * 914 914
+1 * 914 914

fn=(172)
0x4031b8 79 914 0 914 1 0 0 1
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 914
+4 * 914
+3 * 914 0 914
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=914 0x403ccc +42 
* * 12796 4570 4570
+5 * 914 914
+1 * 914 914

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1860 0 1860 1 0 0 1
+1 * 1860
+3 * 1860 0 1860
+4 +1 1860 1860
+4 * 1860 1860 0 0 2 0 0 2
+4 * 1860
+3 * 1860 1860
+4 * 1860 1860
+3 * 1860
+3 * 1860
+3 * 1860
+4 * 1860 1860
+1 * 1860 1860

fn=(106)
0x40325e 113 1852 0 1852 1 0 0 1
+1 * 1852
+3 * 1852 0 1852
+4 +1 1852 1852
+4 * 1852 1852
+1 * 1852 1852

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 930 0 930 1 0 0 1
+1 * 930
+3 * 930 0 930 0 0 1 0 0 1
+4 +1 930 930
+4 * 930 930
+1 * 930 930

fn=(82)
0x4039fc 117 930 0 930 1 0 0 1
+1 * 930
+3 * 930 0 930 1 0 0 1
+4 +1 930 930
+4 * 930 930
+1 * 930 930

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 457 0 457
+1 * 457
+3 * 457
+4 * 457 0 457
+4 * 457 0 457
+4 +2 457 457
+4 * 457 457
+4 * 457 457
+4 * 457 457
+4 * 457
+3 * 457 0 0 0 0 0 0 0 0 457 8
jcnd=8/457 +51 +10 
* * 
+2 +3 449 449
+4 * 449 449
+4 * 449 449
+4 -1 449 449
+4 * 449
+3 * 449
+3 * 449 0 449
cfi=(3)
cfn=(222)
calls=449 0x403373 215 
* * 17062 5837 6286 0 28 3 0 28 3 449 2
+5 +2 449 449
+4 * 449 449
+4 * 449
+4 * 449 449
+4 * 449 0 449
+4 * 449
jump=449 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12884 3928 3432 39 2 7 39 2 7 898 60 47
+5 +2 457 457
+1 * 457 457

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 914 0 914 1 0 0 1
+1 * 914
+3 * 914 0 914
+2 * 914 0 914
+2 * 914 0 914
+1 * 914
+4 * 914 0 914 1 0 0 1
+4 * 914 0 914
+4 +2 914 914
+4 * 914
+3 * 914 0 914
cfn=(6)
calls=914 0x403b08 117 
* * 5484 2742 1828 1 0 1 1 0 1
+5 * 914
+3 * 914 0 914
cfi=(3)
cfn=(8)
calls=914 0x403afa -88 
* * 5484 2742 1828 1 0 0 1
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(10)
calls=914 0x402f54 645 
* * 11882 5484 1828 1 1 0 1 1
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914
+3 * 914
+3 * 914 0 914
cfn=(12)
calls=914 0x403b16 134 
* * 404250 85201 82910 29 25 15 29 25 15 49166 1845 1828
+5 +4 914 914 0 1 0 0 1
+4 * 914
+3 * 914 0 914
cfn=(40)
calls=914 0x40333c 113 
* * 5484 2742 1828 2 0 0 2
+5 * 914
+3 * 914 914
+4 * 914 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(42)
calls=914 0x403ba4 565 
* * 22850 9140 7312 3 0 0 3
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(46)
calls=914 0x403b74 547 
* * 22850 9140 7312
+5 * 914
+3 * 914
+3 * 914
+3 * 914
+3 * 914 0 914 1 0 0 1
cfi=(11)
cfn=(48)
calls=914 0x403bd5 -60 
* * 548136 186244 181678 26 3 3 26 3 3 20954 1217 1824 228
+5 -3 914 914
+4 * 914 0 914
+4 * 914
jump=914 +28 +4 
* * 
+28 +4 914
+4 * 914 914
+1 * 914 914
+2 * 914 914
+2 * 914 914
+1 * 914 914

fn=(108)
0x403a98 565 914 0 914 1 0 0 1
+1 * 914
+3 * 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+4 * 914 0 914
+4 * 914
+4 * 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfi=(10)
cfn=(110)
calls=914 0x404380 726 
* * 9140 4570 3656 1 0 0 1
+5 * 914 914
+4 * 914 914
+1 * 914 914

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 914 0 914
+1 * 914
+3 * 914 0 914
+1 * 914
+4 * 914 0 914 1 0 0 1
+4 +2 914 914
+4 * 914
+3 * 914 0 914
cfn=(40)
calls=914 0x40333c 113 
* * 5484 2742 1828
+5 * 914
+3 * 914 914
+4 * 914 914
+4 * 914 914
+4 * 914 914
+3 -1 914
+3 * 914
+3 * 914 0 914
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=914 0x40334a 148 
* * 28334 9140 10968 2 0 0 2
+5 +1 914 914
+4 * 914
+3 * 914 0 914
cfn=(186)
calls=914 0x4032ca 159 
* * 186522 56542 36974 3 1 0 3 1 0 29226 398 1828
+5 * 914
jump=914 +28 * 
* * 
+28 * 914 0 0 1 0 0 1
+4 * 914 914
+1 * 914 914
+1 * 914 914

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828
+4 * 1828 0 1828 1 0 0 1
+4 +1 1828 1828
+4 * 1828
+3 * 1828 0 1828
cfi=(13)
cfn=(58)
calls=1828 0x404d8f -77 
* * 10968 5484 3656 1 0 0 1
+5 * 1828 1828
+1 * 1828 1828

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 930 0 930
+1 * 930
+3 * 930
+4 * 930 0 930 1 0 0 1
+4 * 930 0 930
+4 * 930 0 930
+4 +2 930 930
+4 * 930 930
+4 * 930
+3 * 930
+3 * 930
+4 * 930 0 930
+4 +1 930 930
+5 * 930 0 0 0 0 0 0 0 0 930
jcnd=8/930 +33 +2 
* * 
+2 +1 922 922
+4 * 922
+8 * 922 922
+4 * 922 922
+4 * 922
+3 * 922 0 0 1 0 0 1
+3 * 922 0 922 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=922 0x3877c83840 0 
* * 338124 113440 111601 11 2 20 11 2 20 20124 1221 917 228
* * 922 922 0 1 1 0 1 1 0 0 0 922
+5 +1 930 930
+4 * 930
+8 * 930 930
+4 * 930
+3 +1 930 930
+1 * 930 930

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 930 0 930
+1 * 930
+3 * 930
+4 * 930 0 930 1 0 0 1
+4 * 930 0 930
+4 * 930 0 930 0 0 1 0 0 1
+4 +2 930 930
+4 * 930 930
+4 * 930
+3 * 930
+3 * 930
+4 * 930 0 930
+4 +1 930 930
+5 * 930 0 0 0 0 0 0 0 0 930
jcnd=8/930 +33 +2 
* * 
+2 +1 922 922
+4 * 922
+8 * 922 922
+4 * 922 922
+4 * 922
+3 * 922
+3 * 922 0 922
cob=(2)
cfi=(9)
cfn=(78)
calls=922 0x3877c83840 0 
* * 338124 113440 111601 0 1 44 0 1 44 20124 1145 917
* * 922 922 0 0 0 0 0 0 0 0 0 922
+5 +1 930 930
+4 * 930
+8 * 930 930
+4 * 930
+3 +1 930 930
+1 * 930 930

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914 1 0 0 1
+4 * 914 0 914
+4 * 914 0 914
+4 +8 914 0 914
+4 +3 914 914
+4 * 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(74)
calls=914 0x404f37 -22 
* * 362594 123178 116784 14 3 2 14 3 2 20954 1217 1824 228
+5 +1 914 914
+1 * 914 914

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 914 0 914
+1 * 914
+3 * 914 0 914
+2 * 914 0 914
+1 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +4 914 914
+4 * 914
+3 * 914 0 914
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=914 0x404878 277 
* * 13710 5484 4570 1 0 0 1
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=914 0x404d44 277 
* * 22850 8226 7312 2 0 0 2
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(132)
calls=914 0x404d44 277 
* * 22850 8226 7312
+5 * 914
+3 * 914
+3 * 914
+3 * 914 0 914
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=914 0x404d5e -49 
* * 376304 127748 122268 1 1 43 1 1 43 20954 1139 1824
+5 +1 914
+4 * 914 914
+1 * 914 914
+2 * 914 914
+1 * 914 914

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 914 0 914
+1 * 914
+3 * 914 0 914
+1 * 914
+4 * 914 0 914 1 0 0 1
+4 * 914 0 914
+4 * 914 0 914
+4 +10 914 914
+4 * 914
+3 * 914 0 914
cfn=(56)
calls=914 0x404c38 288 
* * 13710 5484 4570 3 0 0 3
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(56)
calls=914 0x404c38 288 
* * 13710 5484 4570
+5 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=914 0x404c52 -36 
* * 461306 156082 150602 20 3 3 20 3 3 20954 1217 1824 228
+5 +1 914
+4 * 914 914
+1 * 914 914
+1 * 914 914

fn=(60)
0x404c52 424 914 0 914
+1 * 914
+3 * 914 0 914
+2 * 914 0 914
+1 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +4 914 914
+4 * 914
+3 * 914 0 914
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=914 0x40492d 277 
* * 13710 5484 4570 2 0 0 2
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=914 0x404d9d 277 
* * 22850 8226 7312 2 0 1 2 0 1
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(66)
calls=914 0x404d9d 277 
* * 22850 8226 7312
+5 * 914
+3 * 914
+3 * 914
+3 * 914 0 914
cfn=(72)
calls=914 0x404db7 -49 
* * 376304 127748 122268 15 3 2 15 3 2 20954 1217 1824 228
+5 +1 914
+4 * 914 914
+1 * 914 914
+2 * 914 914
+1 * 914 914

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 962 0 962 1 0 0 1
+1 * 962
+3 * 962
+4 * 962 0 962
+4 +1 962 962
+4 * 962
+3 * 962 0 962 1 0 0 1
cfi=(13)
cfn=(64)
calls=962 -33 -66 
* * 5772 2886 1924
+5 * 962 962
+1 * 962 962

fn=(66)
0x404d9d 277 1828 0 1828
+1 * 1828
+3 * 1828
+4 * 1828 0 1828
+4 +1 1828 1828
+4 * 1828
+3 * 1828 0 1828
cfi=(13)
cfn=(68)
calls=1828 0x404f1a -58 
* * 29248 10968 9140 2 0 1 2 0 1
+5 * 1828 1828
+1 * 1828 1828

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 914 0 914
+1 * 914
+3 * 914 0 914
+1 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +10 914 914
+4 * 914
+3 * 914 0 914
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=914 0x404bc6 288 
* * 13710 5484 4570 3 0 0 3
+5 * 914
+3 * 914 914
+4 * 914
+3 * 914 0 914
cfn=(122)
calls=914 0x404bc6 288 
* * 13710 5484 4570
+5 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(126)
calls=914 0x404be0 -36 
* * 461306 156082 150602 4 1 43 4 1 43 20954 1139 1824
+5 +1 914
+4 * 914 914
+1 * 914 914
+1 * 914 914

fn=(128)
0x404878 277 962 0 962
+1 * 962
+3 * 962
+4 * 962 0 962 1 0 0 1
+4 +1 962 962
+4 * 962
+3 * 962 0 962
cfi=(13)
cfn=(130)
calls=962 -33 -66 
* * 5772 2886 1924 0 0 1 0 0 1
+5 * 962 962
+1 * 962 962

fn=(132)
0x404d44 277 1828 0 1828
+1 * 1828
+3 * 1828
+4 * 1828 0 1828
+4 +1 1828 1828
+4 * 1828
+3 * 1828 0 1828
cfi=(13)
cfn=(134)
calls=1828 0x404e98 -58 
* * 29248 10968 9140 2 0 0 2
+5 * 1828 1828
+1 * 1828 1828

fn=(138)
0x404d5e 379 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 * 914 0 914
+4 +8 914 0 914
+4 +3 914 914
+4 * 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfn=(140)
calls=914 0x404eb5 -22 
* * 362594 123178 116784 1 1 43 1 1 43 20954 1139 1824
+5 +1 914 914
+1 * 914 914

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828
+4 * 1828 0 1828
+4 +1 1828 1828
+4 * 1828
+3 * 1828 0 1828
cfi=(13)
cfn=(124)
calls=1828 0x404d36 -77 
* * 10968 5484 3656 2 0 0 2
+5 * 1828 1828
+1 * 1828 1828

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828 0 1828
+4 +1 1828 1828
+4 * 1828 1828
+1 * 1828 1828

fn=(110)
0x404380 726 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828 0 1828
+4 * 1828 0 1828
+4 * 1828 1828
+4 * 1828 1828
+3 * 1828 1828
+4 * 1828 0 1828
+3 * 1828 1828
+1 * 1828 1828

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828 0 1828
+4 +1 1828 1828
+4 * 1828 1828
+1 * 1828 1828

fn=(44)
0x404468 726 1828 0 1828
+1 * 1828
+3 * 1828 0 1828
+4 * 1828 0 1828
+4 * 1828 1828
+4 * 1828 1828
+3 * 1828 1828
+4 * 1828 0 1828 1 0 0 1
+3 * 1828 1828
+1 * 1828 1828

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 922 0 922 1 0 0 1
+1 * 922
+3 * 922 0 922
+4 * 922 0 922 1 0 0 1
+4 * 922 922
+1 * 922 922

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 922 0 922 1 0 0 1
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 +4 922 922
+4 * 922 922
+4 * 922
+3 * 922
+3 * 922 0 922
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=922 0x40454c -14 
* * 5532 1844 2766 1 0 0 1
+5 +2 922 922
+1 * 922 922

fn=(150)
0x40326c 148 922 0 922
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 * 922 0 922
+4 +3 922 922 0 1 0 0 1
+4 * 922 922
+4 * 922
+3 * 922
+3 * 922 0 922
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=922 0x403d1a -29 
* * 16596 5532 6454 3 0 0 3
+5 +1 922 922
+1 * 922 922

fn=(180)
0x40334a 148 922 0 922
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 * 922 0 922
+4 +3 922 922
+4 * 922 922
+4 * 922
+3 * 922
+3 * 922 0 922
cfn=(182)
calls=922 0x403dcc -29 
* * 16596 5532 6454 2 0 0 2
+5 +1 922 922
+1 * 922 922

fn=(152)
0x403d1a 122 922 0 922 1 0 0 1
+1 * 922
+3 * 922
+4 * 922 0 922
+4 * 922 0 922
+4 +4 922 922
+4 * 922 922
+4 * 922
+3 * 922
+3 * 922 0 922
cfn=(154)
calls=922 0x4044f8 -14 
* * 5532 1844 2766 2 0 0 2
+5 +2 922 922
+1 * 922 922

fn=(184)
0x40454c 112 922 0 922 1 0 0 1
+1 * 922
+3 * 922 0 922
+4 * 922 0 922
+4 * 922 922
+1 * 922 922

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2529 453 453 0 4 5 0 4 5 366 51 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3456 693 660 16 1 3 16 1 3 548 49 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 5 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 457 0 457 1 0 0 1
+1 * 457
+3 * 457
+4 * 457 0 457
+4 * 457 0 457
+4 +1 457 457
+4 * 457
+3 * 457 0 457
cfi=(2)
cfn=(2)
calls=457 0x402d74 645 
* * 5941 2742 914
+5 * 457
+3 * 457 0 457
+3 +1 457 457
+6 * 457 0 457
+3 * 457 457
+6 * 457 0 457
+3 +1 457 457
+6 * 457 0 457 1 0 0 1
+3 * 457 457
+6 * 457 0 457
+3 +2 457 0 457
+7 * 457
jump=457 +86 * 
* * 
+2 +1 105110 105110
+3 * 105110
+3 * 105110 105110
+4 * 105110
+3 * 105110
+3 * 105110 0 105110
cfi=(2)
cfn=(144)
calls=105110 0x402d9a 770 
* * 1156210 525550 315330
+5 * 105110 105110
+4 * 105110 105110
+5 * 105110
+4 * 105110 0 105110
+5 +1 105110 105110
+3 * 105110
+3 * 105110 105110
+4 * 105110
+3 * 105110
+3 * 105110 0 105110
cfi=(2)
cfn=(146)
calls=105110 0x402dba 770 
* * 1156210 525550 315330 1 0 0 1
+5 * 105110 105110
+2 * 105110
+4 * 105110 105110
+5 * 105110
+4 * 105110 0 105110
+5 -2 105110 0 105110
+4 * 105110 105110
+3 * 105110
+3 * 105110 105110
+3 * 105110 0 0 0 0 0 0 0 0 105110 458
jcnd=104653/105110 -93 +1 
* * 
-9 * 457 457 0 1 0 0 1
+3 * 457
+3 * 457 457
+3 * 457 0 0 0 0 0 0 0 0 457
jcnd=457/457 -93 +1 
* * 
+2 +4 457 457
+3 * 457
+3 * 457
+4 * 457 457 0 1 0 0 1
+5 * 457
+4 * 457
+3 * 457 0 457
+5 +1 457 457
+3 * 457
+3 * 457
+4 * 457 457
+5 * 457
+4 * 457
+3 * 457 0 457
+5 +1 457 0 457
+7 * 457
jump=457 0x4016ee * 
* * 
+2 +1 105110 105110
+3 * 105110
+3 * 105110 105110
+4 * 105110
+3 * 105110 0 0 1 0 0 1
+3 * 105110 0 105110
cfi=(2)
cfn=(146)
calls=105110 0x402dba 770 
* * 1156210 525550 315330
+5 * 105110 105110
+2 * 105110
+4 * 105110 105110
+5 * 105110 0 105110
+5 +1 105110 105110
+3 * 105110
+3 * 105110 105110
+4 * 105110
+3 * 105110
+3 * 105110 0 105110
cfi=(2)
cfn=(144)
calls=105110 0x402d9a 770 
* * 1156210 525550 315330
+5 * 105110 105110
+4 * 105110 105110
+5 * 105110 0 105110
+5 +1 105110 105110
+5 * 105110 105110
+5 * 105110 105110
+5 * 105110
+4 * 105110 0 105110
+5 +1 105110 105110
+5 * 105110 105110
+5 * 105110 105110
+5 * 105110
+4 * 105110 0 105110
+5 -4 105110 0 105110
+4 * 105110 105110
+3 * 105110
+3 * 105110 105110
+3 * 105110 0 0 0 0 0 0 0 0 105110 458
jcnd=104653/105110 0x401672 +1 
* * 
-9 * 457 457 0 1 0 0 1
+3 * 457
+3 * 457 457
+3 * 457 0 0 0 0 0 0 0 0 457
jcnd=457/457 0x401672 +1 
* * 
+6 +6 457 457 0 1 0 0 1
+5 * 457 457
+5 * 457 0 457
+5 +2 457 457
+3 +1 457 0 457
+3 * 457 457
+5 * 457 457
+1 * 457 457

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 457
+7 * 457
+7 * 457
+3 * 457
+3 * 457 0 457
cfi=(2)
cfn=(4)
calls=457 0x4030b2 310 
* * 536591 158153 150190 63 29 18 63 29 18 35160 1769 1826 228
+5 * 457
+7 * 457
+7 * 457
+3 * 457
+3 * 457 0 457
cfi=(2)
cfn=(80)
calls=457 0x402ff4 310 
* * 534429 157262 147392 46 12 83 46 12 83 35138 1828 1826
+5 * 457 0 0 1 0 0 1
+7 * 457
+7 * 457
+3 * 457
+3 * 457 0 457
cfn=(142)
calls=457 0x401585 -52 
* * 10961145 4846485 2530409 8 0 0 8 0 0 211134 916
+5 * 457 0 457
+8 * 457 457
+6 * 457 0 457
+6 * 457
+7 * 457
+3 * 457 0 457
cfi=(2)
cfn=(148)
calls=457 0x402df4 414 
* * 119458 37625 27057 33 7 0 33 7 0 14125 160 914
+5 * 457
+7 * 457
+3 * 457 0 457 1 0 0 1
cfi=(2)
cfn=(178)
calls=457 0x402e74 414 
* * 121138 38325 27627 7 1 0 7 1 0 14613 201 914
+5 +2 457
+7 * 457
+7 * 457
+3 * 457
+3 * 457 0 457
cfi=(2)
cfn=(4)
calls=457 0x4030b2 310 
* * 535529 158078 150044 4 0 1 4 0 1 34960 1293 1826
+5 * 457
+7 * 457
+7 * 457
+3 * 457
+3 * 457 0 457
cfi=(2)
cfn=(80)
calls=457 0x402ff4 310 
* * 533207 157182 147210 0 0 0 0 0 0 34932 1490 1826
+5 * 457 457
+6 * 457 0 0 1 0 0 1
+7 * 457
+7 * 457 0 457
+6 * 457 457
+8 * 457
+3 * 457
+3 * 457 0 457
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=457 0x401719 -33 
* * 5072243 2112254 1163065 4 0 0 4 0 0 105567 458
+5 * 457 0 457
+8 * 457 457
+6 * 457 0 457
+6 * 457
+7 * 457 0 0 1 0 0 1
+3 * 457 0 457
cfi=(2)
cfn=(148)
calls=457 0x402df4 414 
* * 119458 37625 27057 0 0 0 0 0 0 14125 155 914
+5 * 457
+7 * 457
+3 * 457 0 457
cfi=(2)
cfn=(178)
calls=457 0x402e74 414 
* * 121138 38325 27627 0 0 0 0 0 0 14613 197 914
+5 +2 457 457
+7 * 457
+3 * 457 0 457
cfi=(2)
cfn=(2)
calls=457 0x402d74 645 
* * 5941 2742 914
+5 * 457 457
+6 * 457
+3 * 457
+3 * 457
+3 * 457 457
+7 * 457
+3 * 457 0 0 1 0 0 1
+3 * 457 0 457
cfi=(2)
cfn=(144)
calls=457 0x402d9a 770 
* * 5027 2285 1371
+5 * 457
+3 * 457
+7 * 457
+3 * 457
+3 * 457 0 457
cfi=(2)
cfn=(200)
calls=457 0x402eda 901 
* * 41980 15746 12059 42 30 10 42 30 10 1804 70 47
+5 +1 457 457
+7 * 457
+3 * 457 0 457
cfi=(2)
cfn=(10)
calls=457 0x402f54 645 
* * 5941 2742 914 0 1 0 0 1
+5 * 457 457
+6 * 457
+3 * 457
+3 * 457
+3 * 457 457
+7 * 457 0 0 1 0 0 1
+3 * 457
+3 * 457 0 457
cfi=(2)
cfn=(146)
calls=457 0x402dba 770 
* * 5027 2285 1371
+5 * 457
+3 * 457
+7 * 457
+3 * 457
+3 * 457 0 457
cfi=(2)
cfn=(244)
calls=457 0x402f7a 901 
* * 41086 15523 11855 19 34 44 19 34 44 1631 72 47
+5 +1 457 457
+7 * 457
+3 * 457 0 457
cfi=(2)
cfn=(10)
calls=457 0x402f54 645 
* * 5941 2742 914
+5 * 457 457
+6 * 457
+3 * 457
+3 * 457
+3 * 457 457 0 1 0 0 1
+7 * 457
+3 * 457
+3 * 457 0 457
cfi=(2)
cfn=(146)
calls=457 0x402dba 770 
* * 5027 2285 1371
+5 * 457 457
+2 * 457
+4 * 457 457
+8 * 457 457
+8 * 457 0 457
+8 +1 457 457
+7 * 457
+3 * 457 0 457
cfi=(2)
cfn=(2)
calls=457 0x402d74 645 
* * 5941 2742 914
+5 * 457 457 0 1 0 0 1
+6 * 457
+3 * 457
+3 * 457
+3 * 457 457
+7 * 457
+3 * 457
+3 * 457 0 457
cfi=(2)
cfn=(144)
calls=457 0x402d9a 770 
* * 5027 2285 1371
+5 * 457 457
+4 * 457 457
+8 * 457
+4 * 457 457
+8 * 457
+3 * 457 0 457
+8 +2 457 0 457
+7 -12 457 457
+8 * 457 457
+7 * 457 0 0 0 0 0 0 0 0 457 1
jcnd=1/457 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 457
+7 * 457
+3 * 457 0 457
cfi=(2)
cfn=(2)
calls=457 0x402d74 645 
* * 5941 2742 914 2 0 1 2 0 1
+5 * 457
+3 * 457 457
+7 * 457
+3 * 457 0 457
cfi=(2)
cfn=(2)
calls=457 0x402d74 645 
* * 5941 2742 914 0 1 0 0 1
+5 * 457
+3 * 457 0 0 0 0 0 0 0 0 457 2
+2 * 457 0 0 1 0 0 1
+5 * 457
jump=457 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 457
+2 * 457 0 0 0 0 0 0 0 0 457
jcnd=457/457 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 457 0 457
+1 * 457
+3 * 457
+4 * 457 0 457
+4 * 457 0 457
+4 * 457 0 457
+5 +1 457 457
+4 * 457
+3 * 457 0 457
cfi=(2)
cfn=(2)
calls=457 0x402d74 645 
* * 5941 2742 914
+5 * 457
+3 * 457 0 457
+3 +1 457 457 0 1 0 0 1
+6 * 457 0 457
+3 * 457 457
+6 * 457 0 457
+3 +2 457 0 457
+7 * 457
jump=457 +86 * 
* * 
+2 +1 105110 105110
+3 * 105110
+3 * 105110 105110
+4 * 105110
+3 * 105110
+3 * 105110 0 105110
cfi=(2)
cfn=(144)
calls=105110 0x402d9a 770 
* * 1156210 525550 315330
+5 * 105110 105110
+4 * 105110 105110
+5 * 105110
+4 * 105110 0 105110
+5 +1 105110 105110
+3 * 105110
+3 * 105110 105110
+4 * 105110
+3 * 105110
+3 * 105110 0 105110
cfi=(2)
cfn=(146)
calls=105110 0x402dba 770 
* * 1156210 525550 315330
+5 * 105110 105110
+2 * 105110
+4 * 105110 105110
+5 * 105110
+4 * 105110 0 105110
+5 -2 105110 0 105110
+4 * 105110 105110
+3 * 105110
+3 * 105110 105110
+3 * 105110 0 0 0 0 0 0 0 0 105110 458
jcnd=104653/105110 -93 +1 
* * 
-9 * 457 457 0 1 0 0 1
+3 * 457
+3 * 457 457
+3 * 457 0 0 0 0 0 0 0 0 457
jcnd=457/457 -93 +1 
* * 
+2 +4 457 457
+3 * 457
+3 * 457 0 0 1 0 0 1
+4 * 457 457
+5 * 457
+4 * 457
+3 * 457 0 457
+5 +1 457 457
+3 * 457
+3 * 457
+4 * 457 457
+5 * 457
+4 * 457
+3 * 457 0 457
+5 +1 457 457
+5 * 457 457
+5 * 457 457
+5 * 457 0 0 1 0 0 1
+4 * 457
+3 * 457 0 457
+5 +2 457 457
+3 +1 457 0 457
+3 * 457 457
+5 * 457 457
+1 * 457 457

fl=(4)
fn=(16)
0x404804 115 914 0 914 1 0 0 1
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914
+4 +1 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfi=(5)
cfn=(18)
calls=914 0x404a28 -35 
* * 5484 1828 2742 1 0 1 1 0 1
+5 * 914 914
+1 * 914 914

fn=(174)
0x403ccc 121 914 0 914
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 914
+4 * 914
+3 * 914 0 914
cfi=(5)
cfn=(176)
calls=914 0x4044cc -35 
* * 4570 1828 1828
+5 * 914 914
+1 * 914 914

fn=(90)
0x4047b2 115 914 0 914 1 0 0 1
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 0 914 1 0 0 1
+4 +1 914 914
+4 * 914 914
+4 * 914
+3 * 914
+3 * 914 0 914
cfi=(5)
cfn=(92)
calls=914 0x4049d4 -35 
* * 5484 1828 2742 1 0 0 1
+5 * 914 914
+1 * 914 914

fn=(194)
0x403d7e 121 914 0 914 1 0 0 1
+1 * 914
+3 * 914
+4 * 914 0 914
+4 * 914 914
+4 * 914
+3 * 914 0 914
cfi=(5)
cfn=(196)
calls=914 0x404520 -35 
* * 4570 1828 1828
+5 * 914 914
+1 * 914 914

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1844 0 1844 1 0 0 1
+5 0 1844 0 1844
+5 0 1844
+3 0 1844 0 1844
+5 0 1844
+4 0 1844 1844 0 0 1 0 0 1
+7 0 1844 1844 0 0 1 0 0 1
+3 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844
+6 0 1844 1844 0 0 1 0 0 1
+7 0 1844 1844 0 1 1 0 1 1
+4 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844
+2 0 1844 1844 0 0 1 0 0 1
+3 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844
jcnd=1844/1844 +97 0 
* 0 
+18 0 1844
+3 0 1844
+3 0 1844 0 1844
cfn=(38) _int_malloc
calls=1844 0x3877c79a00 0 
* 0 473877 59633 71393 44 33 58 44 33 58 75224 4039
+5 0 1844
+3 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844
+2 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844
+2 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844 5
+2 0 1844 1844
+7 0 1844 0 0 0 0 0 0 0 0 1844
jcnd=1844/1844 +13 0 
* 0 
+13 0 1844 0 1844
+2 0 1844 0 0 0 0 0 0 0 0 1844 80
+6 0 1844
+3 0 1844 1844
+4 0 1844 1844
+5 0 1844 1844
+5 0 1844
+4 0 1844 1844
+1 0 1844 0 0 1 0 0 1
+5 0 1844 1844 0 0 1 0 0 1
+7 0 1844 0 0 0 0 0 0 0 0 1844
jcnd=1844/1844 +14 0 
* 0 
+14 0 1844 0 1844 1 0 0 1
+3 0 1844 0 0 0 0 0 0 0 0 1844
+6 0 1844
jump=1844 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1844 0 1844 1 0 0 1
+2 0 1844
+3 0 1844
+3 0 1844 0 1844
+2 0 1844
+3 0 1844 0 1844
+1 0 1844
+3 0 1844 0 1844
+1 0 1844
+3 0 1844
+4 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844
+6 0 1844
+4 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844 7
jcnd=10/1844 0x3877c838d1 0 
* 0 
+2 0 1834
+3 0 1834
+3 0 1834
+3 0 1834
+3 0 1834
+3 0 1834 0 0 0 0 0 0 0 0 1834
jcnd=1834/1834 +41 0 
* 0 
+41 0 1834 0 0 1 0 0 1
+3 0 1834 0 0 0 0 0 0 0 0 1834
jcnd=1834/1834 0x3877c839c0 0 
* 0 
+24 0 1834
+3 0 1834
+4 0 1834
+3 0 1834
+3 0 1834
+3 0 1834
+3 0 1834
+3 0 1834 0 0 0 0 0 0 0 0 1834 983
jcnd=926/1834 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 918
+10 0 918 918 0 0 2 0 0 2
+3 0 918
+4 0 918 0 918
+3 0 918
+4 0 918
+4 0 918 0 0 0 0 0 0 0 0 918
jcnd=918/918 -18 0 
* 0 
-18 0 2810 2810
+3 0 2810
+4 0 2810 0 2810
+3 0 2810
+4 0 2810
+4 0 2810 0 0 0 0 0 0 0 0 2810 11
jcnd=1892/2810 -18 0 
* 0 
+2 0 1844
+4 0 1844
+3 0 1844 1844
+1 0 1844 1844
+1 0 1844 1844
+2 0 1844 1844 0 1 0 0 1
+2 0 1844 1844
0x3877c839c0 0 1834 0 0 1 0 0 1
+3 0 1834
+3 0 1834
+3 0 1834
+4 0 1834 0 1834 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1834 0x3877c89b20 0 
* 0 572026 213932 210264 6 1 63 6 1 63 27320 1365 1834 228
+5 0 1834
jump=1834 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1844 1844 0 1 1 0 1 1
+7 0 1844 1844 0 0 1 0 0 1
+3 0 1844
+3 0 1844 0 0 1 0 0 1 0 0 1844
+6 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844
+6 0 1844 1844
+4 0 1844
+4 0 1844
+2 0 1844 0 0 0 0 0 0 0 0 1844
+2 0 1844
+2 0 1844
+7 0 1844 0 0 0 0 0 0 0 0 1844
jcnd=1844/1844 +14 0 
* 0 
+14 0 1844
+2 0 1844
cfn=(170) _int_free
calls=1844 0x3877c78650 0 
* 0 191969 51727 30989 19 4 0 19 4 0 46825 727

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 19 19 0 1 0 0 1
+4 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 1
jcnd=16/19 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 16
+3 0 16 0 16
+4 0 16 0 16
+4 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 7
jcnd=6/16 0x3877c75f78 0 
* 0 
+6 0 19 19 0 1 0 0 1
+4 0 19 19
+4 0 19
+3 0 19 0 0 1 0 0 1
+4 0 19
+4 0 19 19
+5 0 19
+4 0 19
+2 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=7/19 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=10/12 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 19 19 0 1 0 0 1
+4 0 19 0 0 0 0 0 0 0 0 19
+2 0 19 19
+6 0 19 0 0 0 0 0 0 0 0 19 2
jcnd=5/19 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1844 0 1844 1 0 0 1
+2 0 1844 0 1844
+2 0 1844 0 1844
+2 0 1844
+3 0 1844 0 1844
+2 0 1844 0 1844
+1 0 1844 0 1844
+1 0 1844
+3 0 1844
+4 0 1844 1844
+4 0 1844 0 1844
+4 0 1844
+3 0 1844
+4 0 1844
+3 0 1844
+3 0 1844
+3 0 1844 0 0 1 0 0 1 0 0 1844
+6 0 1844
+4 0 1844 0 0 0 0 0 0 0 0 1844
+6 0 1844
+4 0 1844 0 0 0 0 0 0 0 0 1844
+6 0 1844 1844
+7 0 1844 0 0 0 0 0 0 0 0 1844 4
jcnd=1720/1844 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1720
+2 0 1720 0 0 0 0 0 0 0 0 1720
+6 0 1720 1720 0 1 0 0 1
+4 0 1720
+3 0 1720
+2 0 1720 0 0 0 0 0 0 0 0 1720
jcnd=1720/1720 0x3877c78a40 0 
* 0 
+6 0 1720 1720
+4 0 1720
+3 0 1720 0 0 0 0 0 0 0 0 1720
+6 0 1720 1720
+5 0 1720
+4 0 1720 0 0 0 0 0 0 0 0 1720
jcnd=1720/1720 0x3877c7907c 0 
* 0 
+6 0 1720 1720
+5 0 1720
+4 0 1720 0 0 0 0 0 0 0 0 1720
+6 0 1720
+4 0 1720 0 0 1 0 0 1 0 0 1720
+6 0 1720
+4 0 1720 1720
+7 0 1720 0 0 0 0 0 0 0 0 1720
+6 0 1720 1720
+6 0 1720
+2 0 1720 0 0 0 0 0 0 0 0 1720
+6 0 1720 1720
+4 0 1720 0 0 0 0 0 0 0 0 1720 5
jcnd=1716/1720 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1720 1720 0 1 0 0 1
+4 0 1720 0 0 0 0 0 0 0 0 1720 248
jcnd=248/1720 0x3877c78bf0 0 
* 0 
+6 0 1472 1472 0 0 2 0 0 2
+6 0 1472 0 0 1 0 0 1 0 0 1472 53
jcnd=73/1472 0x3877c78a78 0 
* 0 
+6 0 1399 1399
+5 0 1399 1399
+5 0 1399 1399
+4 0 1399 0 0 0 0 0 0 0 0 1399
+6 0 1399 1399
+4 0 1399 0 0 0 0 0 0 0 0 1399
+6 0 1399 1399
+9 0 1399 0 1399
+4 0 1399 0 1399
+4 0 1399 0 0 0 0 0 0 0 0 1399 389
jcnd=931/1399 +16 0 
* 0 
+2 0 468 468
+5 0 468
+3 0 468 0 0 1 0 0 1 0 0 468
+6 0 1399
+3 0 1399
+4 0 1399 1399
+4 0 1399 1399
+4 0 1399 0 0 0 0 0 0 0 0 1399
-12 0 73
+4 0 73 73
+4 0 73 73
+4 0 73 0 0 0 0 0 0 0 0 73
+6 0 1472
+7 0 1472 0 1472
+4 0 1472 0 1472
+4 0 1472 0 0 0 0 0 0 0 0 1472 26
jcnd=441/1472 +18 0 
* 0 
+2 0 1031 0 1031
+8 0 1031 0 1031
+8 0 1031 0 1031
+4 0 1031
+3 0 1031 0 1031 1 0 0 1
+4 0 1031
+4 0 1031 0 1031
+4 0 1031 0 1031
+4 0 1031
+7 0 1031 0 0 0 0 0 0 0 0 1031
jcnd=1031/1031 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 248
+7 0 248 0 0 0 0 0 0 0 0 248
jcnd=248/248 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1720 0 0 1 0 0 1
+5 0 1720 1720
+4 0 1720 1720
+7 0 1720 0 0 0 0 0 0 0 0 1720
jcnd=1720/1720 +16 0 
* 0 
+16 0 1720 0 1720
+5 0 1720 0 0 0 0 0 0 0 0 1720
+6 0 1720
+3 0 1720
jump=1720 0x3877c7878f 0 
* 0 
+10 0 73 0 73
+6 0 73 0 0 1 0 0 1
jump=73 0x3877c78885 0 
* 0 
0x3877c78b20 0 1720 1720 0 1 0 0 1
+4 0 1720
+2 0 1720 0 0 0 0 0 0 0 0 1720
+6 0 1720 1720
+7 0 1720 0 0 0 0 0 0 0 0 1720
jcnd=1720/1720 +15 0 
* 0 
+15 0 1720 0 1720 1 0 0 1
+4 0 1720 0 0 0 0 0 0 0 0 1720
+6 0 1720
+4 0 1720 1720
+1 0 1720 1720
+1 0 1720 1720
+2 0 1720 1720
+2 0 1720 1720
+2 0 1720 1720
+2 0 1720 1720
0x3877c78bf0 0 248 0 0 1 0 0 1
+3 0 248 0 248
+4 0 248
+3 0 248
+4 0 248 0 248 1 0 0 1
+4 0 248
jump=248 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1720 1720 0 1 1 0 1 1
+4 0 1720 0 0 1 0 0 1
+7 0 1720
+4 0 1720
+3 0 1720
+3 0 1720 0 0 0 0 0 0 0 0 1720
jcnd=1720/1720 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1834 0 0 1 0 0 1
+7 0 1834
+3 0 1834
+3 0 1834 1834 0 0 1 0 0 1
+4 0 1834
+4 0 1834 0 0 0 0 0 0 0 0 0 0 1834 228
jump=224 0x3877c89be8 0 
* 0 
jump=234 0x3877c89bd0 0 
* 0 
jump=224 0x3877c89bb8 0 
* 0 
jump=224 +11 0 
* 0 
jump=228 0x3877c89c48 0 
* 0 
jump=234 0x3877c89c30 0 
* 0 
jump=232 0x3877c89c18 0 
* 0 
jump=234 0x3877c89c00 0 
* 0 
+11 0 224 224
+3 0 224
+4 0 224
+4 0 224 224
+4 0 224
+4 0 224 0 224
+4 0 224
+9 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-40 0 25938 25938
+4 0 25938 0 25938 0 0 14 0 0 14
+4 0 25938 25938
+4 0 25938 0 25938 0 0 3 0 0 3
+4 0 25938 25938
+4 0 25938 0 25938 0 0 4 0 0 4
+4 0 25938 25938
+4 0 25938 0 25938 0 0 15 0 0 15
+4 0 25938
+4 0 25938
+4 0 25938 0 0 0 0 0 0 0 0 25938 1361
jcnd=1798/25938 0x3877c89c60 0 
* 0 
-32 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234
+4 0 234
+4 0 234 0 0 0 0 0 0 0 0 234
jcnd=10/234 0x3877c89c60 0 
* 0 
-24 0 232 232
+4 0 232 0 232
+4 0 232 232
+4 0 232 0 232
+4 0 232
+4 0 232
+4 0 232 0 0 0 0 0 0 0 0 232
jcnd=8/232 0x3877c89c60 0 
* 0 
-16 0 234 234 0 1 0 0 1
+4 0 234 0 234
+4 0 234 0 0 1 0 0 1
+4 0 234
+4 0 234 0 0 0 0 0 0 0 0 234 4
jcnd=10/234 0x3877c89c60 0 
* 0 
+6 0 25028
+4 0 25028 25028
+3 0 25028 0 25028 0 0 20 0 0 20
+3 0 25028 25028
+4 0 25028 0 25028 0 0 1 0 0 1
+4 0 25028 25028
+4 0 25028 0 25028 0 0 2 0 0 2
+4 0 25028 25028
+4 0 25028 0 25028 0 0 3 0 0 3
+4 0 25028
jump=25028 -80 0 
* 0 
-30 0 224 224
+3 0 224 0 224
+3 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
jump=224 -80 0 
* 0 
-24 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234 0 0 1 0 0 1
+4 0 234
jump=234 -80 0 
* 0 
-16 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
jump=224 -80 0 
* 0 
+8 0 224 224
+3 0 224
+4 0 224 0 0 1 0 0 1
+4 0 224
+4 0 224
jump=224 -39 0 
* 0 
+9 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+6 0 234 234
+3 0 234
+4 0 234
jump=234 -72 0 
* 0 
+8 0 224
+4 0 224 224
+3 0 224 0 0 0 0 0 0 0 0 224
+2 0 224
+4 0 224
jump=224 -99 0 
* 0 
+11 0 234 234 0 1 0 0 1
+3 0 234
+4 0 234
+4 0 234
+4 0 234
jump=234 0x3877c89b78 0 
* 0 
+9 0 232 232
+3 0 232
+4 0 232
+4 0 232
+4 0 232
jump=232 0x3877c89b70 0 
* 0 
+9 0 234 234
+3 0 234
+4 0 234
+4 0 234
+4 0 234
jump=234 0x3877c89b68 0 
* 0 
+9 0 228 228
+3 0 228
+4 0 228
+4 0 228
+4 0 228
jump=228 0x3877c89b60 0 
* 0 
+9 0 1834 0 1834 1 0 0 1
+3 0 1834 1834

fn=(104) alloc_perturb
0x3877c77180 0 1702 1702 0 1 0 0 1
+6 0 1702
+2 0 1702 0 0 0 0 0 0 0 0 1702 34
+2 0 1702 1702

fn=(38)
0x3877c79a00 0 1844 0 1844 1 0 0 1
+2 0 1844
+3 0 1844 0 1844
+2 0 1844 0 1844
+2 0 1844 0 1844 0 0 1 0 0 1
+2 0 1844
+3 0 1844 0 1844
+1 0 1844 0 1844
+1 0 1844
+4 0 1844
+4 0 1844 0 0 0 0 0 0 0 0 1844
+6 0 1844
+4 0 1844
+6 0 1844
+3 0 1844
+4 0 1844
+4 0 1844
+4 0 1844
+3 0 1844 0 0 0 0 0 0 0 0 1844
+6 0 1844 1844 0 1 1 0 1 1
+7 0 1844 0 0 0 0 0 0 0 0 1844 7
jcnd=1722/1844 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 23
jcnd=16/122 0x3877c79af8 0 
* 0 
+6 0 106
+4 0 106 106 0 0 1 0 0 1
+4 0 106
+3 0 106
+4 0 106 106 0 0 1 0 0 1
+9 0 106 0 0 0 0 0 0 0 0 106 2
jcnd=106/106 +3 0 
* 0 
+3 0 106 0 106 1 0 0 1
+5 0 106
+3 0 106
+3 0 106 0 0 0 0 0 0 0 0 106
+2 0 106
jump=106 0x3877c7a2db 0 
* 0 
+46 0 106 106
+4 0 106 0 0 1 0 0 1
+3 0 106
+3 0 106
+2 0 106 0 0 0 0 0 0 0 0 106
+6 0 142 142
+6 0 142
+4 0 142
+2 0 142 0 0 0 0 0 0 0 0 142
+6 0 142
+3 0 142
+4 0 142 142
+1 0 142 142
+1 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
-14 0 1702
+4 0 1702 1702
+1 0 1702 1702
+1 0 1702 1702
+2 0 1702 1702
+2 0 1702 1702
+2 0 1702 1702
+2 0 1702 1702
+7 0 1738
+7 0 1738 0 0 1 0 0 1 0 0 1738 7
jcnd=836/1738 0x3877c79b70 0 
* 0 
+2 0 902
+3 0 902
+5 0 902
+3 0 902
+4 0 902 0 902
+4 0 902
+2 0 902
+5 0 902 902 0 0 3 0 0 3
+4 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 0x3877c79bc2 0 
* 0 
+78 0 836 0 0 1 0 0 1
+3 0 836
+4 0 836
+4 0 836 0 0 1 0 0 1 0 0 836
jcnd=836/836 0x3877c7a1a4 0 
* 0 
+30 0 836 836
+6 0 836
+5 0 836 0 0 0 0 0 0 0 0 836 1
jcnd=835/836 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 870 232 185 8 0 0 8 0 0 180 19
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1737 0 0 1 0 0 1
+3 0 1737
+3 0 1737
+3 0 1737
+4 0 1737
+3 0 1737
+4 0 1737 0 1737
+5 0 1737
+3 0 1737 0 1737
+4 0 1737 0 1737
+4 0 1737 0 1737
+5 0 1737
+3 0 1737
+3 0 1737
+3 0 1737
+3 0 1737
+4 0 1737
+4 0 1737 0 0 1 0 0 1
+4 0 1737 0 1737
+4 0 1737
+4 0 1737 0 1737
+5 0 1737 0 1737
+5 0 1737
+3 0 1737
+3 0 1737 0 1737
+5 0 1737
+5 0 1737
+3 0 1737 0 1737
+4 0 1737 0 1737
+4 0 1737
+6 0 1737 0 1737
+4 0 1737 0 1737
+5 0 1737 0 0 1 0 0 1
+3 0 1737
+3 0 1737
+3 0 1737
jump=1737 +87 0 
* 0 
+8 0 1191
+3 0 1191
+4 0 1191
+2 0 1191
+2 0 1191
+3 0 1191
+3 0 1191
+3 0 1191
+2 0 1191
+2 0 1191
+5 0 1191
+2 0 1191 1191 0 0 1 0 0 1
+4 0 1191
+3 0 1191
+4 0 1191 0 1191
+4 0 1191 0 1191
+8 0 1191
+7 0 1191 0 1191
+4 0 1191 0 1191
+4 0 1191 0 1191
+4 0 1191 0 0 0 0 0 0 0 0 1191
-38 0 1006
+3 0 1006
+4 0 1006 0 1006
+4 0 1006 0 1006
+8 0 1006
+7 0 1006 0 1006
+4 0 1006 0 1006
+4 0 1006 0 1006
+4 0 1006 0 0 0 0 0 0 0 0 1006
+6 0 3935 3935 0 1 0 0 1
+4 0 3935
+3 0 3935 0 0 0 0 0 0 0 0 3935 207
jcnd=1668/3935 0x3877c79ef0 0 
* 0 
+6 0 2267 2267
+4 0 2267 2267
+4 0 2267
+4 0 2267 0 0 0 0 0 0 0 0 2267
+6 0 2267 2267 0 1 0 0 1
+7 0 2267 0 0 0 0 0 0 0 0 2267
+6 0 2267
+4 0 2267
+7 0 2267 0 0 0 0 0 0 0 0 2267 9
jcnd=984/2267 +11 0 
* 0 
+2 0 1283
+3 0 1283 0 0 0 0 0 0 0 0 1283 607
jcnd=864/1283 0x3877c79e28 0 
* 0 
+6 0 2233
+3 0 2233 0 2233
+4 0 2233 0 2233
+5 0 2233 0 0 0 0 0 0 0 0 2233 24
jcnd=36/2233 0x3877c7a090 0 
* 0 
+6 0 2197
+7 0 2197 0 0 0 0 0 0 0 0 2197 544
jcnd=1191/2197 0x3877c79c50 0 
* 0 
+6 0 1006 0 0 1 0 0 1
+3 0 1006
+4 0 1006
+4 0 1006 0 0 0 0 0 0 0 0 1006 12
jcnd=384/1006 0x3877c79db0 0 
* 0 
+6 0 622
+3 0 622
+4 0 622
+2 0 622
+2 0 622
+3 0 622
+3 0 622
+8 0 622
+3 0 622
+2 0 622
+2 0 622
+4 0 622 622 0 0 3 0 0 3
+4 0 622
+3 0 622 0 0 1 0 0 1 0 0 622 68
jcnd=622/622 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 1006 0 1006
+4 0 1006 0 1006
+4 0 1006
+3 0 1006
jump=1006 0x3877c79c73 0 
* 0 
+8 0 864 864 0 1 0 0 1
+4 0 864
+3 0 864 0 0 0 0 0 0 0 0 864 30
jcnd=437/864 0x3877c79ce1 0 
* 0 
+6 0 427 427
+5 0 427 0 0 0 0 0 0 0 0 427 8
jcnd=393/427 0x3877c79ce1 0 
* 0 
+6 0 34 0 0 1 0 0 1
+3 0 34
+3 0 34
+3 0 34
+7 0 34 0 34
+4 0 34 0 34
+4 0 34
+3 0 34 0 34
+4 0 34 0 34 0 0 15 0 0 15
+4 0 34 0 34
+4 0 34 0 0 0 0 0 0 0 0 34 5
jcnd=9/34 +18 0 
* 0 
+2 0 25 0 25
+8 0 25 0 25
+8 0 25
+7 0 25 0 25
+4 0 25
+3 0 25
+3 0 25
+3 0 25
+4 0 25
+3 0 25
+4 0 25
+3 0 25
+3 0 25
+4 0 25 0 25
+4 0 25 0 25 0 0 2 0 0 2
+4 0 25
+4 0 25
+3 0 25 0 25
cfn=(104)
calls=25 0x3877c77180 0 
* 0 100 50 0 0 0 0 0 0 0 25
-56 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9 0 0 3 0 0 3
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
+5 0 34
+3 0 34
jump=34 0x3877c79ae3 0 
* 0 
+55 0 1668 0 0 1 0 0 1
+7 0 1668
+3 0 1668 0 0 0 0 0 0 0 0 1668 8
jcnd=828/1668 0x3877c7a0b0 0 
* 0 
+6 0 1668 1668 0 1 0 0 1
+4 0 1668
+3 0 1668
+3 0 1668
+2 0 1668
+4 0 1668
+3 0 1668
+3 0 1668
+2 0 1668
+2 0 1668
+2 0 1668
+2 0 1668 1668 0 0 1 0 0 1
+8 0 1668
+5 0 1668
+5 0 1668
+2 0 1668 0 0 0 0 0 0 0 0 1668
-2 0 857
+2 0 857 0 0 0 0 0 0 0 0 857 1
jcnd=1/857 +14 0 
* 0 
+2 0 2524
+2 0 2524 0 0 0 0 0 0 0 0 2524 43
jcnd=1628/2524 +64 0 
* 0 
+2 0 896
+8 0 896
+3 0 896
+3 0 896 0 0 0 0 0 0 0 0 896 1
jcnd=1/896 0x3877c79fc0 0 
* 0 
-6 0 664
+3 0 664
+3 0 664 0 0 0 0 0 0 0 0 664 4
jcnd=247/664 0x3877c79fc0 0 
* 0 
+2 0 1312
+2 0 1312 1312
+8 0 1312
+2 0 1312 0 0 0 0 0 0 0 0 1312 16
jcnd=663/1312 -20 0 
* 0 
+2 0 649
+2 0 649
+5 0 649
+3 0 649
+3 0 649
+2 0 649
+2 0 649
+5 0 649 0 0 0 0 0 0 0 0 649
jcnd=1/649 +14 0 
* 0 
+2 0 648
+2 0 648
+4 0 648
+2 0 648
+2 0 648 0 0 0 0 0 0 0 0 648
jcnd=648/648 -8 0 
* 0 
-8 0 12708
+4 0 12708
+2 0 12708
+2 0 12708 0 0 0 0 0 0 0 0 12708 809
jcnd=10574/12708 -8 0 
* 0 
-2 0 1628 0 0 1 0 0 1
+2 0 1628 0 0 0 0 0 0 0 0 1628 28
jcnd=1486/1628 -8 0 
* 0 
+2 0 2277 2277 0 0 15 0 0 15
+4 0 2277 0 0 1 0 0 1
+3 0 2277 0 0 0 0 0 0 0 0 2277 1216
jcnd=1420/2277 0x3877c7a1cf 0 
* 0 
+6 0 857
+2 0 857
+4 0 857
+2 0 857
+2 0 857
+2 0 857 0 857
+8 0 857
jump=857 0x3877c79f30 0 
* 0 
+37 0 248 248 0 1 0 0 1
+5 0 248 248
+4 0 248
+4 0 248 248
+5 0 248 0 0 0 0 0 0 0 0 248
jcnd=248/248 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 36 0 0 1 0 0 1
+7 0 36 0 36
+6 0 36
+3 0 36 0 0 0 0 0 0 0 0 36
jcnd=36/36 0x3877c79ace 0 
* 0 
+16 0 828 828
+4 0 828
+4 0 828
+2 0 828
+5 0 828 828 0 1 0 0 1
+4 0 828
+3 0 828 0 0 0 0 0 0 0 0 828 8
jcnd=780/828 0x3877c79f00 0 
* 0 
+6 0 48 48
+4 0 48 0 0 0 0 0 0 0 0 48
jcnd=48/48 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 836 0 0 1 0 0 1
+3 0 836 0 836
+4 0 836
jump=836 0x3877c79b99 0 
* 0 
+36 0 1420 1420 0 1 3 0 1 3
+4 0 1420 1420 0 0 1 0 0 1
+4 0 1420
+3 0 1420 1420
+4 0 1420
+4 0 1420
+3 0 1420
+3 0 1420 1420
+4 0 1420 0 0 0 0 0 0 0 0 1420
+6 0 1420 1420 0 0 1 0 0 1
+4 0 1420 0 0 0 0 0 0 0 0 1420
+6 0 1420 1420 0 1 0 0 1
+8 0 1420 0 1420
+4 0 1420 0 1420
+4 0 1420 0 0 0 0 0 0 0 0 1420 273
jcnd=412/1420 +38 0 
* 0 
+2 0 1008 1008 0 0 1 0 0 1
+4 0 1008
+3 0 1008 0 0 0 0 0 0 0 0 1008
+2 0 1008 1008
+5 0 1008 0 0 0 0 0 0 0 0 1008
+6 0 1008 1008
+4 0 1008 0 1008
+4 0 1008 1008
+4 0 1008 0 1008
+4 0 1008
+4 0 1008 0 0 0 0 0 0 0 0 1008 8
jcnd=8/1008 0x3877c7a2e3 0 
* 0 
-4 0 412
+4 0 412 0 0 0 0 0 0 0 0 412 5
jcnd=25/412 0x3877c7a2e3 0 
* 0 
+6 0 1387 1387
+4 0 1387 1387 0 1 0 0 1
+4 0 1387 0 0 0 0 0 0 0 0 1387
+6 0 1387
+4 0 1387
+7 0 1387 0 1387 0 0 10 0 0 10
+4 0 1387 0 1387
+4 0 1387 0 1387
+4 0 1387 0 1387
+4 0 1387 0 0 0 0 0 0 0 0 1387 7
jcnd=572/1387 +7 0 
* 0 
+2 0 815 0 815
+5 0 815
+7 0 815 0 0 0 0 0 0 0 0 815 1
jcnd=388/815 +18 0 
* 0 
-7 0 572
+7 0 572 0 0 0 0 0 0 0 0 572 4
jcnd=547/572 +18 0 
* 0 
+2 0 452 0 452 0 0 14 0 0 14
+8 0 452 0 452
+8 0 452
+7 0 452 0 452 0 0 3 0 0 3
+4 0 452
+3 0 452
+3 0 452
+4 0 452
+3 0 452
+4 0 452
+3 0 452
+3 0 452
+4 0 452 0 452
+4 0 452 0 452
+4 0 452
jump=452 +71 0 
* 0 
-46 0 935 0 0 1 0 0 1
+7 0 935 0 935 0 0 1 0 0 1
+4 0 935
+3 0 935
+3 0 935
+4 0 935
+3 0 935
+4 0 935
+3 0 935
+3 0 935
+4 0 935 0 935
+4 0 935 0 935 0 0 1 0 0 1
+4 0 935
jump=935 +71 0 
* 0 
+40 0 106 0 0 1 0 0 1
+3 0 106
jump=106 0x3877c79abc 0 
* 0 
+5 0 33
+7 0 33 0 33
+6 0 33
+3 0 33 0 0 0 0 0 0 0 0 33
jcnd=33/33 +7 0 
* 0 
+7 0 1420
+4 0 1420 0 0 1 0 0 1
+3 0 1420
+3 0 1420 0 1420
cfn=(104)
calls=1420 0x3877c77180 0 
* 0 5680 2840 0 1 0 0 1 0 0 1420 33
+5 0 1420
+3 0 1420
jump=1420 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 248 0 0 1 0 0 1
+7 0 248
+2 0 248
+4 0 248
+3 0 248
+3 0 248 0 248
+5 0 248
+3 0 248
+4 0 248
+3 0 248 0 0 1 0 0 1
+4 0 248
+4 0 248
+3 0 248
+4 0 248 0 248
+4 0 248 0 248 0 0 8 0 0 8
+4 0 248
+3 0 248
+3 0 248 0 248
cfn=(104)
calls=248 0x3877c77180 0 
* 0 992 496 0 0 0 0 0 0 0 248 1
+5 0 248
+3 0 248
jump=248 0x3877c79ae3 0 
* 0 

totals: 18853947 7809603 4446271 240 117 158 240 117 158 519175 8612 11054 228
