version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 101


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 94867858 - 97291008
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2020 0 0 1 0 0 1
+3 0 2020 0 0 0 0 0 0 0 0 2020
+2 0 2020
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2020 0x3877c7b8b0 0 
* 0 227430 58214 29724 22 5 0 22 5 0 55917 1068
* 0 2020 2020 0 1 1 0 1 1 0 0 0 2020

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2020 0 2020 1 0 0 1
+1 0 2020
+5 0 2020
+3 0 2020 0 2020
+1 0 2020
+4 0 2020 0 0 1 0 0 1
+3 0 2020
+4 0 2020
+3 0 2020 0 2020 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2020 0x3877c7aa50 0 
* 0 553398 79364 80016 49 35 58 49 35 58 92427 3422
* 0 2020 2020 0 1 1 0 1 1 0 0 0 2020
+5 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020
jcnd=2020/2020 +96 0 
* 0 
+96 0 2020 0 0 1 0 0 1
+4 0 2020 2020
+1 0 2020 2020
+1 0 2020 2020

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 501 0 501
+1 * 501
+3 * 501
+4 * 501 0 501
+4 * 501 0 501
+4 * 501 0 501
+4 +1 501 501
+4 * 501 501
+4 * 501 501
+4 * 501
+3 * 501
+3 * 501 0 501
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=501 0x403df2 -87 
* * 12024 4008 4509 0 33 3 0 33 3 501 3
+5 * 501 501
+1 * 501 501

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002 0 1002
+4 * 1002 1002
+4 * 1002 1002
+1 * 1002 1002

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 501 0 501
+1 * 501
+3 * 501
+4 * 501 0 501
+4 * 501 0 501
+4 * 501 0 501
+4 +1 501 501
+4 * 501 501
+4 * 501 501
+4 * 501
+3 * 501
+3 * 501 0 501
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=501 0x40406a -87 
* * 12024 4008 4509 0 32 23 0 32 23 501
+5 * 501 501
+1 * 501 501

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+4 * 1002 1002
+4 * 1002 1002
+1 * 1002 1002

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1082 0 1082
+1 * 1082
+3 * 1082 0 1082 0 0 1 0 0 1
+4 +1 1082 1082
+4 * 1082 1082
+1 * 1082 1082

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2004 0 2004 1 0 0 1
+1 * 2004
+3 * 2004
+4 * 2004 0 2004
+4 +1 2004
+4 * 2004
+3 * 2004 0 2004
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2004 0x404ffe 790 
* * 12024 6012 4008 1 0 0 1
+5 * 2004 2004
+3 * 2004 2004
+1 * 2004 2004

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2004 0 2004 1 0 0 1
+1 * 2004
+3 * 2004 0 2004
+4 +1 2004 2004
+4 * 2004 2004
+1 * 2004 2004

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2004 0 2004 1 0 0 1
+1 * 2004
+3 * 2004
+4 * 2004 0 2004
+4 +1 2004
+4 * 2004
+3 * 2004 0 2004 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2004 0x40500c 790 
* * 12024 6012 4008 1 0 0 1
+5 * 2004 2004
+3 * 2004 2004
+1 * 2004 2004

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1082 0 1082
+1 * 1082
+3 * 1082 0 1082
+4 +1 1082 1082
+4 * 1082 1082
+1 * 1082 1082

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2004 0 2004 1 0 0 1
+1 * 2004
+3 * 2004 0 2004
+4 +1 2004 2004 0 1 0 0 1
+4 * 2004 2004
+1 * 2004 2004

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 1002
+4 * 1002 1002
+1 * 1002 1002

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1010 0 1010 1 0 0 1
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 * 1010 0 1010 1 0 0 1
+4 +2 1010 1010
+4 * 1010
+3 * 1010 0 1010
cfn=(28)
calls=1010 0x404992 +12 
* * 6060 2020 2020 1 0 0 1
+5 * 1010 1010
+4 * 1010
+3 * 1010
+2 * 1010 0 0 0 0 0 0 0 0 1010
jcnd=1010/1010 +7 +3 
* * 
+7 +3 1010 1010
+4 * 1010
+4 * 1010
+3 * 1010 0 1010
cob=(5)
cfi=(8)
cfn=(32)
calls=1010 0x387e4bd0b0 0 
* * 292840 45932 46315 18 29 19 18 29 19 47274 1220 1010
* * 1010 1010 0 1 1 0 1 1 0 0 0 1010
+5 +1 1010 1010
+1 * 1010 1010

fn=(102)
0x4048de 113 1026 0 1026 1 0 0 1
+1 * 1026
+3 * 1026 0 1026
+4 +1 1026
+10 * 1026 1026
+1 * 1026 1026

fn=(266)
0x40406a 129 501 0 501
+1 * 501
+3 * 501
+4 * 501 0 501
+4 * 501 0 501
+4 * 501 0 501
+4 +1 501 501
+4 * 501
+3 * 501
+5 * 501 0 501
cfi=(16)
cfn=(226)
calls=501 0x402d61 -20 
* * 3507 1503 1503
+5 * 501
+3 * 501 0 0 0 0 0 0 0 0 501
+2 * 501 501
+4 * 501 501 0 0 32 0 0 32
+2 * 501 0 501 0 0 23 0 0 23
+2 * 501 501
+1 * 501 501

fn=(28)
0x404992 113 1026 0 1026 1 0 0 1
+1 * 1026
+3 * 1026 0 1026
+4 +1 1026
+10 * 1026 1026
+1 * 1026 1026

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+4 * 1002 1002
+1 * 1002 1002

fn=(224)
0x403df2 129 501 0 501
+1 * 501
+3 * 501
+4 * 501 0 501
+4 * 501 0 501
+4 * 501 0 501
+4 +1 501 501
+4 * 501
+3 * 501
+5 * 501 0 501
cfi=(16)
cfn=(226)
calls=501 0x402d61 -20 
* * 3507 1503 1503
+5 * 501
+3 * 501 0 0 0 0 0 0 0 0 501 3
+2 * 501 501
+4 * 501 501 0 0 33 0 0 33
+2 * 501 0 501 0 0 3 0 0 3
+2 * 501 501
+1 * 501 501

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1010 0 1010
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 +1 1010 1010
+4 * 1010
+3 * 1010 0 1010
cob=(5)
cfi=(8)
cfn=(164)
calls=1010 0x387e4bb2f0 0 
* * 110009 27408 12250 24 4 0 24 4 0 26907 759 1010
* * 1010 1010 0 1 1 0 1 1 0 0 0 1010
+5 * 1010 1010
+1 * 1010 1010

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1010 0 1010
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 +1 1010 1010
+4 * 1010
+3 * 1010 0 1010
cob=(5)
cfi=(8)
cfn=(164)
calls=1010 0x387e4bb2f0 0 
* * 125501 32826 17474 0 2 0 0 2 0 31030 309 1010
* * 1010 1010 0 0 0 0 0 0 0 0 0 1010
+5 * 1010 1010
+1 * 1010 1010

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1010 0 1010 1 0 0 1
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 +2 1010 1010
+4 * 1010
+3 * 1010 0 1010
cfn=(102)
calls=1010 0x4048de +12 
* * 6060 2020 2020 1 0 0 1
+5 * 1010 1010
+4 * 1010 0 0 1 0 0 1
+3 * 1010
+2 * 1010 0 0 0 0 0 0 0 0 1010
jcnd=1010/1010 +7 +3 
* * 
+7 +3 1010 1010
+4 * 1010
+4 * 1010
+3 * 1010 0 1010
cob=(5)
cfi=(8)
cfn=(32)
calls=1010 0x387e4bd0b0 0 
* * 292878 41512 39761 35 7 40 35 7 40 47173 2202 1010
* * 1010 1010 0 0 0 0 0 0 0 0 0 1010
+5 +1 1010 1010
+1 * 1010 1010

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002 0 1002 0 0 1 0 0 1
+4 * 1002 0 1002
+4 * 1002 1002
+1 * 1002 1002

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 1002
+1 * 1002 1002

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+4 * 1002 1002
+1 * 1002 1002

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +2 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1002 0x404484 107 
* * 614804 210186 204178 25 3 5 25 3 5 24348 1276 2000 250
+5 * 1002 1002
+1 * 1002 1002

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +2 1002 1002 0 1 0 0 1
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1002 0x404a36 450 
* * 586748 200166 194158 24 3 5 24 3 5 24348 1276 2000 250
+5 * 1002 1002
+1 * 1002 1002

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +2 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1002 0x40439c 107 
* * 614804 210186 204178 7 1 44 7 1 44 24348 1266 2000
+5 * 1002 1002
+1 * 1002 1002

fn=(116)
0x40439c 107 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +10 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1002 0x4047d7 -26 
* * 600776 205176 199168 7 1 44 7 1 44 24348 1266 2000
+5 +1 1002 1002
+1 * 1002 1002

fn=(118)
0x4047d7 91 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +2 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1002 0x4049e2 450 
* * 586748 200166 194158 7 1 44 7 1 44 24348 1266 2000
+5 * 1002 1002
+1 * 1002 1002

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +10 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(52)
calls=1002 0x404829 -26 
* * 600776 205176 199168 25 3 5 25 3 5 24348 1276 2000 250
+5 +1 1002 1002
+1 * 1002 1002

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002 0 1002
+2 * 1002 0 1002
+2 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002 1 0 0 1
+4 * 1002 0 1002
+4 +2 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=1002 0x403b08 117 
* * 6012 3006 2004 1 0 1 1 0 1
+5 * 1002
+3 * 1002 0 1002
cfi=(3)
cfn=(8)
calls=1002 0x403afa -88 
* * 6012 3006 2004 1 0 0 1
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=1002 0x402f54 645 
* * 13026 6012 2004 1 1 0 1 1
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=1002 0x403b16 134 
* * 415737 90683 86053 27 27 18 27 27 18 48892 1164 2004
+5 +4 1002 1002 0 1 0 0 1
+4 * 1002
+3 * 1002 0 1002
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=1002 0x40333c 113 
* * 6012 3006 2004 2 0 0 2
+5 * 1002
+3 * 1002 1002
+4 * 1002 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=1002 0x403ba4 565 
* * 25050 10020 8016 3 0 0 3
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=1002 0x403b74 547 
* * 25050 10020 8016
+5 * 1002
+3 * 1002
+3 * 1002
+3 * 1002
+3 * 1002 0 1002 1 0 0 1
cfi=(11)
cfn=(48)
calls=1002 0x403bd5 -60 
* * 629834 215196 210190 26 3 5 26 3 5 24348 1276 2000 250
+5 -3 1002 1002
+4 * 1002 0 1002
+4 * 1002
jump=1002 +28 +4 
* * 
+28 +4 1002
+4 * 1002 1002
+1 * 1002 1002
+2 * 1002 1002
+2 * 1002 1002
+1 * 1002 1002

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+4 * 1002 0 1002
+4 * 1002
+4 * 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1002 0x404380 726 
* * 10020 5010 4008 1 0 0 1
+5 * 1002 1002
+4 * 1002 1002
+1 * 1002 1002

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002 1 0 0 1
+4 +2 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(40)
calls=1002 0x40333c 113 
* * 6012 3006 2004
+5 * 1002
+3 * 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+3 -1 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1002 0x40334a 148 
* * 31062 10020 12024 2 0 0 2
+5 +1 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=1002 0x4032ca 159 
* * 203810 61674 40414 3 2 0 3 2 0 31838 301 2004
+5 * 1002
jump=1002 +28 * 
* * 
+28 * 1002 0 0 1 0 0 1
+4 * 1002 1002
+1 * 1002 1002
+1 * 1002 1002

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1010 0 1010 1 0 0 1
+1 * 1010 0 0 1 0 0 1
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 0 1010 1010
+5 0 1010 0 0 0 0 0 0 0 0 1010
+2 0 1010 1010
+4 0 1010 1010
+4 0 1010
+5 0 1010
+3 0 1010
+3 0 1010 0 1010
fi=(6) ???
cfi=(5)
cfn=(100)
calls=1010 0x40461a 99 
* 0 319138 49592 47841 38 7 40 38 7 40 48183 2202 2020
+5 0 1010
fi=(6)
jump=1010 +7 0 
* 0 
+7 0 1010 1010
+1 0 1010 1010

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 379758 0 379758
+1 * 379758
+3 * 379758 0 379758
+4 * 379758 0 379758
+4 +1 379758 379758
+4 * 379758 379758
+3 * 379758 379758
+4 * 379758
+4 * 379758
+3 * 379758 379758
+1 * 379758 379758

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 379758 0 379758
+1 * 379758
+3 * 379758 0 379758 1 0 0 1
+4 * 379758 0 379758
+4 +1 379758 379758
+4 * 379758 379758
+3 * 379758 379758
+4 * 379758
+4 * 379758
+3 * 379758 379758
+1 * 379758 379758

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(194) std::allocator<int>::~allocator()
calls=1002 0x403d7e +42 
* * 14028 5010 5010 1 0 0 1
+5 * 1002 1002
+1 * 1002 1002

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002
+4 +2 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002 1002
+4 * 1002 1002
+3 * 1002
+3 * 1002
+3 * 1002
+4 * 1002
+3 * 1002 1002
+4 * 1002 1002
+3 -1 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1002 0x403d98 +11 
* * 152708 42636 27388 1 2 0 1 2 0 31838 301 2004
+5 +1 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(192)
calls=1002 0x403296 -82 
* * 23046 8016 8016 1 0 0 1
+5 * 1002
jump=1002 +28 * 
* * 
+28 * 1002
+4 * 1002 1002
+1 * 1002 1002
+1 * 1002 1002

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 4040 0 4040 1 0 0 1
+1 * 4040
+3 * 4040 0 4040 0 0 1 0 0 1
+4 +1 4040 4040
+4 * 4040 4040 0 1 1 0 1 1
+4 * 4040
+3 * 4040 4040
+4 * 4040 4040
+3 * 4040
+3 * 4040
+3 * 4040
+4 * 4040 4040
+1 * 4040 4040

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +2 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1002 0x404236 -14 
* * 332571 58619 57997 21 27 14 21 27 14 48892 1164 2004
+5 * 1002 1002
+4 * 1002 0 1002
+3 +1 1002 1002
+4 * 1002 1002 0 1 0 0 1
+3 * 1002 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+3 * 1002 1002
+4 * 1002
+4 * 1002
+3 * 1002 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+1 * 1002 1002

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +2 1002 1002
+4 * 1002 1002 0 1 0 0 1
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(96)
calls=1002 0x403fbe -14 
* * 331828 53936 51234 25 2 35 25 2 35 48633 2128 2004
+5 * 1002 1002
+4 * 1002 0 1002
+3 +1 1002 1002
+4 * 1002 1002
+3 * 1002 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+3 * 1002 1002
+4 * 1002
+4 * 1002
+3 * 1002 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+1 * 1002 1002

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 501 0 501
+1 * 501
+3 * 501 0 0 1 0 0 1
+4 * 501 0 501
+4 * 501 0 501
+4 +2 501 501
+4 * 501 501
+4 * 501 501
+4 * 501 501
+4 * 501
+3 * 501 0 0 0 0 0 0 0 0 501
jcnd=8/501 +51 +10 
* * 
+2 +3 493 493
+4 * 493 493
+4 * 493 493
+4 -1 493 493
+4 * 493
+3 * 493
+3 * 493 0 493
cfi=(3)
cfn=(264)
calls=493 0x4036b1 215 
* * 18734 6409 6902 0 31 19 0 31 19 493
+5 +2 493 493
+4 * 493 493
+4 * 493
+4 * 493 493
+4 * 493 0 493
+4 * 493
jump=493 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12116 3681 3205 21 4 27 21 4 27 752 76 47
+5 +2 501 501
+1 * 501 501

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 2028 0 2028 1 0 0 1
+1 * 2028
+3 * 2028 0 2028 1 0 0 1
+4 +1 2028 2028
+4 * 2028 2028
+1 * 2028 2028

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+3 * 1002 0 1002
+4 * 1002
+4 * 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(10)
cfn=(110)
calls=1002 0x404380 726 
* * 10020 5010 4008
+5 * 1002 1002
+4 * 1002 1002
+1 * 1002 1002

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002 1 0 0 1
+4 +2 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1002 0x40325e 113 
* * 6012 3006 2004
+5 * 1002
+3 * 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+3 -1 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1002 0x40326c 148 
* * 31062 10020 12024 4 0 0 4
+5 +1 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1002 0x4031ec 159 
* * 188298 56250 35182 27 5 0 27 5 0 27710 749 2004
+5 * 1002
jump=1002 +28 * 
* * 
+28 * 1002 0 0 1 0 0 1
+4 * 1002 1002
+1 * 1002 1002
+1 * 1002 1002

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1010 0 1010 1 0 0 1
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 +2 1010 1010
+5 * 1010 0 0 0 0 0 0 0 0 1010
+2 +1 1010 1010
+4 * 1010 1010
+4 * 1010 1010
+4 * 1010
+3 * 1010
+3 * 1010 0 1010
cfi=(5)
cfn=(160)
calls=1010 0x4044d6 -65 
* * 122129 31448 17300 25 5 0 25 5 0 26907 759 2020
+5 +1 1010 1010
+1 * 1010 1010

fn=(12)
0x403b16 134 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1002 0x4043ca -45 
* * 36072 13026 14028 4 0 4 4 0 4
+5 +1 1002 1002 0 1 0 0 1
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(20)
calls=1002 0x404412 +43 
* * 357621 70643 65011 22 27 14 22 27 14 48892 1164 2004
+5 * 1002
jump=1002 +28 * 
* * 
+28 * 1002
+4 * 1002 1002
+1 * 1002 1002
+1 * 1002 1002

fn=(14)
0x4043ca 90 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002
+4 * 1002 0 1002 0 0 1 0 0 1
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=1002 0x404804 +24 
* * 18036 6012 7014 2 0 1 2 0 1
+5 * 1002 1002
+4 * 1002 0 1002 0 0 2 0 0 2
+7 * 1002 1002
+4 * 1002 0 1002 1 0 0 1
+8 * 1002 1002
+4 * 1002 0 1002
+8 +1 1002 1002
+1 * 1002 1002

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002 0 1002
+2 * 1002 0 1002
+2 * 1002 0 1002
+1 * 1002 0 0 1 0 0 1
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +2 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(82)
calls=1002 0x4039fc 117 
* * 6012 3006 2004 2 0 0 2
+5 * 1002
+3 * 1002 0 1002
cfi=(3)
cfn=(84)
calls=1002 0x4039ed -88 
* * 6012 3006 2004
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(2)
calls=1002 0x402d74 645 
* * 13026 6012 2004
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002
+3 * 1002 0 1002 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1002 0x403a0a 134 
* * 414994 86000 79290 32 2 35 32 2 35 48633 2128 2004
+5 +4 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(106)
calls=1002 0x40325e 113 
* * 6012 3006 2004 1 0 0 1
+5 * 1002
+3 * 1002 1002
+4 * 1002 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(108)
calls=1002 0x403a98 565 
* * 25050 10020 8016 2 0 0 2
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(112)
calls=1002 0x403a68 547 
* * 25050 10020 8016
+5 * 1002
+3 * 1002
+3 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(11)
cfn=(114)
calls=1002 0x403ac9 -60 
* * 629834 215196 210190 7 1 44 7 1 44 24348 1266 2000
+5 -3 1002 1002
+4 * 1002 0 1002
+4 * 1002
jump=1002 +28 +4 
* * 
+28 +4 1002
+4 * 1002 1002
+1 * 1002 1002
+2 * 1002 1002
+2 * 1002 1002
+1 * 1002 1002

fn=(188)
0x403d98 171 1010 0 1010 1 0 0 1
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 +2 1010 1010
+5 * 1010 0 0 0 0 0 0 0 0 1010 8
+2 +1 1010 1010
+4 * 1010 1010
+4 * 1010 1010
+4 * 1010
+3 * 1010
+3 * 1010 0 1010
cfi=(5)
cfn=(190)
calls=1010 0x40452a -65 
* * 137621 36866 22524 0 2 0 0 2 0 31030 309 2020
+5 +1 1010 1010
+1 * 1010 1010

fn=(22)
0x404236 167 1010 0 1010 1 0 0 1
+1 * 1010
+3 * 1010
+4 * 1010 0 1010 1 0 0 1
+4 * 1010 0 1010
+4 0 1010 1010
+5 0 1010 0 0 0 0 0 0 0 0 1010
+2 0 1010 1010
+4 0 1010 1010
+4 0 1010
+5 0 1010
+3 0 1010
+3 0 1010 0 1010
fi=(6)
cfi=(5)
cfn=(26)
calls=1010 0x404730 99 
* 0 319100 54012 54395 22 30 19 22 30 19 48284 1220 2020
+5 0 1010
fi=(6)
jump=1010 +7 0 
* 0 
+7 0 1010 1010
+1 0 1010 1010

fn=(42)
0x403ba4 565 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+4 * 1002 0 1002
+4 * 1002
+4 * 1002 0 0 1 0 0 1
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1002 0x404468 726 
* * 10020 5010 4008 1 0 0 1
+5 * 1002 1002
+4 * 1002 1002
+1 * 1002 1002

fn=(46)
0x403b74 547 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+3 * 1002 0 1002
+4 * 1002
+4 * 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(10)
cfn=(44)
calls=1002 0x404468 726 
* * 10020 5010 4008
+5 * 1002 1002
+4 * 1002 1002
+1 * 1002 1002

fn=(86)
0x403a0a 134 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1002 0x4042e2 -45 
* * 36072 13026 14028 5 0 0 5
+5 +1 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002 1 0 0 1
cfn=(94)
calls=1002 0x40432a +43 
* * 356878 65960 58248 26 2 35 26 2 35 48633 2128 2004
+5 * 1002
jump=1002 +28 * 
* * 
+28 * 1002
+4 * 1002 1002
+1 * 1002 1002
+1 * 1002 1002

fn=(88)
0x4042e2 90 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=1002 0x4047b2 +24 
* * 18036 6012 7014 3 0 0 3
+5 * 1002 1002
+4 * 1002 0 1002
+7 * 1002 1002
+4 * 1002 0 1002
+8 * 1002 1002
+4 * 1002 0 1002
+8 +1 1002 1002
+1 * 1002 1002

fn=(156)
0x4031ec 159 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002
+4 +2 1002 1002
+4 * 1002 1002 0 1 0 0 1
+4 * 1002
+3 * 1002 1002
+4 * 1002 1002
+3 * 1002
+3 * 1002
+3 * 1002
+4 * 1002
+3 * 1002 1002
+4 * 1002 1002
+3 -1 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(158)
calls=1002 0x403ce6 +11 
* * 137196 37212 22156 24 5 0 24 5 0 27710 749 2004
+5 +1 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1002 0x4031b8 -82 
* * 23046 8016 8016 1 0 0 1
+5 * 1002
jump=1002 +28 * 
* * 
+28 * 1002
+4 * 1002 1002
+1 * 1002 1002
+1 * 1002 1002

fn=(172)
0x4031b8 79 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=1002 0x403ccc +42 
* * 14028 5010 5010
+5 * 1002 1002
+1 * 1002 1002

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 2036 0 2036 1 0 0 1
+1 * 2036
+3 * 2036 0 2036
+4 +1 2036 2036
+4 * 2036 2036 0 0 2 0 0 2
+4 * 2036
+3 * 2036 2036
+4 * 2036 2036
+3 * 2036
+3 * 2036
+3 * 2036
+4 * 2036 2036
+1 * 2036 2036

fn=(106)
0x40325e 113 2028 0 2028 1 0 0 1
+1 * 2028
+3 * 2028 0 2028
+4 +1 2028 2028
+4 * 2028 2028
+1 * 2028 2028

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 1018 0 1018 1 0 0 1
+1 * 1018
+3 * 1018 0 1018 0 0 1 0 0 1
+4 +1 1018 1018
+4 * 1018 1018
+1 * 1018 1018

fn=(82)
0x4039fc 117 1018 0 1018 1 0 0 1
+1 * 1018
+3 * 1018 0 1018 1 0 0 1
+4 +1 1018 1018
+4 * 1018 1018
+1 * 1018 1018

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 501 0 501
+1 * 501
+3 * 501
+4 * 501 0 501
+4 * 501 0 501
+4 +2 501 501
+4 * 501 501
+4 * 501 501
+4 * 501 501
+4 * 501
+3 * 501 0 0 0 0 0 0 0 0 501 10
jcnd=8/501 +51 +10 
* * 
+2 +3 493 493
+4 * 493 493
+4 * 493 493
+4 -1 493 493
+4 * 493
+3 * 493
+3 * 493 0 493
cfi=(3)
cfn=(222)
calls=493 0x403373 215 
* * 18734 6409 6902 0 32 2 0 32 2 493 3
+5 +2 493 493
+4 * 493 493
+4 * 493
+4 * 493 493
+4 * 493 0 493
+4 * 493
jump=493 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12917 3950 3422 39 6 9 39 6 9 915 89 47
+5 +2 501 501
+1 * 501 501

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 1050 0 1050 1 0 0 1
+1 * 1050
+3 * 1050
+4 * 1050 0 1050
+4 +1 1050 1050
+4 * 1050
+3 * 1050 0 1050 1 0 0 1
cfi=(13)
cfn=(64)
calls=1050 -33 -66 
* * 6300 3150 2100
+5 * 1050 1050
+1 * 1050 1050

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 2004 0 2004
+1 * 2004
+3 * 2004
+4 * 2004 0 2004
+4 +1 2004 2004
+4 * 2004
+3 * 2004 0 2004
cfi=(13)
cfn=(68)
calls=2004 0x404f1a -58 
* * 32064 12024 10020 2 0 1 2 0 1
+5 * 2004 2004
+1 * 2004 2004

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +10 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1002 0x404bc6 288 
* * 15030 6012 5010 3 0 0 3
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(122)
calls=1002 0x404bc6 288 
* * 15030 6012 5010
+5 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1002 0x404be0 -36 
* * 534644 182130 176122 4 1 44 4 1 44 24348 1266 2000
+5 +1 1002
+4 * 1002 1002
+1 * 1002 1002
+1 * 1002 1002

fn=(128)
0x404878 277 1050 0 1050
+1 * 1050
+3 * 1050
+4 * 1050 0 1050 1 0 0 1
+4 +1 1050 1050
+4 * 1050
+3 * 1050 0 1050
cfi=(13)
cfn=(130)
calls=1050 -33 -66 
* * 6300 3150 2100 0 0 1 0 0 1
+5 * 1050 1050
+1 * 1050 1050

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 2004 0 2004
+1 * 2004
+3 * 2004
+4 * 2004 0 2004
+4 +1 2004 2004
+4 * 2004
+3 * 2004 0 2004
cfi=(13)
cfn=(134)
calls=2004 0x404e98 -58 
* * 32064 12024 10020 2 0 0 2
+5 * 2004 2004
+1 * 2004 2004

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +8 1002 0 1002
+4 +3 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1002 0x404eb5 -22 
* * 426428 146058 139048 1 1 44 1 1 44 24348 1266 2000
+5 +1 1002 1002
+1 * 1002 1002

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 2004 0 2004 1 0 0 1
+1 * 2004
+3 * 2004
+4 * 2004 0 2004
+4 +1 2004 2004
+4 * 2004
+3 * 2004 0 2004
cfi=(13)
cfn=(124)
calls=2004 0x404d36 -77 
* * 12024 6012 4008 2 0 0 2
+5 * 2004 2004
+1 * 2004 2004

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 2004 0 2004 1 0 0 1
+1 * 2004
+3 * 2004
+4 * 2004 0 2004 1 0 0 1
+4 +1 2004 2004
+4 * 2004
+3 * 2004 0 2004
cfi=(13)
cfn=(58)
calls=2004 0x404d8f -77 
* * 12024 6012 4008 1 0 0 1
+5 * 2004 2004
+1 * 2004 2004

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 1018 0 1018
+1 * 1018
+3 * 1018
+4 * 1018 0 1018 1 0 0 1
+4 * 1018 0 1018
+4 * 1018 0 1018
+4 +2 1018 1018
+4 * 1018 1018
+4 * 1018
+3 * 1018
+3 * 1018
+4 * 1018 0 1018
+4 +1 1018 1018
+5 * 1018 0 0 0 0 0 0 0 0 1018
jcnd=8/1018 +33 +2 
* * 
+2 +1 1010 1010
+4 * 1010
+8 * 1010 1010
+4 * 1010 1010
+4 * 1010
+3 * 1010 0 0 1 0 0 1
+3 * 1010 0 1010 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1010 0x3877c83840 0 
* * 399494 135352 133337 11 2 21 11 2 21 23430 1280 1005 250
* * 1010 1010 0 1 1 0 1 1 0 0 0 1010
+5 +1 1018 1018
+4 * 1018
+8 * 1018 1018
+4 * 1018
+3 +1 1018 1018
+1 * 1018 1018

fn=(140)
0x404eb5 368 1018 0 1018
+1 * 1018
+3 * 1018
+4 * 1018 0 1018 1 0 0 1
+4 * 1018 0 1018
+4 * 1018 0 1018 0 0 1 0 0 1
+4 +2 1018 1018
+4 * 1018 1018
+4 * 1018
+3 * 1018
+3 * 1018
+4 * 1018 0 1018
+4 +1 1018 1018
+5 * 1018 0 0 0 0 0 0 0 0 1018
jcnd=8/1018 +33 +2 
* * 
+2 +1 1010 1010
+4 * 1010
+8 * 1010 1010
+4 * 1010 1010
+4 * 1010
+3 * 1010
+3 * 1010 0 1010
cob=(2)
cfi=(9)
cfn=(78)
calls=1010 0x3877c83840 0 
* * 399494 135352 133337 0 1 45 0 1 45 23430 1271 1005
* * 1010 1010 0 0 0 0 0 0 0 0 0 1010
+5 +1 1018 1018
+4 * 1018
+8 * 1018 1018
+4 * 1018
+3 +1 1018 1018
+1 * 1018 1018

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002 1 0 0 1
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +8 1002 0 1002
+4 +3 1002 1002
+4 * 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(74)
calls=1002 0x404f37 -22 
* * 426428 146058 139048 14 3 4 14 3 4 24348 1276 2000 250
+5 +1 1002 1002
+1 * 1002 1002

fn=(126)
0x404be0 424 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+2 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +4 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(128)
calls=1002 0x404878 277 
* * 15030 6012 5010 1 0 0 1
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(132)
calls=1002 0x404d44 277 
* * 25050 9018 8016 2 0 0 2
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(132)
calls=1002 0x404d44 277 
* * 25050 9018 8016
+5 * 1002
+3 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(138)
calls=1002 0x404d5e -49 
* * 441458 151068 145060 1 1 44 1 1 44 24348 1266 2000
+5 +1 1002
+4 * 1002 1002
+1 * 1002 1002
+2 * 1002 1002
+1 * 1002 1002

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002 1 0 0 1
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +10 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(56)
calls=1002 0x404c38 288 
* * 15030 6012 5010 3 0 0 3
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(56)
calls=1002 0x404c38 288 
* * 15030 6012 5010
+5 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1002 0x404c52 -36 
* * 534644 182130 176122 20 3 5 20 3 5 24348 1276 2000 250
+5 +1 1002
+4 * 1002 1002
+1 * 1002 1002
+1 * 1002 1002

fn=(60)
0x404c52 424 1002 0 1002
+1 * 1002
+3 * 1002 0 1002
+2 * 1002 0 1002
+1 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +4 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(62)
calls=1002 0x40492d 277 
* * 15030 6012 5010 2 0 0 2
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002 1 0 0 1
cfn=(66)
calls=1002 0x404d9d 277 
* * 25050 9018 8016 2 0 1 2 0 1
+5 * 1002
+3 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfn=(66)
calls=1002 0x404d9d 277 
* * 25050 9018 8016
+5 * 1002
+3 * 1002
+3 * 1002
+3 * 1002 0 1002
cfn=(72)
calls=1002 0x404db7 -49 
* * 441458 151068 145060 15 3 4 15 3 4 24348 1276 2000 250
+5 +1 1002
+4 * 1002 1002
+1 * 1002 1002
+2 * 1002 1002
+1 * 1002 1002

fn=(282)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(10)
fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 2004 0 2004 1 0 0 1
+1 * 2004
+3 * 2004 0 2004
+4 +1 2004 2004
+4 * 2004 2004
+1 * 2004 2004

fn=(110)
0x404380 726 2004 0 2004 1 0 0 1
+1 * 2004
+3 * 2004 0 2004
+4 * 2004 0 2004
+4 * 2004 2004
+4 * 2004 2004
+3 * 2004 2004
+4 * 2004 0 2004
+3 * 2004 2004
+1 * 2004 2004

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 2004 0 2004 1 0 0 1
+1 * 2004
+3 * 2004 0 2004
+4 +1 2004 2004
+4 * 2004 2004
+1 * 2004 2004

fn=(44)
0x404468 726 2004 0 2004
+1 * 2004
+3 * 2004 0 2004
+4 * 2004 0 2004
+4 * 2004 2004
+4 * 2004 2004
+3 * 2004 2004
+4 * 2004 0 2004 1 0 0 1
+3 * 2004 2004
+1 * 2004 2004

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1010 0 1010 1 0 0 1
+1 * 1010
+3 * 1010 0 1010
+4 * 1010 0 1010 1 0 0 1
+4 * 1010 1010
+1 * 1010 1010

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1010 0 1010 1 0 0 1
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 +4 1010 1010
+4 * 1010 1010
+4 * 1010
+3 * 1010
+3 * 1010 0 1010
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1010 0x40454c -14 
* * 6060 2020 3030 1 0 0 1
+5 +2 1010 1010
+1 * 1010 1010

fn=(150)
0x40326c 148 1010 0 1010
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 +3 1010 1010 0 1 0 0 1
+4 * 1010 1010
+4 * 1010
+3 * 1010
+3 * 1010 0 1010
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1010 0x403d1a -29 
* * 18180 6060 7070 3 0 0 3
+5 +1 1010 1010
+1 * 1010 1010

fn=(180)
0x40334a 148 1010 0 1010
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 +3 1010 1010
+4 * 1010 1010
+4 * 1010
+3 * 1010
+3 * 1010 0 1010
cfn=(182)
calls=1010 0x403dcc -29 
* * 18180 6060 7070 2 0 0 2
+5 +1 1010 1010
+1 * 1010 1010

fn=(152)
0x403d1a 122 1010 0 1010 1 0 0 1
+1 * 1010
+3 * 1010
+4 * 1010 0 1010
+4 * 1010 0 1010
+4 +4 1010 1010
+4 * 1010 1010
+4 * 1010
+3 * 1010
+3 * 1010 0 1010
cfn=(154)
calls=1010 0x4044f8 -14 
* * 6060 2020 3030 2 0 0 2
+5 +2 1010 1010
+1 * 1010 1010

fn=(184)
0x40454c 112 1010 0 1010 1 0 0 1
+1 * 1010
+3 * 1010 0 1010
+4 * 1010 0 1010
+4 * 1010 1010
+1 * 1010 1010

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2689 443 438 3 3 5 3 3 5 402 56 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1073 290 186 0 0 0 0 0 0 202 16 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3470 706 647 15 5 5 15 5 5 560 74 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1093 296 194 2 0 0 2 0 0 207 10 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 501 0 501 1 0 0 1
+1 * 501
+3 * 501
+4 * 501 0 501
+4 * 501 0 501
+4 +1 501 501
+4 * 501
+3 * 501 0 501
cfi=(2)
cfn=(2)
calls=501 0x402d74 645 
* * 6513 3006 1002
+5 * 501
+3 * 501 0 501
+3 +1 501 501
+6 * 501 0 501
+3 * 501 501
+6 * 501 0 501
+3 +1 501 501
+6 * 501 0 501 1 0 0 1
+3 * 501 501
+6 * 501 0 501
+3 +2 501 0 501
+7 * 501
jump=501 +86 * 
* * 
+2 +1 126252 126252
+3 * 126252
+3 * 126252 126252
+4 * 126252
+3 * 126252
+3 * 126252 0 126252
cfi=(2)
cfn=(144)
calls=126252 0x402d9a 770 
* * 1388772 631260 378756
+5 * 126252 126252
+4 * 126252 126252
+5 * 126252
+4 * 126252 0 126252
+5 +1 126252 126252
+3 * 126252
+3 * 126252 126252
+4 * 126252
+3 * 126252
+3 * 126252 0 126252
cfi=(2)
cfn=(146)
calls=126252 0x402dba 770 
* * 1388772 631260 378756 1 0 0 1
+5 * 126252 126252
+2 * 126252
+4 * 126252 126252
+5 * 126252
+4 * 126252 0 126252
+5 -2 126252 0 126252
+4 * 126252 126252
+3 * 126252
+3 * 126252 126252
+3 * 126252 0 0 0 0 0 0 0 0 126252 502
jcnd=125751/126252 -93 +1 
* * 
-9 * 501 501 0 1 0 0 1
+3 * 501
+3 * 501 501
+3 * 501 0 0 0 0 0 0 0 0 501
jcnd=501/501 -93 +1 
* * 
+2 +4 501 501
+3 * 501
+3 * 501
+4 * 501 501 0 1 0 0 1
+5 * 501
+4 * 501
+3 * 501 0 501
+5 +1 501 501
+3 * 501
+3 * 501
+4 * 501 501
+5 * 501
+4 * 501
+3 * 501 0 501
+5 +1 501 0 501
+7 * 501
jump=501 0x4016ee * 
* * 
+2 +1 126252 126252
+3 * 126252
+3 * 126252 126252
+4 * 126252
+3 * 126252 0 0 1 0 0 1
+3 * 126252 0 126252
cfi=(2)
cfn=(146)
calls=126252 0x402dba 770 
* * 1388772 631260 378756
+5 * 126252 126252
+2 * 126252
+4 * 126252 126252
+5 * 126252 0 126252
+5 +1 126252 126252
+3 * 126252
+3 * 126252 126252
+4 * 126252
+3 * 126252
+3 * 126252 0 126252
cfi=(2)
cfn=(144)
calls=126252 0x402d9a 770 
* * 1388772 631260 378756
+5 * 126252 126252
+4 * 126252 126252
+5 * 126252 0 126252
+5 +1 126252 126252
+5 * 126252 126252
+5 * 126252 126252
+5 * 126252
+4 * 126252 0 126252
+5 +1 126252 126252
+5 * 126252 126252
+5 * 126252 126252
+5 * 126252
+4 * 126252 0 126252
+5 -4 126252 0 126252
+4 * 126252 126252
+3 * 126252
+3 * 126252 126252
+3 * 126252 0 0 0 0 0 0 0 0 126252 502
jcnd=125751/126252 0x401672 +1 
* * 
-9 * 501 501 0 1 0 0 1
+3 * 501
+3 * 501 501
+3 * 501 0 0 0 0 0 0 0 0 501
jcnd=501/501 0x401672 +1 
* * 
+6 +6 501 501 0 1 0 0 1
+5 * 501 501
+5 * 501 0 501
+5 +2 501 501
+3 +1 501 0 501
+3 * 501 501
+5 * 501 501
+1 * 501 501

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 501
+7 * 501
+7 * 501
+3 * 501
+3 * 501 0 501
cfi=(2)
cfn=(4)
calls=501 0x4030b2 310 
* * 588775 177519 167737 63 31 22 63 31 22 36669 1513 2002 250
+5 * 501
+7 * 501
+7 * 501
+3 * 501
+3 * 501 0 501
cfi=(2)
cfn=(80)
calls=501 0x402ff4 310 
* * 588404 175172 164360 47 3 79 47 3 79 36534 1992 2002
+5 * 501 0 0 1 0 0 1
+7 * 501
+7 * 501
+3 * 501
+3 * 501 0 501
cfn=(142)
calls=501 0x401585 -52 
* * 13162773 5820117 3038565 8 0 0 8 0 0 253506 1004
+5 * 501 0 501
+8 * 501 501
+6 * 501 0 501
+6 * 501
+7 * 501
+3 * 501 0 501
cfi=(2)
cfn=(148)
calls=501 0x402df4 414 
* * 124710 39147 27611 33 5 0 33 5 0 13855 377 1002
+5 * 501
+7 * 501
+3 * 501 0 501 1 0 0 1
cfi=(2)
cfn=(178)
calls=501 0x402e74 414 
* * 132466 41859 30227 7 2 0 7 2 0 15919 152 1002
+5 +2 501
+7 * 501
+7 * 501
+3 * 501
+3 * 501 0 501
cfi=(2)
cfn=(4)
calls=501 0x4030b2 310 
* * 588058 177458 167584 2 0 2 2 0 2 36571 927 2002
+5 * 501
+7 * 501
+7 * 501
+3 * 501
+3 * 501 0 501
cfi=(2)
cfn=(80)
calls=501 0x402ff4 310 
* * 587686 175122 164198 0 0 0 0 0 0 36447 1402 2002
+5 * 501 501
+6 * 501 0 0 1 0 0 1
+7 * 501
+7 * 501 0 501
+6 * 501 501
+8 * 501
+3 * 501
+3 * 501 0 501
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=501 0x401719 -33 
* * 6089655 2536062 1396287 4 0 0 4 0 0 126753 502
+5 * 501 0 501
+8 * 501 501
+6 * 501 0 501
+6 * 501
+7 * 501 0 0 1 0 0 1
+3 * 501 0 501
cfi=(2)
cfn=(148)
calls=501 0x402df4 414 
* * 124710 39147 27611 0 0 0 0 0 0 13855 372 1002
+5 * 501
+7 * 501
+3 * 501 0 501
cfi=(2)
cfn=(178)
calls=501 0x402e74 414 
* * 132466 41859 30227 0 0 0 0 0 0 15919 149 1002
+5 +2 501 501
+7 * 501
+3 * 501 0 501
cfi=(2)
cfn=(2)
calls=501 0x402d74 645 
* * 6513 3006 1002
+5 * 501 501
+6 * 501
+3 * 501
+3 * 501
+3 * 501 501
+7 * 501
+3 * 501 0 0 1 0 0 1
+3 * 501 0 501
cfi=(2)
cfn=(144)
calls=501 0x402d9a 770 
* * 5511 2505 1503
+5 * 501
+3 * 501
+7 * 501
+3 * 501
+3 * 501 0 501
cfi=(2)
cfn=(200)
calls=501 0x402eda 901 
* * 44829 16912 12885 42 38 11 42 38 11 1909 102 47
+5 +1 501 501
+7 * 501
+3 * 501 0 501
cfi=(2)
cfn=(10)
calls=501 0x402f54 645 
* * 6513 3006 1002 0 1 0 0 1
+5 * 501 501
+6 * 501
+3 * 501
+3 * 501
+3 * 501 501
+7 * 501 0 0 1 0 0 1
+3 * 501
+3 * 501 0 501
cfi=(2)
cfn=(146)
calls=501 0x402dba 770 
* * 5511 2505 1503
+5 * 501
+3 * 501
+7 * 501
+3 * 501
+3 * 501 0 501
cfi=(2)
cfn=(244)
calls=501 0x402f7a 901 
* * 44028 16643 12668 22 35 46 22 35 46 1746 76 47
+5 +1 501 501
+7 * 501
+3 * 501 0 501
cfi=(2)
cfn=(10)
calls=501 0x402f54 645 
* * 6513 3006 1002
+5 * 501 501
+6 * 501
+3 * 501
+3 * 501
+3 * 501 501 0 1 0 0 1
+7 * 501
+3 * 501
+3 * 501 0 501
cfi=(2)
cfn=(146)
calls=501 0x402dba 770 
* * 5511 2505 1503
+5 * 501 501
+2 * 501
+4 * 501 501
+8 * 501 501
+8 * 501 0 501
+8 +1 501 501
+7 * 501
+3 * 501 0 501
cfi=(2)
cfn=(2)
calls=501 0x402d74 645 
* * 6513 3006 1002
+5 * 501 501 0 1 0 0 1
+6 * 501
+3 * 501
+3 * 501
+3 * 501 501
+7 * 501
+3 * 501
+3 * 501 0 501
cfi=(2)
cfn=(144)
calls=501 0x402d9a 770 
* * 5511 2505 1503
+5 * 501 501
+4 * 501 501
+8 * 501
+4 * 501 501
+8 * 501
+3 * 501 0 501
+8 +2 501 0 501
+7 -12 501 501
+8 * 501 501
+7 * 501 0 0 0 0 0 0 0 0 501 1
jcnd=1/501 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 501
+7 * 501
+3 * 501 0 501
cfi=(2)
cfn=(2)
calls=501 0x402d74 645 
* * 6513 3006 1002 2 0 1 2 0 1
+5 * 501
+3 * 501 501
+7 * 501
+3 * 501 0 501
cfi=(2)
cfn=(2)
calls=501 0x402d74 645 
* * 6513 3006 1002 0 1 0 0 1
+5 * 501
+3 * 501 0 0 0 0 0 0 0 0 501
+2 * 501 0 0 1 0 0 1
+5 * 501
jump=501 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 501
+2 * 501 0 0 0 0 0 0 0 0 501
jcnd=501/501 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 501 0 501
+1 * 501
+3 * 501
+4 * 501 0 501
+4 * 501 0 501
+4 * 501 0 501
+5 +1 501 501
+4 * 501
+3 * 501 0 501
cfi=(2)
cfn=(2)
calls=501 0x402d74 645 
* * 6513 3006 1002
+5 * 501
+3 * 501 0 501
+3 +1 501 501 0 1 0 0 1
+6 * 501 0 501
+3 * 501 501
+6 * 501 0 501
+3 +2 501 0 501
+7 * 501
jump=501 +86 * 
* * 
+2 +1 126252 126252
+3 * 126252
+3 * 126252 126252
+4 * 126252
+3 * 126252
+3 * 126252 0 126252
cfi=(2)
cfn=(144)
calls=126252 0x402d9a 770 
* * 1388772 631260 378756
+5 * 126252 126252
+4 * 126252 126252
+5 * 126252
+4 * 126252 0 126252
+5 +1 126252 126252
+3 * 126252
+3 * 126252 126252
+4 * 126252
+3 * 126252
+3 * 126252 0 126252
cfi=(2)
cfn=(146)
calls=126252 0x402dba 770 
* * 1388772 631260 378756
+5 * 126252 126252
+2 * 126252
+4 * 126252 126252
+5 * 126252
+4 * 126252 0 126252
+5 -2 126252 0 126252
+4 * 126252 126252
+3 * 126252
+3 * 126252 126252
+3 * 126252 0 0 0 0 0 0 0 0 126252 502
jcnd=125751/126252 -93 +1 
* * 
-9 * 501 501 0 1 0 0 1
+3 * 501
+3 * 501 501
+3 * 501 0 0 0 0 0 0 0 0 501
jcnd=501/501 -93 +1 
* * 
+2 +4 501 501
+3 * 501
+3 * 501 0 0 1 0 0 1
+4 * 501 501
+5 * 501
+4 * 501
+3 * 501 0 501
+5 +1 501 501
+3 * 501
+3 * 501
+4 * 501 501
+5 * 501
+4 * 501
+3 * 501 0 501
+5 +1 501 501
+5 * 501 501
+5 * 501 501
+5 * 501 0 0 1 0 0 1
+4 * 501
+3 * 501 0 501
+5 +2 501 501
+3 +1 501 0 501
+3 * 501 501
+5 * 501 501
+1 * 501 501

fl=(4)
fn=(90)
0x4047b2 115 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002 1 0 0 1
+4 +1 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(5)
cfn=(92)
calls=1002 0x4049d4 -35 
* * 6012 2004 3006 1 0 0 1
+5 * 1002 1002
+1 * 1002 1002

fn=(194)
0x403d7e 121 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfi=(5)
cfn=(196)
calls=1002 0x404520 -35 
* * 5010 2004 2004
+5 * 1002 1002
+1 * 1002 1002

fn=(16)
0x404804 115 1002 0 1002 1 0 0 1
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 0 1002
+4 +1 1002 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002
+3 * 1002 0 1002
cfi=(5)
cfn=(18)
calls=1002 0x404a28 -35 
* * 6012 2004 3006 1 0 1 1 0 1
+5 * 1002 1002
+1 * 1002 1002

fn=(174)
0x403ccc 121 1002 0 1002
+1 * 1002
+3 * 1002
+4 * 1002 0 1002
+4 * 1002 1002
+4 * 1002
+3 * 1002 0 1002
cfi=(5)
cfn=(176)
calls=1002 0x4044cc -35 
* * 5010 2004 2004
+5 * 1002 1002
+1 * 1002 1002

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 2020 0 2020 1 0 0 1
+2 0 2020 0 2020
+2 0 2020 0 2020
+2 0 2020
+3 0 2020 0 2020
+2 0 2020 0 2020
+1 0 2020 0 2020
+1 0 2020
+3 0 2020
+4 0 2020 2020
+4 0 2020 0 2020
+4 0 2020
+3 0 2020
+4 0 2020
+3 0 2020
+3 0 2020
+3 0 2020 0 0 1 0 0 1 0 0 2020
+6 0 2020
+4 0 2020 0 0 0 0 0 0 0 0 2020
+6 0 2020
+4 0 2020 0 0 0 0 0 0 0 0 2020
+6 0 2020 2020
+7 0 2020 0 0 0 0 0 0 0 0 2020 2
jcnd=1896/2020 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1896
+2 0 1896 0 0 0 0 0 0 0 0 1896
+6 0 1896 1896 0 1 0 0 1
+4 0 1896
+3 0 1896
+2 0 1896 0 0 0 0 0 0 0 0 1896
jcnd=1896/1896 0x3877c78a40 0 
* 0 
+6 0 1896 1896
+4 0 1896
+3 0 1896 0 0 0 0 0 0 0 0 1896
+6 0 1896 1896
+5 0 1896
+4 0 1896 0 0 0 0 0 0 0 0 1896
jcnd=1896/1896 0x3877c7907c 0 
* 0 
+6 0 1896 1896
+5 0 1896
+4 0 1896 0 0 0 0 0 0 0 0 1896
+6 0 1896
+4 0 1896 0 0 1 0 0 1 0 0 1896
+6 0 1896
+4 0 1896 1896
+7 0 1896 0 0 0 0 0 0 0 0 1896
+6 0 1896 1896
+6 0 1896
+2 0 1896 0 0 0 0 0 0 0 0 1896
+6 0 1896 1896
+4 0 1896 0 0 0 0 0 0 0 0 1896 3
jcnd=1893/1896 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=2/3 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 1896 1896 0 1 0 0 1
+4 0 1896 0 0 0 0 0 0 0 0 1896 960
jcnd=785/1896 0x3877c78bf0 0 
* 0 
+6 0 1111 1111 0 0 2 0 0 2
+6 0 1111 0 0 1 0 0 1 0 0 1111 82
jcnd=92/1111 0x3877c78a78 0 
* 0 
+6 0 1019 1019
+5 0 1019 1019
+5 0 1019 1019
+4 0 1019 0 0 0 0 0 0 0 0 1019
+6 0 1019 1019
+4 0 1019 0 0 0 0 0 0 0 0 1019
+6 0 1019 1019
+9 0 1019 0 1019
+4 0 1019 0 1019
+4 0 1019 0 0 0 0 0 0 0 0 1019 5
jcnd=1011/1019 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 1019
+3 0 1019
+4 0 1019 1019
+4 0 1019 1019
+4 0 1019 0 0 0 0 0 0 0 0 1019
-12 0 92
+4 0 92 92
+4 0 92 92
+4 0 92 0 0 0 0 0 0 0 0 92
+6 0 1111
+7 0 1111 0 1111
+4 0 1111 0 1111
+4 0 1111 0 0 0 0 0 0 0 0 1111 10
jcnd=588/1111 +18 0 
* 0 
+2 0 523 0 523
+8 0 523 0 523
+8 0 523 0 523
+4 0 523
+3 0 523 0 523 1 0 0 1
+4 0 523
+4 0 523 0 523
+4 0 523 0 523
+4 0 523
+7 0 523 0 0 0 0 0 0 0 0 523
jcnd=523/523 0x3877c78b20 0 
* 0 
-30 0 588 0 588
+4 0 588
+3 0 588 0 588
+4 0 588
+4 0 588 0 588
+4 0 588 0 588
+4 0 588
+7 0 588 0 0 0 0 0 0 0 0 588
jcnd=588/588 0x3877c78b20 0 
* 0 
-7 0 785
+7 0 785 0 0 0 0 0 0 0 0 785
jcnd=785/785 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1896 0 0 1 0 0 1
+5 0 1896 1896
+4 0 1896 1896
+7 0 1896 0 0 0 0 0 0 0 0 1896
jcnd=1896/1896 +16 0 
* 0 
+16 0 1896 0 1896
+5 0 1896 0 0 0 0 0 0 0 0 1896
+6 0 1896
+3 0 1896
jump=1896 0x3877c7878f 0 
* 0 
+10 0 92 0 92
+6 0 92 0 0 1 0 0 1
jump=92 0x3877c78885 0 
* 0 
0x3877c78b20 0 1896 1896 0 1 0 0 1
+4 0 1896
+2 0 1896 0 0 0 0 0 0 0 0 1896
+6 0 1896 1896
+7 0 1896 0 0 0 0 0 0 0 0 1896
jcnd=1896/1896 +15 0 
* 0 
+15 0 1896 0 1896 1 0 0 1
+4 0 1896 0 0 0 0 0 0 0 0 1896 2
+6 0 1896
+4 0 1896 1896
+1 0 1896 1896
+1 0 1896 1896
+2 0 1896 1896
+2 0 1896 1896
+2 0 1896 1896
+2 0 1896 1896
0x3877c78bf0 0 785 0 0 1 0 0 1
+3 0 785 0 785
+4 0 785
+3 0 785
+4 0 785 0 785 1 0 0 1
+4 0 785
jump=785 0x3877c788cf 0 
* 0 
0x3877c78f12 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 1896 1896 0 1 1 0 1 1
+4 0 1896 0 0 1 0 0 1
+7 0 1896
+4 0 1896
+3 0 1896
+3 0 1896 0 0 0 0 0 0 0 0 1896
jcnd=1896/1896 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 2010 0 0 1 0 0 1
+7 0 2010
+3 0 2010
+3 0 2010 2010 0 0 1 0 0 1
+4 0 2010
+4 0 2010 0 0 0 0 0 0 0 0 0 0 2010 250
jump=248 0x3877c89be8 0 
* 0 
jump=258 0x3877c89bd0 0 
* 0 
jump=248 0x3877c89bb8 0 
* 0 
jump=248 +11 0 
* 0 
jump=248 0x3877c89c48 0 
* 0 
jump=250 0x3877c89c30 0 
* 0 
jump=252 0x3877c89c18 0 
* 0 
jump=258 0x3877c89c00 0 
* 0 
+11 0 248 248
+3 0 248
+4 0 248
+4 0 248 248
+4 0 248
+4 0 248 0 248
+4 0 248
+9 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248
+4 0 248
+4 0 248 0 0 0 0 0 0 0 0 248
jcnd=8/248 0x3877c89c60 0 
* 0 
-40 0 31186 31186
+4 0 31186 0 31186 0 0 6 0 0 6
+4 0 31186 31186
+4 0 31186 0 31186 0 0 15 0 0 15
+4 0 31186 31186
+4 0 31186 0 31186 0 0 17 0 0 17
+4 0 31186 31186
+4 0 31186 0 31186 0 0 3 0 0 3
+4 0 31186
+4 0 31186
+4 0 31186 0 0 0 0 0 0 0 0 31186 1536
jcnd=1974/31186 0x3877c89c60 0 
* 0 
-32 0 250 250
+4 0 250 0 250
+4 0 250 250
+4 0 250 0 250
+4 0 250 250
+4 0 250 0 250
+4 0 250
+4 0 250
+4 0 250 0 0 0 0 0 0 0 0 250
jcnd=10/250 0x3877c89c60 0 
* 0 
-24 0 252 252
+4 0 252 0 252
+4 0 252 252
+4 0 252 0 252
+4 0 252
+4 0 252
+4 0 252 0 0 0 0 0 0 0 0 252
jcnd=8/252 0x3877c89c60 0 
* 0 
-16 0 258 258 0 1 0 0 1
+4 0 258 0 258
+4 0 258 0 0 1 0 0 1
+4 0 258
+4 0 258 0 0 0 0 0 0 0 0 258 4
jcnd=10/258 0x3877c89c60 0 
* 0 
+6 0 30184
+4 0 30184 30184
+3 0 30184 0 30184 0 0 1 0 0 1
+3 0 30184 30184
+4 0 30184 0 30184 0 0 3 0 0 3
+4 0 30184 30184
+4 0 30184 0 30184 0 0 18 0 0 18
+4 0 30184 30184
+4 0 30184 0 30184
+4 0 30184
jump=30184 -80 0 
* 0 
-30 0 248 248
+3 0 248 0 248
+3 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248 0 0 2 0 0 2
+4 0 248 248
+4 0 248 0 248
+4 0 248
jump=248 -80 0 
* 0 
-24 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258
jump=258 -80 0 
* 0 
-16 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248
jump=248 -80 0 
* 0 
+8 0 248 248
+3 0 248
+4 0 248 0 0 1 0 0 1
+4 0 248
+4 0 248
jump=248 -39 0 
* 0 
+9 0 258
+3 0 258 0 0 0 0 0 0 0 0 258
+6 0 258 258
+3 0 258
+4 0 258
jump=258 -72 0 
* 0 
+8 0 248
+4 0 248 248
+3 0 248 0 0 0 0 0 0 0 0 248
+2 0 248
+4 0 248
jump=248 -99 0 
* 0 
+11 0 258 258 0 1 0 0 1
+3 0 258
+4 0 258
+4 0 258
+4 0 258
jump=258 0x3877c89b78 0 
* 0 
+9 0 252 252
+3 0 252
+4 0 252
+4 0 252
+4 0 252
jump=252 0x3877c89b70 0 
* 0 
+9 0 250 250
+3 0 250
+4 0 250
+4 0 250
+4 0 250
jump=250 0x3877c89b68 0 
* 0 
+9 0 248 248
+3 0 248
+4 0 248
+4 0 248
+4 0 248
jump=248 0x3877c89b60 0 
* 0 
+9 0 2010 0 2010 1 0 0 1
+3 0 2010 2010

fn=(104) alloc_perturb
0x3877c77180 0 1871 1871 0 1 0 0 1
+6 0 1871
+2 0 1871 0 0 0 0 0 0 0 0 1871 1
+2 0 1871 1871

fn=(38) _int_malloc
0x3877c79a00 0 2020 0 2020 1 0 0 1
+2 0 2020
+3 0 2020 0 2020
+2 0 2020 0 2020
+2 0 2020 0 2020 0 0 1 0 0 1
+2 0 2020
+3 0 2020 0 2020
+1 0 2020 0 2020
+1 0 2020
+4 0 2020
+4 0 2020 0 0 0 0 0 0 0 0 2020
+6 0 2020
+4 0 2020
+6 0 2020
+3 0 2020
+4 0 2020
+4 0 2020
+4 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020
+6 0 2020 2020 0 1 1 0 1 1
+7 0 2020 0 0 0 0 0 0 0 0 2020 5
jcnd=1898/2020 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 149 149
+6 0 149
+4 0 149
+2 0 149 0 0 0 0 0 0 0 0 149
+6 0 149
+3 0 149
+4 0 149 149
+1 0 149 149
+1 0 149 149
+2 0 149 149
+2 0 149 149
+2 0 149 149
+2 0 149 149
-14 0 1871
+4 0 1871 1871
+1 0 1871 1871
+1 0 1871 1871
+2 0 1871 1871
+2 0 1871 1871
+2 0 1871 1871
+2 0 1871 1871
+7 0 1915
+7 0 1915 0 0 1 0 0 1 0 0 1915 7
jcnd=1012/1915 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 12 0 0 12
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 1012 0 0 1 0 0 1
+3 0 1012
+4 0 1012
+4 0 1012 0 0 1 0 0 1 0 0 1012
jcnd=1012/1012 0x3877c7a1a4 0 
* 0 
+30 0 1012 1012
+6 0 1012
+5 0 1012 0 0 0 0 0 0 0 0 1012 1
jcnd=1011/1012 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 914 250 192 8 0 0 8 0 0 192 37
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1914 0 0 1 0 0 1
+3 0 1914
+3 0 1914
+3 0 1914
+4 0 1914
+3 0 1914
+4 0 1914 0 1914
+5 0 1914
+3 0 1914 0 1914
+4 0 1914 0 1914
+4 0 1914 0 1914
+5 0 1914
+3 0 1914
+3 0 1914
+3 0 1914
+3 0 1914
+4 0 1914
+4 0 1914 0 0 1 0 0 1
+4 0 1914 0 1914
+4 0 1914
+4 0 1914 0 1914
+5 0 1914 0 1914
+5 0 1914
+3 0 1914
+3 0 1914 0 1914
+5 0 1914
+5 0 1914
+3 0 1914 0 1914
+4 0 1914 0 1914
+4 0 1914
+6 0 1914 0 1914
+4 0 1914 0 1914
+5 0 1914 0 0 1 0 0 1
+3 0 1914
+3 0 1914
+3 0 1914
jump=1914 +87 0 
* 0 
+8 0 1395
+3 0 1395
+4 0 1395
+2 0 1395
+2 0 1395
+3 0 1395
+3 0 1395
+3 0 1395
+2 0 1395
+2 0 1395
+5 0 1395
+2 0 1395 1395 0 0 1 0 0 1
+4 0 1395
+3 0 1395
+4 0 1395 0 1395
+4 0 1395 0 1395 0 0 1 0 0 1
+8 0 1395
+7 0 1395 0 1395
+4 0 1395 0 1395 0 0 1 0 0 1
+4 0 1395 0 1395
+4 0 1395 0 0 0 0 0 0 0 0 1395
-38 0 505
+3 0 505
+4 0 505 0 505
+4 0 505 0 505
+8 0 505
+7 0 505 0 505
+4 0 505 0 505 0 0 1 0 0 1
+4 0 505 0 505
+4 0 505 0 0 0 0 0 0 0 0 505
+6 0 3815 3815 0 1 0 0 1
+4 0 3815
+3 0 3815 0 0 0 0 0 0 0 0 3815 112
jcnd=1852/3815 0x3877c79ef0 0 
* 0 
+6 0 1963 1963
+4 0 1963 1963
+4 0 1963
+4 0 1963 0 0 0 0 0 0 0 0 1963
+6 0 1963 1963 0 1 1 0 1 1
+7 0 1963 0 0 0 0 0 0 0 0 1963
+6 0 1963
+4 0 1963
+7 0 1963 0 0 0 0 0 0 0 0 1963 6
jcnd=980/1963 +11 0 
* 0 
+2 0 983
+3 0 983 0 0 0 0 0 0 0 0 983 135
jcnd=820/983 0x3877c79e28 0 
* 0 
+6 0 1944
+3 0 1944 0 1944
+4 0 1944 0 1944
+5 0 1944 0 0 0 0 0 0 0 0 1944 21
jcnd=44/1944 0x3877c7a090 0 
* 0 
+6 0 1900
+7 0 1900 0 0 0 0 0 0 0 0 1900 471
jcnd=1395/1900 0x3877c79c50 0 
* 0 
+6 0 505 0 0 1 0 0 1
+3 0 505
+4 0 505
+4 0 505 0 0 0 0 0 0 0 0 505
+6 0 505
+3 0 505
+4 0 505
+2 0 505
+2 0 505
+3 0 505
+3 0 505
+8 0 505
+3 0 505
+2 0 505
+2 0 505
+4 0 505 505
+4 0 505
+3 0 505 0 0 1 0 0 1 0 0 505 8
jcnd=504/505 0x3877c79e15 0 
* 0 
+6 0 1 1
+4 0 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
jump=1 0x3877c79c73 0 
* 0 
0x3877c79e15 0 504 0 504
+4 0 504 0 504
+4 0 504
+3 0 504
jump=504 0x3877c79c73 0 
* 0 
+8 0 820 820 0 1 0 0 1
+4 0 820
+3 0 820 0 0 0 0 0 0 0 0 820 247
jcnd=428/820 0x3877c79ce1 0 
* 0 
+6 0 392 392
+5 0 392 0 0 0 0 0 0 0 0 392 5
jcnd=373/392 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 1 0 0 1
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1852 0 0 1 0 0 1
+7 0 1852
+3 0 1852 0 0 0 0 0 0 0 0 1852 5
jcnd=996/1852 0x3877c7a0b0 0 
* 0 
+6 0 1823 1823 0 1 0 0 1
+4 0 1823
+3 0 1823
+3 0 1823
+2 0 1823
+4 0 1823
+3 0 1823
+3 0 1823
+2 0 1823
+2 0 1823
+2 0 1823
+2 0 1823 1823
+8 0 1823
+5 0 1823
+5 0 1823
+2 0 1823 0 0 0 0 0 0 0 0 1823
-2 0 855
+2 0 855 0 0 0 0 0 0 0 0 855
+2 0 2678
+2 0 2678 0 0 0 0 0 0 0 0 2678 45
jcnd=1717/2678 +64 0 
* 0 
+2 0 961
+8 0 961
+3 0 961
+3 0 961 0 0 0 0 0 0 0 0 961 1
jcnd=1/961 0x3877c79fc0 0 
* 0 
-6 0 1064
+3 0 1064
+3 0 1064 0 0 0 0 0 0 0 0 1064 9
jcnd=786/1064 0x3877c79fc0 0 
* 0 
+2 0 1238
+2 0 1238 1238
+8 0 1238
+2 0 1238 0 0 0 0 0 0 0 0 1238 22
jcnd=1064/1238 -20 0 
* 0 
+2 0 174
+2 0 174
+5 0 174
+3 0 174
+3 0 174
+2 0 174
+2 0 174
+5 0 174 0 0 0 0 0 0 0 0 174 4
jcnd=3/174 +14 0 
* 0 
+2 0 171
+2 0 171
+4 0 171
+2 0 171
+2 0 171 0 0 0 0 0 0 0 0 171 2
jcnd=171/171 -8 0 
* 0 
-8 0 15299
+4 0 15299
+2 0 15299
+2 0 15299 0 0 0 0 0 0 0 0 15299 1088
jcnd=13532/15299 -8 0 
* 0 
-2 0 1717 0 0 1 0 0 1
+2 0 1717 0 0 0 0 0 0 0 0 1717 28
jcnd=1596/1717 -8 0 
* 0 
+2 0 1891 1891 0 0 6 0 0 6
+4 0 1891 0 0 1 0 0 1
+3 0 1891 0 0 0 0 0 0 0 0 1891 1044
jcnd=1036/1891 0x3877c7a1cf 0 
* 0 
+6 0 855
+2 0 855
+4 0 855
+2 0 855
+2 0 855
+2 0 855 0 855
+8 0 855
jump=855 0x3877c79f30 0 
* 0 
+37 0 787 787 0 1 0 0 1
+5 0 787 787
+4 0 787
+4 0 787 787
+5 0 787 0 0 0 0 0 0 0 0 787
jcnd=787/787 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 44 0 0 1 0 0 1
+7 0 44 0 44
+6 0 44
+3 0 44 0 0 0 0 0 0 0 0 44
jcnd=44/44 0x3877c79ace 0 
* 0 
+16 0 996 996
+4 0 996
+4 0 996
+2 0 996
+5 0 996 996 0 1 0 0 1
+4 0 996
+3 0 996 0 0 0 0 0 0 0 0 996 7
jcnd=967/996 0x3877c79f00 0 
* 0 
+6 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 29
+3 0 29 29
+4 0 29 29
+4 0 29
+3 0 29
+4 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 1
jcnd=1/29 -18 0 
* 0 
-18 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+2 0 29 29
+4 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=28/29 0x3877c7a650 0 
* 0 
+6 0 1 1
+4 0 1 1 0 1 0 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1
+3 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
-14 0 28
+3 0 28 28
+4 0 28
+3 0 28 28
+4 0 28 0 0 0 0 0 0 0 0 28
+6 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29 2
+6 0 29 29
+8 0 29 0 29
+4 0 29 0 29
+4 0 29 0 0 0 0 0 0 0 0 29
+2 0 29 29 0 1 0 0 1
+4 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 14
jcnd=29/29 0x3877c7a659 0 
* 0 
+6 0 29
+4 0 29 0 0 0 0 0 0 0 0 29 8
jcnd=16/29 0x3877c7a2e3 0 
* 0 
+6 0 13 13
+4 0 13
+7 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13
+4 0 13
+7 0 13 0 13
+4 0 13 0 13
+4 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c7a285 0 
* 0 
+31 0 1012 0 0 1 0 0 1
+3 0 1012 0 1012
+4 0 1012
jump=1012 0x3877c79b99 0 
* 0 
+36 0 1036 1036 0 1 1 0 1 1
+4 0 1036 1036 0 0 1 0 0 1
+4 0 1036
+3 0 1036 1036
+4 0 1036
+4 0 1036
+3 0 1036
+3 0 1036 1036
+4 0 1036 0 0 0 0 0 0 0 0 1036
+6 0 1036 1036 0 0 1 0 0 1
+4 0 1036 0 0 0 0 0 0 0 0 1036
+6 0 1036 1036 0 1 0 0 1
+8 0 1036 0 1036
+4 0 1036 0 1036
+4 0 1036 0 0 0 0 0 0 0 0 1036 10
jcnd=560/1036 +38 0 
* 0 
+2 0 476 476 0 0 2 0 0 2
+4 0 476
+3 0 476 0 0 0 0 0 0 0 0 476
+2 0 476 476
+5 0 476 0 0 0 0 0 0 0 0 476
+6 0 476 476
+4 0 476 0 476
+4 0 476 476
+4 0 476 0 476
+4 0 476
+4 0 476 0 0 0 0 0 0 0 0 476
-4 0 560
+4 0 560 0 0 0 0 0 0 0 0 560 12
jcnd=28/560 0x3877c7a2e3 0 
* 0 
+6 0 1008 1008
+4 0 1008 1008 0 1 0 0 1
+4 0 1008 0 0 0 0 0 0 0 0 1008
+6 0 1008
+4 0 1008
+7 0 1008 0 1008 0 0 10 0 0 10
+4 0 1008 0 1008
+4 0 1008 0 1008
+4 0 1008 0 1008
+4 0 1008 0 0 0 0 0 0 0 0 1008 4
jcnd=469/1008 +7 0 
* 0 
+2 0 539 0 539
+5 0 539
+7 0 539 0 0 0 0 0 0 0 0 539 3
jcnd=533/539 +18 0 
* 0 
-7 0 469
+7 0 469 0 0 0 0 0 0 0 0 469
jcnd=469/469 +18 0 
* 0 
+2 0 6 0 6
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 1015 0 0 1 0 0 1
+7 0 1015 0 1015 0 0 1 0 0 1
+4 0 1015
+3 0 1015
+3 0 1015
+4 0 1015
+3 0 1015
+4 0 1015
+3 0 1015
+3 0 1015
+4 0 1015 0 1015
+4 0 1015 0 1015 0 0 1 0 0 1
+4 0 1015
jump=1015 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 44
+7 0 44 0 44
+6 0 44
+3 0 44 0 0 0 0 0 0 0 0 44 2
jcnd=44/44 +7 0 
* 0 
+7 0 1065
+4 0 1065 0 0 1 0 0 1
+3 0 1065
+3 0 1065 0 1065
cfn=(104)
calls=1065 0x3877c77180 0 
* 0 4260 2130 0 1 0 0 1 0 0 1065
+5 0 1065
+3 0 1065
jump=1065 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 787 0 0 1 0 0 1
+7 0 787
+2 0 787
+4 0 787
+3 0 787
+3 0 787 0 787
+5 0 787
+3 0 787
+4 0 787
+3 0 787 0 0 1 0 0 1
+4 0 787
+4 0 787
+3 0 787
+4 0 787 0 787
+4 0 787 0 787 0 0 22 0 0 22
+4 0 787
+3 0 787
+3 0 787 0 787
cfn=(104)
calls=787 0x3877c77180 0 
* 0 3148 1574 0 0 0 0 0 0 0 787 1
+5 0 787
+3 0 787
jump=787 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 28 28
+4 0 28
jump=28 0x3877c7a10e 0 
* 0 
+5 0 29 29 0 1 0 0 1
+5 0 29 0 0 0 0 0 0 0 0 29
+2 0 29 29
+4 0 29 0 29
+4 0 29 29
+4 0 29 0 29
+4 0 29
jump=29 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 2020 0 2020 1 0 0 1
+5 0 2020 0 2020
+5 0 2020
+3 0 2020 0 2020
+5 0 2020
+4 0 2020 2020 0 0 1 0 0 1
+7 0 2020 2020 0 0 1 0 0 1
+3 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020
+6 0 2020 2020 0 0 1 0 0 1
+7 0 2020 2020 0 1 1 0 1 1
+4 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020
+2 0 2020 2020 0 0 1 0 0 1
+3 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020
jcnd=2020/2020 +97 0 
* 0 
+18 0 2020
+3 0 2020
+3 0 2020 0 2020
cfn=(38)
calls=2020 0x3877c79a00 0 
* 0 468558 57144 67896 45 29 58 45 29 58 72227 3396
+5 0 2020
+3 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020
+2 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020
+2 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020 18
+2 0 2020 2020
+7 0 2020 0 0 0 0 0 0 0 0 2020
jcnd=2020/2020 +13 0 
* 0 
+13 0 2020 0 2020
+2 0 2020 0 0 0 0 0 0 0 0 2020 8
+6 0 2020
+3 0 2020 2020
+4 0 2020 2020
+5 0 2020 2020
+5 0 2020
+4 0 2020 2020
+1 0 2020 0 0 1 0 0 1
+5 0 2020 2020 0 0 1 0 0 1
+7 0 2020 0 0 0 0 0 0 0 0 2020
jcnd=2020/2020 +14 0 
* 0 
+14 0 2020 0 2020 1 0 0 1
+3 0 2020 0 0 0 0 0 0 0 0 2020
+6 0 2020
jump=2020 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2020 0 2020 1 0 0 1
+2 0 2020
+3 0 2020
+3 0 2020 0 2020
+2 0 2020
+3 0 2020 0 2020
+1 0 2020
+3 0 2020 0 2020
+1 0 2020
+3 0 2020
+4 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020
+6 0 2020
+4 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020 4
jcnd=10/2020 0x3877c838d1 0 
* 0 
+2 0 2010
+3 0 2010
+3 0 2010
+3 0 2010
+3 0 2010
+3 0 2010 0 0 0 0 0 0 0 0 2010
jcnd=2010/2010 +41 0 
* 0 
+41 0 2010 0 0 1 0 0 1
+3 0 2010 0 0 0 0 0 0 0 0 2010
jcnd=2010/2010 0x3877c839c0 0 
* 0 
+24 0 2010
+3 0 2010
+4 0 2010
+3 0 2010
+3 0 2010
+3 0 2010
+3 0 2010
+3 0 2010 0 0 0 0 0 0 0 0 2010 999
jcnd=1014/2010 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1006
+10 0 1006 1006 0 0 2 0 0 2
+3 0 1006
+4 0 1006 0 1006
+3 0 1006
+4 0 1006
+4 0 1006 0 0 0 0 0 0 0 0 1006
jcnd=1006/1006 -18 0 
* 0 
-18 0 3074 3074
+3 0 3074
+4 0 3074 0 3074
+3 0 3074
+4 0 3074
+4 0 3074 0 0 0 0 0 0 0 0 3074 8
jcnd=2068/3074 -18 0 
* 0 
+2 0 2020
+4 0 2020
+3 0 2020 2020
+1 0 2020 2020
+1 0 2020 2020
+2 0 2020 2020 0 1 0 0 1
+2 0 2020 2020
0x3877c839c0 0 2010 0 0 1 0 0 1
+3 0 2010
+3 0 2010
+3 0 2010
+4 0 2010 0 2010 0 0 1 0 0 1
cfn=(284)
calls=2010 0x3877c89b20 0 
* 0 684822 256524 252504 6 1 65 6 1 65 32700 1540 2010 250
+5 0 2010
jump=2010 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2020 2020 0 1 1 0 1 1
+7 0 2020 2020 0 0 1 0 0 1
+3 0 2020
+3 0 2020 0 0 1 0 0 1 0 0 2020
+6 0 2020
+3 0 2020 0 0 0 0 0 0 0 0 2020
+6 0 2020 2020
+4 0 2020
+4 0 2020
+2 0 2020 0 0 0 0 0 0 0 0 2020
+2 0 2020
+2 0 2020
+7 0 2020 0 0 0 0 0 0 0 0 2020
jcnd=2020/2020 +14 0 
* 0 
+14 0 2020
+2 0 2020
cfn=(170)
calls=2020 0x3877c78650 0 
* 0 197130 52154 29724 20 3 0 20 3 0 47837 1068

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 3
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 9 9
+5 0 9
+3 0 9 9
+5 0 9 9
+4 0 9 0 0 0 0 0 0 0 0 9
+6 0 9 9
+4 0 9 0 0 0 0 0 0 0 0 9
+6 0 9 9
+9 0 9 0 9
+4 0 9 0 9
+4 0 9 0 0 0 0 0 0 0 0 9 4
jcnd=9/9 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 6
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 8
jcnd=9/20 +70 0 
* 0 
+2 0 11 11
+3 0 11
+3 0 11
+3 0 11 11
+4 0 11 11
+4 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+8 0 11 0 11
+4 0 11 0 11
+4 0 11 0 0 0 0 0 0 0 0 11 2
jcnd=11/11 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20
+6 0 20 0 0 0 0 0 0 0 0 20 10
jcnd=9/20 0x3877c75e68 0 
* 0 
+6 0 11 0 11
+6 0 11
jump=11 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 22336325 9297601 5267015 242 118 162 242 118 162 591188 8569 12110 250
