version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 582


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 726209793 - 727204131
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1224 0 0 1 0 0 1
+3 0 1224 0 0 0 0 0 0 0 0 1224
+2 0 1224
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1224 0x3877c7b8b0 0 
* 0 136211 34783 17605 21 5 0 21 5 0 33345 545
* 0 1224 1224 0 1 1 0 1 1 0 0 0 1224

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1224 0 1224 1 0 0 1
+1 0 1224
+5 0 1224
+3 0 1224 0 1224
+1 0 1224
+4 0 1224 0 0 1 0 0 1
+3 0 1224
+4 0 1224
+3 0 1224 0 1224 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1224 0x3877c7aa50 0 
* 0 327675 47183 46998 49 38 52 49 38 52 54911 1946
* 0 1224 1224 0 1 1 0 1 1 0 0 0 1224
+5 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224
jcnd=1224/1224 +96 0 
* 0 
+96 0 1224 0 0 1 0 0 1
+4 0 1224 1224
+1 0 1224 1224
+1 0 1224 1224

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 302 0 302 1 0 0 1
+1 * 302
+3 * 302
+4 * 302 0 302
+4 * 302 0 302
+4 +1 302 302
+4 * 302
+3 * 302 0 302
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=302 0x402d74 645 
* * 3926 1812 604
+5 * 302
+3 * 302 0 302
+3 +1 302 302
+6 * 302 0 302
+3 * 302 302
+6 * 302 0 302
+3 +1 302 302
+6 * 302 0 302 1 0 0 1
+3 * 302 302
+6 * 302 0 302
+3 +2 302 0 302
+7 * 302
jump=302 +86 * 
* * 
+2 +1 46055 46055
+3 * 46055
+3 * 46055 46055
+4 * 46055
+3 * 46055
+3 * 46055 0 46055
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=46055 0x402d9a 770 
* * 506605 230275 138165
+5 * 46055 46055
+4 * 46055 46055
+5 * 46055
+4 * 46055 0 46055
+5 +1 46055 46055
+3 * 46055
+3 * 46055 46055
+4 * 46055
+3 * 46055
+3 * 46055 0 46055
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=46055 0x402dba 770 
* * 506605 230275 138165 1 0 0 1
+5 * 46055 46055
+2 * 46055
+4 * 46055 46055
+5 * 46055
+4 * 46055 0 46055
+5 -2 46055 0 46055
+4 * 46055 46055
+3 * 46055
+3 * 46055 46055
+3 * 46055 0 0 0 0 0 0 0 0 46055 303
jcnd=45753/46055 -93 +1 
* * 
-9 * 302 302 0 1 0 0 1
+3 * 302
+3 * 302 302
+3 * 302 0 0 0 0 0 0 0 0 302
jcnd=302/302 -93 +1 
* * 
+2 +4 302 302
+3 * 302
+3 * 302
+4 * 302 302 0 1 0 0 1
+5 * 302
+4 * 302
+3 * 302 0 302
+5 +1 302 302
+3 * 302
+3 * 302
+4 * 302 302
+5 * 302
+4 * 302
+3 * 302 0 302
+5 +1 302 0 302
+7 * 302
jump=302 0x4016ee * 
* * 
+2 +1 46055 46055
+3 * 46055
+3 * 46055 46055
+4 * 46055
+3 * 46055 0 0 1 0 0 1
+3 * 46055 0 46055
cfi=(2)
cfn=(146)
calls=46055 0x402dba 770 
* * 506605 230275 138165
+5 * 46055 46055
+2 * 46055
+4 * 46055 46055
+5 * 46055 0 46055
+5 +1 46055 46055
+3 * 46055
+3 * 46055 46055
+4 * 46055
+3 * 46055
+3 * 46055 0 46055
cfi=(2)
cfn=(144)
calls=46055 0x402d9a 770 
* * 506605 230275 138165
+5 * 46055 46055
+4 * 46055 46055
+5 * 46055 0 46055
+5 +1 46055 46055
+5 * 46055 46055
+5 * 46055 46055
+5 * 46055
+4 * 46055 0 46055
+5 +1 46055 46055
+5 * 46055 46055
+5 * 46055 46055
+5 * 46055
+4 * 46055 0 46055
+5 -4 46055 0 46055
+4 * 46055 46055
+3 * 46055
+3 * 46055 46055
+3 * 46055 0 0 0 0 0 0 0 0 46055 303
jcnd=45753/46055 0x401672 +1 
* * 
-9 * 302 302 0 1 0 0 1
+3 * 302
+3 * 302 302
+3 * 302 0 0 0 0 0 0 0 0 302
jcnd=302/302 0x401672 +1 
* * 
+6 +6 302 302 0 1 0 0 1
+5 * 302 302
+5 * 302 0 302
+5 +2 302 302
+3 +1 302 0 302
+3 * 302 302
+5 * 302 302
+1 * 302 302

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 302
+7 * 302
+7 * 302
+3 * 302
+3 * 302 0 302
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=302 0x4030b2 310 
* * 313148 91324 85518 66 27 18 66 27 18 19804 952 1206 150
+5 * 302
+7 * 302
+7 * 302
+3 * 302
+3 * 302 0 302
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=302 0x402ff4 310 
* * 314332 90782 83918 50 11 68 50 11 68 20134 1037 1206
+5 * 302 0 0 1 0 0 1
+7 * 302
+7 * 302
+3 * 302
+3 * 302 0 302
cfn=(142)
calls=302 0x401585 -52 
* * 4809350 2126080 1110454 8 0 0 8 0 0 92714 606
+5 * 302 0 302
+8 * 302 302
+6 * 302 0 302
+6 * 302
+7 * 302
+3 * 302 0 302
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=302 0x402df4 414 
* * 75168 23568 16757 33 5 0 33 5 0 8290 241 604
+5 * 302
+7 * 302
+3 * 302 0 302 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=302 0x402e74 414 
* * 79079 25024 17905 7 2 0 7 2 0 9400 30 604
+5 +2 302
+7 * 302
+7 * 302
+3 * 302
+3 * 302 0 302
cfi=(2)
cfn=(4)
calls=302 0x4030b2 310 
* * 312568 91283 85393 0 1 1 0 1 1 19723 584 1206
+5 * 302
+7 * 302
+7 * 302
+3 * 302
+3 * 302 0 302
cfi=(2)
cfn=(80)
calls=302 0x402ff4 310 
* * 313172 90701 83728 0 0 0 0 0 0 19948 634 1206
+5 * 302 302
+6 * 302 0 0 1 0 0 1
+7 * 302
+7 * 302 0 302
+6 * 302 302
+8 * 302
+3 * 302
+3 * 302 0 302
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=302 0x401719 -33 
* * 2228458 927744 511135 4 0 0 4 0 0 46357 303
+5 * 302 0 302
+8 * 302 302
+6 * 302 0 302
+6 * 302
+7 * 302 0 0 1 0 0 1
+3 * 302 0 302
cfi=(2)
cfn=(148)
calls=302 0x402df4 414 
* * 75168 23568 16757 0 0 0 0 0 0 8290 235 604
+5 * 302
+7 * 302
+3 * 302 0 302
cfi=(2)
cfn=(178)
calls=302 0x402e74 414 
* * 79079 25024 17905 0 0 0 0 0 0 9400 24 604
+5 +2 302 302
+7 * 302
+3 * 302 0 302
cfi=(2)
cfn=(2)
calls=302 0x402d74 645 
* * 3926 1812 604
+5 * 302 302
+6 * 302
+3 * 302
+3 * 302
+3 * 302 302
+7 * 302
+3 * 302 0 0 1 0 0 1
+3 * 302 0 302
cfi=(2)
cfn=(144)
calls=302 0x402d9a 770 
* * 3322 1510 906
+5 * 302
+3 * 302
+7 * 302
+3 * 302
+3 * 302 0 302
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=302 0x402eda 901 
* * 31847 11692 9084 40 24 10 40 24 10 1448 85 47
+5 +1 302 302
+7 * 302
+3 * 302 0 302
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=302 0x402f54 645 
* * 3926 1812 604 0 1 0 0 1
+5 * 302 302
+6 * 302
+3 * 302
+3 * 302
+3 * 302 302
+7 * 302 0 0 1 0 0 1
+3 * 302
+3 * 302 0 302
cfi=(2)
cfn=(146)
calls=302 0x402dba 770 
* * 3322 1510 906
+5 * 302
+3 * 302
+7 * 302
+3 * 302
+3 * 302 0 302
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=302 0x402f7a 901 
* * 31001 11480 8892 19 21 38 19 21 38 1283 53 47
+5 +1 302 302
+7 * 302
+3 * 302 0 302
cfi=(2)
cfn=(10)
calls=302 0x402f54 645 
* * 3926 1812 604
+5 * 302 302
+6 * 302
+3 * 302
+3 * 302
+3 * 302 302 0 1 0 0 1
+7 * 302
+3 * 302
+3 * 302 0 302
cfi=(2)
cfn=(146)
calls=302 0x402dba 770 
* * 3322 1510 906
+5 * 302 302
+2 * 302
+4 * 302 302
+8 * 302 302
+8 * 302 0 302
+8 +1 302 302
+7 * 302
+3 * 302 0 302
cfi=(2)
cfn=(2)
calls=302 0x402d74 645 
* * 3926 1812 604
+5 * 302 302 0 1 0 0 1
+6 * 302
+3 * 302
+3 * 302
+3 * 302 302
+7 * 302
+3 * 302
+3 * 302 0 302
cfi=(2)
cfn=(144)
calls=302 0x402d9a 770 
* * 3322 1510 906
+5 * 302 302
+4 * 302 302
+8 * 302
+4 * 302 302
+8 * 302
+3 * 302 0 302
+8 +2 302 0 302
+7 -12 302 302
+8 * 302 302
+7 * 302 0 0 0 0 0 0 0 0 302 1
jcnd=1/302 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 302
+7 * 302
+3 * 302 0 302
cfi=(2)
cfn=(2)
calls=302 0x402d74 645 
* * 3926 1812 604 2 0 1 2 0 1
+5 * 302
+3 * 302 302
+7 * 302
+3 * 302 0 302
cfi=(2)
cfn=(2)
calls=302 0x402d74 645 
* * 3926 1812 604 0 1 0 0 1
+5 * 302
+3 * 302 0 0 0 0 0 0 0 0 302 2
+2 * 302 0 0 1 0 0 1
+5 * 302
jump=302 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 302
+2 * 302 0 0 0 0 0 0 0 0 302
jcnd=302/302 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 302 0 302
+1 * 302
+3 * 302
+4 * 302 0 302
+4 * 302 0 302
+4 * 302 0 302
+5 +1 302 302
+4 * 302
+3 * 302 0 302
cfi=(2)
cfn=(2)
calls=302 0x402d74 645 
* * 3926 1812 604
+5 * 302
+3 * 302 0 302
+3 +1 302 302 0 1 0 0 1
+6 * 302 0 302
+3 * 302 302
+6 * 302 0 302
+3 +2 302 0 302
+7 * 302
jump=302 +86 * 
* * 
+2 +1 46055 46055
+3 * 46055
+3 * 46055 46055
+4 * 46055
+3 * 46055
+3 * 46055 0 46055
cfi=(2)
cfn=(144)
calls=46055 0x402d9a 770 
* * 506605 230275 138165
+5 * 46055 46055
+4 * 46055 46055
+5 * 46055
+4 * 46055 0 46055
+5 +1 46055 46055
+3 * 46055
+3 * 46055 46055
+4 * 46055
+3 * 46055
+3 * 46055 0 46055
cfi=(2)
cfn=(146)
calls=46055 0x402dba 770 
* * 506605 230275 138165
+5 * 46055 46055
+2 * 46055
+4 * 46055 46055
+5 * 46055
+4 * 46055 0 46055
+5 -2 46055 0 46055
+4 * 46055 46055
+3 * 46055
+3 * 46055 46055
+3 * 46055 0 0 0 0 0 0 0 0 46055 303
jcnd=45753/46055 -93 +1 
* * 
-9 * 302 302 0 1 0 0 1
+3 * 302
+3 * 302 302
+3 * 302 0 0 0 0 0 0 0 0 302
jcnd=302/302 -93 +1 
* * 
+2 +4 302 302
+3 * 302
+3 * 302 0 0 1 0 0 1
+4 * 302 302
+5 * 302
+4 * 302
+3 * 302 0 302
+5 +1 302 302
+3 * 302
+3 * 302
+4 * 302 302
+5 * 302
+4 * 302
+3 * 302 0 302
+5 +1 302 302
+5 * 302 302
+5 * 302 302
+5 * 302 0 0 1 0 0 1
+4 * 302
+3 * 302 0 302
+5 +2 302 302
+3 +1 302 0 302
+3 * 302 302
+5 * 302 302
+1 * 302 302

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 604
+4 * 604
+3 * 604 0 604
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=604 0x4044cc -35 
* * 3020 1208 1208
+5 * 604 604
+1 * 604 604

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 604 0 604 1 0 0 1
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604 1 0 0 1
+4 +1 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=604 0x4049d4 -35 
* * 3624 1208 1812 1 0 0 1
+5 * 604 604
+1 * 604 604

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 604 0 604 1 0 0 1
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 604
+4 * 604
+3 * 604 0 604
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=604 0x404520 -35 
* * 3020 1208 1208
+5 * 604 604
+1 * 604 604

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 604 0 604 1 0 0 1
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=604 0x404a28 -35 
* * 3624 1208 1812 1 0 1 1 0 1
+5 * 604 604
+1 * 604 604

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 302 0 302
+1 * 302
+3 * 302
+4 * 302 0 302
+4 * 302 0 302
+4 * 302 0 302
+4 +1 302 302
+4 * 302 302
+4 * 302 302
+4 * 302
+3 * 302
+3 * 302 0 302
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=302 0x403df2 -87 
* * 7248 2416 2718 0 19 4 0 19 4 302 2
+5 * 302 302
+1 * 302 302

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 604 0 604 1 0 0 1
+1 * 604
+3 * 604 0 604
+4 * 604 604
+4 * 604 604
+1 * 604 604

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 302 0 302
+1 * 302
+3 * 302
+4 * 302 0 302
+4 * 302 0 302
+4 * 302 0 302
+4 +1 302 302
+4 * 302 302
+4 * 302 302
+4 * 302
+3 * 302
+3 * 302 0 302
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=302 0x40406a -87 
* * 7248 2416 2718 0 20 11 0 20 11 302
+5 * 302 302
+1 * 302 302

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 604 0 604
+1 * 604
+3 * 604 0 604
+4 * 604 604
+4 * 604 604
+1 * 604 604

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 684 0 684
+1 * 684
+3 * 684 0 684
+4 +1 684 684
+4 * 684 684
+1 * 684 684

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1208 0 1208 1 0 0 1
+1 * 1208
+3 * 1208 0 1208
+4 +1 1208 1208 0 1 0 0 1
+4 * 1208 1208
+1 * 1208 1208

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 684 0 684
+1 * 684
+3 * 684 0 684 0 0 1 0 0 1
+4 +1 684 684
+4 * 684 684
+1 * 684 684

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1208 0 1208 1 0 0 1
+1 * 1208
+3 * 1208
+4 * 1208 0 1208
+4 +1 1208
+4 * 1208
+3 * 1208 0 1208
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1208 0x404ffe 790 
* * 7248 3624 2416 1 0 0 1
+5 * 1208 1208
+3 * 1208 1208
+1 * 1208 1208

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1208 0 1208 1 0 0 1
+1 * 1208
+3 * 1208 0 1208
+4 +1 1208 1208
+4 * 1208 1208
+1 * 1208 1208

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1208 0 1208 1 0 0 1
+1 * 1208
+3 * 1208
+4 * 1208 0 1208
+4 +1 1208
+4 * 1208
+3 * 1208 0 1208 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1208 0x40500c 790 
* * 7248 3624 2416 1 0 0 1
+5 * 1208 1208
+3 * 1208 1208
+1 * 1208 1208

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 604 0 604
+1 * 604
+3 * 604 0 604
+4 * 604 0 604
+4 * 604 604
+4 * 604 604
+1 * 604 604

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 612 0 612 1 0 0 1
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 * 612 0 612 1 0 0 1
+4 +2 612 612
+4 * 612
+3 * 612 0 612
cfn=(28)
calls=612 0x404992 +12 
* * 3672 1224 1224 1 0 0 1
+5 * 612 612
+4 * 612
+3 * 612
+2 * 612 0 0 0 0 0 0 0 0 612
jcnd=612/612 +7 +3 
* * 
+7 +3 612 612
+4 * 612
+4 * 612
+3 * 612 0 612
cob=(5)
cfi=(8)
cfn=(32)
calls=612 0x387e4bd0b0 0 
* * 172296 26487 26870 16 24 19 16 24 19 27703 882 612
* * 612 612 0 1 1 0 1 1 0 0 0 612
+5 +1 612 612
+1 * 612 612

fn=(102)
0x4048de 113 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+4 +1 628
+10 * 628 628
+1 * 628 628

fn=(266)
0x40406a 129 302 0 302
+1 * 302
+3 * 302
+4 * 302 0 302
+4 * 302 0 302
+4 * 302 0 302
+4 +1 302 302
+4 * 302
+3 * 302
+5 * 302 0 302
cfi=(16)
cfn=(226)
calls=302 0x402d61 -20 
* * 2114 906 906
+5 * 302
+3 * 302 0 0 0 0 0 0 0 0 302
+2 * 302 302
+4 * 302 302 0 0 20 0 0 20
+2 * 302 0 302 0 0 11 0 0 11
+2 * 302 302
+1 * 302 302

fn=(28)
0x404992 113 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+4 +1 628
+10 * 628 628
+1 * 628 628

fn=(176)
0x4044cc 86 604 0 604
+1 * 604
+3 * 604 0 604
+4 * 604 604
+1 * 604 604

fn=(224)
0x403df2 129 302 0 302
+1 * 302
+3 * 302
+4 * 302 0 302
+4 * 302 0 302
+4 * 302 0 302
+4 +1 302 302
+4 * 302
+3 * 302
+5 * 302 0 302
cfi=(16)
cfn=(226)
calls=302 0x402d61 -20 
* * 2114 906 906
+5 * 302
+3 * 302 0 0 0 0 0 0 0 0 302 2
+2 * 302 302
+4 * 302 302 0 0 19 0 0 19
+2 * 302 0 302 0 0 4 0 0 4
+2 * 302 302
+1 * 302 302

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 612 0 612
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 * 612 0 612
+4 +1 612 612
+4 * 612
+3 * 612 0 612
cob=(5)
cfi=(8)
cfn=(164)
calls=612 0x387e4bb2f0 0 
* * 66626 16539 7653 23 4 0 23 4 0 16170 482 612
* * 612 612 0 1 1 0 1 1 0 0 0 612
+5 * 612 612
+1 * 612 612

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 612 0 612
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 * 612 0 612
+4 +1 612 612
+4 * 612
+3 * 612 0 612
cob=(5)
cfi=(8)
cfn=(164)
calls=612 0x387e4bb2f0 0 
* * 74481 19468 9952 0 2 0 0 2 0 18399 63 612
* * 612 612 0 0 0 0 0 0 0 0 0 612
+5 * 612 612
+1 * 612 612

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 612 0 612 1 0 0 1
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 * 612 0 612
+4 +2 612 612
+4 * 612
+3 * 612 0 612
cfn=(102)
calls=612 0x4048de +12 
* * 3672 1224 1224 1 0 0 1
+5 * 612 612
+4 * 612 0 0 1 0 0 1
+3 * 612
+2 * 612 0 0 0 0 0 0 0 0 612
jcnd=612/612 +7 +3 
* * 
+7 +3 612 612
+4 * 612
+4 * 612
+3 * 612 0 612
cob=(5)
cfi=(8)
cfn=(32)
calls=612 0x387e4bd0b0 0 
* * 174963 25592 23800 37 15 34 37 15 34 28432 1064 612
* * 612 612 0 0 0 0 0 0 0 0 0 612
+5 +1 612 612
+1 * 612 612

fn=(18)
0x404a28 81 604 0 604 1 0 0 1
+1 * 604
+3 * 604 0 604 0 0 1 0 0 1
+4 * 604 0 604
+4 * 604 604
+1 * 604 604

fn=(92)
0x4049d4 81 604 0 604 1 0 0 1
+1 * 604
+3 * 604 0 604
+4 * 604 0 604
+4 * 604 604
+1 * 604 604

fn=(196)
0x404520 86 604 0 604
+1 * 604
+3 * 604 0 604
+4 * 604 604
+1 * 604 604

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +2 604 604 0 1 0 0 1
+4 * 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=604 0x404a36 450 
* * 274852 90620 87000 24 3 4 24 3 4 10928 686 1204 150
+5 * 604 604
+1 * 604 604

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +2 604 604
+4 * 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=604 0x40439c 107 
* * 291764 96660 93040 7 1 37 7 1 37 10928 670 1204
+5 * 604 604
+1 * 604 604

fn=(116)
0x40439c 107 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +10 604 604
+4 * 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=604 0x4047d7 -26 
* * 283308 93640 90020 7 1 37 7 1 37 10928 670 1204
+5 +1 604 604
+1 * 604 604

fn=(118)
0x4047d7 91 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +2 604 604
+4 * 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=604 0x4049e2 450 
* * 274852 90620 87000 7 1 37 7 1 37 10928 670 1204
+5 * 604 604
+1 * 604 604

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +10 604 604
+4 * 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(52)
calls=604 0x404829 -26 
* * 283308 93640 90020 25 3 4 25 3 4 10928 686 1204 150
+5 +1 604 604
+1 * 604 604

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +2 604 604
+4 * 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604 1 0 0 1
cfn=(50)
calls=604 0x404484 107 
* * 291764 96660 93040 25 3 4 25 3 4 10928 686 1204 150
+5 * 604 604
+1 * 604 604

fl=(2)
fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232 0 1232 1 0 0 1
+4 +1 1232 1232
+4 * 1232 1232
+1 * 1232 1232

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+3 * 604 0 604
+4 * 604
+4 * 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=604 0x404380 726 
* * 6040 3020 2416
+5 * 604 604
+4 * 604 604
+1 * 604 604

fn=(148)
0x402df4 414 604 0 604
+1 * 604
+3 * 604 0 604
+1 * 604
+4 * 604 0 604 1 0 0 1
+4 +2 604 604
+4 * 604
+3 * 604 0 604
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=604 0x40325e 113 
* * 3624 1812 1208
+5 * 604
+3 * 604 604
+4 * 604 604
+4 * 604 604
+4 * 604 604
+3 -1 604
+3 * 604
+3 * 604 0 604
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=604 0x40326c 148 
* * 18724 6040 7248 4 0 0 4
+5 +1 604 604
+4 * 604
+3 * 604 0 604
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=604 0x4031ec 159 
* * 113492 33848 21434 27 5 0 27 5 0 16580 476 1208
+5 * 604
jump=604 +28 * 
* * 
+28 * 604 0 0 1 0 0 1
+4 * 604 604
+1 * 604 604
+1 * 604 604

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 612 0 612 1 0 0 1
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 * 612 0 612
+4 +2 612 612
+5 * 612 0 0 0 0 0 0 0 0 612
+2 +1 612 612
+4 * 612 612
+4 * 612 612
+4 * 612
+3 * 612
+3 * 612 0 612
cfi=(5)
cfn=(160)
calls=612 0x4044d6 -65 
* * 73970 18987 10713 24 5 0 24 5 0 16170 482 1224
+5 +1 612 612
+1 * 612 612

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 604 0 604
+1 * 604
+3 * 604 0 604
+1 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=604 0x4043ca -45 
* * 21744 7852 8456 4 0 4 4 0 4
+5 +1 604 604 0 1 0 0 1
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=604 0x404412 +43 
* * 210736 41251 38007 23 24 10 23 24 10 28599 850 1208
+5 * 604
jump=604 +28 * 
* * 
+28 * 604
+4 * 604 604
+1 * 604 604
+1 * 604 604

fn=(14)
0x4043ca 90 604 0 604 1 0 0 1
+1 * 604
+3 * 604
+4 * 604 0 604 0 0 1 0 0 1
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfi=(4)
cfn=(16)
calls=604 0x404804 +24 
* * 10872 3624 4228 2 0 1 2 0 1
+5 * 604 604
+4 * 604 0 604 0 0 2 0 0 2
+7 * 604 604
+4 * 604 0 604 1 0 0 1
+8 * 604 604
+4 * 604 0 604
+8 +1 604 604
+1 * 604 604

fn=(80)
0x402ff4 310 604 0 604 1 0 0 1
+1 * 604
+3 * 604 0 604
+2 * 604 0 604
+2 * 604 0 604
+1 * 604 0 0 1 0 0 1
+4 * 604 0 604
+4 * 604 0 604
+4 +2 604 604
+4 * 604
+3 * 604 0 604
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=604 0x4039fc 117 
* * 3624 1812 1208 2 0 0 2
+5 * 604
+3 * 604 0 604
cfi=(3)
cfn=(84)
calls=604 0x4039ed -88 
* * 3624 1812 1208
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(2)
calls=604 0x402d74 645 
* * 7852 3624 1208
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604
+3 * 604
+3 * 604 0 604 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=604 0x403a0a 134 
* * 247556 52207 47426 35 10 31 35 10 31 29154 1001 1208
+5 +4 604 604
+4 * 604
+3 * 604 0 604
cfn=(106)
calls=604 0x40325e 113 
* * 3624 1812 1208 1 0 0 1
+5 * 604
+3 * 604 604
+4 * 604 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=604 0x403a98 565 
* * 15100 6040 4832 2 0 0 2
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(112)
calls=604 0x403a68 547 
* * 15100 6040 4832
+5 * 604
+3 * 604
+3 * 604
+3 * 604
+3 * 604 0 604
cfi=(11)
cfn=(114)
calls=604 0x403ac9 -60 
* * 300824 99680 96664 7 1 37 7 1 37 10928 670 1204
+5 -3 604 604
+4 * 604 0 604
+4 * 604
jump=604 +28 +4 
* * 
+28 +4 604
+4 * 604 604
+1 * 604 604
+2 * 604 604
+2 * 604 604
+1 * 604 604

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 612 0 612 1 0 0 1
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 * 612 0 612
+4 +2 612 612
+5 * 612 0 0 0 0 0 0 0 0 612 8
+2 +1 612 612
+4 * 612 612
+4 * 612 612
+4 * 612
+3 * 612
+3 * 612 0 612
cfi=(5)
cfn=(190)
calls=612 0x40452a -65 
* * 81825 21916 13012 0 2 0 0 2 0 18399 63 1224
+5 +1 612 612
+1 * 612 612

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 612 0 612 1 0 0 1
+1 * 612
+3 * 612
+4 * 612 0 612 1 0 0 1
+4 * 612 0 612
+4 0 612 612
+5 0 612 0 0 0 0 0 0 0 0 612
+2 0 612 612
+4 0 612 612
+4 0 612
+5 0 612
+3 0 612
+3 0 612 0 612
fi=(6) ???
cfi=(5)
cfn=(26)
calls=612 0x404730 99 
* 0 188208 31383 31766 20 25 19 20 25 19 28315 882 1224
+5 0 612
fi=(6)
jump=612 +7 0 
* 0 
+7 0 612 612
+1 0 612 612

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 604 0 604 1 0 0 1
+1 * 604
+3 * 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+4 * 604 0 604
+4 * 604
+4 * 604 0 0 1 0 0 1
+4 * 604
+3 * 604
+3 * 604 0 604
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=604 0x404468 726 
* * 6040 3020 2416 1 0 0 1
+5 * 604 604
+4 * 604 604
+1 * 604 604

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+3 * 604 0 604
+4 * 604
+4 * 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfi=(10)
cfn=(44)
calls=604 0x404468 726 
* * 6040 3020 2416
+5 * 604 604
+4 * 604 604
+1 * 604 604

fn=(86)
0x403a0a 134 604 0 604
+1 * 604
+3 * 604 0 604
+1 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=604 0x4042e2 -45 
* * 21744 7852 8456 5 0 0 5
+5 +1 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=604 0x40432a +43 
* * 212524 40127 34742 29 10 31 29 10 31 29154 1001 1208
+5 * 604
jump=604 +28 * 
* * 
+28 * 604
+4 * 604 604
+1 * 604 604
+1 * 604 604

fn=(88)
0x4042e2 90 604 0 604 1 0 0 1
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604 1 0 0 1
cfi=(4)
cfn=(90)
calls=604 0x4047b2 +24 
* * 10872 3624 4228 3 0 0 3
+5 * 604 604
+4 * 604 0 604
+7 * 604 604
+4 * 604 0 604
+8 * 604 604
+4 * 604 0 604
+8 +1 604 604
+1 * 604 604

fn=(156)
0x4031ec 159 604 0 604 1 0 0 1
+1 * 604
+3 * 604 0 604
+1 * 604
+4 * 604 0 604
+4 +2 604 604
+4 * 604 604 0 1 0 0 1
+4 * 604
+3 * 604 604
+4 * 604 604
+3 * 604
+3 * 604
+3 * 604
+4 * 604
+3 * 604 604
+4 * 604 604
+3 -1 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(158)
calls=604 0x403ce6 +11 
* * 82688 22372 13582 24 5 0 24 5 0 16580 476 1208
+5 +1 604 604
+4 * 604
+3 * 604 0 604
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=604 0x4031b8 -82 
* * 13892 4832 4832 1 0 0 1
+5 * 604
jump=604 +28 * 
* * 
+28 * 604
+4 * 604 604
+1 * 604 604
+1 * 604 604

fn=(172)
0x4031b8 79 604 0 604 1 0 0 1
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 604
+4 * 604
+3 * 604 0 604
cfi=(4)
cfn=(174)
calls=604 0x403ccc +42 
* * 8456 3020 3020
+5 * 604 604
+1 * 604 604

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240 0 0 2 0 0 2
+4 * 1240
+3 * 1240 1240
+4 * 1240 1240
+3 * 1240
+3 * 1240
+3 * 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(106)
0x40325e 113 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232 0 1232
+4 +1 1232 1232
+4 * 1232 1232
+1 * 1232 1232

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 620 0 620 1 0 0 1
+1 * 620
+3 * 620 0 620 0 0 1 0 0 1
+4 +1 620 620
+4 * 620 620
+1 * 620 620

fn=(82)
0x4039fc 117 620 0 620 1 0 0 1
+1 * 620
+3 * 620 0 620 1 0 0 1
+4 +1 620 620
+4 * 620 620
+1 * 620 620

fn=(200)
0x402eda 901 302 0 302
+1 * 302
+3 * 302
+4 * 302 0 302
+4 * 302 0 302
+4 +2 302 302
+4 * 302 302
+4 * 302 302
+4 * 302 302
+4 * 302
+3 * 302 0 0 0 0 0 0 0 0 302 8
jcnd=8/302 +51 +10 
* * 
+2 +3 294 294
+4 * 294 294
+4 * 294 294
+4 -1 294 294
+4 * 294
+3 * 294
+3 * 294 0 294
cfi=(3)
cfn=(222)
calls=294 0x403373 215 
* * 11172 3822 4116 0 19 3 0 19 3 294 2
+5 +2 294 294
+4 * 294 294
+4 * 294
+4 * 294 294
+4 * 294 0 294
+4 * 294
jump=294 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12671 3904 3402 37 5 7 37 5 7 852 75 47
+5 +2 302 302
+1 * 302 302

fn=(4)
0x4030b2 310 604 0 604 1 0 0 1
+1 * 604
+3 * 604 0 604
+2 * 604 0 604
+2 * 604 0 604
+1 * 604
+4 * 604 0 604 1 0 0 1
+4 * 604 0 604
+4 +2 604 604
+4 * 604
+3 * 604 0 604
cfn=(6)
calls=604 0x403b08 117 
* * 3624 1812 1208 1 0 1 1 0 1
+5 * 604
+3 * 604 0 604
cfi=(3)
cfn=(8)
calls=604 0x403afa -88 
* * 3624 1812 1208 1 0 0 1
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(10)
calls=604 0x402f54 645 
* * 7852 3624 1208 1 1 0 1 1
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604
+3 * 604
+3 * 604 0 604
cfn=(12)
calls=604 0x403b16 134 
* * 245768 53331 50691 28 24 14 28 24 14 28599 850 1208
+5 +4 604 604 0 1 0 0 1
+4 * 604
+3 * 604 0 604
cfn=(40)
calls=604 0x40333c 113 
* * 3624 1812 1208 2 0 0 2
+5 * 604
+3 * 604 604
+4 * 604 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(42)
calls=604 0x403ba4 565 
* * 15100 6040 4832 3 0 0 3
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(46)
calls=604 0x403b74 547 
* * 15100 6040 4832
+5 * 604
+3 * 604
+3 * 604
+3 * 604
+3 * 604 0 604 1 0 0 1
cfi=(11)
cfn=(48)
calls=604 0x403bd5 -60 
* * 300824 99680 96664 26 3 4 26 3 4 10928 686 1204 150
+5 -3 604 604
+4 * 604 0 604
+4 * 604
jump=604 +28 +4 
* * 
+28 +4 604
+4 * 604 604
+1 * 604 604
+2 * 604 604
+2 * 604 604
+1 * 604 604

fn=(108)
0x403a98 565 604 0 604 1 0 0 1
+1 * 604
+3 * 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+4 * 604 0 604
+4 * 604
+4 * 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfi=(10)
cfn=(110)
calls=604 0x404380 726 
* * 6040 3020 2416 1 0 0 1
+5 * 604 604
+4 * 604 604
+1 * 604 604

fn=(178)
0x402e74 414 604 0 604
+1 * 604
+3 * 604 0 604
+1 * 604
+4 * 604 0 604 1 0 0 1
+4 +2 604 604
+4 * 604
+3 * 604 0 604
cfn=(40)
calls=604 0x40333c 113 
* * 3624 1812 1208
+5 * 604
+3 * 604 604
+4 * 604 604
+4 * 604 604
+4 * 604 604
+3 -1 604
+3 * 604
+3 * 604 0 604
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=604 0x40334a 148 
* * 18724 6040 7248 2 0 0 2
+5 +1 604 604
+4 * 604
+3 * 604 0 604
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=604 0x4032ca 159 
* * 121314 36760 23730 3 2 0 3 2 0 18800 54 1208
+5 * 604
jump=604 +28 * 
* * 
+28 * 604 0 0 1 0 0 1
+4 * 604 604
+1 * 604 604
+1 * 604 604

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 612 0 612 1 0 0 1
+1 * 612 0 0 1 0 0 1
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 0 612 612
+5 0 612 0 0 0 0 0 0 0 0 612
+2 0 612 612
+4 0 612 612
+4 0 612
+5 0 612
+3 0 612
+3 0 612 0 612
fi=(6)
cfi=(5)
cfn=(100)
calls=612 0x40461a 99 
* 0 190875 30488 28696 40 15 34 40 15 34 29044 1064 1224
+5 0 612
fi=(6)
jump=612 +7 0 
* 0 
+7 0 612 612
+1 0 612 612

fn=(144)
0x402d9a 770 138769 0 138769
+1 * 138769
+3 * 138769 0 138769
+4 * 138769 0 138769
+4 +1 138769 138769
+4 * 138769 138769
+3 * 138769 138769
+4 * 138769
+4 * 138769
+3 * 138769 138769
+1 * 138769 138769

fn=(146)
0x402dba 770 138769 0 138769
+1 * 138769
+3 * 138769 0 138769 1 0 0 1
+4 * 138769 0 138769
+4 +1 138769 138769
+4 * 138769 138769
+3 * 138769 138769
+4 * 138769
+4 * 138769
+3 * 138769 138769
+1 * 138769 138769

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 604
+4 * 604
+3 * 604 0 604
cfi=(4)
cfn=(194)
calls=604 0x403d7e +42 
* * 8456 3020 3020 1 0 0 1
+5 * 604 604
+1 * 604 604

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 604 0 604 1 0 0 1
+1 * 604
+3 * 604 0 604
+1 * 604
+4 * 604 0 604
+4 +2 604 604
+4 * 604 604
+4 * 604
+3 * 604 604
+4 * 604 604
+3 * 604
+3 * 604
+3 * 604
+4 * 604
+3 * 604 604
+4 * 604 604
+3 -1 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(188)
calls=604 0x403d98 +11 
* * 90510 25284 15878 1 2 0 1 2 0 18800 54 1208
+5 +1 604 604
+4 * 604
+3 * 604 0 604
cfn=(192)
calls=604 0x403296 -82 
* * 13892 4832 4832 1 0 0 1
+5 * 604
jump=604 +28 * 
* * 
+28 * 604
+4 * 604 604
+1 * 604 604
+1 * 604 604

fn=(2)
0x402d74 645 2448 0 2448 1 0 0 1
+1 * 2448
+3 * 2448 0 2448 0 0 1 0 0 1
+4 +1 2448 2448
+4 * 2448 2448 0 1 1 0 1 1
+4 * 2448
+3 * 2448 2448
+4 * 2448 2448
+3 * 2448
+3 * 2448
+3 * 2448
+4 * 2448 2448
+1 * 2448 2448

fn=(20)
0x404412 179 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 +2 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(22)
calls=604 0x404236 -14 
* * 195636 34003 33779 22 24 10 22 24 10 28599 850 1208
+5 * 604 604
+4 * 604 0 604
+3 +1 604 604
+4 * 604 604 0 1 0 0 1
+3 * 604 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+3 * 604 604
+4 * 604
+4 * 604
+3 * 604 604
+4 * 604 0 604
+4 +1 604 604
+1 * 604 604

fn=(94)
0x40432a 179 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 +2 604 604
+4 * 604 604 0 1 0 0 1
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(96)
calls=604 0x403fbe -14 
* * 197424 32879 30514 28 10 31 28 10 31 29154 1001 1208
+5 * 604 604
+4 * 604 0 604
+3 +1 604 604
+4 * 604 604
+3 * 604 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604 604
+3 * 604 604
+4 * 604
+4 * 604
+3 * 604 604
+4 * 604 0 604
+4 +1 604 604
+1 * 604 604

fn=(244)
0x402f7a 901 302 0 302
+1 * 302
+3 * 302 0 0 1 0 0 1
+4 * 302 0 302
+4 * 302 0 302
+4 +2 302 302
+4 * 302 302
+4 * 302 302
+4 * 302 302
+4 * 302
+3 * 302 0 0 0 0 0 0 0 0 302
jcnd=8/302 +51 +10 
* * 
+2 +3 294 294
+4 * 294 294
+4 * 294 294
+4 -1 294 294
+4 * 294
+3 * 294
+3 * 294 0 294
cfi=(3)
cfn=(264)
calls=294 0x4036b1 215 
* * 11172 3822 4116 0 19 7 0 19 7 294
+5 +2 294 294
+4 * 294 294
+4 * 294
+4 * 294 294
+4 * 294 0 294
+4 * 294
jump=294 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11825 3692 3210 18 2 31 18 2 31 687 53 47
+5 +2 302 302
+1 * 302 302

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fl=(12)
fn=(54)
0x404a36 450 604 0 604
+1 * 604
+3 * 604 0 604
+1 * 604
+4 * 604 0 604 1 0 0 1
+4 * 604 0 604
+4 * 604 0 604
+4 +10 604 604
+4 * 604
+3 * 604 0 604
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=604 0x404c38 288 
* * 9060 3624 3020 3 0 0 3
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(56)
calls=604 0x404c38 288 
* * 9060 3624 3020
+5 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=604 0x404c52 -36 
* * 243444 79748 76128 20 3 4 20 3 4 10928 686 1204 150
+5 +1 604
+4 * 604 604
+1 * 604 604
+1 * 604 604

fn=(60)
0x404c52 424 604 0 604
+1 * 604
+3 * 604 0 604
+2 * 604 0 604
+1 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +4 604 604
+4 * 604
+3 * 604 0 604
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=604 0x40492d 277 
* * 9060 3624 3020 2 0 0 2
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=604 0x404d9d 277 
* * 15100 5436 4832 2 0 1 2 0 1
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(66)
calls=604 0x404d9d 277 
* * 15100 5436 4832
+5 * 604
+3 * 604
+3 * 604
+3 * 604 0 604
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=604 0x404db7 -49 
* * 187272 61024 57404 15 3 3 15 3 3 10928 686 1204 150
+5 +1 604
+4 * 604 604
+1 * 604 604
+2 * 604 604
+1 * 604 604

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 652 0 652 1 0 0 1
+1 * 652
+3 * 652
+4 * 652 0 652
+4 +1 652 652
+4 * 652
+3 * 652 0 652 1 0 0 1
cfi=(13)
cfn=(64)
calls=652 -33 -66 
* * 3912 1956 1304
+5 * 652 652
+1 * 652 652

fn=(66)
0x404d9d 277 1208 0 1208
+1 * 1208
+3 * 1208
+4 * 1208 0 1208
+4 +1 1208 1208
+4 * 1208
+3 * 1208 0 1208
cfi=(13)
cfn=(68)
calls=1208 0x404f1a -58 
* * 19328 7248 6040 2 0 1 2 0 1
+5 * 1208 1208
+1 * 1208 1208

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 604 0 604
+1 * 604
+3 * 604 0 604
+1 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +10 604 604
+4 * 604
+3 * 604 0 604
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=604 0x404bc6 288 
* * 9060 3624 3020 3 0 0 3
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(122)
calls=604 0x404bc6 288 
* * 9060 3624 3020
+5 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=604 0x404be0 -36 
* * 243444 79748 76128 4 1 37 4 1 37 10928 670 1204
+5 +1 604
+4 * 604 604
+1 * 604 604
+1 * 604 604

fn=(128)
0x404878 277 652 0 652
+1 * 652
+3 * 652
+4 * 652 0 652 1 0 0 1
+4 +1 652 652
+4 * 652
+3 * 652 0 652
cfi=(13)
cfn=(130)
calls=652 -33 -66 
* * 3912 1956 1304 0 0 1 0 0 1
+5 * 652 652
+1 * 652 652

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1208 0 1208
+1 * 1208
+3 * 1208
+4 * 1208 0 1208
+4 +1 1208 1208
+4 * 1208
+3 * 1208 0 1208
cfi=(13)
cfn=(134)
calls=1208 0x404e98 -58 
* * 19328 7248 6040 2 0 0 2
+5 * 1208 1208
+1 * 1208 1208

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +8 604 0 604
+4 +3 604 604
+4 * 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=604 0x404eb5 -22 
* * 178212 58004 53780 1 1 37 1 1 37 10928 670 1204
+5 +1 604 604
+1 * 604 604

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1208 0 1208 1 0 0 1
+1 * 1208
+3 * 1208
+4 * 1208 0 1208
+4 +1 1208 1208
+4 * 1208
+3 * 1208 0 1208
cfi=(13)
cfn=(124)
calls=1208 0x404d36 -77 
* * 7248 3624 2416 2 0 0 2
+5 * 1208 1208
+1 * 1208 1208

fn=(56)
0x404c38 288 1208 0 1208 1 0 0 1
+1 * 1208
+3 * 1208
+4 * 1208 0 1208 1 0 0 1
+4 +1 1208 1208
+4 * 1208
+3 * 1208 0 1208
cfi=(13)
cfn=(58)
calls=1208 0x404d8f -77 
* * 7248 3624 2416 1 0 0 1
+5 * 1208 1208
+1 * 1208 1208

fn=(74)
0x404f37 368 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620 1 0 0 1
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620
+4 * 620 0 620
+4 +1 620 620
+5 * 620 0 0 0 0 0 0 0 0 620
jcnd=8/620 +33 +2 
* * 
+2 +1 612 612
+4 * 612
+8 * 612 612
+4 * 612 612
+4 * 612
+3 * 612 0 0 1 0 0 1
+3 * 612 0 612 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=612 0x3877c83840 0 
* * 162422 51676 50457 11 2 20 11 2 20 10408 690 607 150
* * 612 612 0 1 1 0 1 1 0 0 0 612
+5 +1 620 620
+4 * 620
+8 * 620 620
+4 * 620
+3 +1 620 620
+1 * 620 620

fn=(140)
0x404eb5 368 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620 1 0 0 1
+4 * 620 0 620
+4 * 620 0 620 0 0 1 0 0 1
+4 +2 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620
+4 * 620 0 620
+4 +1 620 620
+5 * 620 0 0 0 0 0 0 0 0 620
jcnd=8/620 +33 +2 
* * 
+2 +1 612 612
+4 * 612
+8 * 612 612
+4 * 612 612
+4 * 612
+3 * 612
+3 * 612 0 612
cob=(2)
cfi=(9)
cfn=(78)
calls=612 0x3877c83840 0 
* * 162422 51676 50457 0 1 38 0 1 38 10408 676 607
* * 612 612 0 0 0 0 0 0 0 0 0 612
+5 +1 620 620
+4 * 620
+8 * 620 620
+4 * 620
+3 +1 620 620
+1 * 620 620

fn=(72)
0x404db7 379 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604 1 0 0 1
+4 * 604 0 604
+4 * 604 0 604
+4 +8 604 0 604
+4 +3 604 604
+4 * 604 604
+4 * 604 604
+4 * 604
+3 * 604
+3 * 604 0 604
cfn=(74)
calls=604 0x404f37 -22 
* * 178212 58004 53780 14 3 3 14 3 3 10928 686 1204 150
+5 +1 604 604
+1 * 604 604

fn=(126)
0x404be0 424 604 0 604
+1 * 604
+3 * 604 0 604
+2 * 604 0 604
+1 * 604
+4 * 604 0 604
+4 * 604 0 604
+4 * 604 0 604
+4 +4 604 604
+4 * 604
+3 * 604 0 604
cfn=(128)
calls=604 0x404878 277 
* * 9060 3624 3020 1 0 0 1
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(132)
calls=604 0x404d44 277 
* * 15100 5436 4832 2 0 0 2
+5 * 604
+3 * 604 604
+4 * 604
+3 * 604 0 604
cfn=(132)
calls=604 0x404d44 277 
* * 15100 5436 4832
+5 * 604
+3 * 604
+3 * 604
+3 * 604 0 604
cfn=(138)
calls=604 0x404d5e -49 
* * 187272 61024 57404 1 1 37 1 1 37 10928 670 1204
+5 +1 604
+4 * 604 604
+1 * 604 604
+2 * 604 604
+1 * 604 604

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1208 0 1208 1 0 0 1
+1 * 1208
+3 * 1208 0 1208
+4 +1 1208 1208
+4 * 1208 1208
+1 * 1208 1208

fn=(110)
0x404380 726 1208 0 1208 1 0 0 1
+1 * 1208
+3 * 1208 0 1208
+4 * 1208 0 1208
+4 * 1208 1208
+4 * 1208 1208
+3 * 1208 1208
+4 * 1208 0 1208
+3 * 1208 1208
+1 * 1208 1208

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1208 0 1208 1 0 0 1
+1 * 1208
+3 * 1208 0 1208
+4 +1 1208 1208
+4 * 1208 1208
+1 * 1208 1208

fn=(44)
0x404468 726 1208 0 1208
+1 * 1208
+3 * 1208 0 1208
+4 * 1208 0 1208
+4 * 1208 1208
+4 * 1208 1208
+3 * 1208 1208
+4 * 1208 0 1208 1 0 0 1
+3 * 1208 1208
+1 * 1208 1208

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 612 0 612 1 0 0 1
+1 * 612
+3 * 612 0 612
+4 * 612 0 612 1 0 0 1
+4 * 612 612
+1 * 612 612

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 612 0 612 1 0 0 1
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 +4 612 612
+4 * 612 612
+4 * 612
+3 * 612
+3 * 612 0 612
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=612 0x40454c -14 
* * 3672 1224 1836 1 0 0 1
+5 +2 612 612
+1 * 612 612

fn=(150)
0x40326c 148 612 0 612
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 * 612 0 612
+4 +3 612 612 0 1 0 0 1
+4 * 612 612
+4 * 612
+3 * 612
+3 * 612 0 612
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=612 0x403d1a -29 
* * 11016 3672 4284 3 0 0 3
+5 +1 612 612
+1 * 612 612

fn=(180)
0x40334a 148 612 0 612
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 * 612 0 612
+4 +3 612 612
+4 * 612 612
+4 * 612
+3 * 612
+3 * 612 0 612
cfn=(182)
calls=612 0x403dcc -29 
* * 11016 3672 4284 2 0 0 2
+5 +1 612 612
+1 * 612 612

fn=(152)
0x403d1a 122 612 0 612 1 0 0 1
+1 * 612
+3 * 612
+4 * 612 0 612
+4 * 612 0 612
+4 +4 612 612
+4 * 612 612
+4 * 612
+3 * 612
+3 * 612 0 612
cfn=(154)
calls=612 0x4044f8 -14 
* * 3672 1224 1836 2 0 0 2
+5 +2 612 612
+1 * 612 612

fn=(184)
0x40454c 112 612 0 612 1 0 0 1
+1 * 612
+3 * 612 0 612
+4 * 612 0 612
+4 * 612 612
+1 * 612 612

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2364 440 435 0 1 9 0 1 9 328 32 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3243 669 630 14 5 3 14 5 3 502 63 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 0 1 0 0 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1224 0 1224 1 0 0 1
+2 0 1224 0 1224
+2 0 1224 0 1224
+2 0 1224
+3 0 1224 0 1224
+2 0 1224 0 1224
+1 0 1224 0 1224
+1 0 1224
+3 0 1224
+4 0 1224 1224
+4 0 1224 0 1224
+4 0 1224
+3 0 1224
+4 0 1224
+3 0 1224
+3 0 1224
+3 0 1224 0 0 1 0 0 1 0 0 1224
+6 0 1224
+4 0 1224 0 0 0 0 0 0 0 0 1224
+6 0 1224
+4 0 1224 0 0 0 0 0 0 0 0 1224
+6 0 1224 1224
+7 0 1224 0 0 0 0 0 0 0 0 1224 4
jcnd=1100/1224 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1100
+2 0 1100 0 0 0 0 0 0 0 0 1100
+6 0 1100 1100 0 1 0 0 1
+4 0 1100
+3 0 1100
+2 0 1100 0 0 0 0 0 0 0 0 1100
jcnd=1100/1100 0x3877c78a40 0 
* 0 
+6 0 1100 1100
+4 0 1100
+3 0 1100 0 0 0 0 0 0 0 0 1100
+6 0 1100 1100
+5 0 1100
+4 0 1100 0 0 0 0 0 0 0 0 1100
jcnd=1100/1100 0x3877c7907c 0 
* 0 
+6 0 1100 1100
+5 0 1100
+4 0 1100 0 0 0 0 0 0 0 0 1100
+6 0 1100
+4 0 1100 0 0 1 0 0 1 0 0 1100
+6 0 1100
+4 0 1100 1100
+7 0 1100 0 0 0 0 0 0 0 0 1100
+6 0 1100 1100
+6 0 1100
+2 0 1100 0 0 0 0 0 0 0 0 1100
+6 0 1100 1100
+4 0 1100 0 0 0 0 0 0 0 0 1100 5
jcnd=1096/1100 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1100 1100 0 1 0 0 1
+4 0 1100 0 0 0 0 0 0 0 0 1100 398
jcnd=450/1100 0x3877c78bf0 0 
* 0 
+6 0 650 650 0 0 2 0 0 2
+6 0 650 0 0 1 0 0 1 0 0 650 64
jcnd=61/650 0x3877c78a78 0 
* 0 
+6 0 589 589
+5 0 589 589
+5 0 589 589
+4 0 589 0 0 0 0 0 0 0 0 589
+6 0 589 589
+4 0 589 0 0 0 0 0 0 0 0 589
+6 0 589 589
+9 0 589 0 589
+4 0 589 0 589
+4 0 589 0 0 0 0 0 0 0 0 589 4
jcnd=581/589 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 589
+3 0 589
+4 0 589 589
+4 0 589 589
+4 0 589 0 0 0 0 0 0 0 0 589
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 650
+7 0 650 0 650
+4 0 650 0 650
+4 0 650 0 0 0 0 0 0 0 0 650 66
jcnd=441/650 +18 0 
* 0 
+2 0 209 0 209
+8 0 209 0 209
+8 0 209 0 209
+4 0 209
+3 0 209 0 209 1 0 0 1
+4 0 209
+4 0 209 0 209
+4 0 209 0 209
+4 0 209
+7 0 209 0 0 0 0 0 0 0 0 209
jcnd=209/209 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 450
+7 0 450 0 0 0 0 0 0 0 0 450
jcnd=450/450 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1100 0 0 1 0 0 1
+5 0 1100 1100
+4 0 1100 1100
+7 0 1100 0 0 0 0 0 0 0 0 1100
jcnd=1100/1100 +16 0 
* 0 
+16 0 1100 0 1100
+5 0 1100 0 0 0 0 0 0 0 0 1100
+6 0 1100
+3 0 1100
jump=1100 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1100 1100 0 1 0 0 1
+4 0 1100
+2 0 1100 0 0 0 0 0 0 0 0 1100
+6 0 1100 1100
+7 0 1100 0 0 0 0 0 0 0 0 1100
jcnd=1100/1100 +15 0 
* 0 
+15 0 1100 0 1100 1 0 0 1
+4 0 1100 0 0 0 0 0 0 0 0 1100 2
+6 0 1100
+4 0 1100 1100
+1 0 1100 1100
+1 0 1100 1100
+2 0 1100 1100
+2 0 1100 1100
+2 0 1100 1100
+2 0 1100 1100
0x3877c78bf0 0 450 0 0 1 0 0 1
+3 0 450 0 450
+4 0 450
+3 0 450
+4 0 450 0 450 1 0 0 1
+4 0 450
jump=450 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1100 1100 0 1 1 0 1 1
+4 0 1100 0 0 1 0 0 1
+7 0 1100
+4 0 1100
+3 0 1100
+3 0 1100 0 0 0 0 0 0 0 0 1100
jcnd=1100/1100 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1214 0 0 1 0 0 1
+7 0 1214
+3 0 1214
+3 0 1214 1214 0 0 1 0 0 1
+4 0 1214
+4 0 1214 0 0 0 0 0 0 0 0 0 0 1214 150
jump=144 0x3877c89be8 0 
* 0 
jump=154 0x3877c89bd0 0 
* 0 
jump=152 0x3877c89bb8 0 
* 0 
jump=152 +11 0 
* 0 
jump=152 0x3877c89c48 0 
* 0 
jump=154 0x3877c89c30 0 
* 0 
jump=152 0x3877c89c18 0 
* 0 
jump=154 0x3877c89c00 0 
* 0 
+11 0 152 152
+3 0 152
+4 0 152
+4 0 152 152
+4 0 152
+4 0 152 0 152
+4 0 152
+9 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-40 0 11310 11310
+4 0 11310 0 11310 0 0 3 0 0 3
+4 0 11310 11310
+4 0 11310 0 11310 0 0 15 0 0 15
+4 0 11310 11310
+4 0 11310 0 11310 0 0 1 0 0 1
+4 0 11310 11310
+4 0 11310 0 11310 0 0 3 0 0 3
+4 0 11310
+4 0 11310
+4 0 11310 0 0 0 0 0 0 0 0 11310 740
jcnd=1178/11310 0x3877c89c60 0 
* 0 
-32 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154
+4 0 154
+4 0 154 0 0 0 0 0 0 0 0 154
jcnd=10/154 0x3877c89c60 0 
* 0 
-24 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-16 0 154 154 0 1 0 0 1
+4 0 154 0 154
+4 0 154 0 0 1 0 0 1
+4 0 154
+4 0 154 0 0 0 0 0 0 0 0 154 4
jcnd=10/154 0x3877c89c60 0 
* 0 
+6 0 10708
+4 0 10708 10708
+3 0 10708 0 10708 0 0 20 0 0 20
+3 0 10708 10708
+4 0 10708 0 10708
+4 0 10708 10708
+4 0 10708 0 10708 0 0 14 0 0 14
+4 0 10708 10708
+4 0 10708 0 10708
+4 0 10708
jump=10708 -80 0 
* 0 
-30 0 144 144
+3 0 144 0 144
+3 0 144 144
+4 0 144 0 144
+4 0 144 144
+4 0 144 0 144 0 0 1 0 0 1
+4 0 144 144
+4 0 144 0 144
+4 0 144
jump=144 -80 0 
* 0 
-24 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154
jump=154 -80 0 
* 0 
-16 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
+8 0 152 152
+3 0 152
+4 0 152 0 0 1 0 0 1
+4 0 152
+4 0 152
jump=152 -39 0 
* 0 
+9 0 154
+3 0 154 0 0 0 0 0 0 0 0 154
+6 0 154 154
+3 0 154
+4 0 154
jump=154 -72 0 
* 0 
+8 0 144
+4 0 144 144
+3 0 144 0 0 0 0 0 0 0 0 144
+2 0 144
+4 0 144
jump=144 -99 0 
* 0 
+11 0 154 154 0 1 0 0 1
+3 0 154
+4 0 154
+4 0 154
+4 0 154
jump=154 0x3877c89b78 0 
* 0 
+9 0 152 152
+3 0 152
+4 0 152
+4 0 152
+4 0 152
jump=152 0x3877c89b70 0 
* 0 
+9 0 154 154
+3 0 154
+4 0 154
+4 0 154
+4 0 154
jump=154 0x3877c89b68 0 
* 0 
+9 0 152 152
+3 0 152
+4 0 152
+4 0 152
+4 0 152
jump=152 0x3877c89b60 0 
* 0 
+9 0 1214 0 1214 1 0 0 1
+3 0 1214 1214

fn=(104) alloc_perturb
0x3877c77180 0 1090 1090 0 1 0 0 1
+6 0 1090
+2 0 1090 0 0 0 0 0 0 0 0 1090 3
+2 0 1090 1090

fn=(38) _int_malloc
0x3877c79a00 0 1224 0 1224 1 0 0 1
+2 0 1224
+3 0 1224 0 1224
+2 0 1224 0 1224
+2 0 1224 0 1224 0 0 1 0 0 1
+2 0 1224
+3 0 1224 0 1224
+1 0 1224 0 1224
+1 0 1224
+4 0 1224
+4 0 1224 0 0 0 0 0 0 0 0 1224
+6 0 1224
+4 0 1224
+6 0 1224
+3 0 1224
+4 0 1224
+4 0 1224
+4 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224
+6 0 1224 1224 0 1 1 0 1 1
+7 0 1224 0 0 0 0 0 0 0 0 1224 7
jcnd=1102/1224 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 23
jcnd=16/122 0x3877c79af8 0 
* 0 
+6 0 106
+4 0 106 106 0 0 1 0 0 1
+4 0 106
+3 0 106
+4 0 106 106 0 0 1 0 0 1
+9 0 106 0 0 0 0 0 0 0 0 106 1
jcnd=106/106 +3 0 
* 0 
+3 0 106 0 106 1 0 0 1
+5 0 106
+3 0 106
+3 0 106 0 0 0 0 0 0 0 0 106
+2 0 106
jump=106 0x3877c7a2db 0 
* 0 
+46 0 106 106
+4 0 106 0 0 1 0 0 1
+3 0 106
+3 0 106
+2 0 106 0 0 0 0 0 0 0 0 106
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1090
+4 0 1090 1090
+1 0 1090 1090
+1 0 1090 1090
+2 0 1090 1090
+2 0 1090 1090
+2 0 1090 1090
+2 0 1090 1090
+7 0 1118
+7 0 1118 0 0 1 0 0 1 0 0 1118 5
jcnd=216/1118 0x3877c79b70 0 
* 0 
+2 0 902
+3 0 902
+5 0 902
+3 0 902
+4 0 902 0 902
+4 0 902
+2 0 902
+5 0 902 902 0 0 9 0 0 9
+4 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 0x3877c79bc2 0 
* 0 
+78 0 216 0 0 1 0 0 1
+3 0 216
+4 0 216
+4 0 216 0 0 1 0 0 1 0 0 216
jcnd=216/216 0x3877c7a1a4 0 
* 0 
+30 0 216 216
+6 0 216
+5 0 216 0 0 0 0 0 0 0 0 216 1
jcnd=215/216 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 847 224 179 8 1 0 8 1 0 175 32
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1117 0 0 1 0 0 1
+3 0 1117
+3 0 1117
+3 0 1117
+4 0 1117
+3 0 1117
+4 0 1117 0 1117
+5 0 1117
+3 0 1117 0 1117
+4 0 1117 0 1117
+4 0 1117 0 1117
+5 0 1117
+3 0 1117
+3 0 1117
+3 0 1117
+3 0 1117
+4 0 1117
+4 0 1117 0 0 1 0 0 1
+4 0 1117 0 1117
+4 0 1117
+4 0 1117 0 1117
+5 0 1117 0 1117
+5 0 1117
+3 0 1117
+3 0 1117 0 1117
+5 0 1117
+5 0 1117
+3 0 1117 0 1117
+4 0 1117 0 1117
+4 0 1117
+6 0 1117 0 1117
+4 0 1117 0 1117
+5 0 1117 0 0 1 0 0 1
+3 0 1117
+3 0 1117
+3 0 1117
jump=1117 +87 0 
* 0 
+8 0 888
+3 0 888
+4 0 888
+2 0 888
+2 0 888
+3 0 888
+3 0 888
+3 0 888
+2 0 888
+2 0 888
+5 0 888
+2 0 888 888 0 0 1 0 0 1
+4 0 888
+3 0 888
+4 0 888 0 888
+4 0 888 0 888
+8 0 888
+7 0 888 0 888
+4 0 888 0 888 0 0 1 0 0 1
+4 0 888 0 888
+4 0 888 0 0 0 0 0 0 0 0 888
-38 0 200
+3 0 200
+4 0 200 0 200
+4 0 200 0 200
+8 0 200
+7 0 200 0 200
+4 0 200 0 200
+4 0 200 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
+6 0 2206 2206 0 1 0 0 1
+4 0 2206
+3 0 2206 0 0 0 0 0 0 0 0 2206 104
jcnd=1071/2206 0x3877c79ef0 0 
* 0 
+6 0 1135 1135 0 0 1 0 0 1
+4 0 1135 1135
+4 0 1135
+4 0 1135 0 0 0 0 0 0 0 0 1135
+6 0 1135 1135 0 1 1 0 1 1
+7 0 1135 0 0 0 0 0 0 0 0 1135
+6 0 1135
+4 0 1135
+7 0 1135 0 0 0 0 0 0 0 0 1135 4
jcnd=225/1135 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1116
+3 0 1116 0 1116
+4 0 1116 0 1116
+5 0 1116 0 0 0 0 0 0 0 0 1116 15
jcnd=28/1116 0x3877c7a090 0 
* 0 
+6 0 1088
+7 0 1088 0 0 0 0 0 0 0 0 1088 93
jcnd=888/1088 0x3877c79c50 0 
* 0 
+6 0 200 0 0 1 0 0 1
+3 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
+6 0 200
+3 0 200
+4 0 200
+2 0 200
+2 0 200
+3 0 200
+3 0 200
+8 0 200
+3 0 200
+2 0 200
+2 0 200
+4 0 200 200 0 0 3 0 0 3
+4 0 200
+3 0 200 0 0 1 0 0 1 0 0 200 7
jcnd=200/200 0x3877c79e15 0 
* 0 
0x3877c79e15 0 200 0 200 0 0 1 0 0 1
+4 0 200 0 200
+4 0 200
+3 0 200
jump=200 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 334
jcnd=429/834 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 6
jcnd=386/405 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 14 0 0 14
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8 0 0 1 0 0 1
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1071 0 0 1 0 0 1
+7 0 1071
+3 0 1071 0 0 0 0 0 0 0 0 1071 2
jcnd=208/1071 0x3877c7a0b0 0 
* 0 
+6 0 1055 1055 0 1 0 0 1
+4 0 1055
+3 0 1055
+3 0 1055
+2 0 1055
+4 0 1055
+3 0 1055
+3 0 1055
+2 0 1055
+2 0 1055
+2 0 1055
+2 0 1055 1055 0 0 1 0 0 1
+8 0 1055
+5 0 1055
+5 0 1055
+2 0 1055 0 0 0 0 0 0 0 0 1055
-2 0 497
+2 0 497 0 0 0 0 0 0 0 0 497
+2 0 1552
+2 0 1552 0 0 0 0 0 0 0 0 1552 39
jcnd=825/1552 +64 0 
* 0 
+2 0 727
+8 0 727
+3 0 727
+3 0 727 0 0 0 0 0 0 0 0 727 1
jcnd=1/727 0x3877c79fc0 0 
* 0 
-6 0 876
+3 0 876
+3 0 876 0 0 0 0 0 0 0 0 876 9
jcnd=451/876 0x3877c79fc0 0 
* 0 
+2 0 1151
+2 0 1151 1151
+8 0 1151
+2 0 1151 0 0 0 0 0 0 0 0 1151 22
jcnd=876/1151 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=211/275 -8 0 
* 0 
-8 0 8414
+4 0 8414
+2 0 8414
+2 0 8414 0 0 0 0 0 0 0 0 8414 572
jcnd=7476/8414 -8 0 
* 0 
-2 0 825 0 0 1 0 0 1
+2 0 825 0 0 0 0 0 0 0 0 825 25
jcnd=727/825 -8 0 
* 0 
+2 0 1100 1100 0 0 7 0 0 7
+4 0 1100 0 0 1 0 0 1
+3 0 1100 0 0 0 0 0 0 0 0 1100 487
jcnd=603/1100 0x3877c7a1cf 0 
* 0 
+6 0 497
+2 0 497
+4 0 497
+2 0 497
+2 0 497
+2 0 497 0 497
+8 0 497
jump=497 0x3877c79f30 0 
* 0 
+37 0 452 452 0 1 0 0 1
+5 0 452 452
+4 0 452
+4 0 452 452
+5 0 452 0 0 0 0 0 0 0 0 452
jcnd=452/452 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 28 0 0 1 0 0 1
+7 0 28 0 28
+6 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
jcnd=28/28 0x3877c79ace 0 
* 0 
+16 0 208 208
+4 0 208
+4 0 208
+2 0 208
+5 0 208 208 0 1 1 0 1 1
+4 0 208
+3 0 208 0 0 0 0 0 0 0 0 208 8
jcnd=176/208 0x3877c79f00 0 
* 0 
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=16/32 0x3877c79f00 0 
* 0 
+6 0 16
+3 0 16 16
+4 0 16 16
+4 0 16
+3 0 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a650 0 
* 0 
+26 0 16 0 0 1 0 0 1
+3 0 16 16
+4 0 16
+3 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16 2
+6 0 16 16
+8 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16 0 1 0 0 1
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 16
jcnd=16/16 0x3877c7a659 0 
* 0 
+6 0 16
+4 0 16 0 0 0 0 0 0 0 0 16 2
jcnd=8/16 0x3877c7a2e3 0 
* 0 
+6 0 8 8
+4 0 8
+7 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+4 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c7a285 0 
* 0 
+31 0 216 0 0 1 0 0 1
+3 0 216 0 216
+4 0 216
jump=216 0x3877c79b99 0 
* 0 
+36 0 603 603 0 1 2 0 1 2
+4 0 603 603 0 0 1 0 0 1
+4 0 603
+3 0 603 603
+4 0 603
+4 0 603
+3 0 603
+3 0 603 603
+4 0 603 0 0 0 0 0 0 0 0 603
+6 0 603 603
+4 0 603 0 0 0 0 0 0 0 0 603
+6 0 603 603 0 1 0 0 1
+8 0 603 0 603
+4 0 603 0 603
+4 0 603 0 0 0 0 0 0 0 0 603 7
jcnd=419/603 +38 0 
* 0 
+2 0 184 184
+4 0 184
+3 0 184 0 0 0 0 0 0 0 0 184
+2 0 184 184
+5 0 184 0 0 0 0 0 0 0 0 184
+6 0 184 184
+4 0 184 0 184
+4 0 184 184
+4 0 184 0 184
+4 0 184
+4 0 184 0 0 0 0 0 0 0 0 184
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 9
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 582 582
+4 0 582 582 0 1 0 0 1
+4 0 582 0 0 0 0 0 0 0 0 582
+6 0 582
+4 0 582
+7 0 582 0 582 0 0 8 0 0 8
+4 0 582 0 582
+4 0 582 0 582
+4 0 582 0 582
+4 0 582 0 0 0 0 0 0 0 0 582 2
jcnd=116/582 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 116
+7 0 116 0 0 0 0 0 0 0 0 116
jcnd=116/116 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7 0 0 1 0 0 1
+4 0 7
jump=7 +71 0 
* 0 
-46 0 583 0 0 1 0 0 1
+7 0 583 0 583 0 0 1 0 0 1
+4 0 583
+3 0 583
+3 0 583
+4 0 583
+3 0 583
+4 0 583
+3 0 583
+3 0 583
+4 0 583 0 583
+4 0 583 0 583
+4 0 583
jump=583 +71 0 
* 0 
+40 0 106 0 0 1 0 0 1
+3 0 106
jump=106 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 619
+4 0 619 0 0 1 0 0 1
+3 0 619
+3 0 619 0 619
cfn=(104)
calls=619 0x3877c77180 0 
* 0 2476 1238 0 1 0 0 1 0 0 619 2
+5 0 619
+3 0 619
jump=619 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 452 0 0 1 0 0 1
+7 0 452
+2 0 452
+4 0 452
+3 0 452
+3 0 452 0 452
+5 0 452
+3 0 452
+4 0 452
+3 0 452 0 0 1 0 0 1
+4 0 452
+4 0 452
+3 0 452
+4 0 452 0 452
+4 0 452 0 452 0 0 17 0 0 17
+4 0 452
+3 0 452
+3 0 452 0 452
cfn=(104)
calls=452 0x3877c77180 0 
* 0 1808 904 0 0 0 0 0 0 0 452 1
+5 0 452
+3 0 452
jump=452 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 16 16 0 1 0 0 1
+4 0 16
jump=16 0x3877c7a10e 0 
* 0 
+5 0 16 16
+5 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1224 0 1224 1 0 0 1
+5 0 1224 0 1224
+5 0 1224
+3 0 1224 0 1224
+5 0 1224
+4 0 1224 1224 0 0 1 0 0 1
+7 0 1224 1224 0 0 1 0 0 1
+3 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224
+6 0 1224 1224 0 0 1 0 0 1
+7 0 1224 1224 0 1 1 0 1 1
+4 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224
+2 0 1224 1224 0 0 1 0 0 1
+3 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224
jcnd=1224/1224 +97 0 
* 0 
+18 0 1224
+3 0 1224
+3 0 1224 0 1224
cfn=(38)
calls=1224 0x3877c79a00 0 
* 0 276267 33719 39654 45 32 52 45 32 52 42671 1921
+5 0 1224
+3 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224
+2 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224
+2 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224 13
+2 0 1224 1224
+7 0 1224 0 0 0 0 0 0 0 0 1224
jcnd=1224/1224 +13 0 
* 0 
+13 0 1224 0 1224
+2 0 1224 0 0 0 0 0 0 0 0 1224 12
+6 0 1224
+3 0 1224 1224
+4 0 1224 1224
+5 0 1224 1224
+5 0 1224
+4 0 1224 1224
+1 0 1224 0 0 1 0 0 1
+5 0 1224 1224 0 0 1 0 0 1
+7 0 1224 0 0 0 0 0 0 0 0 1224
jcnd=1224/1224 +14 0 
* 0 
+14 0 1224 0 1224 1 0 0 1
+3 0 1224 0 0 0 0 0 0 0 0 1224
+6 0 1224
jump=1224 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1224 0 1224 1 0 0 1
+2 0 1224
+3 0 1224
+3 0 1224 0 1224
+2 0 1224
+3 0 1224 0 1224
+1 0 1224
+3 0 1224 0 1224
+1 0 1224
+3 0 1224
+4 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224
+6 0 1224
+4 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224 7
jcnd=10/1224 0x3877c838d1 0 
* 0 
+2 0 1214
+3 0 1214
+3 0 1214
+3 0 1214
+3 0 1214
+3 0 1214 0 0 0 0 0 0 0 0 1214
jcnd=1214/1214 +41 0 
* 0 
+41 0 1214 0 0 1 0 0 1
+3 0 1214 0 0 0 0 0 0 0 0 1214
jcnd=1214/1214 0x3877c839c0 0 
* 0 
+24 0 1214
+3 0 1214
+4 0 1214
+3 0 1214
+3 0 1214
+3 0 1214
+3 0 1214
+3 0 1214 0 0 0 0 0 0 0 0 1214 604
jcnd=614/1214 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 610
+10 0 610 610 0 0 2 0 0 2
+3 0 610
+4 0 610 0 610
+3 0 610
+4 0 610
+4 0 610 0 0 0 0 0 0 0 0 610
jcnd=610/610 -18 0 
* 0 
-18 0 1886 1886
+3 0 1886
+4 0 1886 0 1886
+3 0 1886
+4 0 1886
+4 0 1886 0 0 0 0 0 0 0 0 1886 11
jcnd=1276/1886 -18 0 
* 0 
+2 0 1224
+4 0 1224
+3 0 1224 1224
+1 0 1224 1224
+1 0 1224 1224
+2 0 1224 1224 0 1 0 0 1
+2 0 1224 1224
0x3877c839c0 0 1214 0 0 1 0 0 1
+3 0 1214
+3 0 1214
+3 0 1214
+4 0 1214 0 1214 0 0 1 0 0 1
cfn=(284)
calls=1214 0x3877c89b20 0 
* 0 255602 94736 92308 6 1 57 6 1 57 12220 744 1214 150
+5 0 1214
jump=1214 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1224 1224 0 1 1 0 1 1
+7 0 1224 1224 0 0 1 0 0 1
+3 0 1224
+3 0 1224 0 0 1 0 0 1 0 0 1224
+6 0 1224
+3 0 1224 0 0 0 0 0 0 0 0 1224
+6 0 1224 1224
+4 0 1224
+4 0 1224
+2 0 1224 0 0 0 0 0 0 0 0 1224
+2 0 1224
+2 0 1224
+7 0 1224 0 0 0 0 0 0 0 0 1224
jcnd=1224/1224 +14 0 
* 0 
+14 0 1224
+2 0 1224
cfn=(170)
calls=1224 0x3877c78650 0 
* 0 117851 31111 17605 19 3 0 19 3 0 28449 545

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 19 19 0 1 0 0 1
+4 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=18/19 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 10
jcnd=7/18 0x3877c75f78 0 
* 0 
+6 0 19 19 0 1 0 0 1
+4 0 19 19
+4 0 19
+3 0 19 0 0 1 0 0 1
+4 0 19
+4 0 19 19
+5 0 19
+4 0 19
+2 0 19 0 0 0 0 0 0 0 0 19 8
jcnd=8/19 +70 0 
* 0 
+2 0 11 11
+3 0 11
+3 0 11
+3 0 11 11
+4 0 11 11
+4 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+8 0 11 0 11
+4 0 11 0 11
+4 0 11 0 0 0 0 0 0 0 0 11
jcnd=11/11 +15 0 
* 0 
+15 0 19 19 0 1 0 0 1
+4 0 19 0 0 0 0 0 0 0 0 19
+2 0 19 19 0 0 1 0 0 1
+6 0 19 0 0 0 0 0 0 0 0 19 6
jcnd=5/19 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 8739390 3562735 2063755 241 95 137 241 95 137 257699 4787 7334 150
