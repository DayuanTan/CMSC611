version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2387


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2785156122 - 2786185107
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 308 0 308 1 0 0 1
+1 * 308
+3 * 308
+4 * 308 0 308
+4 * 308 0 308
+4 +1 308 308
+4 * 308
+3 * 308 0 308
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=308 0x402d74 645 
* * 4004 1848 616
+5 * 308
+3 * 308 0 308
+3 +1 308 308
+6 * 308 0 308
+3 * 308 308
+6 * 308 0 308
+3 +1 308 308
+6 * 308 0 308 1 0 0 1
+3 * 308 308
+6 * 308 0 308
+3 +2 308 0 308
+7 * 308
jump=308 +86 * 
* * 
+2 +1 47894 47894
+3 * 47894
+3 * 47894 47894
+4 * 47894
+3 * 47894
+3 * 47894 0 47894
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=47894 0x402d9a 770 
* * 526834 239470 143682
+5 * 47894 47894
+4 * 47894 47894
+5 * 47894
+4 * 47894 0 47894
+5 +1 47894 47894
+3 * 47894
+3 * 47894 47894
+4 * 47894
+3 * 47894
+3 * 47894 0 47894
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=47894 0x402dba 770 
* * 526834 239470 143682 1 0 0 1
+5 * 47894 47894
+2 * 47894
+4 * 47894 47894
+5 * 47894
+4 * 47894 0 47894
+5 -2 47894 0 47894
+4 * 47894 47894
+3 * 47894
+3 * 47894 47894
+3 * 47894 0 0 0 0 0 0 0 0 47894 309
jcnd=47586/47894 -93 +1 
* * 
-9 * 308 308 0 1 0 0 1
+3 * 308
+3 * 308 308
+3 * 308 0 0 0 0 0 0 0 0 308
jcnd=308/308 -93 +1 
* * 
+2 +4 308 308
+3 * 308
+3 * 308
+4 * 308 308 0 1 0 0 1
+5 * 308
+4 * 308
+3 * 308 0 308
+5 +1 308 308
+3 * 308
+3 * 308
+4 * 308 308
+5 * 308
+4 * 308
+3 * 308 0 308
+5 +1 308 0 308
+7 * 308
jump=308 0x4016ee * 
* * 
+2 +1 47894 47894
+3 * 47894
+3 * 47894 47894
+4 * 47894
+3 * 47894 0 0 1 0 0 1
+3 * 47894 0 47894
cfi=(2)
cfn=(146)
calls=47894 0x402dba 770 
* * 526834 239470 143682
+5 * 47894 47894
+2 * 47894
+4 * 47894 47894
+5 * 47894 0 47894
+5 +1 47894 47894
+3 * 47894
+3 * 47894 47894
+4 * 47894
+3 * 47894
+3 * 47894 0 47894
cfi=(2)
cfn=(144)
calls=47894 0x402d9a 770 
* * 526834 239470 143682
+5 * 47894 47894
+4 * 47894 47894
+5 * 47894 0 47894
+5 +1 47894 47894
+5 * 47894 47894
+5 * 47894 47894
+5 * 47894
+4 * 47894 0 47894
+5 +1 47894 47894
+5 * 47894 47894
+5 * 47894 47894
+5 * 47894
+4 * 47894 0 47894
+5 -4 47894 0 47894
+4 * 47894 47894
+3 * 47894
+3 * 47894 47894
+3 * 47894 0 0 0 0 0 0 0 0 47894 309
jcnd=47586/47894 0x401672 +1 
* * 
-9 * 308 308 0 1 0 0 1
+3 * 308
+3 * 308 308
+3 * 308 0 0 0 0 0 0 0 0 308
jcnd=308/308 0x401672 +1 
* * 
+6 +6 308 308 0 1 0 0 1
+5 * 308 308
+5 * 308 0 308
+5 +2 308 308
+3 +1 308 0 308
+3 * 308 308
+5 * 308 308
+1 * 308 308

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 308
+7 * 308
+7 * 308
+3 * 308
+3 * 308 0 308
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=308 0x4030b2 310 
* * 320628 93719 87874 68 18 16 68 18 16 20199 960 1230 153
+5 * 308
+7 * 308
+7 * 308
+3 * 308
+3 * 308 0 308
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=308 0x402ff4 310 
* * 322200 93208 86210 48 6 70 48 6 70 20688 1049 1230
+5 * 308 0 0 1 0 0 1
+7 * 308
+7 * 308
+3 * 308
+3 * 308 0 308
cfn=(142)
calls=308 0x401585 -52 
* * 5000996 2210824 1154692 8 0 0 8 0 0 96404 618
+5 * 308 0 308
+8 * 308 308
+6 * 308 0 308
+6 * 308
+7 * 308
+3 * 308 0 308
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=308 0x402df4 414 
* * 77104 24190 17241 33 5 0 33 5 0 8572 227 616
+5 * 308
+7 * 308
+3 * 308 0 308 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=308 0x402e74 414 
* * 80693 25534 18277 7 1 0 7 1 0 9598 32 616
+5 +2 308
+7 * 308
+7 * 308
+3 * 308
+3 * 308 0 308
cfi=(2)
cfn=(4)
calls=308 0x4030b2 310 
* * 320245 93689 87763 2 1 1 2 1 1 20163 596 1230
+5 * 308
+7 * 308
+7 * 308
+3 * 308
+3 * 308 0 308
cfi=(2)
cfn=(80)
calls=308 0x402ff4 310 
* * 321200 93140 86043 0 0 2 0 0 2 20533 656 1230
+5 * 308 308
+6 * 308 0 0 1 0 0 1
+7 * 308
+7 * 308 0 308
+6 * 308 308
+8 * 308
+3 * 308
+3 * 308 0 308
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=308 0x401719 -33 
* * 2317084 964656 531454 4 0 0 4 0 0 48202 309
+5 * 308 0 308
+8 * 308 308
+6 * 308 0 308
+6 * 308
+7 * 308 0 0 1 0 0 1
+3 * 308 0 308
cfi=(2)
cfn=(148)
calls=308 0x402df4 414 
* * 77104 24190 17241 0 0 0 0 0 0 8572 221 616
+5 * 308
+7 * 308
+3 * 308 0 308
cfi=(2)
cfn=(178)
calls=308 0x402e74 414 
* * 80693 25534 18277 0 0 0 0 0 0 9598 26 616
+5 +2 308 308
+7 * 308
+3 * 308 0 308
cfi=(2)
cfn=(2)
calls=308 0x402d74 645 
* * 4004 1848 616
+5 * 308 308
+6 * 308
+3 * 308
+3 * 308
+3 * 308 308
+7 * 308
+3 * 308 0 0 1 0 0 1
+3 * 308 0 308
cfi=(2)
cfn=(144)
calls=308 0x402d9a 770 
* * 3388 1540 924
+5 * 308
+3 * 308
+7 * 308
+3 * 308
+3 * 308 0 308
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=308 0x402eda 901 
* * 32144 11852 9176 38 26 11 38 26 11 1453 73 47
+5 +1 308 308
+7 * 308
+3 * 308 0 308
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=308 0x402f54 645 
* * 4004 1848 616 0 1 0 0 1
+5 * 308 308
+6 * 308
+3 * 308
+3 * 308
+3 * 308 308
+7 * 308 0 0 1 0 0 1
+3 * 308
+3 * 308 0 308
cfi=(2)
cfn=(146)
calls=308 0x402dba 770 
* * 3388 1540 924
+5 * 308
+3 * 308
+7 * 308
+3 * 308
+3 * 308 0 308
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=308 0x402f7a 901 
* * 31970 11665 9038 19 32 36 19 32 36 1435 77 47
+5 +1 308 308
+7 * 308
+3 * 308 0 308
cfi=(2)
cfn=(10)
calls=308 0x402f54 645 
* * 4004 1848 616
+5 * 308 308
+6 * 308
+3 * 308
+3 * 308
+3 * 308 308 0 1 0 0 1
+7 * 308
+3 * 308
+3 * 308 0 308
cfi=(2)
cfn=(146)
calls=308 0x402dba 770 
* * 3388 1540 924
+5 * 308 308
+2 * 308
+4 * 308 308
+8 * 308 308
+8 * 308 0 308
+8 +1 308 308
+7 * 308
+3 * 308 0 308
cfi=(2)
cfn=(2)
calls=308 0x402d74 645 
* * 4004 1848 616
+5 * 308 308 0 1 0 0 1
+6 * 308
+3 * 308
+3 * 308
+3 * 308 308
+7 * 308
+3 * 308
+3 * 308 0 308
cfi=(2)
cfn=(144)
calls=308 0x402d9a 770 
* * 3388 1540 924
+5 * 308 308
+4 * 308 308
+8 * 308
+4 * 308 308
+8 * 308
+3 * 308 0 308
+8 +2 308 0 308
+7 -12 308 308
+8 * 308 308
+7 * 308 0 0 0 0 0 0 0 0 308 1
jcnd=1/308 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 308
+7 * 308
+3 * 308 0 308
cfi=(2)
cfn=(2)
calls=308 0x402d74 645 
* * 4004 1848 616 2 0 1 2 0 1
+5 * 308
+3 * 308 308
+7 * 308
+3 * 308 0 308
cfi=(2)
cfn=(2)
calls=308 0x402d74 645 
* * 4004 1848 616 0 1 0 0 1
+5 * 308
+3 * 308 0 0 0 0 0 0 0 0 308 2
+2 * 308 0 0 1 0 0 1
+5 * 308
jump=308 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 308
+2 * 308 0 0 0 0 0 0 0 0 308
jcnd=308/308 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
+4 * 308 0 308
+4 * 308 0 308
+5 +1 308 308
+4 * 308
+3 * 308 0 308
cfi=(2)
cfn=(2)
calls=308 0x402d74 645 
* * 4004 1848 616
+5 * 308
+3 * 308 0 308
+3 +1 308 308 0 1 0 0 1
+6 * 308 0 308
+3 * 308 308
+6 * 308 0 308
+3 +2 308 0 308
+7 * 308
jump=308 +86 * 
* * 
+2 +1 47894 47894
+3 * 47894
+3 * 47894 47894
+4 * 47894
+3 * 47894
+3 * 47894 0 47894
cfi=(2)
cfn=(144)
calls=47894 0x402d9a 770 
* * 526834 239470 143682
+5 * 47894 47894
+4 * 47894 47894
+5 * 47894
+4 * 47894 0 47894
+5 +1 47894 47894
+3 * 47894
+3 * 47894 47894
+4 * 47894
+3 * 47894
+3 * 47894 0 47894
cfi=(2)
cfn=(146)
calls=47894 0x402dba 770 
* * 526834 239470 143682
+5 * 47894 47894
+2 * 47894
+4 * 47894 47894
+5 * 47894
+4 * 47894 0 47894
+5 -2 47894 0 47894
+4 * 47894 47894
+3 * 47894
+3 * 47894 47894
+3 * 47894 0 0 0 0 0 0 0 0 47894 309
jcnd=47586/47894 -93 +1 
* * 
-9 * 308 308 0 1 0 0 1
+3 * 308
+3 * 308 308
+3 * 308 0 0 0 0 0 0 0 0 308
jcnd=308/308 -93 +1 
* * 
+2 +4 308 308
+3 * 308
+3 * 308 0 0 1 0 0 1
+4 * 308 308
+5 * 308
+4 * 308
+3 * 308 0 308
+5 +1 308 308
+3 * 308
+3 * 308
+4 * 308 308
+5 * 308
+4 * 308
+3 * 308 0 308
+5 +1 308 308
+5 * 308 308
+5 * 308 308
+5 * 308 0 0 1 0 0 1
+4 * 308
+3 * 308 0 308
+5 +2 308 308
+3 +1 308 0 308
+3 * 308 308
+5 * 308 308
+1 * 308 308

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 616
+4 * 616
+3 * 616 0 616
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=616 0x4044cc -35 
* * 3080 1232 1232
+5 * 616 616
+1 * 616 616

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616 1 0 0 1
+4 +1 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=616 0x4049d4 -35 
* * 3696 1232 1848 1 0 0 1
+5 * 616 616
+1 * 616 616

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 616
+4 * 616
+3 * 616 0 616
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=616 0x404520 -35 
* * 3080 1232 1232
+5 * 616 616
+1 * 616 616

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=616 0x404a28 -35 
* * 3696 1232 1848 1 0 1 1 0 1
+5 * 616 616
+1 * 616 616

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
+4 * 308 0 308
+4 * 308 0 308
+4 +1 308 308
+4 * 308 308
+4 * 308 308
+4 * 308
+3 * 308
+3 * 308 0 308
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=308 0x403df2 -87 
* * 7392 2464 2772 0 20 3 0 20 3 308 2
+5 * 308 308
+1 * 308 308

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 616 0 616 1 0 0 1
+1 * 616
+3 * 616 0 616
+4 * 616 616
+4 * 616 616
+1 * 616 616

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
+4 * 308 0 308
+4 * 308 0 308
+4 +1 308 308
+4 * 308 308
+4 * 308 308
+4 * 308
+3 * 308
+3 * 308 0 308
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=308 0x40406a -87 
* * 7392 2464 2772 0 19 11 0 19 11 308
+5 * 308 308
+1 * 308 308

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 616 0 616
+1 * 616
+3 * 616 0 616
+4 * 616 616
+4 * 616 616
+1 * 616 616

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 696 0 696
+1 * 696
+3 * 696 0 696 0 0 1 0 0 1
+4 +1 696 696
+4 * 696 696
+1 * 696 696

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232
+4 * 1232 0 1232
+4 +1 1232
+4 * 1232
+3 * 1232 0 1232
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1232 0x404ffe 790 
* * 7392 3696 2464 1 0 0 1
+5 * 1232 1232
+3 * 1232 1232
+1 * 1232 1232

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232 0 1232
+4 +1 1232 1232
+4 * 1232 1232
+1 * 1232 1232

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232
+4 * 1232 0 1232
+4 +1 1232
+4 * 1232
+3 * 1232 0 1232 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1232 0x40500c 790 
* * 7392 3696 2464 1 0 0 1
+5 * 1232 1232
+3 * 1232 1232
+1 * 1232 1232

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 696 0 696
+1 * 696
+3 * 696 0 696
+4 +1 696 696
+4 * 696 696
+1 * 696 696

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232 0 1232
+4 +1 1232 1232 0 1 0 0 1
+4 * 1232 1232
+1 * 1232 1232

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 616 0 616
+1 * 616
+3 * 616 0 616
+4 * 616 0 616
+4 * 616 616
+4 * 616 616
+1 * 616 616

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624
+3 * 624 0 624
cfn=(102)
calls=624 0x4048de +12 
* * 3744 1248 1248 1 0 0 1
+5 * 624 624
+4 * 624 0 0 1 0 0 1
+3 * 624
+2 * 624 0 0 0 0 0 0 0 0 624
jcnd=624/624 +7 +3 
* * 
+7 +3 624 624
+4 * 624
+4 * 624
+3 * 624 0 624
cob=(5) /usr/lib64/libstdc++.so.6.0.13
cfi=(8) ???
cfn=(32) operator new(unsigned long)
calls=624 0x387e4bd0b0 0 
* * 179302 26429 24593 33 11 37 33 11 37 29204 1067 624
* * 624 624 0 0 0 0 0 0 0 0 0 624
+5 +1 624 624
+1 * 624 624

fn=(18)
0x404a28 81 616 0 616 1 0 0 1
+1 * 616
+3 * 616 0 616 0 0 1 0 0 1
+4 * 616 0 616
+4 * 616 616
+1 * 616 616

fn=(92)
0x4049d4 81 616 0 616 1 0 0 1
+1 * 616
+3 * 616 0 616
+4 * 616 0 616
+4 * 616 616
+1 * 616 616

fn=(196)
0x404520 86 616 0 616
+1 * 616
+3 * 616 0 616
+4 * 616 616
+1 * 616 616

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624 1 0 0 1
+4 +2 624 624
+4 * 624
+3 * 624 0 624
cfn=(28)
calls=624 0x404992 +12 
* * 3744 1248 1248 1 0 0 1
+5 * 624 624
+4 * 624
+3 * 624
+2 * 624 0 0 0 0 0 0 0 0 624
jcnd=624/624 +7 +3 
* * 
+7 +3 624 624
+4 * 624
+4 * 624
+3 * 624 0 624
cob=(5)
cfi=(8)
cfn=(32)
calls=624 0x387e4bd0b0 0 
* * 176568 27285 27836 20 27 15 20 27 15 28318 908 624
* * 624 624 0 1 1 0 1 1 0 0 0 624
+5 +1 624 624
+1 * 624 624

fn=(102)
0x4048de 113 640 0 640 1 0 0 1
+1 * 640
+3 * 640 0 640
+4 +1 640
+10 * 640 640
+1 * 640 640

fn=(266)
0x40406a 129 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
+4 * 308 0 308
+4 * 308 0 308
+4 +1 308 308
+4 * 308
+3 * 308
+5 * 308 0 308
cfi=(16)
cfn=(226)
calls=308 0x402d61 -20 
* * 2156 924 924
+5 * 308
+3 * 308 0 0 0 0 0 0 0 0 308
+2 * 308 308
+4 * 308 308 0 0 19 0 0 19
+2 * 308 0 308 0 0 11 0 0 11
+2 * 308 308
+1 * 308 308

fn=(28)
0x404992 113 640 0 640 1 0 0 1
+1 * 640
+3 * 640 0 640
+4 +1 640
+10 * 640 640
+1 * 640 640

fn=(176)
0x4044cc 86 616 0 616
+1 * 616
+3 * 616 0 616
+4 * 616 616
+1 * 616 616

fn=(224)
0x403df2 129 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
+4 * 308 0 308
+4 * 308 0 308
+4 +1 308 308
+4 * 308
+3 * 308
+5 * 308 0 308
cfi=(16)
cfn=(226)
calls=308 0x402d61 -20 
* * 2156 924 924
+5 * 308
+3 * 308 0 0 0 0 0 0 0 0 308 2
+2 * 308 308
+4 * 308 308 0 0 20 0 0 20
+2 * 308 0 308 0 0 3 0 0 3
+2 * 308 308
+1 * 308 308

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624
+3 * 624 0 624
cob=(5)
cfi=(8)
cfn=(164) operator delete(void*)
calls=624 0x387e4bb2f0 0 
* * 68818 17171 8105 23 5 0 23 5 0 16722 455 624
* * 624 624 0 1 1 0 1 1 0 0 0 624
+5 * 624 624
+1 * 624 624

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624
+3 * 624 0 624
cob=(5)
cfi=(8)
cfn=(164)
calls=624 0x387e4bb2f0 0 
* * 76029 19876 10180 0 1 0 0 1 0 18783 67 624
* * 624 624 0 0 0 0 0 0 0 0 0 624
+5 * 624 624
+1 * 624 624

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=616 0x404484 107 
* * 299982 99504 95812 25 3 4 25 3 4 11264 704 1228 153
+5 * 616 616
+1 * 616 616

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616 0 1 0 0 1
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=616 0x404a36 450 
* * 282734 93344 89652 24 3 4 24 3 4 11264 704 1228 153
+5 * 616 616
+1 * 616 616

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=616 0x40439c 107 
* * 299982 99504 95812 7 0 40 7 0 40 11264 688 1228
+5 * 616 616
+1 * 616 616

fn=(116)
0x40439c 107 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +10 616 616
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=616 0x4047d7 -26 
* * 291358 96424 92732 7 0 40 7 0 40 11264 688 1228
+5 +1 616 616
+1 * 616 616

fn=(118)
0x4047d7 91 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=616 0x4049e2 450 
* * 282734 93344 89652 7 0 40 7 0 40 11264 688 1228
+5 * 616 616
+1 * 616 616

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +10 616 616
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(52)
calls=616 0x404829 -26 
* * 291358 96424 92732 25 3 4 25 3 4 11264 704 1228 153
+5 +1 616 616
+1 * 616 616

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 616 0 616 1 0 0 1
+1 * 616
+3 * 616 0 616
+1 * 616
+4 * 616 0 616
+4 +2 616 616
+4 * 616 616
+4 * 616
+3 * 616 616
+4 * 616 616
+3 * 616
+3 * 616
+3 * 616
+4 * 616
+3 * 616 616
+4 * 616 616
+3 -1 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=616 0x403d98 +11 
* * 92394 25812 16226 1 1 0 1 1 0 19196 58 1232
+5 +1 616 616
+4 * 616
+3 * 616 0 616
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=616 0x403296 -82 
* * 14168 4928 4928 1 0 0 1
+5 * 616
jump=616 +28 * 
* * 
+28 * 616
+4 * 616 616
+1 * 616 616
+1 * 616 616

fn=(2)
0x402d74 645 2496 0 2496 1 0 0 1
+1 * 2496
+3 * 2496 0 2496 0 0 1 0 0 1
+4 +1 2496 2496
+4 * 2496 2496 0 1 1 0 1 1
+4 * 2496
+3 * 2496 2496
+4 * 2496 2496
+3 * 2496
+3 * 2496
+3 * 2496
+4 * 2496 2496
+1 * 2496 2496

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=616 0x404236 -14 
* * 199827 34928 34857 26 15 8 26 15 8 29098 852 1232
+5 * 616 616
+4 * 616 0 616
+3 +1 616 616
+4 * 616 616 0 1 0 0 1
+3 * 616 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+3 * 616 616
+4 * 616
+4 * 616
+3 * 616 616
+4 * 616 0 616
+4 +1 616 616
+1 * 616 616

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616
+4 * 616 616 0 1 0 0 1
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=616 0x403fbe -14 
* * 202354 33868 31473 26 6 32 26 6 32 29957 1017 1232
+5 * 616 616
+4 * 616 0 616
+3 +1 616 616
+4 * 616 616
+3 * 616 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+3 * 616 616
+4 * 616
+4 * 616
+3 * 616 616
+4 * 616 0 616
+4 +1 616 616
+1 * 616 616

fn=(244)
0x402f7a 901 308 0 308
+1 * 308
+3 * 308 0 0 1 0 0 1
+4 * 308 0 308
+4 * 308 0 308
+4 +2 308 308
+4 * 308 308
+4 * 308 308
+4 * 308 308
+4 * 308
+3 * 308 0 0 0 0 0 0 0 0 308
jcnd=8/308 +51 +10 
* * 
+2 +3 300 300
+4 * 300 300
+4 * 300 300
+4 -1 300 300
+4 * 300
+3 * 300
+3 * 300 0 300
cfi=(3)
cfn=(264)
calls=300 0x4036b1 215 
* * 11400 3900 4200 0 19 7 0 19 7 300
+5 +2 300 300
+4 * 300 300
+4 * 300
+4 * 300 300
+4 * 300 0 300
+4 * 300
jump=300 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12410 3721 3242 18 13 29 18 13 29 827 77 47
+5 +2 308 308
+1 * 308 308

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256 0 1256 1 0 0 1
+4 +1 1256 1256
+4 * 1256 1256
+1 * 1256 1256

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+3 * 616 0 616
+4 * 616
+4 * 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=616 0x404380 726 
* * 6160 3080 2464
+5 * 616 616
+4 * 616 616
+1 * 616 616

fn=(148)
0x402df4 414 616 0 616
+1 * 616
+3 * 616 0 616
+1 * 616
+4 * 616 0 616 1 0 0 1
+4 +2 616 616
+4 * 616
+3 * 616 0 616
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=616 0x40325e 113 
* * 3696 1848 1232
+5 * 616
+3 * 616 616
+4 * 616 616
+4 * 616 616
+4 * 616 616
+3 -1 616
+3 * 616
+3 * 616 0 616
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=616 0x40326c 148 
* * 19096 6160 7392 4 0 0 4
+5 +1 616 616
+4 * 616
+3 * 616 0 616
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=616 0x4031ec 159 
* * 116632 34828 22162 27 5 0 27 5 0 17144 448 1232
+5 * 616
jump=616 +28 * 
* * 
+28 * 616 0 0 1 0 0 1
+4 * 616 616
+1 * 616 616
+1 * 616 616

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+5 * 624 0 0 0 0 0 0 0 0 624
+2 +1 624 624
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(5)
cfn=(160)
calls=624 0x4044d6 -65 
* * 76306 19667 11225 24 6 0 24 6 0 16722 455 1248
+5 +1 624 624
+1 * 624 624

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 616 0 616
+1 * 616
+3 * 616 0 616
+1 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=616 0x4043ca -45 
* * 22176 8008 8624 4 0 4 4 0 4
+5 +1 616 616 0 1 0 0 1
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(20)
calls=616 0x404412 +43 
* * 215227 42320 39169 27 15 8 27 15 8 29098 852 1232
+5 * 616
jump=616 +28 * 
* * 
+28 * 616
+4 * 616 616
+1 * 616 616
+1 * 616 616

fn=(14)
0x4043ca 90 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616 0 0 1 0 0 1
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(4)
cfn=(16)
calls=616 0x404804 +24 
* * 11088 3696 4312 2 0 1 2 0 1
+5 * 616 616
+4 * 616 0 616 0 0 2 0 0 2
+7 * 616 616
+4 * 616 0 616 1 0 0 1
+8 * 616 616
+4 * 616 0 616
+8 +1 616 616
+1 * 616 616

fn=(80)
0x402ff4 310 616 0 616 1 0 0 1
+1 * 616
+3 * 616 0 616
+2 * 616 0 616
+2 * 616 0 616
+1 * 616 0 0 1 0 0 1
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616
+4 * 616
+3 * 616 0 616
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=616 0x4039fc 117 
* * 3696 1848 1232 2 0 0 2
+5 * 616
+3 * 616 0 616
cfi=(3)
cfn=(84)
calls=616 0x4039ed -88 
* * 3696 1848 1232
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(2)
calls=616 0x402d74 645 
* * 8008 3696 1232
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616
+3 * 616
+3 * 616 0 616 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=616 0x403a0a 134 
* * 253482 53580 48721 33 6 32 33 6 32 29957 1017 1232
+5 +4 616 616
+4 * 616
+3 * 616 0 616
cfn=(106)
calls=616 0x40325e 113 
* * 3696 1848 1232 1 0 0 1
+5 * 616
+3 * 616 616
+4 * 616 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=616 0x403a98 565 
* * 15400 6160 4928 2 0 0 2
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(112)
calls=616 0x403a68 547 
* * 15400 6160 4928
+5 * 616
+3 * 616
+3 * 616
+3 * 616
+3 * 616 0 616
cfi=(11)
cfn=(114)
calls=616 0x403ac9 -60 
* * 309222 102584 99508 7 0 40 7 0 40 11264 688 1228
+5 -3 616 616
+4 * 616 0 616
+4 * 616
jump=616 +28 +4 
* * 
+28 +4 616
+4 * 616 616
+1 * 616 616
+2 * 616 616
+2 * 616 616
+1 * 616 616

fn=(188)
0x403d98 171 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+5 * 624 0 0 0 0 0 0 0 0 624 8
+2 +1 624 624
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(5)
cfn=(190)
calls=624 0x40452a -65 
* * 83517 22372 13300 0 1 0 0 1 0 18783 67 1248
+5 +1 624 624
+1 * 624 624

fn=(22)
0x404236 167 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624 1 0 0 1
+4 * 624 0 624
+4 0 624 624
+5 0 624 0 0 0 0 0 0 0 0 624
+2 0 624 624
+4 0 624 624
+4 0 624
+5 0 624
+3 0 624
+3 0 624 0 624
fi=(6) ???
cfi=(5)
cfn=(26)
calls=624 0x404730 99 
* 0 192792 32277 32828 24 28 15 24 28 15 28942 908 1248
+5 0 624
fi=(6)
jump=624 +7 0 
* 0 
+7 0 624 624
+1 0 624 624

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+4 * 616 0 616
+4 * 616
+4 * 616 0 0 1 0 0 1
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=616 0x404468 726 
* * 6160 3080 2464 1 0 0 1
+5 * 616 616
+4 * 616 616
+1 * 616 616

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+3 * 616 0 616
+4 * 616
+4 * 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(10)
cfn=(44)
calls=616 0x404468 726 
* * 6160 3080 2464
+5 * 616 616
+4 * 616 616
+1 * 616 616

fn=(86)
0x403a0a 134 616 0 616
+1 * 616
+3 * 616 0 616
+1 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=616 0x4042e2 -45 
* * 22176 8008 8624 5 0 0 5
+5 +1 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616 1 0 0 1
cfn=(94)
calls=616 0x40432a +43 
* * 217754 41260 35785 27 6 32 27 6 32 29957 1017 1232
+5 * 616
jump=616 +28 * 
* * 
+28 * 616
+4 * 616 616
+1 * 616 616
+1 * 616 616

fn=(88)
0x4042e2 90 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616 1 0 0 1
cfi=(4)
cfn=(90)
calls=616 0x4047b2 +24 
* * 11088 3696 4312 3 0 0 3
+5 * 616 616
+4 * 616 0 616
+7 * 616 616
+4 * 616 0 616
+8 * 616 616
+4 * 616 0 616
+8 +1 616 616
+1 * 616 616

fn=(156)
0x4031ec 159 616 0 616 1 0 0 1
+1 * 616
+3 * 616 0 616
+1 * 616
+4 * 616 0 616
+4 +2 616 616
+4 * 616 616 0 1 0 0 1
+4 * 616
+3 * 616 616
+4 * 616 616
+3 * 616
+3 * 616
+3 * 616
+4 * 616
+3 * 616 616
+4 * 616 616
+3 -1 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(158)
calls=616 0x403ce6 +11 
* * 85216 23124 14154 24 5 0 24 5 0 17144 448 1232
+5 +1 616 616
+4 * 616
+3 * 616 0 616
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=616 0x4031b8 -82 
* * 14168 4928 4928 1 0 0 1
+5 * 616
jump=616 +28 * 
* * 
+28 * 616
+4 * 616 616
+1 * 616 616
+1 * 616 616

fn=(172)
0x4031b8 79 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 616
+4 * 616
+3 * 616 0 616
cfi=(4)
cfn=(174)
calls=616 0x403ccc +42 
* * 8624 3080 3080
+5 * 616 616
+1 * 616 616

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1264 0 1264 1 0 0 1
+1 * 1264
+3 * 1264 0 1264
+4 +1 1264 1264
+4 * 1264 1264 0 0 2 0 0 2
+4 * 1264
+3 * 1264 1264
+4 * 1264 1264
+3 * 1264
+3 * 1264
+3 * 1264
+4 * 1264 1264
+1 * 1264 1264

fn=(106)
0x40325e 113 1256 0 1256 1 0 0 1
+1 * 1256
+3 * 1256 0 1256
+4 +1 1256 1256
+4 * 1256 1256
+1 * 1256 1256

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 632 0 632 1 0 0 1
+1 * 632
+3 * 632 0 632 0 0 1 0 0 1
+4 +1 632 632
+4 * 632 632
+1 * 632 632

fn=(82)
0x4039fc 117 632 0 632 1 0 0 1
+1 * 632
+3 * 632 0 632 1 0 0 1
+4 +1 632 632
+4 * 632 632
+1 * 632 632

fn=(200)
0x402eda 901 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
+4 * 308 0 308
+4 +2 308 308
+4 * 308 308
+4 * 308 308
+4 * 308 308
+4 * 308
+3 * 308 0 0 0 0 0 0 0 0 308 8
jcnd=8/308 +51 +10 
* * 
+2 +3 300 300
+4 * 300 300
+4 * 300 300
+4 -1 300 300
+4 * 300
+3 * 300
+3 * 300 0 300
cfi=(3)
cfn=(222)
calls=300 0x403373 215 
* * 11400 3900 4200 0 19 2 0 19 2 300 2
+5 +2 300 300
+4 * 300 300
+4 * 300
+4 * 300 300
+4 * 300 0 300
+4 * 300
jump=300 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12584 3908 3380 35 7 9 35 7 9 845 63 47
+5 +2 308 308
+1 * 308 308

fn=(4)
0x4030b2 310 616 0 616 1 0 0 1
+1 * 616
+3 * 616 0 616
+2 * 616 0 616
+2 * 616 0 616
+1 * 616
+4 * 616 0 616 1 0 0 1
+4 * 616 0 616
+4 +2 616 616
+4 * 616
+3 * 616 0 616
cfn=(6)
calls=616 0x403b08 117 
* * 3696 1848 1232 1 0 1 1 0 1
+5 * 616
+3 * 616 0 616
cfi=(3)
cfn=(8)
calls=616 0x403afa -88 
* * 3696 1848 1232 1 0 0 1
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(10)
calls=616 0x402f54 645 
* * 8008 3696 1232 1 1 0 1 1
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616
+3 * 616
+3 * 616 0 616
cfn=(12)
calls=616 0x403b16 134 
* * 250955 54640 52105 32 15 12 32 15 12 29098 852 1232
+5 +4 616 616 0 1 0 0 1
+4 * 616
+3 * 616 0 616
cfn=(40)
calls=616 0x40333c 113 
* * 3696 1848 1232 2 0 0 2
+5 * 616
+3 * 616 616
+4 * 616 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(42)
calls=616 0x403ba4 565 
* * 15400 6160 4928 3 0 0 3
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(46)
calls=616 0x403b74 547 
* * 15400 6160 4928
+5 * 616
+3 * 616
+3 * 616
+3 * 616
+3 * 616 0 616 1 0 0 1
cfi=(11)
cfn=(48)
calls=616 0x403bd5 -60 
* * 309222 102584 99508 26 3 4 26 3 4 11264 704 1228 153
+5 -3 616 616
+4 * 616 0 616
+4 * 616
jump=616 +28 +4 
* * 
+28 +4 616
+4 * 616 616
+1 * 616 616
+2 * 616 616
+2 * 616 616
+1 * 616 616

fn=(108)
0x403a98 565 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+4 * 616 0 616
+4 * 616
+4 * 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(10)
cfn=(110)
calls=616 0x404380 726 
* * 6160 3080 2464 1 0 0 1
+5 * 616 616
+4 * 616 616
+1 * 616 616

fn=(178)
0x402e74 414 616 0 616
+1 * 616
+3 * 616 0 616
+1 * 616
+4 * 616 0 616 1 0 0 1
+4 +2 616 616
+4 * 616
+3 * 616 0 616
cfn=(40)
calls=616 0x40333c 113 
* * 3696 1848 1232
+5 * 616
+3 * 616 616
+4 * 616 616
+4 * 616 616
+4 * 616 616
+3 -1 616
+3 * 616
+3 * 616 0 616
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=616 0x40334a 148 
* * 19096 6160 7392 2 0 0 2
+5 +1 616 616
+4 * 616
+3 * 616 0 616
cfn=(186)
calls=616 0x4032ca 159 
* * 123810 37516 24234 3 1 0 3 1 0 19196 58 1232
+5 * 616
jump=616 +28 * 
* * 
+28 * 616 0 0 1 0 0 1
+4 * 616 616
+1 * 616 616
+1 * 616 616

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 624 0 624 1 0 0 1
+1 * 624 0 0 1 0 0 1
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 0 624 624
+5 0 624 0 0 0 0 0 0 0 0 624
+2 0 624 624
+4 0 624 624
+4 0 624
+5 0 624
+3 0 624
+3 0 624 0 624
fi=(6)
cfi=(5)
cfn=(100)
calls=624 0x40461a 99 
* 0 195526 31421 29585 36 11 37 36 11 37 29828 1067 1248
+5 0 624
fi=(6)
jump=624 +7 0 
* 0 
+7 0 624 624
+1 0 624 624

fn=(144)
0x402d9a 770 144298 0 144298
+1 * 144298
+3 * 144298 0 144298
+4 * 144298 0 144298
+4 +1 144298 144298
+4 * 144298 144298
+3 * 144298 144298
+4 * 144298
+4 * 144298
+3 * 144298 144298
+1 * 144298 144298

fn=(146)
0x402dba 770 144298 0 144298
+1 * 144298
+3 * 144298 0 144298 1 0 0 1
+4 * 144298 0 144298
+4 +1 144298 144298
+4 * 144298 144298
+3 * 144298 144298
+4 * 144298
+4 * 144298
+3 * 144298 144298
+1 * 144298 144298

fn=(192)
0x403296 79 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 616
+4 * 616
+3 * 616 0 616
cfi=(4)
cfn=(194)
calls=616 0x403d7e +42 
* * 8624 3080 3080 1 0 0 1
+5 * 616 616
+1 * 616 616

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232
+4 * 1232 0 1232 1 0 0 1
+4 +1 1232 1232
+4 * 1232
+3 * 1232 0 1232
cfi=(13)
cfn=(58)
calls=1232 0x404d8f -77 
* * 7392 3696 2464 1 0 0 1
+5 * 1232 1232
+1 * 1232 1232

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 632 0 632
+1 * 632
+3 * 632
+4 * 632 0 632 1 0 0 1
+4 * 632 0 632
+4 * 632 0 632
+4 +2 632 632
+4 * 632 632
+4 * 632
+3 * 632
+3 * 632
+4 * 632 0 632
+4 +1 632 632
+5 * 632 0 0 0 0 0 0 0 0 632
jcnd=8/632 +33 +2 
* * 
+2 +1 624 624
+4 * 624
+8 * 624 624
+4 * 624 624
+4 * 624
+3 * 624 0 0 1 0 0 1
+3 * 624 0 624 0 0 1 0 0 1
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(78) memmove
calls=624 0x3877c83840 0 
* * 168048 53620 52377 11 2 20 11 2 20 10732 708 619 153
* * 624 624 0 1 1 0 1 1 0 0 0 624
+5 +1 632 632
+4 * 632
+8 * 632 632
+4 * 632
+3 +1 632 632
+1 * 632 632

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 632 0 632
+1 * 632
+3 * 632
+4 * 632 0 632 1 0 0 1
+4 * 632 0 632
+4 * 632 0 632 0 0 1 0 0 1
+4 +2 632 632
+4 * 632 632
+4 * 632
+3 * 632
+3 * 632
+4 * 632 0 632
+4 +1 632 632
+5 * 632 0 0 0 0 0 0 0 0 632
jcnd=8/632 +33 +2 
* * 
+2 +1 624 624
+4 * 624
+8 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cob=(2)
cfi=(9)
cfn=(78)
calls=624 0x3877c83840 0 
* * 168048 53620 52377 0 0 41 0 0 41 10732 694 619
* * 624 624 0 0 0 0 0 0 0 0 0 624
+5 +1 632 632
+4 * 632
+8 * 632 632
+4 * 632
+3 +1 632 632
+1 * 632 632

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616 1 0 0 1
+4 * 616 0 616
+4 * 616 0 616
+4 +8 616 0 616
+4 +3 616 616
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(74)
calls=616 0x404f37 -22 
* * 184174 60080 55772 14 3 3 14 3 3 11264 704 1228 153
+5 +1 616 616
+1 * 616 616

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 616 0 616
+1 * 616
+3 * 616 0 616
+2 * 616 0 616
+1 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +4 616 616
+4 * 616
+3 * 616 0 616
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=616 0x404878 277 
* * 9240 3696 3080 1 0 0 1
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=616 0x404d44 277 
* * 15400 5544 4928 2 0 0 2
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(132)
calls=616 0x404d44 277 
* * 15400 5544 4928
+5 * 616
+3 * 616
+3 * 616
+3 * 616 0 616
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=616 0x404d5e -49 
* * 193414 63160 59468 1 0 40 1 0 40 11264 688 1228
+5 +1 616
+4 * 616 616
+1 * 616 616
+2 * 616 616
+1 * 616 616

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 616 0 616
+1 * 616
+3 * 616 0 616
+1 * 616
+4 * 616 0 616 1 0 0 1
+4 * 616 0 616
+4 * 616 0 616
+4 +10 616 616
+4 * 616
+3 * 616 0 616
cfn=(56)
calls=616 0x404c38 288 
* * 9240 3696 3080 3 0 0 3
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(56)
calls=616 0x404c38 288 
* * 9240 3696 3080
+5 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=616 0x404c52 -36 
* * 250702 82256 78564 20 3 4 20 3 4 11264 704 1228 153
+5 +1 616
+4 * 616 616
+1 * 616 616
+1 * 616 616

fn=(60)
0x404c52 424 616 0 616
+1 * 616
+3 * 616 0 616
+2 * 616 0 616
+1 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +4 616 616
+4 * 616
+3 * 616 0 616
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=616 0x40492d 277 
* * 9240 3696 3080 2 0 0 2
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=616 0x404d9d 277 
* * 15400 5544 4928 2 0 1 2 0 1
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(66)
calls=616 0x404d9d 277 
* * 15400 5544 4928
+5 * 616
+3 * 616
+3 * 616
+3 * 616 0 616
cfn=(72)
calls=616 0x404db7 -49 
* * 193414 63160 59468 15 3 3 15 3 3 11264 704 1228 153
+5 +1 616
+4 * 616 616
+1 * 616 616
+2 * 616 616
+1 * 616 616

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 664 0 664 1 0 0 1
+1 * 664
+3 * 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664
+3 * 664 0 664 1 0 0 1
cfi=(13)
cfn=(64)
calls=664 -33 -66 
* * 3984 1992 1328
+5 * 664 664
+1 * 664 664

fn=(66)
0x404d9d 277 1232 0 1232
+1 * 1232
+3 * 1232
+4 * 1232 0 1232
+4 +1 1232 1232
+4 * 1232
+3 * 1232 0 1232
cfi=(13)
cfn=(68)
calls=1232 0x404f1a -58 
* * 19712 7392 6160 2 0 1 2 0 1
+5 * 1232 1232
+1 * 1232 1232

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 616 0 616
+1 * 616
+3 * 616 0 616
+1 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +10 616 616
+4 * 616
+3 * 616 0 616
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=616 0x404bc6 288 
* * 9240 3696 3080 3 0 0 3
+5 * 616
+3 * 616 616
+4 * 616
+3 * 616 0 616
cfn=(122)
calls=616 0x404bc6 288 
* * 9240 3696 3080
+5 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(126)
calls=616 0x404be0 -36 
* * 250702 82256 78564 4 0 40 4 0 40 11264 688 1228
+5 +1 616
+4 * 616 616
+1 * 616 616
+1 * 616 616

fn=(128)
0x404878 277 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664 1 0 0 1
+4 +1 664 664
+4 * 664
+3 * 664 0 664
cfi=(13)
cfn=(130)
calls=664 -33 -66 
* * 3984 1992 1328 0 0 1 0 0 1
+5 * 664 664
+1 * 664 664

fn=(132)
0x404d44 277 1232 0 1232
+1 * 1232
+3 * 1232
+4 * 1232 0 1232
+4 +1 1232 1232
+4 * 1232
+3 * 1232 0 1232
cfi=(13)
cfn=(134)
calls=1232 0x404e98 -58 
* * 19712 7392 6160 2 0 0 2
+5 * 1232 1232
+1 * 1232 1232

fn=(138)
0x404d5e 379 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +8 616 0 616
+4 +3 616 616
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(140)
calls=616 0x404eb5 -22 
* * 184174 60080 55772 1 0 40 1 0 40 11264 688 1228
+5 +1 616 616
+1 * 616 616

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232
+4 * 1232 0 1232
+4 +1 1232 1232
+4 * 1232
+3 * 1232 0 1232
cfi=(13)
cfn=(124)
calls=1232 0x404d36 -77 
* * 7392 3696 2464 2 0 0 2
+5 * 1232 1232
+1 * 1232 1232

fl=(10)
fn=(44)
0x404468 726 1232 0 1232
+1 * 1232
+3 * 1232 0 1232
+4 * 1232 0 1232
+4 * 1232 1232
+4 * 1232 1232
+3 * 1232 1232
+4 * 1232 0 1232 1 0 0 1
+3 * 1232 1232
+1 * 1232 1232

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232 0 1232
+4 +1 1232 1232
+4 * 1232 1232
+1 * 1232 1232

fn=(110)
0x404380 726 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232 0 1232
+4 * 1232 0 1232
+4 * 1232 1232
+4 * 1232 1232
+3 * 1232 1232
+4 * 1232 0 1232
+3 * 1232 1232
+1 * 1232 1232

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1232 0 1232 1 0 0 1
+1 * 1232
+3 * 1232 0 1232
+4 +1 1232 1232
+4 * 1232 1232
+1 * 1232 1232

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624
+4 * 624 0 624 1 0 0 1
+4 * 624 624
+1 * 624 624

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 +4 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=624 0x40454c -14 
* * 3744 1248 1872 1 0 0 1
+5 +2 624 624
+1 * 624 624

fn=(150)
0x40326c 148 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +3 624 624 0 1 0 0 1
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=624 0x403d1a -29 
* * 11232 3744 4368 3 0 0 3
+5 +1 624 624
+1 * 624 624

fn=(180)
0x40334a 148 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +3 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(182)
calls=624 0x403dcc -29 
* * 11232 3744 4368 2 0 0 2
+5 +1 624 624
+1 * 624 624

fn=(152)
0x403d1a 122 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 +4 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(154)
calls=624 0x4044f8 -14 
* * 3744 1248 1872 2 0 0 2
+5 +2 624 624
+1 * 624 624

fn=(184)
0x40454c 112 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624
+4 * 624 0 624
+4 * 624 624
+1 * 624 624

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2949 469 467 0 13 7 0 13 7 468 56 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3156 673 608 12 5 5 12 5 5 495 50 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 1 0 1 1 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(36) malloc
0x3877c7aa50 0 1248 0 1248 1 0 0 1
+5 0 1248 0 1248
+5 0 1248
+3 0 1248 0 1248
+5 0 1248
+4 0 1248 1248 0 0 1 0 0 1
+7 0 1248 1248 0 0 1 0 0 1
+3 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248 2
+6 0 1248 1248 0 0 1 0 0 1
+7 0 1248 1248 0 1 1 0 1 1
+4 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248
+2 0 1248 1248 0 0 1 0 0 1
+3 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248
jcnd=1248/1248 +97 0 
* 0 
+18 0 1248
+3 0 1248
+3 0 1248 0 1248
cfn=(38) _int_malloc
calls=1248 0x3877c79a00 0 
* 0 283486 34994 41197 45 31 51 45 31 51 43794 1936
+5 0 1248
+3 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248
+2 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248
+2 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248 23
+2 0 1248 1248
+7 0 1248 0 0 0 0 0 0 0 0 1248
jcnd=1248/1248 +13 0 
* 0 
+13 0 1248 0 1248
+2 0 1248 0 0 0 0 0 0 0 0 1248 14
+6 0 1248
+3 0 1248 1248
+4 0 1248 1248
+5 0 1248 1248
+5 0 1248
+4 0 1248 1248
+1 0 1248 0 0 1 0 0 1
+5 0 1248 1248 0 0 1 0 0 1
+7 0 1248 0 0 0 0 0 0 0 0 1248
jcnd=1248/1248 +14 0 
* 0 
+14 0 1248 0 1248 1 0 0 1
+3 0 1248 0 0 0 0 0 0 0 0 1248
+6 0 1248
jump=1248 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1248 0 1248 1 0 0 1
+2 0 1248
+3 0 1248
+3 0 1248 0 1248
+2 0 1248
+3 0 1248 0 1248
+1 0 1248
+3 0 1248 0 1248
+1 0 1248
+3 0 1248
+4 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248
+6 0 1248
+4 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248 7
jcnd=10/1248 0x3877c838d1 0 
* 0 
+2 0 1238
+3 0 1238
+3 0 1238
+3 0 1238
+3 0 1238
+3 0 1238 0 0 0 0 0 0 0 0 1238
jcnd=1238/1238 +41 0 
* 0 
+41 0 1238 0 0 1 0 0 1
+3 0 1238 0 0 0 0 0 0 0 0 1238
jcnd=1238/1238 0x3877c839c0 0 
* 0 
+24 0 1238
+3 0 1238
+4 0 1238
+3 0 1238
+3 0 1238
+3 0 1238
+3 0 1238
+3 0 1238 0 0 0 0 0 0 0 0 1238 616
jcnd=626/1238 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 622
+10 0 622 622 0 0 1 0 0 1
+3 0 622
+4 0 622 0 622
+3 0 622
+4 0 622
+4 0 622 0 0 0 0 0 0 0 0 622
jcnd=622/622 -18 0 
* 0 
-18 0 1922 1922
+3 0 1922
+4 0 1922 0 1922
+3 0 1922
+4 0 1922
+4 0 1922 0 0 0 0 0 0 0 0 1922 11
jcnd=1300/1922 -18 0 
* 0 
+2 0 1248
+4 0 1248
+3 0 1248 1248
+1 0 1248 1248
+1 0 1248 1248
+2 0 1248 1248 0 1 0 0 1
+2 0 1248 1248
0x3877c839c0 0 1238 0 0 1 0 0 1
+3 0 1238
+3 0 1238
+3 0 1238
+4 0 1238 0 1238 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1238 0x3877c89b20 0 
* 0 265498 98456 95980 6 1 60 6 1 60 12700 768 1238 153
+5 0 1238
jump=1238 0x3877c838be 0 
* 0 

fn=(168) free
0x3877c7b8b0 0 1248 1248 0 1 1 0 1 1
+7 0 1248 1248 0 0 1 0 0 1
+3 0 1248
+3 0 1248 0 0 1 0 0 1 0 0 1248
+6 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248
+6 0 1248 1248
+4 0 1248
+4 0 1248
+2 0 1248 0 0 0 0 0 0 0 0 1248 2
+2 0 1248
+2 0 1248
+7 0 1248 0 0 0 0 0 0 0 0 1248
jcnd=1248/1248 +14 0 
* 0 
+14 0 1248
+2 0 1248
cfn=(170) _int_free
calls=1248 0x3877c78650 0 
* 0 121135 32055 18285 19 3 0 19 3 0 29265 520

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 9
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1248 0 1248 1 0 0 1
+2 0 1248 0 1248
+2 0 1248 0 1248
+2 0 1248
+3 0 1248 0 1248
+2 0 1248 0 1248
+1 0 1248 0 1248
+1 0 1248
+3 0 1248
+4 0 1248 1248
+4 0 1248 0 1248
+4 0 1248
+3 0 1248
+4 0 1248
+3 0 1248
+3 0 1248
+3 0 1248 0 0 1 0 0 1 0 0 1248
+6 0 1248
+4 0 1248 0 0 0 0 0 0 0 0 1248
+6 0 1248
+4 0 1248 0 0 0 0 0 0 0 0 1248
+6 0 1248 1248
+7 0 1248 0 0 0 0 0 0 0 0 1248 4
jcnd=1124/1248 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1124
+2 0 1124 0 0 0 0 0 0 0 0 1124
+6 0 1124 1124 0 1 0 0 1
+4 0 1124
+3 0 1124
+2 0 1124 0 0 0 0 0 0 0 0 1124
jcnd=1124/1124 0x3877c78a40 0 
* 0 
+6 0 1124 1124
+4 0 1124
+3 0 1124 0 0 0 0 0 0 0 0 1124
+6 0 1124 1124
+5 0 1124
+4 0 1124 0 0 0 0 0 0 0 0 1124
jcnd=1124/1124 0x3877c7907c 0 
* 0 
+6 0 1124 1124
+5 0 1124
+4 0 1124 0 0 0 0 0 0 0 0 1124
+6 0 1124
+4 0 1124 0 0 1 0 0 1 0 0 1124
+6 0 1124
+4 0 1124 1124
+7 0 1124 0 0 0 0 0 0 0 0 1124
+6 0 1124 1124
+6 0 1124
+2 0 1124 0 0 0 0 0 0 0 0 1124
+6 0 1124 1124
+4 0 1124 0 0 0 0 0 0 0 0 1124 5
jcnd=1120/1124 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1124 1124 0 1 0 0 1
+4 0 1124 0 0 0 0 0 0 0 0 1124 370
jcnd=422/1124 0x3877c78bf0 0 
* 0 
+6 0 702 702 0 0 1 0 0 1
+6 0 702 0 0 1 0 0 1 0 0 702 64
jcnd=61/702 0x3877c78a78 0 
* 0 
+6 0 641 641
+5 0 641 641
+5 0 641 641
+4 0 641 0 0 0 0 0 0 0 0 641
+6 0 641 641
+4 0 641 0 0 0 0 0 0 0 0 641
+6 0 641 641
+9 0 641 0 641
+4 0 641 0 641
+4 0 641 0 0 0 0 0 0 0 0 641 4
jcnd=633/641 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 641
+3 0 641
+4 0 641 641
+4 0 641 641
+4 0 641 0 0 0 0 0 0 0 0 641
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 702
+7 0 702 0 702
+4 0 702 0 702
+4 0 702 0 0 0 0 0 0 0 0 702 69
jcnd=441/702 +18 0 
* 0 
+2 0 261 0 261
+8 0 261 0 261
+8 0 261 0 261
+4 0 261
+3 0 261 0 261 1 0 0 1
+4 0 261
+4 0 261 0 261
+4 0 261 0 261
+4 0 261
+7 0 261 0 0 0 0 0 0 0 0 261
jcnd=261/261 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 422
+7 0 422 0 0 0 0 0 0 0 0 422
jcnd=422/422 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1124 0 0 1 0 0 1
+5 0 1124 1124
+4 0 1124 1124
+7 0 1124 0 0 0 0 0 0 0 0 1124
jcnd=1124/1124 +16 0 
* 0 
+16 0 1124 0 1124
+5 0 1124 0 0 0 0 0 0 0 0 1124
+6 0 1124
+3 0 1124
jump=1124 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1124 1124 0 1 0 0 1
+4 0 1124
+2 0 1124 0 0 0 0 0 0 0 0 1124
+6 0 1124 1124
+7 0 1124 0 0 0 0 0 0 0 0 1124
jcnd=1124/1124 +15 0 
* 0 
+15 0 1124 0 1124 1 0 0 1
+4 0 1124 0 0 0 0 0 0 0 0 1124 2
+6 0 1124
+4 0 1124 1124
+1 0 1124 1124
+1 0 1124 1124
+2 0 1124 1124
+2 0 1124 1124
+2 0 1124 1124
+2 0 1124 1124
0x3877c78bf0 0 422 0 0 1 0 0 1
+3 0 422 0 422
+4 0 422
+3 0 422
+4 0 422 0 422 1 0 0 1
+4 0 422
jump=422 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1124 1124 0 1 1 0 1 1
+4 0 1124 0 0 1 0 0 1
+7 0 1124
+4 0 1124
+3 0 1124
+3 0 1124 0 0 0 0 0 0 0 0 1124
jcnd=1124/1124 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1238 0 0 1 0 0 1
+7 0 1238
+3 0 1238
+3 0 1238 1238 0 0 1 0 0 1
+4 0 1238
+4 0 1238 0 0 0 0 0 0 0 0 0 0 1238 153
jump=152 0x3877c89be8 0 
* 0 
jump=162 0x3877c89bd0 0 
* 0 
jump=152 0x3877c89bb8 0 
* 0 
jump=152 +11 0 
* 0 
jump=152 0x3877c89c48 0 
* 0 
jump=154 0x3877c89c30 0 
* 0 
jump=152 0x3877c89c18 0 
* 0 
jump=162 0x3877c89c00 0 
* 0 
+11 0 152 152
+3 0 152
+4 0 152
+4 0 152 152
+4 0 152
+4 0 152 0 152
+4 0 152
+9 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-40 0 11766 11766
+4 0 11766 0 11766 0 0 3 0 0 3
+4 0 11766 11766
+4 0 11766 0 11766 0 0 15 0 0 15
+4 0 11766 11766
+4 0 11766 0 11766 0 0 19 0 0 19
+4 0 11766 11766
+4 0 11766 0 11766
+4 0 11766
+4 0 11766
+4 0 11766 0 0 0 0 0 0 0 0 11766 764
jcnd=1202/11766 0x3877c89c60 0 
* 0 
-32 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154
+4 0 154
+4 0 154 0 0 0 0 0 0 0 0 154
jcnd=10/154 0x3877c89c60 0 
* 0 
-24 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-16 0 162 162 0 1 0 0 1
+4 0 162 0 162
+4 0 162 0 0 1 0 0 1
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162 4
jcnd=10/162 0x3877c89c60 0 
* 0 
+6 0 11148
+4 0 11148 11148
+3 0 11148 0 11148 0 0 1 0 0 1
+3 0 11148 11148
+4 0 11148 0 11148 0 0 3 0 0 3
+4 0 11148 11148
+4 0 11148 0 11148 0 0 18 0 0 18
+4 0 11148 11148
+4 0 11148 0 11148
+4 0 11148
jump=11148 -80 0 
* 0 
-30 0 152 152
+3 0 152 0 152
+3 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152 0 0 1 0 0 1
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
-24 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
jump=162 -80 0 
* 0 
-16 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
+8 0 152 152
+3 0 152
+4 0 152 0 0 1 0 0 1
+4 0 152
+4 0 152
jump=152 -39 0 
* 0 
+9 0 162
+3 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+3 0 162
+4 0 162
jump=162 -72 0 
* 0 
+8 0 152
+4 0 152 152
+3 0 152 0 0 0 0 0 0 0 0 152
+2 0 152
+4 0 152
jump=152 -99 0 
* 0 
+11 0 162 162 0 1 0 0 1
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b78 0 
* 0 
+9 0 152 152
+3 0 152
+4 0 152
+4 0 152
+4 0 152
jump=152 0x3877c89b70 0 
* 0 
+9 0 154 154
+3 0 154
+4 0 154
+4 0 154
+4 0 154
jump=154 0x3877c89b68 0 
* 0 
+9 0 152 152
+3 0 152
+4 0 152
+4 0 152
+4 0 152
jump=152 0x3877c89b60 0 
* 0 
+9 0 1238 0 1238 1 0 0 1
+3 0 1238 1238

fn=(104) alloc_perturb
0x3877c77180 0 1114 1114 0 1 0 0 1
+6 0 1114
+2 0 1114 0 0 0 0 0 0 0 0 1114 1
+2 0 1114 1114

fn=(38)
0x3877c79a00 0 1248 0 1248 1 0 0 1
+2 0 1248
+3 0 1248 0 1248
+2 0 1248 0 1248
+2 0 1248 0 1248 0 0 1 0 0 1
+2 0 1248
+3 0 1248 0 1248
+1 0 1248 0 1248
+1 0 1248
+4 0 1248
+4 0 1248 0 0 0 0 0 0 0 0 1248
+6 0 1248
+4 0 1248
+6 0 1248
+3 0 1248
+4 0 1248
+4 0 1248
+4 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248
+6 0 1248 1248 0 1 1 0 1 1
+7 0 1248 0 0 0 0 0 0 0 0 1248 7
jcnd=1126/1248 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1114
+4 0 1114 1114
+1 0 1114 1114
+1 0 1114 1114
+2 0 1114 1114
+2 0 1114 1114
+2 0 1114 1114
+2 0 1114 1114
+7 0 1143
+7 0 1143 0 0 1 0 0 1 0 0 1143 7
jcnd=240/1143 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 4 0 0 4
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 240 0 0 1 0 0 1
+3 0 240
+4 0 240
+4 0 240 0 0 1 0 0 1 0 0 240
jcnd=240/240 0x3877c7a1a4 0 
* 0 
+30 0 240 240
+6 0 240
+5 0 240 0 0 0 0 0 0 0 0 240 1
jcnd=239/240 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 907 243 192 8 2 0 8 2 0 187 21
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1142 0 0 1 0 0 1
+3 0 1142
+3 0 1142
+3 0 1142
+4 0 1142
+3 0 1142
+4 0 1142 0 1142
+5 0 1142
+3 0 1142 0 1142
+4 0 1142 0 1142
+4 0 1142 0 1142
+5 0 1142
+3 0 1142
+3 0 1142
+3 0 1142
+3 0 1142
+4 0 1142
+4 0 1142 0 0 1 0 0 1
+4 0 1142 0 1142
+4 0 1142
+4 0 1142 0 1142
+5 0 1142 0 1142
+5 0 1142
+3 0 1142
+3 0 1142 0 1142
+5 0 1142
+5 0 1142
+3 0 1142 0 1142
+4 0 1142 0 1142
+4 0 1142
+6 0 1142 0 1142
+4 0 1142 0 1142
+5 0 1142 0 0 1 0 0 1
+3 0 1142
+3 0 1142
+3 0 1142
jump=1142 +87 0 
* 0 
+8 0 898
+3 0 898
+4 0 898
+2 0 898
+2 0 898
+3 0 898
+3 0 898
+3 0 898
+2 0 898
+2 0 898
+5 0 898
+2 0 898 898 0 0 2 0 0 2
+4 0 898
+3 0 898
+4 0 898 0 898
+4 0 898 0 898 0 0 1 0 0 1
+8 0 898
+7 0 898 0 898
+4 0 898 0 898 0 0 2 0 0 2
+4 0 898 0 898
+4 0 898 0 0 0 0 0 0 0 0 898
-38 0 251
+3 0 251
+4 0 251 0 251
+4 0 251 0 251
+8 0 251
+7 0 251 0 251
+4 0 251 0 251
+4 0 251 0 251
+4 0 251 0 0 0 0 0 0 0 0 251
+6 0 2292 2292 0 1 0 0 1
+4 0 2292
+3 0 2292 0 0 0 0 0 0 0 0 2292 149
jcnd=1095/2292 0x3877c79ef0 0 
* 0 
+6 0 1197 1197
+4 0 1197 1197 0 0 1 0 0 1
+4 0 1197
+4 0 1197 0 0 0 0 0 0 0 0 1197
+6 0 1197 1197 0 1 1 0 1 1
+7 0 1197 0 0 0 0 0 0 0 0 1197
+6 0 1197
+4 0 1197
+7 0 1197 0 0 0 0 0 0 0 0 1197 6
jcnd=287/1197 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1178
+3 0 1178 0 1178
+4 0 1178 0 1178
+5 0 1178 0 0 0 0 0 0 0 0 1178 17
jcnd=29/1178 0x3877c7a090 0 
* 0 
+6 0 1149
+7 0 1149 0 0 0 0 0 0 0 0 1149 102
jcnd=898/1149 0x3877c79c50 0 
* 0 
+6 0 251 0 0 1 0 0 1
+3 0 251
+4 0 251
+4 0 251 0 0 0 0 0 0 0 0 251
+6 0 251
+3 0 251
+4 0 251
+2 0 251
+2 0 251
+3 0 251
+3 0 251
+8 0 251
+3 0 251
+2 0 251
+2 0 251
+4 0 251 251 0 0 2 0 0 2
+4 0 251
+3 0 251 0 0 1 0 0 1 0 0 251 9
jcnd=251/251 0x3877c79e15 0 
* 0 
0x3877c79e15 0 251 0 251
+4 0 251 0 251
+4 0 251
+3 0 251
jump=251 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=387/406 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1095 0 0 1 0 0 1
+7 0 1095
+3 0 1095 0 0 0 0 0 0 0 0 1095 4
jcnd=232/1095 0x3877c7a0b0 0 
* 0 
+6 0 1071 1071 0 1 0 0 1
+4 0 1071
+3 0 1071
+3 0 1071
+2 0 1071
+4 0 1071
+3 0 1071
+3 0 1071
+2 0 1071
+2 0 1071
+2 0 1071
+2 0 1071 1071
+8 0 1071
+5 0 1071
+5 0 1071
+2 0 1071 0 0 0 0 0 0 0 0 1071
-2 0 513
+2 0 513 0 0 0 0 0 0 0 0 513
+2 0 1584
+2 0 1584 0 0 0 0 0 0 0 0 1584 32
jcnd=884/1584 +64 0 
* 0 
+2 0 700
+8 0 700
+3 0 700
+3 0 700 0 0 0 0 0 0 0 0 700 1
jcnd=1/700 0x3877c79fc0 0 
* 0 
-6 0 847
+3 0 847
+3 0 847 0 0 0 0 0 0 0 0 847 11
jcnd=423/847 0x3877c79fc0 0 
* 0 
+2 0 1123
+2 0 1123 1123
+8 0 1123
+2 0 1123 0 0 0 0 0 0 0 0 1123 26
jcnd=847/1123 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
+2 0 276
+2 0 276
+4 0 276
+2 0 276
+2 0 276 0 0 0 0 0 0 0 0 276 6
jcnd=214/276 -8 0 
* 0 
-8 0 8209
+4 0 8209
+2 0 8209
+2 0 8209 0 0 0 0 0 0 0 0 8209 554
jcnd=7242/8209 -8 0 
* 0 
-2 0 884 0 0 1 0 0 1
+2 0 884 0 0 0 0 0 0 0 0 884 25
jcnd=753/884 -8 0 
* 0 
+2 0 1160 1160 0 0 11 0 0 11
+4 0 1160 0 0 1 0 0 1
+3 0 1160 0 0 0 0 0 0 0 0 1160 463
jcnd=647/1160 0x3877c7a1cf 0 
* 0 
+6 0 513
+2 0 513
+4 0 513
+2 0 513
+2 0 513
+2 0 513 0 513
+8 0 513
jump=513 0x3877c79f30 0 
* 0 
+37 0 424 424 0 1 0 0 1
+5 0 424 424
+4 0 424
+4 0 424 424
+5 0 424 0 0 0 0 0 0 0 0 424
jcnd=424/424 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 232 232
+4 0 232
+4 0 232
+2 0 232
+5 0 232 232 0 1 0 0 1
+4 0 232
+3 0 232 0 0 0 0 0 0 0 0 232 4
jcnd=208/232 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 240 0 0 1 0 0 1
+3 0 240 0 240
+4 0 240
jump=240 0x3877c79b99 0 
* 0 
+36 0 647 647 0 1 1 0 1 1
+4 0 647 647
+4 0 647
+3 0 647 647
+4 0 647
+4 0 647
+3 0 647
+3 0 647 647
+4 0 647 0 0 0 0 0 0 0 0 647
+6 0 647 647
+4 0 647 0 0 0 0 0 0 0 0 647
+6 0 647 647 0 1 0 0 1
+8 0 647 0 647
+4 0 647 0 647
+4 0 647 0 0 0 0 0 0 0 0 647 11
jcnd=419/647 +38 0 
* 0 
+2 0 228 228 0 0 2 0 0 2
+4 0 228
+3 0 228 0 0 0 0 0 0 0 0 228
+2 0 228 228
+5 0 228 0 0 0 0 0 0 0 0 228
+6 0 228 228
+4 0 228 0 228
+4 0 228 228
+4 0 228 0 228
+4 0 228
+4 0 228 0 0 0 0 0 0 0 0 228
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 626 626
+4 0 626 626 0 1 0 0 1
+4 0 626 0 0 0 0 0 0 0 0 626
+6 0 626
+4 0 626
+7 0 626 0 626 0 0 7 0 0 7
+4 0 626 0 626
+4 0 626 0 626
+4 0 626 0 626
+4 0 626 0 0 0 0 0 0 0 0 626 4
jcnd=160/626 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 160
+7 0 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 635 0 0 1 0 0 1
+7 0 635 0 635
+4 0 635
+3 0 635
+3 0 635
+4 0 635
+3 0 635
+4 0 635
+3 0 635
+3 0 635
+4 0 635 0 635
+4 0 635 0 635 0 0 1 0 0 1
+4 0 635
jump=635 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 671
+4 0 671 0 0 1 0 0 1
+3 0 671
+3 0 671 0 671
cfn=(104)
calls=671 0x3877c77180 0 
* 0 2684 1342 0 1 0 0 1 0 0 671
+5 0 671
+3 0 671
jump=671 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 424 0 0 1 0 0 1
+7 0 424
+2 0 424
+4 0 424
+3 0 424
+3 0 424 0 424
+5 0 424
+3 0 424
+4 0 424
+3 0 424 0 0 1 0 0 1
+4 0 424
+4 0 424
+3 0 424
+4 0 424 0 424
+4 0 424 0 424 0 0 17 0 0 17
+4 0 424
+3 0 424
+3 0 424 0 424
cfn=(104)
calls=424 0x3877c77180 0 
* 0 1696 848 0 0 0 0 0 0 0 424 1
+5 0 424
+3 0 424
jump=424 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

ob=(5)
fl=(8)
fn=(164)
0x387e4bb2f0 0 1248 0 0 1 0 0 1
+3 0 1248 0 0 0 0 0 0 0 0 1248
+2 0 1248
cob=(2)
cfi=(9)
cfn=(168)
calls=1248 0x3877c7b8b0 0 
* 0 139855 35799 18285 21 5 0 21 5 0 34257 522
* 0 1248 1248 0 1 1 0 1 1 0 0 0 1248

fn=(32)
0x387e4bd0b0 0 1248 0 1248 1 0 0 1
+1 0 1248
+5 0 1248
+3 0 1248 0 1248
+1 0 1248
+4 0 1248 0 0 1 0 0 1
+3 0 1248
+4 0 1248
+3 0 1248 0 1248 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36)
calls=1248 0x3877c7aa50 0 
* 0 335902 48722 48685 49 37 51 49 37 51 56274 1975
* 0 1248 1248 0 1 1 0 1 1 0 0 0 1248
+5 0 1248
+3 0 1248 0 0 0 0 0 0 0 0 1248
jcnd=1248/1248 +96 0 
* 0 
+96 0 1248 0 0 1 0 0 1
+4 0 1248 1248
+1 0 1248 1248
+1 0 1248 1248

totals: 9060611 3697152 2139919 241 93 138 241 93 138 266343 4847 7478 153
