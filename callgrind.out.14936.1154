version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1154


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1425008957 - 1426661146
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1632 0 0 1 0 0 1
+3 0 1632 0 0 0 0 0 0 0 0 1632
+2 0 1632
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1632 0x3877c7b8b0 0 
* 0 195822 51074 27908 23 4 0 23 4 0 48276 467
* 0 1632 1632 0 1 1 0 1 1 0 0 0 1632

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1632 0 1632 1 0 0 1
+1 0 1632
+5 0 1632
+3 0 1632 0 1632
+1 0 1632
+4 0 1632 0 0 1 0 0 1
+3 0 1632
+4 0 1632
+3 0 1632 0 1632 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1632 0x3877c7aa50 0 
* 0 440549 66553 69771 51 42 71 51 42 71 72376 2145
* 0 1632 1632 0 1 1 0 1 1 0 0 0 1632
+5 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632
jcnd=1632/1632 +96 0 
* 0 
+96 0 1632 0 0 1 0 0 1
+4 0 1632 1632
+1 0 1632 1632
+1 0 1632 1632

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 808
+4 * 808
+3 * 808 0 808
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=808 0x4044cc -35 
* * 4040 1616 1616
+5 * 808 808
+1 * 808 808

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808 1 0 0 1
+4 +1 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=808 0x4049d4 -35 
* * 4848 1616 2424 1 0 0 1
+5 * 808 808
+1 * 808 808

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 808
+4 * 808
+3 * 808 0 808
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=808 0x404520 -35 
* * 4040 1616 1616
+5 * 808 808
+1 * 808 808

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=808 0x404a28 -35 
* * 4848 1616 2424 1 0 1 1 0 1
+5 * 808 808
+1 * 808 808

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=404 0x403df2 -87 
* * 9696 3232 3636 0 25 4 0 25 4 404 2
+5 * 404 404
+1 * 404 404

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+4 * 808 808
+4 * 808 808
+1 * 808 808

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=404 0x40406a -87 
* * 9696 3232 3636 0 27 17 0 27 17 404
+5 * 404 404
+1 * 404 404

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 808 0 808
+1 * 808
+3 * 808 0 808
+4 * 808 808
+4 * 808 808
+1 * 808 808

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 888 0 888
+1 * 888
+3 * 888 0 888
+4 +1 888 888
+4 * 888 888
+1 * 888 888

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616 0 1616
+4 +1 1616 1616 0 1 0 0 1
+4 * 1616 1616
+1 * 1616 1616

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 888 0 888
+1 * 888
+3 * 888 0 888 0 0 1 0 0 1
+4 +1 888 888
+4 * 888 888
+1 * 888 888

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616
+4 * 1616 0 1616
+4 +1 1616
+4 * 1616
+3 * 1616 0 1616
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1616 0x404ffe 790 
* * 9696 4848 3232 1 0 0 1
+5 * 1616 1616
+3 * 1616 1616
+1 * 1616 1616

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616 0 1616
+4 +1 1616 1616
+4 * 1616 1616
+1 * 1616 1616

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616
+4 * 1616 0 1616
+4 +1 1616
+4 * 1616
+3 * 1616 0 1616 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1616 0x40500c 790 
* * 9696 4848 3232 1 0 0 1
+5 * 1616 1616
+3 * 1616 1616
+1 * 1616 1616

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 808 0 808
+1 * 808
+3 * 808 0 808
+4 * 808 0 808
+4 * 808 808
+4 * 808 808
+1 * 808 808

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 816 0 816 1 0 0 1
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 * 816 0 816 1 0 0 1
+4 +2 816 816
+4 * 816
+3 * 816 0 816
cfn=(28)
calls=816 0x404992 +12 
* * 4896 1632 1632 1 0 0 1
+5 * 816 816
+4 * 816
+3 * 816
+2 * 816 0 0 0 0 0 0 0 0 816
jcnd=816/816 +7 +3 
* * 
+7 +3 816 816
+4 * 816
+4 * 816
+3 * 816 0 816
cob=(5)
cfi=(8)
cfn=(32)
calls=816 0x387e4bd0b0 0 
* * 251451 39320 40588 20 27 25 20 27 25 40451 801 816
* * 816 816 0 1 1 0 1 1 0 0 0 816
+5 +1 816 816
+1 * 816 816

fn=(102)
0x4048de 113 832 0 832 1 0 0 1
+1 * 832
+3 * 832 0 832
+4 +1 832
+10 * 832 832
+1 * 832 832

fn=(266)
0x40406a 129 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404
+3 * 404
+5 * 404 0 404
cfi=(16)
cfn=(226)
calls=404 0x402d61 -20 
* * 2828 1212 1212
+5 * 404
+3 * 404 0 0 0 0 0 0 0 0 404
+2 * 404 404
+4 * 404 404 0 0 27 0 0 27
+2 * 404 0 404 0 0 17 0 0 17
+2 * 404 404
+1 * 404 404

fn=(28)
0x404992 113 832 0 832 1 0 0 1
+1 * 832
+3 * 832 0 832
+4 +1 832
+10 * 832 832
+1 * 832 832

fn=(176)
0x4044cc 86 808 0 808
+1 * 808
+3 * 808 0 808
+4 * 808 808
+1 * 808 808

fn=(224)
0x403df2 129 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404
+3 * 404
+5 * 404 0 404
cfi=(16)
cfn=(226)
calls=404 0x402d61 -20 
* * 2828 1212 1212
+5 * 404
+3 * 404 0 0 0 0 0 0 0 0 404 2
+2 * 404 404
+4 * 404 404 0 0 25 0 0 25
+2 * 404 0 404 0 0 4 0 0 4
+2 * 404 404
+1 * 404 404

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 816 0 816
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 * 816 0 816
+4 +1 816 816
+4 * 816
+3 * 816 0 816
cob=(5)
cfi=(8)
cfn=(164)
calls=816 0x387e4bb2f0 0 
* * 99574 25763 13385 23 5 0 23 5 0 24522 393 816
* * 816 816 0 1 1 0 1 1 0 0 0 816
+5 * 816 816
+1 * 816 816

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 816 0 816
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 * 816 0 816
+4 +1 816 816
+4 * 816
+3 * 816 0 816
cob=(5)
cfi=(8)
cfn=(164)
calls=816 0x387e4bb2f0 0 
* * 102776 26943 14523 2 0 0 2 0 0 25386 74 816
* * 816 816 0 0 0 0 0 0 0 0 0 816
+5 * 816 816
+1 * 816 816

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 816 0 816 1 0 0 1
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 * 816 0 816
+4 +2 816 816
+4 * 816
+3 * 816 0 816
cfn=(102)
calls=816 0x4048de +12 
* * 4896 1632 1632 1 0 0 1
+5 * 816 816
+4 * 816 0 0 1 0 0 1
+3 * 816
+2 * 816 0 0 0 0 0 0 0 0 816
jcnd=816/816 +7 +3 
* * 
+7 +3 816 816
+4 * 816
+4 * 816
+3 * 816 0 816
cob=(5)
cfi=(8)
cfn=(32)
calls=816 0x387e4bd0b0 0 
* * 215210 33761 34079 35 16 47 35 16 47 33557 1344 816
* * 816 816 0 0 0 0 0 0 0 0 0 816
+5 +1 816 816
+1 * 816 816

fn=(18)
0x404a28 81 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808 0 0 1 0 0 1
+4 * 808 0 808
+4 * 808 808
+1 * 808 808

fn=(92)
0x4049d4 81 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+4 * 808 0 808
+4 * 808 808
+1 * 808 808

fn=(196)
0x404520 86 808 0 808
+1 * 808
+3 * 808 0 808
+4 * 808 808
+1 * 808 808

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +2 808 808
+4 * 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=808 0x404484 107 
* * 444366 149904 145060 25 3 3 25 3 3 17192 1005 1612 200
+5 * 808 808
+1 * 808 808

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +2 808 808 0 1 0 0 1
+4 * 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=808 0x404a36 450 
* * 421742 141824 136980 24 3 3 24 3 3 17192 1005 1612 200
+5 * 808 808
+1 * 808 808

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +2 808 808
+4 * 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=808 0x40439c 107 
* * 444366 149904 145060 7 0 40 7 0 40 17192 978 1612
+5 * 808 808
+1 * 808 808

fn=(116)
0x40439c 107 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +10 808 808
+4 * 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=808 0x4047d7 -26 
* * 433054 145864 141020 7 0 40 7 0 40 17192 978 1612
+5 +1 808 808
+1 * 808 808

fn=(118)
0x4047d7 91 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +2 808 808
+4 * 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=808 0x4049e2 450 
* * 421742 141824 136980 7 0 40 7 0 40 17192 978 1612
+5 * 808 808
+1 * 808 808

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +10 808 808
+4 * 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(52)
calls=808 0x404829 -26 
* * 433054 145864 141020 25 3 3 25 3 3 17192 1005 1612 200
+5 +1 808 808
+1 * 808 808

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 3264 0 3264 1 0 0 1
+1 * 3264
+3 * 3264 0 3264 0 0 1 0 0 1
+4 +1 3264 3264
+4 * 3264 3264 0 1 1 0 1 1
+4 * 3264
+3 * 3264 3264
+4 * 3264 3264
+3 * 3264
+3 * 3264
+3 * 3264
+4 * 3264 3264
+1 * 3264 3264

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 +2 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=808 0x404236 -14 
* * 283185 49465 49914 23 28 18 23 28 18 41722 772 1616
+5 * 808 808
+4 * 808 0 808
+3 +1 808 808
+4 * 808 808 0 1 0 0 1
+3 * 808 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+3 * 808 808
+4 * 808
+4 * 808
+3 * 808 808
+4 * 808 0 808
+4 +1 808 808
+1 * 808 808

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 +2 808 808
+4 * 808 808 0 1 0 0 1
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=808 0x403fbe -14 
* * 246003 43662 43209 24 11 42 24 11 42 34635 1300 1616
+5 * 808 808
+4 * 808 0 808
+3 +1 808 808
+4 * 808 808
+3 * 808 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+3 * 808 808
+4 * 808
+4 * 808
+3 * 808 808
+4 * 808 0 808
+4 +1 808 808
+1 * 808 808

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 404 0 404
+1 * 404
+3 * 404 0 0 1 0 0 1
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404 0 0 0 0 0 0 0 0 404
jcnd=8/404 +51 +10 
* * 
+2 +3 396 396
+4 * 396 396
+4 * 396 396
+4 -1 396 396
+4 * 396
+3 * 396
+3 * 396 0 396
cfi=(3)
cfn=(264)
calls=396 0x4036b1 215 
* * 15048 5148 5544 0 25 13 0 25 13 396
+5 +2 396 396
+4 * 396 396
+4 * 396
+4 * 396 396
+4 * 396 0 396
+4 * 396
jump=396 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12002 3714 3244 23 2 30 23 2 30 719 50 47
+5 +2 404 404
+1 * 404 404

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1640 0 1640 1 0 0 1
+1 * 1640
+3 * 1640 0 1640 1 0 0 1
+4 +1 1640 1640
+4 * 1640 1640
+1 * 1640 1640

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+3 * 808 0 808
+4 * 808
+4 * 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=808 0x404380 726 
* * 8080 4040 3232
+5 * 808 808
+4 * 808 808
+1 * 808 808

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 808 0 808
+1 * 808
+3 * 808 0 808
+1 * 808
+4 * 808 0 808 1 0 0 1
+4 +2 808 808
+4 * 808
+3 * 808 0 808
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=808 0x40325e 113 
* * 4848 2424 1616
+5 * 808
+3 * 808 808
+4 * 808 808
+4 * 808 808
+4 * 808 808
+3 -1 808
+3 * 808
+3 * 808 0 808
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=808 0x40326c 148 
* * 25048 8080 9696 4 0 0 4
+5 +1 808 808
+4 * 808
+3 * 808 0 808
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=808 0x4031ec 159 
* * 162556 48988 31858 27 6 0 27 6 0 25136 387 1616
+5 * 808
jump=808 +28 * 
* * 
+28 * 808 0 0 1 0 0 1
+4 * 808 808
+1 * 808 808
+1 * 808 808

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 816 0 816 1 0 0 1
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 * 816 0 816
+4 +2 816 816
+5 * 816 0 0 0 0 0 0 0 0 816
+2 +1 816 816
+4 * 816 816
+4 * 816 816
+4 * 816
+3 * 816
+3 * 816 0 816
cfi=(5)
cfn=(160)
calls=816 0x4044d6 -65 
* * 109366 29027 17465 24 6 0 24 6 0 24522 393 1632
+5 +1 816 816
+1 * 816 816

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 808 0 808
+1 * 808
+3 * 808 0 808
+1 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=808 0x4043ca -45 
* * 29088 10504 11312 4 0 4 4 0 4
+5 +1 808 808 0 1 0 0 1
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(20)
calls=808 0x404412 +43 
* * 303385 59161 55570 24 28 18 24 28 18 41722 772 1616
+5 * 808
jump=808 +28 * 
* * 
+28 * 808
+4 * 808 808
+1 * 808 808
+1 * 808 808

fn=(14)
0x4043ca 90 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808 0 0 1 0 0 1
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfi=(4)
cfn=(16)
calls=808 0x404804 +24 
* * 14544 4848 5656 2 0 1 2 0 1
+5 * 808 808
+4 * 808 0 808 0 0 2 0 0 2
+7 * 808 808
+4 * 808 0 808 1 0 0 1
+8 * 808 808
+4 * 808 0 808
+8 +1 808 808
+1 * 808 808

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+2 * 808 0 808
+2 * 808 0 808
+1 * 808 0 0 1 0 0 1
+4 * 808 0 808
+4 * 808 0 808
+4 +2 808 808
+4 * 808
+3 * 808 0 808
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=808 0x4039fc 117 
* * 4848 2424 1616 2 0 0 2
+5 * 808
+3 * 808 0 808
cfi=(3)
cfn=(84)
calls=808 0x4039ed -88 
* * 4848 2424 1616
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(2)
calls=808 0x402d74 645 
* * 10504 4848 1616
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808
+3 * 808
+3 * 808 0 808 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=808 0x403a0a 134 
* * 313067 69518 65833 31 11 42 31 11 42 34635 1300 1616
+5 +4 808 808
+4 * 808
+3 * 808 0 808
cfn=(106)
calls=808 0x40325e 113 
* * 4848 2424 1616 1 0 0 1
+5 * 808
+3 * 808 808
+4 * 808 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=808 0x403a98 565 
* * 20200 8080 6464 2 0 0 2
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(112)
calls=808 0x403a68 547 
* * 20200 8080 6464
+5 * 808
+3 * 808
+3 * 808
+3 * 808
+3 * 808 0 808
cfi=(11)
cfn=(114)
calls=808 0x403ac9 -60 
* * 456486 153944 149908 7 0 40 7 0 40 17192 978 1612
+5 -3 808 808
+4 * 808 0 808
+4 * 808
jump=808 +28 +4 
* * 
+28 +4 808
+4 * 808 808
+1 * 808 808
+2 * 808 808
+2 * 808 808
+1 * 808 808

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 816 0 816 1 0 0 1
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 * 816 0 816
+4 +2 816 816
+5 * 816 0 0 0 0 0 0 0 0 816 8
+2 +1 816 816
+4 * 816 816
+4 * 816 816
+4 * 816
+3 * 816
+3 * 816 0 816
cfi=(5)
cfn=(190)
calls=816 0x40452a -65 
* * 112568 30207 18603 2 0 0 2 0 0 25386 74 1632
+5 +1 816 816
+1 * 816 816

fn=(22)
0x404236 167 816 0 816 1 0 0 1
+1 * 816
+3 * 816
+4 * 816 0 816 1 0 0 1
+4 * 816 0 816
+4 0 816 816
+5 0 816 0 0 0 0 0 0 0 0 816
+2 0 816 816
+4 0 816 816
+4 0 816
+5 0 816
+3 0 816
+3 0 816 0 816
fi=(6) ???
cfi=(5)
cfn=(26)
calls=816 0x404730 99 
* 0 272667 45848 47116 24 28 25 24 28 25 41267 801 1632
+5 0 816
fi=(6)
jump=816 +7 0 
* 0 
+7 0 816 816
+1 0 816 816

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+4 * 808 0 808
+4 * 808
+4 * 808 0 0 1 0 0 1
+4 * 808
+3 * 808
+3 * 808 0 808
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=808 0x404468 726 
* * 8080 4040 3232 1 0 0 1
+5 * 808 808
+4 * 808 808
+1 * 808 808

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+3 * 808 0 808
+4 * 808
+4 * 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfi=(10)
cfn=(44)
calls=808 0x404468 726 
* * 8080 4040 3232
+5 * 808 808
+4 * 808 808
+1 * 808 808

fn=(86)
0x403a0a 134 808 0 808
+1 * 808
+3 * 808 0 808
+1 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=808 0x4042e2 -45 
* * 29088 10504 11312 5 0 0 5
+5 +1 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808 1 0 0 1
cfn=(94)
calls=808 0x40432a +43 
* * 266203 53358 48865 25 11 42 25 11 42 34635 1300 1616
+5 * 808
jump=808 +28 * 
* * 
+28 * 808
+4 * 808 808
+1 * 808 808
+1 * 808 808

fn=(88)
0x4042e2 90 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808 1 0 0 1
cfi=(4)
cfn=(90)
calls=808 0x4047b2 +24 
* * 14544 4848 5656 3 0 0 3
+5 * 808 808
+4 * 808 0 808
+7 * 808 808
+4 * 808 0 808
+8 * 808 808
+4 * 808 0 808
+8 +1 808 808
+1 * 808 808

fn=(156)
0x4031ec 159 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+1 * 808
+4 * 808 0 808
+4 +2 808 808
+4 * 808 808 0 1 0 0 1
+4 * 808
+3 * 808 808
+4 * 808 808
+3 * 808
+3 * 808
+3 * 808
+4 * 808
+3 * 808 808
+4 * 808 808
+3 -1 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(158)
calls=808 0x403ce6 +11 
* * 121348 33636 21354 24 6 0 24 6 0 25136 387 1616
+5 +1 808 808
+4 * 808
+3 * 808 0 808
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=808 0x4031b8 -82 
* * 18584 6464 6464 1 0 0 1
+5 * 808
jump=808 +28 * 
* * 
+28 * 808
+4 * 808 808
+1 * 808 808
+1 * 808 808

fn=(172)
0x4031b8 79 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 808
+4 * 808
+3 * 808 0 808
cfi=(4)
cfn=(174)
calls=808 0x403ccc +42 
* * 11312 4040 4040
+5 * 808 808
+1 * 808 808

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648 0 0 2 0 0 2
+4 * 1648
+3 * 1648 1648
+4 * 1648 1648
+3 * 1648
+3 * 1648
+3 * 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(106)
0x40325e 113 1640 0 1640 1 0 0 1
+1 * 1640
+3 * 1640 0 1640
+4 +1 1640 1640
+4 * 1640 1640
+1 * 1640 1640

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 824 0 824 1 0 0 1
+1 * 824
+3 * 824 0 824 0 0 1 0 0 1
+4 +1 824 824
+4 * 824 824
+1 * 824 824

fn=(82)
0x4039fc 117 824 0 824 1 0 0 1
+1 * 824
+3 * 824 0 824 1 0 0 1
+4 +1 824 824
+4 * 824 824
+1 * 824 824

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404 0 0 0 0 0 0 0 0 404 8
jcnd=8/404 +51 +10 
* * 
+2 +3 396 396
+4 * 396 396
+4 * 396 396
+4 -1 396 396
+4 * 396
+3 * 396
+3 * 396 0 396
cfi=(3)
cfn=(222)
calls=396 0x403373 215 
* * 15048 5148 5544 0 25 3 0 25 3 396 2
+5 +2 396 396
+4 * 396 396
+4 * 396
+4 * 396 396
+4 * 396 0 396
+4 * 396
jump=396 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12907 3942 3434 39 5 9 39 5 9 904 56 47
+5 +2 404 404
+1 * 404 404

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+2 * 808 0 808
+2 * 808 0 808
+1 * 808
+4 * 808 0 808 1 0 0 1
+4 * 808 0 808
+4 +2 808 808
+4 * 808
+3 * 808 0 808
cfn=(6)
calls=808 0x403b08 117 
* * 4848 2424 1616 1 0 1 1 0 1
+5 * 808
+3 * 808 0 808
cfi=(3)
cfn=(8)
calls=808 0x403afa -88 
* * 4848 2424 1616 1 0 0 1
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(10)
calls=808 0x402f54 645 
* * 10504 4848 1616 1 1 0 1 1
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808
+3 * 808
+3 * 808 0 808
cfn=(12)
calls=808 0x403b16 134 
* * 350249 75321 72538 29 28 22 29 28 22 41722 772 1616
+5 +4 808 808 0 1 0 0 1
+4 * 808
+3 * 808 0 808
cfn=(40)
calls=808 0x40333c 113 
* * 4848 2424 1616 2 0 0 2
+5 * 808
+3 * 808 808
+4 * 808 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(42)
calls=808 0x403ba4 565 
* * 20200 8080 6464 3 0 0 3
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(46)
calls=808 0x403b74 547 
* * 20200 8080 6464
+5 * 808
+3 * 808
+3 * 808
+3 * 808
+3 * 808 0 808 1 0 0 1
cfi=(11)
cfn=(48)
calls=808 0x403bd5 -60 
* * 456486 153944 149908 26 3 3 26 3 3 17192 1005 1612 200
+5 -3 808 808
+4 * 808 0 808
+4 * 808
jump=808 +28 +4 
* * 
+28 +4 808
+4 * 808 808
+1 * 808 808
+2 * 808 808
+2 * 808 808
+1 * 808 808

fn=(108)
0x403a98 565 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808 808
+4 * 808 0 808
+4 * 808
+4 * 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfi=(10)
cfn=(110)
calls=808 0x404380 726 
* * 8080 4040 3232 1 0 0 1
+5 * 808 808
+4 * 808 808
+1 * 808 808

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 808 0 808
+1 * 808
+3 * 808 0 808
+1 * 808
+4 * 808 0 808 1 0 0 1
+4 +2 808 808
+4 * 808
+3 * 808 0 808
cfn=(40)
calls=808 0x40333c 113 
* * 4848 2424 1616
+5 * 808
+3 * 808 808
+4 * 808 808
+4 * 808 808
+4 * 808 808
+3 -1 808
+3 * 808
+3 * 808 0 808
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=808 0x40334a 148 
* * 25048 8080 9696 2 0 0 2
+5 +1 808 808
+4 * 808
+3 * 808 0 808
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=808 0x4032ca 159 
* * 165722 50152 32990 3 0 0 3 0 0 25992 65 1616
+5 * 808
jump=808 +28 * 
* * 
+28 * 808 0 0 1 0 0 1
+4 * 808 808
+1 * 808 808
+1 * 808 808

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 816 0 816 1 0 0 1
+1 * 816 0 0 1 0 0 1
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 0 816 816
+5 0 816 0 0 0 0 0 0 0 0 816
+2 0 816 816
+4 0 816 816
+4 0 816
+5 0 816
+3 0 816
+3 0 816 0 816
fi=(6)
cfi=(5)
cfn=(100)
calls=816 0x40461a 99 
* 0 236426 40289 40607 38 16 47 38 16 47 34373 1344 1632
+5 0 816
fi=(6)
jump=816 +7 0 
* 0 
+7 0 816 816
+1 0 816 816

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 247450 0 247450
+1 * 247450
+3 * 247450 0 247450
+4 * 247450 0 247450
+4 +1 247450 247450
+4 * 247450 247450
+3 * 247450 247450
+4 * 247450
+4 * 247450
+3 * 247450 247450
+1 * 247450 247450

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 247450 0 247450
+1 * 247450
+3 * 247450 0 247450 1 0 0 1
+4 * 247450 0 247450
+4 +1 247450 247450
+4 * 247450 247450
+3 * 247450 247450
+4 * 247450
+4 * 247450
+3 * 247450 247450
+1 * 247450 247450

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 808
+4 * 808
+3 * 808 0 808
cfi=(4)
cfn=(194)
calls=808 0x403d7e +42 
* * 11312 4040 4040 1 0 0 1
+5 * 808 808
+1 * 808 808

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+1 * 808
+4 * 808 0 808
+4 +2 808 808
+4 * 808 808
+4 * 808
+3 * 808 808
+4 * 808 808
+3 * 808
+3 * 808
+3 * 808
+4 * 808
+3 * 808 808
+4 * 808 808
+3 -1 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(188)
calls=808 0x403d98 +11 
* * 124514 34800 22486 1 0 0 1 0 0 25992 65 1616
+5 +1 808 808
+4 * 808
+3 * 808 0 808
cfn=(192)
calls=808 0x403296 -82 
* * 18584 6464 6464 1 0 0 1
+5 * 808
jump=808 +28 * 
* * 
+28 * 808
+4 * 808 808
+1 * 808 808
+1 * 808 808

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616
+4 * 1616 0 1616 1 0 0 1
+4 +1 1616 1616
+4 * 1616
+3 * 1616 0 1616
cfi=(13)
cfn=(58)
calls=1616 0x404d8f -77 
* * 9696 4848 3232 1 0 0 1
+5 * 1616 1616
+1 * 1616 1616

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 824 0 824
+1 * 824
+3 * 824
+4 * 824 0 824 1 0 0 1
+4 * 824 0 824
+4 * 824 0 824
+4 +2 824 824
+4 * 824 824
+4 * 824
+3 * 824
+3 * 824
+4 * 824 0 824
+4 +1 824 824
+5 * 824 0 0 0 0 0 0 0 0 824
jcnd=8/824 +33 +2 
* * 
+2 +1 816 816
+4 * 816
+8 * 816 816
+4 * 816 816
+4 * 816
+3 * 816 0 0 1 0 0 1
+3 * 816 0 816 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=816 0x3877c83840 0 
* * 270960 89620 87993 11 2 20 11 2 20 16468 1009 811 200
* * 816 816 0 1 1 0 1 1 0 0 0 816
+5 +1 824 824
+4 * 824
+8 * 824 824
+4 * 824
+3 +1 824 824
+1 * 824 824

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 824 0 824
+1 * 824
+3 * 824
+4 * 824 0 824 1 0 0 1
+4 * 824 0 824
+4 * 824 0 824 0 0 1 0 0 1
+4 +2 824 824
+4 * 824 824
+4 * 824
+3 * 824
+3 * 824
+4 * 824 0 824
+4 +1 824 824
+5 * 824 0 0 0 0 0 0 0 0 824
jcnd=8/824 +33 +2 
* * 
+2 +1 816 816
+4 * 816
+8 * 816 816
+4 * 816 816
+4 * 816
+3 * 816
+3 * 816 0 816
cob=(2)
cfi=(9)
cfn=(78)
calls=816 0x3877c83840 0 
* * 270960 89620 87993 0 0 41 0 0 41 16468 984 811
* * 816 816 0 0 0 0 0 0 0 0 0 816
+5 +1 824 824
+4 * 824
+8 * 824 824
+4 * 824
+3 +1 824 824
+1 * 824 824

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808 1 0 0 1
+4 * 808 0 808
+4 * 808 0 808
+4 +8 808 0 808
+4 +3 808 808
+4 * 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(74)
calls=808 0x404f37 -22 
* * 292462 98192 92540 14 3 2 14 3 2 17192 1005 1612 200
+5 +1 808 808
+1 * 808 808

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 808 0 808
+1 * 808
+3 * 808 0 808
+2 * 808 0 808
+1 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +4 808 808
+4 * 808
+3 * 808 0 808
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=808 0x404878 277 
* * 12120 4848 4040 1 0 0 1
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=808 0x404d44 277 
* * 20200 7272 6464 2 0 0 2
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(132)
calls=808 0x404d44 277 
* * 20200 7272 6464
+5 * 808
+3 * 808
+3 * 808
+3 * 808 0 808
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=808 0x404d5e -49 
* * 304582 102232 97388 1 0 40 1 0 40 17192 978 1612
+5 +1 808
+4 * 808 808
+1 * 808 808
+2 * 808 808
+1 * 808 808

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 808 0 808
+1 * 808
+3 * 808 0 808
+1 * 808
+4 * 808 0 808 1 0 0 1
+4 * 808 0 808
+4 * 808 0 808
+4 +10 808 808
+4 * 808
+3 * 808 0 808
cfn=(56)
calls=808 0x404c38 288 
* * 12120 4848 4040 3 0 0 3
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(56)
calls=808 0x404c38 288 
* * 12120 4848 4040
+5 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=808 0x404c52 -36 
* * 379726 127280 122436 20 3 3 20 3 3 17192 1005 1612 200
+5 +1 808
+4 * 808 808
+1 * 808 808
+1 * 808 808

fn=(60)
0x404c52 424 808 0 808
+1 * 808
+3 * 808 0 808
+2 * 808 0 808
+1 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +4 808 808
+4 * 808
+3 * 808 0 808
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=808 0x40492d 277 
* * 12120 4848 4040 2 0 0 2
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=808 0x404d9d 277 
* * 20200 7272 6464 2 0 1 2 0 1
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(66)
calls=808 0x404d9d 277 
* * 20200 7272 6464
+5 * 808
+3 * 808
+3 * 808
+3 * 808 0 808
cfn=(72)
calls=808 0x404db7 -49 
* * 304582 102232 97388 15 3 2 15 3 2 17192 1005 1612 200
+5 +1 808
+4 * 808 808
+1 * 808 808
+2 * 808 808
+1 * 808 808

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 856 0 856 1 0 0 1
+1 * 856
+3 * 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856
+3 * 856 0 856 1 0 0 1
cfi=(13)
cfn=(64)
calls=856 -33 -66 
* * 5136 2568 1712
+5 * 856 856
+1 * 856 856

fn=(66)
0x404d9d 277 1616 0 1616
+1 * 1616
+3 * 1616
+4 * 1616 0 1616
+4 +1 1616 1616
+4 * 1616
+3 * 1616 0 1616
cfi=(13)
cfn=(68)
calls=1616 0x404f1a -58 
* * 25856 9696 8080 2 0 1 2 0 1
+5 * 1616 1616
+1 * 1616 1616

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 808 0 808
+1 * 808
+3 * 808 0 808
+1 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +10 808 808
+4 * 808
+3 * 808 0 808
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=808 0x404bc6 288 
* * 12120 4848 4040 3 0 0 3
+5 * 808
+3 * 808 808
+4 * 808
+3 * 808 0 808
cfn=(122)
calls=808 0x404bc6 288 
* * 12120 4848 4040
+5 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(126)
calls=808 0x404be0 -36 
* * 379726 127280 122436 4 0 40 4 0 40 17192 978 1612
+5 +1 808
+4 * 808 808
+1 * 808 808
+1 * 808 808

fn=(128)
0x404878 277 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856 1 0 0 1
+4 +1 856 856
+4 * 856
+3 * 856 0 856
cfi=(13)
cfn=(130)
calls=856 -33 -66 
* * 5136 2568 1712 0 0 1 0 0 1
+5 * 856 856
+1 * 856 856

fn=(132)
0x404d44 277 1616 0 1616
+1 * 1616
+3 * 1616
+4 * 1616 0 1616
+4 +1 1616 1616
+4 * 1616
+3 * 1616 0 1616
cfi=(13)
cfn=(134)
calls=1616 0x404e98 -58 
* * 25856 9696 8080 2 0 0 2
+5 * 1616 1616
+1 * 1616 1616

fn=(138)
0x404d5e 379 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 * 808 0 808
+4 * 808 0 808
+4 +8 808 0 808
+4 +3 808 808
+4 * 808 808
+4 * 808 808
+4 * 808
+3 * 808
+3 * 808 0 808
cfn=(140)
calls=808 0x404eb5 -22 
* * 292462 98192 92540 1 0 40 1 0 40 17192 978 1612
+5 +1 808 808
+1 * 808 808

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616
+4 * 1616 0 1616
+4 +1 1616 1616
+4 * 1616
+3 * 1616 0 1616
cfi=(13)
cfn=(124)
calls=1616 0x404d36 -77 
* * 9696 4848 3232 2 0 0 2
+5 * 1616 1616
+1 * 1616 1616

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616 0 1616
+4 +1 1616 1616
+4 * 1616 1616
+1 * 1616 1616

fn=(110)
0x404380 726 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616 0 1616
+4 * 1616 0 1616
+4 * 1616 1616
+4 * 1616 1616
+3 * 1616 1616
+4 * 1616 0 1616
+3 * 1616 1616
+1 * 1616 1616

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616 0 1616
+4 +1 1616 1616
+4 * 1616 1616
+1 * 1616 1616

fn=(44)
0x404468 726 1616 0 1616
+1 * 1616
+3 * 1616 0 1616
+4 * 1616 0 1616
+4 * 1616 1616
+4 * 1616 1616
+3 * 1616 1616
+4 * 1616 0 1616 1 0 0 1
+3 * 1616 1616
+1 * 1616 1616

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 816 0 816 1 0 0 1
+1 * 816
+3 * 816 0 816
+4 * 816 0 816 1 0 0 1
+4 * 816 816
+1 * 816 816

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 816 0 816 1 0 0 1
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 +4 816 816
+4 * 816 816
+4 * 816
+3 * 816
+3 * 816 0 816
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=816 0x40454c -14 
* * 4896 1632 2448 1 0 0 1
+5 +2 816 816
+1 * 816 816

fn=(150)
0x40326c 148 816 0 816
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 * 816 0 816
+4 +3 816 816 0 1 0 0 1
+4 * 816 816
+4 * 816
+3 * 816
+3 * 816 0 816
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=816 0x403d1a -29 
* * 14688 4896 5712 3 0 0 3
+5 +1 816 816
+1 * 816 816

fn=(180)
0x40334a 148 816 0 816
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 * 816 0 816
+4 +3 816 816
+4 * 816 816
+4 * 816
+3 * 816
+3 * 816 0 816
cfn=(182)
calls=816 0x403dcc -29 
* * 14688 4896 5712 2 0 0 2
+5 +1 816 816
+1 * 816 816

fn=(152)
0x403d1a 122 816 0 816 1 0 0 1
+1 * 816
+3 * 816
+4 * 816 0 816
+4 * 816 0 816
+4 +4 816 816
+4 * 816 816
+4 * 816
+3 * 816
+3 * 816 0 816
cfn=(154)
calls=816 0x4044f8 -14 
* * 4896 1632 2448 2 0 0 2
+5 +2 816 816
+1 * 816 816

fn=(184)
0x40454c 112 816 0 816 1 0 0 1
+1 * 816
+3 * 816 0 816
+4 * 816 0 816
+4 * 816 816
+1 * 816 816

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2538 463 466 3 0 7 3 0 7 361 29 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 2 4 0 2 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1110 303 197 2 0 0 2 0 0 210 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3479 707 662 16 5 5 16 5 5 554 44 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 0 1 0 0 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 404 0 404 1 0 0 1
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404
+3 * 404 0 404
cfi=(2)
cfn=(2)
calls=404 0x402d74 645 
* * 5252 2424 808
+5 * 404
+3 * 404 0 404
+3 +1 404 404
+6 * 404 0 404
+3 * 404 404
+6 * 404 0 404
+3 +1 404 404
+6 * 404 0 404 1 0 0 1
+3 * 404 404
+6 * 404 0 404
+3 +2 404 0 404
+7 * 404
jump=404 +86 * 
* * 
+2 +1 82214 82214
+3 * 82214
+3 * 82214 82214
+4 * 82214
+3 * 82214
+3 * 82214 0 82214
cfi=(2)
cfn=(144)
calls=82214 0x402d9a 770 
* * 904354 411070 246642
+5 * 82214 82214
+4 * 82214 82214
+5 * 82214
+4 * 82214 0 82214
+5 +1 82214 82214
+3 * 82214
+3 * 82214 82214
+4 * 82214
+3 * 82214
+3 * 82214 0 82214
cfi=(2)
cfn=(146)
calls=82214 0x402dba 770 
* * 904354 411070 246642 1 0 0 1
+5 * 82214 82214
+2 * 82214
+4 * 82214 82214
+5 * 82214
+4 * 82214 0 82214
+5 -2 82214 0 82214
+4 * 82214 82214
+3 * 82214
+3 * 82214 82214
+3 * 82214 0 0 0 0 0 0 0 0 82214 405
jcnd=81810/82214 -93 +1 
* * 
-9 * 404 404 0 1 0 0 1
+3 * 404
+3 * 404 404
+3 * 404 0 0 0 0 0 0 0 0 404
jcnd=404/404 -93 +1 
* * 
+2 +4 404 404
+3 * 404
+3 * 404
+4 * 404 404 0 1 0 0 1
+5 * 404
+4 * 404
+3 * 404 0 404
+5 +1 404 404
+3 * 404
+3 * 404
+4 * 404 404
+5 * 404
+4 * 404
+3 * 404 0 404
+5 +1 404 0 404
+7 * 404
jump=404 0x4016ee * 
* * 
+2 +1 82214 82214
+3 * 82214
+3 * 82214 82214
+4 * 82214
+3 * 82214 0 0 1 0 0 1
+3 * 82214 0 82214
cfi=(2)
cfn=(146)
calls=82214 0x402dba 770 
* * 904354 411070 246642
+5 * 82214 82214
+2 * 82214
+4 * 82214 82214
+5 * 82214 0 82214
+5 +1 82214 82214
+3 * 82214
+3 * 82214 82214
+4 * 82214
+3 * 82214
+3 * 82214 0 82214
cfi=(2)
cfn=(144)
calls=82214 0x402d9a 770 
* * 904354 411070 246642
+5 * 82214 82214
+4 * 82214 82214
+5 * 82214 0 82214
+5 +1 82214 82214
+5 * 82214 82214
+5 * 82214 82214
+5 * 82214
+4 * 82214 0 82214
+5 +1 82214 82214
+5 * 82214 82214
+5 * 82214 82214
+5 * 82214
+4 * 82214 0 82214
+5 -4 82214 0 82214
+4 * 82214 82214
+3 * 82214
+3 * 82214 82214
+3 * 82214 0 0 0 0 0 0 0 0 82214 405
jcnd=81810/82214 0x401672 +1 
* * 
-9 * 404 404 0 1 0 0 1
+3 * 404
+3 * 404 404
+3 * 404 0 0 0 0 0 0 0 0 404
jcnd=404/404 0x401672 +1 
* * 
+6 +6 404 404 0 1 0 0 1
+5 * 404 404
+5 * 404 0 404
+5 +2 404 404
+3 +1 404 0 404
+3 * 404 404
+5 * 404 404
+1 * 404 404

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 404
+7 * 404
+7 * 404
+3 * 404
+3 * 404 0 404
cfi=(2)
cfn=(4)
calls=404 0x4030b2 310 
* * 456864 134464 127061 63 32 25 63 32 25 29557 1069 1614 200
+5 * 404
+7 * 404
+7 * 404
+3 * 404
+3 * 404 0 404
cfi=(2)
cfn=(80)
calls=404 0x402ff4 310 
* * 438188 131559 123711 46 11 82 46 11 82 25993 1300 1614
+5 * 404 0 0 1 0 0 1
+7 * 404
+7 * 404
+3 * 404
+3 * 404 0 404
cfn=(142)
calls=404 0x401585 -52 
* * 8576516 3791944 1980004 8 0 0 8 0 0 165236 810
+5 * 404 0 404
+8 * 404 404
+6 * 404 0 404
+6 * 404
+7 * 404
+3 * 404 0 404
cfi=(2)
cfn=(148)
calls=404 0x402df4 414 
* * 105922 33382 24009 33 6 0 33 6 0 12568 197 808
+5 * 404
+7 * 404
+3 * 404 0 404 1 0 0 1
cfi=(2)
cfn=(178)
calls=404 0x402e74 414 
* * 107505 33964 24575 7 0 0 7 0 0 12996 34 808
+5 +2 404
+7 * 404
+7 * 404
+3 * 404
+3 * 404 0 404
cfi=(2)
cfn=(4)
calls=404 0x4030b2 310 
* * 455719 134393 126897 4 0 1 4 0 1 29357 708 1614
+5 * 404
+7 * 404
+7 * 404
+3 * 404
+3 * 404 0 404
cfi=(2)
cfn=(80)
calls=404 0x402ff4 310 
* * 437213 131495 123542 0 0 0 0 0 0 25834 978 1614
+5 * 404 404
+6 * 404 0 0 1 0 0 1
+7 * 404
+7 * 404 0 404
+6 * 404 404
+8 * 404
+3 * 404
+3 * 404 0 404
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=404 0x401719 -33 
* * 3970108 1653168 910414 4 0 0 4 0 0 82618 405
+5 * 404 0 404
+8 * 404 404
+6 * 404 0 404
+6 * 404
+7 * 404 0 0 1 0 0 1
+3 * 404 0 404
cfi=(2)
cfn=(148)
calls=404 0x402df4 414 
* * 105922 33382 24009 0 0 0 0 0 0 12568 190 808
+5 * 404
+7 * 404
+3 * 404 0 404
cfi=(2)
cfn=(178)
calls=404 0x402e74 414 
* * 107505 33964 24575 0 0 0 0 0 0 12996 31 808
+5 +2 404 404
+7 * 404
+3 * 404 0 404
cfi=(2)
cfn=(2)
calls=404 0x402d74 645 
* * 5252 2424 808
+5 * 404 404
+6 * 404
+3 * 404
+3 * 404
+3 * 404 404
+7 * 404
+3 * 404 0 0 1 0 0 1
+3 * 404 0 404
cfi=(2)
cfn=(144)
calls=404 0x402d9a 770 
* * 4444 2020 1212
+5 * 404
+3 * 404
+7 * 404
+3 * 404
+3 * 404 0 404
cfi=(2)
cfn=(200)
calls=404 0x402eda 901 
* * 38611 14382 11054 42 30 12 42 30 12 1704 66 47
+5 +1 404 404
+7 * 404
+3 * 404 0 404
cfi=(2)
cfn=(10)
calls=404 0x402f54 645 
* * 5252 2424 808 0 1 0 0 1
+5 * 404 404
+6 * 404
+3 * 404
+3 * 404
+3 * 404 404
+7 * 404 0 0 1 0 0 1
+3 * 404
+3 * 404 0 404
cfi=(2)
cfn=(146)
calls=404 0x402dba 770 
* * 4444 2020 1212
+5 * 404
+3 * 404
+7 * 404
+3 * 404
+3 * 404 0 404
cfi=(2)
cfn=(244)
calls=404 0x402f7a 901 
* * 37706 14154 10864 24 27 43 24 27 43 1519 50 47
+5 +1 404 404
+7 * 404
+3 * 404 0 404
cfi=(2)
cfn=(10)
calls=404 0x402f54 645 
* * 5252 2424 808
+5 * 404 404
+6 * 404
+3 * 404
+3 * 404
+3 * 404 404 0 1 0 0 1
+7 * 404
+3 * 404
+3 * 404 0 404
cfi=(2)
cfn=(146)
calls=404 0x402dba 770 
* * 4444 2020 1212
+5 * 404 404
+2 * 404
+4 * 404 404
+8 * 404 404
+8 * 404 0 404
+8 +1 404 404
+7 * 404
+3 * 404 0 404
cfi=(2)
cfn=(2)
calls=404 0x402d74 645 
* * 5252 2424 808
+5 * 404 404 0 1 0 0 1
+6 * 404
+3 * 404
+3 * 404
+3 * 404 404
+7 * 404
+3 * 404
+3 * 404 0 404
cfi=(2)
cfn=(144)
calls=404 0x402d9a 770 
* * 4444 2020 1212
+5 * 404 404
+4 * 404 404
+8 * 404
+4 * 404 404
+8 * 404
+3 * 404 0 404
+8 +2 404 0 404
+7 -12 404 404
+8 * 404 404
+7 * 404 0 0 0 0 0 0 0 0 404 1
jcnd=1/404 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 404
+7 * 404
+3 * 404 0 404
cfi=(2)
cfn=(2)
calls=404 0x402d74 645 
* * 5252 2424 808 2 0 1 2 0 1
+5 * 404
+3 * 404 404
+7 * 404
+3 * 404 0 404
cfi=(2)
cfn=(2)
calls=404 0x402d74 645 
* * 5252 2424 808 0 1 0 0 1
+5 * 404
+3 * 404 0 0 0 0 0 0 0 0 404 1
+2 * 404 0 0 1 0 0 1
+5 * 404
jump=404 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 404
+2 * 404 0 0 0 0 0 0 0 0 404
jcnd=404/404 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+5 +1 404 404
+4 * 404
+3 * 404 0 404
cfi=(2)
cfn=(2)
calls=404 0x402d74 645 
* * 5252 2424 808
+5 * 404
+3 * 404 0 404
+3 +1 404 404 0 1 0 0 1
+6 * 404 0 404
+3 * 404 404
+6 * 404 0 404
+3 +2 404 0 404
+7 * 404
jump=404 +86 * 
* * 
+2 +1 82214 82214
+3 * 82214
+3 * 82214 82214
+4 * 82214
+3 * 82214
+3 * 82214 0 82214
cfi=(2)
cfn=(144)
calls=82214 0x402d9a 770 
* * 904354 411070 246642
+5 * 82214 82214
+4 * 82214 82214
+5 * 82214
+4 * 82214 0 82214
+5 +1 82214 82214
+3 * 82214
+3 * 82214 82214
+4 * 82214
+3 * 82214
+3 * 82214 0 82214
cfi=(2)
cfn=(146)
calls=82214 0x402dba 770 
* * 904354 411070 246642
+5 * 82214 82214
+2 * 82214
+4 * 82214 82214
+5 * 82214
+4 * 82214 0 82214
+5 -2 82214 0 82214
+4 * 82214 82214
+3 * 82214
+3 * 82214 82214
+3 * 82214 0 0 0 0 0 0 0 0 82214 405
jcnd=81810/82214 -93 +1 
* * 
-9 * 404 404 0 1 0 0 1
+3 * 404
+3 * 404 404
+3 * 404 0 0 0 0 0 0 0 0 404
jcnd=404/404 -93 +1 
* * 
+2 +4 404 404
+3 * 404
+3 * 404 0 0 1 0 0 1
+4 * 404 404
+5 * 404
+4 * 404
+3 * 404 0 404
+5 +1 404 404
+3 * 404
+3 * 404
+4 * 404 404
+5 * 404
+4 * 404
+3 * 404 0 404
+5 +1 404 404
+5 * 404 404
+5 * 404 404
+5 * 404 0 0 1 0 0 1
+4 * 404
+3 * 404 0 404
+5 +2 404 404
+3 +1 404 0 404
+3 * 404 404
+5 * 404 404
+1 * 404 404

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1632 0 1632 1 0 0 1
+5 0 1632 0 1632
+5 0 1632
+3 0 1632 0 1632
+5 0 1632
+4 0 1632 1632 0 0 1 0 0 1
+7 0 1632 1632 0 0 1 0 0 1
+3 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632 2
+6 0 1632 1632 0 0 1 0 0 1
+7 0 1632 1632 0 1 1 0 1 1
+4 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632
+2 0 1632 1632 0 0 1 0 0 1
+3 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632
jcnd=1632/1632 +97 0 
* 0 
+18 0 1632
+3 0 1632
+3 0 1632 0 1632
cfn=(38) _int_malloc
calls=1632 0x3877c79a00 0 
* 0 372005 48601 59979 47 36 71 47 36 71 56056 2107
+5 0 1632
+3 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632
+2 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632
+2 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632 11
+2 0 1632 1632
+7 0 1632 0 0 0 0 0 0 0 0 1632
jcnd=1632/1632 +13 0 
* 0 
+13 0 1632 0 1632
+2 0 1632 0 0 0 0 0 0 0 0 1632 25
+6 0 1632
+3 0 1632 1632
+4 0 1632 1632
+5 0 1632 1632
+5 0 1632
+4 0 1632 1632
+1 0 1632 0 0 1 0 0 1
+5 0 1632 1632 0 0 1 0 0 1
+7 0 1632 0 0 0 0 0 0 0 0 1632
jcnd=1632/1632 +14 0 
* 0 
+14 0 1632 0 1632 1 0 0 1
+3 0 1632 0 0 0 0 0 0 0 0 1632
+6 0 1632
jump=1632 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1632 0 1632 1 0 0 1
+2 0 1632
+3 0 1632
+3 0 1632 0 1632
+2 0 1632
+3 0 1632 0 1632
+1 0 1632
+3 0 1632 0 1632
+1 0 1632
+3 0 1632
+4 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632
+6 0 1632
+4 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632 7
jcnd=10/1632 0x3877c838d1 0 
* 0 
+2 0 1622
+3 0 1622
+3 0 1622
+3 0 1622
+3 0 1622
+3 0 1622 0 0 0 0 0 0 0 0 1622
jcnd=1622/1622 +41 0 
* 0 
+41 0 1622 0 0 1 0 0 1
+3 0 1622 0 0 0 0 0 0 0 0 1622
jcnd=1622/1622 0x3877c839c0 0 
* 0 
+24 0 1622
+3 0 1622
+4 0 1622
+3 0 1622
+3 0 1622
+3 0 1622
+3 0 1622
+3 0 1622 0 0 0 0 0 0 0 0 1622 822
jcnd=818/1622 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 814
+10 0 814 814 0 0 1 0 0 1
+3 0 814
+4 0 814 0 814
+3 0 814
+4 0 814
+4 0 814 0 0 0 0 0 0 0 0 814
jcnd=814/814 -18 0 
* 0 
-18 0 2498 2498
+3 0 2498
+4 0 2498 0 2498
+3 0 2498
+4 0 2498
+4 0 2498 0 0 0 0 0 0 0 0 2498 11
jcnd=1684/2498 -18 0 
* 0 
+2 0 1632
+4 0 1632
+3 0 1632 1632
+1 0 1632 1632
+1 0 1632 1632
+2 0 1632 1632 0 1 0 0 1
+2 0 1632 1632
0x3877c839c0 0 1622 0 0 1 0 0 1
+3 0 1622
+3 0 1622
+3 0 1622
+4 0 1622 0 1622 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1622 0x3877c89b20 0 
* 0 449626 167768 164524 6 1 60 6 1 60 21484 1153 1622 200
+5 0 1622
jump=1622 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1632 1632 0 1 1 0 1 1
+7 0 1632 1632 0 0 1 0 0 1
+3 0 1632
+3 0 1632 0 0 1 0 0 1 0 0 1632
+6 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632
+6 0 1632 1632
+4 0 1632
+4 0 1632
+2 0 1632 0 0 0 0 0 0 0 0 1632 2
+2 0 1632
+2 0 1632
+7 0 1632 0 0 0 0 0 0 0 0 1632
jcnd=1632/1632 +14 0 
* 0 
+14 0 1632
+2 0 1632
cfn=(170) _int_free
calls=1632 0x3877c78650 0 
* 0 171342 46178 27908 21 2 0 21 2 0 41748 465

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 6
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1632 0 1632 1 0 0 1
+2 0 1632 0 1632
+2 0 1632 0 1632
+2 0 1632
+3 0 1632 0 1632
+2 0 1632 0 1632
+1 0 1632 0 1632
+1 0 1632
+3 0 1632
+4 0 1632 1632
+4 0 1632 0 1632
+4 0 1632
+3 0 1632
+4 0 1632
+3 0 1632
+3 0 1632
+3 0 1632 0 0 1 0 0 1 0 0 1632
+6 0 1632
+4 0 1632 0 0 0 0 0 0 0 0 1632
+6 0 1632
+4 0 1632 0 0 0 0 0 0 0 0 1632
+6 0 1632 1632
+7 0 1632 0 0 0 0 0 0 0 0 1632 4
jcnd=1508/1632 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1508
+2 0 1508 0 0 0 0 0 0 0 0 1508
+6 0 1508 1508 0 1 0 0 1
+4 0 1508
+3 0 1508
+2 0 1508 0 0 0 0 0 0 0 0 1508
jcnd=1508/1508 0x3877c78a40 0 
* 0 
+6 0 1508 1508
+4 0 1508
+3 0 1508 0 0 0 0 0 0 0 0 1508
+6 0 1508 1508
+5 0 1508
+4 0 1508 0 0 0 0 0 0 0 0 1508
jcnd=1508/1508 0x3877c7907c 0 
* 0 
+6 0 1508 1508
+5 0 1508
+4 0 1508 0 0 0 0 0 0 0 0 1508
+6 0 1508
+4 0 1508 0 0 1 0 0 1 0 0 1508
+6 0 1508
+4 0 1508 1508
+7 0 1508 0 0 0 0 0 0 0 0 1508
+6 0 1508 1508
+6 0 1508
+2 0 1508 0 0 0 0 0 0 0 0 1508
+6 0 1508 1508
+4 0 1508 0 0 0 0 0 0 0 0 1508 5
jcnd=1504/1508 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1508 1508 0 1 0 0 1
+4 0 1508 0 0 0 0 0 0 0 0 1508 190
jcnd=190/1508 0x3877c78bf0 0 
* 0 
+6 0 1318 1318
+6 0 1318 0 0 1 0 0 1 0 0 1318 65
jcnd=50/1318 0x3877c78a78 0 
* 0 
+6 0 1268 1268
+5 0 1268 1268
+5 0 1268 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268
+9 0 1268 0 1268
+4 0 1268 0 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268 180
jcnd=571/1268 +16 0 
* 0 
+2 0 697 697
+5 0 697
+3 0 697 0 0 1 0 0 1 0 0 697 1
jcnd=1/697 0x3877c78ee4 0 
* 0 
+6 0 1268
+3 0 1268
+4 0 1268 1268
+4 0 1268 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
-12 0 50
+4 0 50 50
+4 0 50 50
+4 0 50 0 0 0 0 0 0 0 0 50
+6 0 1318
+7 0 1318 0 1318
+4 0 1318 0 1318
+4 0 1318 0 0 0 0 0 0 0 0 1318 18
jcnd=212/1318 +18 0 
* 0 
+2 0 1106 0 1106
+8 0 1106 0 1106
+8 0 1106 0 1106
+4 0 1106
+3 0 1106 0 1106 1 0 0 1
+4 0 1106
+4 0 1106 0 1106
+4 0 1106 0 1106
+4 0 1106
+7 0 1106 0 0 0 0 0 0 0 0 1106
jcnd=1106/1106 0x3877c78b20 0 
* 0 
-30 0 212 0 212
+4 0 212
+3 0 212 0 212
+4 0 212
+4 0 212 0 212
+4 0 212 0 212
+4 0 212
+7 0 212 0 0 0 0 0 0 0 0 212
jcnd=212/212 0x3877c78b20 0 
* 0 
-7 0 190
+7 0 190 0 0 0 0 0 0 0 0 190
jcnd=190/190 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1508 0 0 1 0 0 1
+5 0 1508 1508
+4 0 1508 1508
+7 0 1508 0 0 0 0 0 0 0 0 1508
jcnd=1508/1508 +16 0 
* 0 
+16 0 1508 0 1508
+5 0 1508 0 0 0 0 0 0 0 0 1508
+6 0 1508
+3 0 1508
jump=1508 0x3877c7878f 0 
* 0 
+10 0 50 0 50
+6 0 50 0 0 1 0 0 1
jump=50 0x3877c78885 0 
* 0 
0x3877c78b20 0 1508 1508 0 1 0 0 1
+4 0 1508
+2 0 1508 0 0 0 0 0 0 0 0 1508
+6 0 1508 1508
+7 0 1508 0 0 0 0 0 0 0 0 1508
jcnd=1508/1508 +15 0 
* 0 
+15 0 1508 0 1508 1 0 0 1
+4 0 1508 0 0 0 0 0 0 0 0 1508
+6 0 1508
+4 0 1508 1508
+1 0 1508 1508
+1 0 1508 1508
+2 0 1508 1508
+2 0 1508 1508
+2 0 1508 1508
+2 0 1508 1508
0x3877c78bf0 0 190 0 0 1 0 0 1
+3 0 190 0 190
+4 0 190
+3 0 190
+4 0 190 0 190 1 0 0 1
+4 0 190
jump=190 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+5 0 1 0 1
+4 0 1 1
+5 0 1 0 1 1 0 0 1
+4 0 1
jump=1 0x3877c78882 0 
* 0 
0x3877c7907c 0 1508 1508 0 1 1 0 1 1
+4 0 1508 0 0 1 0 0 1
+7 0 1508
+4 0 1508
+3 0 1508
+3 0 1508 0 0 0 0 0 0 0 0 1508
jcnd=1508/1508 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1622 0 0 1 0 0 1
+7 0 1622
+3 0 1622
+3 0 1622 1622 0 0 1 0 0 1
+4 0 1622
+4 0 1622 0 0 0 0 0 0 0 0 0 0 1622 200
jump=200 0x3877c89be8 0 
* 0 
jump=210 0x3877c89bd0 0 
* 0 
jump=200 0x3877c89bb8 0 
* 0 
jump=200 +11 0 
* 0 
jump=200 0x3877c89c48 0 
* 0 
jump=202 0x3877c89c30 0 
* 0 
jump=200 0x3877c89c18 0 
* 0 
jump=210 0x3877c89c00 0 
* 0 
+11 0 200 200
+3 0 200
+4 0 200
+4 0 200 200
+4 0 200
+4 0 200 0 200
+4 0 200
+9 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-40 0 20262 20262
+4 0 20262 0 20262 0 0 33 0 0 33
+4 0 20262 20262
+4 0 20262 0 20262 0 0 3 0 0 3
+4 0 20262 20262
+4 0 20262 0 20262 0 0 3 0 0 3
+4 0 20262 20262
+4 0 20262 0 20262 0 0 15 0 0 15
+4 0 20262
+4 0 20262
+4 0 20262 0 0 0 0 0 0 0 0 20262 1149
jcnd=1586/20262 0x3877c89c60 0 
* 0 
-32 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202
jcnd=10/202 0x3877c89c60 0 
* 0 
-24 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-16 0 210 210 0 1 0 0 1
+4 0 210 0 210
+4 0 210 0 0 1 0 0 1
+4 0 210
+4 0 210 0 0 0 0 0 0 0 0 210 4
jcnd=10/210 0x3877c89c60 0 
* 0 
+6 0 19452
+4 0 19452 19452
+3 0 19452 0 19452 0 0 3 0 0 3
+3 0 19452 19452
+4 0 19452 0 19452 0 0 1 0 0 1
+4 0 19452 19452
+4 0 19452 0 19452 0 0 1 0 0 1
+4 0 19452 19452
+4 0 19452 0 19452
+4 0 19452
jump=19452 -80 0 
* 0 
-30 0 200 200
+3 0 200 0 200
+3 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200 0 0 1 0 0 1
+4 0 200 200
+4 0 200 0 200
+4 0 200
jump=200 -80 0 
* 0 
-24 0 210 210
+4 0 210 0 210
+4 0 210 210
+4 0 210 0 210
+4 0 210 210
+4 0 210 0 210
+4 0 210
jump=210 -80 0 
* 0 
-16 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
jump=200 -80 0 
* 0 
+8 0 200 200
+3 0 200
+4 0 200 0 0 1 0 0 1
+4 0 200
+4 0 200
jump=200 -39 0 
* 0 
+9 0 210
+3 0 210 0 0 0 0 0 0 0 0 210
+6 0 210 210
+3 0 210
+4 0 210
jump=210 -72 0 
* 0 
+8 0 200
+4 0 200 200
+3 0 200 0 0 0 0 0 0 0 0 200
+2 0 200
+4 0 200
jump=200 -99 0 
* 0 
+11 0 210 210 0 1 0 0 1
+3 0 210
+4 0 210
+4 0 210
+4 0 210
jump=210 0x3877c89b78 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b70 0 
* 0 
+9 0 202 202
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b68 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b60 0 
* 0 
+9 0 1622 0 1622 1 0 0 1
+3 0 1622 1622

fn=(104) alloc_perturb
0x3877c77180 0 1502 1502 0 1 0 0 1
+6 0 1502
+2 0 1502 0 0 0 0 0 0 0 0 1502 34
+2 0 1502 1502

fn=(38)
0x3877c79a00 0 1632 0 1632 1 0 0 1
+2 0 1632
+3 0 1632 0 1632
+2 0 1632 0 1632
+2 0 1632 0 1632 0 0 1 0 0 1
+2 0 1632
+3 0 1632 0 1632
+1 0 1632 0 1632
+1 0 1632
+4 0 1632
+4 0 1632 0 0 0 0 0 0 0 0 1632
+6 0 1632
+4 0 1632
+6 0 1632
+3 0 1632
+4 0 1632
+4 0 1632
+4 0 1632
+3 0 1632 0 0 0 0 0 0 0 0 1632
+6 0 1632 1632 0 1 1 0 1 1
+7 0 1632 0 0 0 0 0 0 0 0 1632 7
jcnd=1510/1632 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 130 130
+6 0 130
+4 0 130
+2 0 130 0 0 0 0 0 0 0 0 130
+6 0 130
+3 0 130
+4 0 130 130
+1 0 130 130
+1 0 130 130
+2 0 130 130
+2 0 130 130
+2 0 130 130
+2 0 130 130
-14 0 1502
+4 0 1502 1502
+1 0 1502 1502
+1 0 1502 1502
+2 0 1502 1502
+2 0 1502 1502
+2 0 1502 1502
+2 0 1502 1502
+7 0 1527
+7 0 1527 0 0 1 0 0 1 0 0 1527 7
jcnd=624/1527 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 5 0 0 5
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 624 0 0 1 0 0 1
+3 0 624
+4 0 624
+4 0 624 0 0 1 0 0 1 0 0 624
jcnd=624/624 0x3877c7a1a4 0 
* 0 
+30 0 624 624
+6 0 624
+5 0 624 0 0 0 0 0 0 0 0 624 1
jcnd=623/624 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 920 249 194 8 2 0 8 2 0 190 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1526 0 0 1 0 0 1
+3 0 1526
+3 0 1526
+3 0 1526
+4 0 1526
+3 0 1526
+4 0 1526 0 1526
+5 0 1526
+3 0 1526 0 1526
+4 0 1526 0 1526
+4 0 1526 0 1526
+5 0 1526
+3 0 1526
+3 0 1526
+3 0 1526
+3 0 1526
+4 0 1526
+4 0 1526 0 0 1 0 0 1
+4 0 1526 0 1526
+4 0 1526
+4 0 1526 0 1526
+5 0 1526 0 1526
+5 0 1526
+3 0 1526
+3 0 1526 0 1526
+5 0 1526
+5 0 1526
+3 0 1526 0 1526
+4 0 1526 0 1526
+4 0 1526
+6 0 1526 0 1526
+4 0 1526 0 1526
+5 0 1526 0 0 1 0 0 1
+3 0 1526
+3 0 1526
+3 0 1526
jump=1526 +87 0 
* 0 
+8 0 651
+3 0 651
+4 0 651
+2 0 651
+2 0 651
+3 0 651
+3 0 651
+3 0 651
+2 0 651
+2 0 651
+5 0 651
+2 0 651 651
+4 0 651
+3 0 651
+4 0 651 0 651
+4 0 651 0 651
+8 0 651
+7 0 651 0 651
+4 0 651 0 651
+4 0 651 0 651
+4 0 651 0 0 0 0 0 0 0 0 651
-38 0 852
+3 0 852
+4 0 852 0 852
+4 0 852 0 852
+8 0 852
+7 0 852 0 852
+4 0 852 0 852
+4 0 852 0 852
+4 0 852 0 0 0 0 0 0 0 0 852
+6 0 3030 3030 0 1 0 0 1
+4 0 3030
+3 0 3030 0 0 0 0 0 0 0 0 3030 154
jcnd=1239/3030 0x3877c79ef0 0 
* 0 
+6 0 1791 1791
+4 0 1791 1791
+4 0 1791
+4 0 1791 0 0 0 0 0 0 0 0 1791
+6 0 1791 1791 0 1 0 0 1
+7 0 1791 0 0 0 0 0 0 0 0 1791
+6 0 1791
+4 0 1791
+7 0 1791 0 0 0 0 0 0 0 0 1791 6
jcnd=719/1791 +11 0 
* 0 
+2 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072 174
jcnd=881/1072 0x3877c79e28 0 
* 0 
+6 0 1528
+3 0 1528 0 1528
+4 0 1528 0 1528
+5 0 1528 0 0 0 0 0 0 0 0 1528 16
jcnd=25/1528 0x3877c7a090 0 
* 0 
+6 0 1503
+7 0 1503 0 0 0 0 0 0 0 0 1503 292
jcnd=651/1503 0x3877c79c50 0 
* 0 
+6 0 852 0 0 1 0 0 1
+3 0 852
+4 0 852
+4 0 852 0 0 0 0 0 0 0 0 852 4
jcnd=454/852 0x3877c79db0 0 
* 0 
+6 0 398
+3 0 398
+4 0 398
+2 0 398
+2 0 398
+3 0 398
+3 0 398
+8 0 398
+3 0 398
+2 0 398
+2 0 398
+4 0 398 398
+4 0 398
+3 0 398 0 0 0 0 0 0 0 0 398 3
jcnd=398/398 0x3877c79e15 0 
* 0 
-36 0 454
+2 0 454
+2 0 454
+3 0 454
+3 0 454
+8 0 454
+3 0 454
+2 0 454
+2 0 454
+4 0 454 454 0 0 1 0 0 1
+4 0 454
+3 0 454 0 0 1 0 0 1 0 0 454
jcnd=454/454 0x3877c79e15 0 
* 0 
0x3877c79db0 0 454 0 0 1 0 0 1
+3 0 454
+4 0 454
+4 0 454 0 0 0 0 0 0 0 0 454
+2 0 454
+3 0 454 0 0 1 0 0 1
+7 0 454
jump=454 0x3877c79d18 0 
* 0 
+78 0 852 0 852
+4 0 852 0 852
+4 0 852
+3 0 852
jump=852 0x3877c79c73 0 
* 0 
+8 0 881 881 0 1 0 0 1
+4 0 881
+3 0 881 0 0 0 0 0 0 0 0 881 252
jcnd=443/881 0x3877c79ce1 0 
* 0 
+6 0 438 438
+5 0 438 0 0 0 0 0 0 0 0 438 8
jcnd=175/438 0x3877c79ce1 0 
* 0 
+6 0 263 0 0 1 0 0 1
+3 0 263
+3 0 263
+3 0 263
+7 0 263 0 263
+4 0 263 0 263
+4 0 263
+3 0 263 0 263
+4 0 263 0 263 0 0 29 0 0 29
+4 0 263 0 263
+4 0 263 0 0 0 0 0 0 0 0 263 7
jcnd=13/263 +18 0 
* 0 
+2 0 250 0 250
+8 0 250 0 250
+8 0 250
+7 0 250 0 250
+4 0 250
+3 0 250
+3 0 250
+3 0 250
+4 0 250
+3 0 250
+4 0 250
+3 0 250
+3 0 250
+4 0 250 0 250
+4 0 250 0 250
+4 0 250
+4 0 250
+3 0 250 0 250
cfn=(104)
calls=250 0x3877c77180 0 
* 0 1000 500 0 0 0 0 0 0 0 250
-56 0 13
+7 0 13 0 13 1 0 0 1
+4 0 13
+3 0 13
+3 0 13
+3 0 13
+4 0 13
+3 0 13
+4 0 13
+3 0 13
+3 0 13
+4 0 13 0 13
+4 0 13 0 13 0 0 2 0 0 2
+4 0 13
+4 0 13
+3 0 13 0 13
cfn=(104)
calls=13 0x3877c77180 0 
* 0 52 26 0 0 0 0 0 0 0 13
+5 0 263
+3 0 263
jump=263 0x3877c79ae3 0 
* 0 
+55 0 1239 0 0 1 0 0 1
+7 0 1239
+3 0 1239 0 0 0 0 0 0 0 0 1239 4
jcnd=612/1239 0x3877c7a0b0 0 
* 0 
+6 0 1222 1222 0 1 0 0 1
+4 0 1222
+3 0 1222
+3 0 1222
+2 0 1222
+4 0 1222
+3 0 1222
+3 0 1222
+2 0 1222
+2 0 1222
+2 0 1222
+2 0 1222 1222 0 0 1 0 0 1
+8 0 1222
+5 0 1222
+5 0 1222
+2 0 1222 0 0 0 0 0 0 0 0 1222
-2 0 510
+2 0 510 0 0 0 0 0 0 0 0 510 1
jcnd=1/510 +14 0 
* 0 
+2 0 1731
+2 0 1731 0 0 0 0 0 0 0 0 1731 41
jcnd=879/1731 +64 0 
* 0 
+2 0 852
+8 0 852
+3 0 852
+3 0 852 0 0 0 0 0 0 0 0 852 1
jcnd=1/852 0x3877c79fc0 0 
* 0 
-6 0 674
+3 0 674
+3 0 674 0 0 0 0 0 0 0 0 674 4
jcnd=189/674 0x3877c79fc0 0 
* 0 
+2 0 1336
+2 0 1336 1336
+8 0 1336
+2 0 1336 0 0 0 0 0 0 0 0 1336 28
jcnd=673/1336 -20 0 
* 0 
+2 0 663
+2 0 663
+5 0 663
+3 0 663
+3 0 663
+2 0 663
+2 0 663
+5 0 663 0 0 0 0 0 0 0 0 663 2
jcnd=3/663 +14 0 
* 0 
+2 0 660
+2 0 660
+4 0 660
+2 0 660
+2 0 660 0 0 0 0 0 0 0 0 660
jcnd=660/660 -8 0 
* 0 
-8 0 6244
+4 0 6244
+2 0 6244
+2 0 6244 0 0 0 0 0 0 0 0 6244 381
jcnd=4828/6244 -8 0 
* 0 
-2 0 879 0 0 1 0 0 1
+2 0 879 0 0 0 0 0 0 0 0 879 22
jcnd=756/879 -8 0 
* 0 
+2 0 1542 1542 0 0 14 0 0 14
+4 0 1542 0 0 1 0 0 1
+3 0 1542 0 0 0 0 0 0 0 0 1542 481
jcnd=1032/1542 0x3877c7a1cf 0 
* 0 
+6 0 510
+2 0 510
+4 0 510
+2 0 510
+2 0 510
+2 0 510 0 510
+8 0 510
jump=510 0x3877c79f30 0 
* 0 
+37 0 190 190 0 1 0 0 1
+5 0 190 190
+4 0 190
+4 0 190 190
+5 0 190 0 0 0 0 0 0 0 0 190
jcnd=190/190 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 25 0 0 1 0 0 1
+7 0 25 0 25
+6 0 25
+3 0 25 0 0 0 0 0 0 0 0 25
jcnd=25/25 0x3877c79ace 0 
* 0 
+16 0 612 612
+4 0 612
+4 0 612
+2 0 612
+5 0 612 612 0 1 4 0 1 4
+4 0 612
+3 0 612 0 0 0 0 0 0 0 0 612 17
jcnd=547/612 0x3877c79f00 0 
* 0 
+6 0 65 65
+4 0 65 0 0 0 0 0 0 0 0 65 5
jcnd=48/65 0x3877c79f00 0 
* 0 
+6 0 17
+3 0 17 17
+4 0 17 17
+4 0 17
+3 0 17
+4 0 17
+3 0 17 0 0 0 0 0 0 0 0 17
+2 0 17 17
+4 0 17
+3 0 17 0 0 0 0 0 0 0 0 17
jcnd=17/17 0x3877c7a650 0 
* 0 
+26 0 17 0 0 1 0 0 1
+3 0 17 17
+4 0 17
+3 0 17 17
+4 0 17 0 0 0 0 0 0 0 0 17
+6 0 17 17
+4 0 17 0 0 0 0 0 0 0 0 17
+6 0 17 17
+8 0 17 0 17
+4 0 17 0 17
+4 0 17 0 0 0 0 0 0 0 0 17
+2 0 17 17 0 1 0 0 1
+4 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 17
jcnd=17/17 0x3877c7a659 0 
* 0 
+6 0 17
+4 0 17 0 0 0 0 0 0 0 0 17 4
jcnd=8/17 0x3877c7a2e3 0 
* 0 
+6 0 9 9
+4 0 9
+7 0 9 9
+4 0 9 0 0 0 0 0 0 0 0 9
+6 0 9
+4 0 9
+7 0 9 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x3877c7a285 0 
* 0 
+31 0 624 0 0 1 0 0 1
+3 0 624 0 624
+4 0 624
jump=624 0x3877c79b99 0 
* 0 
+36 0 1032 1032 0 1 3 0 1 3
+4 0 1032 1032 0 0 1 0 0 1
+4 0 1032
+3 0 1032 1032
+4 0 1032
+4 0 1032
+3 0 1032
+3 0 1032 1032
+4 0 1032 0 0 0 0 0 0 0 0 1032
+6 0 1032 1032
+4 0 1032 0 0 0 0 0 0 0 0 1032
+6 0 1032 1032 0 1 0 0 1
+8 0 1032 0 1032
+4 0 1032 0 1032
+4 0 1032 0 0 0 0 0 0 0 0 1032 66
jcnd=198/1032 +38 0 
* 0 
+2 0 834 834 0 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834
+2 0 834 834
+5 0 834 0 0 0 0 0 0 0 0 834
+6 0 834 834
+4 0 834 0 834
+4 0 834 834
+4 0 834 0 834
+4 0 834
+4 0 834 0 0 0 0 0 0 0 0 834
-4 0 198
+4 0 198 0 0 0 0 0 0 0 0 198 8
jcnd=12/198 0x3877c7a2e3 0 
* 0 
+6 0 1020 1020
+4 0 1020 1020 0 1 0 0 1
+4 0 1020 0 0 0 0 0 0 0 0 1020
+6 0 1020
+4 0 1020
+7 0 1020 0 1020 0 0 19 0 0 19
+4 0 1020 0 1020
+4 0 1020 0 1020
+4 0 1020 0 1020
+4 0 1020 0 0 0 0 0 0 0 0 1020 5
jcnd=405/1020 +7 0 
* 0 
+2 0 615 0 615
+5 0 615
+7 0 615 0 0 0 0 0 0 0 0 615
jcnd=186/615 +18 0 
* 0 
-7 0 405
+7 0 405 0 0 0 0 0 0 0 0 405 4
jcnd=379/405 +18 0 
* 0 
+2 0 455 0 455 0 0 7 0 0 7
+8 0 455 0 455
+8 0 455
+7 0 455 0 455 0 0 2 0 0 2
+4 0 455
+3 0 455
+3 0 455
+4 0 455
+3 0 455
+4 0 455
+3 0 455
+3 0 455
+4 0 455 0 455
+4 0 455 0 455 0 0 1 0 0 1
+4 0 455
jump=455 +71 0 
* 0 
-46 0 574 0 0 1 0 0 1
+7 0 574 0 574 0 0 1 0 0 1
+4 0 574
+3 0 574
+3 0 574
+4 0 574
+3 0 574
+4 0 574
+3 0 574
+3 0 574
+4 0 574 0 574
+4 0 574 0 574 0 0 2 0 0 2
+4 0 574
jump=574 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 20
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=20/20 +7 0 
* 0 
+7 0 1049
+4 0 1049 0 0 1 0 0 1
+3 0 1049
+3 0 1049 0 1049
cfn=(104)
calls=1049 0x3877c77180 0 
* 0 4196 2098 0 1 0 0 1 0 0 1049 33
+5 0 1049
+3 0 1049
jump=1049 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 190 0 0 1 0 0 1
+7 0 190
+2 0 190
+4 0 190
+3 0 190
+3 0 190 0 190
+5 0 190
+3 0 190
+4 0 190
+3 0 190 0 0 1 0 0 1
+4 0 190
+4 0 190
+3 0 190
+4 0 190 0 190
+4 0 190 0 190 0 0 7 0 0 7
+4 0 190
+3 0 190
+3 0 190 0 190
cfn=(104)
calls=190 0x3877c77180 0 
* 0 760 380 0 0 0 0 0 0 0 190 1
+5 0 190
+3 0 190
jump=190 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 17 17 0 1 0 0 1
+4 0 17
jump=17 0x3877c7a10e 0 
* 0 
+5 0 17 17
+5 0 17 0 0 0 0 0 0 0 0 17
+2 0 17 17
+4 0 17 0 17
+4 0 17 17
+4 0 17 0 17
+4 0 17
jump=17 0x3877c7a14b 0 
* 0 

totals: 14940809 6172978 3532532 245 110 165 245 110 165 414160 5840 9782 200
