version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 246


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 230787951 - 231953241
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1340 0 0 1 0 0 1
+3 0 1340 0 0 0 0 0 0 0 0 1340
+2 0 1340
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1340 0x3877c7b8b0 0 
* 0 150849 38659 19857 21 4 0 21 4 0 36977 540
* 0 1340 1340 0 1 1 0 1 1 0 0 0 1340

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1340 0 1340 1 0 0 1
+1 0 1340
+5 0 1340
+3 0 1340 0 1340
+1 0 1340
+4 0 1340 0 0 1 0 0 1
+3 0 1340
+4 0 1340
+3 0 1340 0 1340 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1340 0x3877c7aa50 0 
* 0 363609 52818 52890 49 39 50 49 39 50 60907 2160
* 0 1340 1340 0 1 1 0 1 1 0 0 0 1340
+5 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340
jcnd=1340/1340 +96 0 
* 0 
+96 0 1340 0 0 1 0 0 1
+4 0 1340 1340
+1 0 1340 1340
+1 0 1340 1340

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 662
+4 * 662
+3 * 662 0 662
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=662 0x4044cc -35 
* * 3310 1324 1324
+5 * 662 662
+1 * 662 662

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 662 0 662 1 0 0 1
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662 1 0 0 1
+4 +1 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=662 0x4049d4 -35 
* * 3972 1324 1986 1 0 0 1
+5 * 662 662
+1 * 662 662

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 662 0 662 1 0 0 1
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 662
+4 * 662
+3 * 662 0 662
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=662 0x404520 -35 
* * 3310 1324 1324
+5 * 662 662
+1 * 662 662

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 662 0 662 1 0 0 1
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=662 0x404a28 -35 
* * 3972 1324 1986 1 0 1 1 0 1
+5 * 662 662
+1 * 662 662

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 662 0 662 1 0 0 1
+1 * 662
+3 * 662 0 662
+4 * 662 662
+4 * 662 662
+1 * 662 662

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 331 0 331
+1 * 331
+3 * 331
+4 * 331 0 331
+4 * 331 0 331
+4 * 331 0 331
+4 +1 331 331
+4 * 331 331
+4 * 331 331
+4 * 331
+3 * 331
+3 * 331 0 331
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=331 0x40406a -87 
* * 7944 2648 2979 0 21 13 0 21 13 331
+5 * 331 331
+1 * 331 331

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 662 0 662
+1 * 662
+3 * 662 0 662
+4 * 662 662
+4 * 662 662
+1 * 662 662

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 331 0 331
+1 * 331
+3 * 331
+4 * 331 0 331
+4 * 331 0 331
+4 * 331 0 331
+4 +1 331 331
+4 * 331 331
+4 * 331 331
+4 * 331
+3 * 331
+3 * 331 0 331
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=331 0x403df2 -87 
* * 7944 2648 2979 0 22 3 0 22 3 331 3
+5 * 331 331
+1 * 331 331

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 742 0 742
+1 * 742
+3 * 742 0 742
+4 +1 742 742
+4 * 742 742
+1 * 742 742

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1324 0 1324 1 0 0 1
+1 * 1324
+3 * 1324 0 1324
+4 +1 1324 1324 0 1 0 0 1
+4 * 1324 1324
+1 * 1324 1324

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 742 0 742
+1 * 742
+3 * 742 0 742 0 0 1 0 0 1
+4 +1 742 742
+4 * 742 742
+1 * 742 742

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1324 0 1324 1 0 0 1
+1 * 1324
+3 * 1324
+4 * 1324 0 1324
+4 +1 1324
+4 * 1324
+3 * 1324 0 1324
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1324 0x404ffe 790 
* * 7944 3972 2648 1 0 0 1
+5 * 1324 1324
+3 * 1324 1324
+1 * 1324 1324

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1324 0 1324 1 0 0 1
+1 * 1324
+3 * 1324 0 1324
+4 +1 1324 1324
+4 * 1324 1324
+1 * 1324 1324

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1324 0 1324 1 0 0 1
+1 * 1324
+3 * 1324
+4 * 1324 0 1324
+4 +1 1324
+4 * 1324
+3 * 1324 0 1324 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1324 0x40500c 790 
* * 7944 3972 2648 1 0 0 1
+5 * 1324 1324
+3 * 1324 1324
+1 * 1324 1324

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 662 0 662
+1 * 662
+3 * 662 0 662
+4 * 662 0 662
+4 * 662 662
+4 * 662 662
+1 * 662 662

fl=(5)
fn=(102)
0x4048de 113 686 0 686 1 0 0 1
+1 * 686
+3 * 686 0 686
+4 +1 686
+10 * 686 686
+1 * 686 686

fn=(266)
0x40406a 129 331 0 331
+1 * 331
+3 * 331
+4 * 331 0 331
+4 * 331 0 331
+4 * 331 0 331
+4 +1 331 331
+4 * 331
+3 * 331
+5 * 331 0 331
cfi=(16)
cfn=(226)
calls=331 0x402d61 -20 
* * 2317 993 993
+5 * 331
+3 * 331 0 0 0 0 0 0 0 0 331
+2 * 331 331
+4 * 331 331 0 0 21 0 0 21
+2 * 331 0 331 0 0 13 0 0 13
+2 * 331 331
+1 * 331 331

fn=(28)
0x404992 113 686 0 686 1 0 0 1
+1 * 686
+3 * 686 0 686
+4 +1 686
+10 * 686 686
+1 * 686 686

fn=(176)
0x4044cc 86 662 0 662
+1 * 662
+3 * 662 0 662
+4 * 662 662
+1 * 662 662

fn=(224)
0x403df2 129 331 0 331
+1 * 331
+3 * 331
+4 * 331 0 331
+4 * 331 0 331
+4 * 331 0 331
+4 +1 331 331
+4 * 331
+3 * 331
+5 * 331 0 331
cfi=(16)
cfn=(226)
calls=331 0x402d61 -20 
* * 2317 993 993
+5 * 331
+3 * 331 0 0 0 0 0 0 0 0 331 3
+2 * 331 331
+4 * 331 331 0 0 22 0 0 22
+2 * 331 0 331 0 0 3 0 0 3
+2 * 331 331
+1 * 331 331

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 670 0 670
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 * 670 0 670
+4 +1 670 670
+4 * 670
+3 * 670 0 670
cob=(5)
cfi=(8)
cfn=(164)
calls=670 0x387e4bb2f0 0 
* * 74246 18559 8803 23 4 0 23 4 0 18062 477 670
* * 670 670 0 1 1 0 1 1 0 0 0 670
+5 * 670 670
+1 * 670 670

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 670 0 670
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 * 670 0 670
+4 +1 670 670
+4 * 670
+3 * 670 0 670
cob=(5)
cfi=(8)
cfn=(164)
calls=670 0x387e4bb2f0 0 
* * 81963 21440 11054 0 1 0 0 1 0 20255 63 670
* * 670 670 0 0 0 0 0 0 0 0 0 670
+5 * 670 670
+1 * 670 670

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 670 0 670 1 0 0 1
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 * 670 0 670
+4 +2 670 670
+4 * 670
+3 * 670 0 670
cfn=(102)
calls=670 0x4048de +12 
* * 4020 1340 1340 1 0 0 1
+5 * 670 670
+4 * 670 0 0 1 0 0 1
+3 * 670
+2 * 670 0 0 0 0 0 0 0 0 670
jcnd=670/670 +7 +3 
* * 
+7 +3 670 670
+4 * 670
+4 * 670
+3 * 670 0 670
cob=(5)
cfi=(8)
cfn=(32)
calls=670 0x387e4bd0b0 0 
* * 193876 28551 26636 33 19 37 33 19 37 31609 1211 670
* * 670 670 0 0 0 0 0 0 0 0 0 670
+5 +1 670 670
+1 * 670 670

fn=(18)
0x404a28 81 662 0 662 1 0 0 1
+1 * 662
+3 * 662 0 662 0 0 1 0 0 1
+4 * 662 0 662
+4 * 662 662
+1 * 662 662

fn=(92)
0x4049d4 81 662 0 662 1 0 0 1
+1 * 662
+3 * 662 0 662
+4 * 662 0 662
+4 * 662 662
+1 * 662 662

fn=(196)
0x404520 86 662 0 662
+1 * 662
+3 * 662 0 662
+4 * 662 662
+1 * 662 662

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 670 0 670 1 0 0 1
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 * 670 0 670 1 0 0 1
+4 +2 670 670
+4 * 670
+3 * 670 0 670
cfn=(28)
calls=670 0x404992 +12 
* * 4020 1340 1340 1 0 0 1
+5 * 670 670
+4 * 670
+3 * 670
+2 * 670 0 0 0 0 0 0 0 0 670
jcnd=670/670 +7 +3 
* * 
+7 +3 670 670
+4 * 670
+4 * 670
+3 * 670 0 670
cob=(5)
cfi=(8)
cfn=(32)
calls=670 0x387e4bd0b0 0 
* * 191173 29627 30274 20 21 14 20 21 14 30638 949 670
* * 670 670 0 1 1 0 1 1 0 0 0 670
+5 +1 670 670
+1 * 670 670

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +2 662 662
+4 * 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=662 0x404484 107 
* * 332352 110736 106768 25 3 4 25 3 4 12574 770 1320 165
+5 * 662 662
+1 * 662 662

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +2 662 662 0 1 0 0 1
+4 * 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=662 0x404a36 450 
* * 313816 104116 100148 24 3 4 24 3 4 12574 770 1320 165
+5 * 662 662
+1 * 662 662

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +2 662 662
+4 * 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=662 0x40439c 107 
* * 332352 110736 106768 7 1 41 7 1 41 12574 755 1320
+5 * 662 662
+1 * 662 662

fn=(116)
0x40439c 107 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +10 662 662
+4 * 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=662 0x4047d7 -26 
* * 323084 107426 103458 7 1 41 7 1 41 12574 755 1320
+5 +1 662 662
+1 * 662 662

fn=(118)
0x4047d7 91 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +2 662 662
+4 * 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=662 0x4049e2 450 
* * 313816 104116 100148 7 1 41 7 1 41 12574 755 1320
+5 * 662 662
+1 * 662 662

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +10 662 662
+4 * 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(52)
calls=662 0x404829 -26 
* * 323084 107426 103458 25 3 4 25 3 4 12574 770 1320 165
+5 +1 662 662
+1 * 662 662

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2680 0 2680 1 0 0 1
+1 * 2680
+3 * 2680 0 2680 0 0 1 0 0 1
+4 +1 2680 2680
+4 * 2680 2680 0 1 1 0 1 1
+4 * 2680
+3 * 2680 2680
+4 * 2680 2680
+3 * 2680
+3 * 2680
+3 * 2680
+4 * 2680 2680
+1 * 2680 2680

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 +2 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=662 0x404236 -14 
* * 216997 37908 37879 24 20 8 24 20 8 31662 916 1324
+5 * 662 662
+4 * 662 0 662
+3 +1 662 662
+4 * 662 662 0 1 0 0 1
+3 * 662 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+3 * 662 662
+4 * 662
+4 * 662
+3 * 662 662
+4 * 662 0 662
+4 +1 662 662
+1 * 662 662

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 +2 662 662
+4 * 662 662 0 1 0 0 1
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=662 0x403fbe -14 
* * 218651 36567 34036 16 6 30 16 6 30 32419 1145 1324
+5 * 662 662
+4 * 662 0 662
+3 +1 662 662
+4 * 662 662
+3 * 662 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+3 * 662 662
+4 * 662
+4 * 662
+3 * 662 662
+4 * 662 0 662
+4 +1 662 662
+1 * 662 662

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 331 0 331
+1 * 331
+3 * 331 0 0 1 0 0 1
+4 * 331 0 331
+4 * 331 0 331
+4 +2 331 331
+4 * 331 331
+4 * 331 331
+4 * 331 331
+4 * 331
+3 * 331 0 0 0 0 0 0 0 0 331
jcnd=8/331 +51 +10 
* * 
+2 +3 323 323
+4 * 323 323
+4 * 323 323
+4 -1 323 323
+4 * 323
+3 * 323
+3 * 323 0 323
cfi=(3)
cfn=(264)
calls=323 0x4036b1 215 
* * 12274 4199 4522 0 21 9 0 21 9 323
+5 +2 323 323
+4 * 323 323
+4 * 323
+4 * 323 323
+4 * 323 0 323
+4 * 323
jump=323 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11777 3681 3210 20 2 28 20 2 28 675 54 47
+5 +2 331 331
+1 * 331 331

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348 0 1348 1 0 0 1
+4 +1 1348 1348
+4 * 1348 1348
+1 * 1348 1348

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+3 * 662 0 662
+4 * 662
+4 * 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=662 0x404380 726 
* * 6620 3310 2648
+5 * 662 662
+4 * 662 662
+1 * 662 662

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 662 0 662
+1 * 662
+3 * 662 0 662
+1 * 662
+4 * 662 0 662 1 0 0 1
+4 +2 662 662
+4 * 662
+3 * 662 0 662
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=662 0x40325e 113 
* * 3972 1986 1324
+5 * 662
+3 * 662 662
+4 * 662 662
+4 * 662 662
+4 * 662 662
+3 -1 662
+3 * 662
+3 * 662 0 662
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=662 0x40326c 148 
* * 20522 6620 7944 4 0 0 4
+5 +1 662 662
+4 * 662
+3 * 662 0 662
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=662 0x4031ec 159 
* * 125694 37550 23918 27 5 0 27 5 0 18530 470 1324
+5 * 662
jump=662 +28 * 
* * 
+28 * 662 0 0 1 0 0 1
+4 * 662 662
+1 * 662 662
+1 * 662 662

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 670 0 670 1 0 0 1
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 * 670 0 670
+4 +2 670 670
+5 * 670 0 0 0 0 0 0 0 0 670
+2 +1 670 670
+4 * 670 670
+4 * 670 670
+4 * 670
+3 * 670
+3 * 670 0 670
cfi=(5)
cfn=(160)
calls=670 0x4044d6 -65 
* * 82286 21239 12153 24 5 0 24 5 0 18062 477 1340
+5 +1 670 670
+1 * 670 670

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 662 0 662
+1 * 662
+3 * 662 0 662
+1 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=662 0x4043ca -45 
* * 23832 8606 9268 4 0 4 4 0 4
+5 +1 662 662 0 1 0 0 1
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(20)
calls=662 0x404412 +43 
* * 233547 45852 42513 25 20 8 25 20 8 31662 916 1324
+5 * 662
jump=662 +28 * 
* * 
+28 * 662
+4 * 662 662
+1 * 662 662
+1 * 662 662

fn=(14)
0x4043ca 90 662 0 662 1 0 0 1
+1 * 662
+3 * 662
+4 * 662 0 662 0 0 1 0 0 1
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfi=(4)
cfn=(16)
calls=662 0x404804 +24 
* * 11916 3972 4634 2 0 1 2 0 1
+5 * 662 662
+4 * 662 0 662 0 0 2 0 0 2
+7 * 662 662
+4 * 662 0 662 1 0 0 1
+8 * 662 662
+4 * 662 0 662
+8 +1 662 662
+1 * 662 662

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 662 0 662 1 0 0 1
+1 * 662
+3 * 662 0 662
+2 * 662 0 662
+2 * 662 0 662
+1 * 662 0 0 1 0 0 1
+4 * 662 0 662
+4 * 662 0 662
+4 +2 662 662
+4 * 662
+3 * 662 0 662
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=662 0x4039fc 117 
* * 3972 1986 1324 2 0 0 2
+5 * 662
+3 * 662 0 662
cfi=(3)
cfn=(84)
calls=662 0x4039ed -88 
* * 3972 1986 1324
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(2)
calls=662 0x402d74 645 
* * 8606 3972 1324
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662
+3 * 662
+3 * 662 0 662 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=662 0x403a0a 134 
* * 273597 57751 52572 23 6 30 23 6 30 32419 1145 1324
+5 +4 662 662
+4 * 662
+3 * 662 0 662
cfn=(106)
calls=662 0x40325e 113 
* * 3972 1986 1324 1 0 0 1
+5 * 662
+3 * 662 662
+4 * 662 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=662 0x403a98 565 
* * 16550 6620 5296 2 0 0 2
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(112)
calls=662 0x403a68 547 
* * 16550 6620 5296
+5 * 662
+3 * 662
+3 * 662
+3 * 662
+3 * 662 0 662
cfi=(11)
cfn=(114)
calls=662 0x403ac9 -60 
* * 342282 114046 110740 7 1 41 7 1 41 12574 755 1320
+5 -3 662 662
+4 * 662 0 662
+4 * 662
jump=662 +28 +4 
* * 
+28 +4 662
+4 * 662 662
+1 * 662 662
+2 * 662 662
+2 * 662 662
+1 * 662 662

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 670 0 670 1 0 0 1
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 * 670 0 670
+4 +2 670 670
+5 * 670 0 0 0 0 0 0 0 0 670 8
+2 +1 670 670
+4 * 670 670
+4 * 670 670
+4 * 670
+3 * 670
+3 * 670 0 670
cfi=(5)
cfn=(190)
calls=670 0x40452a -65 
* * 90003 24120 14404 0 1 0 0 1 0 20255 63 1340
+5 +1 670 670
+1 * 670 670

fn=(22)
0x404236 167 670 0 670 1 0 0 1
+1 * 670
+3 * 670
+4 * 670 0 670 1 0 0 1
+4 * 670 0 670
+4 0 670 670
+5 0 670 0 0 0 0 0 0 0 0 670
+2 0 670 670
+4 0 670 670
+4 0 670
+5 0 670
+3 0 670
+3 0 670 0 670
fi=(6) ???
cfi=(5)
cfn=(26)
calls=670 0x404730 99 
* 0 208593 34987 35634 24 22 14 24 22 14 31308 949 1340
+5 0 670
fi=(6)
jump=670 +7 0 
* 0 
+7 0 670 670
+1 0 670 670

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 662 0 662 1 0 0 1
+1 * 662
+3 * 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+4 * 662 0 662
+4 * 662
+4 * 662 0 0 1 0 0 1
+4 * 662
+3 * 662
+3 * 662 0 662
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=662 0x404468 726 
* * 6620 3310 2648 1 0 0 1
+5 * 662 662
+4 * 662 662
+1 * 662 662

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+3 * 662 0 662
+4 * 662
+4 * 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfi=(10)
cfn=(44)
calls=662 0x404468 726 
* * 6620 3310 2648
+5 * 662 662
+4 * 662 662
+1 * 662 662

fn=(86)
0x403a0a 134 662 0 662
+1 * 662
+3 * 662 0 662
+1 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=662 0x4042e2 -45 
* * 23832 8606 9268 5 0 0 5
+5 +1 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662 1 0 0 1
cfn=(94)
calls=662 0x40432a +43 
* * 235201 44511 38670 17 6 30 17 6 30 32419 1145 1324
+5 * 662
jump=662 +28 * 
* * 
+28 * 662
+4 * 662 662
+1 * 662 662
+1 * 662 662

fn=(88)
0x4042e2 90 662 0 662 1 0 0 1
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662 1 0 0 1
cfi=(4)
cfn=(90)
calls=662 0x4047b2 +24 
* * 11916 3972 4634 3 0 0 3
+5 * 662 662
+4 * 662 0 662
+7 * 662 662
+4 * 662 0 662
+8 * 662 662
+4 * 662 0 662
+8 +1 662 662
+1 * 662 662

fn=(156)
0x4031ec 159 662 0 662 1 0 0 1
+1 * 662
+3 * 662 0 662
+1 * 662
+4 * 662 0 662
+4 +2 662 662
+4 * 662 662 0 1 0 0 1
+4 * 662
+3 * 662 662
+4 * 662 662
+3 * 662
+3 * 662
+3 * 662
+4 * 662
+3 * 662 662
+4 * 662 662
+3 -1 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(158)
calls=662 0x403ce6 +11 
* * 91932 24972 15312 24 5 0 24 5 0 18530 470 1324
+5 +1 662 662
+4 * 662
+3 * 662 0 662
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=662 0x4031b8 -82 
* * 15226 5296 5296 1 0 0 1
+5 * 662
jump=662 +28 * 
* * 
+28 * 662
+4 * 662 662
+1 * 662 662
+1 * 662 662

fn=(172)
0x4031b8 79 662 0 662 1 0 0 1
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 662
+4 * 662
+3 * 662 0 662
cfi=(4)
cfn=(174)
calls=662 0x403ccc +42 
* * 9268 3310 3310
+5 * 662 662
+1 * 662 662

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1356 0 1356 1 0 0 1
+1 * 1356
+3 * 1356 0 1356
+4 +1 1356 1356
+4 * 1356 1356 0 0 2 0 0 2
+4 * 1356
+3 * 1356 1356
+4 * 1356 1356
+3 * 1356
+3 * 1356
+3 * 1356
+4 * 1356 1356
+1 * 1356 1356

fn=(106)
0x40325e 113 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348 0 1348
+4 +1 1348 1348
+4 * 1348 1348
+1 * 1348 1348

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 678 0 678 1 0 0 1
+1 * 678
+3 * 678 0 678 0 0 1 0 0 1
+4 +1 678 678
+4 * 678 678
+1 * 678 678

fn=(82)
0x4039fc 117 678 0 678 1 0 0 1
+1 * 678
+3 * 678 0 678 1 0 0 1
+4 +1 678 678
+4 * 678 678
+1 * 678 678

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 331 0 331
+1 * 331
+3 * 331
+4 * 331 0 331
+4 * 331 0 331
+4 +2 331 331
+4 * 331 331
+4 * 331 331
+4 * 331 331
+4 * 331
+3 * 331 0 0 0 0 0 0 0 0 331 10
jcnd=8/331 +51 +10 
* * 
+2 +3 323 323
+4 * 323 323
+4 * 323 323
+4 -1 323 323
+4 * 323
+3 * 323
+3 * 323 0 323
cfi=(3)
cfn=(222)
calls=323 0x403373 215 
* * 12274 4199 4522 0 21 2 0 21 2 323 3
+5 +2 323 323
+4 * 323 323
+4 * 323
+4 * 323 323
+4 * 323 0 323
+4 * 323
jump=323 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12793 3929 3412 45 14 11 45 14 11 880 78 47
+5 +2 331 331
+1 * 331 331

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 662 0 662 1 0 0 1
+1 * 662
+3 * 662 0 662
+2 * 662 0 662
+2 * 662 0 662
+1 * 662
+4 * 662 0 662 1 0 0 1
+4 * 662 0 662
+4 +2 662 662
+4 * 662
+3 * 662 0 662
cfn=(6)
calls=662 0x403b08 117 
* * 3972 1986 1324 1 0 1 1 0 1
+5 * 662
+3 * 662 0 662
cfi=(3)
cfn=(8)
calls=662 0x403afa -88 
* * 3972 1986 1324 1 0 0 1
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(10)
calls=662 0x402f54 645 
* * 8606 3972 1324 1 1 0 1 1
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662
+3 * 662
+3 * 662 0 662
cfn=(12)
calls=662 0x403b16 134 
* * 271943 59092 56415 30 20 12 30 20 12 31662 916 1324
+5 +4 662 662 0 1 0 0 1
+4 * 662
+3 * 662 0 662
cfn=(40)
calls=662 0x40333c 113 
* * 3972 1986 1324 2 0 0 2
+5 * 662
+3 * 662 662
+4 * 662 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(42)
calls=662 0x403ba4 565 
* * 16550 6620 5296 3 0 0 3
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(46)
calls=662 0x403b74 547 
* * 16550 6620 5296
+5 * 662
+3 * 662
+3 * 662
+3 * 662
+3 * 662 0 662 1 0 0 1
cfi=(11)
cfn=(48)
calls=662 0x403bd5 -60 
* * 342282 114046 110740 26 3 4 26 3 4 12574 770 1320 165
+5 -3 662 662
+4 * 662 0 662
+4 * 662
jump=662 +28 +4 
* * 
+28 +4 662
+4 * 662 662
+1 * 662 662
+2 * 662 662
+2 * 662 662
+1 * 662 662

fn=(108)
0x403a98 565 662 0 662 1 0 0 1
+1 * 662
+3 * 662
+4 * 662 0 662
+4 +1 662 662
+4 * 662 662
+4 * 662 0 662
+4 * 662
+4 * 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfi=(10)
cfn=(110)
calls=662 0x404380 726 
* * 6620 3310 2648 1 0 0 1
+5 * 662 662
+4 * 662 662
+1 * 662 662

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 662 0 662
+1 * 662
+3 * 662 0 662
+1 * 662
+4 * 662 0 662 1 0 0 1
+4 +2 662 662
+4 * 662
+3 * 662 0 662
cfn=(40)
calls=662 0x40333c 113 
* * 3972 1986 1324
+5 * 662
+3 * 662 662
+4 * 662 662
+4 * 662 662
+4 * 662 662
+3 -1 662
+3 * 662
+3 * 662 0 662
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=662 0x40334a 148 
* * 20522 6620 7944 2 0 0 2
+5 +1 662 662
+4 * 662
+3 * 662 0 662
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=662 0x4032ca 159 
* * 133378 40414 26166 3 1 0 3 1 0 20714 54 1324
+5 * 662
jump=662 +28 * 
* * 
+28 * 662 0 0 1 0 0 1
+4 * 662 662
+1 * 662 662
+1 * 662 662

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 670 0 670 1 0 0 1
+1 * 670 0 0 1 0 0 1
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 0 670 670
+5 0 670 0 0 0 0 0 0 0 0 670
+2 0 670 670
+4 0 670 670
+4 0 670
+5 0 670
+3 0 670
+3 0 670 0 670
fi=(6)
cfi=(5)
cfn=(100)
calls=670 0x40461a 99 
* 0 211296 33911 31996 36 19 37 36 19 37 32279 1211 1340
+5 0 670
fi=(6)
jump=670 +7 0 
* 0 
+7 0 670 670
+1 0 670 670

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 166493 0 166493
+1 * 166493
+3 * 166493 0 166493
+4 * 166493 0 166493
+4 +1 166493 166493
+4 * 166493 166493
+3 * 166493 166493
+4 * 166493
+4 * 166493
+3 * 166493 166493
+1 * 166493 166493

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 166493 0 166493
+1 * 166493
+3 * 166493 0 166493 1 0 0 1
+4 * 166493 0 166493
+4 +1 166493 166493
+4 * 166493 166493
+3 * 166493 166493
+4 * 166493
+4 * 166493
+3 * 166493 166493
+1 * 166493 166493

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 662
+4 * 662
+3 * 662 0 662
cfi=(4)
cfn=(194)
calls=662 0x403d7e +42 
* * 9268 3310 3310 1 0 0 1
+5 * 662 662
+1 * 662 662

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 662 0 662 1 0 0 1
+1 * 662
+3 * 662 0 662
+1 * 662
+4 * 662 0 662
+4 +2 662 662
+4 * 662 662
+4 * 662
+3 * 662 662
+4 * 662 662
+3 * 662
+3 * 662
+3 * 662
+4 * 662
+3 * 662 662
+4 * 662 662
+3 -1 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(188)
calls=662 0x403d98 +11 
* * 99616 27836 17560 1 1 0 1 1 0 20714 54 1324
+5 +1 662 662
+4 * 662
+3 * 662 0 662
cfn=(192)
calls=662 0x403296 -82 
* * 15226 5296 5296 1 0 0 1
+5 * 662
jump=662 +28 * 
* * 
+28 * 662
+4 * 662 662
+1 * 662 662
+1 * 662 662

fl=(12)
fn=(54)
0x404a36 450 662 0 662
+1 * 662
+3 * 662 0 662
+1 * 662
+4 * 662 0 662 1 0 0 1
+4 * 662 0 662
+4 * 662 0 662
+4 +10 662 662
+4 * 662
+3 * 662 0 662
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=662 0x404c38 288 
* * 9930 3972 3310 3 0 0 3
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(56)
calls=662 0x404c38 288 
* * 9930 3972 3310
+5 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=662 0x404c52 -36 
* * 279392 92200 88232 20 3 4 20 3 4 12574 770 1320 165
+5 +1 662
+4 * 662 662
+1 * 662 662
+1 * 662 662

fn=(60)
0x404c52 424 662 0 662
+1 * 662
+3 * 662 0 662
+2 * 662 0 662
+1 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +4 662 662
+4 * 662
+3 * 662 0 662
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=662 0x40492d 277 
* * 9930 3972 3310 2 0 0 2
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=662 0x404d9d 277 
* * 16550 5958 5296 2 0 1 2 0 1
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(66)
calls=662 0x404d9d 277 
* * 16550 5958 5296
+5 * 662
+3 * 662
+3 * 662
+3 * 662 0 662
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=662 0x404db7 -49 
* * 217826 71678 67710 15 3 3 15 3 3 12574 770 1320 165
+5 +1 662
+4 * 662 662
+1 * 662 662
+2 * 662 662
+1 * 662 662

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 710 0 710 1 0 0 1
+1 * 710
+3 * 710
+4 * 710 0 710
+4 +1 710 710
+4 * 710
+3 * 710 0 710 1 0 0 1
cfi=(13)
cfn=(64)
calls=710 -33 -66 
* * 4260 2130 1420
+5 * 710 710
+1 * 710 710

fn=(66)
0x404d9d 277 1324 0 1324
+1 * 1324
+3 * 1324
+4 * 1324 0 1324
+4 +1 1324 1324
+4 * 1324
+3 * 1324 0 1324
cfi=(13)
cfn=(68)
calls=1324 0x404f1a -58 
* * 21184 7944 6620 2 0 1 2 0 1
+5 * 1324 1324
+1 * 1324 1324

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 662 0 662
+1 * 662
+3 * 662 0 662
+1 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +10 662 662
+4 * 662
+3 * 662 0 662
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=662 0x404bc6 288 
* * 9930 3972 3310 3 0 0 3
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(122)
calls=662 0x404bc6 288 
* * 9930 3972 3310
+5 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=662 0x404be0 -36 
* * 279392 92200 88232 4 1 41 4 1 41 12574 755 1320
+5 +1 662
+4 * 662 662
+1 * 662 662
+1 * 662 662

fn=(128)
0x404878 277 710 0 710
+1 * 710
+3 * 710
+4 * 710 0 710 1 0 0 1
+4 +1 710 710
+4 * 710
+3 * 710 0 710
cfi=(13)
cfn=(130)
calls=710 -33 -66 
* * 4260 2130 1420 0 0 1 0 0 1
+5 * 710 710
+1 * 710 710

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1324 0 1324
+1 * 1324
+3 * 1324
+4 * 1324 0 1324
+4 +1 1324 1324
+4 * 1324
+3 * 1324 0 1324
cfi=(13)
cfn=(134)
calls=1324 0x404e98 -58 
* * 21184 7944 6620 2 0 0 2
+5 * 1324 1324
+1 * 1324 1324

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +8 662 0 662
+4 +3 662 662
+4 * 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=662 0x404eb5 -22 
* * 207896 68368 63738 1 1 41 1 1 41 12574 755 1320
+5 +1 662 662
+1 * 662 662

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1324 0 1324 1 0 0 1
+1 * 1324
+3 * 1324
+4 * 1324 0 1324
+4 +1 1324 1324
+4 * 1324
+3 * 1324 0 1324
cfi=(13)
cfn=(124)
calls=1324 0x404d36 -77 
* * 7944 3972 2648 2 0 0 2
+5 * 1324 1324
+1 * 1324 1324

fn=(56)
0x404c38 288 1324 0 1324 1 0 0 1
+1 * 1324
+3 * 1324
+4 * 1324 0 1324 1 0 0 1
+4 +1 1324 1324
+4 * 1324
+3 * 1324 0 1324
cfi=(13)
cfn=(58)
calls=1324 0x404d8f -77 
* * 7944 3972 2648 1 0 0 1
+5 * 1324 1324
+1 * 1324 1324

fn=(74)
0x404f37 368 678 0 678
+1 * 678
+3 * 678
+4 * 678 0 678 1 0 0 1
+4 * 678 0 678
+4 * 678 0 678
+4 +2 678 678
+4 * 678 678
+4 * 678
+3 * 678
+3 * 678
+4 * 678 0 678
+4 +1 678 678
+5 * 678 0 0 0 0 0 0 0 0 678
jcnd=8/678 +33 +2 
* * 
+2 +1 670 670
+4 * 670
+8 * 670 670
+4 * 670 670
+4 * 670
+3 * 670 0 0 1 0 0 1
+3 * 670 0 670 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=670 0x3877c83840 0 
* * 190482 61402 60067 11 2 20 11 2 20 11996 774 665 165
* * 670 670 0 1 1 0 1 1 0 0 0 670
+5 +1 678 678
+4 * 678
+8 * 678 678
+4 * 678
+3 +1 678 678
+1 * 678 678

fn=(140)
0x404eb5 368 678 0 678
+1 * 678
+3 * 678
+4 * 678 0 678 1 0 0 1
+4 * 678 0 678
+4 * 678 0 678 0 0 1 0 0 1
+4 +2 678 678
+4 * 678 678
+4 * 678
+3 * 678
+3 * 678
+4 * 678 0 678
+4 +1 678 678
+5 * 678 0 0 0 0 0 0 0 0 678
jcnd=8/678 +33 +2 
* * 
+2 +1 670 670
+4 * 670
+8 * 670 670
+4 * 670 670
+4 * 670
+3 * 670
+3 * 670 0 670
cob=(2)
cfi=(9)
cfn=(78)
calls=670 0x3877c83840 0 
* * 190482 61402 60067 0 1 42 0 1 42 11996 760 665
* * 670 670 0 0 0 0 0 0 0 0 0 670
+5 +1 678 678
+4 * 678
+8 * 678 678
+4 * 678
+3 +1 678 678
+1 * 678 678

fn=(72)
0x404db7 379 662 0 662
+1 * 662
+3 * 662
+4 * 662 0 662 1 0 0 1
+4 * 662 0 662
+4 * 662 0 662
+4 +8 662 0 662
+4 +3 662 662
+4 * 662 662
+4 * 662 662
+4 * 662
+3 * 662
+3 * 662 0 662
cfn=(74)
calls=662 0x404f37 -22 
* * 207896 68368 63738 14 3 3 14 3 3 12574 770 1320 165
+5 +1 662 662
+1 * 662 662

fn=(126)
0x404be0 424 662 0 662
+1 * 662
+3 * 662 0 662
+2 * 662 0 662
+1 * 662
+4 * 662 0 662
+4 * 662 0 662
+4 * 662 0 662
+4 +4 662 662
+4 * 662
+3 * 662 0 662
cfn=(128)
calls=662 0x404878 277 
* * 9930 3972 3310 1 0 0 1
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(132)
calls=662 0x404d44 277 
* * 16550 5958 5296 2 0 0 2
+5 * 662
+3 * 662 662
+4 * 662
+3 * 662 0 662
cfn=(132)
calls=662 0x404d44 277 
* * 16550 5958 5296
+5 * 662
+3 * 662
+3 * 662
+3 * 662 0 662
cfn=(138)
calls=662 0x404d5e -49 
* * 217826 71678 67710 1 1 41 1 1 41 12574 755 1320
+5 +1 662
+4 * 662 662
+1 * 662 662
+2 * 662 662
+1 * 662 662

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1324 0 1324 1 0 0 1
+1 * 1324
+3 * 1324 0 1324
+4 +1 1324 1324
+4 * 1324 1324
+1 * 1324 1324

fn=(110)
0x404380 726 1324 0 1324 1 0 0 1
+1 * 1324
+3 * 1324 0 1324
+4 * 1324 0 1324
+4 * 1324 1324
+4 * 1324 1324
+3 * 1324 1324
+4 * 1324 0 1324
+3 * 1324 1324
+1 * 1324 1324

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1324 0 1324 1 0 0 1
+1 * 1324
+3 * 1324 0 1324
+4 +1 1324 1324
+4 * 1324 1324
+1 * 1324 1324

fn=(44)
0x404468 726 1324 0 1324
+1 * 1324
+3 * 1324 0 1324
+4 * 1324 0 1324
+4 * 1324 1324
+4 * 1324 1324
+3 * 1324 1324
+4 * 1324 0 1324 1 0 0 1
+3 * 1324 1324
+1 * 1324 1324

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 670 0 670 1 0 0 1
+1 * 670
+3 * 670 0 670
+4 * 670 0 670
+4 * 670 670
+1 * 670 670

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 670 0 670 1 0 0 1
+1 * 670
+3 * 670 0 670
+4 * 670 0 670 1 0 0 1
+4 * 670 670
+1 * 670 670

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 670 0 670 1 0 0 1
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 +4 670 670
+4 * 670 670
+4 * 670
+3 * 670
+3 * 670 0 670
cfn=(184)
calls=670 0x40454c -14 
* * 4020 1340 2010 1 0 0 1
+5 +2 670 670
+1 * 670 670

fn=(150)
0x40326c 148 670 0 670
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 * 670 0 670
+4 +3 670 670 0 1 0 0 1
+4 * 670 670
+4 * 670
+3 * 670
+3 * 670 0 670
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=670 0x403d1a -29 
* * 12060 4020 4690 3 0 0 3
+5 +1 670 670
+1 * 670 670

fn=(180)
0x40334a 148 670 0 670
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 * 670 0 670
+4 +3 670 670
+4 * 670 670
+4 * 670
+3 * 670
+3 * 670 0 670
cfn=(182)
calls=670 0x403dcc -29 
* * 12060 4020 4690 2 0 0 2
+5 +1 670 670
+1 * 670 670

fn=(152)
0x403d1a 122 670 0 670 1 0 0 1
+1 * 670
+3 * 670
+4 * 670 0 670
+4 * 670 0 670
+4 +4 670 670
+4 * 670 670
+4 * 670
+3 * 670
+3 * 670 0 670
cfn=(154)
calls=670 0x4044f8 -14 
* * 4020 1340 2010 2 0 0 2
+5 +2 670 670
+1 * 670 670

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2316 429 435 2 2 6 2 2 6 316 33 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3365 694 640 22 13 7 22 13 7 530 66 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 331 0 331 1 0 0 1
+1 * 331
+3 * 331
+4 * 331 0 331
+4 * 331 0 331
+4 +1 331 331
+4 * 331
+3 * 331 0 331
cfi=(2)
cfn=(2)
calls=331 0x402d74 645 
* * 4303 1986 662
+5 * 331
+3 * 331 0 331
+3 +1 331 331
+6 * 331 0 331
+3 * 331 331
+6 * 331 0 331
+3 +1 331 331
+6 * 331 0 331 1 0 0 1
+3 * 331 331
+6 * 331 0 331
+3 +2 331 0 331
+7 * 331
jump=331 +86 * 
* * 
+2 +1 55277 55277
+3 * 55277
+3 * 55277 55277
+4 * 55277
+3 * 55277
+3 * 55277 0 55277
cfi=(2)
cfn=(144)
calls=55277 0x402d9a 770 
* * 608047 276385 165831
+5 * 55277 55277
+4 * 55277 55277
+5 * 55277
+4 * 55277 0 55277
+5 +1 55277 55277
+3 * 55277
+3 * 55277 55277
+4 * 55277
+3 * 55277
+3 * 55277 0 55277
cfi=(2)
cfn=(146)
calls=55277 0x402dba 770 
* * 608047 276385 165831 1 0 0 1
+5 * 55277 55277
+2 * 55277
+4 * 55277 55277
+5 * 55277
+4 * 55277 0 55277
+5 -2 55277 0 55277
+4 * 55277 55277
+3 * 55277
+3 * 55277 55277
+3 * 55277 0 0 0 0 0 0 0 0 55277 332
jcnd=54946/55277 -93 +1 
* * 
-9 * 331 331 0 1 0 0 1
+3 * 331
+3 * 331 331
+3 * 331 0 0 0 0 0 0 0 0 331
jcnd=331/331 -93 +1 
* * 
+2 +4 331 331
+3 * 331
+3 * 331
+4 * 331 331 0 1 0 0 1
+5 * 331
+4 * 331
+3 * 331 0 331
+5 +1 331 331
+3 * 331
+3 * 331
+4 * 331 331
+5 * 331
+4 * 331
+3 * 331 0 331
+5 +1 331 0 331
+7 * 331
jump=331 0x4016ee * 
* * 
+2 +1 55277 55277
+3 * 55277
+3 * 55277 55277
+4 * 55277
+3 * 55277 0 0 1 0 0 1
+3 * 55277 0 55277
cfi=(2)
cfn=(146)
calls=55277 0x402dba 770 
* * 608047 276385 165831
+5 * 55277 55277
+2 * 55277
+4 * 55277 55277
+5 * 55277 0 55277
+5 +1 55277 55277
+3 * 55277
+3 * 55277 55277
+4 * 55277
+3 * 55277
+3 * 55277 0 55277
cfi=(2)
cfn=(144)
calls=55277 0x402d9a 770 
* * 608047 276385 165831
+5 * 55277 55277
+4 * 55277 55277
+5 * 55277 0 55277
+5 +1 55277 55277
+5 * 55277 55277
+5 * 55277 55277
+5 * 55277
+4 * 55277 0 55277
+5 +1 55277 55277
+5 * 55277 55277
+5 * 55277 55277
+5 * 55277
+4 * 55277 0 55277
+5 -4 55277 0 55277
+4 * 55277 55277
+3 * 55277
+3 * 55277 55277
+3 * 55277 0 0 0 0 0 0 0 0 55277 332
jcnd=54946/55277 0x401672 +1 
* * 
-9 * 331 331 0 1 0 0 1
+3 * 331
+3 * 331 331
+3 * 331 0 0 0 0 0 0 0 0 331
jcnd=331/331 0x401672 +1 
* * 
+6 +6 331 331 0 1 0 0 1
+5 * 331 331
+5 * 331 0 331
+5 +2 331 331
+3 +1 331 0 331
+3 * 331 331
+5 * 331 331
+1 * 331 331

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 331
+7 * 331
+7 * 331
+3 * 331
+3 * 331 0 331
cfi=(2)
cfn=(4)
calls=331 0x4030b2 310 
* * 350665 102803 96542 66 23 16 66 23 16 22136 1034 1322 165
+5 * 331
+7 * 331
+7 * 331
+3 * 331
+3 * 331 0 331
cfi=(2)
cfn=(80)
calls=331 0x402ff4 310 
* * 351728 102143 94634 38 7 69 38 7 69 22564 1157 1322
+5 * 331 0 0 1 0 0 1
+7 * 331
+7 * 331
+3 * 331
+3 * 331 0 331
cfn=(142)
calls=331 0x401585 -52 
* * 5770323 2551017 1332275 8 0 0 8 0 0 111216 664
+5 * 331 0 331
+8 * 331 331
+6 * 331 0 331
+6 * 331
+7 * 331
+3 * 331 0 331
cfi=(2)
cfn=(148)
calls=331 0x402df4 414 
* * 83038 26057 18579 33 5 0 33 5 0 9265 238 662
+5 * 331
+7 * 331
+3 * 331 0 331 1 0 0 1
cfi=(2)
cfn=(178)
calls=331 0x402e74 414 
* * 86880 27489 19703 7 1 0 7 1 0 10357 30 662
+5 +2 331
+7 * 331
+7 * 331
+3 * 331
+3 * 331 0 331
cfi=(2)
cfn=(4)
calls=331 0x4030b2 310 
* * 350282 102773 96431 2 1 1 2 1 1 22100 652 1322
+5 * 331
+7 * 331
+7 * 331
+3 * 331
+3 * 331 0 331
cfi=(2)
cfn=(80)
calls=331 0x402ff4 310 
* * 350873 102092 94496 0 0 2 0 0 2 22429 743 1322
+5 * 331 331
+6 * 331 0 0 1 0 0 1
+7 * 331
+7 * 331 0 331
+6 * 331 331
+8 * 331
+3 * 331
+3 * 331 0 331
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=331 0x401719 -33 
* * 2672825 1112822 613012 4 0 0 4 0 0 55608 332
+5 * 331 0 331
+8 * 331 331
+6 * 331 0 331
+6 * 331
+7 * 331 0 0 1 0 0 1
+3 * 331 0 331
cfi=(2)
cfn=(148)
calls=331 0x402df4 414 
* * 83038 26057 18579 0 0 0 0 0 0 9265 232 662
+5 * 331
+7 * 331
+3 * 331 0 331
cfi=(2)
cfn=(178)
calls=331 0x402e74 414 
* * 86880 27489 19703 0 0 0 0 0 0 10357 24 662
+5 +2 331 331
+7 * 331
+3 * 331 0 331
cfi=(2)
cfn=(2)
calls=331 0x402d74 645 
* * 4303 1986 662
+5 * 331 331
+6 * 331
+3 * 331
+3 * 331
+3 * 331 331
+7 * 331
+3 * 331 0 0 1 0 0 1
+3 * 331 0 331
cfi=(2)
cfn=(144)
calls=331 0x402d9a 770 
* * 3641 1655 993
+5 * 331
+3 * 331
+7 * 331
+3 * 331
+3 * 331 0 331
cfi=(2)
cfn=(200)
calls=331 0x402eda 901 
* * 33825 12471 9645 48 35 13 48 35 13 1534 91 47
+5 +1 331 331
+7 * 331
+3 * 331 0 331
cfi=(2)
cfn=(10)
calls=331 0x402f54 645 
* * 4303 1986 662 0 1 0 0 1
+5 * 331 331
+6 * 331
+3 * 331
+3 * 331
+3 * 331 331
+7 * 331 0 0 1 0 0 1
+3 * 331
+3 * 331 0 331
cfi=(2)
cfn=(146)
calls=331 0x402dba 770 
* * 3641 1655 993
+5 * 331
+3 * 331
+7 * 331
+3 * 331
+3 * 331 0 331
cfi=(2)
cfn=(244)
calls=331 0x402f7a 901 
* * 32809 12223 9443 21 23 37 21 23 37 1329 54 47
+5 +1 331 331
+7 * 331
+3 * 331 0 331
cfi=(2)
cfn=(10)
calls=331 0x402f54 645 
* * 4303 1986 662
+5 * 331 331
+6 * 331
+3 * 331
+3 * 331
+3 * 331 331 0 1 0 0 1
+7 * 331
+3 * 331
+3 * 331 0 331
cfi=(2)
cfn=(146)
calls=331 0x402dba 770 
* * 3641 1655 993
+5 * 331 331
+2 * 331
+4 * 331 331
+8 * 331 331
+8 * 331 0 331
+8 +1 331 331
+7 * 331
+3 * 331 0 331
cfi=(2)
cfn=(2)
calls=331 0x402d74 645 
* * 4303 1986 662
+5 * 331 331 0 1 0 0 1
+6 * 331
+3 * 331
+3 * 331
+3 * 331 331
+7 * 331
+3 * 331
+3 * 331 0 331
cfi=(2)
cfn=(144)
calls=331 0x402d9a 770 
* * 3641 1655 993
+5 * 331 331
+4 * 331 331
+8 * 331
+4 * 331 331
+8 * 331
+3 * 331 0 331
+8 +2 331 0 331
+7 -12 331 331
+8 * 331 331
+7 * 331 0 0 0 0 0 0 0 0 331 1
jcnd=1/331 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 331
+7 * 331
+3 * 331 0 331
cfi=(2)
cfn=(2)
calls=331 0x402d74 645 
* * 4303 1986 662 2 0 1 2 0 1
+5 * 331
+3 * 331 331
+7 * 331
+3 * 331 0 331
cfi=(2)
cfn=(2)
calls=331 0x402d74 645 
* * 4303 1986 662 0 1 0 0 1
+5 * 331
+3 * 331 0 0 0 0 0 0 0 0 331 1
+2 * 331 0 0 1 0 0 1
+5 * 331
jump=331 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 331
+2 * 331 0 0 0 0 0 0 0 0 331
jcnd=331/331 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 331 0 331
+1 * 331
+3 * 331
+4 * 331 0 331
+4 * 331 0 331
+4 * 331 0 331
+5 +1 331 331
+4 * 331
+3 * 331 0 331
cfi=(2)
cfn=(2)
calls=331 0x402d74 645 
* * 4303 1986 662
+5 * 331
+3 * 331 0 331
+3 +1 331 331 0 1 0 0 1
+6 * 331 0 331
+3 * 331 331
+6 * 331 0 331
+3 +2 331 0 331
+7 * 331
jump=331 +86 * 
* * 
+2 +1 55277 55277
+3 * 55277
+3 * 55277 55277
+4 * 55277
+3 * 55277
+3 * 55277 0 55277
cfi=(2)
cfn=(144)
calls=55277 0x402d9a 770 
* * 608047 276385 165831
+5 * 55277 55277
+4 * 55277 55277
+5 * 55277
+4 * 55277 0 55277
+5 +1 55277 55277
+3 * 55277
+3 * 55277 55277
+4 * 55277
+3 * 55277
+3 * 55277 0 55277
cfi=(2)
cfn=(146)
calls=55277 0x402dba 770 
* * 608047 276385 165831
+5 * 55277 55277
+2 * 55277
+4 * 55277 55277
+5 * 55277
+4 * 55277 0 55277
+5 -2 55277 0 55277
+4 * 55277 55277
+3 * 55277
+3 * 55277 55277
+3 * 55277 0 0 0 0 0 0 0 0 55277 332
jcnd=54946/55277 -93 +1 
* * 
-9 * 331 331 0 1 0 0 1
+3 * 331
+3 * 331 331
+3 * 331 0 0 0 0 0 0 0 0 331
jcnd=331/331 -93 +1 
* * 
+2 +4 331 331
+3 * 331
+3 * 331 0 0 1 0 0 1
+4 * 331 331
+5 * 331
+4 * 331
+3 * 331 0 331
+5 +1 331 331
+3 * 331
+3 * 331
+4 * 331 331
+5 * 331
+4 * 331
+3 * 331 0 331
+5 +1 331 331
+5 * 331 331
+5 * 331 331
+5 * 331 0 0 1 0 0 1
+4 * 331
+3 * 331 0 331
+5 +2 331 331
+3 +1 331 0 331
+3 * 331 331
+5 * 331 331
+1 * 331 331

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 1206 1206 0 1 0 0 1
+6 0 1206
+2 0 1206 0 0 0 0 0 0 0 0 1206 1
+2 0 1206 1206

fn=(38) _int_malloc
0x3877c79a00 0 1340 0 1340 1 0 0 1
+2 0 1340
+3 0 1340 0 1340
+2 0 1340 0 1340
+2 0 1340 0 1340 0 0 1 0 0 1
+2 0 1340
+3 0 1340 0 1340
+1 0 1340 0 1340
+1 0 1340
+4 0 1340
+4 0 1340 0 0 0 0 0 0 0 0 1340
+6 0 1340
+4 0 1340
+6 0 1340
+3 0 1340
+4 0 1340
+4 0 1340
+4 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340
+6 0 1340 1340 0 1 1 0 1 1
+7 0 1340 0 0 0 0 0 0 0 0 1340 5
jcnd=1218/1340 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1206
+4 0 1206 1206
+1 0 1206 1206
+1 0 1206 1206
+2 0 1206 1206
+2 0 1206 1206
+2 0 1206 1206
+2 0 1206 1206
+7 0 1235
+7 0 1235 0 0 1 0 0 1 0 0 1235 5
jcnd=332/1235 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 11 0 0 11
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 332 0 0 1 0 0 1
+3 0 332
+4 0 332
+4 0 332 0 0 1 0 0 1 0 0 332
jcnd=332/332 0x3877c7a1a4 0 
* 0 
+30 0 332 332
+6 0 332
+5 0 332 0 0 0 0 0 0 0 0 332 1
jcnd=331/332 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 912 244 194 8 2 0 8 2 0 188 24
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1234 0 0 1 0 0 1
+3 0 1234
+3 0 1234
+3 0 1234
+4 0 1234
+3 0 1234
+4 0 1234 0 1234
+5 0 1234
+3 0 1234 0 1234
+4 0 1234 0 1234
+4 0 1234 0 1234
+5 0 1234
+3 0 1234
+3 0 1234
+3 0 1234
+3 0 1234
+4 0 1234
+4 0 1234 0 0 1 0 0 1
+4 0 1234 0 1234
+4 0 1234
+4 0 1234 0 1234
+5 0 1234 0 1234
+5 0 1234
+3 0 1234
+3 0 1234 0 1234
+5 0 1234
+5 0 1234
+3 0 1234 0 1234
+4 0 1234 0 1234
+4 0 1234
+6 0 1234 0 1234
+4 0 1234 0 1234
+5 0 1234 0 0 1 0 0 1
+3 0 1234
+3 0 1234
+3 0 1234
jump=1234 +87 0 
* 0 
+8 0 943
+3 0 943
+4 0 943
+2 0 943
+2 0 943
+3 0 943
+3 0 943
+3 0 943
+2 0 943
+2 0 943
+5 0 943
+2 0 943 943 0 0 2 0 0 2
+4 0 943
+3 0 943
+4 0 943 0 943
+4 0 943 0 943
+8 0 943
+7 0 943 0 943
+4 0 943 0 943 0 0 1 0 0 1
+4 0 943 0 943
+4 0 943 0 0 0 0 0 0 0 0 943
-38 0 321
+3 0 321
+4 0 321 0 321
+4 0 321 0 321
+8 0 321
+7 0 321 0 321
+4 0 321 0 321
+4 0 321 0 321
+4 0 321 0 0 0 0 0 0 0 0 321
+6 0 2499 2499 0 1 0 0 1
+4 0 2499
+3 0 2499 0 0 0 0 0 0 0 0 2499 169
jcnd=1186/2499 0x3877c79ef0 0 
* 0 
+6 0 1313 1313
+4 0 1313 1313
+4 0 1313
+4 0 1313 0 0 0 0 0 0 0 0 1313
+6 0 1313 1313 0 1 1 0 1 1
+7 0 1313 0 0 0 0 0 0 0 0 1313
+6 0 1313
+4 0 1313
+7 0 1313 0 0 0 0 0 0 0 0 1313 4
jcnd=403/1313 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1293
+3 0 1293 0 1293
+4 0 1293 0 1293
+5 0 1293 0 0 0 0 0 0 0 0 1293 15
jcnd=29/1293 0x3877c7a090 0 
* 0 
+6 0 1264
+7 0 1264 0 0 0 0 0 0 0 0 1264 148
jcnd=943/1264 0x3877c79c50 0 
* 0 
+6 0 321 0 0 1 0 0 1
+3 0 321
+4 0 321
+4 0 321 0 0 0 0 0 0 0 0 321 1
+6 0 321
+3 0 321
+4 0 321
+2 0 321
+2 0 321
+3 0 321
+3 0 321
+8 0 321
+3 0 321
+2 0 321
+2 0 321
+4 0 321 321 0 0 2 0 0 2
+4 0 321
+3 0 321 0 0 1 0 0 1 0 0 321 9
jcnd=321/321 0x3877c79e15 0 
* 0 
0x3877c79e15 0 321 0 321
+4 0 321 0 321
+4 0 321
+3 0 321
jump=321 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 334
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 1186 0 0 1 0 0 1
+7 0 1186
+3 0 1186 0 0 0 0 0 0 0 0 1186 3
jcnd=324/1186 0x3877c7a0b0 0 
* 0 
+6 0 1170 1170 0 1 0 0 1
+4 0 1170
+3 0 1170
+3 0 1170
+2 0 1170
+4 0 1170
+3 0 1170
+3 0 1170
+2 0 1170
+2 0 1170
+2 0 1170
+2 0 1170 1170 0 0 1 0 0 1
+8 0 1170
+5 0 1170
+5 0 1170
+2 0 1170 0 0 0 0 0 0 0 0 1170
-2 0 543
+2 0 543 0 0 0 0 0 0 0 0 543
+2 0 1713
+2 0 1713 0 0 0 0 0 0 0 0 1713 34
jcnd=992/1713 +64 0 
* 0 
+2 0 721
+8 0 721
+3 0 721
+3 0 721 0 0 0 0 0 0 0 0 721 1
jcnd=1/721 0x3877c79fc0 0 
* 0 
-6 0 870
+3 0 870
+3 0 870 0 0 0 0 0 0 0 0 870 7
jcnd=445/870 0x3877c79fc0 0 
* 0 
+2 0 1145
+2 0 1145 1145
+8 0 1145
+2 0 1145 0 0 0 0 0 0 0 0 1145 22
jcnd=870/1145 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 8871
+4 0 8871
+2 0 8871
+2 0 8871 0 0 0 0 0 0 0 0 8871 635
jcnd=7774/8871 -8 0 
* 0 
-2 0 992 0 0 1 0 0 1
+2 0 992 0 0 0 0 0 0 0 0 992 21
jcnd=884/992 -8 0 
* 0 
+2 0 1267 1267 0 0 5 0 0 5
+4 0 1267 0 0 1 0 0 1
+3 0 1267 0 0 0 0 0 0 0 0 1267 530
jcnd=724/1267 0x3877c7a1cf 0 
* 0 
+6 0 543
+2 0 543
+4 0 543
+2 0 543
+2 0 543
+2 0 543 0 543
+8 0 543
jump=543 0x3877c79f30 0 
* 0 
+37 0 446 446 0 1 0 0 1
+5 0 446 446
+4 0 446
+4 0 446 446
+5 0 446 0 0 0 0 0 0 0 0 446
jcnd=446/446 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 324 324
+4 0 324
+4 0 324
+2 0 324
+5 0 324 324 0 1 1 0 1 1
+4 0 324
+3 0 324 0 0 0 0 0 0 0 0 324 8
jcnd=292/324 0x3877c79f00 0 
* 0 
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 6
jcnd=16/32 0x3877c79f00 0 
* 0 
+6 0 16
+3 0 16 16
+4 0 16 16
+4 0 16
+3 0 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a650 0 
* 0 
+26 0 16 0 0 1 0 0 1
+3 0 16 16
+4 0 16
+3 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16 2
+6 0 16 16
+8 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16 0 1 0 0 1
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 16
jcnd=16/16 0x3877c7a659 0 
* 0 
+6 0 16
+4 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c7a2e3 0 
* 0 
+6 0 8 8
+4 0 8
+7 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+4 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c7a285 0 
* 0 
+31 0 332 0 0 1 0 0 1
+3 0 332 0 332
+4 0 332
jump=332 0x3877c79b99 0 
* 0 
+36 0 724 724 0 1 1 0 1 1
+4 0 724 724 0 0 1 0 0 1
+4 0 724
+3 0 724 724
+4 0 724
+4 0 724
+3 0 724
+3 0 724 724
+4 0 724 0 0 0 0 0 0 0 0 724
+6 0 724 724
+4 0 724 0 0 0 0 0 0 0 0 724
+6 0 724 724 0 1 0 0 1
+8 0 724 0 724
+4 0 724 0 724
+4 0 724 0 0 0 0 0 0 0 0 724 12
jcnd=418/724 +38 0 
* 0 
+2 0 306 306 0 0 1 0 0 1
+4 0 306
+3 0 306 0 0 0 0 0 0 0 0 306
+2 0 306 306
+5 0 306 0 0 0 0 0 0 0 0 306
+6 0 306 306
+4 0 306 0 306
+4 0 306 306
+4 0 306 0 306
+4 0 306
+4 0 306 0 0 0 0 0 0 0 0 306
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 703 703
+4 0 703 703 0 1 0 0 1
+4 0 703 0 0 0 0 0 0 0 0 703
+6 0 703
+4 0 703
+7 0 703 0 703 0 0 7 0 0 7
+4 0 703 0 703
+4 0 703 0 703
+4 0 703 0 703
+4 0 703 0 0 0 0 0 0 0 0 703 3
jcnd=238/703 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 238
+7 0 238 0 0 0 0 0 0 0 0 238
jcnd=238/238 +18 0 
* 0 
+2 0 7 0 7 0 0 2 0 0 2
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 704
+7 0 704 0 704
+4 0 704
+3 0 704
+3 0 704
+4 0 704
+3 0 704
+4 0 704
+3 0 704
+3 0 704
+4 0 704 0 704
+4 0 704 0 704 0 0 1 0 0 1
+4 0 704
jump=704 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 740
+4 0 740 0 0 1 0 0 1
+3 0 740
+3 0 740 0 740
cfn=(104)
calls=740 0x3877c77180 0 
* 0 2960 1480 0 1 0 0 1 0 0 740
+5 0 740
+3 0 740
jump=740 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 446 0 0 1 0 0 1
+7 0 446
+2 0 446
+4 0 446
+3 0 446
+3 0 446 0 446
+5 0 446
+3 0 446
+4 0 446
+3 0 446 0 0 1 0 0 1
+4 0 446
+4 0 446
+3 0 446
+4 0 446 0 446
+4 0 446 0 446 0 0 17 0 0 17
+4 0 446
+3 0 446
+3 0 446 0 446
cfn=(104)
calls=446 0x3877c77180 0 
* 0 1784 892 0 0 0 0 0 0 0 446 1
+5 0 446
+3 0 446
jump=446 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 16 16 0 1 0 0 1
+4 0 16
jump=16 0x3877c7a10e 0 
* 0 
+5 0 16 16
+5 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1340 0 1340 1 0 0 1
+5 0 1340 0 1340
+5 0 1340
+3 0 1340 0 1340
+5 0 1340
+4 0 1340 1340 0 0 1 0 0 1
+7 0 1340 1340 0 0 1 0 0 1
+3 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340
+6 0 1340 1340 0 0 1 0 0 1
+7 0 1340 1340 0 1 1 0 1 1
+4 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340
+2 0 1340 1340 0 0 1 0 0 1
+3 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340
jcnd=1340/1340 +97 0 
* 0 
+18 0 1340
+3 0 1340
+3 0 1340 0 1340
cfn=(38)
calls=1340 0x3877c79a00 0 
* 0 307329 38078 44850 45 33 50 45 33 50 47507 2135
+5 0 1340
+3 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340
+2 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340
+2 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340 13
+2 0 1340 1340
+7 0 1340 0 0 0 0 0 0 0 0 1340
jcnd=1340/1340 +13 0 
* 0 
+13 0 1340 0 1340
+2 0 1340 0 0 0 0 0 0 0 0 1340 12
+6 0 1340
+3 0 1340 1340
+4 0 1340 1340
+5 0 1340 1340
+5 0 1340
+4 0 1340 1340
+1 0 1340 0 0 1 0 0 1
+5 0 1340 1340 0 0 1 0 0 1
+7 0 1340 0 0 0 0 0 0 0 0 1340
jcnd=1340/1340 +14 0 
* 0 
+14 0 1340 0 1340 1 0 0 1
+3 0 1340 0 0 0 0 0 0 0 0 1340
+6 0 1340
jump=1340 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1340 0 1340 1 0 0 1
+2 0 1340
+3 0 1340
+3 0 1340 0 1340
+2 0 1340
+3 0 1340 0 1340
+1 0 1340
+3 0 1340 0 1340
+1 0 1340
+3 0 1340
+4 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340
+6 0 1340
+4 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340 4
jcnd=10/1340 0x3877c838d1 0 
* 0 
+2 0 1330
+3 0 1330
+3 0 1330
+3 0 1330
+3 0 1330
+3 0 1330 0 0 0 0 0 0 0 0 1330
jcnd=1330/1330 +41 0 
* 0 
+41 0 1330 0 0 1 0 0 1
+3 0 1330 0 0 0 0 0 0 0 0 1330
jcnd=1330/1330 0x3877c839c0 0 
* 0 
+24 0 1330
+3 0 1330
+4 0 1330
+3 0 1330
+3 0 1330
+3 0 1330
+3 0 1330
+3 0 1330 0 0 0 0 0 0 0 0 1330 662
jcnd=674/1330 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 666
+10 0 666 666 0 0 2 0 0 2
+3 0 666
+4 0 666 0 666
+3 0 666
+4 0 666
+4 0 666 0 0 0 0 0 0 0 0 666
jcnd=666/666 -18 0 
* 0 
-18 0 2054 2054
+3 0 2054
+4 0 2054 0 2054
+3 0 2054
+4 0 2054
+4 0 2054 0 0 0 0 0 0 0 0 2054 8
jcnd=1388/2054 -18 0 
* 0 
+2 0 1340
+4 0 1340
+3 0 1340 1340
+1 0 1340 1340
+1 0 1340 1340
+2 0 1340 1340 0 1 0 0 1
+2 0 1340 1340
0x3877c839c0 0 1330 0 0 1 0 0 1
+3 0 1330
+3 0 1330
+3 0 1330
+4 0 1330 0 1330 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1330 0x3877c89b20 0 
* 0 305218 113384 110724 6 1 61 6 1 61 14592 860 1330 165
+5 0 1330
jump=1330 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1340 1340 0 1 1 0 1 1
+7 0 1340 1340 0 0 1 0 0 1
+3 0 1340
+3 0 1340 0 0 1 0 0 1 0 0 1340
+6 0 1340
+3 0 1340 0 0 0 0 0 0 0 0 1340
+6 0 1340 1340
+4 0 1340
+4 0 1340
+2 0 1340 0 0 0 0 0 0 0 0 1340
+2 0 1340
+2 0 1340
+7 0 1340 0 0 0 0 0 0 0 0 1340
jcnd=1340/1340 +14 0 
* 0 
+14 0 1340
+2 0 1340
cfn=(170) _int_free
calls=1340 0x3877c78650 0 
* 0 130749 34639 19857 19 2 0 19 2 0 31617 540

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 8
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 2
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1340 0 1340 1 0 0 1
+2 0 1340 0 1340
+2 0 1340 0 1340
+2 0 1340
+3 0 1340 0 1340
+2 0 1340 0 1340
+1 0 1340 0 1340
+1 0 1340
+3 0 1340
+4 0 1340 1340
+4 0 1340 0 1340
+4 0 1340
+3 0 1340
+4 0 1340
+3 0 1340
+3 0 1340
+3 0 1340 0 0 1 0 0 1 0 0 1340
+6 0 1340
+4 0 1340 0 0 0 0 0 0 0 0 1340
+6 0 1340
+4 0 1340 0 0 0 0 0 0 0 0 1340
+6 0 1340 1340
+7 0 1340 0 0 0 0 0 0 0 0 1340 2
jcnd=1216/1340 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1216
+2 0 1216 0 0 0 0 0 0 0 0 1216
+6 0 1216 1216 0 1 0 0 1
+4 0 1216
+3 0 1216
+2 0 1216 0 0 0 0 0 0 0 0 1216
jcnd=1216/1216 0x3877c78a40 0 
* 0 
+6 0 1216 1216
+4 0 1216
+3 0 1216 0 0 0 0 0 0 0 0 1216
+6 0 1216 1216
+5 0 1216
+4 0 1216 0 0 0 0 0 0 0 0 1216
jcnd=1216/1216 0x3877c7907c 0 
* 0 
+6 0 1216 1216
+5 0 1216
+4 0 1216 0 0 0 0 0 0 0 0 1216
+6 0 1216
+4 0 1216 0 0 1 0 0 1 0 0 1216
+6 0 1216
+4 0 1216 1216
+7 0 1216 0 0 0 0 0 0 0 0 1216
+6 0 1216 1216
+6 0 1216
+2 0 1216 0 0 0 0 0 0 0 0 1216
+6 0 1216 1216
+4 0 1216 0 0 0 0 0 0 0 0 1216 5
jcnd=1212/1216 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1216 1216 0 1 0 0 1
+4 0 1216 0 0 0 0 0 0 0 0 1216 392
jcnd=444/1216 0x3877c78bf0 0 
* 0 
+6 0 772 772 0 0 1 0 0 1
+6 0 772 0 0 1 0 0 1 0 0 772 66
jcnd=61/772 0x3877c78a78 0 
* 0 
+6 0 711 711
+5 0 711 711
+5 0 711 711
+4 0 711 0 0 0 0 0 0 0 0 711
+6 0 711 711
+4 0 711 0 0 0 0 0 0 0 0 711
+6 0 711 711
+9 0 711 0 711
+4 0 711 0 711
+4 0 711 0 0 0 0 0 0 0 0 711 4
jcnd=703/711 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 711
+3 0 711
+4 0 711 711
+4 0 711 711
+4 0 711 0 0 0 0 0 0 0 0 711
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 772
+7 0 772 0 772
+4 0 772 0 772
+4 0 772 0 0 0 0 0 0 0 0 772 67
jcnd=441/772 +18 0 
* 0 
+2 0 331 0 331
+8 0 331 0 331
+8 0 331 0 331
+4 0 331
+3 0 331 0 331 1 0 0 1
+4 0 331
+4 0 331 0 331
+4 0 331 0 331
+4 0 331
+7 0 331 0 0 0 0 0 0 0 0 331
jcnd=331/331 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 444
+7 0 444 0 0 0 0 0 0 0 0 444
jcnd=444/444 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1216 0 0 1 0 0 1
+5 0 1216 1216
+4 0 1216 1216
+7 0 1216 0 0 0 0 0 0 0 0 1216
jcnd=1216/1216 +16 0 
* 0 
+16 0 1216 0 1216
+5 0 1216 0 0 0 0 0 0 0 0 1216
+6 0 1216
+3 0 1216
jump=1216 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1216 1216 0 1 0 0 1
+4 0 1216
+2 0 1216 0 0 0 0 0 0 0 0 1216
+6 0 1216 1216
+7 0 1216 0 0 0 0 0 0 0 0 1216
jcnd=1216/1216 +15 0 
* 0 
+15 0 1216 0 1216 1 0 0 1
+4 0 1216 0 0 0 0 0 0 0 0 1216 2
+6 0 1216
+4 0 1216 1216
+1 0 1216 1216
+1 0 1216 1216
+2 0 1216 1216
+2 0 1216 1216
+2 0 1216 1216
+2 0 1216 1216
0x3877c78bf0 0 444 0 0 1 0 0 1
+3 0 444 0 444
+4 0 444
+3 0 444
+4 0 444 0 444 1 0 0 1
+4 0 444
jump=444 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1216 1216 0 1 1 0 1 1
+4 0 1216 0 0 1 0 0 1
+7 0 1216
+4 0 1216
+3 0 1216
+3 0 1216 0 0 0 0 0 0 0 0 1216
jcnd=1216/1216 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1330 0 0 1 0 0 1
+7 0 1330
+3 0 1330
+3 0 1330 1330 0 0 1 0 0 1
+4 0 1330
+4 0 1330 0 0 0 0 0 0 0 0 0 0 1330 165
jump=160 0x3877c89be8 0 
* 0 
jump=170 0x3877c89bd0 0 
* 0 
jump=160 0x3877c89bb8 0 
* 0 
jump=164 +11 0 
* 0 
jump=168 0x3877c89c48 0 
* 0 
jump=170 0x3877c89c30 0 
* 0 
jump=168 0x3877c89c18 0 
* 0 
jump=170 0x3877c89c00 0 
* 0 
+11 0 164 164
+3 0 164
+4 0 164
+4 0 164 164
+4 0 164
+4 0 164 0 164
+4 0 164
+9 0 164 164
+4 0 164 0 164
+4 0 164 164
+4 0 164 0 164
+4 0 164 164
+4 0 164 0 164
+4 0 164 164
+4 0 164 0 164
+4 0 164
+4 0 164
+4 0 164 0 0 0 0 0 0 0 0 164
jcnd=8/164 0x3877c89c60 0 
* 0 
-40 0 13590 13590
+4 0 13590 0 13590 0 0 3 0 0 3
+4 0 13590 13590
+4 0 13590 0 13590 0 0 15 0 0 15
+4 0 13590 13590
+4 0 13590 0 13590 0 0 1 0 0 1
+4 0 13590 13590
+4 0 13590 0 13590
+4 0 13590
+4 0 13590
+4 0 13590 0 0 0 0 0 0 0 0 13590 856
jcnd=1294/13590 0x3877c89c60 0 
* 0 
-32 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
jcnd=10/170 0x3877c89c60 0 
* 0 
-24 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-16 0 170 170 0 1 0 0 1
+4 0 170 0 170
+4 0 170 0 0 1 0 0 1
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170 4
jcnd=10/170 0x3877c89c60 0 
* 0 
+6 0 12932
+4 0 12932 12932
+3 0 12932 0 12932 0 0 20 0 0 20
+3 0 12932 12932
+4 0 12932 0 12932 0 0 3 0 0 3
+4 0 12932 12932
+4 0 12932 0 12932 0 0 18 0 0 18
+4 0 12932 12932
+4 0 12932 0 12932
+4 0 12932
jump=12932 -80 0 
* 0 
-30 0 160 160
+3 0 160 0 160
+3 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160 0 0 1 0 0 1
+4 0 160 160
+4 0 160 0 160
+4 0 160
jump=160 -80 0 
* 0 
-24 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
jump=170 -80 0 
* 0 
-16 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
jump=160 -80 0 
* 0 
+8 0 160 160
+3 0 160
+4 0 160 0 0 1 0 0 1
+4 0 160
+4 0 160
jump=160 -39 0 
* 0 
+9 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+6 0 170 170
+3 0 170
+4 0 170
jump=170 -72 0 
* 0 
+8 0 160
+4 0 160 160
+3 0 160 0 0 0 0 0 0 0 0 160
+2 0 160
+4 0 160
jump=160 -99 0 
* 0 
+11 0 170 170 0 1 0 0 1
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b78 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b70 0 
* 0 
+9 0 170 170
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b68 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b60 0 
* 0 
+9 0 1330 0 1330 1 0 0 1
+3 0 1330 1330

totals: 10337581 4232250 2440917 241 99 140 241 99 140 299155 5253 8030 165
