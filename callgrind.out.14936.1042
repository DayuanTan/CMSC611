version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1042


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1286491971 - 1286601719
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 206 0 206
+1 * 206
+3 * 206 0 206 0 0 1 0 0 1
+4 +1 206 206
+4 * 206 206
+1 * 206 206

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 292 0 292 1 0 0 1
+1 * 292
+3 * 292
+4 * 292 0 292
+4 +1 292
+4 * 292
+3 * 292 0 292
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=292 0x404ffe 790 
* * 1752 876 584 1 0 0 1
+5 * 292 292
+3 * 292 292
+1 * 292 292

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 292 0 292 1 0 0 1
+1 * 292
+3 * 292 0 292
+4 +1 292 292
+4 * 292 292
+1 * 292 292

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 292 0 292 1 0 0 1
+1 * 292
+3 * 292
+4 * 292 0 292
+4 +1 292
+4 * 292
+3 * 292 0 292 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=292 0x40500c 790 
* * 1752 876 584 1 0 0 1
+5 * 292 292
+3 * 292 292
+1 * 292 292

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 206 0 206
+1 * 206
+3 * 206 0 206
+4 +1 206 206
+4 * 206 206
+1 * 206 206

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 292 0 292 1 0 0 1
+1 * 292
+3 * 292 0 292
+4 +1 292 292 0 1 0 0 1
+4 * 292 292
+1 * 292 292

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 146 0 146
+1 * 146
+3 * 146 0 146
+4 * 146 0 146
+4 * 146 146
+4 * 146 146
+1 * 146 146

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(28) __gnu_cxx::new_allocator<int>::max_size() const
0x404992 113 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+4 +1 164
+10 * 164 164
+1 * 164 164

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 146 0 146
+1 * 146
+3 * 146 0 146
+4 * 146 146
+1 * 146 146

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 73 0 73
+1 * 73
+3 * 73
+4 * 73 0 73
+4 * 73 0 73
+4 * 73 0 73
+4 +1 73 73
+4 * 73
+3 * 73
+5 * 73 0 73
cfi=(16)
cfn=(226)
calls=73 0x402d61 -20 
* * 511 219 219
+5 * 73
+3 * 73 0 0 0 0 0 0 0 0 73
+2 * 73 73
+4 * 73 73 0 0 5 0 0 5
+2 * 73 0 73 0 0 1 0 0 1
+2 * 73 73
+1 * 73 73

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 152 0 152
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 * 152 0 152
+4 +1 152 152
+4 * 152
+3 * 152 0 152
cob=(5) /usr/lib64/libstdc++.so.6.0.13
cfi=(8) ???
cfn=(164) operator delete(void*)
calls=152 0x387e4bb2f0 0 
* * 17084 4306 2288 21 4 0 21 4 0 4014 90 152
* * 152 152 0 1 1 0 1 1 0 0 0 152
+5 * 152 152
+1 * 152 152

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 152 0 152
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 * 152 0 152
+4 +1 152 152
+4 * 152
+3 * 152 0 152
cob=(5)
cfi=(8)
cfn=(164)
calls=152 0x387e4bb2f0 0 
* * 16770 4226 2144 0 0 0 0 0 0 3952 30 152
* * 152 152 0 0 0 0 0 0 0 0 0 152
+5 * 152 152
+1 * 152 152

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 152 0 152 1 0 0 1
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 * 152 0 152
+4 +2 152 152
+4 * 152
+3 * 152 0 152
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=152 0x4048de +12 
* * 912 304 304 1 0 0 1
+5 * 152 152
+4 * 152 0 0 1 0 0 1
+3 * 152
+2 * 152 0 0 0 0 0 0 0 0 152
jcnd=152/152 +7 +3 
* * 
+7 +3 152 152
+4 * 152
+4 * 152
+3 * 152 0 152
cob=(5)
cfi=(8)
cfn=(32) operator new(unsigned long)
calls=152 0x387e4bd0b0 0 
* * 36207 6136 5439 11 12 19 11 12 19 5879 169 152
* * 152 152 0 0 0 0 0 0 0 0 0 152
+5 +1 152 152
+1 * 152 152

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146 0 0 1 0 0 1
+4 * 146 0 146
+4 * 146 146
+1 * 146 146

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+4 * 146 0 146
+4 * 146 146
+1 * 146 146

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 146 0 146
+1 * 146
+3 * 146 0 146
+4 * 146 146
+1 * 146 146

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 152 0 152 1 0 0 1
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 * 152 0 152 1 0 0 1
+4 +2 152 152
+4 * 152
+3 * 152 0 152
cfn=(28)
calls=152 0x404992 +12 
* * 912 304 304 1 0 0 1
+5 * 152 152
+4 * 152
+3 * 152
+2 * 152 0 0 0 0 0 0 0 0 152
jcnd=152/152 +7 +3 
* * 
+7 +3 152 152
+4 * 152
+4 * 152
+3 * 152 0 152
cob=(5)
cfi=(8)
cfn=(32)
calls=152 0x387e4bd0b0 0 
* * 36373 6076 5896 26 20 19 26 20 19 5841 250 152
* * 152 152 0 1 1 0 1 1 0 0 0 152
+5 +1 152 152
+1 * 152 152

fn=(102)
0x4048de 113 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+4 +1 164
+10 * 164 164
+1 * 164 164

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 73 0 73
+1 * 73
+3 * 73
+4 * 73 0 73
+4 * 73 0 73
+4 * 73 0 73
+4 +1 73 73
+4 * 73
+3 * 73
+5 * 73 0 73
cfi=(16)
cfn=(226)
calls=73 0x402d61 -20 
* * 511 219 219
+5 * 73
+3 * 73 0 0 0 0 0 0 0 0 73
+2 * 73 73
+4 * 73 73 0 0 6 0 0 6
+2 * 73 0 73 0 0 5 0 0 5
+2 * 73 73
+1 * 73 73

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=146 0x404484 107 
* * 48618 15018 14146 25 3 2 25 3 2 1610 90 288 36
+5 * 146 146
+1 * 146 146

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146 0 1 0 0 1
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=146 0x404a36 450 
* * 44530 13558 12686 24 3 2 24 3 2 1610 90 288 36
+5 * 146 146
+1 * 146 146

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=146 0x40439c 107 
* * 48618 15018 14146 7 1 6 7 1 6 1610 81 288
+5 * 146 146
+1 * 146 146

fn=(116)
0x40439c 107 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +10 146 146
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=146 0x4047d7 -26 
* * 46574 14288 13416 7 1 6 7 1 6 1610 81 288
+5 +1 146 146
+1 * 146 146

fn=(118)
0x4047d7 91 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=146 0x4049e2 450 
* * 44530 13558 12686 7 1 6 7 1 6 1610 81 288
+5 * 146 146
+1 * 146 146

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 4 2 0 4 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 4 2 0 4 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 4 1 0 4 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +10 146 146
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(52)
calls=146 0x404829 -26 
* * 46574 14288 13416 25 3 2 25 3 2 1610 90 288 36
+5 +1 146 146
+1 * 146 146

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 4 2 0 4 60 2 11
+5 * 12 12
+1 * 12 12

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+1 * 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146 146
+4 * 146
+3 * 146 146
+4 * 146 146
+3 * 146
+3 * 146
+3 * 146
+4 * 146
+3 * 146 146
+4 * 146 146
+3 -1 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=146 0x403d98 +11 
* * 20244 5536 3528 1 0 0 1 0 0 3962 25 292
+5 +1 146 146
+4 * 146
+3 * 146 0 146
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=146 0x403296 -82 
* * 3358 1168 1168 1 0 0 1
+5 * 146
jump=146 +28 * 
* * 
+28 * 146
+4 * 146 146
+1 * 146 146
+1 * 146 146

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 608 0 608 1 0 0 1
+1 * 608
+3 * 608 0 608 0 0 1 0 0 1
+4 +1 608 608
+4 * 608 608 0 1 1 0 1 1
+4 * 608
+3 * 608 608
+4 * 608 608
+3 * 608
+3 * 608
+3 * 608
+4 * 608 608
+1 * 608 608

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=146 0x404236 -14 
* * 40981 7731 7400 23 16 12 23 16 12 5894 217 292
+5 * 146 146
+4 * 146 0 146
+3 +1 146 146
+4 * 146 146 0 1 0 0 1
+3 * 146 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+3 * 146 146
+4 * 146
+4 * 146
+3 * 146 146
+4 * 146 0 146
+4 +1 146 146
+1 * 146 146

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146 146 0 1 0 0 1
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=146 0x403fbe -14 
* * 40969 7805 6959 15 8 15 15 8 15 5960 158 292
+5 * 146 146
+4 * 146 0 146
+3 +1 146 146
+4 * 146 146
+3 * 146 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+3 * 146 146
+4 * 146
+4 * 146
+3 * 146 146
+4 * 146 0 146
+4 +1 146 146
+1 * 146 146

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 73 0 73
+1 * 73
+3 * 73 0 0 1 0 0 1
+4 * 73 0 73
+4 * 73 0 73
+4 +2 73 73
+4 * 73 73
+4 * 73 73
+4 * 73 73
+4 * 73
+3 * 73 0 0 0 0 0 0 0 0 73
jcnd=6/73 +51 +10 
* * 
+2 +3 67 67
+4 * 67 67
+4 * 67 67
+4 -1 67 67
+4 * 67
+3 * 67
+3 * 67 0 67
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=67 0x4036b1 215 
* * 2546 871 938 0 5 2 0 5 2 67
+5 +2 67 67
+4 * 67 67
+4 * 67
+4 * 67 67
+4 * 67 0 67
+4 * 67
jump=67 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8492 2615 2265 27 6 14 27 6 14 489 46 35
+5 +2 73 73
+1 * 73 73

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 310 0 310 1 0 0 1
+1 * 310
+3 * 310 0 310 1 0 0 1
+4 +1 310 310
+4 * 310 310
+1 * 310 310

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+3 * 146 0 146
+4 * 146
+4 * 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=146 0x404380 726 
* * 1460 730 584
+5 * 146 146
+4 * 146 146
+1 * 146 146

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 146 0 146
+1 * 146
+3 * 146 0 146
+1 * 146
+4 * 146 0 146 1 0 0 1
+4 +2 146 146
+4 * 146
+3 * 146 0 146
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=146 0x40325e 113 
* * 876 438 292
+5 * 146
+3 * 146 146
+4 * 146 146
+4 * 146 146
+4 * 146 146
+3 -1 146
+3 * 146
+3 * 146 0 146
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=146 0x40326c 148 
* * 4526 1460 1752 4 0 0 4
+5 +1 146 146
+4 * 146
+3 * 146 0 146
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=146 0x4031ec 159 
* * 28030 8402 5574 25 5 0 25 5 0 4030 87 292
+5 * 146
jump=146 +28 * 
* * 
+28 * 146 0 0 1 0 0 1
+4 * 146 146
+1 * 146 146
+1 * 146 146

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 152 0 152 1 0 0 1
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 * 152 0 152
+4 +2 152 152
+5 * 152 0 0 0 0 0 0 0 0 152
+2 +1 152 152
+4 * 152 152
+4 * 152 152
+4 * 152
+3 * 152
+3 * 152 0 152
cfi=(5)
cfn=(160)
calls=152 0x4044d6 -65 
* * 18908 4914 3048 22 5 0 22 5 0 4014 90 304
+5 +1 152 152
+1 * 152 152

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 146 0 146
+1 * 146
+3 * 146 0 146
+1 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=146 0x4043ca -45 
* * 5256 1898 2044 4 0 4 4 0 4
+5 +1 146 146 0 1 0 0 1
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(20)
calls=146 0x404412 +43 
* * 44631 9483 8422 24 16 12 24 16 12 5894 217 292
+5 * 146
jump=146 +28 * 
* * 
+28 * 146
+4 * 146 146
+1 * 146 146
+1 * 146 146

fn=(14)
0x4043ca 90 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146 0 0 1 0 0 1
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=146 0x404804 +24 
* * 2628 876 1022 2 0 1 2 0 1
+5 * 146 146
+4 * 146 0 146 0 0 2 0 0 2
+7 * 146 146
+4 * 146 0 146 1 0 0 1
+8 * 146 146
+4 * 146 0 146
+8 +1 146 146
+1 * 146 146

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+2 * 146 0 146
+2 * 146 0 146
+1 * 146 0 0 1 0 0 1
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146
+3 * 146 0 146
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=146 0x4039fc 117 
* * 876 438 292 2 0 0 2
+5 * 146
+3 * 146 0 146
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=146 0x4039ed -88 
* * 876 438 292
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(2)
calls=146 0x402d74 645 
* * 1898 876 292
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146
+3 * 146
+3 * 146 0 146 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=146 0x403a0a 134 
* * 53087 12477 11047 22 8 15 22 8 15 5960 158 292
+5 +4 146 146
+4 * 146
+3 * 146 0 146
cfn=(106)
calls=146 0x40325e 113 
* * 876 438 292 1 0 0 1
+5 * 146
+3 * 146 146
+4 * 146 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=146 0x403a98 565 
* * 3650 1460 1168 2 0 0 2
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(112)
calls=146 0x403a68 547 
* * 3650 1460 1168
+5 * 146
+3 * 146
+3 * 146
+3 * 146
+3 * 146 0 146
cfi=(11)
cfn=(114)
calls=146 0x403ac9 -60 
* * 50808 15748 15022 7 1 6 7 1 6 1610 81 288
+5 -3 146 146
+4 * 146 0 146
+4 * 146
jump=146 +28 +4 
* * 
+28 +4 146
+4 * 146 146
+1 * 146 146
+2 * 146 146
+2 * 146 146
+1 * 146 146

fn=(188)
0x403d98 171 152 0 152 1 0 0 1
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 * 152 0 152
+4 +2 152 152
+5 * 152 0 0 0 0 0 0 0 0 152 6
+2 +1 152 152
+4 * 152 152
+4 * 152 152
+4 * 152
+3 * 152
+3 * 152 0 152
cfi=(5)
cfn=(190)
calls=152 0x40452a -65 
* * 18594 4834 2904 0 0 0 0 0 0 3952 30 304
+5 +1 152 152
+1 * 152 152

fn=(22)
0x404236 167 152 0 152 1 0 0 1
+1 * 152
+3 * 152
+4 * 152 0 152 1 0 0 1
+4 * 152 0 152
+4 0 152 152
+5 0 152 0 0 0 0 0 0 0 0 152
+2 0 152 152
+4 0 152 152
+4 0 152
+5 0 152
+3 0 152
+3 0 152 0 152
fi=(6) ???
cfi=(5)
cfn=(26)
calls=152 0x404730 99 
* 0 40325 7292 7112 30 21 19 30 21 19 5993 250 304
+5 0 152
fi=(6)
jump=152 +7 0 
* 0 
+7 0 152 152
+1 0 152 152

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+4 * 146 0 146
+4 * 146
+4 * 146 0 0 1 0 0 1
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=146 0x404468 726 
* * 1460 730 584 1 0 0 1
+5 * 146 146
+4 * 146 146
+1 * 146 146

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+3 * 146 0 146
+4 * 146
+4 * 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(10)
cfn=(44)
calls=146 0x404468 726 
* * 1460 730 584
+5 * 146 146
+4 * 146 146
+1 * 146 146

fn=(86)
0x403a0a 134 146 0 146
+1 * 146
+3 * 146 0 146
+1 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=146 0x4042e2 -45 
* * 5256 1898 2044 5 0 0 5
+5 +1 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146 1 0 0 1
cfn=(94)
calls=146 0x40432a +43 
* * 44619 9557 7981 16 8 15 16 8 15 5960 158 292
+5 * 146
jump=146 +28 * 
* * 
+28 * 146
+4 * 146 146
+1 * 146 146
+1 * 146 146

fn=(88)
0x4042e2 90 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=146 0x4047b2 +24 
* * 2628 876 1022 3 0 0 3
+5 * 146 146
+4 * 146 0 146
+7 * 146 146
+4 * 146 0 146
+8 * 146 146
+4 * 146 0 146
+8 +1 146 146
+1 * 146 146

fn=(156)
0x4031ec 159 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+1 * 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146 146 0 1 0 0 1
+4 * 146
+3 * 146 146
+4 * 146 146
+3 * 146
+3 * 146
+3 * 146
+4 * 146
+3 * 146 146
+4 * 146 146
+3 -1 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(158)
calls=146 0x403ce6 +11 
* * 20584 5628 3676 22 5 0 22 5 0 4030 87 292
+5 +1 146 146
+4 * 146
+3 * 146 0 146
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=146 0x4031b8 -82 
* * 3358 1168 1168 1 0 0 1
+5 * 146
jump=146 +28 * 
* * 
+28 * 146
+4 * 146 146
+1 * 146 146
+1 * 146 146

fn=(172)
0x4031b8 79 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 146
+4 * 146
+3 * 146 0 146
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=146 0x403ccc +42 
* * 2044 730 730
+5 * 146 146
+1 * 146 146

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246)
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 316 0 316 1 0 0 1
+1 * 316
+3 * 316 0 316
+4 +1 316 316
+4 * 316 316 0 0 2 0 0 2
+4 * 316
+3 * 316 316
+4 * 316 316
+3 * 316
+3 * 316
+3 * 316
+4 * 316 316
+1 * 316 316

fn=(106)
0x40325e 113 310 0 310 1 0 0 1
+1 * 310
+3 * 310 0 310
+4 +1 310 310
+4 * 310 310
+1 * 310 310

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158 0 0 1 0 0 1
+4 +1 158 158
+4 * 158 158
+1 * 158 158

fn=(82)
0x4039fc 117 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158 1 0 0 1
+4 +1 158 158
+4 * 158 158
+1 * 158 158

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 73 0 73
+1 * 73
+3 * 73
+4 * 73 0 73
+4 * 73 0 73
+4 +2 73 73
+4 * 73 73
+4 * 73 73
+4 * 73 73
+4 * 73
+3 * 73 0 0 0 0 0 0 0 0 73 7
jcnd=6/73 +51 +10 
* * 
+2 +3 67 67
+4 * 67 67
+4 * 67 67
+4 -1 67 67
+4 * 67
+3 * 67
+3 * 67 0 67
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=67 0x403373 215 
* * 2546 871 938 0 4 0 0 4 0 67
+5 +2 67 67
+4 * 67 67
+4 * 67
+4 * 67 67
+4 * 67 0 67
+4 * 67
jump=67 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8312 2589 2245 24 5 8 24 5 8 455 17 35
+5 +2 73 73
+1 * 73 73

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+2 * 146 0 146
+2 * 146 0 146
+1 * 146
+4 * 146 0 146 1 0 0 1
+4 * 146 0 146
+4 +2 146 146
+4 * 146
+3 * 146 0 146
cfn=(6)
calls=146 0x403b08 117 
* * 876 438 292 1 0 1 1 0 1
+5 * 146
+3 * 146 0 146
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=146 0x403afa -88 
* * 876 438 292 1 0 0 1
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(10)
calls=146 0x402f54 645 
* * 1898 876 292 1 1 0 1 1
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146
+3 * 146
+3 * 146 0 146
cfn=(12)
calls=146 0x403b16 134 
* * 53099 12403 11488 29 16 16 29 16 16 5894 217 292
+5 +4 146 146 0 1 0 0 1
+4 * 146
+3 * 146 0 146
cfn=(40)
calls=146 0x40333c 113 
* * 876 438 292 2 0 0 2
+5 * 146
+3 * 146 146
+4 * 146 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(42)
calls=146 0x403ba4 565 
* * 3650 1460 1168 3 0 0 3
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(46)
calls=146 0x403b74 547 
* * 3650 1460 1168
+5 * 146
+3 * 146
+3 * 146
+3 * 146
+3 * 146 0 146 1 0 0 1
cfi=(11)
cfn=(48)
calls=146 0x403bd5 -60 
* * 50808 15748 15022 26 3 2 26 3 2 1610 90 288 36
+5 -3 146 146
+4 * 146 0 146
+4 * 146
jump=146 +28 +4 
* * 
+28 +4 146
+4 * 146 146
+1 * 146 146
+2 * 146 146
+2 * 146 146
+1 * 146 146

fn=(108)
0x403a98 565 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+4 * 146 0 146
+4 * 146
+4 * 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(10)
cfn=(110)
calls=146 0x404380 726 
* * 1460 730 584 1 0 0 1
+5 * 146 146
+4 * 146 146
+1 * 146 146

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 146 0 146
+1 * 146
+3 * 146 0 146
+1 * 146
+4 * 146 0 146 1 0 0 1
+4 +2 146 146
+4 * 146
+3 * 146 0 146
cfn=(40)
calls=146 0x40333c 113 
* * 876 438 292
+5 * 146
+3 * 146 146
+4 * 146 146
+4 * 146 146
+4 * 146 146
+3 -1 146
+3 * 146
+3 * 146 0 146
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=146 0x40334a 148 
* * 4526 1460 1752 2 0 0 2
+5 +1 146 146
+4 * 146
+3 * 146 0 146
cfn=(186)
calls=146 0x4032ca 159 
* * 27690 8310 5426 3 0 0 3 0 0 3962 25 292
+5 * 146
jump=146 +28 * 
* * 
+28 * 146 0 0 1 0 0 1
+4 * 146 146
+1 * 146 146
+1 * 146 146

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96)
0x403fbe 167 152 0 152 1 0 0 1
+1 * 152 0 0 1 0 0 1
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 0 152 152
+5 0 152 0 0 0 0 0 0 0 0 152
+2 0 152 152
+4 0 152 152
+4 0 152
+5 0 152
+3 0 152
+3 0 152 0 152
fi=(6)
cfi=(5)
cfn=(100)
calls=152 0x40461a 99 
* 0 40159 7352 6655 14 12 19 14 12 19 6031 169 304
+5 0 152
fi=(6)
jump=152 +7 0 
* 0 
+7 0 152 152
+1 0 152 152

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 8468 0 8468
+1 * 8468
+3 * 8468 0 8468
+4 * 8468 0 8468
+4 +1 8468 8468
+4 * 8468 8468
+3 * 8468 8468
+4 * 8468
+4 * 8468
+3 * 8468 8468
+1 * 8468 8468

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 8468 0 8468
+1 * 8468
+3 * 8468 0 8468 1 0 0 1
+4 * 8468 0 8468
+4 +1 8468 8468
+4 * 8468 8468
+3 * 8468 8468
+4 * 8468
+4 * 8468
+3 * 8468 8468
+1 * 8468 8468

fn=(192)
0x403296 79 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 146
+4 * 146
+3 * 146 0 146
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=146 0x403d7e +42 
* * 2044 730 730 1 0 0 1
+5 * 146 146
+1 * 146 146

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146 1 0 0 1
+4 * 146 0 146
+4 * 146 0 146
+4 +8 146 0 146
+4 +3 146 146
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=146 0x404f37 -22 
* * 21170 5674 4656 14 3 1 14 3 1 1610 90 288 36
+5 +1 146 146
+1 * 146 146

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 146 0 146
+1 * 146
+3 * 146 0 146
+2 * 146 0 146
+1 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +4 146 146
+4 * 146
+3 * 146 0 146
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=146 0x404878 277 
* * 2190 876 730 1 0 0 1
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=146 0x404d44 277 
* * 3650 1314 1168 2 0 0 2
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(132)
calls=146 0x404d44 277 
* * 3650 1314 1168
+5 * 146
+3 * 146
+3 * 146
+3 * 146 0 146
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=146 0x404d5e -49 
* * 23360 6404 5532 1 1 6 1 1 6 1610 81 288
+5 +1 146
+4 * 146 146
+1 * 146 146
+2 * 146 146
+1 * 146 146

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 146 0 146
+1 * 146
+3 * 146 0 146
+1 * 146
+4 * 146 0 146 1 0 0 1
+4 * 146 0 146
+4 * 146 0 146
+4 +10 146 146
+4 * 146
+3 * 146 0 146
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=146 0x404c38 288 
* * 2190 876 730 3 0 0 3
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(56)
calls=146 0x404c38 288 
* * 2190 876 730
+5 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=146 0x404c52 -36 
* * 36938 10930 10058 20 3 2 20 3 2 1610 90 288 36
+5 +1 146
+4 * 146 146
+1 * 146 146
+1 * 146 146

fn=(60)
0x404c52 424 146 0 146
+1 * 146
+3 * 146 0 146
+2 * 146 0 146
+1 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +4 146 146
+4 * 146
+3 * 146 0 146
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=146 0x40492d 277 
* * 2190 876 730 2 0 0 2
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=146 0x404d9d 277 
* * 3650 1314 1168 2 0 1 2 0 1
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(66)
calls=146 0x404d9d 277 
* * 3650 1314 1168
+5 * 146
+3 * 146
+3 * 146
+3 * 146 0 146
cfn=(72)
calls=146 0x404db7 -49 
* * 23360 6404 5532 15 3 1 15 3 1 1610 90 288 36
+5 +1 146
+4 * 146 146
+1 * 146 146
+2 * 146 146
+1 * 146 146

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 4 0 0 4 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 182 0 182 1 0 0 1
+1 * 182
+3 * 182
+4 * 182 0 182
+4 +1 182 182
+4 * 182
+3 * 182 0 182 1 0 0 1
cfi=(13)
cfn=(64)
calls=182 -33 -66 
* * 1092 546 364
+5 * 182 182
+1 * 182 182

fn=(66)
0x404d9d 277 292 0 292
+1 * 292
+3 * 292
+4 * 292 0 292
+4 +1 292 292
+4 * 292
+3 * 292 0 292
cfi=(13)
cfn=(68)
calls=292 0x404f1a -58 
* * 4672 1752 1460 2 0 1 2 0 1
+5 * 292 292
+1 * 292 292

fn=(240)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 4 0 0 4 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 146 0 146
+1 * 146
+3 * 146 0 146
+1 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +10 146 146
+4 * 146
+3 * 146 0 146
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=146 0x404bc6 288 
* * 2190 876 730 3 0 0 3
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(122)
calls=146 0x404bc6 288 
* * 2190 876 730
+5 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(126)
calls=146 0x404be0 -36 
* * 36938 10930 10058 4 1 6 4 1 6 1610 81 288
+5 +1 146
+4 * 146 146
+1 * 146 146
+1 * 146 146

fn=(128)
0x404878 277 182 0 182
+1 * 182
+3 * 182
+4 * 182 0 182 1 0 0 1
+4 +1 182 182
+4 * 182
+3 * 182 0 182
cfi=(13)
cfn=(130)
calls=182 -33 -66 
* * 1092 546 364 0 0 1 0 0 1
+5 * 182 182
+1 * 182 182

fn=(132)
0x404d44 277 292 0 292
+1 * 292
+3 * 292
+4 * 292 0 292
+4 +1 292 292
+4 * 292
+3 * 292 0 292
cfi=(13)
cfn=(134)
calls=292 0x404e98 -58 
* * 4672 1752 1460 2 0 0 2
+5 * 292 292
+1 * 292 292

fn=(138)
0x404d5e 379 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +8 146 0 146
+4 +3 146 146
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=146 0x404eb5 -22 
* * 21170 5674 4656 1 1 6 1 1 6 1610 81 288
+5 +1 146 146
+1 * 146 146

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 4 1 0 4 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 292 0 292 1 0 0 1
+1 * 292
+3 * 292
+4 * 292 0 292
+4 +1 292 292
+4 * 292
+3 * 292 0 292
cfi=(13)
cfn=(124)
calls=292 0x404d36 -77 
* * 1752 876 584 2 0 0 2
+5 * 292 292
+1 * 292 292

fn=(56)
0x404c38 288 292 0 292 1 0 0 1
+1 * 292
+3 * 292
+4 * 292 0 292 1 0 0 1
+4 +1 292 292
+4 * 292
+3 * 292 0 292
cfi=(13)
cfn=(58)
calls=292 0x404d8f -77 
* * 1752 876 584 1 0 0 1
+5 * 292 292
+1 * 292 292

fn=(74)
0x404f37 368 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158 1 0 0 1
+4 * 158 0 158
+4 * 158 0 158
+4 +2 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158
+4 * 158 0 158
+4 +1 158 158
+5 * 158 0 0 0 0 0 0 0 0 158
jcnd=6/158 +33 +2 
* * 
+2 +1 152 152
+4 * 152
+8 * 152 152
+4 * 152 152
+4 * 152
+3 * 152 0 0 1 0 0 1
+3 * 152 0 152 0 0 1 0 0 1
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(78) memmove
calls=152 0x3877c83840 0 
* * 17592 4178 3879 11 2 4 11 2 4 1512 92 147 36
* * 152 152 0 1 1 0 1 1 0 0 0 152
+5 +1 158 158
+4 * 158
+8 * 158 158
+4 * 158
+3 +1 158 158
+1 * 158 158

fn=(140)
0x404eb5 368 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158 1 0 0 1
+4 * 158 0 158
+4 * 158 0 158 0 0 1 0 0 1
+4 +2 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158
+4 * 158 0 158
+4 +1 158 158
+5 * 158 0 0 0 0 0 0 0 0 158
jcnd=6/158 +33 +2 
* * 
+2 +1 152 152
+4 * 152
+8 * 152 152
+4 * 152 152
+4 * 152
+3 * 152
+3 * 152 0 152
cob=(2)
cfi=(9)
cfn=(78)
calls=152 0x3877c83840 0 
* * 17592 4178 3879 0 1 7 0 1 7 1512 84 147
* * 152 152 0 0 0 0 0 0 0 0 0 152
+5 +1 158 158
+4 * 158
+8 * 158 158
+4 * 158
+3 +1 158 158
+1 * 158 158

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 292 0 292 1 0 0 1
+1 * 292
+3 * 292 0 292
+4 +1 292 292
+4 * 292 292
+1 * 292 292

fn=(110)
0x404380 726 292 0 292 1 0 0 1
+1 * 292
+3 * 292 0 292
+4 * 292 0 292
+4 * 292 292
+4 * 292 292
+3 * 292 292
+4 * 292 0 292
+3 * 292 292
+1 * 292 292

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 292 0 292 1 0 0 1
+1 * 292
+3 * 292 0 292
+4 +1 292 292
+4 * 292 292
+1 * 292 292

fn=(44)
0x404468 726 292 0 292
+1 * 292
+3 * 292 0 292
+4 * 292 0 292
+4 * 292 292
+4 * 292 292
+3 * 292 292
+4 * 292 0 292 1 0 0 1
+3 * 292 292
+1 * 292 292

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262)
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 152 0 152 1 0 0 1
+1 * 152
+3 * 152 0 152
+4 * 152 0 152 1 0 0 1
+4 * 152 152
+1 * 152 152

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 152 0 152 1 0 0 1
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 +4 152 152
+4 * 152 152
+4 * 152
+3 * 152
+3 * 152 0 152
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=152 0x40454c -14 
* * 912 304 456 1 0 0 1
+5 +2 152 152
+1 * 152 152

fn=(150)
0x40326c 148 152 0 152
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 * 152 0 152
+4 +3 152 152 0 1 0 0 1
+4 * 152 152
+4 * 152
+3 * 152
+3 * 152 0 152
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=152 0x403d1a -29 
* * 2736 912 1064 3 0 0 3
+5 +1 152 152
+1 * 152 152

fn=(180)
0x40334a 148 152 0 152
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 * 152 0 152
+4 +3 152 152
+4 * 152 152
+4 * 152
+3 * 152
+3 * 152 0 152
cfn=(182)
calls=152 0x403dcc -29 
* * 2736 912 1064 2 0 0 2
+5 +1 152 152
+1 * 152 152

fn=(152)
0x403d1a 122 152 0 152 1 0 0 1
+1 * 152
+3 * 152
+4 * 152 0 152
+4 * 152 0 152
+4 +4 152 152
+4 * 152 152
+4 * 152
+3 * 152
+3 * 152 0 152
cfn=(154)
calls=152 0x4044f8 -14 
* * 912 304 456 2 0 0 2
+5 +2 152 152
+1 * 152 152

fn=(184)
0x40454c 112 152 0 152 1 0 0 1
+1 * 152
+3 * 152 0 152
+4 * 152 0 152
+4 * 152 152
+1 * 152 152

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1776 321 320 9 5 7 9 5 7 251 33 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 1 3 0 1 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 4 3 0 4 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 11 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1622 307 304 1 4 4 1 4 4 223 11 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 3 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 73 0 73 1 0 0 1
+1 * 73
+3 * 73
+4 * 73 0 73
+4 * 73 0 73
+4 +1 73 73
+4 * 73
+3 * 73 0 73
cfi=(2)
cfn=(2)
calls=73 0x402d74 645 
* * 949 438 146
+5 * 73
+3 * 73 0 73
+3 +1 73 73
+6 * 73 0 73
+3 * 73 73
+6 * 73 0 73
+3 +1 73 73
+6 * 73 0 73 1 0 0 1
+3 * 73 73
+6 * 73 0 73
+3 +2 73 0 73
+7 * 73
jump=73 +86 * 
* * 
+2 +1 2774 2774
+3 * 2774
+3 * 2774 2774
+4 * 2774
+3 * 2774
+3 * 2774 0 2774
cfi=(2)
cfn=(144)
calls=2774 0x402d9a 770 
* * 30514 13870 8322
+5 * 2774 2774
+4 * 2774 2774
+5 * 2774
+4 * 2774 0 2774
+5 +1 2774 2774
+3 * 2774
+3 * 2774 2774
+4 * 2774
+3 * 2774
+3 * 2774 0 2774
cfi=(2)
cfn=(146)
calls=2774 0x402dba 770 
* * 30514 13870 8322 1 0 0 1
+5 * 2774 2774
+2 * 2774
+4 * 2774 2774
+5 * 2774
+4 * 2774 0 2774
+5 -2 2774 0 2774
+4 * 2774 2774
+3 * 2774
+3 * 2774 2774
+3 * 2774 0 0 0 0 0 0 0 0 2774 74
jcnd=2701/2774 -93 +1 
* * 
-9 * 73 73 0 1 0 0 1
+3 * 73
+3 * 73 73
+3 * 73 0 0 0 0 0 0 0 0 73
jcnd=73/73 -93 +1 
* * 
+2 +4 73 73
+3 * 73
+3 * 73
+4 * 73 73 0 1 0 0 1
+5 * 73
+4 * 73
+3 * 73 0 73
+5 +1 73 73
+3 * 73
+3 * 73
+4 * 73 73
+5 * 73
+4 * 73
+3 * 73 0 73
+5 +1 73 0 73
+7 * 73
jump=73 0x4016ee * 
* * 
+2 +1 2774 2774
+3 * 2774
+3 * 2774 2774
+4 * 2774
+3 * 2774 0 0 1 0 0 1
+3 * 2774 0 2774
cfi=(2)
cfn=(146)
calls=2774 0x402dba 770 
* * 30514 13870 8322
+5 * 2774 2774
+2 * 2774
+4 * 2774 2774
+5 * 2774 0 2774
+5 +1 2774 2774
+3 * 2774
+3 * 2774 2774
+4 * 2774
+3 * 2774
+3 * 2774 0 2774
cfi=(2)
cfn=(144)
calls=2774 0x402d9a 770 
* * 30514 13870 8322
+5 * 2774 2774
+4 * 2774 2774
+5 * 2774 0 2774
+5 +1 2774 2774
+5 * 2774 2774
+5 * 2774 2774
+5 * 2774
+4 * 2774 0 2774
+5 +1 2774 2774
+5 * 2774 2774
+5 * 2774 2774
+5 * 2774
+4 * 2774 0 2774
+5 -4 2774 0 2774
+4 * 2774 2774
+3 * 2774
+3 * 2774 2774
+3 * 2774 0 0 0 0 0 0 0 0 2774 74
jcnd=2701/2774 0x401672 +1 
* * 
-9 * 73 73 0 1 0 0 1
+3 * 73
+3 * 73 73
+3 * 73 0 0 0 0 0 0 0 0 73
jcnd=73/73 0x401672 +1 
* * 
+6 +6 73 73 0 1 0 0 1
+5 * 73 73
+5 * 73 0 73
+5 +2 73 73
+3 +1 73 0 73
+3 * 73 73
+5 * 73 73
+1 * 73 73

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 73
+7 * 73
+7 * 73
+3 * 73
+3 * 73 0 73
cfi=(2)
cfn=(4)
calls=73 0x4030b2 310 
* * 61758 17669 16166 63 19 18 63 19 18 3776 207 290 36
+5 * 73
+7 * 73
+7 * 73
+3 * 73
+3 * 73 0 73
cfi=(2)
cfn=(80)
calls=73 0x402ff4 310 
* * 61908 17711 15961 37 9 21 37 9 21 3840 182 290
+5 * 73 0 0 1 0 0 1
+7 * 73
+7 * 73
+3 * 73
+3 * 73 0 73
cfn=(142)
calls=73 0x401585 -52 
* * 293241 129429 67817 8 0 0 8 0 0 5694 148
+5 * 73 0 73
+8 * 73 73
+6 * 73 0 73
+6 * 73
+7 * 73
+3 * 73 0 73
cfi=(2)
cfn=(148)
calls=73 0x402df4 414 
* * 18468 5807 4247 31 5 0 31 5 0 2015 45 146
+5 * 73
+7 * 73
+3 * 73 0 73 1 0 0 1
cfi=(2)
cfn=(178)
calls=73 0x402e74 414 
* * 18298 5761 4173 7 0 0 7 0 0 1981 13 146
+5 +2 73
+7 * 73
+7 * 73
+3 * 73
+3 * 73 0 73
cfi=(2)
cfn=(4)
calls=73 0x4030b2 310 
* * 61275 17636 16038 4 1 1 4 1 1 3728 100 290
+5 * 73
+7 * 73
+7 * 73
+3 * 73
+3 * 73 0 73
cfi=(2)
cfn=(80)
calls=73 0x402ff4 310 
* * 61113 17668 15802 0 0 0 0 0 0 3730 57 290
+5 * 73 73
+6 * 73 0 0 1 0 0 1
+7 * 73
+7 * 73 0 73
+6 * 73 73
+8 * 73
+3 * 73
+3 * 73 0 73
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=73 0x401719 -33 
* * 137459 57086 31609 4 0 0 4 0 0 2847 74
+5 * 73 0 73
+8 * 73 73
+6 * 73 0 73
+6 * 73
+7 * 73 0 0 1 0 0 1
+3 * 73 0 73
cfi=(2)
cfn=(148)
calls=73 0x402df4 414 
* * 18468 5807 4247 0 0 0 0 0 0 2015 42 146
+5 * 73
+7 * 73
+3 * 73 0 73
cfi=(2)
cfn=(178)
calls=73 0x402e74 414 
* * 18298 5761 4173 0 0 0 0 0 0 1981 12 146
+5 +2 73 73
+7 * 73
+3 * 73 0 73
cfi=(2)
cfn=(2)
calls=73 0x402d74 645 
* * 949 438 146
+5 * 73 73
+6 * 73
+3 * 73
+3 * 73
+3 * 73 73
+7 * 73
+3 * 73 0 0 1 0 0 1
+3 * 73 0 73
cfi=(2)
cfn=(144)
calls=73 0x402d9a 770 
* * 803 365 219
+5 * 73
+3 * 73
+7 * 73
+3 * 73
+3 * 73 0 73
cfi=(2)
cfn=(200)
calls=73 0x402eda 901 
* * 12870 4439 3590 27 9 8 27 9 8 595 24 35
+5 +1 73 73
+7 * 73
+3 * 73 0 73
cfi=(2)
cfn=(10)
calls=73 0x402f54 645 
* * 949 438 146 0 1 0 0 1
+5 * 73 73
+6 * 73
+3 * 73
+3 * 73
+3 * 73 73
+7 * 73 0 0 1 0 0 1
+3 * 73
+3 * 73 0 73
cfi=(2)
cfn=(146)
calls=73 0x402dba 770 
* * 803 365 219
+5 * 73
+3 * 73
+7 * 73
+3 * 73
+3 * 73 0 73
cfi=(2)
cfn=(244)
calls=73 0x402f7a 901 
* * 13050 4465 3610 28 11 16 28 11 16 629 46 35
+5 +1 73 73
+7 * 73
+3 * 73 0 73
cfi=(2)
cfn=(10)
calls=73 0x402f54 645 
* * 949 438 146
+5 * 73 73
+6 * 73
+3 * 73
+3 * 73
+3 * 73 73 0 1 0 0 1
+7 * 73
+3 * 73
+3 * 73 0 73
cfi=(2)
cfn=(146)
calls=73 0x402dba 770 
* * 803 365 219
+5 * 73 73
+2 * 73
+4 * 73 73
+8 * 73 73
+8 * 73 0 73
+8 +1 73 73
+7 * 73
+3 * 73 0 73
cfi=(2)
cfn=(2)
calls=73 0x402d74 645 
* * 949 438 146
+5 * 73 73 0 1 0 0 1
+6 * 73
+3 * 73
+3 * 73
+3 * 73 73
+7 * 73
+3 * 73
+3 * 73 0 73
cfi=(2)
cfn=(144)
calls=73 0x402d9a 770 
* * 803 365 219
+5 * 73 73
+4 * 73 73
+8 * 73
+4 * 73 73
+8 * 73
+3 * 73 0 73
+8 +2 73 0 73
+7 -12 73 73
+8 * 73 73
+7 * 73 0 0 0 0 0 0 0 0 73 3
jcnd=1/73 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 73
+7 * 73
+3 * 73 0 73
cfi=(2)
cfn=(2)
calls=73 0x402d74 645 
* * 949 438 146 2 0 1 2 0 1
+5 * 73
+3 * 73 73
+7 * 73
+3 * 73 0 73
cfi=(2)
cfn=(2)
calls=73 0x402d74 645 
* * 949 438 146 0 1 0 0 1
+5 * 73
+3 * 73 0 0 0 0 0 0 0 0 73
+2 * 73 0 0 1 0 0 1
+5 * 73
jump=73 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 73
+2 * 73 0 0 0 0 0 0 0 0 73
jcnd=73/73 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 73 0 73
+1 * 73
+3 * 73
+4 * 73 0 73
+4 * 73 0 73
+4 * 73 0 73
+5 +1 73 73
+4 * 73
+3 * 73 0 73
cfi=(2)
cfn=(2)
calls=73 0x402d74 645 
* * 949 438 146
+5 * 73
+3 * 73 0 73
+3 +1 73 73 0 1 0 0 1
+6 * 73 0 73
+3 * 73 73
+6 * 73 0 73
+3 +2 73 0 73
+7 * 73
jump=73 +86 * 
* * 
+2 +1 2774 2774
+3 * 2774
+3 * 2774 2774
+4 * 2774
+3 * 2774
+3 * 2774 0 2774
cfi=(2)
cfn=(144)
calls=2774 0x402d9a 770 
* * 30514 13870 8322
+5 * 2774 2774
+4 * 2774 2774
+5 * 2774
+4 * 2774 0 2774
+5 +1 2774 2774
+3 * 2774
+3 * 2774 2774
+4 * 2774
+3 * 2774
+3 * 2774 0 2774
cfi=(2)
cfn=(146)
calls=2774 0x402dba 770 
* * 30514 13870 8322
+5 * 2774 2774
+2 * 2774
+4 * 2774 2774
+5 * 2774
+4 * 2774 0 2774
+5 -2 2774 0 2774
+4 * 2774 2774
+3 * 2774
+3 * 2774 2774
+3 * 2774 0 0 0 0 0 0 0 0 2774 74
jcnd=2701/2774 -93 +1 
* * 
-9 * 73 73 0 1 0 0 1
+3 * 73
+3 * 73 73
+3 * 73 0 0 0 0 0 0 0 0 73
jcnd=73/73 -93 +1 
* * 
+2 +4 73 73
+3 * 73
+3 * 73 0 0 1 0 0 1
+4 * 73 73
+5 * 73
+4 * 73
+3 * 73 0 73
+5 +1 73 73
+3 * 73
+3 * 73
+4 * 73 73
+5 * 73
+4 * 73
+3 * 73 0 73
+5 +1 73 73
+5 * 73 73
+5 * 73 73
+5 * 73 0 0 1 0 0 1
+4 * 73
+3 * 73 0 73
+5 +2 73 73
+3 +1 73 0 73
+3 * 73 73
+5 * 73 73
+1 * 73 73

fl=(4)
fn=(174)
0x403ccc 121 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 146
+4 * 146
+3 * 146 0 146
cfi=(5)
cfn=(176)
calls=146 0x4044cc -35 
* * 730 292 292
+5 * 146 146
+1 * 146 146

fn=(90)
0x4047b2 115 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146 1 0 0 1
+4 +1 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(5)
cfn=(92)
calls=146 0x4049d4 -35 
* * 876 292 438 1 0 0 1
+5 * 146 146
+1 * 146 146

fn=(194)
0x403d7e 121 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 146
+4 * 146
+3 * 146 0 146
cfi=(5)
cfn=(196)
calls=146 0x404520 -35 
* * 730 292 292
+5 * 146 146
+1 * 146 146

fn=(16)
0x404804 115 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(5)
cfn=(18)
calls=146 0x404a28 -35 
* * 876 292 438 1 0 1 1 0 1
+5 * 146 146
+1 * 146 146

fl=(3)
fn=(256)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28)
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84)
0x4039ed 224 146 0 146
+1 * 146
+3 * 146 0 146
+4 * 146 146
+4 * 146 146
+1 * 146 146

fn=(222)
0x403373 215 73 0 73
+1 * 73
+3 * 73
+4 * 73 0 73
+4 * 73 0 73
+4 * 73 0 73
+4 +1 73 73
+4 * 73 73
+4 * 73 73
+4 * 73
+3 * 73
+3 * 73 0 73
cfi=(5)
cfn=(224)
calls=73 0x403df2 -87 
* * 1752 584 657 0 5 1 0 5 1 73
+5 * 73 73
+1 * 73 73

fn=(8)
0x403afa 224 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+4 * 146 146
+4 * 146 146
+1 * 146 146

fn=(264)
0x4036b1 215 73 0 73
+1 * 73
+3 * 73
+4 * 73 0 73
+4 * 73 0 73
+4 * 73 0 73
+4 +1 73 73
+4 * 73 73
+4 * 73 73
+4 * 73
+3 * 73
+3 * 73 0 73
cfi=(5)
cfn=(266)
calls=73 0x40406a -87 
* * 1752 584 657 0 6 5 0 6 5 73
+5 * 73 73
+1 * 73 73

fn=(212)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102)
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 186 186 0 1 0 0 1
+6 0 186
+2 0 186 0 0 0 0 0 0 0 0 186
+2 0 186 186

fn=(38) _int_malloc
0x3877c79a00 0 304 0 304 1 0 0 1
+2 0 304
+3 0 304 0 304
+2 0 304 0 304
+2 0 304 0 304 0 0 1 0 0 1
+2 0 304
+3 0 304 0 304
+1 0 304 0 304
+1 0 304
+4 0 304
+4 0 304 0 0 0 0 0 0 0 0 304
+6 0 304
+4 0 304
+6 0 304
+3 0 304
+4 0 304
+4 0 304
+4 0 304
+3 0 304 0 0 0 0 0 0 0 0 304
+6 0 304 304 0 1 1 0 1 1
+7 0 304 0 0 0 0 0 0 0 0 304 5
jcnd=182/304 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 186
+4 0 186 186
+1 0 186 186
+1 0 186 186
+2 0 186 186
+2 0 186 186
+2 0 186 186
+2 0 186 186
+7 0 199
+7 0 199 0 0 1 0 0 1 0 0 199 2
+2 0 199
+3 0 199
+5 0 199
+3 0 199
+4 0 199 0 199
+4 0 199
+2 0 199
+5 0 199 199 0 0 5 0 0 5
+4 0 199
+3 0 199 0 0 0 0 0 0 0 0 199
jcnd=199/199 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 199 0 0 1 0 0 1
+3 0 199
+3 0 199
+3 0 199
+4 0 199
+3 0 199
+4 0 199 0 199
+5 0 199
+3 0 199 0 199
+4 0 199 0 199
+4 0 199 0 199
+5 0 199
+3 0 199
+3 0 199
+3 0 199
+3 0 199
+4 0 199
+4 0 199 0 0 1 0 0 1
+4 0 199 0 199
+4 0 199
+4 0 199 0 199
+5 0 199 0 199
+5 0 199
+3 0 199
+3 0 199 0 199
+5 0 199
+5 0 199
+3 0 199 0 199
+4 0 199 0 199
+4 0 199
+6 0 199 0 199
+4 0 199 0 199
+5 0 199 0 0 1 0 0 1
+3 0 199
+3 0 199
+3 0 199
jump=199 +87 0 
* 0 
+8 0 158
+3 0 158
+4 0 158
+2 0 158
+2 0 158
+3 0 158
+3 0 158
+3 0 158
+2 0 158
+2 0 158
+5 0 158
+2 0 158 158 0 0 1 0 0 1
+4 0 158
+3 0 158
+4 0 158 0 158
+4 0 158 0 158
+8 0 158
+7 0 158 0 158
+4 0 158 0 158
+4 0 158 0 158
+4 0 158 0 0 0 0 0 0 0 0 158
-38 0 73
+3 0 73
+4 0 73 0 73
+4 0 73 0 73
+8 0 73
+7 0 73 0 73
+4 0 73 0 73
+4 0 73 0 73
+4 0 73 0 0 0 0 0 0 0 0 73
+6 0 430 430 0 1 0 0 1
+4 0 430
+3 0 430 0 0 0 0 0 0 0 0 430 21
jcnd=165/430 0x3877c79ef0 0 
* 0 
+6 0 265 265
+4 0 265 265
+4 0 265
+4 0 265 0 0 0 0 0 0 0 0 265
+6 0 265 265 0 1 1 0 1 1
+7 0 265 0 0 0 0 0 0 0 0 265 2
+6 0 265
+4 0 265
+7 0 265 0 0 0 0 0 0 0 0 265 2
+2 0 265
+3 0 265 0 0 0 0 0 0 0 0 265 68
jcnd=182/265 0x3877c79e28 0 
* 0 
+6 0 244
+3 0 244 0 244
+4 0 244 0 244
+5 0 244 0 0 0 0 0 0 0 0 244 8
jcnd=13/244 0x3877c7a090 0 
* 0 
+6 0 231
+7 0 231 0 0 0 0 0 0 0 0 231 6
jcnd=158/231 0x3877c79c50 0 
* 0 
+6 0 73 0 0 1 0 0 1
+3 0 73
+4 0 73
+4 0 73 0 0 0 0 0 0 0 0 73 6
jcnd=7/73 0x3877c79db0 0 
* 0 
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66 0 0 2 0 0 2
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 29
jcnd=66/66 0x3877c79e15 0 
* 0 
-36 0 7
+2 0 7
+2 0 7
+3 0 7
+3 0 7
+8 0 7
+3 0 7
+2 0 7
+2 0 7
+4 0 7 7
+4 0 7
+3 0 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x3877c79e15 0 
* 0 
0x3877c79db0 0 7 0 0 1 0 0 1
+3 0 7
+4 0 7
+4 0 7 0 0 0 0 0 0 0 0 7
+2 0 7
+3 0 7 0 0 1 0 0 1
+7 0 7
jump=7 0x3877c79d18 0 
* 0 
+78 0 73 0 73
+4 0 73 0 73
+4 0 73
+3 0 73
jump=73 0x3877c79c73 0 
* 0 
+8 0 182 182 0 1 0 0 1
+4 0 182
+3 0 182 0 0 0 0 0 0 0 0 182 8
jcnd=91/182 0x3877c79ce1 0 
* 0 
+6 0 91 91
+5 0 91 0 0 0 0 0 0 0 0 91 6
jcnd=70/91 0x3877c79ce1 0 
* 0 
+6 0 21 0 0 1 0 0 1
+3 0 21
+3 0 21
+3 0 21
+7 0 21 0 21
+4 0 21 0 21
+4 0 21
+3 0 21 0 21
+4 0 21 0 21 0 0 16 0 0 16
+4 0 21 0 21
+4 0 21 0 0 0 0 0 0 0 0 21 6
jcnd=11/21 +18 0 
* 0 
+2 0 10 0 10 0 0 3 0 0 3
+8 0 10 0 10
+8 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 1 0 0 1
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 21
+3 0 21
jump=21 0x3877c79ae3 0 
* 0 
+55 0 165 0 0 1 0 0 1
+7 0 165
+3 0 165 0 0 0 0 0 0 0 0 165 2
+6 0 165 165 0 1 0 0 1
+4 0 165
+3 0 165
+3 0 165
+2 0 165
+4 0 165
+3 0 165
+3 0 165
+2 0 165
+2 0 165
+2 0 165
+2 0 165 165 0 0 1 0 0 1
+8 0 165
+5 0 165
+5 0 165
+2 0 165 0 0 0 0 0 0 0 0 165
-2 0 83
+2 0 83 0 0 0 0 0 0 0 0 83
+2 0 248
+2 0 248 0 0 0 0 0 0 0 0 248 16
jcnd=143/248 +64 0 
* 0 
+2 0 105
+8 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
-6 0 74
+3 0 74
+3 0 74 0 0 0 0 0 0 0 0 74 2
+2 0 179
+2 0 179 179
+8 0 179
+2 0 179 0 0 0 0 0 0 0 0 179 14
jcnd=74/179 -20 0 
* 0 
+2 0 105
+2 0 105
+5 0 105
+3 0 105
+3 0 105
+2 0 105
+2 0 105
+5 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
+2 0 105
+4 0 105
+2 0 105
+2 0 105 0 0 0 0 0 0 0 0 105 1
jcnd=104/105 -8 0 
* 0 
-8 0 758
+4 0 758
+2 0 758
+2 0 758 0 0 0 0 0 0 0 0 758 75
jcnd=529/758 -8 0 
* 0 
-2 0 143 0 0 1 0 0 1
+2 0 143 0 0 0 0 0 0 0 0 143 9
jcnd=125/143 -8 0 
* 0 
+2 0 248 248 0 0 7 0 0 7
+4 0 248 0 0 1 0 0 1
+3 0 248 0 0 0 0 0 0 0 0 248 70
jcnd=165/248 0x3877c7a1cf 0 
* 0 
+6 0 83
+2 0 83
+4 0 83
+2 0 83
+2 0 83
+2 0 83 0 83
+8 0 83
jump=83 0x3877c79f30 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 165 165 0 1 2 0 1 2
+4 0 165 165 0 0 1 0 0 1
+4 0 165
+3 0 165 165
+4 0 165
+4 0 165
+3 0 165
+3 0 165 165
+4 0 165 0 0 0 0 0 0 0 0 165
+6 0 165 165
+4 0 165 0 0 0 0 0 0 0 0 165
+6 0 165 165 0 1 0 0 1
+8 0 165 0 165
+4 0 165 0 165
+4 0 165 0 0 0 0 0 0 0 0 165 14
jcnd=89/165 +38 0 
* 0 
+2 0 76 76 0 0 1 0 0 1
+4 0 76
+3 0 76 0 0 0 0 0 0 0 0 76
+2 0 76 76
+5 0 76 0 0 0 0 0 0 0 0 76
+6 0 76 76
+4 0 76 0 76
+4 0 76 76
+4 0 76 0 76
+4 0 76
+4 0 76 0 0 0 0 0 0 0 0 76
-4 0 89
+4 0 89 0 0 0 0 0 0 0 0 89 5
jcnd=8/89 0x3877c7a2e3 0 
* 0 
+6 0 157 157
+4 0 157 157 0 1 0 0 1
+4 0 157 0 0 0 0 0 0 0 0 157
+6 0 157
+4 0 157
+7 0 157 0 157 0 0 8 0 0 8
+4 0 157 0 157
+4 0 157 0 157
+4 0 157 0 157
+4 0 157 0 0 0 0 0 0 0 0 157 2
+2 0 157 0 157
+5 0 157
+7 0 157 0 0 0 0 0 0 0 0 157 4
jcnd=118/157 +18 0 
* 0 
+2 0 39 0 39 0 0 3 0 0 3
+8 0 39 0 39 1 0 0 1
+8 0 39
+7 0 39 0 39 0 0 3 0 0 3
+4 0 39
+3 0 39
+3 0 39
+4 0 39
+3 0 39
+4 0 39
+3 0 39
+3 0 39
+4 0 39 0 39
+4 0 39 0 39
+4 0 39
jump=39 +71 0 
* 0 
-46 0 118
+7 0 118 0 118
+4 0 118
+3 0 118
+3 0 118
+4 0 118
+3 0 118
+4 0 118
+3 0 118
+3 0 118
+4 0 118 0 118
+4 0 118 0 118
+4 0 118
jump=118 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 8
+7 0 8 0 8
+6 0 8
+3 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +7 0 
* 0 
+7 0 165
+4 0 165 0 0 1 0 0 1
+3 0 165
+3 0 165 0 165
cfn=(104)
calls=165 0x3877c77180 0 
* 0 660 330 0 0 0 0 0 0 0 165
+5 0 165
+3 0 165
jump=165 0x3877c79ae3 0 
* 0 

fn=(36) malloc
0x3877c7aa50 0 304 0 304 1 0 0 1
+5 0 304 0 304
+5 0 304
+3 0 304 0 304
+5 0 304
+4 0 304 304 0 0 1 0 0 1
+7 0 304 304 0 0 1 0 0 1
+3 0 304
+3 0 304 0 0 0 0 0 0 0 0 304
+6 0 304 304 0 0 1 0 0 1
+7 0 304 304 0 1 1 0 1 1
+4 0 304
+3 0 304 0 0 0 0 0 0 0 0 304
+2 0 304 304 0 0 1 0 0 1
+3 0 304
+3 0 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 +97 0 
* 0 
+18 0 304
+3 0 304
+3 0 304 0 304
cfn=(38)
calls=304 0x3877c79a00 0 
* 0 54948 7652 8599 29 25 37 29 25 37 8376 408
+5 0 304
+3 0 304
+3 0 304 0 0 0 0 0 0 0 0 304
+2 0 304
+3 0 304 0 0 0 0 0 0 0 0 304
+2 0 304
+3 0 304 0 0 0 0 0 0 0 0 304 4
+2 0 304 304
+7 0 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 +13 0 
* 0 
+13 0 304 0 304
+2 0 304 0 0 0 0 0 0 0 0 304 7
+6 0 304
+3 0 304 304
+4 0 304 304
+5 0 304 304
+5 0 304
+4 0 304 304
+1 0 304 0 0 1 0 0 1
+5 0 304 304 0 0 1 0 0 1
+7 0 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 +14 0 
* 0 
+14 0 304 0 304 1 0 0 1
+3 0 304 0 0 0 0 0 0 0 0 304
+6 0 304
jump=304 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 304 0 304 1 0 0 1
+2 0 304
+3 0 304
+3 0 304 0 304
+2 0 304
+3 0 304 0 304
+1 0 304
+3 0 304 0 304
+1 0 304
+3 0 304
+4 0 304
+3 0 304 0 0 0 0 0 0 0 0 304
+6 0 304
+4 0 304
+3 0 304 0 0 0 0 0 0 0 0 304 4
jcnd=10/304 0x3877c838d1 0 
* 0 
+2 0 294
+3 0 294
+3 0 294
+3 0 294
+3 0 294
+3 0 294 0 0 0 0 0 0 0 0 294
jcnd=294/294 +41 0 
* 0 
+41 0 294 0 0 1 0 0 1
+3 0 294 0 0 0 0 0 0 0 0 294
jcnd=294/294 0x3877c839c0 0 
* 0 
+24 0 294
+3 0 294
+4 0 294
+3 0 294
+3 0 294
+3 0 294
+3 0 294
+3 0 294 0 0 0 0 0 0 0 0 294 143
jcnd=154/294 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 150
+10 0 150 150 0 0 2 0 0 2
+3 0 150
+4 0 150 0 150
+3 0 150
+4 0 150
+4 0 150 0 0 0 0 0 0 0 0 150
jcnd=150/150 -18 0 
* 0 
-18 0 506 506
+3 0 506
+4 0 506 0 506
+3 0 506
+4 0 506
+4 0 506 0 0 0 0 0 0 0 0 506 8
jcnd=356/506 -18 0 
* 0 
+2 0 304
+4 0 304
+3 0 304 304
+1 0 304 304
+1 0 304 304
+2 0 304 304 0 1 0 0 1
+2 0 304 304
0x3877c839c0 0 294 0 0 1 0 0 1
+3 0 294
+3 0 294
+3 0 294
+4 0 294 0 294 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=294 0x3877c89b20 0 
* 0 17922 6180 5592 6 1 10 6 1 10 868 21 294 36
+5 0 294
jump=294 0x3877c838be 0 
* 0 

fn=(168) free
0x3877c7b8b0 0 304 304 0 1 1 0 1 1
+7 0 304 304 0 0 1 0 0 1
+3 0 304
+3 0 304 0 0 1 0 0 1 0 0 304
+6 0 304
+3 0 304 0 0 0 0 0 0 0 0 304
+6 0 304 304
+4 0 304
+4 0 304
+2 0 304 0 0 0 0 0 0 0 0 304
+2 0 304
+2 0 304
+7 0 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 +14 0 
* 0 
+14 0 304
+2 0 304
cfn=(170) _int_free
calls=304 0x3877c78650 0 
* 0 28078 7316 4432 17 1 0 17 1 0 6446 120

fn=(170)
0x3877c78650 0 304 0 304 1 0 0 1
+2 0 304 0 304
+2 0 304 0 304
+2 0 304
+3 0 304 0 304
+2 0 304 0 304
+1 0 304 0 304
+1 0 304
+3 0 304
+4 0 304 304
+4 0 304 0 304
+4 0 304
+3 0 304
+4 0 304
+3 0 304
+3 0 304
+3 0 304 0 0 1 0 0 1 0 0 304
+6 0 304
+4 0 304 0 0 0 0 0 0 0 0 304
+6 0 304
+4 0 304 0 0 0 0 0 0 0 0 304
+6 0 304 304
+7 0 304 0 0 0 0 0 0 0 0 304 2
jcnd=180/304 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 180
+2 0 180 0 0 0 0 0 0 0 0 180
+6 0 180 180 0 1 0 0 1
+4 0 180
+3 0 180
+2 0 180 0 0 0 0 0 0 0 0 180
jcnd=180/180 0x3877c78a40 0 
* 0 
+6 0 180 180
+4 0 180
+3 0 180 0 0 0 0 0 0 0 0 180
+6 0 180 180
+5 0 180
+4 0 180 0 0 0 0 0 0 0 0 180
jcnd=180/180 0x3877c7907c 0 
* 0 
+6 0 180 180
+5 0 180
+4 0 180 0 0 0 0 0 0 0 0 180
+6 0 180
+4 0 180 0 0 1 0 0 1 0 0 180
+6 0 180
+4 0 180 180
+7 0 180 0 0 0 0 0 0 0 0 180
+6 0 180 180
+6 0 180
+2 0 180 0 0 0 0 0 0 0 0 180
+6 0 180 180
+4 0 180 0 0 0 0 0 0 0 0 180 2
jcnd=178/180 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 180 180 0 1 0 0 1
+4 0 180 0 0 0 0 0 0 0 0 180
+6 0 180 180
+6 0 180 0 0 1 0 0 1 0 0 180 39
jcnd=24/180 0x3877c78a78 0 
* 0 
+6 0 156 156
+5 0 156 156
+5 0 156 156
+4 0 156 0 0 0 0 0 0 0 0 156
+6 0 156 156
+4 0 156 0 0 0 0 0 0 0 0 156
+6 0 156 156
+9 0 156 0 156
+4 0 156 0 156
+4 0 156 0 0 0 0 0 0 0 0 156 35
jcnd=116/156 +16 0 
* 0 
+2 0 40 40
+5 0 40
+3 0 40 0 0 1 0 0 1 0 0 40
+6 0 156
+3 0 156
+4 0 156 156
+4 0 156 156
+4 0 156 0 0 0 0 0 0 0 0 156
-12 0 24
+4 0 24 24
+4 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 180
+7 0 180 0 180
+4 0 180 0 180
+4 0 180 0 0 0 0 0 0 0 0 180 40
jcnd=104/180 +18 0 
* 0 
+2 0 76 0 76
+8 0 76 0 76
+8 0 76 0 76
+4 0 76
+3 0 76 0 76 1 0 0 1
+4 0 76
+4 0 76 0 76
+4 0 76 0 76
+4 0 76
+7 0 76 0 0 0 0 0 0 0 0 76
jcnd=76/76 0x3877c78b20 0 
* 0 
-30 0 104 0 104
+4 0 104
+3 0 104 0 104
+4 0 104
+4 0 104 0 104
+4 0 104 0 104
+4 0 104
+7 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 0x3877c78b20 0 
* 0 
0x3877c78a40 0 180 0 0 1 0 0 1
+5 0 180 180
+4 0 180 180
+7 0 180 0 0 0 0 0 0 0 0 180
jcnd=180/180 +16 0 
* 0 
+16 0 180 0 180
+5 0 180 0 0 0 0 0 0 0 0 180
+6 0 180
+3 0 180
jump=180 0x3877c7878f 0 
* 0 
+10 0 24 0 24
+6 0 24 0 0 1 0 0 1
jump=24 0x3877c78885 0 
* 0 
0x3877c78b20 0 180 180 0 1 0 0 1
+4 0 180
+2 0 180 0 0 0 0 0 0 0 0 180
+6 0 180 180
+7 0 180 0 0 0 0 0 0 0 0 180
jcnd=180/180 +15 0 
* 0 
+15 0 180 0 180 1 0 0 1
+4 0 180 0 0 0 0 0 0 0 0 180
+6 0 180
+4 0 180 180
+1 0 180 180
+1 0 180 180
+2 0 180 180
+2 0 180 180
+2 0 180 180
+2 0 180 180
0x3877c7907c 0 180 180 0 1 1 0 1 1
+4 0 180 0 0 1 0 0 1
+7 0 180
+4 0 180
+3 0 180
+3 0 180 0 0 0 0 0 0 0 0 180
jcnd=180/180 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 294 0 0 1 0 0 1
+7 0 294
+3 0 294
+3 0 294 294 0 0 1 0 0 1
+4 0 294
+4 0 294 0 0 0 0 0 0 0 0 0 0 294 36
jump=32 0x3877c89be8 0 
* 0 
jump=38 0x3877c89bd0 0 
* 0 
jump=32 0x3877c89bb8 0 
* 0 
jump=32 +11 0 
* 0 
jump=36 0x3877c89c48 0 
* 0 
jump=42 0x3877c89c30 0 
* 0 
jump=40 0x3877c89c18 0 
* 0 
jump=42 0x3877c89c00 0 
* 0 
+11 0 32 32
+3 0 32
+4 0 32
+4 0 32 32
+4 0 32
+4 0 32 0 32
+4 0 32
+9 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-40 0 642 642
+4 0 642 0 642
+4 0 642 642
+4 0 642 0 642 0 0 3 0 0 3
+4 0 642 642
+4 0 642 0 642 0 0 4 0 0 4
+4 0 642 642
+4 0 642 0 642
+4 0 642
+4 0 642
+4 0 642 0 0 0 0 0 0 0 0 642 17
jcnd=258/642 0x3877c89c60 0 
* 0 
-32 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42
jcnd=10/42 0x3877c89c60 0 
* 0 
-24 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-16 0 42 42 0 1 0 0 1
+4 0 42 0 42
+4 0 42 0 0 1 0 0 1
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42 4
jcnd=10/42 0x3877c89c60 0 
* 0 
+6 0 504
+4 0 504 504
+3 0 504 0 504 0 0 1 0 0 1
+3 0 504 504
+4 0 504 0 504 0 0 1 0 0 1
+4 0 504 504
+4 0 504 0 504 0 0 1 0 0 1
+4 0 504 504
+4 0 504 0 504
+4 0 504
jump=504 -80 0 
* 0 
-30 0 32 32
+3 0 32 0 32
+3 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
-24 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38
jump=38 -80 0 
* 0 
-16 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
+8 0 32 32
+3 0 32
+4 0 32 0 0 1 0 0 1
+4 0 32
+4 0 32
jump=32 -39 0 
* 0 
+9 0 38
+3 0 38 0 0 0 0 0 0 0 0 38
+6 0 38 38
+3 0 38
+4 0 38
jump=38 -72 0 
* 0 
+8 0 32
+4 0 32 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32
+4 0 32
jump=32 -99 0 
* 0 
+11 0 42 42 0 1 0 0 1
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b78 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b70 0 
* 0 
+9 0 42 42
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b68 0 
* 0 
+9 0 36 36
+3 0 36
+4 0 36
+4 0 36
+4 0 36
jump=36 0x3877c89b60 0 
* 0 
+9 0 294 0 294 1 0 0 1
+3 0 294 294

ob=(5)
fl=(8)
fn=(164)
0x387e4bb2f0 0 304 0 0 1 0 0 1
+3 0 304 0 0 0 0 0 0 0 0 304
+2 0 304
cob=(2)
cfi=(9)
cfn=(168)
calls=304 0x3877c7b8b0 0 
* 0 32638 8228 4432 19 3 0 19 3 0 7662 120
* 0 304 304 0 1 1 0 1 1 0 0 0 304

fn=(32)
0x387e4bd0b0 0 304 0 304 1 0 0 1
+1 0 304
+5 0 304
+3 0 304 0 304
+1 0 304
+4 0 304 0 0 1 0 0 1
+3 0 304
+4 0 304
+3 0 304 0 304 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36)
calls=304 0x3877c7aa50 0 
* 0 67716 10996 10423 33 31 37 33 31 37 11416 419
* 0 304 304 0 1 1 0 1 1 0 0 0 304
+5 0 304
+3 0 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 +96 0 
* 0 
+96 0 304 0 0 1 0 0 1
+4 0 304 304
+1 0 304 304
+1 0 304 304

totals: 794831 295155 191376 223 58 66 223 58 66 33052 953 1814 36
