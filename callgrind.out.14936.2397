version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2397


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2787245987 - 2787374558
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 340 0 0 1 0 0 1
+3 0 340 0 0 0 0 0 0 0 0 340
+2 0 340
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=340 0x3877c7b8b0 0 
* 0 36408 9176 4872 21 4 0 21 4 0 8590 139
* 0 340 340 0 1 1 0 1 1 0 0 0 340

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 340 0 340 1 0 0 1
+1 0 340
+5 0 340
+3 0 340 0 340
+1 0 340
+4 0 340 0 0 1 0 0 1
+3 0 340
+4 0 340
+3 0 340 0 340 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=340 0x3877c7aa50 0 
* 0 76080 12345 11660 34 30 34 34 30 34 12661 419
* 0 340 340 0 1 1 0 1 1 0 0 0 340
+5 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
jcnd=340/340 +96 0 
* 0 
+96 0 340 0 0 1 0 0 1
+4 0 340 340
+1 0 340 340
+1 0 340 340

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=164 0x404a28 -35 
* * 984 328 492 1 0 1 1 0 1
+5 * 164 164
+1 * 164 164

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 164
+4 * 164
+3 * 164 0 164
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=164 0x4044cc -35 
* * 820 328 328
+5 * 164 164
+1 * 164 164

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164 1 0 0 1
+4 +1 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=164 0x4049d4 -35 
* * 984 328 492 1 0 0 1
+5 * 164 164
+1 * 164 164

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 164
+4 * 164
+3 * 164 0 164
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=164 0x404520 -35 
* * 820 328 328
+5 * 164 164
+1 * 164 164

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 82 0 82
+1 * 82
+3 * 82
+4 * 82 0 82
+4 * 82 0 82
+4 * 82 0 82
+4 +1 82 82
+4 * 82 82
+4 * 82 82
+4 * 82
+3 * 82
+3 * 82 0 82
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=82 0x403df2 -87 
* * 1968 656 738 0 6 2 0 6 2 82
+5 * 82 82
+1 * 82 82

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+4 * 164 164
+4 * 164 164
+1 * 164 164

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 82 0 82
+1 * 82
+3 * 82
+4 * 82 0 82
+4 * 82 0 82
+4 * 82 0 82
+4 +1 82 82
+4 * 82 82
+4 * 82 82
+4 * 82
+3 * 82
+3 * 82 0 82
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=82 0x40406a -87 
* * 1968 656 738 0 5 5 0 5 5 82
+5 * 82 82
+1 * 82 82

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 164 0 164
+1 * 164
+3 * 164 0 164
+4 * 164 164
+4 * 164 164
+1 * 164 164

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 224 0 224
+1 * 224
+3 * 224 0 224 0 0 1 0 0 1
+4 +1 224 224
+4 * 224 224
+1 * 224 224

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 328 0 328 1 0 0 1
+1 * 328
+3 * 328
+4 * 328 0 328
+4 +1 328
+4 * 328
+3 * 328 0 328
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=328 0x404ffe 790 
* * 1968 984 656 1 0 0 1
+5 * 328 328
+3 * 328 328
+1 * 328 328

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 328 0 328 1 0 0 1
+1 * 328
+3 * 328 0 328
+4 +1 328 328
+4 * 328 328
+1 * 328 328

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 328 0 328 1 0 0 1
+1 * 328
+3 * 328
+4 * 328 0 328
+4 +1 328
+4 * 328
+3 * 328 0 328 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=328 0x40500c 790 
* * 1968 984 656 1 0 0 1
+5 * 328 328
+3 * 328 328
+1 * 328 328

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 224 0 224
+1 * 224
+3 * 224 0 224
+4 +1 224 224
+4 * 224 224
+1 * 224 224

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 328 0 328 1 0 0 1
+1 * 328
+3 * 328 0 328
+4 +1 328 328 0 1 0 0 1
+4 * 328 328
+1 * 328 328

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 164 0 164
+1 * 164
+3 * 164 0 164
+4 * 164 0 164
+4 * 164 164
+4 * 164 164
+1 * 164 164

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 170 0 170 1 0 0 1
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 * 170 0 170 1 0 0 1
+4 +2 170 170
+4 * 170
+3 * 170 0 170
cfn=(28)
calls=170 0x404992 +12 
* * 1020 340 340 1 0 0 1
+5 * 170 170
+4 * 170
+3 * 170
+2 * 170 0 0 0 0 0 0 0 0 170
jcnd=170/170 +7 +3 
* * 
+7 +3 170 170
+4 * 170
+4 * 170
+3 * 170 0 170
cob=(5)
cfi=(8)
cfn=(32)
calls=170 0x387e4bd0b0 0 
* * 40742 6830 6616 15 16 15 15 16 15 6477 215 170
* * 170 170 0 1 1 0 1 1 0 0 0 170
+5 +1 170 170
+1 * 170 170

fn=(102)
0x4048de 113 182 0 182 1 0 0 1
+1 * 182
+3 * 182 0 182
+4 +1 182
+10 * 182 182
+1 * 182 182

fn=(266)
0x40406a 129 82 0 82
+1 * 82
+3 * 82
+4 * 82 0 82
+4 * 82 0 82
+4 * 82 0 82
+4 +1 82 82
+4 * 82
+3 * 82
+5 * 82 0 82
cfi=(16)
cfn=(226)
calls=82 0x402d61 -20 
* * 574 246 246
+5 * 82
+3 * 82 0 0 0 0 0 0 0 0 82
+2 * 82 82
+4 * 82 82 0 0 5 0 0 5
+2 * 82 0 82 0 0 5 0 0 5
+2 * 82 82
+1 * 82 82

fn=(28)
0x404992 113 182 0 182 1 0 0 1
+1 * 182
+3 * 182 0 182
+4 +1 182
+10 * 182 182
+1 * 182 182

fn=(176)
0x4044cc 86 164 0 164
+1 * 164
+3 * 164 0 164
+4 * 164 164
+1 * 164 164

fn=(224)
0x403df2 129 82 0 82
+1 * 82
+3 * 82
+4 * 82 0 82
+4 * 82 0 82
+4 * 82 0 82
+4 +1 82 82
+4 * 82
+3 * 82
+5 * 82 0 82
cfi=(16)
cfn=(226)
calls=82 0x402d61 -20 
* * 574 246 246
+5 * 82
+3 * 82 0 0 0 0 0 0 0 0 82
+2 * 82 82
+4 * 82 82 0 0 6 0 0 6
+2 * 82 0 82 0 0 2 0 0 2
+2 * 82 82
+1 * 82 82

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 170 0 170
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 * 170 0 170
+4 +1 170 170
+4 * 170
+3 * 170 0 170
cob=(5)
cfi=(8)
cfn=(164)
calls=170 0x387e4bb2f0 0 
* * 18712 4678 2422 23 5 0 23 5 0 4402 107 170
* * 170 170 0 1 1 0 1 1 0 0 0 170
+5 * 170 170
+1 * 170 170

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 170 0 170
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 * 170 0 170
+4 +1 170 170
+4 * 170
+3 * 170 0 170
cob=(5)
cfi=(8)
cfn=(164)
calls=170 0x387e4bb2f0 0 
* * 19056 4838 2450 0 0 0 0 0 0 4528 32 170
* * 170 170 0 0 0 0 0 0 0 0 0 170
+5 * 170 170
+1 * 170 170

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 170 0 170 1 0 0 1
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 * 170 0 170
+4 +2 170 170
+4 * 170
+3 * 170 0 170
cfn=(102)
calls=170 0x4048de +12 
* * 1020 340 340 1 0 0 1
+5 * 170 170
+4 * 170 0 0 1 0 0 1
+3 * 170
+2 * 170 0 0 0 0 0 0 0 0 170
jcnd=170/170 +7 +3 
* * 
+7 +3 170 170
+4 * 170
+4 * 170
+3 * 170 0 170
cob=(5)
cfi=(8)
cfn=(32)
calls=170 0x387e4bd0b0 0 
* * 40778 6875 6064 23 15 20 23 15 20 6524 204 170
* * 170 170 0 0 0 0 0 0 0 0 0 170
+5 +1 170 170
+1 * 170 170

fn=(18)
0x404a28 81 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164 0 0 1 0 0 1
+4 * 164 0 164
+4 * 164 164
+1 * 164 164

fn=(92)
0x4049d4 81 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+4 * 164 0 164
+4 * 164 164
+1 * 164 164

fn=(196)
0x404520 86 164 0 164
+1 * 164
+3 * 164 0 164
+4 * 164 164
+1 * 164 164

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=164 0x404484 107 
* * 55584 17240 16260 25 3 6 25 3 6 1856 104 324 40
+5 * 164 164
+1 * 164 164

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164 0 1 0 0 1
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=164 0x404a36 450 
* * 50992 15600 14620 24 3 6 24 3 6 1856 104 324 40
+5 * 164 164
+1 * 164 164

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=164 0x40439c 107 
* * 55584 17240 16260 7 0 5 7 0 5 1856 90 324
+5 * 164 164
+1 * 164 164

fn=(116)
0x40439c 107 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +10 164 164
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=164 0x4047d7 -26 
* * 53288 16420 15440 7 0 5 7 0 5 1856 90 324
+5 +1 164 164
+1 * 164 164

fn=(118)
0x4047d7 91 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=164 0x4049e2 450 
* * 50992 15600 14620 7 0 5 7 0 5 1856 90 324
+5 * 164 164
+1 * 164 164

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +10 164 164
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(52)
calls=164 0x404829 -26 
* * 53288 16420 15440 25 3 6 25 3 6 1856 104 324 40
+5 +1 164 164
+1 * 164 164

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680 0 0 1 0 0 1
+4 +1 680 680
+4 * 680 680 0 1 1 0 1 1
+4 * 680
+3 * 680 680
+4 * 680 680
+3 * 680
+3 * 680
+3 * 680
+4 * 680 680
+1 * 680 680

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=164 0x404236 -14 
* * 46197 8724 8341 21 15 8 21 15 8 6586 189 328
+5 * 164 164
+4 * 164 0 164
+3 +1 164 164
+4 * 164 164 0 1 0 0 1
+3 * 164 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+3 * 164 164
+4 * 164
+4 * 164
+3 * 164 164
+4 * 164 0 164
+4 +1 164 164
+1 * 164 164

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164
+4 * 164 164 0 1 0 0 1
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=164 0x403fbe -14 
* * 46371 8782 7817 28 11 17 28 11 17 6653 192 328
+5 * 164 164
+4 * 164 0 164
+3 +1 164 164
+4 * 164 164
+3 * 164 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+3 * 164 164
+4 * 164
+4 * 164
+3 * 164 164
+4 * 164 0 164
+4 +1 164 164
+1 * 164 164

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 82 0 82
+1 * 82
+3 * 82 0 0 1 0 0 1
+4 * 82 0 82
+4 * 82 0 82
+4 +2 82 82
+4 * 82 82
+4 * 82 82
+4 * 82 82
+4 * 82
+3 * 82 0 0 0 0 0 0 0 0 82
jcnd=6/82 +51 +10 
* * 
+2 +3 76 76
+4 * 76 76
+4 * 76 76
+4 -1 76 76
+4 * 76
+3 * 76
+3 * 76 0 76
cfi=(3)
cfn=(264)
calls=76 0x4036b1 215 
* * 2888 988 1064 0 5 2 0 5 2 76
+5 +2 76 76
+4 * 76 76
+4 * 76
+4 * 76 76
+4 * 76 0 76
+4 * 76
jump=76 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8401 2610 2260 18 2 13 18 2 13 469 38 35
+5 +2 82 82
+1 * 82 82

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 346 0 346 1 0 0 1
+1 * 346
+3 * 346 0 346 1 0 0 1
+4 +1 346 346
+4 * 346 346
+1 * 346 346

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+3 * 164 0 164
+4 * 164
+4 * 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=164 0x404380 726 
* * 1640 820 656
+5 * 164 164
+4 * 164 164
+1 * 164 164

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 164 0 164
+1 * 164
+3 * 164 0 164
+1 * 164
+4 * 164 0 164 1 0 0 1
+4 +2 164 164
+4 * 164
+3 * 164 0 164
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=164 0x40325e 113 
* * 984 492 328
+5 * 164
+3 * 164 164
+4 * 164 164
+4 * 164 164
+4 * 164 164
+3 -1 164
+3 * 164
+3 * 164 0 164
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=164 0x40326c 148 
* * 5084 1640 1968 4 0 0 4
+5 +1 164 164
+4 * 164
+3 * 164 0 164
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=164 0x4031ec 159 
* * 31080 9296 6122 27 5 0 27 5 0 4436 105 328
+5 * 164
jump=164 +28 * 
* * 
+28 * 164 0 0 1 0 0 1
+4 * 164 164
+1 * 164 164
+1 * 164 164

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 170 0 170 1 0 0 1
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 * 170 0 170
+4 +2 170 170
+5 * 170 0 0 0 0 0 0 0 0 170
+2 +1 170 170
+4 * 170 170
+4 * 170 170
+4 * 170
+3 * 170
+3 * 170 0 170
cfi=(5)
cfn=(160)
calls=170 0x4044d6 -65 
* * 20752 5358 3272 24 6 0 24 6 0 4402 107 340
+5 +1 170 170
+1 * 170 170

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 164 0 164
+1 * 164
+3 * 164 0 164
+1 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=164 0x4043ca -45 
* * 5904 2132 2296 4 0 4 4 0 4
+5 +1 164 164 0 1 0 0 1
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(20)
calls=164 0x404412 +43 
* * 50297 10692 9489 22 15 8 22 15 8 6586 189 328
+5 * 164
jump=164 +28 * 
* * 
+28 * 164
+4 * 164 164
+1 * 164 164
+1 * 164 164

fn=(14)
0x4043ca 90 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164 0 0 1 0 0 1
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(4)
cfn=(16)
calls=164 0x404804 +24 
* * 2952 984 1148 2 0 1 2 0 1
+5 * 164 164
+4 * 164 0 164 0 0 2 0 0 2
+7 * 164 164
+4 * 164 0 164 1 0 0 1
+8 * 164 164
+4 * 164 0 164
+8 +1 164 164
+1 * 164 164

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+2 * 164 0 164
+2 * 164 0 164
+1 * 164 0 0 1 0 0 1
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164
+4 * 164
+3 * 164 0 164
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=164 0x4039fc 117 
* * 984 492 328 2 0 0 2
+5 * 164
+3 * 164 0 164
cfi=(3)
cfn=(84)
calls=164 0x4039ed -88 
* * 984 492 328
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(2)
calls=164 0x402d74 645 
* * 2132 984 328
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164
+3 * 164
+3 * 164 0 164 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=164 0x403a0a 134 
* * 59983 14030 12409 35 11 17 35 11 17 6653 192 328
+5 +4 164 164
+4 * 164
+3 * 164 0 164
cfn=(106)
calls=164 0x40325e 113 
* * 984 492 328 1 0 0 1
+5 * 164
+3 * 164 164
+4 * 164 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=164 0x403a98 565 
* * 4100 1640 1312 2 0 0 2
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(112)
calls=164 0x403a68 547 
* * 4100 1640 1312
+5 * 164
+3 * 164
+3 * 164
+3 * 164
+3 * 164 0 164
cfi=(11)
cfn=(114)
calls=164 0x403ac9 -60 
* * 58044 18060 17244 7 0 5 7 0 5 1856 90 324
+5 -3 164 164
+4 * 164 0 164
+4 * 164
jump=164 +28 +4 
* * 
+28 +4 164
+4 * 164 164
+1 * 164 164
+2 * 164 164
+2 * 164 164
+1 * 164 164

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 170 0 170 1 0 0 1
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 * 170 0 170
+4 +2 170 170
+5 * 170 0 0 0 0 0 0 0 0 170 6
+2 +1 170 170
+4 * 170 170
+4 * 170 170
+4 * 170
+3 * 170
+3 * 170 0 170
cfi=(5)
cfn=(190)
calls=170 0x40452a -65 
* * 21096 5518 3300 0 0 0 0 0 0 4528 32 340
+5 +1 170 170
+1 * 170 170

fn=(22)
0x404236 167 170 0 170 1 0 0 1
+1 * 170
+3 * 170
+4 * 170 0 170 1 0 0 1
+4 * 170 0 170
+4 0 170 170
+5 0 170 0 0 0 0 0 0 0 0 170
+2 0 170 170
+4 0 170 170
+4 0 170
+5 0 170
+3 0 170
+3 0 170 0 170
fi=(6) ???
cfi=(5)
cfn=(26)
calls=170 0x404730 99 
* 0 45162 8190 7976 19 17 15 19 17 15 6647 215 340
+5 0 170
fi=(6)
jump=170 +7 0 
* 0 
+7 0 170 170
+1 0 170 170

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+4 * 164 0 164
+4 * 164
+4 * 164 0 0 1 0 0 1
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=164 0x404468 726 
* * 1640 820 656 1 0 0 1
+5 * 164 164
+4 * 164 164
+1 * 164 164

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+3 * 164 0 164
+4 * 164
+4 * 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(10)
cfn=(44)
calls=164 0x404468 726 
* * 1640 820 656
+5 * 164 164
+4 * 164 164
+1 * 164 164

fn=(86)
0x403a0a 134 164 0 164
+1 * 164
+3 * 164 0 164
+1 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=164 0x4042e2 -45 
* * 5904 2132 2296 5 0 0 5
+5 +1 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164 1 0 0 1
cfn=(94)
calls=164 0x40432a +43 
* * 50471 10750 8965 29 11 17 29 11 17 6653 192 328
+5 * 164
jump=164 +28 * 
* * 
+28 * 164
+4 * 164 164
+1 * 164 164
+1 * 164 164

fn=(88)
0x4042e2 90 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164 1 0 0 1
cfi=(4)
cfn=(90)
calls=164 0x4047b2 +24 
* * 2952 984 1148 3 0 0 3
+5 * 164 164
+4 * 164 0 164
+7 * 164 164
+4 * 164 0 164
+8 * 164 164
+4 * 164 0 164
+8 +1 164 164
+1 * 164 164

fn=(156)
0x4031ec 159 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+1 * 164
+4 * 164 0 164
+4 +2 164 164
+4 * 164 164 0 1 0 0 1
+4 * 164
+3 * 164 164
+4 * 164 164
+3 * 164
+3 * 164
+3 * 164
+4 * 164
+3 * 164 164
+4 * 164 164
+3 -1 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(158)
calls=164 0x403ce6 +11 
* * 22716 6180 3990 24 5 0 24 5 0 4436 105 328
+5 +1 164 164
+4 * 164
+3 * 164 0 164
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=164 0x4031b8 -82 
* * 3772 1312 1312 1 0 0 1
+5 * 164
jump=164 +28 * 
* * 
+28 * 164
+4 * 164 164
+1 * 164 164
+1 * 164 164

fn=(172)
0x4031b8 79 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 164
+4 * 164
+3 * 164 0 164
cfi=(4)
cfn=(174)
calls=164 0x403ccc +42 
* * 2296 820 820
+5 * 164 164
+1 * 164 164

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246)
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 352 0 352 1 0 0 1
+1 * 352
+3 * 352 0 352
+4 +1 352 352
+4 * 352 352 0 0 2 0 0 2
+4 * 352
+3 * 352 352
+4 * 352 352
+3 * 352
+3 * 352
+3 * 352
+4 * 352 352
+1 * 352 352

fn=(106)
0x40325e 113 346 0 346 1 0 0 1
+1 * 346
+3 * 346 0 346
+4 +1 346 346
+4 * 346 346
+1 * 346 346

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 176 0 176 1 0 0 1
+1 * 176
+3 * 176 0 176 0 0 1 0 0 1
+4 +1 176 176
+4 * 176 176
+1 * 176 176

fn=(82)
0x4039fc 117 176 0 176 1 0 0 1
+1 * 176
+3 * 176 0 176 1 0 0 1
+4 +1 176 176
+4 * 176 176
+1 * 176 176

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 82 0 82
+1 * 82
+3 * 82
+4 * 82 0 82
+4 * 82 0 82
+4 +2 82 82
+4 * 82 82
+4 * 82 82
+4 * 82 82
+4 * 82
+3 * 82 0 0 0 0 0 0 0 0 82 7
jcnd=6/82 +51 +10 
* * 
+2 +3 76 76
+4 * 76 76
+4 * 76 76
+4 -1 76 76
+4 * 76
+3 * 76
+3 * 76 0 76
cfi=(3)
cfn=(222)
calls=76 0x403373 215 
* * 2888 988 1064 0 5 1 0 5 1 76
+5 +2 76 76
+4 * 76 76
+4 * 76
+4 * 76 76
+4 * 76 0 76
+4 * 76
jump=76 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8237 2585 2228 23 6 7 23 6 7 443 17 35
+5 +2 82 82
+1 * 82 82

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+2 * 164 0 164
+2 * 164 0 164
+1 * 164
+4 * 164 0 164 1 0 0 1
+4 * 164 0 164
+4 +2 164 164
+4 * 164
+3 * 164 0 164
cfn=(6)
calls=164 0x403b08 117 
* * 984 492 328 1 0 1 1 0 1
+5 * 164
+3 * 164 0 164
cfi=(3)
cfn=(8)
calls=164 0x403afa -88 
* * 984 492 328 1 0 0 1
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(10)
calls=164 0x402f54 645 
* * 2132 984 328 1 1 0 1 1
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164
+3 * 164
+3 * 164 0 164
cfn=(12)
calls=164 0x403b16 134 
* * 59809 13972 12933 27 15 12 27 15 12 6586 189 328
+5 +4 164 164 0 1 0 0 1
+4 * 164
+3 * 164 0 164
cfn=(40)
calls=164 0x40333c 113 
* * 984 492 328 2 0 0 2
+5 * 164
+3 * 164 164
+4 * 164 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(42)
calls=164 0x403ba4 565 
* * 4100 1640 1312 3 0 0 3
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(46)
calls=164 0x403b74 547 
* * 4100 1640 1312
+5 * 164
+3 * 164
+3 * 164
+3 * 164
+3 * 164 0 164 1 0 0 1
cfi=(11)
cfn=(48)
calls=164 0x403bd5 -60 
* * 58044 18060 17244 26 3 6 26 3 6 1856 104 324 40
+5 -3 164 164
+4 * 164 0 164
+4 * 164
jump=164 +28 +4 
* * 
+28 +4 164
+4 * 164 164
+1 * 164 164
+2 * 164 164
+2 * 164 164
+1 * 164 164

fn=(108)
0x403a98 565 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164 164
+4 * 164 0 164
+4 * 164
+4 * 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(10)
cfn=(110)
calls=164 0x404380 726 
* * 1640 820 656 1 0 0 1
+5 * 164 164
+4 * 164 164
+1 * 164 164

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 164 0 164
+1 * 164
+3 * 164 0 164
+1 * 164
+4 * 164 0 164 1 0 0 1
+4 +2 164 164
+4 * 164
+3 * 164 0 164
cfn=(40)
calls=164 0x40333c 113 
* * 984 492 328
+5 * 164
+3 * 164 164
+4 * 164 164
+4 * 164 164
+4 * 164 164
+3 -1 164
+3 * 164
+3 * 164 0 164
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=164 0x40334a 148 
* * 5084 1640 1968 2 0 0 2
+5 +1 164 164
+4 * 164
+3 * 164 0 164
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=164 0x4032ca 159 
* * 31398 9444 6146 3 0 0 3 0 0 4556 28 328
+5 * 164
jump=164 +28 * 
* * 
+28 * 164 0 0 1 0 0 1
+4 * 164 164
+1 * 164 164
+1 * 164 164

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96)
0x403fbe 167 170 0 170 1 0 0 1
+1 * 170 0 0 1 0 0 1
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 0 170 170
+5 0 170 0 0 0 0 0 0 0 0 170
+2 0 170 170
+4 0 170 170
+4 0 170
+5 0 170
+3 0 170
+3 0 170 0 170
fi=(6)
cfi=(5)
cfn=(100)
calls=170 0x40461a 99 
* 0 45198 8235 7424 26 15 20 26 15 20 6694 204 340
+5 0 170
fi=(6)
jump=170 +7 0 
* 0 
+7 0 170 170
+1 0 170 170

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 10619 0 10619
+1 * 10619
+3 * 10619 0 10619
+4 * 10619 0 10619
+4 +1 10619 10619
+4 * 10619 10619
+3 * 10619 10619
+4 * 10619
+4 * 10619
+3 * 10619 10619
+1 * 10619 10619

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 10619 0 10619
+1 * 10619
+3 * 10619 0 10619 1 0 0 1
+4 * 10619 0 10619
+4 +1 10619 10619
+4 * 10619 10619
+3 * 10619 10619
+4 * 10619
+4 * 10619
+3 * 10619 10619
+1 * 10619 10619

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 164
+4 * 164
+3 * 164 0 164
cfi=(4)
cfn=(194)
calls=164 0x403d7e +42 
* * 2296 820 820 1 0 0 1
+5 * 164 164
+1 * 164 164

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186)
0x4032ca 159 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+1 * 164
+4 * 164 0 164
+4 +2 164 164
+4 * 164 164
+4 * 164
+3 * 164 164
+4 * 164 164
+3 * 164
+3 * 164
+3 * 164
+4 * 164
+3 * 164 164
+4 * 164 164
+3 -1 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(188)
calls=164 0x403d98 +11 
* * 23034 6328 4014 1 0 0 1 0 0 4556 28 328
+5 +1 164 164
+4 * 164
+3 * 164 0 164
cfn=(192)
calls=164 0x403296 -82 
* * 3772 1312 1312 1 0 0 1
+5 * 164
jump=164 +28 * 
* * 
+28 * 164
+4 * 164 164
+1 * 164 164
+1 * 164 164

fl=(12)
fn=(54)
0x404a36 450 164 0 164
+1 * 164
+3 * 164 0 164
+1 * 164
+4 * 164 0 164 1 0 0 1
+4 * 164 0 164
+4 * 164 0 164
+4 +10 164 164
+4 * 164
+3 * 164 0 164
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=164 0x404c38 288 
* * 2460 984 820 3 0 0 3
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(56)
calls=164 0x404c38 288 
* * 2460 984 820
+5 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=164 0x404c52 -36 
* * 42464 12648 11668 20 3 6 20 3 6 1856 104 324 40
+5 +1 164
+4 * 164 164
+1 * 164 164
+1 * 164 164

fn=(60)
0x404c52 424 164 0 164
+1 * 164
+3 * 164 0 164
+2 * 164 0 164
+1 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +4 164 164
+4 * 164
+3 * 164 0 164
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=164 0x40492d 277 
* * 2460 984 820 2 0 0 2
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=164 0x404d9d 277 
* * 4100 1476 1312 2 0 1 2 0 1
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(66)
calls=164 0x404d9d 277 
* * 4100 1476 1312
+5 * 164
+3 * 164
+3 * 164
+3 * 164 0 164
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=164 0x404db7 -49 
* * 27212 7564 6584 15 3 5 15 3 5 1856 104 324 40
+5 +1 164
+4 * 164 164
+1 * 164 164
+2 * 164 164
+1 * 164 164

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 200 0 200 1 0 0 1
+1 * 200
+3 * 200
+4 * 200 0 200
+4 +1 200 200
+4 * 200
+3 * 200 0 200 1 0 0 1
cfi=(13)
cfn=(64)
calls=200 -33 -66 
* * 1200 600 400
+5 * 200 200
+1 * 200 200

fn=(66)
0x404d9d 277 328 0 328
+1 * 328
+3 * 328
+4 * 328 0 328
+4 +1 328 328
+4 * 328
+3 * 328 0 328
cfi=(13)
cfn=(68)
calls=328 0x404f1a -58 
* * 5248 1968 1640 2 0 1 2 0 1
+5 * 328 328
+1 * 328 328

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 164 0 164
+1 * 164
+3 * 164 0 164
+1 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +10 164 164
+4 * 164
+3 * 164 0 164
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=164 0x404bc6 288 
* * 2460 984 820 3 0 0 3
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(122)
calls=164 0x404bc6 288 
* * 2460 984 820
+5 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=164 0x404be0 -36 
* * 42464 12648 11668 4 0 5 4 0 5 1856 90 324
+5 +1 164
+4 * 164 164
+1 * 164 164
+1 * 164 164

fn=(128)
0x404878 277 200 0 200
+1 * 200
+3 * 200
+4 * 200 0 200 1 0 0 1
+4 +1 200 200
+4 * 200
+3 * 200 0 200
cfi=(13)
cfn=(130)
calls=200 -33 -66 
* * 1200 600 400 0 0 1 0 0 1
+5 * 200 200
+1 * 200 200

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 328 0 328
+1 * 328
+3 * 328
+4 * 328 0 328
+4 +1 328 328
+4 * 328
+3 * 328 0 328
cfi=(13)
cfn=(134)
calls=328 0x404e98 -58 
* * 5248 1968 1640 2 0 0 2
+5 * 328 328
+1 * 328 328

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +8 164 0 164
+4 +3 164 164
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=164 0x404eb5 -22 
* * 24752 6744 5600 1 0 5 1 0 5 1856 90 324
+5 +1 164 164
+1 * 164 164

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 328 0 328 1 0 0 1
+1 * 328
+3 * 328
+4 * 328 0 328
+4 +1 328 328
+4 * 328
+3 * 328 0 328
cfi=(13)
cfn=(124)
calls=328 0x404d36 -77 
* * 1968 984 656 2 0 0 2
+5 * 328 328
+1 * 328 328

fn=(56)
0x404c38 288 328 0 328 1 0 0 1
+1 * 328
+3 * 328
+4 * 328 0 328 1 0 0 1
+4 +1 328 328
+4 * 328
+3 * 328 0 328
cfi=(13)
cfn=(58)
calls=328 0x404d8f -77 
* * 1968 984 656 1 0 0 1
+5 * 328 328
+1 * 328 328

fn=(74)
0x404f37 368 176 0 176
+1 * 176
+3 * 176
+4 * 176 0 176 1 0 0 1
+4 * 176 0 176
+4 * 176 0 176
+4 +2 176 176
+4 * 176 176
+4 * 176
+3 * 176
+3 * 176
+4 * 176 0 176
+4 +1 176 176
+5 * 176 0 0 0 0 0 0 0 0 176
jcnd=6/176 +33 +2 
* * 
+2 +1 170 170
+4 * 170
+8 * 170 170
+4 * 170 170
+4 * 170
+3 * 170 0 0 1 0 0 1
+3 * 170 0 170 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=170 0x3877c83840 0 
* * 20670 5050 4715 11 2 7 11 2 7 1740 106 165 40
* * 170 170 0 1 1 0 1 1 0 0 0 170
+5 +1 176 176
+4 * 176
+8 * 176 176
+4 * 176
+3 +1 176 176
+1 * 176 176

fn=(140)
0x404eb5 368 176 0 176
+1 * 176
+3 * 176
+4 * 176 0 176 1 0 0 1
+4 * 176 0 176
+4 * 176 0 176 0 0 1 0 0 1
+4 +2 176 176
+4 * 176 176
+4 * 176
+3 * 176
+3 * 176
+4 * 176 0 176
+4 +1 176 176
+5 * 176 0 0 0 0 0 0 0 0 176
jcnd=6/176 +33 +2 
* * 
+2 +1 170 170
+4 * 170
+8 * 170 170
+4 * 170 170
+4 * 170
+3 * 170
+3 * 170 0 170
cob=(2)
cfi=(9)
cfn=(78)
calls=170 0x3877c83840 0 
* * 20670 5050 4715 0 0 6 0 0 6 1740 93 165
* * 170 170 0 0 0 0 0 0 0 0 0 170
+5 +1 176 176
+4 * 176
+8 * 176 176
+4 * 176
+3 +1 176 176
+1 * 176 176

fn=(72)
0x404db7 379 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164 1 0 0 1
+4 * 164 0 164
+4 * 164 0 164
+4 +8 164 0 164
+4 +3 164 164
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(74)
calls=164 0x404f37 -22 
* * 24752 6744 5600 14 3 5 14 3 5 1856 104 324 40
+5 +1 164 164
+1 * 164 164

fn=(126)
0x404be0 424 164 0 164
+1 * 164
+3 * 164 0 164
+2 * 164 0 164
+1 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +4 164 164
+4 * 164
+3 * 164 0 164
cfn=(128)
calls=164 0x404878 277 
* * 2460 984 820 1 0 0 1
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(132)
calls=164 0x404d44 277 
* * 4100 1476 1312 2 0 0 2
+5 * 164
+3 * 164 164
+4 * 164
+3 * 164 0 164
cfn=(132)
calls=164 0x404d44 277 
* * 4100 1476 1312
+5 * 164
+3 * 164
+3 * 164
+3 * 164 0 164
cfn=(138)
calls=164 0x404d5e -49 
* * 27212 7564 6584 1 0 5 1 0 5 1856 90 324
+5 +1 164
+4 * 164 164
+1 * 164 164
+2 * 164 164
+1 * 164 164

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 328 0 328 1 0 0 1
+1 * 328
+3 * 328 0 328
+4 +1 328 328
+4 * 328 328
+1 * 328 328

fn=(110)
0x404380 726 328 0 328 1 0 0 1
+1 * 328
+3 * 328 0 328
+4 * 328 0 328
+4 * 328 328
+4 * 328 328
+3 * 328 328
+4 * 328 0 328
+3 * 328 328
+1 * 328 328

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 328 0 328 1 0 0 1
+1 * 328
+3 * 328 0 328
+4 +1 328 328
+4 * 328 328
+1 * 328 328

fn=(44)
0x404468 726 328 0 328
+1 * 328
+3 * 328 0 328
+4 * 328 0 328
+4 * 328 328
+4 * 328 328
+3 * 328 328
+4 * 328 0 328 1 0 0 1
+3 * 328 328
+1 * 328 328

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 170 0 170 1 0 0 1
+1 * 170
+3 * 170 0 170
+4 * 170 0 170 1 0 0 1
+4 * 170 170
+1 * 170 170

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 170 0 170 1 0 0 1
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 +4 170 170
+4 * 170 170
+4 * 170
+3 * 170
+3 * 170 0 170
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=170 0x40454c -14 
* * 1020 340 510 1 0 0 1
+5 +2 170 170
+1 * 170 170

fn=(150)
0x40326c 148 170 0 170
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 * 170 0 170
+4 +3 170 170 0 1 0 0 1
+4 * 170 170
+4 * 170
+3 * 170
+3 * 170 0 170
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=170 0x403d1a -29 
* * 3060 1020 1190 3 0 0 3
+5 +1 170 170
+1 * 170 170

fn=(180)
0x40334a 148 170 0 170
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 * 170 0 170
+4 +3 170 170
+4 * 170 170
+4 * 170
+3 * 170
+3 * 170 0 170
cfn=(182)
calls=170 0x403dcc -29 
* * 3060 1020 1190 2 0 0 2
+5 +1 170 170
+1 * 170 170

fn=(152)
0x403d1a 122 170 0 170 1 0 0 1
+1 * 170
+3 * 170
+4 * 170 0 170
+4 * 170 0 170
+4 +4 170 170
+4 * 170 170
+4 * 170
+3 * 170
+3 * 170 0 170
cfn=(154)
calls=170 0x4044f8 -14 
* * 1020 340 510 2 0 0 2
+5 +2 170 170
+1 * 170 170

fn=(184)
0x40454c 112 170 0 170 1 0 0 1
+1 * 170
+3 * 170 0 170
+4 * 170 0 170
+4 * 170 170
+1 * 170 170

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1685 316 315 0 2 7 0 2 7 231 26 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1547 303 287 0 4 3 0 4 3 211 12 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 1 0 1 1 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 82 0 82 1 0 0 1
+1 * 82
+3 * 82
+4 * 82 0 82
+4 * 82 0 82
+4 +1 82 82
+4 * 82
+3 * 82 0 82
cfi=(2)
cfn=(2)
calls=82 0x402d74 645 
* * 1066 492 164
+5 * 82
+3 * 82 0 82
+3 +1 82 82
+6 * 82 0 82
+3 * 82 82
+6 * 82 0 82
+3 +1 82 82
+6 * 82 0 82 1 0 0 1
+3 * 82 82
+6 * 82 0 82
+3 +2 82 0 82
+7 * 82
jump=82 +86 * 
* * 
+2 +1 3485 3485
+3 * 3485
+3 * 3485 3485
+4 * 3485
+3 * 3485
+3 * 3485 0 3485
cfi=(2)
cfn=(144)
calls=3485 0x402d9a 770 
* * 38335 17425 10455
+5 * 3485 3485
+4 * 3485 3485
+5 * 3485
+4 * 3485 0 3485
+5 +1 3485 3485
+3 * 3485
+3 * 3485 3485
+4 * 3485
+3 * 3485
+3 * 3485 0 3485
cfi=(2)
cfn=(146)
calls=3485 0x402dba 770 
* * 38335 17425 10455 1 0 0 1
+5 * 3485 3485
+2 * 3485
+4 * 3485 3485
+5 * 3485
+4 * 3485 0 3485
+5 -2 3485 0 3485
+4 * 3485 3485
+3 * 3485
+3 * 3485 3485
+3 * 3485 0 0 0 0 0 0 0 0 3485 85
jcnd=3403/3485 -93 +1 
* * 
-9 * 82 82 0 1 0 0 1
+3 * 82
+3 * 82 82
+3 * 82 0 0 0 0 0 0 0 0 82
jcnd=82/82 -93 +1 
* * 
+2 +4 82 82
+3 * 82
+3 * 82
+4 * 82 82 0 1 0 0 1
+5 * 82
+4 * 82
+3 * 82 0 82
+5 +1 82 82
+3 * 82
+3 * 82
+4 * 82 82
+5 * 82
+4 * 82
+3 * 82 0 82
+5 +1 82 0 82
+7 * 82
jump=82 0x4016ee * 
* * 
+2 +1 3485 3485
+3 * 3485
+3 * 3485 3485
+4 * 3485
+3 * 3485 0 0 1 0 0 1
+3 * 3485 0 3485
cfi=(2)
cfn=(146)
calls=3485 0x402dba 770 
* * 38335 17425 10455
+5 * 3485 3485
+2 * 3485
+4 * 3485 3485
+5 * 3485 0 3485
+5 +1 3485 3485
+3 * 3485
+3 * 3485 3485
+4 * 3485
+3 * 3485
+3 * 3485 0 3485
cfi=(2)
cfn=(144)
calls=3485 0x402d9a 770 
* * 38335 17425 10455
+5 * 3485 3485
+4 * 3485 3485
+5 * 3485 0 3485
+5 +1 3485 3485
+5 * 3485 3485
+5 * 3485 3485
+5 * 3485
+4 * 3485 0 3485
+5 +1 3485 3485
+5 * 3485 3485
+5 * 3485 3485
+5 * 3485
+4 * 3485 0 3485
+5 -4 3485 0 3485
+4 * 3485 3485
+3 * 3485
+3 * 3485 3485
+3 * 3485 0 0 0 0 0 0 0 0 3485 83
jcnd=3403/3485 0x401672 +1 
* * 
-9 * 82 82 0 1 0 0 1
+3 * 82
+3 * 82 82
+3 * 82 0 0 0 0 0 0 0 0 82
jcnd=82/82 0x401672 +1 
* * 
+6 +6 82 82 0 1 0 0 1
+5 * 82 82
+5 * 82 0 82
+5 +2 82 82
+3 +1 82 0 82
+3 * 82 82
+5 * 82 82
+1 * 82 82

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 82
+7 * 82
+7 * 82
+3 * 82
+3 * 82 0 82
cfi=(2)
cfn=(4)
calls=82 0x4030b2 310 
* * 69824 20045 18335 63 18 18 63 18 18 4234 195 326 40
+5 * 82
+7 * 82
+7 * 82
+3 * 82
+3 * 82 0 82
cfi=(2)
cfn=(80)
calls=82 0x402ff4 310 
* * 70284 20104 18112 48 11 21 48 11 21 4338 207 326
+5 * 82 0 0 1 0 0 1
+7 * 82
+7 * 82
+3 * 82
+3 * 82 0 82
cfn=(142)
calls=82 0x401585 -52 
* * 367770 162360 85034 8 0 0 8 0 0 7134 168
+5 * 82 0 82
+8 * 82 82
+6 * 82 0 82
+6 * 82
+7 * 82
+3 * 82 0 82
cfi=(2)
cfn=(148)
calls=82 0x402df4 414 
* * 20542 6452 4701 33 5 0 33 5 0 2218 54 164
+5 * 82
+7 * 82
+3 * 82 0 82 1 0 0 1
cfi=(2)
cfn=(178)
calls=82 0x402e74 414 
* * 20701 6526 4713 7 0 0 7 0 0 2278 16 164
+5 +2 82
+7 * 82
+7 * 82
+3 * 82
+3 * 82 0 82
cfi=(2)
cfn=(4)
calls=82 0x4030b2 310 
* * 69513 20023 18238 2 1 1 2 1 1 4208 98 326
+5 * 82
+7 * 82
+7 * 82
+3 * 82
+3 * 82 0 82
cfi=(2)
cfn=(80)
calls=82 0x402ff4 310 
* * 69227 20022 17937 2 0 1 2 0 1 4171 75 326
+5 * 82 82
+6 * 82 0 0 1 0 0 1
+7 * 82
+7 * 82 0 82
+6 * 82 82
+8 * 82
+3 * 82
+3 * 82 0 82
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=82 0x401719 -33 
* * 172118 71504 39565 4 0 0 4 0 0 3567 85
+5 * 82 0 82
+8 * 82 82
+6 * 82 0 82
+6 * 82
+7 * 82 0 0 1 0 0 1
+3 * 82 0 82
cfi=(2)
cfn=(148)
calls=82 0x402df4 414 
* * 20542 6452 4701 0 0 0 0 0 0 2218 51 164
+5 * 82
+7 * 82
+3 * 82 0 82
cfi=(2)
cfn=(178)
calls=82 0x402e74 414 
* * 20701 6526 4713 0 0 0 0 0 0 2278 12 164
+5 +2 82 82
+7 * 82
+3 * 82 0 82
cfi=(2)
cfn=(2)
calls=82 0x402d74 645 
* * 1066 492 164
+5 * 82 82
+6 * 82
+3 * 82
+3 * 82
+3 * 82 82
+7 * 82
+3 * 82 0 0 1 0 0 1
+3 * 82 0 82
cfi=(2)
cfn=(144)
calls=82 0x402d9a 770 
* * 902 410 246
+5 * 82
+3 * 82
+7 * 82
+3 * 82
+3 * 82 0 82
cfi=(2)
cfn=(200)
calls=82 0x402eda 901 
* * 13371 4669 3744 26 11 8 26 11 8 601 24 35
+5 +1 82 82
+7 * 82
+3 * 82 0 82
cfi=(2)
cfn=(10)
calls=82 0x402f54 645 
* * 1066 492 164 0 1 0 0 1
+5 * 82 82
+6 * 82
+3 * 82
+3 * 82
+3 * 82 82
+7 * 82 0 0 1 0 0 1
+3 * 82
+3 * 82 0 82
cfi=(2)
cfn=(146)
calls=82 0x402dba 770 
* * 902 410 246
+5 * 82
+3 * 82
+7 * 82
+3 * 82
+3 * 82 0 82
cfi=(2)
cfn=(244)
calls=82 0x402f7a 901 
* * 13535 4694 3776 19 7 15 19 7 15 627 38 35
+5 +1 82 82
+7 * 82
+3 * 82 0 82
cfi=(2)
cfn=(10)
calls=82 0x402f54 645 
* * 1066 492 164
+5 * 82 82
+6 * 82
+3 * 82
+3 * 82
+3 * 82 82 0 1 0 0 1
+7 * 82
+3 * 82
+3 * 82 0 82
cfi=(2)
cfn=(146)
calls=82 0x402dba 770 
* * 902 410 246
+5 * 82 82
+2 * 82
+4 * 82 82
+8 * 82 82
+8 * 82 0 82
+8 +1 82 82
+7 * 82
+3 * 82 0 82
cfi=(2)
cfn=(2)
calls=82 0x402d74 645 
* * 1066 492 164
+5 * 82 82 0 1 0 0 1
+6 * 82
+3 * 82
+3 * 82
+3 * 82 82
+7 * 82
+3 * 82
+3 * 82 0 82
cfi=(2)
cfn=(144)
calls=82 0x402d9a 770 
* * 902 410 246
+5 * 82 82
+4 * 82 82
+8 * 82
+4 * 82 82
+8 * 82
+3 * 82 0 82
+8 +2 82 0 82
+7 -12 82 82
+8 * 82 82
+7 * 82 0 0 0 0 0 0 0 0 82 3
jcnd=1/82 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 82
+7 * 82
+3 * 82 0 82
cfi=(2)
cfn=(2)
calls=82 0x402d74 645 
* * 1066 492 164 2 0 1 2 0 1
+5 * 82
+3 * 82 82
+7 * 82
+3 * 82 0 82
cfi=(2)
cfn=(2)
calls=82 0x402d74 645 
* * 1066 492 164 0 1 0 0 1
+5 * 82
+3 * 82 0 0 0 0 0 0 0 0 82
+2 * 82 0 0 1 0 0 1
+5 * 82
jump=82 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 82
+2 * 82 0 0 0 0 0 0 0 0 82
jcnd=82/82 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 82 0 82
+1 * 82
+3 * 82
+4 * 82 0 82
+4 * 82 0 82
+4 * 82 0 82
+5 +1 82 82
+4 * 82
+3 * 82 0 82
cfi=(2)
cfn=(2)
calls=82 0x402d74 645 
* * 1066 492 164
+5 * 82
+3 * 82 0 82
+3 +1 82 82 0 1 0 0 1
+6 * 82 0 82
+3 * 82 82
+6 * 82 0 82
+3 +2 82 0 82
+7 * 82
jump=82 +86 * 
* * 
+2 +1 3485 3485
+3 * 3485
+3 * 3485 3485
+4 * 3485
+3 * 3485
+3 * 3485 0 3485
cfi=(2)
cfn=(144)
calls=3485 0x402d9a 770 
* * 38335 17425 10455
+5 * 3485 3485
+4 * 3485 3485
+5 * 3485
+4 * 3485 0 3485
+5 +1 3485 3485
+3 * 3485
+3 * 3485 3485
+4 * 3485
+3 * 3485
+3 * 3485 0 3485
cfi=(2)
cfn=(146)
calls=3485 0x402dba 770 
* * 38335 17425 10455
+5 * 3485 3485
+2 * 3485
+4 * 3485 3485
+5 * 3485
+4 * 3485 0 3485
+5 -2 3485 0 3485
+4 * 3485 3485
+3 * 3485
+3 * 3485 3485
+3 * 3485 0 0 0 0 0 0 0 0 3485 85
jcnd=3403/3485 -93 +1 
* * 
-9 * 82 82 0 1 0 0 1
+3 * 82
+3 * 82 82
+3 * 82 0 0 0 0 0 0 0 0 82
jcnd=82/82 -93 +1 
* * 
+2 +4 82 82
+3 * 82
+3 * 82 0 0 1 0 0 1
+4 * 82 82
+5 * 82
+4 * 82
+3 * 82 0 82
+5 +1 82 82
+3 * 82
+3 * 82
+4 * 82 82
+5 * 82
+4 * 82
+3 * 82 0 82
+5 +1 82 82
+5 * 82 82
+5 * 82 82
+5 * 82 0 0 1 0 0 1
+4 * 82
+3 * 82 0 82
+5 +2 82 82
+3 +1 82 0 82
+3 * 82 82
+5 * 82 82
+1 * 82 82

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 340 0 340 1 0 0 1
+5 0 340 0 340
+5 0 340
+3 0 340 0 340
+5 0 340
+4 0 340 340 0 0 1 0 0 1
+7 0 340 340 0 0 1 0 0 1
+3 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
+6 0 340 340 0 0 1 0 0 1
+7 0 340 340 0 1 1 0 1 1
+4 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
+2 0 340 340 0 0 1 0 0 1
+3 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
jcnd=340/340 +97 0 
* 0 
+18 0 340
+3 0 340
+3 0 340 0 340
cfn=(38) _int_malloc
calls=340 0x3877c79a00 0 
* 0 61800 8605 9620 30 24 34 30 24 34 9261 405
+5 0 340
+3 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
+2 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
+2 0 340
+3 0 340 0 0 0 0 0 0 0 0 340 2
+2 0 340 340
+7 0 340 0 0 0 0 0 0 0 0 340
jcnd=340/340 +13 0 
* 0 
+13 0 340 0 340
+2 0 340 0 0 0 0 0 0 0 0 340 12
+6 0 340
+3 0 340 340
+4 0 340 340
+5 0 340 340
+5 0 340
+4 0 340 340
+1 0 340 0 0 1 0 0 1
+5 0 340 340 0 0 1 0 0 1
+7 0 340 0 0 0 0 0 0 0 0 340
jcnd=340/340 +14 0 
* 0 
+14 0 340 0 340 1 0 0 1
+3 0 340 0 0 0 0 0 0 0 0 340
+6 0 340
jump=340 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 340 0 340 1 0 0 1
+2 0 340
+3 0 340
+3 0 340 0 340
+2 0 340
+3 0 340 0 340
+1 0 340
+3 0 340 0 340
+1 0 340
+3 0 340
+4 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
+6 0 340
+4 0 340
+3 0 340 0 0 0 0 0 0 0 0 340 4
jcnd=10/340 0x3877c838d1 0 
* 0 
+2 0 330
+3 0 330
+3 0 330
+3 0 330
+3 0 330
+3 0 330 0 0 0 0 0 0 0 0 330
jcnd=330/330 +41 0 
* 0 
+41 0 330 0 0 1 0 0 1
+3 0 330 0 0 0 0 0 0 0 0 330
jcnd=330/330 0x3877c839c0 0 
* 0 
+24 0 330
+3 0 330
+4 0 330
+3 0 330
+3 0 330
+3 0 330
+3 0 330
+3 0 330 0 0 0 0 0 0 0 0 330 164
jcnd=170/330 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 170
+10 0 170 170 0 0 1 0 0 1
+3 0 170
+4 0 170 0 170
+3 0 170
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
jcnd=170/170 -18 0 
* 0 
-18 0 566 566
+3 0 566
+4 0 566 0 566
+3 0 566
+4 0 566
+4 0 566 0 0 0 0 0 0 0 0 566 8
jcnd=396/566 -18 0 
* 0 
+2 0 340
+4 0 340
+3 0 340 340
+1 0 340 340
+1 0 340 340
+2 0 340 340 0 1 0 0 1
+2 0 340 340
0x3877c839c0 0 330 0 0 1 0 0 1
+3 0 330
+3 0 330
+3 0 330
+4 0 330 0 330 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=330 0x3877c89b20 0 
* 0 21994 7664 7004 6 1 12 6 1 12 1064 23 330 40
+5 0 330
jump=330 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 340 340 0 1 1 0 1 1
+7 0 340 340 0 0 1 0 0 1
+3 0 340
+3 0 340 0 0 1 0 0 1 0 0 340
+6 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
+6 0 340 340
+4 0 340
+4 0 340
+2 0 340 0 0 0 0 0 0 0 0 340
+2 0 340
+2 0 340
+7 0 340 0 0 0 0 0 0 0 0 340
jcnd=340/340 +14 0 
* 0 
+14 0 340
+2 0 340
cfn=(170) _int_free
calls=340 0x3877c78650 0 
* 0 31308 8156 4872 19 2 0 19 2 0 7230 139

fn=(170)
0x3877c78650 0 340 0 340 1 0 0 1
+2 0 340 0 340
+2 0 340 0 340
+2 0 340
+3 0 340 0 340
+2 0 340 0 340
+1 0 340 0 340
+1 0 340
+3 0 340
+4 0 340 340
+4 0 340 0 340
+4 0 340
+3 0 340
+4 0 340
+3 0 340
+3 0 340
+3 0 340 0 0 1 0 0 1 0 0 340
+6 0 340
+4 0 340 0 0 0 0 0 0 0 0 340
+6 0 340
+4 0 340 0 0 0 0 0 0 0 0 340
+6 0 340 340
+7 0 340 0 0 0 0 0 0 0 0 340 2
jcnd=216/340 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 216
+2 0 216 0 0 0 0 0 0 0 0 216
+6 0 216 216 0 1 0 0 1
+4 0 216
+3 0 216
+2 0 216 0 0 0 0 0 0 0 0 216
jcnd=216/216 0x3877c78a40 0 
* 0 
+6 0 216 216
+4 0 216
+3 0 216 0 0 0 0 0 0 0 0 216
+6 0 216 216
+5 0 216
+4 0 216 0 0 0 0 0 0 0 0 216
jcnd=216/216 0x3877c7907c 0 
* 0 
+6 0 216 216
+5 0 216
+4 0 216 0 0 0 0 0 0 0 0 216
+6 0 216
+4 0 216 0 0 1 0 0 1 0 0 216
+6 0 216
+4 0 216 216
+7 0 216 0 0 0 0 0 0 0 0 216
+6 0 216 216
+6 0 216
+2 0 216 0 0 0 0 0 0 0 0 216
+6 0 216 216
+4 0 216 0 0 0 0 0 0 0 0 216 2
jcnd=214/216 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 216 216 0 1 0 0 1
+4 0 216 0 0 0 0 0 0 0 0 216 26
jcnd=26/216 0x3877c78bf0 0 
* 0 
+6 0 190 190
+6 0 190 0 0 1 0 0 1 0 0 190 39
jcnd=24/190 0x3877c78a78 0 
* 0 
+6 0 166 166
+5 0 166 166
+5 0 166 166
+4 0 166 0 0 0 0 0 0 0 0 166
+6 0 166 166
+4 0 166 0 0 0 0 0 0 0 0 166
+6 0 166 166
+9 0 166 0 166
+4 0 166 0 166
+4 0 166 0 0 0 0 0 0 0 0 166 4
jcnd=158/166 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 166
+3 0 166
+4 0 166 166
+4 0 166 166
+4 0 166 0 0 0 0 0 0 0 0 166
-12 0 24
+4 0 24 24
+4 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 190
+7 0 190 0 190
+4 0 190 0 190
+4 0 190 0 0 0 0 0 0 0 0 190 62
jcnd=122/190 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 122 0 122
+4 0 122
+3 0 122 0 122
+4 0 122
+4 0 122 0 122
+4 0 122 0 122
+4 0 122
+7 0 122 0 0 0 0 0 0 0 0 122
jcnd=122/122 0x3877c78b20 0 
* 0 
-7 0 26
+7 0 26 0 0 0 0 0 0 0 0 26
jcnd=26/26 0x3877c78b20 0 
* 0 
0x3877c78a40 0 216 0 0 1 0 0 1
+5 0 216 216
+4 0 216 216
+7 0 216 0 0 0 0 0 0 0 0 216
jcnd=216/216 +16 0 
* 0 
+16 0 216 0 216
+5 0 216 0 0 0 0 0 0 0 0 216
+6 0 216
+3 0 216
jump=216 0x3877c7878f 0 
* 0 
+10 0 24 0 24
+6 0 24 0 0 1 0 0 1
jump=24 0x3877c78885 0 
* 0 
0x3877c78b20 0 216 216 0 1 0 0 1
+4 0 216
+2 0 216 0 0 0 0 0 0 0 0 216
+6 0 216 216
+7 0 216 0 0 0 0 0 0 0 0 216
jcnd=216/216 +15 0 
* 0 
+15 0 216 0 216 1 0 0 1
+4 0 216 0 0 0 0 0 0 0 0 216 2
+6 0 216
+4 0 216 216
+1 0 216 216
+1 0 216 216
+2 0 216 216
+2 0 216 216
+2 0 216 216
+2 0 216 216
0x3877c78bf0 0 26 0 0 1 0 0 1
+3 0 26 0 26
+4 0 26
+3 0 26
+4 0 26 0 26 1 0 0 1
+4 0 26
jump=26 0x3877c788cf 0 
* 0 
0x3877c7907c 0 216 216 0 1 1 0 1 1
+4 0 216 0 0 1 0 0 1
+7 0 216
+4 0 216
+3 0 216
+3 0 216 0 0 0 0 0 0 0 0 216
jcnd=216/216 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 330 0 0 1 0 0 1
+7 0 330
+3 0 330
+3 0 330 330 0 0 1 0 0 1
+4 0 330
+4 0 330 0 0 0 0 0 0 0 0 0 0 330 40
jump=40 0x3877c89be8 0 
* 0 
jump=46 0x3877c89bd0 0 
* 0 
jump=40 0x3877c89bb8 0 
* 0 
jump=40 +11 0 
* 0 
jump=40 0x3877c89c48 0 
* 0 
jump=42 0x3877c89c30 0 
* 0 
jump=40 0x3877c89c18 0 
* 0 
jump=42 0x3877c89c00 0 
* 0 
+11 0 40 40
+3 0 40
+4 0 40
+4 0 40 40
+4 0 40
+4 0 40 0 40
+4 0 40
+9 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-40 0 814 814
+4 0 814 0 814 0 0 3 0 0 3
+4 0 814 814
+4 0 814 0 814
+4 0 814 814
+4 0 814 0 814 0 0 1 0 0 1
+4 0 814 814
+4 0 814 0 814 0 0 3 0 0 3
+4 0 814
+4 0 814
+4 0 814 0 0 0 0 0 0 0 0 814 21
jcnd=294/814 0x3877c89c60 0 
* 0 
-32 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42
jcnd=10/42 0x3877c89c60 0 
* 0 
-24 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-16 0 42 42 0 1 0 0 1
+4 0 42 0 42
+4 0 42 0 0 1 0 0 1
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42 2
jcnd=10/42 0x3877c89c60 0 
* 0 
+6 0 648
+4 0 648 648
+3 0 648 0 648 0 0 4 0 0 4
+3 0 648 648
+4 0 648 0 648
+4 0 648 648
+4 0 648 0 648
+4 0 648 648
+4 0 648 0 648
+4 0 648
jump=648 -80 0 
* 0 
-30 0 40 40
+3 0 40 0 40
+3 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40 0 0 1 0 0 1
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 -80 0 
* 0 
-24 0 46 46
+4 0 46 0 46
+4 0 46 46
+4 0 46 0 46
+4 0 46 46
+4 0 46 0 46
+4 0 46
jump=46 -80 0 
* 0 
-16 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 -80 0 
* 0 
+8 0 40 40
+3 0 40
+4 0 40 0 0 1 0 0 1
+4 0 40
+4 0 40
jump=40 -39 0 
* 0 
+9 0 46
+3 0 46 0 0 0 0 0 0 0 0 46
+6 0 46 46
+3 0 46
+4 0 46
jump=46 -72 0 
* 0 
+8 0 40
+4 0 40 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40
+4 0 40
jump=40 -99 0 
* 0 
+11 0 42 42 0 1 0 0 1
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b78 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b70 0 
* 0 
+9 0 42 42
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b68 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b60 0 
* 0 
+9 0 330 0 330 1 0 0 1
+3 0 330 330

fn=(104) alloc_perturb
0x3877c77180 0 221 221 0 1 0 0 1
+6 0 221
+2 0 221 0 0 0 0 0 0 0 0 221 1
+2 0 221 221

fn=(38)
0x3877c79a00 0 340 0 340 1 0 0 1
+2 0 340
+3 0 340 0 340
+2 0 340 0 340
+2 0 340 0 340 0 0 1 0 0 1
+2 0 340
+3 0 340 0 340
+1 0 340 0 340
+1 0 340
+4 0 340
+4 0 340 0 0 0 0 0 0 0 0 340
+6 0 340
+4 0 340
+6 0 340
+3 0 340
+4 0 340
+4 0 340
+4 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
+6 0 340 340 0 1 1 0 1 1
+7 0 340 0 0 0 0 0 0 0 0 340 5
jcnd=218/340 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 119 119
+6 0 119
+4 0 119
+2 0 119 0 0 0 0 0 0 0 0 119
+6 0 119
+3 0 119
+4 0 119 119
+1 0 119 119
+1 0 119 119
+2 0 119 119
+2 0 119 119
+2 0 119 119
+2 0 119 119
-14 0 221
+4 0 221 221
+1 0 221 221
+1 0 221 221
+2 0 221 221
+2 0 221 221
+2 0 221 221
+2 0 221 221
+7 0 235
+7 0 235 0 0 1 0 0 1 0 0 235 2
+2 0 235
+3 0 235
+5 0 235
+3 0 235
+4 0 235 0 235
+4 0 235
+2 0 235
+5 0 235 235 0 0 6 0 0 6
+4 0 235
+3 0 235 0 0 0 0 0 0 0 0 235
jcnd=235/235 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 235 0 0 1 0 0 1
+3 0 235
+3 0 235
+3 0 235
+4 0 235
+3 0 235
+4 0 235 0 235
+5 0 235
+3 0 235 0 235
+4 0 235 0 235
+4 0 235 0 235
+5 0 235
+3 0 235
+3 0 235
+3 0 235
+3 0 235
+4 0 235
+4 0 235 0 0 1 0 0 1
+4 0 235 0 235
+4 0 235
+4 0 235 0 235
+5 0 235 0 235
+5 0 235
+3 0 235
+3 0 235 0 235
+5 0 235
+5 0 235
+3 0 235 0 235
+4 0 235 0 235
+4 0 235
+6 0 235 0 235
+4 0 235 0 235
+5 0 235 0 0 1 0 0 1
+3 0 235
+3 0 235
+3 0 235
jump=235 +87 0 
* 0 
+8 0 195
+3 0 195
+4 0 195
+2 0 195
+2 0 195
+3 0 195
+3 0 195
+3 0 195
+2 0 195
+2 0 195
+5 0 195
+2 0 195 195
+4 0 195
+3 0 195
+4 0 195 0 195
+4 0 195 0 195 0 0 1 0 0 1
+8 0 195
+7 0 195 0 195
+4 0 195 0 195 0 0 2 0 0 2
+4 0 195 0 195
+4 0 195 0 0 0 0 0 0 0 0 195
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 496 496 0 1 0 0 1
+4 0 496
+3 0 496 0 0 0 0 0 0 0 0 496 23
jcnd=204/496 0x3877c79ef0 0 
* 0 
+6 0 292 292
+4 0 292 292 0 0 1 0 0 1
+4 0 292
+4 0 292 0 0 0 0 0 0 0 0 292
+6 0 292 292 0 1 1 0 1 1
+7 0 292 0 0 0 0 0 0 0 0 292
+6 0 292
+4 0 292
+7 0 292 0 0 0 0 0 0 0 0 292 2
+2 0 292
+3 0 292 0 0 0 0 0 0 0 0 292 62
jcnd=216/292 0x3877c79e28 0 
* 0 
+6 0 275
+3 0 275 0 275
+4 0 275 0 275
+5 0 275 0 0 0 0 0 0 0 0 275 11
jcnd=14/275 0x3877c7a090 0 
* 0 
+6 0 261
+7 0 261 0 0 0 0 0 0 0 0 261 8
jcnd=195/261 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66 0 0 2 0 0 2
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 5
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 216 216 0 1 0 0 1
+4 0 216
+3 0 216 0 0 0 0 0 0 0 0 216 33
jcnd=109/216 0x3877c79ce1 0 
* 0 
+6 0 107 107
+5 0 107 0 0 0 0 0 0 0 0 107 5
jcnd=90/107 0x3877c79ce1 0 
* 0 
+6 0 17 0 0 1 0 0 1
+3 0 17
+3 0 17
+3 0 17
+7 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17 0 17
+4 0 17 0 17 0 0 14 0 0 14
+4 0 17 0 17
+4 0 17 0 0 0 0 0 0 0 0 17 4
jcnd=10/17 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7
+4 0 7
+3 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7 0 0 1 0 0 1
+4 0 7
+4 0 7
+3 0 7 0 7
cfn=(104)
calls=7 0x3877c77180 0 
* 0 28 14 0 0 0 0 0 0 0 7
-56 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 1 0 0 1
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 17
+3 0 17
jump=17 0x3877c79ae3 0 
* 0 
+55 0 204 0 0 1 0 0 1
+7 0 204
+3 0 204 0 0 0 0 0 0 0 0 204 2
+6 0 204 204 0 1 0 0 1
+4 0 204
+3 0 204
+3 0 204
+2 0 204
+4 0 204
+3 0 204
+3 0 204
+2 0 204
+2 0 204
+2 0 204
+2 0 204 204
+8 0 204
+5 0 204
+5 0 204
+2 0 204 0 0 0 0 0 0 0 0 204
-2 0 103
+2 0 103 0 0 0 0 0 0 0 0 103
+2 0 307
+2 0 307 0 0 0 0 0 0 0 0 307 19
jcnd=147/307 +64 0 
* 0 
+2 0 160
+8 0 160
+3 0 160
+3 0 160 0 0 0 0 0 0 0 0 160 1
jcnd=1/160 0x3877c79fc0 0 
* 0 
-6 0 117
+3 0 117
+3 0 117 0 0 0 0 0 0 0 0 117 4
jcnd=25/117 0x3877c79fc0 0 
* 0 
+2 0 251
+2 0 251 251
+8 0 251
+2 0 251 0 0 0 0 0 0 0 0 251 16
jcnd=117/251 -20 0 
* 0 
+2 0 134
+2 0 134
+5 0 134
+3 0 134
+3 0 134
+2 0 134
+2 0 134
+5 0 134 0 0 0 0 0 0 0 0 134 3
jcnd=2/134 +14 0 
* 0 
+2 0 132
+2 0 132
+4 0 132
+2 0 132
+2 0 132 0 0 0 0 0 0 0 0 132 5
jcnd=70/132 -8 0 
* 0 
-8 0 617
+4 0 617
+2 0 617
+2 0 617 0 0 0 0 0 0 0 0 617 54
jcnd=420/617 -8 0 
* 0 
-2 0 147 0 0 1 0 0 1
+2 0 147 0 0 0 0 0 0 0 0 147 7
jcnd=127/147 -8 0 
* 0 
+2 0 281 281 0 0 4 0 0 4
+4 0 281 0 0 1 0 0 1
+3 0 281 0 0 0 0 0 0 0 0 281 97
jcnd=178/281 0x3877c7a1cf 0 
* 0 
+6 0 103
+2 0 103
+4 0 103
+2 0 103
+2 0 103
+2 0 103 0 103
+8 0 103
jump=103 0x3877c79f30 0 
* 0 
+37 0 26 26 0 1 0 0 1
+5 0 26 26
+4 0 26
+4 0 26 26
+5 0 26 0 0 0 0 0 0 0 0 26
jcnd=26/26 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 14 0 0 1 0 0 1
+7 0 14 0 14
+6 0 14
+3 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 178 178 0 1 1 0 1 1
+4 0 178 178 0 0 1 0 0 1
+4 0 178
+3 0 178 178
+4 0 178
+4 0 178
+3 0 178
+3 0 178 178
+4 0 178 0 0 0 0 0 0 0 0 178
+6 0 178 178 0 0 1 0 0 1
+4 0 178 0 0 0 0 0 0 0 0 178
+6 0 178 178 0 1 0 0 1
+8 0 178 0 178
+4 0 178 0 178
+4 0 178 0 0 0 0 0 0 0 0 178 2
jcnd=110/178 +38 0 
* 0 
+2 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 110
+4 0 110 0 0 0 0 0 0 0 0 110 6
jcnd=9/110 0x3877c7a2e3 0 
* 0 
+6 0 169 169
+4 0 169 169 0 1 0 0 1
+4 0 169 0 0 0 0 0 0 0 0 169
+6 0 169
+4 0 169
+7 0 169 0 169 0 0 7 0 0 7
+4 0 169 0 169
+4 0 169 0 169
+4 0 169 0 169
+4 0 169 0 0 0 0 0 0 0 0 169 1
+2 0 169 0 169
+5 0 169
+7 0 169 0 0 0 0 0 0 0 0 169 3
jcnd=162/169 +18 0 
* 0 
+2 0 7 0 7
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7 0 0 1 0 0 1
+4 0 7
jump=7 +71 0 
* 0 
-46 0 162 0 0 1 0 0 1
+7 0 162 0 162 0 0 1 0 0 1
+4 0 162
+3 0 162
+3 0 162
+4 0 162
+3 0 162
+4 0 162
+3 0 162
+3 0 162
+4 0 162 0 162
+4 0 162 0 162
+4 0 162
jump=162 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 9
+7 0 9 0 9
+6 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +7 0 
* 0 
+7 0 178
+4 0 178 0 0 1 0 0 1
+3 0 178
+3 0 178 0 178
cfn=(104)
calls=178 0x3877c77180 0 
* 0 712 356 0 1 0 0 1 0 0 178
+5 0 178
+3 0 178
jump=178 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 26 0 0 1 0 0 1
+7 0 26
+2 0 26
+4 0 26
+3 0 26
+3 0 26 0 26
+5 0 26
+3 0 26
+4 0 26
+3 0 26 0 0 1 0 0 1
+4 0 26
+4 0 26
+3 0 26
+4 0 26 0 26
+4 0 26 0 26 0 0 2 0 0 2
+4 0 26
+3 0 26
+3 0 26 0 26
cfn=(104)
calls=26 0x3877c77180 0 
* 0 104 52 0 0 0 0 0 0 0 26 1
+5 0 26
+3 0 26
jump=26 0x3877c79ae3 0 
* 0 

totals: 949048 356022 227998 226 57 66 226 57 66 38120 1026 2030 40
