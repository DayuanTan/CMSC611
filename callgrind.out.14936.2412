version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2412


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2793142269 - 2793736328
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 902 0 0 1 0 0 1
+3 0 902 0 0 0 0 0 0 0 0 902
+2 0 902
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=902 0x3877c7b8b0 0 
* 0 99637 25469 12747 21 3 0 21 3 0 24323 432
* 0 902 902 0 1 1 0 1 1 0 0 0 902

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 902 0 902 1 0 0 1
+1 0 902
+5 0 902
+3 0 902 0 902
+1 0 902
+4 0 902 0 0 1 0 0 1
+3 0 902
+4 0 902
+3 0 902 0 902 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=902 0x3877c7aa50 0 
* 0 243346 34650 34345 46 39 44 46 39 44 41198 1389
* 0 902 902 0 1 1 0 1 1 0 0 0 902
+5 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 +96 0 
* 0 
+96 0 902 0 0 1 0 0 1
+4 0 902 902
+1 0 902 902
+1 0 902 902

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +1 222 222
+4 * 222 222
+4 * 222 222
+4 * 222
+3 * 222
+3 * 222 0 222
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=222 0x403df2 -87 
* * 5328 1776 1998 0 15 3 0 15 3 222 1
+5 * 222 222
+1 * 222 222

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 444 0 444 1 0 0 1
+1 * 444
+3 * 444 0 444
+4 * 444 444
+4 * 444 444
+1 * 444 444

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +1 222 222
+4 * 222 222
+4 * 222 222
+4 * 222
+3 * 222
+3 * 222 0 222
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=222 0x40406a -87 
* * 5328 1776 1998 0 14 7 0 14 7 222
+5 * 222 222
+1 * 222 222

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 444 0 444
+1 * 444
+3 * 444 0 444
+4 * 444 444
+4 * 444 444
+1 * 444 444

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888
+4 +1 888 888
+4 * 888 888
+1 * 888 888

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888
+4 +1 888
+4 * 888
+3 * 888 0 888 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=888 0x40500c 790 
* * 5328 2664 1776 1 0 0 1
+5 * 888 888
+3 * 888 888
+1 * 888 888

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 514 0 514
+1 * 514
+3 * 514 0 514
+4 +1 514 514
+4 * 514 514
+1 * 514 514

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888
+4 +1 888 888 0 1 0 0 1
+4 * 888 888
+1 * 888 888

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 514 0 514
+1 * 514
+3 * 514 0 514 0 0 1 0 0 1
+4 +1 514 514
+4 * 514 514
+1 * 514 514

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888
+4 +1 888
+4 * 888
+3 * 888 0 888
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=888 0x404ffe 790 
* * 5328 2664 1776 1 0 0 1
+5 * 888 888
+3 * 888 888
+1 * 888 888

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 444 0 444
+1 * 444
+3 * 444 0 444
+4 * 444 0 444
+4 * 444 444
+4 * 444 444
+1 * 444 444

fl=(5)
fn=(28)
0x404992 113 465 0 465 1 0 0 1
+1 * 465
+3 * 465 0 465
+4 +1 465
+10 * 465 465
+1 * 465 465

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 444 0 444
+1 * 444
+3 * 444 0 444
+4 * 444 444
+1 * 444 444

fn=(224)
0x403df2 129 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +1 222 222
+4 * 222
+3 * 222
+5 * 222 0 222
cfi=(16)
cfn=(226)
calls=222 0x402d61 -20 
* * 1554 666 666
+5 * 222
+3 * 222 0 0 0 0 0 0 0 0 222 1
+2 * 222 222
+4 * 222 222 0 0 15 0 0 15
+2 * 222 0 222 0 0 3 0 0 3
+2 * 222 222
+1 * 222 222

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +1 451 451
+4 * 451
+3 * 451 0 451
cob=(5)
cfi=(8)
cfn=(164)
calls=451 0x387e4bb2f0 0 
* * 48525 11993 5522 23 4 0 23 4 0 11714 392 451
* * 451 451 0 1 1 0 1 1 0 0 0 451
+5 * 451 451
+1 * 451 451

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +1 451 451
+4 * 451
+3 * 451 0 451
cob=(5)
cfi=(8)
cfn=(164)
calls=451 0x387e4bb2f0 0 
* * 54720 14378 7225 0 0 0 0 0 0 13511 40 451
* * 451 451 0 0 0 0 0 0 0 0 0 451
+5 * 451 451
+1 * 451 451

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 451 0 451 1 0 0 1
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +2 451 451
+4 * 451
+3 * 451 0 451
cfn=(102)
calls=451 0x4048de +12 
* * 2706 902 902 1 0 0 1
+5 * 451 451
+4 * 451 0 0 1 0 0 1
+3 * 451
+2 * 451 0 0 0 0 0 0 0 0 451
jcnd=451/451 +7 +3 
* * 
+7 +3 451 451
+4 * 451
+4 * 451
+3 * 451 0 451
cob=(5)
cfi=(8)
cfn=(32)
calls=451 0x387e4bd0b0 0 
* * 130506 18997 17521 33 23 32 33 23 32 21483 718 451
* * 451 451 0 0 0 0 0 0 0 0 0 451
+5 +1 451 451
+1 * 451 451

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 444 0 444 1 0 0 1
+1 * 444
+3 * 444 0 444 0 0 1 0 0 1
+4 * 444 0 444
+4 * 444 444
+1 * 444 444

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 444 0 444 1 0 0 1
+1 * 444
+3 * 444 0 444
+4 * 444 0 444
+4 * 444 444
+1 * 444 444

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 444 0 444
+1 * 444
+3 * 444 0 444
+4 * 444 444
+1 * 444 444

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 451 0 451 1 0 0 1
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451 1 0 0 1
+4 +2 451 451
+4 * 451
+3 * 451 0 451
cfn=(28)
calls=451 0x404992 +12 
* * 2706 902 902 1 0 0 1
+5 * 451 451
+4 * 451
+3 * 451
+2 * 451 0 0 0 0 0 0 0 0 451
jcnd=451/451 +7 +3 
* * 
+7 +3 451 451
+4 * 451
+4 * 451
+3 * 451 0 451
cob=(5)
cfi=(8)
cfn=(32)
calls=451 0x387e4bd0b0 0 
* * 127272 19261 19530 17 17 13 17 17 13 20617 671 451
* * 451 451 0 1 1 0 1 1 0 0 0 451
+5 +1 451 451
+1 * 451 451

fn=(102)
0x4048de 113 465 0 465 1 0 0 1
+1 * 465
+3 * 465 0 465
+4 +1 465
+10 * 465 465
+1 * 465 465

fn=(266)
0x40406a 129 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +1 222 222
+4 * 222
+3 * 222
+5 * 222 0 222
cfi=(16)
cfn=(226)
calls=222 0x402d61 -20 
* * 1554 666 666
+5 * 222
+3 * 222 0 0 0 0 0 0 0 0 222
+2 * 222 222
+4 * 222 222 0 0 14 0 0 14
+2 * 222 0 222 0 0 7 0 0 7
+2 * 222 222
+1 * 222 222

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +2 444 444
+4 * 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=444 0x404484 107 
* * 191184 62180 59520 25 3 4 25 3 4 6928 446 884 110
+5 * 444 444
+1 * 444 444

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +2 444 444 0 1 0 0 1
+4 * 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=444 0x404a36 450 
* * 178752 57740 55080 24 3 4 24 3 4 6928 446 884 110
+5 * 444 444
+1 * 444 444

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +2 444 444
+4 * 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=444 0x40439c 107 
* * 191184 62180 59520 7 1 7 7 1 7 6928 430 884
+5 * 444 444
+1 * 444 444

fn=(116)
0x40439c 107 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +10 444 444
+4 * 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=444 0x4047d7 -26 
* * 184968 59960 57300 7 1 7 7 1 7 6928 430 884
+5 +1 444 444
+1 * 444 444

fn=(118)
0x4047d7 91 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +2 444 444
+4 * 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=444 0x4049e2 450 
* * 178752 57740 55080 7 1 7 7 1 7 6928 430 884
+5 * 444 444
+1 * 444 444

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +10 444 444
+4 * 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(52)
calls=444 0x404829 -26 
* * 184968 59960 57300 25 3 4 25 3 4 6928 446 884 110
+5 +1 444 444
+1 * 444 444

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804 0 1804 0 0 1 0 0 1
+4 +1 1804 1804
+4 * 1804 1804 0 1 1 0 1 1
+4 * 1804
+3 * 1804 1804
+4 * 1804 1804
+3 * 1804
+3 * 1804
+3 * 1804
+4 * 1804 1804
+1 * 1804 1804

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 +2 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=444 0x404236 -14 
* * 144195 24748 24560 21 16 8 21 16 8 21241 645 888
+5 * 444 444
+4 * 444 0 444
+3 +1 444 444
+4 * 444 444 0 1 0 0 1
+3 * 444 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+3 * 444 444
+4 * 444
+4 * 444
+3 * 444 444
+4 * 444 0 444
+4 +1 444 444
+1 * 444 444

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 +2 444 444
+4 * 444 444 0 1 0 0 1
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=444 0x403fbe -14 
* * 145991 24193 22316 16 6 25 16 6 25 21799 651 888
+5 * 444 444
+4 * 444 0 444
+3 +1 444 444
+4 * 444 444
+3 * 444 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+3 * 444 444
+4 * 444
+4 * 444
+3 * 444 444
+4 * 444 0 444
+4 +1 444 444
+1 * 444 444

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 222 0 222
+1 * 222
+3 * 222 0 0 1 0 0 1
+4 * 222 0 222
+4 * 222 0 222
+4 +2 222 222
+4 * 222 222
+4 * 222 222
+4 * 222 222
+4 * 222
+3 * 222 0 0 0 0 0 0 0 0 222
jcnd=7/222 +51 +10 
* * 
+2 +3 215 215
+4 * 215 215
+4 * 215 215
+4 -1 215 215
+4 * 215
+3 * 215
+3 * 215 0 215
cfi=(3)
cfn=(264)
calls=215 0x4036b1 215 
* * 8170 2795 3010 0 14 4 0 14 4 215
+5 +2 215 215
+4 * 215 215
+4 * 215
+4 * 215 215
+4 * 215 0 215
+4 * 215
jump=215 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10029 3120 2710 20 2 11 20 2 11 574 43 41
+5 +2 222 222
+1 * 222 222

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 909 0 909 1 0 0 1
+1 * 909
+3 * 909 0 909 1 0 0 1
+4 +1 909 909
+4 * 909 909
+1 * 909 909

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+3 * 444 0 444
+4 * 444
+4 * 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=444 0x404380 726 
* * 4440 2220 1776
+5 * 444 444
+4 * 444 444
+1 * 444 444

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 444 0 444
+1 * 444
+3 * 444 0 444
+1 * 444
+4 * 444 0 444 1 0 0 1
+4 +2 444 444
+4 * 444
+3 * 444 0 444
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=444 0x40325e 113 
* * 2664 1332 888
+5 * 444
+3 * 444 444
+4 * 444 444
+4 * 444 444
+4 * 444 444
+3 -1 444
+3 * 444
+3 * 444 0 444
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=444 0x40326c 148 
* * 13764 4440 5328 4 0 0 4
+5 +1 444 444
+4 * 444
+3 * 444 0 444
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=444 0x4031ec 159 
* * 82880 24696 15642 27 5 0 27 5 0 11996 387 888
+5 * 444
jump=444 +28 * 
* * 
+28 * 444 0 0 1 0 0 1
+4 * 444 444
+1 * 444 444
+1 * 444 444

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 451 0 451 1 0 0 1
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +2 451 451
+5 * 451 0 0 0 0 0 0 0 0 451
+2 +1 451 451
+4 * 451 451
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cfi=(5)
cfn=(160)
calls=451 0x4044d6 -65 
* * 53937 13797 7777 24 5 0 24 5 0 11714 392 902
+5 +1 451 451
+1 * 451 451

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 444 0 444
+1 * 444
+3 * 444 0 444
+1 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=444 0x4043ca -45 
* * 15984 5772 6216 4 0 4 4 0 4
+5 +1 444 444 0 1 0 0 1
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(20)
calls=444 0x404412 +43 
* * 155295 30076 27668 22 16 8 22 16 8 21241 645 888
+5 * 444
jump=444 +28 * 
* * 
+28 * 444
+4 * 444 444
+1 * 444 444
+1 * 444 444

fn=(14)
0x4043ca 90 444 0 444 1 0 0 1
+1 * 444
+3 * 444
+4 * 444 0 444 0 0 1 0 0 1
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=444 0x404804 +24 
* * 7992 2664 3108 2 0 1 2 0 1
+5 * 444 444
+4 * 444 0 444 0 0 2 0 0 2
+7 * 444 444
+4 * 444 0 444 1 0 0 1
+8 * 444 444
+4 * 444 0 444
+8 +1 444 444
+1 * 444 444

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 444 0 444 1 0 0 1
+1 * 444
+3 * 444 0 444
+2 * 444 0 444
+2 * 444 0 444
+1 * 444 0 0 1 0 0 1
+4 * 444 0 444
+4 * 444 0 444
+4 +2 444 444
+4 * 444
+3 * 444 0 444
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=444 0x4039fc 117 
* * 2664 1332 888 2 0 0 2
+5 * 444
+3 * 444 0 444
cfi=(3)
cfn=(84)
calls=444 0x4039ed -88 
* * 2664 1332 888
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(2)
calls=444 0x402d74 645 
* * 5772 2664 888
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444
+3 * 444
+3 * 444 0 444 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=444 0x403a0a 134 
* * 182843 38401 34748 23 6 25 23 6 25 21799 651 888
+5 +4 444 444
+4 * 444
+3 * 444 0 444
cfn=(106)
calls=444 0x40325e 113 
* * 2664 1332 888 1 0 0 1
+5 * 444
+3 * 444 444
+4 * 444 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=444 0x403a98 565 
* * 11100 4440 3552 2 0 0 2
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(112)
calls=444 0x403a68 547 
* * 11100 4440 3552
+5 * 444
+3 * 444
+3 * 444
+3 * 444
+3 * 444 0 444
cfi=(11)
cfn=(114)
calls=444 0x403ac9 -60 
* * 197844 64400 62184 7 1 7 7 1 7 6928 430 884
+5 -3 444 444
+4 * 444 0 444
+4 * 444
jump=444 +28 +4 
* * 
+28 +4 444
+4 * 444 444
+1 * 444 444
+2 * 444 444
+2 * 444 444
+1 * 444 444

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 451 0 451 1 0 0 1
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +2 451 451
+5 * 451 0 0 0 0 0 0 0 0 451 7
+2 +1 451 451
+4 * 451 451
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cfi=(5)
cfn=(190)
calls=451 0x40452a -65 
* * 60132 16182 9480 0 0 0 0 0 0 13511 40 902
+5 +1 451 451
+1 * 451 451

fn=(22)
0x404236 167 451 0 451 1 0 0 1
+1 * 451
+3 * 451
+4 * 451 0 451 1 0 0 1
+4 * 451 0 451
+4 0 451 451
+5 0 451 0 0 0 0 0 0 0 0 451
+2 0 451 451
+4 0 451 451
+4 0 451
+5 0 451
+3 0 451
+3 0 451 0 451
fi=(6) ???
cfi=(5)
cfn=(26)
calls=451 0x404730 99 
* 0 138998 22869 23138 21 18 13 21 18 13 21068 671 902
+5 0 451
fi=(6)
jump=451 +7 0 
* 0 
+7 0 451 451
+1 0 451 451

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 444 0 444 1 0 0 1
+1 * 444
+3 * 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+4 * 444 0 444
+4 * 444
+4 * 444 0 0 1 0 0 1
+4 * 444
+3 * 444
+3 * 444 0 444
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=444 0x404468 726 
* * 4440 2220 1776 1 0 0 1
+5 * 444 444
+4 * 444 444
+1 * 444 444

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+3 * 444 0 444
+4 * 444
+4 * 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfi=(10)
cfn=(44)
calls=444 0x404468 726 
* * 4440 2220 1776
+5 * 444 444
+4 * 444 444
+1 * 444 444

fn=(86)
0x403a0a 134 444 0 444
+1 * 444
+3 * 444 0 444
+1 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=444 0x4042e2 -45 
* * 15984 5772 6216 5 0 0 5
+5 +1 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444 1 0 0 1
cfn=(94)
calls=444 0x40432a +43 
* * 157091 29521 25424 17 6 25 17 6 25 21799 651 888
+5 * 444
jump=444 +28 * 
* * 
+28 * 444
+4 * 444 444
+1 * 444 444
+1 * 444 444

fn=(88)
0x4042e2 90 444 0 444 1 0 0 1
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=444 0x4047b2 +24 
* * 7992 2664 3108 3 0 0 3
+5 * 444 444
+4 * 444 0 444
+7 * 444 444
+4 * 444 0 444
+8 * 444 444
+4 * 444 0 444
+8 +1 444 444
+1 * 444 444

fn=(156)
0x4031ec 159 444 0 444 1 0 0 1
+1 * 444
+3 * 444 0 444
+1 * 444
+4 * 444 0 444
+4 +2 444 444
+4 * 444 444 0 1 0 0 1
+4 * 444
+3 * 444 444
+4 * 444 444
+3 * 444
+3 * 444
+3 * 444
+4 * 444
+3 * 444 444
+4 * 444 444
+3 -1 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(158)
calls=444 0x403ce6 +11 
* * 60236 16260 9870 24 5 0 24 5 0 11996 387 888
+5 +1 444 444
+4 * 444
+3 * 444 0 444
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=444 0x4031b8 -82 
* * 10212 3552 3552 1 0 0 1
+5 * 444
jump=444 +28 * 
* * 
+28 * 444
+4 * 444 444
+1 * 444 444
+1 * 444 444

fn=(172)
0x4031b8 79 444 0 444 1 0 0 1
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 444
+4 * 444
+3 * 444 0 444
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=444 0x403ccc +42 
* * 6216 2220 2220
+5 * 444 444
+1 * 444 444

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 916 0 916 1 0 0 1
+1 * 916
+3 * 916 0 916
+4 +1 916 916
+4 * 916 916 0 0 2 0 0 2
+4 * 916
+3 * 916 916
+4 * 916 916
+3 * 916
+3 * 916
+3 * 916
+4 * 916 916
+1 * 916 916

fn=(106)
0x40325e 113 909 0 909 1 0 0 1
+1 * 909
+3 * 909 0 909
+4 +1 909 909
+4 * 909 909
+1 * 909 909

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 458 0 458 1 0 0 1
+1 * 458
+3 * 458 0 458 0 0 1 0 0 1
+4 +1 458 458
+4 * 458 458
+1 * 458 458

fn=(82)
0x4039fc 117 458 0 458 1 0 0 1
+1 * 458
+3 * 458 0 458 1 0 0 1
+4 +1 458 458
+4 * 458 458
+1 * 458 458

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 +2 222 222
+4 * 222 222
+4 * 222 222
+4 * 222 222
+4 * 222
+3 * 222 0 0 0 0 0 0 0 0 222 7
jcnd=7/222 +51 +10 
* * 
+2 +3 215 215
+4 * 215 215
+4 * 215 215
+4 -1 215 215
+4 * 215
+3 * 215
+3 * 215 0 215
cfi=(3)
cfn=(222)
calls=215 0x403373 215 
* * 8170 2795 3010 0 14 2 0 14 2 215 1
+5 +2 215 215
+4 * 215 215
+4 * 215
+4 * 215 215
+4 * 215 0 215
+4 * 215
jump=215 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11434 3394 2942 45 18 11 45 18 11 873 77 41
+5 +2 222 222
+1 * 222 222

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 444 0 444 1 0 0 1
+1 * 444
+3 * 444 0 444
+2 * 444 0 444
+2 * 444 0 444
+1 * 444
+4 * 444 0 444 1 0 0 1
+4 * 444 0 444
+4 +2 444 444
+4 * 444
+3 * 444 0 444
cfn=(6)
calls=444 0x403b08 117 
* * 2664 1332 888 1 0 1 1 0 1
+5 * 444
+3 * 444 0 444
cfi=(3)
cfn=(8)
calls=444 0x403afa -88 
* * 2664 1332 888 1 0 0 1
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(10)
calls=444 0x402f54 645 
* * 5772 2664 888 1 1 0 1 1
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444
+3 * 444
+3 * 444 0 444
cfn=(12)
calls=444 0x403b16 134 
* * 181047 38956 36992 27 16 12 27 16 12 21241 645 888
+5 +4 444 444 0 1 0 0 1
+4 * 444
+3 * 444 0 444
cfn=(40)
calls=444 0x40333c 113 
* * 2664 1332 888 2 0 0 2
+5 * 444
+3 * 444 444
+4 * 444 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(42)
calls=444 0x403ba4 565 
* * 11100 4440 3552 3 0 0 3
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(46)
calls=444 0x403b74 547 
* * 11100 4440 3552
+5 * 444
+3 * 444
+3 * 444
+3 * 444
+3 * 444 0 444 1 0 0 1
cfi=(11)
cfn=(48)
calls=444 0x403bd5 -60 
* * 197844 64400 62184 26 3 4 26 3 4 6928 446 884 110
+5 -3 444 444
+4 * 444 0 444
+4 * 444
jump=444 +28 +4 
* * 
+28 +4 444
+4 * 444 444
+1 * 444 444
+2 * 444 444
+2 * 444 444
+1 * 444 444

fn=(108)
0x403a98 565 444 0 444 1 0 0 1
+1 * 444
+3 * 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+4 * 444 0 444
+4 * 444
+4 * 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfi=(10)
cfn=(110)
calls=444 0x404380 726 
* * 4440 2220 1776 1 0 0 1
+5 * 444 444
+4 * 444 444
+1 * 444 444

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 444 0 444
+1 * 444
+3 * 444 0 444
+1 * 444
+4 * 444 0 444 1 0 0 1
+4 +2 444 444
+4 * 444
+3 * 444 0 444
cfn=(40)
calls=444 0x40333c 113 
* * 2664 1332 888
+5 * 444
+3 * 444 444
+4 * 444 444
+4 * 444 444
+4 * 444 444
+3 -1 444
+3 * 444
+3 * 444 0 444
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=444 0x40334a 148 
* * 13764 4440 5328 2 0 0 2
+5 +1 444 444
+4 * 444
+3 * 444 0 444
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=444 0x4032ca 159 
* * 89042 27064 17342 3 0 0 3 0 0 13784 33 888
+5 * 444
jump=444 +28 * 
* * 
+28 * 444 0 0 1 0 0 1
+4 * 444 444
+1 * 444 444
+1 * 444 444

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 451 0 451 1 0 0 1
+1 * 451 0 0 1 0 0 1
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 0 451 451
+5 0 451 0 0 0 0 0 0 0 0 451
+2 0 451 451
+4 0 451 451
+4 0 451
+5 0 451
+3 0 451
+3 0 451 0 451
fi=(6)
cfi=(5)
cfn=(100)
calls=451 0x40461a 99 
* 0 142232 22605 21129 36 23 32 36 23 32 21934 718 902
+5 0 451
fi=(6)
jump=451 +7 0 
* 0 
+7 0 451 451
+1 0 451 451

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 75369 0 75369
+1 * 75369
+3 * 75369 0 75369
+4 * 75369 0 75369
+4 +1 75369 75369
+4 * 75369 75369
+3 * 75369 75369
+4 * 75369
+4 * 75369
+3 * 75369 75369
+1 * 75369 75369

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 75369 0 75369
+1 * 75369
+3 * 75369 0 75369 1 0 0 1
+4 * 75369 0 75369
+4 +1 75369 75369
+4 * 75369 75369
+3 * 75369 75369
+4 * 75369
+4 * 75369
+3 * 75369 75369
+1 * 75369 75369

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 444
+4 * 444
+3 * 444 0 444
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=444 0x403d7e +42 
* * 6216 2220 2220 1 0 0 1
+5 * 444 444
+1 * 444 444

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 444 0 444 1 0 0 1
+1 * 444
+3 * 444 0 444
+1 * 444
+4 * 444 0 444
+4 +2 444 444
+4 * 444 444
+4 * 444
+3 * 444 444
+4 * 444 444
+3 * 444
+3 * 444
+3 * 444
+4 * 444
+3 * 444 444
+4 * 444 444
+3 -1 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(188)
calls=444 0x403d98 +11 
* * 66398 18628 11570 1 0 0 1 0 0 13784 33 888
+5 +1 444 444
+4 * 444
+3 * 444 0 444
cfn=(192)
calls=444 0x403296 -82 
* * 10212 3552 3552 1 0 0 1
+5 * 444
jump=444 +28 * 
* * 
+28 * 444
+4 * 444 444
+1 * 444 444
+1 * 444 444

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444 1 0 0 1
+4 * 444 0 444
+4 * 444 0 444
+4 +8 444 0 444
+4 +3 444 444
+4 * 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=444 0x404f37 -22 
* * 107712 33764 30660 14 3 3 14 3 3 6928 446 884 110
+5 +1 444 444
+1 * 444 444

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 444 0 444
+1 * 444
+3 * 444 0 444
+2 * 444 0 444
+1 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +4 444 444
+4 * 444
+3 * 444 0 444
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=444 0x404878 277 
* * 6660 2664 2220 1 0 0 1
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=444 0x404d44 277 
* * 11100 3996 3552 2 0 0 2
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(132)
calls=444 0x404d44 277 
* * 11100 3996 3552
+5 * 444
+3 * 444
+3 * 444
+3 * 444 0 444
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=444 0x404d5e -49 
* * 114372 35984 33324 1 1 7 1 1 7 6928 430 884
+5 +1 444
+4 * 444 444
+1 * 444 444
+2 * 444 444
+1 * 444 444

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 444 0 444
+1 * 444
+3 * 444 0 444
+1 * 444
+4 * 444 0 444 1 0 0 1
+4 * 444 0 444
+4 * 444 0 444
+4 +10 444 444
+4 * 444
+3 * 444 0 444
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=444 0x404c38 288 
* * 6660 2664 2220 3 0 0 3
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(56)
calls=444 0x404c38 288 
* * 6660 2664 2220
+5 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=444 0x404c52 -36 
* * 155664 49748 47088 20 3 4 20 3 4 6928 446 884 110
+5 +1 444
+4 * 444 444
+1 * 444 444
+1 * 444 444

fn=(60)
0x404c52 424 444 0 444
+1 * 444
+3 * 444 0 444
+2 * 444 0 444
+1 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +4 444 444
+4 * 444
+3 * 444 0 444
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=444 0x40492d 277 
* * 6660 2664 2220 2 0 0 2
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=444 0x404d9d 277 
* * 11100 3996 3552 2 0 1 2 0 1
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(66)
calls=444 0x404d9d 277 
* * 11100 3996 3552
+5 * 444
+3 * 444
+3 * 444
+3 * 444 0 444
cfn=(72)
calls=444 0x404db7 -49 
* * 114372 35984 33324 15 3 3 15 3 3 6928 446 884 110
+5 +1 444
+4 * 444 444
+1 * 444 444
+2 * 444 444
+1 * 444 444

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 486 0 486 1 0 0 1
+1 * 486
+3 * 486
+4 * 486 0 486
+4 +1 486 486
+4 * 486
+3 * 486 0 486 1 0 0 1
cfi=(13)
cfn=(64)
calls=486 -33 -66 
* * 2916 1458 972
+5 * 486 486
+1 * 486 486

fn=(66)
0x404d9d 277 888 0 888
+1 * 888
+3 * 888
+4 * 888 0 888
+4 +1 888 888
+4 * 888
+3 * 888 0 888
cfi=(13)
cfn=(68)
calls=888 0x404f1a -58 
* * 14208 5328 4440 2 0 1 2 0 1
+5 * 888 888
+1 * 888 888

fn=(240)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 444 0 444
+1 * 444
+3 * 444 0 444
+1 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +10 444 444
+4 * 444
+3 * 444 0 444
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=444 0x404bc6 288 
* * 6660 2664 2220 3 0 0 3
+5 * 444
+3 * 444 444
+4 * 444
+3 * 444 0 444
cfn=(122)
calls=444 0x404bc6 288 
* * 6660 2664 2220
+5 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(126)
calls=444 0x404be0 -36 
* * 155664 49748 47088 4 1 7 4 1 7 6928 430 884
+5 +1 444
+4 * 444 444
+1 * 444 444
+1 * 444 444

fn=(128)
0x404878 277 486 0 486
+1 * 486
+3 * 486
+4 * 486 0 486 1 0 0 1
+4 +1 486 486
+4 * 486
+3 * 486 0 486
cfi=(13)
cfn=(130)
calls=486 -33 -66 
* * 2916 1458 972 0 0 1 0 0 1
+5 * 486 486
+1 * 486 486

fn=(132)
0x404d44 277 888 0 888
+1 * 888
+3 * 888
+4 * 888 0 888
+4 +1 888 888
+4 * 888
+3 * 888 0 888
cfi=(13)
cfn=(134)
calls=888 0x404e98 -58 
* * 14208 5328 4440 2 0 0 2
+5 * 888 888
+1 * 888 888

fn=(138)
0x404d5e 379 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 * 444 0 444
+4 +8 444 0 444
+4 +3 444 444
+4 * 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=444 0x404eb5 -22 
* * 107712 33764 30660 1 1 7 1 1 7 6928 430 884
+5 +1 444 444
+1 * 444 444

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888
+4 +1 888 888
+4 * 888
+3 * 888 0 888
cfi=(13)
cfn=(124)
calls=888 0x404d36 -77 
* * 5328 2664 1776 2 0 0 2
+5 * 888 888
+1 * 888 888

fn=(56)
0x404c38 288 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888 1 0 0 1
+4 +1 888 888
+4 * 888
+3 * 888 0 888
cfi=(13)
cfn=(58)
calls=888 0x404d8f -77 
* * 5328 2664 1776 1 0 0 1
+5 * 888 888
+1 * 888 888

fn=(74)
0x404f37 368 458 0 458
+1 * 458
+3 * 458
+4 * 458 0 458 1 0 0 1
+4 * 458 0 458
+4 * 458 0 458
+4 +2 458 458
+4 * 458 458
+4 * 458
+3 * 458
+3 * 458
+4 * 458 0 458
+4 +1 458 458
+5 * 458 0 0 0 0 0 0 0 0 458
jcnd=7/458 +33 +2 
* * 
+2 +1 451 451
+4 * 451
+8 * 451 451
+4 * 451 451
+4 * 451
+3 * 451 0 0 1 0 0 1
+3 * 451 0 451 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=451 0x3877c83840 0 
* * 96012 29061 28164 11 2 5 11 2 5 6546 449 446 110
* * 451 451 0 1 1 0 1 1 0 0 0 451
+5 +1 458 458
+4 * 458
+8 * 458 458
+4 * 458
+3 +1 458 458
+1 * 458 458

fn=(140)
0x404eb5 368 458 0 458
+1 * 458
+3 * 458
+4 * 458 0 458 1 0 0 1
+4 * 458 0 458
+4 * 458 0 458 0 0 1 0 0 1
+4 +2 458 458
+4 * 458 458
+4 * 458
+3 * 458
+3 * 458
+4 * 458 0 458
+4 +1 458 458
+5 * 458 0 0 0 0 0 0 0 0 458
jcnd=7/458 +33 +2 
* * 
+2 +1 451 451
+4 * 451
+8 * 451 451
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cob=(2)
cfi=(9)
cfn=(78)
calls=451 0x3877c83840 0 
* * 96012 29061 28164 0 1 8 0 1 8 6546 435 446
* * 451 451 0 0 0 0 0 0 0 0 0 451
+5 +1 458 458
+4 * 458
+8 * 458 458
+4 * 458
+3 +1 458 458
+1 * 458 458

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888
+4 +1 888 888
+4 * 888 888
+1 * 888 888

fn=(110)
0x404380 726 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888
+4 * 888 0 888
+4 * 888 888
+4 * 888 888
+3 * 888 888
+4 * 888 0 888
+3 * 888 888
+1 * 888 888

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888
+4 +1 888 888
+4 * 888 888
+1 * 888 888

fn=(44)
0x404468 726 888 0 888
+1 * 888
+3 * 888 0 888
+4 * 888 0 888
+4 * 888 888
+4 * 888 888
+3 * 888 888
+4 * 888 0 888 1 0 0 1
+3 * 888 888
+1 * 888 888

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 451 0 451 1 0 0 1
+1 * 451
+3 * 451 0 451
+4 * 451 0 451 1 0 0 1
+4 * 451 451
+1 * 451 451

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 451 0 451 1 0 0 1
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 +4 451 451
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=451 0x40454c -14 
* * 2706 902 1353 1 0 0 1
+5 +2 451 451
+1 * 451 451

fn=(150)
0x40326c 148 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +3 451 451 0 1 0 0 1
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=451 0x403d1a -29 
* * 8118 2706 3157 3 0 0 3
+5 +1 451 451
+1 * 451 451

fn=(180)
0x40334a 148 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +3 451 451
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cfn=(182)
calls=451 0x403dcc -29 
* * 8118 2706 3157 2 0 0 2
+5 +1 451 451
+1 * 451 451

fn=(152)
0x403d1a 122 451 0 451 1 0 0 1
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 +4 451 451
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cfn=(154)
calls=451 0x4044f8 -14 
* * 2706 902 1353 2 0 0 2
+5 +2 451 451
+1 * 451 451

fn=(184)
0x40454c 112 451 0 451 1 0 0 1
+1 * 451
+3 * 451 0 451
+4 * 451 0 451
+4 * 451 451
+1 * 451 451

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2019 376 382 2 2 5 2 2 5 278 26 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 14 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3457 667 617 22 17 7 22 17 7 586 67 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 5 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 5 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 222 0 222 1 0 0 1
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 +1 222 222
+4 * 222
+3 * 222 0 222
cfi=(2)
cfn=(2)
calls=222 0x402d74 645 
* * 2886 1332 444
+5 * 222
+3 * 222 0 222
+3 +1 222 222
+6 * 222 0 222
+3 * 222 222
+6 * 222 0 222
+3 +1 222 222
+6 * 222 0 222 1 0 0 1
+3 * 222 222
+6 * 222 0 222
+3 +2 222 0 222
+7 * 222
jump=222 +86 * 
* * 
+2 +1 24975 24975
+3 * 24975
+3 * 24975 24975
+4 * 24975
+3 * 24975
+3 * 24975 0 24975
cfi=(2)
cfn=(144)
calls=24975 0x402d9a 770 
* * 274725 124875 74925
+5 * 24975 24975
+4 * 24975 24975
+5 * 24975
+4 * 24975 0 24975
+5 +1 24975 24975
+3 * 24975
+3 * 24975 24975
+4 * 24975
+3 * 24975
+3 * 24975 0 24975
cfi=(2)
cfn=(146)
calls=24975 0x402dba 770 
* * 274725 124875 74925 1 0 0 1
+5 * 24975 24975
+2 * 24975
+4 * 24975 24975
+5 * 24975
+4 * 24975 0 24975
+5 -2 24975 0 24975
+4 * 24975 24975
+3 * 24975
+3 * 24975 24975
+3 * 24975 0 0 0 0 0 0 0 0 24975 223
jcnd=24753/24975 -93 +1 
* * 
-9 * 222 222 0 1 0 0 1
+3 * 222
+3 * 222 222
+3 * 222 0 0 0 0 0 0 0 0 222
jcnd=222/222 -93 +1 
* * 
+2 +4 222 222
+3 * 222
+3 * 222
+4 * 222 222 0 1 0 0 1
+5 * 222
+4 * 222
+3 * 222 0 222
+5 +1 222 222
+3 * 222
+3 * 222
+4 * 222 222
+5 * 222
+4 * 222
+3 * 222 0 222
+5 +1 222 0 222
+7 * 222
jump=222 0x4016ee * 
* * 
+2 +1 24975 24975
+3 * 24975
+3 * 24975 24975
+4 * 24975
+3 * 24975 0 0 1 0 0 1
+3 * 24975 0 24975
cfi=(2)
cfn=(146)
calls=24975 0x402dba 770 
* * 274725 124875 74925
+5 * 24975 24975
+2 * 24975
+4 * 24975 24975
+5 * 24975 0 24975
+5 +1 24975 24975
+3 * 24975
+3 * 24975 24975
+4 * 24975
+3 * 24975
+3 * 24975 0 24975
cfi=(2)
cfn=(144)
calls=24975 0x402d9a 770 
* * 274725 124875 74925
+5 * 24975 24975
+4 * 24975 24975
+5 * 24975 0 24975
+5 +1 24975 24975
+5 * 24975 24975
+5 * 24975 24975
+5 * 24975
+4 * 24975 0 24975
+5 +1 24975 24975
+5 * 24975 24975
+5 * 24975 24975
+5 * 24975
+4 * 24975 0 24975
+5 -4 24975 0 24975
+4 * 24975 24975
+3 * 24975
+3 * 24975 24975
+3 * 24975 0 0 0 0 0 0 0 0 24975 223
jcnd=24753/24975 0x401672 +1 
* * 
-9 * 222 222 0 1 0 0 1
+3 * 222
+3 * 222 222
+3 * 222 0 0 0 0 0 0 0 0 222
jcnd=222/222 0x401672 +1 
* * 
+6 +6 222 222 0 1 0 0 1
+5 * 222 222
+5 * 222 0 222
+5 +2 222 222
+3 +1 222 0 222
+3 * 222 222
+5 * 222 222
+1 * 222 222

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 222
+7 * 222
+7 * 222
+3 * 222
+3 * 222 0 222
cfi=(2)
cfn=(4)
calls=222 0x4030b2 310 
* * 218697 62568 58298 63 19 16 63 19 16 14098 679 886 110
+5 * 222
+7 * 222
+7 * 222
+3 * 222
+3 * 222 0 222
cfi=(2)
cfn=(80)
calls=222 0x402ff4 310 
* * 219853 62304 57193 38 7 30 38 7 30 14431 687 886
+5 * 222 0 0 1 0 0 1
+7 * 222
+7 * 222
+3 * 222
+3 * 222 0 222
cfn=(142)
calls=222 0x401585 -52 
* * 2611830 1154400 603174 8 0 0 8 0 0 50394 446
+5 * 222 0 222
+8 * 222 222
+6 * 222 0 222
+6 * 222
+7 * 222
+3 * 222 0 222
cfi=(2)
cfn=(148)
calls=222 0x402df4 414 
* * 54982 17232 12261 33 5 0 33 5 0 5998 196 444
+5 * 222
+7 * 222
+3 * 222 0 222 1 0 0 1
cfi=(2)
cfn=(178)
calls=222 0x402e74 414 
* * 58063 18416 13111 7 0 0 7 0 0 6892 19 444
+5 +2 222
+7 * 222
+7 * 222
+3 * 222
+3 * 222 0 222
cfi=(2)
cfn=(4)
calls=222 0x4030b2 310 
* * 218358 62544 58194 2 1 1 2 1 1 14071 412 886
+5 * 222
+7 * 222
+7 * 222
+3 * 222
+3 * 222 0 222
cfi=(2)
cfn=(80)
calls=222 0x402ff4 310 
* * 218998 62253 57055 0 0 2 0 0 2 14296 394 886
+5 * 222 222
+6 * 222 0 0 1 0 0 1
+7 * 222
+7 * 222 0 222
+6 * 222 222
+8 * 222
+3 * 222
+3 * 222 0 222
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=222 0x401719 -33 
* * 1211898 504384 278055 4 0 0 4 0 0 25197 223
+5 * 222 0 222
+8 * 222 222
+6 * 222 0 222
+6 * 222
+7 * 222 0 0 1 0 0 1
+3 * 222 0 222
cfi=(2)
cfn=(148)
calls=222 0x402df4 414 
* * 54982 17232 12261 0 0 0 0 0 0 5998 191 444
+5 * 222
+7 * 222
+3 * 222 0 222
cfi=(2)
cfn=(178)
calls=222 0x402e74 414 
* * 58063 18416 13111 0 0 0 0 0 0 6892 14 444
+5 +2 222 222
+7 * 222
+3 * 222 0 222
cfi=(2)
cfn=(2)
calls=222 0x402d74 645 
* * 2886 1332 444
+5 * 222 222
+6 * 222
+3 * 222
+3 * 222
+3 * 222 222
+7 * 222
+3 * 222 0 0 1 0 0 1
+3 * 222 0 222
cfi=(2)
cfn=(144)
calls=222 0x402d9a 770 
* * 2442 1110 666
+5 * 222
+3 * 222
+7 * 222
+3 * 222
+3 * 222 0 222
cfi=(2)
cfn=(200)
calls=222 0x402eda 901 
* * 25509 9110 7111 48 32 13 48 32 13 1310 85 41
+5 +1 222 222
+7 * 222
+3 * 222 0 222
cfi=(2)
cfn=(10)
calls=222 0x402f54 645 
* * 2886 1332 444 0 1 0 0 1
+5 * 222 222
+6 * 222
+3 * 222
+3 * 222
+3 * 222 222
+7 * 222 0 0 1 0 0 1
+3 * 222
+3 * 222 0 222
cfi=(2)
cfn=(146)
calls=222 0x402dba 770 
* * 2442 1110 666
+5 * 222
+3 * 222
+7 * 222
+3 * 222
+3 * 222 0 222
cfi=(2)
cfn=(244)
calls=222 0x402f7a 901 
* * 24104 8836 6879 21 16 15 21 16 15 1011 43 41
+5 +1 222 222
+7 * 222
+3 * 222 0 222
cfi=(2)
cfn=(10)
calls=222 0x402f54 645 
* * 2886 1332 444
+5 * 222 222
+6 * 222
+3 * 222
+3 * 222
+3 * 222 222 0 1 0 0 1
+7 * 222
+3 * 222
+3 * 222 0 222
cfi=(2)
cfn=(146)
calls=222 0x402dba 770 
* * 2442 1110 666
+5 * 222 222
+2 * 222
+4 * 222 222
+8 * 222 222
+8 * 222 0 222
+8 +1 222 222
+7 * 222
+3 * 222 0 222
cfi=(2)
cfn=(2)
calls=222 0x402d74 645 
* * 2886 1332 444
+5 * 222 222 0 1 0 0 1
+6 * 222
+3 * 222
+3 * 222
+3 * 222 222
+7 * 222
+3 * 222
+3 * 222 0 222
cfi=(2)
cfn=(144)
calls=222 0x402d9a 770 
* * 2442 1110 666
+5 * 222 222
+4 * 222 222
+8 * 222
+4 * 222 222
+8 * 222
+3 * 222 0 222
+8 +2 222 0 222
+7 -12 222 222
+8 * 222 222
+7 * 222 0 0 0 0 0 0 0 0 222 1
jcnd=1/222 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 222
+7 * 222
+3 * 222 0 222
cfi=(2)
cfn=(2)
calls=222 0x402d74 645 
* * 2886 1332 444 2 0 1 2 0 1
+5 * 222
+3 * 222 222
+7 * 222
+3 * 222 0 222
cfi=(2)
cfn=(2)
calls=222 0x402d74 645 
* * 2886 1332 444 0 1 0 0 1
+5 * 222
+3 * 222 0 0 0 0 0 0 0 0 222 1
+2 * 222 0 0 1 0 0 1
+5 * 222
jump=222 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 222
+2 * 222 0 0 0 0 0 0 0 0 222
jcnd=222/222 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+5 +1 222 222
+4 * 222
+3 * 222 0 222
cfi=(2)
cfn=(2)
calls=222 0x402d74 645 
* * 2886 1332 444
+5 * 222
+3 * 222 0 222
+3 +1 222 222 0 1 0 0 1
+6 * 222 0 222
+3 * 222 222
+6 * 222 0 222
+3 +2 222 0 222
+7 * 222
jump=222 +86 * 
* * 
+2 +1 24975 24975
+3 * 24975
+3 * 24975 24975
+4 * 24975
+3 * 24975
+3 * 24975 0 24975
cfi=(2)
cfn=(144)
calls=24975 0x402d9a 770 
* * 274725 124875 74925
+5 * 24975 24975
+4 * 24975 24975
+5 * 24975
+4 * 24975 0 24975
+5 +1 24975 24975
+3 * 24975
+3 * 24975 24975
+4 * 24975
+3 * 24975
+3 * 24975 0 24975
cfi=(2)
cfn=(146)
calls=24975 0x402dba 770 
* * 274725 124875 74925
+5 * 24975 24975
+2 * 24975
+4 * 24975 24975
+5 * 24975
+4 * 24975 0 24975
+5 -2 24975 0 24975
+4 * 24975 24975
+3 * 24975
+3 * 24975 24975
+3 * 24975 0 0 0 0 0 0 0 0 24975 223
jcnd=24753/24975 -93 +1 
* * 
-9 * 222 222 0 1 0 0 1
+3 * 222
+3 * 222 222
+3 * 222 0 0 0 0 0 0 0 0 222
jcnd=222/222 -93 +1 
* * 
+2 +4 222 222
+3 * 222
+3 * 222 0 0 1 0 0 1
+4 * 222 222
+5 * 222
+4 * 222
+3 * 222 0 222
+5 +1 222 222
+3 * 222
+3 * 222
+4 * 222 222
+5 * 222
+4 * 222
+3 * 222 0 222
+5 +1 222 222
+5 * 222 222
+5 * 222 222
+5 * 222 0 0 1 0 0 1
+4 * 222
+3 * 222 0 222
+5 +2 222 222
+3 +1 222 0 222
+3 * 222 222
+5 * 222 222
+1 * 222 222

fl=(4)
fn=(90)
0x4047b2 115 444 0 444 1 0 0 1
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444 1 0 0 1
+4 +1 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfi=(5)
cfn=(92)
calls=444 0x4049d4 -35 
* * 2664 888 1332 1 0 0 1
+5 * 444 444
+1 * 444 444

fn=(194)
0x403d7e 121 444 0 444 1 0 0 1
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 444
+4 * 444
+3 * 444 0 444
cfi=(5)
cfn=(196)
calls=444 0x404520 -35 
* * 2220 888 888
+5 * 444 444
+1 * 444 444

fn=(16)
0x404804 115 444 0 444 1 0 0 1
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 0 444
+4 +1 444 444
+4 * 444 444
+4 * 444
+3 * 444
+3 * 444 0 444
cfi=(5)
cfn=(18)
calls=444 0x404a28 -35 
* * 2664 888 1332 1 0 1 1 0 1
+5 * 444 444
+1 * 444 444

fn=(174)
0x403ccc 121 444 0 444
+1 * 444
+3 * 444
+4 * 444 0 444
+4 * 444 444
+4 * 444
+3 * 444 0 444
cfi=(5)
cfn=(176)
calls=444 0x4044cc -35 
* * 2220 888 888
+5 * 444 444
+1 * 444 444

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 784 784 0 1 0 0 1
+6 0 784
+2 0 784 0 0 0 0 0 0 0 0 784 1
+2 0 784 784

fn=(38) _int_malloc
0x3877c79a00 0 902 0 902 1 0 0 1
+2 0 902
+3 0 902 0 902
+2 0 902 0 902
+2 0 902 0 902 0 0 1 0 0 1
+2 0 902
+3 0 902 0 902
+1 0 902 0 902
+1 0 902
+4 0 902
+4 0 902 0 0 0 0 0 0 0 0 902
+6 0 902
+4 0 902
+6 0 902
+3 0 902
+4 0 902
+4 0 902
+4 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
+6 0 902 902 0 1 1 0 1 1
+7 0 902 0 0 0 0 0 0 0 0 902 7
jcnd=780/902 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 784
+4 0 784 784
+1 0 784 784
+1 0 784 784
+2 0 784 784
+2 0 784 784
+2 0 784 784
+2 0 784 784
+7 0 797
+7 0 797 0 0 1 0 0 1 0 0 797 3
jcnd=2/797 0x3877c79b70 0 
* 0 
+2 0 795
+3 0 795
+5 0 795
+3 0 795
+4 0 795 0 795
+4 0 795
+2 0 795
+5 0 795 795 0 0 5 0 0 5
+4 0 795
+3 0 795 0 0 0 0 0 0 0 0 795
jcnd=795/795 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 912 244 194 8 2 0 8 2 0 188 23
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 796 0 0 1 0 0 1
+3 0 796
+3 0 796
+3 0 796
+4 0 796
+3 0 796
+4 0 796 0 796
+5 0 796
+3 0 796 0 796
+4 0 796 0 796
+4 0 796 0 796
+5 0 796
+3 0 796
+3 0 796
+3 0 796
+3 0 796
+4 0 796
+4 0 796 0 0 1 0 0 1
+4 0 796 0 796
+4 0 796
+4 0 796 0 796
+5 0 796 0 796
+5 0 796
+3 0 796
+3 0 796 0 796
+5 0 796
+5 0 796
+3 0 796 0 796
+4 0 796 0 796
+4 0 796
+6 0 796 0 796
+4 0 796 0 796
+5 0 796 0 0 1 0 0 1
+3 0 796
+3 0 796
+3 0 796
jump=796 +87 0 
* 0 
+8 0 754
+3 0 754
+4 0 754
+2 0 754
+2 0 754
+3 0 754
+3 0 754
+3 0 754
+2 0 754
+2 0 754
+5 0 754
+2 0 754 754 0 0 2 0 0 2
+4 0 754
+3 0 754
+4 0 754 0 754
+4 0 754 0 754
+8 0 754
+7 0 754 0 754
+4 0 754 0 754 0 0 1 0 0 1
+4 0 754 0 754
+4 0 754 0 0 0 0 0 0 0 0 754
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1619 1619 0 1 0 0 1
+4 0 1619
+3 0 1619 0 0 0 0 0 0 0 0 1619 26
jcnd=764/1619 0x3877c79ef0 0 
* 0 
+6 0 855 855
+4 0 855 855
+4 0 855
+4 0 855 0 0 0 0 0 0 0 0 855
+6 0 855 855 0 1 1 0 1 1
+7 0 855 0 0 0 0 0 0 0 0 855
+6 0 855
+4 0 855
+7 0 855 0 0 0 0 0 0 0 0 855 3
jcnd=6/855 +11 0 
* 0 
+2 0 849
+3 0 849 0 0 0 0 0 0 0 0 849 62
jcnd=773/849 0x3877c79e28 0 
* 0 
+6 0 835
+3 0 835 0 835
+4 0 835 0 835
+5 0 835 0 0 0 0 0 0 0 0 835 9
jcnd=13/835 0x3877c7a090 0 
* 0 
+6 0 822
+7 0 822 0 0 0 0 0 0 0 0 822 10
jcnd=754/822 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 7
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 773 773 0 1 0 0 1
+4 0 773
+3 0 773 0 0 0 0 0 0 0 0 773 312
jcnd=389/773 0x3877c79ce1 0 
* 0 
+6 0 384 384
+5 0 384 0 0 0 0 0 0 0 0 384 5
jcnd=364/384 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 764 0 0 1 0 0 1
+7 0 764
+3 0 764 0 0 0 0 0 0 0 0 764 1
jcnd=2/764 0x3877c7a0b0 0 
* 0 
+6 0 764 764 0 1 0 0 1
+4 0 764
+3 0 764
+3 0 764
+2 0 764
+4 0 764
+3 0 764
+3 0 764
+2 0 764
+2 0 764
+2 0 764
+2 0 764 764 0 0 1 0 0 1
+8 0 764
+5 0 764
+5 0 764
+2 0 764 0 0 0 0 0 0 0 0 764
-2 0 406
+2 0 406 0 0 0 0 0 0 0 0 406
+2 0 1170
+2 0 1170 0 0 0 0 0 0 0 0 1170 25
jcnd=589/1170 +64 0 
* 0 
+2 0 581
+8 0 581
+3 0 581
+3 0 581 0 0 0 0 0 0 0 0 581 1
jcnd=1/581 0x3877c79fc0 0 
* 0 
-6 0 676
+3 0 676
+3 0 676 0 0 0 0 0 0 0 0 676 3
jcnd=305/676 0x3877c79fc0 0 
* 0 
+2 0 951
+2 0 951 951
+8 0 951
+2 0 951 0 0 0 0 0 0 0 0 951 16
jcnd=676/951 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 6568
+4 0 6568
+2 0 6568
+2 0 6568 0 0 0 0 0 0 0 0 6568 412
jcnd=5815/6568 -8 0 
* 0 
-2 0 589 0 0 1 0 0 1
+2 0 589 0 0 0 0 0 0 0 0 589 14
jcnd=540/589 -8 0 
* 0 
+2 0 864 864 0 0 11 0 0 11
+4 0 864 0 0 1 0 0 1
+3 0 864 0 0 0 0 0 0 0 0 864 370
jcnd=458/864 0x3877c7a1cf 0 
* 0 
+6 0 406
+2 0 406
+4 0 406
+2 0 406
+2 0 406
+2 0 406 0 406
+8 0 406
jump=406 0x3877c79f30 0 
* 0 
+37 0 306 306 0 1 0 0 1
+5 0 306 306
+4 0 306
+4 0 306 306
+5 0 306 0 0 0 0 0 0 0 0 306
jcnd=306/306 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 458 458 0 1 1 0 1 1
+4 0 458 458 0 0 1 0 0 1
+4 0 458
+3 0 458 458
+4 0 458
+4 0 458
+3 0 458
+3 0 458 458
+4 0 458 0 0 0 0 0 0 0 0 458
+6 0 458 458
+4 0 458 0 0 0 0 0 0 0 0 458
+6 0 458 458 0 1 0 0 1
+8 0 458 0 458
+4 0 458 0 458
+4 0 458 0 0 0 0 0 0 0 0 458 8
jcnd=388/458 +38 0 
* 0 
+2 0 70 70 0 0 1 0 0 1
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 388
+4 0 388 0 0 0 0 0 0 0 0 388 7
jcnd=13/388 0x3877c7a2e3 0 
* 0 
+6 0 445 445
+4 0 445 445 0 1 0 0 1
+4 0 445 0 0 0 0 0 0 0 0 445
+6 0 445
+4 0 445
+7 0 445 0 445 0 0 7 0 0 7
+4 0 445 0 445
+4 0 445 0 445
+4 0 445 0 445
+4 0 445 0 0 0 0 0 0 0 0 445 3
jcnd=2/445 +7 0 
* 0 
+2 0 443 0 443
+5 0 443
+7 0 443 0 0 0 0 0 0 0 0 443 4
jcnd=436/443 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 2 0 0 2
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 438
+7 0 438 0 438
+4 0 438
+3 0 438
+3 0 438
+4 0 438
+3 0 438
+4 0 438
+3 0 438
+3 0 438
+4 0 438 0 438
+4 0 438 0 438 0 0 1 0 0 1
+4 0 438
jump=438 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 13
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +7 0 
* 0 
+7 0 458
+4 0 458 0 0 1 0 0 1
+3 0 458
+3 0 458 0 458
cfn=(104)
calls=458 0x3877c77180 0 
* 0 1832 916 0 1 0 0 1 0 0 458
+5 0 458
+3 0 458
jump=458 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 306 0 0 1 0 0 1
+7 0 306
+2 0 306
+4 0 306
+3 0 306
+3 0 306 0 306
+5 0 306
+3 0 306
+4 0 306
+3 0 306 0 0 1 0 0 1
+4 0 306
+4 0 306
+3 0 306
+4 0 306 0 306
+4 0 306 0 306 0 0 11 0 0 11
+4 0 306
+3 0 306
+3 0 306 0 306
cfn=(104)
calls=306 0x3877c77180 0 
* 0 1224 612 0 0 0 0 0 0 0 306 1
+5 0 306
+3 0 306
jump=306 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 902 0 902 1 0 0 1
+5 0 902 0 902
+5 0 902
+3 0 902 0 902
+5 0 902
+4 0 902 902 0 0 1 0 0 1
+7 0 902 902 0 0 1 0 0 1
+3 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
+6 0 902 902 0 0 1 0 0 1
+7 0 902 902 0 1 1 0 1 1
+4 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
+2 0 902 902 0 0 1 0 0 1
+3 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 +97 0 
* 0 
+18 0 902
+3 0 902
+3 0 902 0 902
cfn=(38)
calls=902 0x3877c79a00 0 
* 0 205462 24728 28933 42 33 44 42 33 44 32178 1370
+5 0 902
+3 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
+2 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
+2 0 902
+3 0 902 0 0 0 0 0 0 0 0 902 5
+2 0 902 902
+7 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 +13 0 
* 0 
+13 0 902 0 902
+2 0 902 0 0 0 0 0 0 0 0 902 14
+6 0 902
+3 0 902 902
+4 0 902 902
+5 0 902 902
+5 0 902
+4 0 902 902
+1 0 902 0 0 1 0 0 1
+5 0 902 902 0 0 1 0 0 1
+7 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 +14 0 
* 0 
+14 0 902 0 902 1 0 0 1
+3 0 902 0 0 0 0 0 0 0 0 902
+6 0 902
jump=902 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 902 0 902 1 0 0 1
+2 0 902
+3 0 902
+3 0 902 0 902
+2 0 902
+3 0 902 0 902
+1 0 902
+3 0 902 0 902
+1 0 902
+3 0 902
+4 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
+6 0 902
+4 0 902
+3 0 902 0 0 0 0 0 0 0 0 902 7
jcnd=10/902 0x3877c838d1 0 
* 0 
+2 0 892
+3 0 892
+3 0 892
+3 0 892
+3 0 892
+3 0 892 0 0 0 0 0 0 0 0 892
jcnd=892/892 +41 0 
* 0 
+41 0 892 0 0 1 0 0 1
+3 0 892 0 0 0 0 0 0 0 0 892
jcnd=892/892 0x3877c839c0 0 
* 0 
+24 0 892
+3 0 892
+4 0 892
+3 0 892
+3 0 892
+3 0 892
+3 0 892
+3 0 892 0 0 0 0 0 0 0 0 892 444
jcnd=452/892 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 450
+10 0 450 450 0 0 2 0 0 2
+3 0 450
+4 0 450 0 450
+3 0 450
+4 0 450
+4 0 450 0 0 0 0 0 0 0 0 450
jcnd=450/450 -18 0 
* 0 
-18 0 1406 1406
+3 0 1406
+4 0 1406 0 1406
+3 0 1406
+4 0 1406
+4 0 1406 0 0 0 0 0 0 0 0 1406 11
jcnd=956/1406 -18 0 
* 0 
+2 0 902
+4 0 902
+3 0 902 902
+1 0 902 902
+1 0 902 902
+2 0 902 902 0 1 0 0 1
+2 0 902 902
0x3877c839c0 0 892 0 0 1 0 0 1
+3 0 892
+3 0 892
+3 0 892
+4 0 892 0 892 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=892 0x3877c89b20 0 
* 0 140950 51756 49972 6 1 12 6 1 12 6746 422 892 110
+5 0 892
jump=892 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 902 902 0 1 1 0 1 1
+7 0 902 902 0 0 1 0 0 1
+3 0 902
+3 0 902 0 0 1 0 0 1 0 0 902
+6 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
+6 0 902 902
+4 0 902
+4 0 902
+2 0 902 0 0 0 0 0 0 0 0 902 2
+2 0 902
+2 0 902
+7 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 +14 0 
* 0 
+14 0 902
+2 0 902
cfn=(170) _int_free
calls=902 0x3877c78650 0 
* 0 86107 22763 12747 19 1 0 19 1 0 20715 430

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 8
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 2
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 902 0 902 1 0 0 1
+2 0 902 0 902
+2 0 902 0 902
+2 0 902
+3 0 902 0 902
+2 0 902 0 902
+1 0 902 0 902
+1 0 902
+3 0 902
+4 0 902 902
+4 0 902 0 902
+4 0 902
+3 0 902
+4 0 902
+3 0 902
+3 0 902
+3 0 902 0 0 1 0 0 1 0 0 902
+6 0 902
+4 0 902 0 0 0 0 0 0 0 0 902
+6 0 902
+4 0 902 0 0 0 0 0 0 0 0 902
+6 0 902 902
+7 0 902 0 0 0 0 0 0 0 0 902 4
jcnd=778/902 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 778
+2 0 778 0 0 0 0 0 0 0 0 778
+6 0 778 778 0 1 0 0 1
+4 0 778
+3 0 778
+2 0 778 0 0 0 0 0 0 0 0 778
jcnd=778/778 0x3877c78a40 0 
* 0 
+6 0 778 778
+4 0 778
+3 0 778 0 0 0 0 0 0 0 0 778
+6 0 778 778
+5 0 778
+4 0 778 0 0 0 0 0 0 0 0 778
jcnd=778/778 0x3877c7907c 0 
* 0 
+6 0 778 778
+5 0 778
+4 0 778 0 0 0 0 0 0 0 0 778
+6 0 778
+4 0 778 0 0 1 0 0 1 0 0 778
+6 0 778
+4 0 778 778
+7 0 778 0 0 0 0 0 0 0 0 778
+6 0 778 778
+6 0 778
+2 0 778 0 0 0 0 0 0 0 0 778
+6 0 778 778
+4 0 778 0 0 0 0 0 0 0 0 778 5
jcnd=774/778 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 778 778 0 1 0 0 1
+4 0 778 0 0 0 0 0 0 0 0 778 306
jcnd=306/778 0x3877c78bf0 0 
* 0 
+6 0 472 472
+6 0 472 0 0 1 0 0 1 0 0 472 44
jcnd=29/472 0x3877c78a78 0 
* 0 
+6 0 443 443
+5 0 443 443
+5 0 443 443
+4 0 443 0 0 0 0 0 0 0 0 443
+6 0 443 443
+4 0 443 0 0 0 0 0 0 0 0 443
+6 0 443 443
+9 0 443 0 443
+4 0 443 0 443
+4 0 443 0 0 0 0 0 0 0 0 443 4
jcnd=435/443 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 443
+3 0 443
+4 0 443 443
+4 0 443 443
+4 0 443 0 0 0 0 0 0 0 0 443
-12 0 29
+4 0 29 29
+4 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 472
+7 0 472 0 472
+4 0 472 0 472
+4 0 472 0 0 0 0 0 0 0 0 472 63
jcnd=403/472 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 403 0 403
+4 0 403
+3 0 403 0 403
+4 0 403
+4 0 403 0 403
+4 0 403 0 403
+4 0 403
+7 0 403 0 0 0 0 0 0 0 0 403
jcnd=403/403 0x3877c78b20 0 
* 0 
-7 0 306
+7 0 306 0 0 0 0 0 0 0 0 306
jcnd=306/306 0x3877c78b20 0 
* 0 
0x3877c78a40 0 778 0 0 1 0 0 1
+5 0 778 778
+4 0 778 778
+7 0 778 0 0 0 0 0 0 0 0 778
jcnd=778/778 +16 0 
* 0 
+16 0 778 0 778
+5 0 778 0 0 0 0 0 0 0 0 778
+6 0 778
+3 0 778
jump=778 0x3877c7878f 0 
* 0 
+10 0 29 0 29
+6 0 29 0 0 1 0 0 1
jump=29 0x3877c78885 0 
* 0 
0x3877c78b20 0 778 778 0 1 0 0 1
+4 0 778
+2 0 778 0 0 0 0 0 0 0 0 778
+6 0 778 778
+7 0 778 0 0 0 0 0 0 0 0 778
jcnd=778/778 +15 0 
* 0 
+15 0 778 0 778 1 0 0 1
+4 0 778 0 0 0 0 0 0 0 0 778 2
+6 0 778
+4 0 778 778
+1 0 778 778
+1 0 778 778
+2 0 778 778
+2 0 778 778
+2 0 778 778
+2 0 778 778
0x3877c78bf0 0 306 0 0 1 0 0 1
+3 0 306 0 306
+4 0 306
+3 0 306
+4 0 306 0 306 1 0 0 1
+4 0 306
jump=306 0x3877c788cf 0 
* 0 
0x3877c7907c 0 778 778 0 1 1 0 1 1
+4 0 778 0 0 1 0 0 1
+7 0 778
+4 0 778
+3 0 778
+3 0 778 0 0 0 0 0 0 0 0 778
jcnd=778/778 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 892 0 0 1 0 0 1
+7 0 892
+3 0 892
+3 0 892 892 0 0 1 0 0 1
+4 0 892
+4 0 892 0 0 0 0 0 0 0 0 0 0 892 110
jump=104 0x3877c89be8 0 
* 0 
jump=112 0x3877c89bd0 0 
* 0 
jump=112 0x3877c89bb8 0 
* 0 
jump=112 +11 0 
* 0 
jump=112 0x3877c89c48 0 
* 0 
jump=114 0x3877c89c30 0 
* 0 
jump=112 0x3877c89c18 0 
* 0 
jump=114 0x3877c89c00 0 
* 0 
+11 0 112 112
+3 0 112
+4 0 112
+4 0 112 112
+4 0 112
+4 0 112 0 112
+4 0 112
+9 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-40 0 6078 6078
+4 0 6078 0 6078 0 0 3 0 0 3
+4 0 6078 6078
+4 0 6078 0 6078
+4 0 6078 6078
+4 0 6078 0 6078 0 0 1 0 0 1
+4 0 6078 6078
+4 0 6078 0 6078
+4 0 6078
+4 0 6078
+4 0 6078 0 0 0 0 0 0 0 0 6078 418
jcnd=856/6078 0x3877c89c60 0 
* 0 
-32 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
jcnd=10/114 0x3877c89c60 0 
* 0 
-24 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-16 0 114 114 0 1 0 0 1
+4 0 114 0 114
+4 0 114 0 0 1 0 0 1
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114 4
jcnd=10/114 0x3877c89c60 0 
* 0 
+6 0 5638
+4 0 5638 5638
+3 0 5638 0 5638 0 0 1 0 0 1
+3 0 5638 5638
+4 0 5638 0 5638 0 0 3 0 0 3
+4 0 5638 5638
+4 0 5638 0 5638 0 0 4 0 0 4
+4 0 5638 5638
+4 0 5638 0 5638
+4 0 5638
jump=5638 -80 0 
* 0 
-30 0 104 104
+3 0 104 0 104
+3 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104
jump=104 -80 0 
* 0 
-24 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
-16 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
+8 0 112 112
+3 0 112
+4 0 112 0 0 1 0 0 1
+4 0 112
+4 0 112
jump=112 -39 0 
* 0 
+9 0 112
+3 0 112 0 0 0 0 0 0 0 0 112
+6 0 112 112
+3 0 112
+4 0 112
jump=112 -72 0 
* 0 
+8 0 104
+4 0 104 104
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104
+4 0 104
jump=104 -99 0 
* 0 
+11 0 114 114 0 1 0 0 1
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b78 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b70 0 
* 0 
+9 0 114 114
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b68 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b60 0 
* 0 
+9 0 892 0 892 1 0 0 1
+3 0 892 892

totals: 5031957 2015680 1188692 238 84 79 238 84 79 161256 3391 5402 110
