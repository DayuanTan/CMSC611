version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1524


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1977510264 - 1979939930
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2024 0 0 1 0 0 1
+3 0 2024 0 0 0 0 0 0 0 0 2024
+2 0 2024
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2024 0x3877c7b8b0 0 
* 0 227741 58207 29893 21 4 0 21 4 0 55925 917
* 0 2024 2024 0 1 1 0 1 1 0 0 0 2024

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2024 0 2024 1 0 0 1
+1 0 2024
+5 0 2024
+3 0 2024 0 2024
+1 0 2024
+4 0 2024 0 0 1 0 0 1
+3 0 2024
+4 0 2024
+3 0 2024 0 2024 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2024 0x3877c7aa50 0 
* 0 546469 80246 80545 49 38 64 49 38 64 90291 3069
* 0 2024 2024 0 1 1 0 1 1 0 0 0 2024
+5 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024
jcnd=2024/2024 +96 0 
* 0 
+96 0 2024 0 0 1 0 0 1
+4 0 2024 2024
+1 0 2024 2024
+1 0 2024 2024

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 502 0 502 1 0 0 1
+1 * 502
+3 * 502
+4 * 502 0 502
+4 * 502 0 502
+4 +1 502 502
+4 * 502
+3 * 502 0 502
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=502 0x402d74 645 
* * 6526 3012 1004
+5 * 502
+3 * 502 0 502
+3 +1 502 502
+6 * 502 0 502
+3 * 502 502
+6 * 502 0 502
+3 +1 502 502
+6 * 502 0 502 1 0 0 1
+3 * 502 502
+6 * 502 0 502
+3 +2 502 0 502
+7 * 502
jump=502 +86 * 
* * 
+2 +1 126755 126755
+3 * 126755
+3 * 126755 126755
+4 * 126755
+3 * 126755
+3 * 126755 0 126755
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=126755 0x402d9a 770 
* * 1394305 633775 380265
+5 * 126755 126755
+4 * 126755 126755
+5 * 126755
+4 * 126755 0 126755
+5 +1 126755 126755
+3 * 126755
+3 * 126755 126755
+4 * 126755
+3 * 126755
+3 * 126755 0 126755
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=126755 0x402dba 770 
* * 1394305 633775 380265 1 0 0 1
+5 * 126755 126755
+2 * 126755
+4 * 126755 126755
+5 * 126755
+4 * 126755 0 126755
+5 -2 126755 0 126755
+4 * 126755 126755
+3 * 126755
+3 * 126755 126755
+3 * 126755 0 0 0 0 0 0 0 0 126755 503
jcnd=126253/126755 -93 +1 
* * 
-9 * 502 502 0 1 0 0 1
+3 * 502
+3 * 502 502
+3 * 502 0 0 0 0 0 0 0 0 502
jcnd=502/502 -93 +1 
* * 
+2 +4 502 502
+3 * 502
+3 * 502
+4 * 502 502 0 1 0 0 1
+5 * 502
+4 * 502
+3 * 502 0 502
+5 +1 502 502
+3 * 502
+3 * 502
+4 * 502 502
+5 * 502
+4 * 502
+3 * 502 0 502
+5 +1 502 0 502
+7 * 502
jump=502 0x4016ee * 
* * 
+2 +1 126755 126755
+3 * 126755
+3 * 126755 126755
+4 * 126755
+3 * 126755 0 0 1 0 0 1
+3 * 126755 0 126755
cfi=(2)
cfn=(146)
calls=126755 0x402dba 770 
* * 1394305 633775 380265
+5 * 126755 126755
+2 * 126755
+4 * 126755 126755
+5 * 126755 0 126755
+5 +1 126755 126755
+3 * 126755
+3 * 126755 126755
+4 * 126755
+3 * 126755
+3 * 126755 0 126755
cfi=(2)
cfn=(144)
calls=126755 0x402d9a 770 
* * 1394305 633775 380265
+5 * 126755 126755
+4 * 126755 126755
+5 * 126755 0 126755
+5 +1 126755 126755
+5 * 126755 126755
+5 * 126755 126755
+5 * 126755
+4 * 126755 0 126755
+5 +1 126755 126755
+5 * 126755 126755
+5 * 126755 126755
+5 * 126755
+4 * 126755 0 126755
+5 -4 126755 0 126755
+4 * 126755 126755
+3 * 126755
+3 * 126755 126755
+3 * 126755 0 0 0 0 0 0 0 0 126755 503
jcnd=126253/126755 0x401672 +1 
* * 
-9 * 502 502 0 1 0 0 1
+3 * 502
+3 * 502 502
+3 * 502 0 0 0 0 0 0 0 0 502
jcnd=502/502 0x401672 +1 
* * 
+6 +6 502 502 0 1 0 0 1
+5 * 502 502
+5 * 502 0 502
+5 +2 502 502
+3 +1 502 0 502
+3 * 502 502
+5 * 502 502
+1 * 502 502

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 502
+7 * 502
+7 * 502
+3 * 502
+3 * 502 0 502
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=502 0x4030b2 310 
* * 589131 178013 168280 68 16 16 68 16 16 36346 1518 2006 250
+5 * 502
+7 * 502
+7 * 502
+3 * 502
+3 * 502 0 502
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=502 0x402ff4 310 
* * 586970 175990 164899 48 8 114 48 8 114 35856 1821 2006
+5 * 502 0 0 1 0 0 1
+7 * 502
+7 * 502
+3 * 502
+3 * 502 0 502
cfn=(142)
calls=502 0x401585 -52 
* * 13215150 5843280 3050654 8 0 0 8 0 0 254514 1006
+5 * 502 0 502
+8 * 502 502
+6 * 502 0 502
+6 * 502
+7 * 502
+3 * 502 0 502
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=502 0x402df4 414 
* * 124828 39128 27717 33 5 0 33 5 0 13810 422 1004
+5 * 502
+7 * 502
+3 * 502 0 502 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=502 0x402e74 414 
* * 132784 41976 30289 7 1 0 7 1 0 15970 36 1004
+5 +2 502
+7 * 502
+7 * 502
+3 * 502
+3 * 502 0 502
cfi=(2)
cfn=(4)
calls=502 0x4030b2 310 
* * 588699 177978 168160 2 1 1 2 1 1 36301 949 2006
+5 * 502
+7 * 502
+7 * 502
+3 * 502
+3 * 502 0 502
cfi=(2)
cfn=(80)
calls=502 0x402ff4 310 
* * 585958 175921 164731 0 0 2 0 0 2 35698 1222 2006
+5 * 502 502
+6 * 502 0 0 1 0 0 1
+7 * 502
+7 * 502 0 502
+6 * 502 502
+8 * 502
+3 * 502
+3 * 502 0 502
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=502 0x401719 -33 
* * 6113858 2546144 1401835 4 0 0 4 0 0 127257 503
+5 * 502 0 502
+8 * 502 502
+6 * 502 0 502
+6 * 502
+7 * 502 0 0 1 0 0 1
+3 * 502 0 502
cfi=(2)
cfn=(148)
calls=502 0x402df4 414 
* * 124828 39128 27717 0 0 0 0 0 0 13810 414 1004
+5 * 502
+7 * 502
+3 * 502 0 502
cfi=(2)
cfn=(178)
calls=502 0x402e74 414 
* * 132784 41976 30289 0 0 0 0 0 0 15970 28 1004
+5 +2 502 502
+7 * 502
+3 * 502 0 502
cfi=(2)
cfn=(2)
calls=502 0x402d74 645 
* * 6526 3012 1004
+5 * 502 502
+6 * 502
+3 * 502
+3 * 502
+3 * 502 502
+7 * 502
+3 * 502 0 0 1 0 0 1
+3 * 502 0 502
cfi=(2)
cfn=(144)
calls=502 0x402d9a 770 
* * 5522 2510 1506
+5 * 502
+3 * 502
+7 * 502
+3 * 502
+3 * 502 0 502
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=502 0x402eda 901 
* * 44586 16895 12867 38 37 11 38 37 11 1845 76 47
+5 +1 502 502
+7 * 502
+3 * 502 0 502
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=502 0x402f54 645 
* * 6526 3012 1004 0 1 0 0 1
+5 * 502 502
+6 * 502
+3 * 502
+3 * 502
+3 * 502 502
+7 * 502 0 0 1 0 0 1
+3 * 502
+3 * 502 0 502
cfi=(2)
cfn=(146)
calls=502 0x402dba 770 
* * 5522 2510 1506
+5 * 502
+3 * 502
+7 * 502
+3 * 502
+3 * 502 0 502
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=502 0x402f7a 901 
* * 44622 16728 12743 19 47 48 19 47 48 1882 84 47
+5 +1 502 502
+7 * 502
+3 * 502 0 502
cfi=(2)
cfn=(10)
calls=502 0x402f54 645 
* * 6526 3012 1004
+5 * 502 502
+6 * 502
+3 * 502
+3 * 502
+3 * 502 502 0 1 0 0 1
+7 * 502
+3 * 502
+3 * 502 0 502
cfi=(2)
cfn=(146)
calls=502 0x402dba 770 
* * 5522 2510 1506
+5 * 502 502
+2 * 502
+4 * 502 502
+8 * 502 502
+8 * 502 0 502
+8 +1 502 502
+7 * 502
+3 * 502 0 502
cfi=(2)
cfn=(2)
calls=502 0x402d74 645 
* * 6526 3012 1004
+5 * 502 502 0 1 0 0 1
+6 * 502
+3 * 502
+3 * 502
+3 * 502 502
+7 * 502
+3 * 502
+3 * 502 0 502
cfi=(2)
cfn=(144)
calls=502 0x402d9a 770 
* * 5522 2510 1506
+5 * 502 502
+4 * 502 502
+8 * 502
+4 * 502 502
+8 * 502
+3 * 502 0 502
+8 +2 502 0 502
+7 -12 502 502
+8 * 502 502
+7 * 502 0 0 0 0 0 0 0 0 502 1
jcnd=1/502 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 502
+7 * 502
+3 * 502 0 502
cfi=(2)
cfn=(2)
calls=502 0x402d74 645 
* * 6526 3012 1004 2 0 1 2 0 1
+5 * 502
+3 * 502 502
+7 * 502
+3 * 502 0 502
cfi=(2)
cfn=(2)
calls=502 0x402d74 645 
* * 6526 3012 1004 0 1 0 0 1
+5 * 502
+3 * 502 0 0 0 0 0 0 0 0 502 2
+2 * 502 0 0 1 0 0 1
+5 * 502
jump=502 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 502
+2 * 502 0 0 0 0 0 0 0 0 502
jcnd=502/502 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 502 0 502
+1 * 502
+3 * 502
+4 * 502 0 502
+4 * 502 0 502
+4 * 502 0 502
+5 +1 502 502
+4 * 502
+3 * 502 0 502
cfi=(2)
cfn=(2)
calls=502 0x402d74 645 
* * 6526 3012 1004
+5 * 502
+3 * 502 0 502
+3 +1 502 502 0 1 0 0 1
+6 * 502 0 502
+3 * 502 502
+6 * 502 0 502
+3 +2 502 0 502
+7 * 502
jump=502 +86 * 
* * 
+2 +1 126755 126755
+3 * 126755
+3 * 126755 126755
+4 * 126755
+3 * 126755
+3 * 126755 0 126755
cfi=(2)
cfn=(144)
calls=126755 0x402d9a 770 
* * 1394305 633775 380265
+5 * 126755 126755
+4 * 126755 126755
+5 * 126755
+4 * 126755 0 126755
+5 +1 126755 126755
+3 * 126755
+3 * 126755 126755
+4 * 126755
+3 * 126755
+3 * 126755 0 126755
cfi=(2)
cfn=(146)
calls=126755 0x402dba 770 
* * 1394305 633775 380265
+5 * 126755 126755
+2 * 126755
+4 * 126755 126755
+5 * 126755
+4 * 126755 0 126755
+5 -2 126755 0 126755
+4 * 126755 126755
+3 * 126755
+3 * 126755 126755
+3 * 126755 0 0 0 0 0 0 0 0 126755 503
jcnd=126253/126755 -93 +1 
* * 
-9 * 502 502 0 1 0 0 1
+3 * 502
+3 * 502 502
+3 * 502 0 0 0 0 0 0 0 0 502
jcnd=502/502 -93 +1 
* * 
+2 +4 502 502
+3 * 502
+3 * 502 0 0 1 0 0 1
+4 * 502 502
+5 * 502
+4 * 502
+3 * 502 0 502
+5 +1 502 502
+3 * 502
+3 * 502
+4 * 502 502
+5 * 502
+4 * 502
+3 * 502 0 502
+5 +1 502 502
+5 * 502 502
+5 * 502 502
+5 * 502 0 0 1 0 0 1
+4 * 502
+3 * 502 0 502
+5 +2 502 502
+3 +1 502 0 502
+3 * 502 502
+5 * 502 502
+1 * 502 502

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1004 0x404a28 -35 
* * 6024 2008 3012 1 0 1 1 0 1
+5 * 1004 1004
+1 * 1004 1004

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1004 0x4044cc -35 
* * 5020 2008 2008
+5 * 1004 1004
+1 * 1004 1004

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004 1 0 0 1
+4 +1 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1004 0x4049d4 -35 
* * 6024 2008 3012 1 0 0 1
+5 * 1004 1004
+1 * 1004 1004

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1004 0x404520 -35 
* * 5020 2008 2008
+5 * 1004 1004
+1 * 1004 1004

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 502 0 502
+1 * 502
+3 * 502
+4 * 502 0 502
+4 * 502 0 502
+4 * 502 0 502
+4 +1 502 502
+4 * 502 502
+4 * 502 502
+4 * 502
+3 * 502
+3 * 502 0 502
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=502 0x403df2 -87 
* * 12048 4016 4518 0 33 3 0 33 3 502 2
+5 * 502 502
+1 * 502 502

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004 0 1004
+4 * 1004 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 502 0 502
+1 * 502
+3 * 502
+4 * 502 0 502
+4 * 502 0 502
+4 * 502 0 502
+4 +1 502 502
+4 * 502 502
+4 * 502 502
+4 * 502
+3 * 502
+3 * 502 0 502
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=502 0x40406a -87 
* * 12048 4016 4518 0 31 23 0 31 23 502
+5 * 502 502
+1 * 502 502

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+4 * 1004 1004
+4 * 1004 1004
+1 * 1004 1004

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1084 0 1084
+1 * 1084
+3 * 1084 0 1084 0 0 1 0 0 1
+4 +1 1084 1084
+4 * 1084 1084
+1 * 1084 1084

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2008 0 2008 1 0 0 1
+1 * 2008
+3 * 2008
+4 * 2008 0 2008
+4 +1 2008
+4 * 2008
+3 * 2008 0 2008
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2008 0x404ffe 790 
* * 12048 6024 4016 1 0 0 1
+5 * 2008 2008
+3 * 2008 2008
+1 * 2008 2008

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2008 0 2008 1 0 0 1
+1 * 2008
+3 * 2008 0 2008
+4 +1 2008 2008
+4 * 2008 2008
+1 * 2008 2008

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2008 0 2008 1 0 0 1
+1 * 2008
+3 * 2008
+4 * 2008 0 2008
+4 +1 2008
+4 * 2008
+3 * 2008 0 2008 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2008 0x40500c 790 
* * 12048 6024 4016 1 0 0 1
+5 * 2008 2008
+3 * 2008 2008
+1 * 2008 2008

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1084 0 1084
+1 * 1084
+3 * 1084 0 1084
+4 +1 1084 1084
+4 * 1084 1084
+1 * 1084 1084

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2008 0 2008 1 0 0 1
+1 * 2008
+3 * 2008 0 2008
+4 +1 2008 2008 0 1 0 0 1
+4 * 2008 2008
+1 * 2008 2008

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 1004
+4 * 1004 1004
+1 * 1004 1004

fl=(5)
fn=(28)
0x404992 113 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028 0 1028
+4 +1 1028
+10 * 1028 1028
+1 * 1028 1028

fn=(176)
0x4044cc 86 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(224)
0x403df2 129 502 0 502
+1 * 502
+3 * 502
+4 * 502 0 502
+4 * 502 0 502
+4 * 502 0 502
+4 +1 502 502
+4 * 502
+3 * 502
+5 * 502 0 502
cfi=(16)
cfn=(226)
calls=502 0x402d61 -20 
* * 3514 1506 1506
+5 * 502
+3 * 502 0 0 0 0 0 0 0 0 502 2
+2 * 502 502
+4 * 502 502 0 0 33 0 0 33
+2 * 502 0 502 0 0 3 0 0 3
+2 * 502 502
+1 * 502 502

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1012 0 1012
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 +1 1012 1012
+4 * 1012
+3 * 1012 0 1012
cob=(5)
cfi=(8)
cfn=(164)
calls=1012 0x387e4bb2f0 0 
* * 109946 27259 12373 23 4 0 23 4 0 26810 843 1012
* * 1012 1012 0 1 1 0 1 1 0 0 0 1012
+5 * 1012 1012
+1 * 1012 1012

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1012 0 1012
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 +1 1012 1012
+4 * 1012
+3 * 1012 0 1012
cob=(5)
cfi=(8)
cfn=(164)
calls=1012 0x387e4bb2f0 0 
* * 125891 32972 17520 0 1 0 0 1 0 31139 74 1012
* * 1012 1012 0 0 0 0 0 0 0 0 0 1012
+5 * 1012 1012
+1 * 1012 1012

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1012 0 1012 1 0 0 1
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 +2 1012 1012
+4 * 1012
+3 * 1012 0 1012
cfn=(102)
calls=1012 0x4048de +12 
* * 6072 2024 2024 1 0 0 1
+5 * 1012 1012
+4 * 1012 0 0 1 0 0 1
+3 * 1012
+2 * 1012 0 0 0 0 0 0 0 0 1012
jcnd=1012/1012 +7 +3 
* * 
+7 +3 1012 1012
+4 * 1012
+4 * 1012
+3 * 1012 0 1012
cob=(5)
cfi=(8)
cfn=(32)
calls=1012 0x387e4bd0b0 0 
* * 286974 42223 39967 33 11 50 33 11 50 45597 1826 1012
* * 1012 1012 0 0 0 0 0 0 0 0 0 1012
+5 +1 1012 1012
+1 * 1012 1012

fn=(18)
0x404a28 81 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004 0 1004 0 0 1 0 0 1
+4 * 1004 0 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(92)
0x4049d4 81 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(196)
0x404520 86 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1012 0 1012 1 0 0 1
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 * 1012 0 1012 1 0 0 1
+4 +2 1012 1012
+4 * 1012
+3 * 1012 0 1012
cfn=(28)
calls=1012 0x404992 +12 
* * 6072 2024 2024 1 0 0 1
+5 * 1012 1012
+4 * 1012
+3 * 1012
+2 * 1012 0 0 0 0 0 0 0 0 1012
jcnd=1012/1012 +7 +3 
* * 
+7 +3 1012 1012
+4 * 1012
+4 * 1012
+3 * 1012 0 1012
cob=(5)
cfi=(8)
cfn=(32)
calls=1012 0x387e4bd0b0 0 
* * 291879 46119 46650 20 28 15 20 28 15 46718 1243 1012
* * 1012 1012 0 1 1 0 1 1 0 0 0 1012
+5 +1 1012 1012
+1 * 1012 1012

fn=(102)
0x4048de 113 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028 0 1028
+4 +1 1028
+10 * 1028 1028
+1 * 1028 1028

fn=(266)
0x40406a 129 502 0 502
+1 * 502
+3 * 502
+4 * 502 0 502
+4 * 502 0 502
+4 * 502 0 502
+4 +1 502 502
+4 * 502
+3 * 502
+5 * 502 0 502
cfi=(16)
cfn=(226)
calls=502 0x402d61 -20 
* * 3514 1506 1506
+5 * 502
+3 * 502 0 0 0 0 0 0 0 0 502
+2 * 502 502
+4 * 502 502 0 0 31 0 0 31
+2 * 502 0 502 0 0 23 0 0 23
+2 * 502 502
+1 * 502 502

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +2 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1004 0x404484 107 
* * 616716 210860 204840 25 3 4 25 3 4 24432 1286 2004 250
+5 * 1004 1004
+1 * 1004 1004

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +2 1004 1004 0 1 0 0 1
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1004 0x404a36 450 
* * 588604 200820 194800 24 3 4 24 3 4 24432 1286 2004 250
+5 * 1004 1004
+1 * 1004 1004

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +2 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1004 0x40439c 107 
* * 616716 210860 204840 7 1 71 7 1 71 24432 1270 2004
+5 * 1004 1004
+1 * 1004 1004

fn=(116)
0x40439c 107 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +10 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1004 0x4047d7 -26 
* * 602660 205840 199820 7 1 71 7 1 71 24432 1270 2004
+5 +1 1004 1004
+1 * 1004 1004

fn=(118)
0x4047d7 91 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +2 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1004 0x4049e2 450 
* * 588604 200820 194800 7 1 71 7 1 71 24432 1270 2004
+5 * 1004 1004
+1 * 1004 1004

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +10 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(52)
calls=1004 0x404829 -26 
* * 602660 205840 199820 25 3 4 25 3 4 24432 1286 2004 250
+5 +1 1004 1004
+1 * 1004 1004

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1012 0 1012 1 0 0 1
+1 * 1012 0 0 1 0 0 1
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 0 1012 1012
+5 0 1012 0 0 0 0 0 0 0 0 1012
+2 0 1012 1012
+4 0 1012 1012
+4 0 1012
+5 0 1012
+3 0 1012
+3 0 1012 0 1012
fi=(6) ???
cfi=(5)
cfn=(100)
calls=1012 0x40461a 99 
* 0 313286 50319 48063 36 11 50 36 11 50 46609 1826 2024
+5 0 1012
fi=(6)
jump=1012 +7 0 
* 0 
+7 0 1012 1012
+1 0 1012 1012

fn=(144)
0x402d9a 770 381269 0 381269
+1 * 381269
+3 * 381269 0 381269
+4 * 381269 0 381269
+4 +1 381269 381269
+4 * 381269 381269
+3 * 381269 381269
+4 * 381269
+4 * 381269
+3 * 381269 381269
+1 * 381269 381269

fn=(146)
0x402dba 770 381269 0 381269
+1 * 381269
+3 * 381269 0 381269 1 0 0 1
+4 * 381269 0 381269
+4 +1 381269 381269
+4 * 381269 381269
+3 * 381269 381269
+4 * 381269
+4 * 381269
+3 * 381269 381269
+1 * 381269 381269

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfi=(4)
cfn=(194)
calls=1004 0x403d7e +42 
* * 14056 5020 5020 1 0 0 1
+5 * 1004 1004
+1 * 1004 1004

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004
+4 +2 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004 1004
+4 * 1004 1004
+3 * 1004
+3 * 1004
+3 * 1004
+4 * 1004
+3 * 1004 1004
+4 * 1004 1004
+3 -1 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1004 0x403d98 +11 
* * 153120 42788 27446 1 1 0 1 1 0 31940 64 2008
+5 +1 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(192)
calls=1004 0x403296 -82 
* * 23092 8032 8032 1 0 0 1
+5 * 1004
jump=1004 +28 * 
* * 
+28 * 1004
+4 * 1004 1004
+1 * 1004 1004
+1 * 1004 1004

fn=(2)
0x402d74 645 4048 0 4048 1 0 0 1
+1 * 4048
+3 * 4048 0 4048 0 0 1 0 0 1
+4 +1 4048 4048
+4 * 4048 4048 0 1 1 0 1 1
+4 * 4048
+3 * 4048 4048
+4 * 4048 4048
+3 * 4048
+3 * 4048
+3 * 4048
+4 * 4048 4048
+1 * 4048 4048

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +2 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1004 0x404236 -14 
* * 331198 58787 58308 26 13 8 26 13 8 48215 1181 2008
+5 * 1004 1004
+4 * 1004 0 1004
+3 +1 1004 1004
+4 * 1004 1004 0 1 0 0 1
+3 * 1004 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+3 * 1004 1004
+4 * 1004
+4 * 1004
+3 * 1004 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+1 * 1004 1004

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +2 1004 1004
+4 * 1004 1004 0 1 0 0 1
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(96)
calls=1004 0x403fbe -14 
* * 326296 54707 51498 26 7 45 26 7 45 47122 1773 2008
+5 * 1004 1004
+4 * 1004 0 1004
+3 +1 1004 1004
+4 * 1004 1004
+3 * 1004 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+3 * 1004 1004
+4 * 1004
+4 * 1004
+3 * 1004 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+1 * 1004 1004

fn=(244)
0x402f7a 901 502 0 502
+1 * 502
+3 * 502 0 0 1 0 0 1
+4 * 502 0 502
+4 * 502 0 502
+4 +2 502 502
+4 * 502 502
+4 * 502 502
+4 * 502 502
+4 * 502
+3 * 502 0 0 0 0 0 0 0 0 502
jcnd=8/502 +51 +10 
* * 
+2 +3 494 494
+4 * 494 494
+4 * 494 494
+4 -1 494 494
+4 * 494
+3 * 494
+3 * 494 0 494
cfi=(3)
cfn=(264)
calls=494 0x4036b1 215 
* * 18772 6422 6916 0 31 19 0 31 19 494
+5 +2 494 494
+4 * 494 494
+4 * 494
+4 * 494 494
+4 * 494 0 494
+4 * 494
jump=494 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12646 3740 3261 18 16 29 18 16 29 886 84 47
+5 +2 502 502
+1 * 502 502

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 2032 0 2032 1 0 0 1
+1 * 2032
+3 * 2032 0 2032 1 0 0 1
+4 +1 2032 2032
+4 * 2032 2032
+1 * 2032 2032

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+3 * 1004 0 1004
+4 * 1004
+4 * 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1004 0x404380 726 
* * 10040 5020 4016
+5 * 1004 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(148)
0x402df4 414 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004 1 0 0 1
+4 +2 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1004 0x40325e 113 
* * 6024 3012 2008
+5 * 1004
+3 * 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+3 -1 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1004 0x40326c 148 
* * 31124 10040 12048 4 0 0 4
+5 +1 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1004 0x4031ec 159 
* * 188412 56168 35354 27 5 0 27 5 0 27620 836 2008
+5 * 1004
jump=1004 +28 * 
* * 
+28 * 1004 0 0 1 0 0 1
+4 * 1004 1004
+1 * 1004 1004
+1 * 1004 1004

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1012 0 1012 1 0 0 1
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 +2 1012 1012
+5 * 1012 0 0 0 0 0 0 0 0 1012
+2 +1 1012 1012
+4 * 1012 1012
+4 * 1012 1012
+4 * 1012
+3 * 1012
+3 * 1012 0 1012
cfi=(5)
cfn=(160)
calls=1012 0x4044d6 -65 
* * 122090 31307 17433 24 5 0 24 5 0 26810 843 2024
+5 +1 1012 1012
+1 * 1012 1012

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1004 0x4043ca -45 
* * 36144 13052 14056 4 0 4 4 0 4
+5 +1 1004 1004 0 1 0 0 1
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(20)
calls=1004 0x404412 +43 
* * 356298 70835 65336 27 13 8 27 13 8 48215 1181 2008
+5 * 1004
jump=1004 +28 * 
* * 
+28 * 1004
+4 * 1004 1004
+1 * 1004 1004
+1 * 1004 1004

fn=(14)
0x4043ca 90 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004 0 0 1 0 0 1
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(4)
cfn=(16)
calls=1004 0x404804 +24 
* * 18072 6024 7028 2 0 1 2 0 1
+5 * 1004 1004
+4 * 1004 0 1004 0 0 2 0 0 2
+7 * 1004 1004
+4 * 1004 0 1004 1 0 0 1
+8 * 1004 1004
+4 * 1004 0 1004
+8 +1 1004 1004
+1 * 1004 1004

fn=(80)
0x402ff4 310 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004 0 1004
+2 * 1004 0 1004
+2 * 1004 0 1004
+1 * 1004 0 0 1 0 0 1
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +2 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=1004 0x4039fc 117 
* * 6024 3012 2008 2 0 0 2
+5 * 1004
+3 * 1004 0 1004
cfi=(3)
cfn=(84)
calls=1004 0x4039ed -88 
* * 6024 3012 2008
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(2)
calls=1004 0x402d74 645 
* * 13052 6024 2008
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004
+3 * 1004 0 1004 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1004 0x403a0a 134 
* * 409628 86835 79610 33 7 45 33 7 45 47122 1773 2008
+5 +4 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(106)
calls=1004 0x40325e 113 
* * 6024 3012 2008 1 0 0 1
+5 * 1004
+3 * 1004 1004
+4 * 1004 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=1004 0x403a98 565 
* * 25100 10040 8032 2 0 0 2
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(112)
calls=1004 0x403a68 547 
* * 25100 10040 8032
+5 * 1004
+3 * 1004
+3 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(11)
cfn=(114)
calls=1004 0x403ac9 -60 
* * 631776 215880 210864 7 1 71 7 1 71 24432 1270 2004
+5 -3 1004 1004
+4 * 1004 0 1004
+4 * 1004
jump=1004 +28 +4 
* * 
+28 +4 1004
+4 * 1004 1004
+1 * 1004 1004
+2 * 1004 1004
+2 * 1004 1004
+1 * 1004 1004

fn=(188)
0x403d98 171 1012 0 1012 1 0 0 1
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 +2 1012 1012
+5 * 1012 0 0 0 0 0 0 0 0 1012 8
+2 +1 1012 1012
+4 * 1012 1012
+4 * 1012 1012
+4 * 1012
+3 * 1012
+3 * 1012 0 1012
cfi=(5)
cfn=(190)
calls=1012 0x40452a -65 
* * 138035 37020 22580 0 1 0 0 1 0 31139 74 2024
+5 +1 1012 1012
+1 * 1012 1012

fn=(22)
0x404236 167 1012 0 1012 1 0 0 1
+1 * 1012
+3 * 1012
+4 * 1012 0 1012 1 0 0 1
+4 * 1012 0 1012
+4 0 1012 1012
+5 0 1012 0 0 0 0 0 0 0 0 1012
+2 0 1012 1012
+4 0 1012 1012
+4 0 1012
+5 0 1012
+3 0 1012
+3 0 1012 0 1012
fi=(6)
cfi=(5)
cfn=(26)
calls=1012 0x404730 99 
* 0 318191 54215 54746 24 29 15 24 29 15 47730 1243 2024
+5 0 1012
fi=(6)
jump=1012 +7 0 
* 0 
+7 0 1012 1012
+1 0 1012 1012

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+4 * 1004 0 1004
+4 * 1004
+4 * 1004 0 0 1 0 0 1
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1004 0x404468 726 
* * 10040 5020 4016 1 0 0 1
+5 * 1004 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+3 * 1004 0 1004
+4 * 1004
+4 * 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(10)
cfn=(44)
calls=1004 0x404468 726 
* * 10040 5020 4016
+5 * 1004 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(86)
0x403a0a 134 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1004 0x4042e2 -45 
* * 36144 13052 14056 5 0 0 5
+5 +1 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004 1 0 0 1
cfn=(94)
calls=1004 0x40432a +43 
* * 351396 66755 58526 27 7 45 27 7 45 47122 1773 2008
+5 * 1004
jump=1004 +28 * 
* * 
+28 * 1004
+4 * 1004 1004
+1 * 1004 1004
+1 * 1004 1004

fn=(88)
0x4042e2 90 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004 1 0 0 1
cfi=(4)
cfn=(90)
calls=1004 0x4047b2 +24 
* * 18072 6024 7028 3 0 0 3
+5 * 1004 1004
+4 * 1004 0 1004
+7 * 1004 1004
+4 * 1004 0 1004
+8 * 1004 1004
+4 * 1004 0 1004
+8 +1 1004 1004
+1 * 1004 1004

fn=(156)
0x4031ec 159 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004
+4 +2 1004 1004
+4 * 1004 1004 0 1 0 0 1
+4 * 1004
+3 * 1004 1004
+4 * 1004 1004
+3 * 1004
+3 * 1004
+3 * 1004
+4 * 1004
+3 * 1004 1004
+4 * 1004 1004
+3 -1 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(158)
calls=1004 0x403ce6 +11 
* * 137208 37092 22302 24 5 0 24 5 0 27620 836 2008
+5 +1 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1004 0x4031b8 -82 
* * 23092 8032 8032 1 0 0 1
+5 * 1004
jump=1004 +28 * 
* * 
+28 * 1004
+4 * 1004 1004
+1 * 1004 1004
+1 * 1004 1004

fn=(172)
0x4031b8 79 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfi=(4)
cfn=(174)
calls=1004 0x403ccc +42 
* * 14056 5020 5020
+5 * 1004 1004
+1 * 1004 1004

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040 0 2040
+4 +1 2040 2040
+4 * 2040 2040 0 0 2 0 0 2
+4 * 2040
+3 * 2040 2040
+4 * 2040 2040
+3 * 2040
+3 * 2040
+3 * 2040
+4 * 2040 2040
+1 * 2040 2040

fn=(106)
0x40325e 113 2032 0 2032 1 0 0 1
+1 * 2032
+3 * 2032 0 2032
+4 +1 2032 2032
+4 * 2032 2032
+1 * 2032 2032

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020 0 1020 0 0 1 0 0 1
+4 +1 1020 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(82)
0x4039fc 117 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020 0 1020 1 0 0 1
+4 +1 1020 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(200)
0x402eda 901 502 0 502
+1 * 502
+3 * 502
+4 * 502 0 502
+4 * 502 0 502
+4 +2 502 502
+4 * 502 502
+4 * 502 502
+4 * 502 502
+4 * 502
+3 * 502 0 0 0 0 0 0 0 0 502 8
jcnd=8/502 +51 +10 
* * 
+2 +3 494 494
+4 * 494 494
+4 * 494 494
+4 -1 494 494
+4 * 494
+3 * 494
+3 * 494 0 494
cfi=(3)
cfn=(222)
calls=494 0x403373 215 
* * 18772 6422 6916 0 32 2 0 32 2 494 2
+5 +2 494 494
+4 * 494 494
+4 * 494
+4 * 494 494
+4 * 494 0 494
+4 * 494
jump=494 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12610 3907 3385 35 5 9 35 5 9 849 66 47
+5 +2 502 502
+1 * 502 502

fn=(4)
0x4030b2 310 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004 0 1004
+2 * 1004 0 1004
+2 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004 1 0 0 1
+4 * 1004 0 1004
+4 +2 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(6)
calls=1004 0x403b08 117 
* * 6024 3012 2008 1 0 1 1 0 1
+5 * 1004
+3 * 1004 0 1004
cfi=(3)
cfn=(8)
calls=1004 0x403afa -88 
* * 6024 3012 2008 1 0 0 1
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(10)
calls=1004 0x402f54 645 
* * 13052 6024 2008 1 1 0 1 1
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(12)
calls=1004 0x403b16 134 
* * 414530 90915 86420 32 13 12 32 13 12 48215 1181 2008
+5 +4 1004 1004 0 1 0 0 1
+4 * 1004
+3 * 1004 0 1004
cfn=(40)
calls=1004 0x40333c 113 
* * 6024 3012 2008 2 0 0 2
+5 * 1004
+3 * 1004 1004
+4 * 1004 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(42)
calls=1004 0x403ba4 565 
* * 25100 10040 8032 3 0 0 3
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(46)
calls=1004 0x403b74 547 
* * 25100 10040 8032
+5 * 1004
+3 * 1004
+3 * 1004
+3 * 1004
+3 * 1004 0 1004 1 0 0 1
cfi=(11)
cfn=(48)
calls=1004 0x403bd5 -60 
* * 631776 215880 210864 26 3 4 26 3 4 24432 1286 2004 250
+5 -3 1004 1004
+4 * 1004 0 1004
+4 * 1004
jump=1004 +28 +4 
* * 
+28 +4 1004
+4 * 1004 1004
+1 * 1004 1004
+2 * 1004 1004
+2 * 1004 1004
+1 * 1004 1004

fn=(108)
0x403a98 565 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004
+4 * 1004 0 1004
+4 * 1004
+4 * 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(10)
cfn=(110)
calls=1004 0x404380 726 
* * 10040 5020 4016 1 0 0 1
+5 * 1004 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(178)
0x402e74 414 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004 1 0 0 1
+4 +2 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(40)
calls=1004 0x40333c 113 
* * 6024 3012 2008
+5 * 1004
+3 * 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+3 -1 1004
+3 * 1004
+3 * 1004 0 1004
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1004 0x40334a 148 
* * 31124 10040 12048 2 0 0 2
+5 +1 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(186)
calls=1004 0x4032ca 159 
* * 204324 61864 40498 3 1 0 3 1 0 31940 64 2008
+5 * 1004
jump=1004 +28 * 
* * 
+28 * 1004 0 0 1 0 0 1
+4 * 1004 1004
+1 * 1004 1004
+1 * 1004 1004

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004 1 0 0 1
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +8 1004 0 1004
+4 +3 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=1004 0x404f37 -22 
* * 427964 146604 139580 14 3 3 14 3 3 24432 1286 2004 250
+5 +1 1004 1004
+1 * 1004 1004

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+2 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +4 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=1004 0x404878 277 
* * 15060 6024 5020 1 0 0 1
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1004 0x404d44 277 
* * 25100 9036 8032 2 0 0 2
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(132)
calls=1004 0x404d44 277 
* * 25100 9036 8032
+5 * 1004
+3 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=1004 0x404d5e -49 
* * 443024 151624 145604 1 1 71 1 1 71 24432 1270 2004
+5 +1 1004
+4 * 1004 1004
+1 * 1004 1004
+2 * 1004 1004
+1 * 1004 1004

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004 1 0 0 1
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +10 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1004 0x404c38 288 
* * 15060 6024 5020 3 0 0 3
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(56)
calls=1004 0x404c38 288 
* * 15060 6024 5020
+5 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1004 0x404c52 -36 
* * 536396 182748 176728 20 3 4 20 3 4 24432 1286 2004 250
+5 +1 1004
+4 * 1004 1004
+1 * 1004 1004
+1 * 1004 1004

fn=(60)
0x404c52 424 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+2 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +4 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1004 0x40492d 277 
* * 15060 6024 5020 2 0 0 2
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1004 0x404d9d 277 
* * 25100 9036 8032 2 0 1 2 0 1
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(66)
calls=1004 0x404d9d 277 
* * 25100 9036 8032
+5 * 1004
+3 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(72)
calls=1004 0x404db7 -49 
* * 443024 151624 145604 15 3 3 15 3 3 24432 1286 2004 250
+5 +1 1004
+4 * 1004 1004
+1 * 1004 1004
+2 * 1004 1004
+1 * 1004 1004

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 1052 0 1052 1 0 0 1
+1 * 1052
+3 * 1052
+4 * 1052 0 1052
+4 +1 1052 1052
+4 * 1052
+3 * 1052 0 1052 1 0 0 1
cfi=(13)
cfn=(64)
calls=1052 -33 -66 
* * 6312 3156 2104
+5 * 1052 1052
+1 * 1052 1052

fn=(66)
0x404d9d 277 2008 0 2008
+1 * 2008
+3 * 2008
+4 * 2008 0 2008
+4 +1 2008 2008
+4 * 2008
+3 * 2008 0 2008
cfi=(13)
cfn=(68)
calls=2008 0x404f1a -58 
* * 32128 12048 10040 2 0 1 2 0 1
+5 * 2008 2008
+1 * 2008 2008

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 1004 0 1004
+1 * 1004
+3 * 1004 0 1004
+1 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +10 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1004 0x404bc6 288 
* * 15060 6024 5020 3 0 0 3
+5 * 1004
+3 * 1004 1004
+4 * 1004
+3 * 1004 0 1004
cfn=(122)
calls=1004 0x404bc6 288 
* * 15060 6024 5020
+5 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(126)
calls=1004 0x404be0 -36 
* * 536396 182748 176728 4 1 71 4 1 71 24432 1270 2004
+5 +1 1004
+4 * 1004 1004
+1 * 1004 1004
+1 * 1004 1004

fn=(128)
0x404878 277 1052 0 1052
+1 * 1052
+3 * 1052
+4 * 1052 0 1052 1 0 0 1
+4 +1 1052 1052
+4 * 1052
+3 * 1052 0 1052
cfi=(13)
cfn=(130)
calls=1052 -33 -66 
* * 6312 3156 2104 0 0 1 0 0 1
+5 * 1052 1052
+1 * 1052 1052

fn=(132)
0x404d44 277 2008 0 2008
+1 * 2008
+3 * 2008
+4 * 2008 0 2008
+4 +1 2008 2008
+4 * 2008
+3 * 2008 0 2008
cfi=(13)
cfn=(134)
calls=2008 0x404e98 -58 
* * 32128 12048 10040 2 0 0 2
+5 * 2008 2008
+1 * 2008 2008

fn=(138)
0x404d5e 379 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 * 1004 0 1004
+4 +8 1004 0 1004
+4 +3 1004 1004
+4 * 1004 1004
+4 * 1004 1004
+4 * 1004
+3 * 1004
+3 * 1004 0 1004
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1004 0x404eb5 -22 
* * 427964 146604 139580 1 1 71 1 1 71 24432 1270 2004
+5 +1 1004 1004
+1 * 1004 1004

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 2008 0 2008 1 0 0 1
+1 * 2008
+3 * 2008
+4 * 2008 0 2008
+4 +1 2008 2008
+4 * 2008
+3 * 2008 0 2008
cfi=(13)
cfn=(124)
calls=2008 0x404d36 -77 
* * 12048 6024 4016 2 0 0 2
+5 * 2008 2008
+1 * 2008 2008

fn=(56)
0x404c38 288 2008 0 2008 1 0 0 1
+1 * 2008
+3 * 2008
+4 * 2008 0 2008 1 0 0 1
+4 +1 2008 2008
+4 * 2008
+3 * 2008 0 2008
cfi=(13)
cfn=(58)
calls=2008 0x404d8f -77 
* * 12048 6024 4016 1 0 0 1
+5 * 2008 2008
+1 * 2008 2008

fn=(74)
0x404f37 368 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020 1 0 0 1
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+5 * 1020 0 0 0 0 0 0 0 0 1020
jcnd=8/1020 +33 +2 
* * 
+2 +1 1012 1012
+4 * 1012
+8 * 1012 1012
+4 * 1012 1012
+4 * 1012
+3 * 1012 0 0 1 0 0 1
+3 * 1012 0 1012 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1012 0x3877c83840 0 
* * 400974 135876 133857 11 2 20 11 2 20 23512 1290 1007 250
* * 1012 1012 0 1 1 0 1 1 0 0 0 1012
+5 +1 1020 1020
+4 * 1020
+8 * 1020 1020
+4 * 1020
+3 +1 1020 1020
+1 * 1020 1020

fn=(140)
0x404eb5 368 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020 1 0 0 1
+4 * 1020 0 1020
+4 * 1020 0 1020 0 0 1 0 0 1
+4 +2 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+5 * 1020 0 0 0 0 0 0 0 0 1020
jcnd=8/1020 +33 +2 
* * 
+2 +1 1012 1012
+4 * 1012
+8 * 1012 1012
+4 * 1012 1012
+4 * 1012
+3 * 1012
+3 * 1012 0 1012
cob=(2)
cfi=(9)
cfn=(78)
calls=1012 0x3877c83840 0 
* * 400974 135876 133857 0 1 72 0 1 72 23512 1276 1007
* * 1012 1012 0 0 0 0 0 0 0 0 0 1012
+5 +1 1020 1020
+4 * 1020
+8 * 1020 1020
+4 * 1020
+3 +1 1020 1020
+1 * 1020 1020

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 2008 0 2008 1 0 0 1
+1 * 2008
+3 * 2008 0 2008
+4 +1 2008 2008
+4 * 2008 2008
+1 * 2008 2008

fn=(110)
0x404380 726 2008 0 2008 1 0 0 1
+1 * 2008
+3 * 2008 0 2008
+4 * 2008 0 2008
+4 * 2008 2008
+4 * 2008 2008
+3 * 2008 2008
+4 * 2008 0 2008
+3 * 2008 2008
+1 * 2008 2008

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 2008 0 2008 1 0 0 1
+1 * 2008
+3 * 2008 0 2008
+4 +1 2008 2008
+4 * 2008 2008
+1 * 2008 2008

fn=(44)
0x404468 726 2008 0 2008
+1 * 2008
+3 * 2008 0 2008
+4 * 2008 0 2008
+4 * 2008 2008
+4 * 2008 2008
+3 * 2008 2008
+4 * 2008 0 2008 1 0 0 1
+3 * 2008 2008
+1 * 2008 2008

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1012 0 1012 1 0 0 1
+1 * 1012
+3 * 1012 0 1012
+4 * 1012 0 1012 1 0 0 1
+4 * 1012 1012
+1 * 1012 1012

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1012 0 1012 1 0 0 1
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 +4 1012 1012
+4 * 1012 1012
+4 * 1012
+3 * 1012
+3 * 1012 0 1012
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1012 0x40454c -14 
* * 6072 2024 3036 1 0 0 1
+5 +2 1012 1012
+1 * 1012 1012

fn=(150)
0x40326c 148 1012 0 1012
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 +3 1012 1012 0 1 0 0 1
+4 * 1012 1012
+4 * 1012
+3 * 1012
+3 * 1012 0 1012
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1012 0x403d1a -29 
* * 18216 6072 7084 3 0 0 3
+5 +1 1012 1012
+1 * 1012 1012

fn=(180)
0x40334a 148 1012 0 1012
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 +3 1012 1012
+4 * 1012 1012
+4 * 1012
+3 * 1012
+3 * 1012 0 1012
cfn=(182)
calls=1012 0x403dcc -29 
* * 18216 6072 7084 2 0 0 2
+5 +1 1012 1012
+1 * 1012 1012

fn=(152)
0x403d1a 122 1012 0 1012 1 0 0 1
+1 * 1012
+3 * 1012
+4 * 1012 0 1012
+4 * 1012 0 1012
+4 +4 1012 1012
+4 * 1012 1012
+4 * 1012
+3 * 1012
+3 * 1012 0 1012
cfn=(154)
calls=1012 0x4044f8 -14 
* * 6072 2024 3036 2 0 0 2
+5 +2 1012 1012
+1 * 1012 1012

fn=(184)
0x40454c 112 1012 0 1012 1 0 0 1
+1 * 1012
+3 * 1012 0 1012
+4 * 1012 0 1012
+4 * 1012 1012
+1 * 1012 1012

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 3185 488 486 0 16 7 0 16 7 527 62 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 18 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3182 672 613 12 4 5 12 4 5 499 53 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 1882 1882 0 1 0 0 1
+6 0 1882
+2 0 1882 0 0 0 0 0 0 0 0 1882 1
+2 0 1882 1882

fn=(38) _int_malloc
0x3877c79a00 0 2024 0 2024 1 0 0 1
+2 0 2024
+3 0 2024 0 2024
+2 0 2024 0 2024
+2 0 2024 0 2024 0 0 1 0 0 1
+2 0 2024
+3 0 2024 0 2024
+1 0 2024 0 2024
+1 0 2024
+4 0 2024
+4 0 2024 0 0 0 0 0 0 0 0 2024
+6 0 2024
+4 0 2024
+6 0 2024
+3 0 2024
+4 0 2024
+4 0 2024
+4 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024
+6 0 2024 2024 0 1 1 0 1 1
+7 0 2024 0 0 0 0 0 0 0 0 2024 7
jcnd=1902/2024 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 142 142
+6 0 142
+4 0 142
+2 0 142 0 0 0 0 0 0 0 0 142
+6 0 142
+3 0 142
+4 0 142 142
+1 0 142 142
+1 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
-14 0 1882
+4 0 1882 1882
+1 0 1882 1882
+1 0 1882 1882
+2 0 1882 1882
+2 0 1882 1882
+2 0 1882 1882
+2 0 1882 1882
+7 0 1919
+7 0 1919 0 0 1 0 0 1 0 0 1919 7
jcnd=1016/1919 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 1 0 0 1
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 1016 0 0 1 0 0 1
+3 0 1016
+4 0 1016
+4 0 1016 0 0 1 0 0 1 0 0 1016
jcnd=1016/1016 0x3877c7a1a4 0 
* 0 
+30 0 1016 1016
+6 0 1016
+5 0 1016 0 0 0 0 0 0 0 0 1016 1
jcnd=1015/1016 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 894 237 190 8 2 0 8 2 0 184 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1918 0 0 1 0 0 1
+3 0 1918
+3 0 1918
+3 0 1918
+4 0 1918
+3 0 1918
+4 0 1918 0 1918
+5 0 1918
+3 0 1918 0 1918
+4 0 1918 0 1918
+4 0 1918 0 1918
+5 0 1918
+3 0 1918
+3 0 1918
+3 0 1918
+3 0 1918
+4 0 1918
+4 0 1918 0 0 1 0 0 1
+4 0 1918 0 1918
+4 0 1918
+4 0 1918 0 1918
+5 0 1918 0 1918
+5 0 1918
+3 0 1918
+3 0 1918 0 1918
+5 0 1918
+5 0 1918
+3 0 1918 0 1918
+4 0 1918 0 1918
+4 0 1918
+6 0 1918 0 1918
+4 0 1918 0 1918
+5 0 1918 0 0 1 0 0 1
+3 0 1918
+3 0 1918
+3 0 1918
jump=1918 +87 0 
* 0 
+8 0 1269
+3 0 1269
+4 0 1269
+2 0 1269
+2 0 1269
+3 0 1269
+3 0 1269
+3 0 1269
+2 0 1269
+2 0 1269
+5 0 1269
+2 0 1269 1269 0 0 1 0 0 1
+4 0 1269
+3 0 1269
+4 0 1269 0 1269
+4 0 1269 0 1269 0 0 1 0 0 1
+8 0 1269
+7 0 1269 0 1269
+4 0 1269 0 1269 0 0 2 0 0 2
+4 0 1269 0 1269
+4 0 1269 0 0 0 0 0 0 0 0 1269
-38 0 630
+3 0 630
+4 0 630 0 630
+4 0 630 0 630
+8 0 630
+7 0 630 0 630
+4 0 630 0 630
+4 0 630 0 630
+4 0 630 0 0 0 0 0 0 0 0 630
+6 0 3818 3818 0 1 0 0 1
+4 0 3818
+3 0 3818 0 0 0 0 0 0 0 0 3818 167
jcnd=1863/3818 0x3877c79ef0 0 
* 0 
+6 0 1955 1955
+4 0 1955 1955 0 0 1 0 0 1
+4 0 1955
+4 0 1955 0 0 0 0 0 0 0 0 1955
+6 0 1955 1955 0 1 1 0 1 1
+7 0 1955 0 0 0 0 0 0 0 0 1955 2
+6 0 1955
+4 0 1955
+7 0 1955 0 0 0 0 0 0 0 0 1955 6
jcnd=1045/1955 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1936
+3 0 1936 0 1936
+4 0 1936 0 1936
+5 0 1936 0 0 0 0 0 0 0 0 1936 22
jcnd=37/1936 0x3877c7a090 0 
* 0 
+6 0 1899
+7 0 1899 0 0 0 0 0 0 0 0 1899 474
jcnd=1269/1899 0x3877c79c50 0 
* 0 
+6 0 630 0 0 1 0 0 1
+3 0 630
+4 0 630
+4 0 630 0 0 0 0 0 0 0 0 630
+6 0 630
+3 0 630
+4 0 630
+2 0 630
+2 0 630
+3 0 630
+3 0 630
+8 0 630
+3 0 630
+2 0 630
+2 0 630
+4 0 630 630 0 0 2 0 0 2
+4 0 630
+3 0 630 0 0 1 0 0 1 0 0 630 9
jcnd=630/630 0x3877c79e15 0 
* 0 
0x3877c79e15 0 630 0 630
+4 0 630 0 630
+4 0 630
+3 0 630
jump=630 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=387/406 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1863 0 0 1 0 0 1
+7 0 1863
+3 0 1863 0 0 0 0 0 0 0 0 1863 4
jcnd=1000/1863 0x3877c7a0b0 0 
* 0 
+6 0 1823 1823 0 1 0 0 1
+4 0 1823
+3 0 1823
+3 0 1823
+2 0 1823
+4 0 1823
+3 0 1823
+3 0 1823
+2 0 1823
+2 0 1823
+2 0 1823
+2 0 1823 1823
+8 0 1823
+5 0 1823
+5 0 1823
+2 0 1823 0 0 0 0 0 0 0 0 1823
-2 0 895
+2 0 895 0 0 0 0 0 0 0 0 895 1
jcnd=1/895 +14 0 
* 0 
+2 0 2717
+2 0 2717 0 0 0 0 0 0 0 0 2717 46
jcnd=1628/2717 +64 0 
* 0 
+2 0 1089
+8 0 1089
+3 0 1089
+3 0 1089 0 0 0 0 0 0 0 0 1089 1
jcnd=1/1089 0x3877c79fc0 0 
* 0 
-6 0 1238
+3 0 1238
+3 0 1238 0 0 0 0 0 0 0 0 1238 11
jcnd=813/1238 0x3877c79fc0 0 
* 0 
+2 0 1513
+2 0 1513 1513
+8 0 1513
+2 0 1513 0 0 0 0 0 0 0 0 1513 27
jcnd=1237/1513 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
jcnd=1/276 +14 0 
* 0 
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 11933
+4 0 11933
+2 0 11933
+2 0 11933 0 0 0 0 0 0 0 0 11933 847
jcnd=10306/11933 -8 0 
* 0 
-2 0 1628 0 0 1 0 0 1
+2 0 1628 0 0 0 0 0 0 0 0 1628 28
jcnd=1414/1628 -8 0 
* 0 
+2 0 1904 1904 0 0 16 0 0 16
+4 0 1904 0 0 1 0 0 1
+3 0 1904 0 0 0 0 0 0 0 0 1904 826
jcnd=1009/1904 0x3877c7a1cf 0 
* 0 
+6 0 895
+2 0 895
+4 0 895
+2 0 895
+2 0 895
+2 0 895 0 895
+8 0 895
jump=895 0x3877c79f30 0 
* 0 
+37 0 814 814 0 1 0 0 1
+5 0 814 814
+4 0 814
+4 0 814 814
+5 0 814 0 0 0 0 0 0 0 0 814
jcnd=814/814 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 37 0 0 1 0 0 1
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37
jcnd=37/37 0x3877c79ace 0 
* 0 
+16 0 1000 1000
+4 0 1000
+4 0 1000
+2 0 1000
+5 0 1000 1000 0 1 0 0 1
+4 0 1000
+3 0 1000 0 0 0 0 0 0 0 0 1000 10
jcnd=956/1000 0x3877c79f00 0 
* 0 
+6 0 44 44
+4 0 44 0 0 0 0 0 0 0 0 44 1
jcnd=4/44 0x3877c79f00 0 
* 0 
+6 0 40
+3 0 40 40
+4 0 40 40
+4 0 40
+3 0 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c7a650 0 
* 0 
+26 0 40 0 0 1 0 0 1
+3 0 40 40
+4 0 40
+3 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40 2
+6 0 40 40
+8 0 40 0 40
+4 0 40 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40 0 1 0 0 1
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 26
jcnd=40/40 0x3877c7a659 0 
* 0 
+6 0 40
+4 0 40 0 0 0 0 0 0 0 0 40 8
jcnd=16/40 0x3877c7a2e3 0 
* 0 
+6 0 24 24
+4 0 24
+7 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+4 0 24
+7 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a285 0 
* 0 
+31 0 1016 0 0 1 0 0 1
+3 0 1016 0 1016
+4 0 1016
jump=1016 0x3877c79b99 0 
* 0 
+36 0 1009 1009 0 1 1 0 1 1
+4 0 1009 1009
+4 0 1009
+3 0 1009 1009
+4 0 1009
+4 0 1009
+3 0 1009
+3 0 1009 1009
+4 0 1009 0 0 0 0 0 0 0 0 1009
+6 0 1009 1009
+4 0 1009 0 0 0 0 0 0 0 0 1009
+6 0 1009 1009 0 1 0 0 1
+8 0 1009 0 1009
+4 0 1009 0 1009
+4 0 1009 0 0 0 0 0 0 0 0 1009 11
jcnd=419/1009 +38 0 
* 0 
+2 0 590 590 0 0 2 0 0 2
+4 0 590
+3 0 590 0 0 0 0 0 0 0 0 590
+2 0 590 590
+5 0 590 0 0 0 0 0 0 0 0 590
+6 0 590 590
+4 0 590 0 590
+4 0 590 590
+4 0 590 0 590
+4 0 590
+4 0 590 0 0 0 0 0 0 0 0 590
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 988 988
+4 0 988 988 0 1 0 0 1
+4 0 988 0 0 0 0 0 0 0 0 988
+6 0 988
+4 0 988
+7 0 988 0 988 0 0 7 0 0 7
+4 0 988 0 988
+4 0 988 0 988
+4 0 988 0 988
+4 0 988 0 0 0 0 0 0 0 0 988 4
jcnd=522/988 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 522
+7 0 522 0 0 0 0 0 0 0 0 522
jcnd=522/522 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 1005 0 0 1 0 0 1
+7 0 1005 0 1005
+4 0 1005
+3 0 1005
+3 0 1005
+4 0 1005
+3 0 1005
+4 0 1005
+3 0 1005
+3 0 1005
+4 0 1005 0 1005
+4 0 1005 0 1005 0 0 1 0 0 1
+4 0 1005
jump=1005 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 37
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37 2
jcnd=37/37 +7 0 
* 0 
+7 0 1049
+4 0 1049 0 0 1 0 0 1
+3 0 1049
+3 0 1049 0 1049
cfn=(104)
calls=1049 0x3877c77180 0 
* 0 4196 2098 0 1 0 0 1 0 0 1049
+5 0 1049
+3 0 1049
jump=1049 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 814 0 0 1 0 0 1
+7 0 814
+2 0 814
+4 0 814
+3 0 814
+3 0 814 0 814
+5 0 814
+3 0 814
+4 0 814
+3 0 814 0 0 1 0 0 1
+4 0 814
+4 0 814
+3 0 814
+4 0 814 0 814
+4 0 814 0 814 0 0 30 0 0 30
+4 0 814
+3 0 814
+3 0 814 0 814
cfn=(104)
calls=814 0x3877c77180 0 
* 0 3256 1628 0 0 0 0 0 0 0 814 1
+5 0 814
+3 0 814
jump=814 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 40 40 0 1 0 0 1
+4 0 40
jump=40 0x3877c7a10e 0 
* 0 
+5 0 40 40
+5 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 2024 0 2024 1 0 0 1
+5 0 2024 0 2024
+5 0 2024
+3 0 2024 0 2024
+5 0 2024
+4 0 2024 2024 0 0 1 0 0 1
+7 0 2024 2024 0 0 1 0 0 1
+3 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024 2
+6 0 2024 2024 0 0 1 0 0 1
+7 0 2024 2024 0 1 1 0 1 1
+4 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024
+2 0 2024 2024 0 0 1 0 0 1
+3 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024
jcnd=2024/2024 +97 0 
* 0 
+18 0 2024
+3 0 2024
+3 0 2024 0 2024
cfn=(38)
calls=2024 0x3877c79a00 0 
* 0 461461 57982 68401 45 32 64 45 32 64 70051 3022
+5 0 2024
+3 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024
+2 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024
+2 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024 31
+2 0 2024 2024
+7 0 2024 0 0 0 0 0 0 0 0 2024
jcnd=2024/2024 +13 0 
* 0 
+13 0 2024 0 2024
+2 0 2024 0 0 0 0 0 0 0 0 2024 14
+6 0 2024
+3 0 2024 2024
+4 0 2024 2024
+5 0 2024 2024
+5 0 2024
+4 0 2024 2024
+1 0 2024 0 0 1 0 0 1
+5 0 2024 2024 0 0 1 0 0 1
+7 0 2024 0 0 0 0 0 0 0 0 2024
jcnd=2024/2024 +14 0 
* 0 
+14 0 2024 0 2024 1 0 0 1
+3 0 2024 0 0 0 0 0 0 0 0 2024
+6 0 2024
jump=2024 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2024 0 2024 1 0 0 1
+2 0 2024
+3 0 2024
+3 0 2024 0 2024
+2 0 2024
+3 0 2024 0 2024
+1 0 2024
+3 0 2024 0 2024
+1 0 2024
+3 0 2024
+4 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024
+6 0 2024
+4 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024 7
jcnd=10/2024 0x3877c838d1 0 
* 0 
+2 0 2014
+3 0 2014
+3 0 2014
+3 0 2014
+3 0 2014
+3 0 2014 0 0 0 0 0 0 0 0 2014
jcnd=2014/2014 +41 0 
* 0 
+41 0 2014 0 0 1 0 0 1
+3 0 2014 0 0 0 0 0 0 0 0 2014
jcnd=2014/2014 0x3877c839c0 0 
* 0 
+24 0 2014
+3 0 2014
+4 0 2014
+3 0 2014
+3 0 2014
+3 0 2014
+3 0 2014
+3 0 2014 0 0 0 0 0 0 0 0 2014 1004
jcnd=1014/2014 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1010
+10 0 1010 1010 0 0 2 0 0 2
+3 0 1010
+4 0 1010 0 1010
+3 0 1010
+4 0 1010
+4 0 1010 0 0 0 0 0 0 0 0 1010
jcnd=1010/1010 -18 0 
* 0 
-18 0 3086 3086
+3 0 3086
+4 0 3086 0 3086
+3 0 3086
+4 0 3086
+4 0 3086 0 0 0 0 0 0 0 0 3086 11
jcnd=2076/3086 -18 0 
* 0 
+2 0 2024
+4 0 2024
+3 0 2024 2024
+1 0 2024 2024
+1 0 2024 2024
+2 0 2024 2024 0 1 0 0 1
+2 0 2024 2024
0x3877c839c0 0 2014 0 0 1 0 0 1
+3 0 2014
+3 0 2014
+3 0 2014
+4 0 2014 0 2014 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=2014 0x3877c89b20 0 
* 0 687506 257536 253508 6 1 91 6 1 91 32828 1544 2014 250
+5 0 2014
jump=2014 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2024 2024 0 1 1 0 1 1
+7 0 2024 2024 0 0 1 0 0 1
+3 0 2024
+3 0 2024 0 0 1 0 0 1 0 0 2024
+6 0 2024
+3 0 2024 0 0 0 0 0 0 0 0 2024
+6 0 2024 2024
+4 0 2024
+4 0 2024
+2 0 2024 0 0 0 0 0 0 0 0 2024 2
+2 0 2024
+2 0 2024
+7 0 2024 0 0 0 0 0 0 0 0 2024
jcnd=2024/2024 +14 0 
* 0 
+14 0 2024
+2 0 2024
cfn=(170) _int_free
calls=2024 0x3877c78650 0 
* 0 197381 52135 29893 19 2 0 19 2 0 47829 915

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=11/12 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 2024 0 2024 1 0 0 1
+2 0 2024 0 2024
+2 0 2024 0 2024
+2 0 2024
+3 0 2024 0 2024
+2 0 2024 0 2024
+1 0 2024 0 2024
+1 0 2024
+3 0 2024
+4 0 2024 2024
+4 0 2024 0 2024
+4 0 2024
+3 0 2024
+4 0 2024
+3 0 2024
+3 0 2024
+3 0 2024 0 0 1 0 0 1 0 0 2024
+6 0 2024
+4 0 2024 0 0 0 0 0 0 0 0 2024
+6 0 2024
+4 0 2024 0 0 0 0 0 0 0 0 2024
+6 0 2024 2024
+7 0 2024 0 0 0 0 0 0 0 0 2024 4
jcnd=1900/2024 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1900
+2 0 1900 0 0 0 0 0 0 0 0 1900
+6 0 1900 1900 0 1 0 0 1
+4 0 1900
+3 0 1900
+2 0 1900 0 0 0 0 0 0 0 0 1900
jcnd=1900/1900 0x3877c78a40 0 
* 0 
+6 0 1900 1900
+4 0 1900
+3 0 1900 0 0 0 0 0 0 0 0 1900
+6 0 1900 1900
+5 0 1900
+4 0 1900 0 0 0 0 0 0 0 0 1900
jcnd=1900/1900 0x3877c7907c 0 
* 0 
+6 0 1900 1900
+5 0 1900
+4 0 1900 0 0 0 0 0 0 0 0 1900
+6 0 1900
+4 0 1900 0 0 1 0 0 1 0 0 1900
+6 0 1900
+4 0 1900 1900
+7 0 1900 0 0 0 0 0 0 0 0 1900
+6 0 1900 1900
+6 0 1900
+2 0 1900 0 0 0 0 0 0 0 0 1900
+6 0 1900 1900
+4 0 1900 0 0 0 0 0 0 0 0 1900 5
jcnd=1896/1900 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1900 1900 0 1 0 0 1
+4 0 1900 0 0 0 0 0 0 0 0 1900 758
jcnd=812/1900 0x3877c78bf0 0 
* 0 
+6 0 1088 1088 0 0 1 0 0 1
+6 0 1088 0 0 1 0 0 1 0 0 1088 68
jcnd=77/1088 0x3877c78a78 0 
* 0 
+6 0 1011 1011
+5 0 1011 1011
+5 0 1011 1011
+4 0 1011 0 0 0 0 0 0 0 0 1011
+6 0 1011 1011
+4 0 1011 0 0 0 0 0 0 0 0 1011
+6 0 1011 1011
+9 0 1011 0 1011
+4 0 1011 0 1011
+4 0 1011 0 0 0 0 0 0 0 0 1011 4
jcnd=1003/1011 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 1011
+3 0 1011
+4 0 1011 1011
+4 0 1011 1011
+4 0 1011 0 0 0 0 0 0 0 0 1011
-12 0 77
+4 0 77 77
+4 0 77 77
+4 0 77 0 0 0 0 0 0 0 0 77
+6 0 1088
+7 0 1088 0 1088
+4 0 1088 0 1088
+4 0 1088 0 0 0 0 0 0 0 0 1088 72
jcnd=441/1088 +18 0 
* 0 
+2 0 647 0 647
+8 0 647 0 647
+8 0 647 0 647
+4 0 647
+3 0 647 0 647 1 0 0 1
+4 0 647
+4 0 647 0 647
+4 0 647 0 647
+4 0 647
+7 0 647 0 0 0 0 0 0 0 0 647
jcnd=647/647 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 812
+7 0 812 0 0 0 0 0 0 0 0 812
jcnd=812/812 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1900 0 0 1 0 0 1
+5 0 1900 1900
+4 0 1900 1900
+7 0 1900 0 0 0 0 0 0 0 0 1900
jcnd=1900/1900 +16 0 
* 0 
+16 0 1900 0 1900
+5 0 1900 0 0 0 0 0 0 0 0 1900
+6 0 1900
+3 0 1900
jump=1900 0x3877c7878f 0 
* 0 
+10 0 77 0 77
+6 0 77 0 0 1 0 0 1
jump=77 0x3877c78885 0 
* 0 
0x3877c78b20 0 1900 1900 0 1 0 0 1
+4 0 1900
+2 0 1900 0 0 0 0 0 0 0 0 1900
+6 0 1900 1900
+7 0 1900 0 0 0 0 0 0 0 0 1900
jcnd=1900/1900 +15 0 
* 0 
+15 0 1900 0 1900 1 0 0 1
+4 0 1900 0 0 0 0 0 0 0 0 1900 2
+6 0 1900
+4 0 1900 1900
+1 0 1900 1900
+1 0 1900 1900
+2 0 1900 1900
+2 0 1900 1900
+2 0 1900 1900
+2 0 1900 1900
0x3877c78bf0 0 812 0 0 1 0 0 1
+3 0 812 0 812
+4 0 812
+3 0 812
+4 0 812 0 812 1 0 0 1
+4 0 812
jump=812 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1900 1900 0 1 1 0 1 1
+4 0 1900 0 0 1 0 0 1
+7 0 1900
+4 0 1900
+3 0 1900
+3 0 1900 0 0 0 0 0 0 0 0 1900
jcnd=1900/1900 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 2014 0 0 1 0 0 1
+7 0 2014
+3 0 2014
+3 0 2014 2014 0 0 1 0 0 1
+4 0 2014
+4 0 2014 0 0 0 0 0 0 0 0 0 0 2014 250
jump=248 0x3877c89be8 0 
* 0 
jump=258 0x3877c89bd0 0 
* 0 
jump=248 0x3877c89bb8 0 
* 0 
jump=248 +11 0 
* 0 
jump=248 0x3877c89c48 0 
* 0 
jump=250 0x3877c89c30 0 
* 0 
jump=256 0x3877c89c18 0 
* 0 
jump=258 0x3877c89c00 0 
* 0 
+11 0 248 248
+3 0 248
+4 0 248
+4 0 248 248
+4 0 248
+4 0 248 0 248
+4 0 248
+9 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248
+4 0 248
+4 0 248 0 0 0 0 0 0 0 0 248
jcnd=8/248 0x3877c89c60 0 
* 0 
-40 0 31310 31310
+4 0 31310 0 31310 0 0 3 0 0 3
+4 0 31310 31310
+4 0 31310 0 31310 0 0 15 0 0 15
+4 0 31310 31310
+4 0 31310 0 31310 0 0 19 0 0 19
+4 0 31310 31310
+4 0 31310 0 31310
+4 0 31310
+4 0 31310
+4 0 31310 0 0 0 0 0 0 0 0 31310 1540
jcnd=1978/31310 0x3877c89c60 0 
* 0 
-32 0 250 250
+4 0 250 0 250
+4 0 250 250
+4 0 250 0 250
+4 0 250 250
+4 0 250 0 250
+4 0 250
+4 0 250
+4 0 250 0 0 0 0 0 0 0 0 250
jcnd=10/250 0x3877c89c60 0 
* 0 
-24 0 256 256
+4 0 256 0 256
+4 0 256 256
+4 0 256 0 256
+4 0 256
+4 0 256
+4 0 256 0 0 0 0 0 0 0 0 256
jcnd=8/256 0x3877c89c60 0 
* 0 
-16 0 258 258 0 1 0 0 1
+4 0 258 0 258
+4 0 258 0 0 1 0 0 1
+4 0 258
+4 0 258 0 0 0 0 0 0 0 0 258 4
jcnd=10/258 0x3877c89c60 0 
* 0 
+6 0 30308
+4 0 30308 30308
+3 0 30308 0 30308 0 0 1 0 0 1
+3 0 30308 30308
+4 0 30308 0 30308 0 0 3 0 0 3
+4 0 30308 30308
+4 0 30308 0 30308 0 0 49 0 0 49
+4 0 30308 30308
+4 0 30308 0 30308
+4 0 30308
jump=30308 -80 0 
* 0 
-30 0 248 248
+3 0 248 0 248
+3 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248 0 0 1 0 0 1
+4 0 248 248
+4 0 248 0 248
+4 0 248
jump=248 -80 0 
* 0 
-24 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258
jump=258 -80 0 
* 0 
-16 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248
jump=248 -80 0 
* 0 
+8 0 248 248
+3 0 248
+4 0 248 0 0 1 0 0 1
+4 0 248
+4 0 248
jump=248 -39 0 
* 0 
+9 0 258
+3 0 258 0 0 0 0 0 0 0 0 258
+6 0 258 258
+3 0 258
+4 0 258
jump=258 -72 0 
* 0 
+8 0 248
+4 0 248 248
+3 0 248 0 0 0 0 0 0 0 0 248
+2 0 248
+4 0 248
jump=248 -99 0 
* 0 
+11 0 258 258 0 1 0 0 1
+3 0 258
+4 0 258
+4 0 258
+4 0 258
jump=258 0x3877c89b78 0 
* 0 
+9 0 256 256
+3 0 256
+4 0 256
+4 0 256
+4 0 256
jump=256 0x3877c89b70 0 
* 0 
+9 0 250 250
+3 0 250
+4 0 250
+4 0 250
+4 0 250
jump=250 0x3877c89b68 0 
* 0 
+9 0 248 248
+3 0 248
+4 0 248
+4 0 248
+4 0 248
jump=248 0x3877c89b60 0 
* 0 
+9 0 2014 0 2014 1 0 0 1
+3 0 2014 2014

totals: 22412218 9333822 5287290 241 119 194 241 119 194 590767 8082 12134 250
