version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2152


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2629156706 - 2629632616
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 794 0 0 1 0 0 1
+3 0 794 0 0 0 0 0 0 0 0 794
+2 0 794
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=794 0x3877c7b8b0 0 
* 0 94235 24604 13426 21 4 0 21 4 0 23069 181
* 0 794 794 0 1 1 0 1 1 0 0 0 794

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 794 0 794 1 0 0 1
+1 0 794
+5 0 794
+3 0 794 0 794
+1 0 794
+4 0 794 0 0 1 0 0 1
+3 0 794
+4 0 794
+3 0 794 0 794 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=794 0x3877c7aa50 0 
* 0 182495 29145 30781 45 34 38 45 34 38 29245 825
* 0 794 794 0 1 1 0 1 1 0 0 0 794
+5 0 794
+3 0 794 0 0 0 0 0 0 0 0 794
jcnd=794/794 +96 0 
* 0 
+96 0 794 0 0 1 0 0 1
+4 0 794 794
+1 0 794 794
+1 0 794 794

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 195 0 195
+1 * 195
+3 * 195
+4 * 195 0 195
+4 * 195 0 195
+4 * 195 0 195
+4 +1 195 195
+4 * 195 195
+4 * 195 195
+4 * 195
+3 * 195
+3 * 195 0 195
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=195 0x403df2 -87 
* * 4680 1560 1755 0 14 5 0 14 5 195 1
+5 * 195 195
+1 * 195 195

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 390 0 390 1 0 0 1
+1 * 390
+3 * 390 0 390
+4 * 390 390
+4 * 390 390
+1 * 390 390

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 195 0 195
+1 * 195
+3 * 195
+4 * 195 0 195
+4 * 195 0 195
+4 * 195 0 195
+4 +1 195 195
+4 * 195 195
+4 * 195 195
+4 * 195
+3 * 195
+3 * 195 0 195
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=195 0x40406a -87 
* * 4680 1560 1755 0 13 7 0 13 7 195
+5 * 195 195
+1 * 195 195

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 390 0 390
+1 * 390
+3 * 390 0 390
+4 * 390 390
+4 * 390 390
+1 * 390 390

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 460 0 460
+1 * 460
+3 * 460 0 460
+4 +1 460 460
+4 * 460 460
+1 * 460 460

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 780 0 780 1 0 0 1
+1 * 780
+3 * 780 0 780
+4 +1 780 780 0 1 0 0 1
+4 * 780 780
+1 * 780 780

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 460 0 460
+1 * 460
+3 * 460 0 460 0 0 1 0 0 1
+4 +1 460 460
+4 * 460 460
+1 * 460 460

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 780 0 780 1 0 0 1
+1 * 780
+3 * 780
+4 * 780 0 780
+4 +1 780
+4 * 780
+3 * 780 0 780
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=780 0x404ffe 790 
* * 4680 2340 1560 1 0 0 1
+5 * 780 780
+3 * 780 780
+1 * 780 780

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 780 0 780 1 0 0 1
+1 * 780
+3 * 780 0 780
+4 +1 780 780
+4 * 780 780
+1 * 780 780

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 780 0 780 1 0 0 1
+1 * 780
+3 * 780
+4 * 780 0 780
+4 +1 780
+4 * 780
+3 * 780 0 780 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=780 0x40500c 790 
* * 4680 2340 1560 1 0 0 1
+5 * 780 780
+3 * 780 780
+1 * 780 780

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 390 0 390
+1 * 390
+3 * 390 0 390
+4 * 390 0 390
+4 * 390 390
+4 * 390 390
+1 * 390 390

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 397 0 397 1 0 0 1
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 * 397 0 397 1 0 0 1
+4 +2 397 397
+4 * 397
+3 * 397 0 397
cfn=(28)
calls=397 0x404992 +12 
* * 2382 794 794 1 0 0 1
+5 * 397 397
+4 * 397
+3 * 397
+2 * 397 0 0 0 0 0 0 0 0 397
jcnd=397/397 +7 +3 
* * 
+7 +3 397 397
+4 * 397
+4 * 397
+3 * 397 0 397
cob=(5)
cfi=(8)
cfn=(32)
calls=397 0x387e4bd0b0 0 
* * 111227 18332 18328 19 21 19 19 21 19 17526 494 397
* * 397 397 0 1 1 0 1 1 0 0 0 397
+5 +1 397 397
+1 * 397 397

fn=(102)
0x4048de 113 411 0 411 1 0 0 1
+1 * 411
+3 * 411 0 411
+4 +1 411
+10 * 411 411
+1 * 411 411

fn=(266)
0x40406a 129 195 0 195
+1 * 195
+3 * 195
+4 * 195 0 195
+4 * 195 0 195
+4 * 195 0 195
+4 +1 195 195
+4 * 195
+3 * 195
+5 * 195 0 195
cfi=(16)
cfn=(226)
calls=195 0x402d61 -20 
* * 1365 585 585
+5 * 195
+3 * 195 0 0 0 0 0 0 0 0 195
+2 * 195 195
+4 * 195 195 0 0 13 0 0 13
+2 * 195 0 195 0 0 7 0 0 7
+2 * 195 195
+1 * 195 195

fn=(28)
0x404992 113 411 0 411 1 0 0 1
+1 * 411
+3 * 411 0 411
+4 +1 411
+10 * 411 411
+1 * 411 411

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 390 0 390
+1 * 390
+3 * 390 0 390
+4 * 390 390
+1 * 390 390

fn=(224)
0x403df2 129 195 0 195
+1 * 195
+3 * 195
+4 * 195 0 195
+4 * 195 0 195
+4 * 195 0 195
+4 +1 195 195
+4 * 195
+3 * 195
+5 * 195 0 195
cfi=(16)
cfn=(226)
calls=195 0x402d61 -20 
* * 1365 585 585
+5 * 195
+3 * 195 0 0 0 0 0 0 0 0 195 1
+2 * 195 195
+4 * 195 195 0 0 14 0 0 14
+2 * 195 0 195 0 0 5 0 0 5
+2 * 195 195
+1 * 195 195

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 397 0 397
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 * 397 0 397
+4 +1 397 397
+4 * 397
+3 * 397 0 397
cob=(5)
cfi=(8)
cfn=(164)
calls=397 0x387e4bb2f0 0 
* * 48590 12695 6604 21 5 0 21 5 0 11931 145 397
* * 397 397 0 1 1 0 1 1 0 0 0 397
+5 * 397 397
+1 * 397 397

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 397 0 397
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 * 397 0 397
+4 +1 397 397
+4 * 397
+3 * 397 0 397
cob=(5)
cfi=(8)
cfn=(164)
calls=397 0x387e4bb2f0 0 
* * 48821 12703 6822 2 0 0 2 0 0 11932 36 397
* * 397 397 0 0 0 0 0 0 0 0 0 397
+5 * 397 397
+1 * 397 397

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 397 0 397 1 0 0 1
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 * 397 0 397
+4 +2 397 397
+4 * 397
+3 * 397 0 397
cfn=(102)
calls=397 0x4048de +12 
* * 2382 794 794 1 0 0 1
+5 * 397 397
+4 * 397 0 0 1 0 0 1
+3 * 397
+2 * 397 0 0 0 0 0 0 0 0 397
jcnd=397/397 +7 +3 
* * 
+7 +3 397 397
+4 * 397
+4 * 397
+3 * 397 0 397
cob=(5)
cfi=(8)
cfn=(32)
calls=397 0x387e4bd0b0 0 
* * 83972 13989 14835 30 14 20 30 14 20 12513 331 397
* * 397 397 0 0 0 0 0 0 0 0 0 397
+5 +1 397 397
+1 * 397 397

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 390 0 390 1 0 0 1
+1 * 390
+3 * 390 0 390 0 0 1 0 0 1
+4 * 390 0 390
+4 * 390 390
+1 * 390 390

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 390 0 390 1 0 0 1
+1 * 390
+3 * 390 0 390
+4 * 390 0 390
+4 * 390 390
+1 * 390 390

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 390 0 390
+1 * 390
+3 * 390 0 390
+4 * 390 390
+1 * 390 390

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 6 2 0 6 76 5 13
+5 * 14 14
+1 * 14 14

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +2 390 390
+4 * 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=390 0x404484 107 
* * 161000 51984 49648 25 3 4 25 3 4 5758 362 776 96
+5 * 390 390
+1 * 390 390

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 6 4 0 6 76 5 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +2 390 390 0 1 0 0 1
+4 * 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=390 0x404a36 450 
* * 150080 48084 45748 24 3 4 24 3 4 5758 362 776 96
+5 * 390 390
+1 * 390 390

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +2 390 390
+4 * 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=390 0x40439c 107 
* * 161000 51984 49648 7 0 12 7 0 12 5758 350 776
+5 * 390 390
+1 * 390 390

fn=(116)
0x40439c 107 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +10 390 390
+4 * 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=390 0x4047d7 -26 
* * 155540 50034 47698 7 0 12 7 0 12 5758 350 776
+5 +1 390 390
+1 * 390 390

fn=(118)
0x4047d7 91 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +2 390 390
+4 * 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=390 0x4049e2 450 
* * 150080 48084 45748 7 0 12 7 0 12 5758 350 776
+5 * 390 390
+1 * 390 390

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 6 5 0 6 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 6 4 0 6 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +10 390 390
+4 * 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(52)
calls=390 0x404829 -26 
* * 155540 50034 47698 25 3 4 25 3 4 5758 362 776 96
+5 +1 390 390
+1 * 390 390

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 397 0 397 1 0 0 1
+1 * 397
+3 * 397
+4 * 397 0 397 1 0 0 1
+4 * 397 0 397
+4 0 397 397
+5 0 397 0 0 0 0 0 0 0 0 397
+2 0 397 397
+4 0 397 397
+4 0 397
+5 0 397
+3 0 397
+3 0 397 0 397
fi=(6) ???
cfi=(5)
cfn=(26)
calls=397 0x404730 99 
* 0 121549 21508 21504 23 22 19 23 22 19 17923 494 794
+5 0 397
fi=(6)
jump=397 +7 0 
* 0 
+7 0 397 397
+1 0 397 397

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 390 0 390 1 0 0 1
+1 * 390
+3 * 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+4 * 390 0 390
+4 * 390
+4 * 390 0 0 1 0 0 1
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=390 0x404468 726 
* * 3900 1950 1560 1 0 0 1
+5 * 390 390
+4 * 390 390
+1 * 390 390

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+3 * 390 0 390
+4 * 390
+4 * 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(10)
cfn=(44)
calls=390 0x404468 726 
* * 3900 1950 1560
+5 * 390 390
+4 * 390 390
+1 * 390 390

fn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
0x403a0a 134 390 0 390
+1 * 390
+3 * 390 0 390
+1 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=390 0x4042e2 -45 
* * 14040 5070 5460 5 0 0 5
+5 +1 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=390 0x40432a +43 
* * 107355 23190 21757 24 10 15 24 10 15 12809 268 780
+5 * 390
jump=390 +28 * 
* * 
+28 * 390
+4 * 390 390
+1 * 390 390
+1 * 390 390

fn=(88)
0x4042e2 90 390 0 390 1 0 0 1
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390 1 0 0 1
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=390 0x4047b2 +24 
* * 7020 2340 2730 3 0 0 3
+5 * 390 390
+4 * 390 0 390
+7 * 390 390
+4 * 390 0 390
+8 * 390 390
+4 * 390 0 390
+8 +1 390 390
+1 * 390 390

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 390 0 390 1 0 0 1
+1 * 390
+3 * 390 0 390
+1 * 390
+4 * 390 0 390
+4 +2 390 390
+4 * 390 390 0 1 0 0 1
+4 * 390
+3 * 390 390
+4 * 390 390
+3 * 390
+3 * 390
+3 * 390
+4 * 390
+3 * 390 390
+4 * 390 390
+3 -1 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=390 0x403ce6 +11 
* * 58804 16428 10416 22 6 0 22 6 0 12162 142 780
+5 +1 390 390
+4 * 390
+3 * 390 0 390
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=390 0x4031b8 -82 
* * 8970 3120 3120 1 0 0 1
+5 * 390
jump=390 +28 * 
* * 
+28 * 390
+4 * 390 390
+1 * 390 390
+1 * 390 390

fn=(172)
0x4031b8 79 390 0 390 1 0 0 1
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 390
+4 * 390
+3 * 390 0 390
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=390 0x403ccc +42 
* * 5460 1950 1950
+5 * 390 390
+1 * 390 390

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+4 +1 808 808
+4 * 808 808 0 0 2 0 0 2
+4 * 808
+3 * 808 808
+4 * 808 808
+3 * 808
+3 * 808
+3 * 808
+4 * 808 808
+1 * 808 808

fn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
0x40325e 113 801 0 801 1 0 0 1
+1 * 801
+3 * 801 0 801
+4 +1 801 801
+4 * 801 801
+1 * 801 801

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 404 0 404 1 0 0 1
+1 * 404
+3 * 404 0 404 0 0 1 0 0 1
+4 +1 404 404
+4 * 404 404
+1 * 404 404

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 404 0 404 1 0 0 1
+1 * 404
+3 * 404 0 404 1 0 0 1
+4 +1 404 404
+4 * 404 404
+1 * 404 404

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 195 0 195
+1 * 195
+3 * 195
+4 * 195 0 195
+4 * 195 0 195
+4 +2 195 195
+4 * 195 195
+4 * 195 195
+4 * 195 195
+4 * 195
+3 * 195 0 0 0 0 0 0 0 0 195 7
jcnd=7/195 +51 +10 
* * 
+2 +3 188 188
+4 * 188 188
+4 * 188 188
+4 -1 188 188
+4 * 188
+3 * 188
+3 * 188 0 188
cfi=(3)
cfn=(222)
calls=188 0x403373 215 
* * 7144 2444 2632 0 13 3 0 13 3 188 1
+5 +2 188 188
+4 * 188 188
+4 * 188
+4 * 188 188
+4 * 188 0 188
+4 * 188
jump=188 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11003 3361 2893 35 5 13 35 5 13 782 71 41
+5 +2 195 195
+1 * 195 195

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 390 0 390 1 0 0 1
+1 * 390
+3 * 390 0 390
+2 * 390 0 390
+2 * 390 0 390
+1 * 390
+4 * 390 0 390 1 0 0 1
+4 * 390 0 390
+4 +2 390 390
+4 * 390
+3 * 390 0 390
cfn=(6)
calls=390 0x403b08 117 
* * 2340 1170 780 1 0 1 1 0 1
+5 * 390
+3 * 390 0 390
cfi=(3)
cfn=(8)
calls=390 0x403afa -88 
* * 2340 1170 780 1 0 0 1
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(10)
calls=390 0x402f54 645 
* * 5070 2340 780 1 1 0 1 1
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390
+3 * 390
+3 * 390 0 390
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=390 0x403b16 134 
* * 158098 35597 33632 29 20 14 29 20 14 18005 464 780
+5 +4 390 390 0 1 0 0 1
+4 * 390
+3 * 390 0 390
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=390 0x40333c 113 
* * 2340 1170 780 2 0 0 2
+5 * 390
+3 * 390 390
+4 * 390 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(42)
calls=390 0x403ba4 565 
* * 9750 3900 3120 3 0 0 3
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(46)
calls=390 0x403b74 547 
* * 9750 3900 3120
+5 * 390
+3 * 390
+3 * 390
+3 * 390
+3 * 390 0 390 1 0 0 1
cfi=(11)
cfn=(48)
calls=390 0x403bd5 -60 
* * 166850 53934 51988 26 3 4 26 3 4 5758 362 776 96
+5 -3 390 390
+4 * 390 0 390
+4 * 390
jump=390 +28 +4 
* * 
+28 +4 390
+4 * 390 390
+1 * 390 390
+2 * 390 390
+2 * 390 390
+1 * 390 390

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 390 0 390 1 0 0 1
+1 * 390
+3 * 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+4 * 390 0 390
+4 * 390
+4 * 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=390 0x404380 726 
* * 3900 1950 1560 1 0 0 1
+5 * 390 390
+4 * 390 390
+1 * 390 390

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 390 0 390
+1 * 390
+3 * 390 0 390
+1 * 390
+4 * 390 0 390 1 0 0 1
+4 +2 390 390
+4 * 390
+3 * 390 0 390
cfn=(40)
calls=390 0x40333c 113 
* * 2340 1170 780
+5 * 390
+3 * 390 390
+4 * 390 390
+4 * 390 390
+4 * 390 390
+3 -1 390
+3 * 390
+3 * 390 0 390
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=390 0x40334a 148 
* * 12090 3900 4680 2 0 0 2
+5 +1 390 390
+4 * 390
+3 * 390 0 390
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=390 0x4032ca 159 
* * 78854 23814 15690 3 0 0 3 0 0 12146 26 780
+5 * 390
jump=390 +28 * 
* * 
+28 * 390 0 0 1 0 0 1
+4 * 390 390
+1 * 390 390
+1 * 390 390

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 397 0 397 1 0 0 1
+1 * 397 0 0 1 0 0 1
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 0 397 397
+5 0 397 0 0 0 0 0 0 0 0 397
+2 0 397 397
+4 0 397 397
+4 0 397
+5 0 397
+3 0 397
+3 0 397 0 397
fi=(6)
cfi=(5)
cfn=(100)
calls=397 0x40461a 99 
* 0 94294 17165 18011 33 14 20 33 14 20 12910 331 794
+5 0 397
fi=(6)
jump=397 +7 0 
* 0 
+7 0 397 397
+1 0 397 397

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 58305 0 58305
+1 * 58305
+3 * 58305 0 58305
+4 * 58305 0 58305
+4 +1 58305 58305
+4 * 58305 58305
+3 * 58305 58305
+4 * 58305
+4 * 58305
+3 * 58305 58305
+1 * 58305 58305

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 58305 0 58305
+1 * 58305
+3 * 58305 0 58305 1 0 0 1
+4 * 58305 0 58305
+4 +1 58305 58305
+4 * 58305 58305
+3 * 58305 58305
+4 * 58305
+4 * 58305
+3 * 58305 58305
+1 * 58305 58305

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 390
+4 * 390
+3 * 390 0 390
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=390 0x403d7e +42 
* * 5460 1950 1950 1 0 0 1
+5 * 390 390
+1 * 390 390

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 390 0 390 1 0 0 1
+1 * 390
+3 * 390 0 390
+1 * 390
+4 * 390 0 390
+4 +2 390 390
+4 * 390 390
+4 * 390
+3 * 390 390
+4 * 390 390
+3 * 390
+3 * 390
+3 * 390
+4 * 390
+3 * 390 390
+4 * 390 390
+3 -1 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=390 0x403d98 +11 
* * 58964 16404 10620 1 0 0 1 0 0 12146 26 780
+5 +1 390 390
+4 * 390
+3 * 390 0 390
cfn=(192)
calls=390 0x403296 -82 
* * 8970 3120 3120 1 0 0 1
+5 * 390
jump=390 +28 * 
* * 
+28 * 390
+4 * 390 390
+1 * 390 390
+1 * 390 390

fn=(2)
0x402d74 645 1588 0 1588 1 0 0 1
+1 * 1588
+3 * 1588 0 1588 0 0 1 0 0 1
+4 +1 1588 1588
+4 * 1588 1588 0 1 1 0 1 1
+4 * 1588
+3 * 1588 1588
+4 * 1588 1588
+3 * 1588
+3 * 1588
+3 * 1588
+4 * 1588 1588
+1 * 1588 1588

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 +2 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(22)
calls=390 0x404236 -14 
* * 125728 23117 22712 23 20 10 23 20 10 18005 464 780
+5 * 390 390
+4 * 390 0 390
+3 +1 390 390
+4 * 390 390 0 1 0 0 1
+3 * 390 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+3 * 390 390
+4 * 390
+4 * 390
+3 * 390 390
+4 * 390 0 390
+4 +1 390 390
+1 * 390 390

fn=(94)
0x40432a 179 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 +2 390 390
+4 * 390 390 0 1 0 0 1
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(96)
calls=390 0x403fbe -14 
* * 97605 18510 19027 23 10 15 23 10 15 12809 268 780
+5 * 390 390
+4 * 390 0 390
+3 +1 390 390
+4 * 390 390
+3 * 390 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+3 * 390 390
+4 * 390
+4 * 390
+3 * 390 390
+4 * 390 0 390
+4 +1 390 390
+1 * 390 390

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 195 0 195
+1 * 195
+3 * 195 0 0 1 0 0 1
+4 * 195 0 195
+4 * 195 0 195
+4 +2 195 195
+4 * 195 195
+4 * 195 195
+4 * 195 195
+4 * 195
+3 * 195 0 0 0 0 0 0 0 0 195
jcnd=7/195 +51 +10 
* * 
+2 +3 188 188
+4 * 188 188
+4 * 188 188
+4 -1 188 188
+4 * 188
+3 * 188
+3 * 188 0 188
cfi=(3)
cfn=(264)
calls=188 0x4036b1 215 
* * 7144 2444 2632 0 12 4 0 12 4 188
+5 +2 188 188
+4 * 188 188
+4 * 188
+4 * 188 188
+4 * 188 0 188
+4 * 188
jump=188 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246)
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10206 3129 2715 22 3 15 22 3 15 616 50 41
+5 +2 195 195
+1 * 195 195

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40)
0x40333c 113 801 0 801 1 0 0 1
+1 * 801
+3 * 801 0 801 1 0 0 1
+4 +1 801 801
+4 * 801 801
+1 * 801 801

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+3 * 390 0 390
+4 * 390
+4 * 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(10)
cfn=(110)
calls=390 0x404380 726 
* * 3900 1950 1560
+5 * 390 390
+4 * 390 390
+1 * 390 390

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 390 0 390
+1 * 390
+3 * 390 0 390
+1 * 390
+4 * 390 0 390 1 0 0 1
+4 +2 390 390
+4 * 390
+3 * 390 0 390
cfn=(106)
calls=390 0x40325e 113 
* * 2340 1170 780
+5 * 390
+3 * 390 390
+4 * 390 390
+4 * 390 390
+4 * 390 390
+3 -1 390
+3 * 390
+3 * 390 0 390
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=390 0x40326c 148 
* * 12090 3900 4680 4 0 0 4
+5 +1 390 390
+4 * 390
+3 * 390 0 390
cfn=(156)
calls=390 0x4031ec 159 
* * 78694 23838 15486 25 6 0 25 6 0 12162 142 780
+5 * 390
jump=390 +28 * 
* * 
+28 * 390 0 0 1 0 0 1
+4 * 390 390
+1 * 390 390
+1 * 390 390

fn=(158)
0x403ce6 171 397 0 397 1 0 0 1
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 * 397 0 397
+4 +2 397 397
+5 * 397 0 0 0 0 0 0 0 0 397
+2 +1 397 397
+4 * 397 397
+4 * 397 397
+4 * 397
+3 * 397
+3 * 397 0 397
cfi=(5)
cfn=(160)
calls=397 0x4044d6 -65 
* * 53354 14283 8589 22 6 0 22 6 0 11931 145 794
+5 +1 397 397
+1 * 397 397

fn=(12)
0x403b16 134 390 0 390
+1 * 390
+3 * 390 0 390
+1 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=390 0x4043ca -45 
* * 14040 5070 5460 4 0 4 4 0 4
+5 +1 390 390 0 1 0 0 1
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(20)
calls=390 0x404412 +43 
* * 135478 27797 25442 24 20 10 24 20 10 18005 464 780
+5 * 390
jump=390 +28 * 
* * 
+28 * 390
+4 * 390 390
+1 * 390 390
+1 * 390 390

fn=(14)
0x4043ca 90 390 0 390 1 0 0 1
+1 * 390
+3 * 390
+4 * 390 0 390 0 0 1 0 0 1
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=390 0x404804 +24 
* * 7020 2340 2730 2 0 1 2 0 1
+5 * 390 390
+4 * 390 0 390 0 0 2 0 0 2
+7 * 390 390
+4 * 390 0 390 1 0 0 1
+8 * 390 390
+4 * 390 0 390
+8 +1 390 390
+1 * 390 390

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 390 0 390 1 0 0 1
+1 * 390
+3 * 390 0 390
+2 * 390 0 390
+2 * 390 0 390
+1 * 390 0 0 1 0 0 1
+4 * 390 0 390
+4 * 390 0 390
+4 +2 390 390
+4 * 390
+3 * 390 0 390
cfn=(82)
calls=390 0x4039fc 117 
* * 2340 1170 780 2 0 0 2
+5 * 390
+3 * 390 0 390
cfi=(3)
cfn=(84)
calls=390 0x4039ed -88 
* * 2340 1170 780
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(2)
calls=390 0x402d74 645 
* * 5070 2340 780
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390
+3 * 390
+3 * 390 0 390 1 0 0 1
cfn=(86)
calls=390 0x403a0a 134 
* * 129975 30990 29947 30 10 15 30 10 15 12809 268 780
+5 +4 390 390
+4 * 390
+3 * 390 0 390
cfn=(106)
calls=390 0x40325e 113 
* * 2340 1170 780 1 0 0 1
+5 * 390
+3 * 390 390
+4 * 390 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(108)
calls=390 0x403a98 565 
* * 9750 3900 3120 2 0 0 2
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(112)
calls=390 0x403a68 547 
* * 9750 3900 3120
+5 * 390
+3 * 390
+3 * 390
+3 * 390
+3 * 390 0 390
cfi=(11)
cfn=(114)
calls=390 0x403ac9 -60 
* * 166850 53934 51988 7 0 12 7 0 12 5758 350 776
+5 -3 390 390
+4 * 390 0 390
+4 * 390
jump=390 +28 +4 
* * 
+28 +4 390
+4 * 390 390
+1 * 390 390
+2 * 390 390
+2 * 390 390
+1 * 390 390

fn=(188)
0x403d98 171 397 0 397 1 0 0 1
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 * 397 0 397
+4 +2 397 397
+5 * 397 0 0 0 0 0 0 0 0 397 7
+2 +1 397 397
+4 * 397 397
+4 * 397 397
+4 * 397
+3 * 397
+3 * 397 0 397
cfi=(5)
cfn=(190)
calls=397 0x40452a -65 
* * 53585 14291 8807 2 0 0 2 0 0 11932 36 794
+5 +1 397 397
+1 * 397 397

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390 1 0 0 1
+4 * 390 0 390
+4 * 390 0 390
+4 +8 390 0 390
+4 +3 390 390
+4 * 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=390 0x404f37 -22 
* * 87680 27024 24298 14 3 3 14 3 3 5758 362 776 96
+5 +1 390 390
+1 * 390 390

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 390 0 390
+1 * 390
+3 * 390 0 390
+2 * 390 0 390
+1 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +4 390 390
+4 * 390
+3 * 390 0 390
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=390 0x404878 277 
* * 5850 2340 1950 1 0 0 1
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=390 0x404d44 277 
* * 9750 3510 3120 2 0 0 2
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(132)
calls=390 0x404d44 277 
* * 9750 3510 3120
+5 * 390
+3 * 390
+3 * 390
+3 * 390 0 390
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=390 0x404d5e -49 
* * 93530 28974 26638 1 0 12 1 0 12 5758 350 776
+5 +1 390
+4 * 390 390
+1 * 390 390
+2 * 390 390
+1 * 390 390

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 6 1 0 6 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 390 0 390
+1 * 390
+3 * 390 0 390
+1 * 390
+4 * 390 0 390 1 0 0 1
+4 * 390 0 390
+4 * 390 0 390
+4 +10 390 390
+4 * 390
+3 * 390 0 390
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=390 0x404c38 288 
* * 5850 2340 1950 3 0 0 3
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(56)
calls=390 0x404c38 288 
* * 5850 2340 1950
+5 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=390 0x404c52 -36 
* * 129800 41064 38728 20 3 4 20 3 4 5758 362 776 96
+5 +1 390
+4 * 390 390
+1 * 390 390
+1 * 390 390

fn=(60)
0x404c52 424 390 0 390
+1 * 390
+3 * 390 0 390
+2 * 390 0 390
+1 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +4 390 390
+4 * 390
+3 * 390 0 390
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=390 0x40492d 277 
* * 5850 2340 1950 2 0 0 2
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=390 0x404d9d 277 
* * 9750 3510 3120 2 0 1 2 0 1
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(66)
calls=390 0x404d9d 277 
* * 9750 3510 3120
+5 * 390
+3 * 390
+3 * 390
+3 * 390 0 390
cfn=(72)
calls=390 0x404db7 -49 
* * 93530 28974 26638 15 3 3 15 3 3 5758 362 776 96
+5 +1 390
+4 * 390 390
+1 * 390 390
+2 * 390 390
+1 * 390 390

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 432 0 432 1 0 0 1
+1 * 432
+3 * 432
+4 * 432 0 432
+4 +1 432 432
+4 * 432
+3 * 432 0 432 1 0 0 1
cfi=(13)
cfn=(64)
calls=432 -33 -66 
* * 2592 1296 864
+5 * 432 432
+1 * 432 432

fn=(66)
0x404d9d 277 780 0 780
+1 * 780
+3 * 780
+4 * 780 0 780
+4 +1 780 780
+4 * 780
+3 * 780 0 780
cfi=(13)
cfn=(68)
calls=780 0x404f1a -58 
* * 12480 4680 3900 2 0 1 2 0 1
+5 * 780 780
+1 * 780 780

fn=(240)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 5 0 0 5 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 390 0 390
+1 * 390
+3 * 390 0 390
+1 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +10 390 390
+4 * 390
+3 * 390 0 390
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=390 0x404bc6 288 
* * 5850 2340 1950 3 0 0 3
+5 * 390
+3 * 390 390
+4 * 390
+3 * 390 0 390
cfn=(122)
calls=390 0x404bc6 288 
* * 5850 2340 1950
+5 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(126)
calls=390 0x404be0 -36 
* * 129800 41064 38728 4 0 12 4 0 12 5758 350 776
+5 +1 390
+4 * 390 390
+1 * 390 390
+1 * 390 390

fn=(128)
0x404878 277 432 0 432
+1 * 432
+3 * 432
+4 * 432 0 432 1 0 0 1
+4 +1 432 432
+4 * 432
+3 * 432 0 432
cfi=(13)
cfn=(130)
calls=432 -33 -66 
* * 2592 1296 864 0 0 1 0 0 1
+5 * 432 432
+1 * 432 432

fn=(132)
0x404d44 277 780 0 780
+1 * 780
+3 * 780
+4 * 780 0 780
+4 +1 780 780
+4 * 780
+3 * 780 0 780
cfi=(13)
cfn=(134)
calls=780 0x404e98 -58 
* * 12480 4680 3900 2 0 0 2
+5 * 780 780
+1 * 780 780

fn=(138)
0x404d5e 379 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 * 390 0 390
+4 +8 390 0 390
+4 +3 390 390
+4 * 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=390 0x404eb5 -22 
* * 87680 27024 24298 1 0 12 1 0 12 5758 350 776
+5 +1 390 390
+1 * 390 390

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 5 0 0 5 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 780 0 780 1 0 0 1
+1 * 780
+3 * 780
+4 * 780 0 780
+4 +1 780 780
+4 * 780
+3 * 780 0 780
cfi=(13)
cfn=(124)
calls=780 0x404d36 -77 
* * 4680 2340 1560 2 0 0 2
+5 * 780 780
+1 * 780 780

fn=(56)
0x404c38 288 780 0 780 1 0 0 1
+1 * 780
+3 * 780
+4 * 780 0 780 1 0 0 1
+4 +1 780 780
+4 * 780
+3 * 780 0 780
cfi=(13)
cfn=(58)
calls=780 0x404d8f -77 
* * 4680 2340 1560 1 0 0 1
+5 * 780 780
+1 * 780 780

fn=(74)
0x404f37 368 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404 1 0 0 1
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404
+4 * 404 0 404
+4 +1 404 404
+5 * 404 0 0 0 0 0 0 0 0 404
jcnd=7/404 +33 +2 
* * 
+2 +1 397 397
+4 * 397
+8 * 397 397
+4 * 397 397
+4 * 397
+3 * 397 0 0 1 0 0 1
+3 * 397 0 397 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=397 0x3877c83840 0 
* * 77492 22915 22126 11 2 5 11 2 5 5430 365 392 96
* * 397 397 0 1 1 0 1 1 0 0 0 397
+5 +1 404 404
+4 * 404
+8 * 404 404
+4 * 404
+3 +1 404 404
+1 * 404 404

fn=(140)
0x404eb5 368 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404 1 0 0 1
+4 * 404 0 404
+4 * 404 0 404 0 0 1 0 0 1
+4 +2 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404
+4 * 404 0 404
+4 +1 404 404
+5 * 404 0 0 0 0 0 0 0 0 404
jcnd=7/404 +33 +2 
* * 
+2 +1 397 397
+4 * 397
+8 * 397 397
+4 * 397 397
+4 * 397
+3 * 397
+3 * 397 0 397
cob=(2)
cfi=(9)
cfn=(78)
calls=397 0x3877c83840 0 
* * 77492 22915 22126 0 0 16 0 0 16 5430 355 392
* * 397 397 0 0 0 0 0 0 0 0 0 397
+5 +1 404 404
+4 * 404
+8 * 404 404
+4 * 404
+3 +1 404 404
+1 * 404 404

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 780 0 780 1 0 0 1
+1 * 780
+3 * 780 0 780
+4 +1 780 780
+4 * 780 780
+1 * 780 780

fn=(110)
0x404380 726 780 0 780 1 0 0 1
+1 * 780
+3 * 780 0 780
+4 * 780 0 780
+4 * 780 780
+4 * 780 780
+3 * 780 780
+4 * 780 0 780
+3 * 780 780
+1 * 780 780

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 780 0 780 1 0 0 1
+1 * 780
+3 * 780 0 780
+4 +1 780 780
+4 * 780 780
+1 * 780 780

fn=(44)
0x404468 726 780 0 780
+1 * 780
+3 * 780 0 780
+4 * 780 0 780
+4 * 780 780
+4 * 780 780
+3 * 780 780
+4 * 780 0 780 1 0 0 1
+3 * 780 780
+1 * 780 780

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 397 0 397 1 0 0 1
+1 * 397
+3 * 397 0 397
+4 * 397 0 397 1 0 0 1
+4 * 397 397
+1 * 397 397

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 397 0 397 1 0 0 1
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 +4 397 397
+4 * 397 397
+4 * 397
+3 * 397
+3 * 397 0 397
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=397 0x40454c -14 
* * 2382 794 1191 1 0 0 1
+5 +2 397 397
+1 * 397 397

fn=(150)
0x40326c 148 397 0 397
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 * 397 0 397
+4 +3 397 397 0 1 0 0 1
+4 * 397 397
+4 * 397
+3 * 397
+3 * 397 0 397
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=397 0x403d1a -29 
* * 7146 2382 2779 3 0 0 3
+5 +1 397 397
+1 * 397 397

fn=(180)
0x40334a 148 397 0 397
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 * 397 0 397
+4 +3 397 397
+4 * 397 397
+4 * 397
+3 * 397
+3 * 397 0 397
cfn=(182)
calls=397 0x403dcc -29 
* * 7146 2382 2779 2 0 0 2
+5 +1 397 397
+1 * 397 397

fn=(152)
0x403d1a 122 397 0 397 1 0 0 1
+1 * 397
+3 * 397
+4 * 397 0 397
+4 * 397 0 397
+4 +4 397 397
+4 * 397 397
+4 * 397
+3 * 397
+3 * 397 0 397
cfn=(154)
calls=397 0x4044f8 -14 
* * 2382 794 1191 2 0 0 2
+5 +2 397 397
+1 * 397 397

fn=(184)
0x40454c 112 397 0 397 1 0 0 1
+1 * 397
+3 * 397 0 397
+4 * 397 0 397
+4 * 397 397
+1 * 397 397

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2173 376 380 2 2 9 2 2 9 315 30 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 1 3 0 1 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 973 269 172 2 0 0 2 0 0 183 17 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3041 640 572 12 4 5 12 4 5 498 63 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 2 0 1 2 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 6 6 0 6 69 5 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 902 237 158 1 0 0 1 0 0 166 3 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 195 0 195 1 0 0 1
+1 * 195
+3 * 195
+4 * 195 0 195
+4 * 195 0 195
+4 +1 195 195
+4 * 195
+3 * 195 0 195
cfi=(2)
cfn=(2)
calls=195 0x402d74 645 
* * 2535 1170 390
+5 * 195
+3 * 195 0 195
+3 +1 195 195
+6 * 195 0 195
+3 * 195 195
+6 * 195 0 195
+3 +1 195 195
+6 * 195 0 195 1 0 0 1
+3 * 195 195
+6 * 195 0 195
+3 +2 195 0 195
+7 * 195
jump=195 +86 * 
* * 
+2 +1 19305 19305
+3 * 19305
+3 * 19305 19305
+4 * 19305
+3 * 19305
+3 * 19305 0 19305
cfi=(2)
cfn=(144)
calls=19305 0x402d9a 770 
* * 212355 96525 57915
+5 * 19305 19305
+4 * 19305 19305
+5 * 19305
+4 * 19305 0 19305
+5 +1 19305 19305
+3 * 19305
+3 * 19305 19305
+4 * 19305
+3 * 19305
+3 * 19305 0 19305
cfi=(2)
cfn=(146)
calls=19305 0x402dba 770 
* * 212355 96525 57915 1 0 0 1
+5 * 19305 19305
+2 * 19305
+4 * 19305 19305
+5 * 19305
+4 * 19305 0 19305
+5 -2 19305 0 19305
+4 * 19305 19305
+3 * 19305
+3 * 19305 19305
+3 * 19305 0 0 0 0 0 0 0 0 19305 196
jcnd=19110/19305 -93 +1 
* * 
-9 * 195 195 0 1 0 0 1
+3 * 195
+3 * 195 195
+3 * 195 0 0 0 0 0 0 0 0 195
jcnd=195/195 -93 +1 
* * 
+2 +4 195 195
+3 * 195
+3 * 195
+4 * 195 195 0 1 0 0 1
+5 * 195
+4 * 195
+3 * 195 0 195
+5 +1 195 195
+3 * 195
+3 * 195
+4 * 195 195
+5 * 195
+4 * 195
+3 * 195 0 195
+5 +1 195 0 195
+7 * 195
jump=195 0x4016ee * 
* * 
+2 +1 19305 19305
+3 * 19305
+3 * 19305 19305
+4 * 19305
+3 * 19305 0 0 1 0 0 1
+3 * 19305 0 19305
cfi=(2)
cfn=(146)
calls=19305 0x402dba 770 
* * 212355 96525 57915
+5 * 19305 19305
+2 * 19305
+4 * 19305 19305
+5 * 19305 0 19305
+5 +1 19305 19305
+3 * 19305
+3 * 19305 19305
+4 * 19305
+3 * 19305
+3 * 19305 0 19305
cfi=(2)
cfn=(144)
calls=19305 0x402d9a 770 
* * 212355 96525 57915
+5 * 19305 19305
+4 * 19305 19305
+5 * 19305 0 19305
+5 +1 19305 19305
+5 * 19305 19305
+5 * 19305 19305
+5 * 19305
+4 * 19305 0 19305
+5 +1 19305 19305
+5 * 19305 19305
+5 * 19305 19305
+5 * 19305
+4 * 19305 0 19305
+5 -4 19305 0 19305
+4 * 19305 19305
+3 * 19305
+3 * 19305 19305
+3 * 19305 0 0 0 0 0 0 0 0 19305 196
jcnd=19110/19305 0x401672 +1 
* * 
-9 * 195 195 0 1 0 0 1
+3 * 195
+3 * 195 195
+3 * 195 0 0 0 0 0 0 0 0 195
jcnd=195/195 0x401672 +1 
* * 
+6 +6 195 195 0 1 0 0 1
+5 * 195 195
+5 * 195 0 195
+5 +2 195 195
+3 +1 195 0 195
+3 * 195 195
+5 * 195 195
+1 * 195 195

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 195
+7 * 195
+7 * 195
+3 * 195
+3 * 195 0 195
cfi=(2)
cfn=(4)
calls=195 0x4030b2 310 
* * 188366 54340 50485 65 23 18 65 23 18 11929 500 778 96
+5 * 195
+7 * 195
+7 * 195
+3 * 195
+3 * 195 0 195
cfi=(2)
cfn=(80)
calls=195 0x402ff4 310 
* * 174102 52028 48633 43 3 26 43 3 26 9285 387 778
+5 * 195 0 0 1 0 0 1
+7 * 195
+7 * 195
+3 * 195
+3 * 195 0 195
cfn=(142)
calls=195 0x401585 -52 
* * 2020395 892905 466635 8 0 0 8 0 0 39000 392
+5 * 195 0 195
+8 * 195 195
+6 * 195 0 195
+6 * 195
+7 * 195
+3 * 195 0 195
cfi=(2)
cfn=(148)
calls=195 0x402df4 414 
* * 51242 16209 11643 31 6 0 31 6 0 6081 74 390
+5 * 195
+7 * 195
+3 * 195 0 195 1 0 0 1
cfi=(2)
cfn=(178)
calls=195 0x402e74 414 
* * 51322 16197 11745 7 0 0 7 0 0 6073 15 390
+5 +2 195
+7 * 195
+7 * 195
+3 * 195
+3 * 195 0 195
cfi=(2)
cfn=(4)
calls=195 0x4030b2 310 
* * 187672 54301 50345 2 1 1 2 1 1 11834 326 778
+5 * 195
+7 * 195
+7 * 195
+3 * 195
+3 * 195 0 195
cfi=(2)
cfn=(80)
calls=195 0x402ff4 310 
* * 173813 52006 48512 2 7 1 2 7 1 9282 231 778
+5 * 195 195
+6 * 195 0 0 1 0 0 1
+7 * 195
+7 * 195 0 195
+6 * 195 195
+8 * 195
+3 * 195
+3 * 195 0 195
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=195 0x401719 -33 
* * 938145 390390 215280 4 0 0 4 0 0 19500 196
+5 * 195 0 195
+8 * 195 195
+6 * 195 0 195
+6 * 195
+7 * 195 0 0 1 0 0 1
+3 * 195 0 195
cfi=(2)
cfn=(148)
calls=195 0x402df4 414 
* * 51242 16209 11643 0 0 0 0 0 0 6081 68 390
+5 * 195
+7 * 195
+3 * 195 0 195
cfi=(2)
cfn=(178)
calls=195 0x402e74 414 
* * 51322 16197 11745 0 0 0 0 0 0 6073 11 390
+5 +2 195 195
+7 * 195
+3 * 195 0 195
cfi=(2)
cfn=(2)
calls=195 0x402d74 645 
* * 2535 1170 390
+5 * 195 195
+6 * 195
+3 * 195
+3 * 195
+3 * 195 195
+7 * 195
+3 * 195 0 0 1 0 0 1
+3 * 195 0 195
cfi=(2)
cfn=(144)
calls=195 0x402d9a 770 
* * 2145 975 585
+5 * 195
+3 * 195
+7 * 195
+3 * 195
+3 * 195 0 195
cfi=(2)
cfn=(200)
calls=195 0x402eda 901 
* * 23350 8375 6549 38 18 16 38 18 16 1165 79 41
+5 +1 195 195
+7 * 195
+3 * 195 0 195
cfi=(2)
cfn=(10)
calls=195 0x402f54 645 
* * 2535 1170 390 0 1 0 0 1
+5 * 195 195
+6 * 195
+3 * 195
+3 * 195
+3 * 195 195
+7 * 195 0 0 1 0 0 1
+3 * 195
+3 * 195 0 195
cfi=(2)
cfn=(146)
calls=195 0x402dba 770 
* * 2145 975 585
+5 * 195
+3 * 195
+7 * 195
+3 * 195
+3 * 195 0 195
cfi=(2)
cfn=(244)
calls=195 0x402f7a 901 
* * 22553 8143 6371 23 15 19 23 15 19 999 50 41
+5 +1 195 195
+7 * 195
+3 * 195 0 195
cfi=(2)
cfn=(10)
calls=195 0x402f54 645 
* * 2535 1170 390
+5 * 195 195
+6 * 195
+3 * 195
+3 * 195
+3 * 195 195 0 1 0 0 1
+7 * 195
+3 * 195
+3 * 195 0 195
cfi=(2)
cfn=(146)
calls=195 0x402dba 770 
* * 2145 975 585
+5 * 195 195
+2 * 195
+4 * 195 195
+8 * 195 195
+8 * 195 0 195
+8 +1 195 195
+7 * 195
+3 * 195 0 195
cfi=(2)
cfn=(2)
calls=195 0x402d74 645 
* * 2535 1170 390
+5 * 195 195 0 1 0 0 1
+6 * 195
+3 * 195
+3 * 195
+3 * 195 195
+7 * 195
+3 * 195
+3 * 195 0 195
cfi=(2)
cfn=(144)
calls=195 0x402d9a 770 
* * 2145 975 585
+5 * 195 195
+4 * 195 195
+8 * 195
+4 * 195 195
+8 * 195
+3 * 195 0 195
+8 +2 195 0 195
+7 -12 195 195
+8 * 195 195
+7 * 195 0 0 0 0 0 0 0 0 195 1
jcnd=1/195 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 195
+7 * 195
+3 * 195 0 195
cfi=(2)
cfn=(2)
calls=195 0x402d74 645 
* * 2535 1170 390 2 0 1 2 0 1
+5 * 195
+3 * 195 195
+7 * 195
+3 * 195 0 195
cfi=(2)
cfn=(2)
calls=195 0x402d74 645 
* * 2535 1170 390 0 1 0 0 1
+5 * 195
+3 * 195 0 0 0 0 0 0 0 0 195 3
+2 * 195 0 0 1 0 0 1
+5 * 195
jump=195 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 195
+2 * 195 0 0 0 0 0 0 0 0 195
jcnd=195/195 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 195 0 195
+1 * 195
+3 * 195
+4 * 195 0 195
+4 * 195 0 195
+4 * 195 0 195
+5 +1 195 195
+4 * 195
+3 * 195 0 195
cfi=(2)
cfn=(2)
calls=195 0x402d74 645 
* * 2535 1170 390
+5 * 195
+3 * 195 0 195
+3 +1 195 195 0 1 0 0 1
+6 * 195 0 195
+3 * 195 195
+6 * 195 0 195
+3 +2 195 0 195
+7 * 195
jump=195 +86 * 
* * 
+2 +1 19305 19305
+3 * 19305
+3 * 19305 19305
+4 * 19305
+3 * 19305
+3 * 19305 0 19305
cfi=(2)
cfn=(144)
calls=19305 0x402d9a 770 
* * 212355 96525 57915
+5 * 19305 19305
+4 * 19305 19305
+5 * 19305
+4 * 19305 0 19305
+5 +1 19305 19305
+3 * 19305
+3 * 19305 19305
+4 * 19305
+3 * 19305
+3 * 19305 0 19305
cfi=(2)
cfn=(146)
calls=19305 0x402dba 770 
* * 212355 96525 57915
+5 * 19305 19305
+2 * 19305
+4 * 19305 19305
+5 * 19305
+4 * 19305 0 19305
+5 -2 19305 0 19305
+4 * 19305 19305
+3 * 19305
+3 * 19305 19305
+3 * 19305 0 0 0 0 0 0 0 0 19305 196
jcnd=19110/19305 -93 +1 
* * 
-9 * 195 195 0 1 0 0 1
+3 * 195
+3 * 195 195
+3 * 195 0 0 0 0 0 0 0 0 195
jcnd=195/195 -93 +1 
* * 
+2 +4 195 195
+3 * 195
+3 * 195 0 0 1 0 0 1
+4 * 195 195
+5 * 195
+4 * 195
+3 * 195 0 195
+5 +1 195 195
+3 * 195
+3 * 195
+4 * 195 195
+5 * 195
+4 * 195
+3 * 195 0 195
+5 +1 195 195
+5 * 195 195
+5 * 195 195
+5 * 195 0 0 1 0 0 1
+4 * 195
+3 * 195 0 195
+5 +2 195 195
+3 +1 195 0 195
+3 * 195 195
+5 * 195 195
+1 * 195 195

fl=(4)
fn=(174)
0x403ccc 121 390 0 390
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 390
+4 * 390
+3 * 390 0 390
cfi=(5)
cfn=(176)
calls=390 0x4044cc -35 
* * 1950 780 780
+5 * 390 390
+1 * 390 390

fn=(90)
0x4047b2 115 390 0 390 1 0 0 1
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390 1 0 0 1
+4 +1 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(5)
cfn=(92)
calls=390 0x4049d4 -35 
* * 2340 780 1170 1 0 0 1
+5 * 390 390
+1 * 390 390

fn=(194)
0x403d7e 121 390 0 390 1 0 0 1
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 390
+4 * 390
+3 * 390 0 390
cfi=(5)
cfn=(196)
calls=390 0x404520 -35 
* * 1950 780 780
+5 * 390 390
+1 * 390 390

fn=(16)
0x404804 115 390 0 390 1 0 0 1
+1 * 390
+3 * 390
+4 * 390 0 390
+4 * 390 0 390
+4 +1 390 390
+4 * 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(5)
cfn=(18)
calls=390 0x404a28 -35 
* * 2340 780 1170 1 0 1 1 0 1
+5 * 390 390
+1 * 390 390

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 677 677 0 1 0 0 1
+6 0 677
+2 0 677 0 0 0 0 0 0 0 0 677 4
+2 0 677 677

fn=(38) _int_malloc
0x3877c79a00 0 794 0 794 1 0 0 1
+2 0 794
+3 0 794 0 794
+2 0 794 0 794
+2 0 794 0 794 0 0 1 0 0 1
+2 0 794
+3 0 794 0 794
+1 0 794 0 794
+1 0 794
+4 0 794
+4 0 794 0 0 0 0 0 0 0 0 794
+6 0 794
+4 0 794
+6 0 794
+3 0 794
+4 0 794
+4 0 794
+4 0 794
+3 0 794 0 0 0 0 0 0 0 0 794
+6 0 794 794 0 1 1 0 1 1
+7 0 794 0 0 0 0 0 0 0 0 794 7
jcnd=672/794 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 117 117
+6 0 117
+4 0 117
+2 0 117 0 0 0 0 0 0 0 0 117
+6 0 117
+3 0 117
+4 0 117 117
+1 0 117 117
+1 0 117 117
+2 0 117 117
+2 0 117 117
+2 0 117 117
+2 0 117 117
-14 0 677
+4 0 677 677
+1 0 677 677
+1 0 677 677
+2 0 677 677
+2 0 677 677
+2 0 677 677
+2 0 677 677
+7 0 689
+7 0 689 0 0 1 0 0 1 0 0 689 3
jcnd=2/689 0x3877c79b70 0 
* 0 
+2 0 687
+3 0 687
+5 0 687
+3 0 687
+4 0 687 0 687
+4 0 687
+2 0 687
+5 0 687 687 0 0 7 0 0 7
+4 0 687
+3 0 687 0 0 0 0 0 0 0 0 687
jcnd=687/687 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 929 254 195 8 1 0 8 1 0 193 25
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 688 0 0 1 0 0 1
+3 0 688
+3 0 688
+3 0 688
+4 0 688
+3 0 688
+4 0 688 0 688
+5 0 688
+3 0 688 0 688
+4 0 688 0 688
+4 0 688 0 688
+5 0 688
+3 0 688
+3 0 688
+3 0 688
+3 0 688
+4 0 688
+4 0 688 0 0 1 0 0 1
+4 0 688 0 688
+4 0 688
+4 0 688 0 688
+5 0 688 0 688
+5 0 688
+3 0 688
+3 0 688 0 688
+5 0 688
+5 0 688
+3 0 688 0 688
+4 0 688 0 688
+4 0 688
+6 0 688 0 688
+4 0 688 0 688
+5 0 688 0 0 1 0 0 1
+3 0 688
+3 0 688
+3 0 688
jump=688 +87 0 
* 0 
+8 0 207
+3 0 207
+4 0 207
+2 0 207
+2 0 207
+3 0 207
+3 0 207
+3 0 207
+2 0 207
+2 0 207
+5 0 207
+2 0 207 207 0 0 1 0 0 1
+4 0 207
+3 0 207
+4 0 207 0 207
+4 0 207 0 207 0 0 1 0 0 1
+8 0 207
+7 0 207 0 207
+4 0 207 0 207 0 0 1 0 0 1
+4 0 207 0 207
+4 0 207 0 0 0 0 0 0 0 0 207
-38 0 276
+3 0 276
+4 0 276 0 276
+4 0 276 0 276
+8 0 276
+7 0 276 0 276
+4 0 276 0 276
+4 0 276 0 276
+4 0 276 0 0 0 0 0 0 0 0 276
+6 0 1172 1172 0 1 0 0 1
+4 0 1172
+3 0 1172 0 0 0 0 0 0 0 0 1172 21
jcnd=416/1172 0x3877c79ef0 0 
* 0 
+6 0 756 756
+4 0 756 756 0 0 1 0 0 1
+4 0 756
+4 0 756 0 0 0 0 0 0 0 0 756
+6 0 756 756 0 1 1 0 1 1
+7 0 756 0 0 0 0 0 0 0 0 756
+6 0 756
+4 0 756
+7 0 756 0 0 0 0 0 0 0 0 756 5
jcnd=6/756 +11 0 
* 0 
+2 0 750
+3 0 750 0 0 0 0 0 0 0 0 750 66
jcnd=670/750 0x3877c79e28 0 
* 0 
+6 0 495
+3 0 495 0 495
+4 0 495 0 495
+5 0 495 0 0 0 0 0 0 0 0 495 8
jcnd=12/495 0x3877c7a090 0 
* 0 
+6 0 483
+7 0 483 0 0 0 0 0 0 0 0 483 13
jcnd=207/483 0x3877c79c50 0 
* 0 
+6 0 276 0 0 1 0 0 1
+3 0 276
+4 0 276
+4 0 276 0 0 0 0 0 0 0 0 276 4
jcnd=136/276 0x3877c79db0 0 
* 0 
+6 0 140
+3 0 140
+4 0 140
+2 0 140
+2 0 140
+3 0 140
+3 0 140
+8 0 140
+3 0 140
+2 0 140
+2 0 140
+4 0 140 140 0 0 3 0 0 3
+4 0 140
+3 0 140 0 0 1 0 0 1 0 0 140 6
jcnd=140/140 0x3877c79e15 0 
* 0 
-36 0 136
+2 0 136
+2 0 136
+3 0 136
+3 0 136
+8 0 136
+3 0 136
+2 0 136
+2 0 136
+4 0 136 136
+4 0 136
+3 0 136 0 0 0 0 0 0 0 0 136
jcnd=136/136 0x3877c79e15 0 
* 0 
0x3877c79db0 0 136 0 0 1 0 0 1
+3 0 136
+4 0 136
+4 0 136 0 0 0 0 0 0 0 0 136
+2 0 136
+3 0 136 0 0 1 0 0 1
+7 0 136
jump=136 0x3877c79d18 0 
* 0 
+78 0 276 0 276
+4 0 276 0 276
+4 0 276
+3 0 276
jump=276 0x3877c79c73 0 
* 0 
+8 0 670 670 0 1 0 0 1
+4 0 670
+3 0 670 0 0 0 0 0 0 0 0 670 255
jcnd=335/670 0x3877c79ce1 0 
* 0 
+6 0 335 335
+5 0 335 0 0 0 0 0 0 0 0 335 10
jcnd=74/335 0x3877c79ce1 0 
* 0 
+6 0 261 0 0 1 0 0 1
+3 0 261
+3 0 261
+3 0 261
+7 0 261 0 261
+4 0 261 0 261
+4 0 261
+3 0 261 0 261
+4 0 261 0 261 0 0 18 0 0 18
+4 0 261 0 261
+4 0 261 0 0 0 0 0 0 0 0 261 8
jcnd=119/261 +18 0 
* 0 
+2 0 142 0 142 0 0 1 0 0 1
+8 0 142 0 142
+8 0 142
+7 0 142 0 142 1 0 0 1
+4 0 142
+3 0 142
+3 0 142
+3 0 142
+4 0 142
+3 0 142
+4 0 142
+3 0 142
+3 0 142
+4 0 142 0 142
+4 0 142 0 142
+4 0 142
+4 0 142
+3 0 142 0 142
cfn=(104)
calls=142 0x3877c77180 0 
* 0 568 284 0 0 0 0 0 0 0 142
-56 0 119
+7 0 119 0 119
+4 0 119
+3 0 119
+3 0 119
+3 0 119
+4 0 119
+3 0 119
+4 0 119
+3 0 119
+3 0 119
+4 0 119 0 119
+4 0 119 0 119 0 0 3 0 0 3
+4 0 119
+4 0 119
+3 0 119 0 119
cfn=(104)
calls=119 0x3877c77180 0 
* 0 476 238 0 0 0 0 0 0 0 119
+5 0 261
+3 0 261
jump=261 0x3877c79ae3 0 
* 0 
+55 0 416 0 0 1 0 0 1
+7 0 416
+3 0 416 0 0 0 0 0 0 0 0 416 2
jcnd=2/416 0x3877c7a0b0 0 
* 0 
+6 0 416 416 0 1 0 0 1
+4 0 416
+3 0 416
+3 0 416
+2 0 416
+4 0 416
+3 0 416
+3 0 416
+2 0 416
+2 0 416
+2 0 416
+2 0 416 416
+8 0 416
+5 0 416
+5 0 416
+2 0 416 0 0 0 0 0 0 0 0 416
-2 0 92
+2 0 92 0 0 0 0 0 0 0 0 92 1
jcnd=1/92 +14 0 
* 0 
+2 0 507
+2 0 507 0 0 0 0 0 0 0 0 507 27
jcnd=228/507 +64 0 
* 0 
+2 0 279
+8 0 279
+3 0 279
+3 0 279 0 0 0 0 0 0 0 0 279
-6 0 249
+3 0 249
+3 0 249 0 0 0 0 0 0 0 0 249
+2 0 528
+2 0 528 528
+8 0 528
+2 0 528 0 0 0 0 0 0 0 0 528 12
jcnd=248/528 -20 0 
* 0 
+2 0 280
+2 0 280
+5 0 280
+3 0 280
+3 0 280
+2 0 280
+2 0 280
+5 0 280 0 0 0 0 0 0 0 0 280 12
jcnd=138/280 +14 0 
* 0 
+2 0 142
+2 0 142
+4 0 142
+2 0 142
+2 0 142 0 0 0 0 0 0 0 0 142 3
jcnd=5/142 -8 0 
* 0 
-8 0 1421
+4 0 1421
+2 0 1421
+2 0 1421 0 0 0 0 0 0 0 0 1421 161
jcnd=1224/1421 -8 0 
* 0 
-2 0 228 0 0 1 0 0 1
+2 0 228 0 0 0 0 0 0 0 0 228 9
jcnd=192/228 -8 0 
* 0 
+2 0 508 508 0 0 7 0 0 7
+4 0 508 0 0 1 0 0 1
+3 0 508 0 0 0 0 0 0 0 0 508 98
jcnd=416/508 0x3877c7a1cf 0 
* 0 
+6 0 92
+2 0 92
+4 0 92
+2 0 92
+2 0 92
+2 0 92 0 92
+8 0 92
jump=92 0x3877c79f30 0 
* 0 
0x3877c7a090 0 12 0 0 1 0 0 1
+7 0 12 0 12
+6 0 12
+3 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 0 0 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 416 416 0 1 1 0 1 1
+4 0 416 416
+4 0 416
+3 0 416 416
+4 0 416
+4 0 416
+3 0 416
+3 0 416 416
+4 0 416 0 0 0 0 0 0 0 0 416
+6 0 416 416
+4 0 416 0 0 0 0 0 0 0 0 416
+6 0 416 416 0 1 0 0 1
+8 0 416 0 416
+4 0 416 0 416
+4 0 416 0 0 0 0 0 0 0 0 416 6
jcnd=138/416 +38 0 
* 0 
+2 0 278 278 0 0 2 0 0 2
+4 0 278
+3 0 278 0 0 0 0 0 0 0 0 278
+2 0 278 278
+5 0 278 0 0 0 0 0 0 0 0 278
+6 0 278 278
+4 0 278 0 278
+4 0 278 278
+4 0 278 0 278
+4 0 278
+4 0 278 0 0 0 0 0 0 0 0 278
-4 0 138
+4 0 138 0 0 0 0 0 0 0 0 138
jcnd=17/138 0x3877c7a2e3 0 
* 0 
+6 0 399 399
+4 0 399 399 0 1 0 0 1
+4 0 399 0 0 0 0 0 0 0 0 399
+6 0 399
+4 0 399
+7 0 399 0 399 0 0 8 0 0 8
+4 0 399 0 399
+4 0 399 0 399
+4 0 399 0 399
+4 0 399 0 0 0 0 0 0 0 0 399 3
jcnd=2/399 +7 0 
* 0 
+2 0 397 0 397
+5 0 397
+7 0 397 0 0 0 0 0 0 0 0 397 10
jcnd=253/397 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 144 0 144 0 0 1 0 0 1
+8 0 144 0 144 1 0 0 1
+8 0 144
+7 0 144 0 144 0 0 3 0 0 3
+4 0 144
+3 0 144
+3 0 144
+4 0 144
+3 0 144
+4 0 144
+3 0 144
+3 0 144
+4 0 144 0 144
+4 0 144 0 144 0 0 1 0 0 1
+4 0 144
jump=144 +71 0 
* 0 
-46 0 255
+7 0 255 0 255
+4 0 255
+3 0 255
+3 0 255
+4 0 255
+3 0 255
+4 0 255
+3 0 255
+3 0 255
+4 0 255 0 255
+4 0 255 0 255
+4 0 255
jump=255 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 17
+7 0 17 0 17
+6 0 17
+3 0 17 0 0 0 0 0 0 0 0 17
jcnd=17/17 +7 0 
* 0 
+7 0 416
+4 0 416 0 0 1 0 0 1
+3 0 416
+3 0 416 0 416
cfn=(104)
calls=416 0x3877c77180 0 
* 0 1664 832 0 1 0 0 1 0 0 416 4
+5 0 416
+3 0 416
jump=416 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 794 0 794 1 0 0 1
+5 0 794 0 794
+5 0 794
+3 0 794 0 794
+5 0 794
+4 0 794 794 0 0 1 0 0 1
+7 0 794 794 0 0 1 0 0 1
+3 0 794
+3 0 794 0 0 0 0 0 0 0 0 794
+6 0 794 794 0 0 1 0 0 1
+7 0 794 794 0 1 1 0 1 1
+4 0 794
+3 0 794 0 0 0 0 0 0 0 0 794
+2 0 794 794 0 0 1 0 0 1
+3 0 794
+3 0 794 0 0 0 0 0 0 0 0 794
jcnd=794/794 +97 0 
* 0 
+18 0 794
+3 0 794
+3 0 794 0 794
cfn=(38)
calls=794 0x3877c79a00 0 
* 0 149147 20411 26017 41 28 38 41 28 38 21305 806
+5 0 794
+3 0 794
+3 0 794 0 0 0 0 0 0 0 0 794
+2 0 794
+3 0 794 0 0 0 0 0 0 0 0 794
+2 0 794
+3 0 794 0 0 0 0 0 0 0 0 794 9
+2 0 794 794
+7 0 794 0 0 0 0 0 0 0 0 794
jcnd=794/794 +13 0 
* 0 
+13 0 794 0 794
+2 0 794 0 0 0 0 0 0 0 0 794 10
+6 0 794
+3 0 794 794
+4 0 794 794
+5 0 794 794
+5 0 794
+4 0 794 794
+1 0 794 0 0 1 0 0 1
+5 0 794 794 0 0 1 0 0 1
+7 0 794 0 0 0 0 0 0 0 0 794
jcnd=794/794 +14 0 
* 0 
+14 0 794 0 794 1 0 0 1
+3 0 794 0 0 0 0 0 0 0 0 794
+6 0 794
jump=794 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 794 0 794 1 0 0 1
+2 0 794
+3 0 794
+3 0 794 0 794
+2 0 794
+3 0 794 0 794
+1 0 794
+3 0 794 0 794
+1 0 794
+3 0 794
+4 0 794
+3 0 794 0 0 0 0 0 0 0 0 794
+6 0 794
+4 0 794
+3 0 794 0 0 0 0 0 0 0 0 794 7
jcnd=10/794 0x3877c838d1 0 
* 0 
+2 0 784
+3 0 784
+3 0 784
+3 0 784
+3 0 784
+3 0 784 0 0 0 0 0 0 0 0 784
jcnd=784/784 +41 0 
* 0 
+41 0 784 0 0 1 0 0 1
+3 0 784 0 0 0 0 0 0 0 0 784
jcnd=784/784 0x3877c839c0 0 
* 0 
+24 0 784
+3 0 784
+4 0 784
+3 0 784
+3 0 784
+3 0 784
+3 0 784
+3 0 784 0 0 0 0 0 0 0 0 784 389
jcnd=400/784 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 394
+10 0 394 394 0 0 1 0 0 1
+3 0 394
+4 0 394 0 394
+3 0 394
+4 0 394
+4 0 394 0 0 0 0 0 0 0 0 394
jcnd=394/394 -18 0 
* 0 
-18 0 1238 1238
+3 0 1238
+4 0 1238 0 1238
+3 0 1238
+4 0 1238
+4 0 1238 0 0 0 0 0 0 0 0 1238 11
jcnd=844/1238 -18 0 
* 0 
+2 0 794
+4 0 794
+3 0 794 794
+1 0 794 794
+1 0 794 794
+2 0 794 794 0 1 0 0 1
+2 0 794 794
0x3877c839c0 0 784 0 0 1 0 0 1
+3 0 784
+3 0 784
+3 0 784
+4 0 784 0 784 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=784 0x3877c89b20 0 
* 0 110062 40228 38660 6 1 20 6 1 20 5278 313 784 96
+5 0 784
jump=784 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 794 794 0 1 1 0 1 1
+7 0 794 794 0 0 1 0 0 1
+3 0 794
+3 0 794 0 0 1 0 0 1 0 0 794
+6 0 794
+3 0 794 0 0 0 0 0 0 0 0 794
+6 0 794 794
+4 0 794
+4 0 794
+2 0 794 0 0 0 0 0 0 0 0 794 1
+2 0 794
+2 0 794
+7 0 794 0 0 0 0 0 0 0 0 794
jcnd=794/794 +14 0 
* 0 
+14 0 794
+2 0 794
cfn=(170) _int_free
calls=794 0x3877c78650 0 
* 0 82325 22222 13426 19 2 0 19 2 0 19893 180

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 4
jcnd=5/6 +16 0 
* 0 
+2 0 1 1
+5 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 5
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 8
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 794 0 794 1 0 0 1
+2 0 794 0 794
+2 0 794 0 794
+2 0 794
+3 0 794 0 794
+2 0 794 0 794
+1 0 794 0 794
+1 0 794
+3 0 794
+4 0 794 794
+4 0 794 0 794
+4 0 794
+3 0 794
+4 0 794
+3 0 794
+3 0 794
+3 0 794 0 0 1 0 0 1 0 0 794
+6 0 794
+4 0 794 0 0 0 0 0 0 0 0 794
+6 0 794
+4 0 794 0 0 0 0 0 0 0 0 794
+6 0 794 794
+7 0 794 0 0 0 0 0 0 0 0 794 4
jcnd=670/794 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 670
+2 0 670 0 0 0 0 0 0 0 0 670
+6 0 670 670 0 1 0 0 1
+4 0 670
+3 0 670
+2 0 670 0 0 0 0 0 0 0 0 670
jcnd=670/670 0x3877c78a40 0 
* 0 
+6 0 670 670
+4 0 670
+3 0 670 0 0 0 0 0 0 0 0 670
+6 0 670 670
+5 0 670
+4 0 670 0 0 0 0 0 0 0 0 670
jcnd=670/670 0x3877c7907c 0 
* 0 
+6 0 670 670
+5 0 670
+4 0 670 0 0 0 0 0 0 0 0 670
+6 0 670
+4 0 670 0 0 1 0 0 1 0 0 670
+6 0 670
+4 0 670 670
+7 0 670 0 0 0 0 0 0 0 0 670
+6 0 670 670
+6 0 670
+2 0 670 0 0 0 0 0 0 0 0 670
+6 0 670 670
+4 0 670 0 0 0 0 0 0 0 0 670 3
jcnd=667/670 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3
jcnd=3/3 +15 0 
* 0 
+15 0 670 670 0 1 0 0 1
+4 0 670 0 0 0 0 0 0 0 0 670
+6 0 670 670 0 0 1 0 0 1
+6 0 670 0 0 1 0 0 1 0 0 670 50
jcnd=32/670 0x3877c78a78 0 
* 0 
+6 0 638 638
+5 0 638 638
+5 0 638 638
+4 0 638 0 0 0 0 0 0 0 0 638
+6 0 638 638
+4 0 638 0 0 0 0 0 0 0 0 638
+6 0 638 638
+9 0 638 0 638
+4 0 638 0 638
+4 0 638 0 0 0 0 0 0 0 0 638 8
jcnd=361/638 +16 0 
* 0 
+2 0 277 277
+5 0 277
+3 0 277 0 0 0 0 0 0 0 0 277 1
jcnd=1/277 0x3877c78ee4 0 
* 0 
+6 0 638 0 0 1 0 0 1
+3 0 638
+4 0 638 638
+4 0 638 638
+4 0 638 0 0 0 0 0 0 0 0 638
-12 0 32
+4 0 32 32
+4 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32
+6 0 670
+7 0 670 0 670
+4 0 670 0 670
+4 0 670 0 0 0 0 0 0 0 0 670 112
jcnd=260/670 +18 0 
* 0 
+2 0 410 0 410
+8 0 410 0 410
+8 0 410 0 410
+4 0 410
+3 0 410 0 410
+4 0 410
+4 0 410 0 410
+4 0 410 0 410
+4 0 410
+7 0 410 0 0 0 0 0 0 0 0 410
jcnd=410/410 0x3877c78b20 0 
* 0 
-30 0 260 0 260
+4 0 260
+3 0 260 0 260 1 0 0 1
+4 0 260
+4 0 260 0 260
+4 0 260 0 260
+4 0 260
+7 0 260 0 0 0 0 0 0 0 0 260
jcnd=260/260 0x3877c78b20 0 
* 0 
0x3877c78a40 0 670 0 0 1 0 0 1
+5 0 670 670
+4 0 670 670
+7 0 670 0 0 0 0 0 0 0 0 670
jcnd=670/670 +16 0 
* 0 
+16 0 670 0 670
+5 0 670 0 0 0 0 0 0 0 0 670
+6 0 670
+3 0 670
jump=670 0x3877c7878f 0 
* 0 
+10 0 32 0 32
+6 0 32 0 0 1 0 0 1
jump=32 0x3877c78885 0 
* 0 
0x3877c78b20 0 670 670 0 1 0 0 1
+4 0 670
+2 0 670 0 0 0 0 0 0 0 0 670
+6 0 670 670
+7 0 670 0 0 0 0 0 0 0 0 670
jcnd=670/670 +15 0 
* 0 
+15 0 670 0 670 1 0 0 1
+4 0 670 0 0 0 0 0 0 0 0 670
+6 0 670
+4 0 670 670
+1 0 670 670
+1 0 670 670
+2 0 670 670
+2 0 670 670
+2 0 670 670
+2 0 670 670
0x3877c78ee4 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+5 0 1 0 1
+4 0 1 1
+5 0 1 0 1 1 0 0 1
+4 0 1
jump=1 0x3877c78882 0 
* 0 
0x3877c7907c 0 670 670 0 1 1 0 1 1
+4 0 670 0 0 1 0 0 1
+7 0 670
+4 0 670
+3 0 670
+3 0 670 0 0 0 0 0 0 0 0 670
jcnd=670/670 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 784 0 0 1 0 0 1
+7 0 784
+3 0 784
+3 0 784 784 0 0 1 0 0 1
+4 0 784
+4 0 784 0 0 0 0 0 0 0 0 0 0 784 96
jump=96 0x3877c89be8 0 
* 0 
jump=104 0x3877c89bd0 0 
* 0 
jump=96 0x3877c89bb8 0 
* 0 
jump=96 +11 0 
* 0 
jump=96 0x3877c89c48 0 
* 0 
jump=98 0x3877c89c30 0 
* 0 
jump=96 0x3877c89c18 0 
* 0 
jump=102 0x3877c89c00 0 
* 0 
+11 0 96 96
+3 0 96
+4 0 96
+4 0 96 96
+4 0 96
+4 0 96 0 96
+4 0 96
+9 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96
+4 0 96
+4 0 96
+4 0 96 0 0 0 0 0 0 0 0 96
jcnd=8/96 0x3877c89c60 0 
* 0 
-40 0 4686 4686
+4 0 4686 0 4686
+4 0 4686 4686
+4 0 4686 0 4686 0 0 4 0 0 4
+4 0 4686 4686
+4 0 4686 0 4686 0 0 1 0 0 1
+4 0 4686 4686
+4 0 4686 0 4686
+4 0 4686
+4 0 4686
+4 0 4686 0 0 0 0 0 0 0 0 4686 309
jcnd=748/4686 0x3877c89c60 0 
* 0 
-32 0 98 98
+4 0 98 0 98
+4 0 98 98
+4 0 98 0 98
+4 0 98 98
+4 0 98 0 98
+4 0 98
+4 0 98
+4 0 98 0 0 0 0 0 0 0 0 98
jcnd=10/98 0x3877c89c60 0 
* 0 
-24 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96
+4 0 96
+4 0 96
+4 0 96 0 0 0 0 0 0 0 0 96
jcnd=8/96 0x3877c89c60 0 
* 0 
-16 0 102 102 0 1 0 0 1
+4 0 102 0 102
+4 0 102 0 0 1 0 0 1
+4 0 102
+4 0 102 0 0 0 0 0 0 0 0 102 4
jcnd=10/102 0x3877c89c60 0 
* 0 
+6 0 4294
+4 0 4294 4294
+3 0 4294 0 4294 0 0 1 0 0 1
+3 0 4294 4294
+4 0 4294 0 4294
+4 0 4294 4294
+4 0 4294 0 4294 0 0 11 0 0 11
+4 0 4294 4294
+4 0 4294 0 4294 0 0 2 0 0 2
+4 0 4294
jump=4294 -80 0 
* 0 
-30 0 96 96
+3 0 96 0 96
+3 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96 0 0 1 0 0 1
+4 0 96 96
+4 0 96 0 96
+4 0 96
jump=96 -80 0 
* 0 
-24 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104
jump=104 -80 0 
* 0 
-16 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96
+4 0 96
jump=96 -80 0 
* 0 
+8 0 96 96
+3 0 96
+4 0 96 0 0 1 0 0 1
+4 0 96
+4 0 96
jump=96 -39 0 
* 0 
+9 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104
+3 0 104
+4 0 104
jump=104 -72 0 
* 0 
+8 0 96
+4 0 96 96
+3 0 96 0 0 0 0 0 0 0 0 96
+2 0 96
+4 0 96
jump=96 -99 0 
* 0 
+11 0 102 102 0 1 0 0 1
+3 0 102
+4 0 102
+4 0 102
+4 0 102
jump=102 0x3877c89b78 0 
* 0 
+9 0 96 96
+3 0 96
+4 0 96
+4 0 96
+4 0 96
jump=96 0x3877c89b70 0 
* 0 
+9 0 98 98
+3 0 98
+4 0 98
+4 0 98
+4 0 98
jump=98 0x3877c89b68 0 
* 0 
+9 0 96 96
+3 0 96
+4 0 96
+4 0 96
+4 0 96
jump=96 0x3877c89b60 0 
* 0 
+9 0 784 0 784 1 0 0 1
+3 0 784 784

totals: 3983259 1593098 950117 237 77 83 237 77 83 127889 2333 4754 96
