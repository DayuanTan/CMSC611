version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 788


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 944852563 - 944976730
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 332 0 0 1 0 0 1
+3 0 332 0 0 0 0 0 0 0 0 332
+2 0 332
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=332 0x3877c7b8b0 0 
* 0 35508 8944 4760 21 3 0 21 3 0 8366 133
* 0 332 332 0 1 1 0 1 1 0 0 0 332

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 332 0 332 1 0 0 1
+1 0 332
+5 0 332
+3 0 332 0 332
+1 0 332
+4 0 332 0 0 1 0 0 1
+3 0 332
+4 0 332
+3 0 332 0 332 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=332 0x3877c7aa50 0 
* 0 73832 12005 11337 34 30 34 34 30 34 12297 400
* 0 332 332 0 1 1 0 1 1 0 0 0 332
+5 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 +96 0 
* 0 
+96 0 332 0 0 1 0 0 1
+4 0 332 332
+1 0 332 332
+1 0 332 332

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80
+3 * 80 0 80
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=80 0x402d74 645 
* * 1040 480 160
+5 * 80
+3 * 80 0 80
+3 +1 80 80
+6 * 80 0 80
+3 * 80 80
+6 * 80 0 80
+3 +1 80 80
+6 * 80 0 80 1 0 0 1
+3 * 80 80
+6 * 80 0 80
+3 +2 80 0 80
+7 * 80
jump=80 +86 * 
* * 
+2 +1 3320 3320
+3 * 3320
+3 * 3320 3320
+4 * 3320
+3 * 3320
+3 * 3320 0 3320
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=3320 0x402d9a 770 
* * 36520 16600 9960
+5 * 3320 3320
+4 * 3320 3320
+5 * 3320
+4 * 3320 0 3320
+5 +1 3320 3320
+3 * 3320
+3 * 3320 3320
+4 * 3320
+3 * 3320
+3 * 3320 0 3320
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=3320 0x402dba 770 
* * 36520 16600 9960 1 0 0 1
+5 * 3320 3320
+2 * 3320
+4 * 3320 3320
+5 * 3320
+4 * 3320 0 3320
+5 -2 3320 0 3320
+4 * 3320 3320
+3 * 3320
+3 * 3320 3320
+3 * 3320 0 0 0 0 0 0 0 0 3320 81
jcnd=3240/3320 -93 +1 
* * 
-9 * 80 80 0 1 0 0 1
+3 * 80
+3 * 80 80
+3 * 80 0 0 0 0 0 0 0 0 80
jcnd=80/80 -93 +1 
* * 
+2 +4 80 80
+3 * 80
+3 * 80
+4 * 80 80 0 1 0 0 1
+5 * 80
+4 * 80
+3 * 80 0 80
+5 +1 80 80
+3 * 80
+3 * 80
+4 * 80 80
+5 * 80
+4 * 80
+3 * 80 0 80
+5 +1 80 0 80
+7 * 80
jump=80 0x4016ee * 
* * 
+2 +1 3320 3320
+3 * 3320
+3 * 3320 3320
+4 * 3320
+3 * 3320 0 0 1 0 0 1
+3 * 3320 0 3320
cfi=(2)
cfn=(146)
calls=3320 0x402dba 770 
* * 36520 16600 9960
+5 * 3320 3320
+2 * 3320
+4 * 3320 3320
+5 * 3320 0 3320
+5 +1 3320 3320
+3 * 3320
+3 * 3320 3320
+4 * 3320
+3 * 3320
+3 * 3320 0 3320
cfi=(2)
cfn=(144)
calls=3320 0x402d9a 770 
* * 36520 16600 9960
+5 * 3320 3320
+4 * 3320 3320
+5 * 3320 0 3320
+5 +1 3320 3320
+5 * 3320 3320
+5 * 3320 3320
+5 * 3320
+4 * 3320 0 3320
+5 +1 3320 3320
+5 * 3320 3320
+5 * 3320 3320
+5 * 3320
+4 * 3320 0 3320
+5 -4 3320 0 3320
+4 * 3320 3320
+3 * 3320
+3 * 3320 3320
+3 * 3320 0 0 0 0 0 0 0 0 3320 81
jcnd=3240/3320 0x401672 +1 
* * 
-9 * 80 80 0 1 0 0 1
+3 * 80
+3 * 80 80
+3 * 80 0 0 0 0 0 0 0 0 80
jcnd=80/80 0x401672 +1 
* * 
+6 +6 80 80 0 1 0 0 1
+5 * 80 80
+5 * 80 0 80
+5 +2 80 80
+3 +1 80 0 80
+3 * 80 80
+5 * 80 80
+1 * 80 80

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 80
+7 * 80
+7 * 80
+3 * 80
+3 * 80 0 80
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=80 0x4030b2 310 
* * 67959 19508 17841 63 18 16 63 18 16 4116 194 318 39
+5 * 80
+7 * 80
+7 * 80
+3 * 80
+3 * 80 0 80
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=80 0x402ff4 310 
* * 68153 19539 17594 40 7 22 40 7 22 4173 192 318
+5 * 80 0 0 1 0 0 1
+7 * 80
+7 * 80
+3 * 80
+3 * 80 0 80
cfn=(142)
calls=80 0x401585 -52 
* * 350480 154720 81040 8 0 0 8 0 0 6800 162
+5 * 80 0 80
+8 * 80 80
+6 * 80 0 80
+6 * 80
+7 * 80
+3 * 80 0 80
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=80 0x402df4 414 
* * 20050 6298 4593 33 5 0 33 5 0 2164 52 160
+5 * 80
+7 * 80
+3 * 80 0 80 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=80 0x402e74 414 
* * 20167 6356 4593 7 0 0 7 0 0 2212 15 160
+5 +2 80
+7 * 80
+7 * 80
+3 * 80
+3 * 80 0 80
cfi=(2)
cfn=(4)
calls=80 0x4030b2 310 
* * 67632 19485 17738 2 1 1 2 1 1 4092 98 318
+5 * 80
+7 * 80
+7 * 80
+3 * 80
+3 * 80 0 80
cfi=(2)
cfn=(80)
calls=80 0x402ff4 310 
* * 67326 19488 17451 0 0 2 0 0 2 4049 67 318
+5 * 80 80
+6 * 80 0 0 1 0 0 1
+7 * 80
+7 * 80 0 80
+6 * 80 80
+8 * 80
+3 * 80
+3 * 80 0 80
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=80 0x401719 -33 
* * 164080 68160 37720 4 0 0 4 0 0 3400 81
+5 * 80 0 80
+8 * 80 80
+6 * 80 0 80
+6 * 80
+7 * 80 0 0 1 0 0 1
+3 * 80 0 80
cfi=(2)
cfn=(148)
calls=80 0x402df4 414 
* * 20050 6298 4593 0 0 0 0 0 0 2164 49 160
+5 * 80
+7 * 80
+3 * 80 0 80
cfi=(2)
cfn=(178)
calls=80 0x402e74 414 
* * 20167 6356 4593 0 0 0 0 0 0 2212 11 160
+5 +2 80 80
+7 * 80
+3 * 80 0 80
cfi=(2)
cfn=(2)
calls=80 0x402d74 645 
* * 1040 480 160
+5 * 80 80
+6 * 80
+3 * 80
+3 * 80
+3 * 80 80
+7 * 80
+3 * 80 0 0 1 0 0 1
+3 * 80 0 80
cfi=(2)
cfn=(144)
calls=80 0x402d9a 770 
* * 880 400 240
+5 * 80
+3 * 80
+7 * 80
+3 * 80
+3 * 80 0 80
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=80 0x402eda 901 
* * 13304 4621 3721 27 10 8 27 10 8 606 23 35
+5 +1 80 80
+7 * 80
+3 * 80 0 80
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=80 0x402f54 645 
* * 1040 480 160 0 1 0 0 1
+5 * 80 80
+6 * 80
+3 * 80
+3 * 80
+3 * 80 80
+7 * 80 0 0 1 0 0 1
+3 * 80
+3 * 80 0 80
cfi=(2)
cfn=(146)
calls=80 0x402dba 770 
* * 880 400 240
+5 * 80
+3 * 80
+7 * 80
+3 * 80
+3 * 80 0 80
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=80 0x402f7a 901 
* * 13464 4648 3742 28 12 14 28 12 14 635 38 35
+5 +1 80 80
+7 * 80
+3 * 80 0 80
cfi=(2)
cfn=(10)
calls=80 0x402f54 645 
* * 1040 480 160
+5 * 80 80
+6 * 80
+3 * 80
+3 * 80
+3 * 80 80 0 1 0 0 1
+7 * 80
+3 * 80
+3 * 80 0 80
cfi=(2)
cfn=(146)
calls=80 0x402dba 770 
* * 880 400 240
+5 * 80 80
+2 * 80
+4 * 80 80
+8 * 80 80
+8 * 80 0 80
+8 +1 80 80
+7 * 80
+3 * 80 0 80
cfi=(2)
cfn=(2)
calls=80 0x402d74 645 
* * 1040 480 160
+5 * 80 80 0 1 0 0 1
+6 * 80
+3 * 80
+3 * 80
+3 * 80 80
+7 * 80
+3 * 80
+3 * 80 0 80
cfi=(2)
cfn=(144)
calls=80 0x402d9a 770 
* * 880 400 240
+5 * 80 80
+4 * 80 80
+8 * 80
+4 * 80 80
+8 * 80
+3 * 80 0 80
+8 +2 80 0 80
+7 -12 80 80
+8 * 80 80
+7 * 80 0 0 0 0 0 0 0 0 80 3
jcnd=1/80 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 80
+7 * 80
+3 * 80 0 80
cfi=(2)
cfn=(2)
calls=80 0x402d74 645 
* * 1040 480 160 2 0 1 2 0 1
+5 * 80
+3 * 80 80
+7 * 80
+3 * 80 0 80
cfi=(2)
cfn=(2)
calls=80 0x402d74 645 
* * 1040 480 160 0 1 0 0 1
+5 * 80
+3 * 80 0 0 0 0 0 0 0 0 80
+2 * 80 0 0 1 0 0 1
+5 * 80
jump=80 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 80
+2 * 80 0 0 0 0 0 0 0 0 80
jcnd=80/80 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+5 +1 80 80
+4 * 80
+3 * 80 0 80
cfi=(2)
cfn=(2)
calls=80 0x402d74 645 
* * 1040 480 160
+5 * 80
+3 * 80 0 80
+3 +1 80 80 0 1 0 0 1
+6 * 80 0 80
+3 * 80 80
+6 * 80 0 80
+3 +2 80 0 80
+7 * 80
jump=80 +86 * 
* * 
+2 +1 3320 3320
+3 * 3320
+3 * 3320 3320
+4 * 3320
+3 * 3320
+3 * 3320 0 3320
cfi=(2)
cfn=(144)
calls=3320 0x402d9a 770 
* * 36520 16600 9960
+5 * 3320 3320
+4 * 3320 3320
+5 * 3320
+4 * 3320 0 3320
+5 +1 3320 3320
+3 * 3320
+3 * 3320 3320
+4 * 3320
+3 * 3320
+3 * 3320 0 3320
cfi=(2)
cfn=(146)
calls=3320 0x402dba 770 
* * 36520 16600 9960
+5 * 3320 3320
+2 * 3320
+4 * 3320 3320
+5 * 3320
+4 * 3320 0 3320
+5 -2 3320 0 3320
+4 * 3320 3320
+3 * 3320
+3 * 3320 3320
+3 * 3320 0 0 0 0 0 0 0 0 3320 81
jcnd=3240/3320 -93 +1 
* * 
-9 * 80 80 0 1 0 0 1
+3 * 80
+3 * 80 80
+3 * 80 0 0 0 0 0 0 0 0 80
jcnd=80/80 -93 +1 
* * 
+2 +4 80 80
+3 * 80
+3 * 80 0 0 1 0 0 1
+4 * 80 80
+5 * 80
+4 * 80
+3 * 80 0 80
+5 +1 80 80
+3 * 80
+3 * 80
+4 * 80 80
+5 * 80
+4 * 80
+3 * 80 0 80
+5 +1 80 80
+5 * 80 80
+5 * 80 80
+5 * 80 0 0 1 0 0 1
+4 * 80
+3 * 80 0 80
+5 +2 80 80
+3 +1 80 0 80
+3 * 80 80
+5 * 80 80
+1 * 80 80

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 160
+4 * 160
+3 * 160 0 160
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=160 0x4044cc -35 
* * 800 320 320
+5 * 160 160
+1 * 160 160

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160 1 0 0 1
+4 +1 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=160 0x4049d4 -35 
* * 960 320 480 1 0 0 1
+5 * 160 160
+1 * 160 160

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 160
+4 * 160
+3 * 160 0 160
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=160 0x404520 -35 
* * 800 320 320
+5 * 160 160
+1 * 160 160

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=160 0x404a28 -35 
* * 960 320 480 1 0 1 1 0 1
+5 * 160 160
+1 * 160 160

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+4 * 160 160
+4 * 160 160
+1 * 160 160

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=80 0x40406a -87 
* * 1920 640 720 0 5 5 0 5 5 80
+5 * 80 80
+1 * 80 80

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 160 0 160
+1 * 160
+3 * 160 0 160
+4 * 160 160
+4 * 160 160
+1 * 160 160

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=80 0x403df2 -87 
* * 1920 640 720 0 6 1 0 6 1 80
+5 * 80 80
+1 * 80 80

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 220 0 220
+1 * 220
+3 * 220 0 220 0 0 1 0 0 1
+4 +1 220 220
+4 * 220 220
+1 * 220 220

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 +1 320
+4 * 320
+3 * 320 0 320
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=320 0x404ffe 790 
* * 1920 960 640 1 0 0 1
+5 * 320 320
+3 * 320 320
+1 * 320 320

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+4 +1 320 320
+4 * 320 320
+1 * 320 320

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 +1 320
+4 * 320
+3 * 320 0 320 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=320 0x40500c 790 
* * 1920 960 640 1 0 0 1
+5 * 320 320
+3 * 320 320
+1 * 320 320

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 220 0 220
+1 * 220
+3 * 220 0 220
+4 +1 220 220
+4 * 220 220
+1 * 220 220

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+4 +1 320 320 0 1 0 0 1
+4 * 320 320
+1 * 320 320

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 160 0 160
+1 * 160
+3 * 160 0 160
+4 * 160 0 160
+4 * 160 160
+4 * 160 160
+1 * 160 160

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 166 0 166 1 0 0 1
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166 1 0 0 1
+4 +2 166 166
+4 * 166
+3 * 166 0 166
cfn=(28)
calls=166 0x404992 +12 
* * 996 332 332 1 0 0 1
+5 * 166 166
+4 * 166
+3 * 166
+2 * 166 0 0 0 0 0 0 0 0 166
jcnd=166/166 +7 +3 
* * 
+7 +3 166 166
+4 * 166
+4 * 166
+3 * 166 0 166
cob=(5)
cfi=(8)
cfn=(32)
calls=166 0x387e4bd0b0 0 
* * 39695 6657 6442 24 21 14 24 21 14 6319 217 166
* * 166 166 0 1 1 0 1 1 0 0 0 166
+5 +1 166 166
+1 * 166 166

fn=(102)
0x4048de 113 178 0 178 1 0 0 1
+1 * 178
+3 * 178 0 178
+4 +1 178
+10 * 178 178
+1 * 178 178

fn=(266)
0x40406a 129 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80
+3 * 80
+5 * 80 0 80
cfi=(16)
cfn=(226)
calls=80 0x402d61 -20 
* * 560 240 240
+5 * 80
+3 * 80 0 0 0 0 0 0 0 0 80
+2 * 80 80
+4 * 80 80 0 0 5 0 0 5
+2 * 80 0 80 0 0 5 0 0 5
+2 * 80 80
+1 * 80 80

fn=(28)
0x404992 113 178 0 178 1 0 0 1
+1 * 178
+3 * 178 0 178
+4 +1 178
+10 * 178 178
+1 * 178 178

fn=(176)
0x4044cc 86 160 0 160
+1 * 160
+3 * 160 0 160
+4 * 160 160
+1 * 160 160

fn=(224)
0x403df2 129 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80
+3 * 80
+5 * 80 0 80
cfi=(16)
cfn=(226)
calls=80 0x402d61 -20 
* * 560 240 240
+5 * 80
+3 * 80 0 0 0 0 0 0 0 0 80
+2 * 80 80
+4 * 80 80 0 0 6 0 0 6
+2 * 80 0 80 0 0 1 0 0 1
+2 * 80 80
+1 * 80 80

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 166 0 166
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 +1 166 166
+4 * 166
+3 * 166 0 166
cob=(5)
cfi=(8)
cfn=(164)
calls=166 0x387e4bb2f0 0 
* * 18288 4574 2378 23 4 0 23 4 0 4298 103 166
* * 166 166 0 1 1 0 1 1 0 0 0 166
+5 * 166 166
+1 * 166 166

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 166 0 166
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 +1 166 166
+4 * 166
+3 * 166 0 166
cob=(5)
cfi=(8)
cfn=(164)
calls=166 0x387e4bb2f0 0 
* * 18548 4702 2382 0 0 0 0 0 0 4400 30 166
* * 166 166 0 0 0 0 0 0 0 0 0 166
+5 * 166 166
+1 * 166 166

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 166 0 166 1 0 0 1
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 +2 166 166
+4 * 166
+3 * 166 0 166
cfn=(102)
calls=166 0x4048de +12 
* * 996 332 332 1 0 0 1
+5 * 166 166
+4 * 166 0 0 1 0 0 1
+3 * 166
+2 * 166 0 0 0 0 0 0 0 0 166
jcnd=166/166 +7 +3 
* * 
+7 +3 166 166
+4 * 166
+4 * 166
+3 * 166 0 166
cob=(5)
cfi=(8)
cfn=(32)
calls=166 0x387e4bd0b0 0 
* * 39449 6676 5891 14 10 21 14 10 21 6310 183 166
* * 166 166 0 0 0 0 0 0 0 0 0 166
+5 +1 166 166
+1 * 166 166

fn=(18)
0x404a28 81 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160 0 0 1 0 0 1
+4 * 160 0 160
+4 * 160 160
+1 * 160 160

fn=(92)
0x4049d4 81 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+4 * 160 0 160
+4 * 160 160
+1 * 160 160

fn=(196)
0x404520 86 160 0 160
+1 * 160
+3 * 160 0 160
+4 * 160 160
+1 * 160 160

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=160 0x404484 107 
* * 54026 16740 15784 25 3 4 25 3 4 1800 101 316 39
+5 * 160 160
+1 * 160 160

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +2 160 160 0 1 0 0 1
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=160 0x404a36 450 
* * 49546 15140 14184 24 3 4 24 3 4 1800 101 316 39
+5 * 160 160
+1 * 160 160

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=160 0x40439c 107 
* * 54026 16740 15784 7 1 7 7 1 7 1800 87 316
+5 * 160 160
+1 * 160 160

fn=(116)
0x40439c 107 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +10 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=160 0x4047d7 -26 
* * 51786 15940 14984 7 1 7 7 1 7 1800 87 316
+5 +1 160 160
+1 * 160 160

fn=(118)
0x4047d7 91 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=160 0x4049e2 450 
* * 49546 15140 14184 7 1 7 7 1 7 1800 87 316
+5 * 160 160
+1 * 160 160

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +10 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(52)
calls=160 0x404829 -26 
* * 51786 15940 14984 25 3 4 25 3 4 1800 101 316 39
+5 +1 160 160
+1 * 160 160

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(234)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fl=(2)
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 166 0 166 1 0 0 1
+1 * 166 0 0 1 0 0 1
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 0 166 166
+5 0 166 0 0 0 0 0 0 0 0 166
+2 0 166 166
+4 0 166 166
+4 0 166
+5 0 166
+3 0 166
+3 0 166 0 166
fi=(6) ???
cfi=(5)
cfn=(100)
calls=166 0x40461a 99 
* 0 43765 8004 7219 17 10 21 17 10 21 6476 183 332
+5 0 166
fi=(6)
jump=166 +7 0 
* 0 
+7 0 166 166
+1 0 166 166

fn=(144)
0x402d9a 770 10120 0 10120
+1 * 10120
+3 * 10120 0 10120
+4 * 10120 0 10120
+4 +1 10120 10120
+4 * 10120 10120
+3 * 10120 10120
+4 * 10120
+4 * 10120
+3 * 10120 10120
+1 * 10120 10120

fn=(146)
0x402dba 770 10120 0 10120
+1 * 10120
+3 * 10120 0 10120 1 0 0 1
+4 * 10120 0 10120
+4 +1 10120 10120
+4 * 10120 10120
+3 * 10120 10120
+4 * 10120
+4 * 10120
+3 * 10120 10120
+1 * 10120 10120

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 160
+4 * 160
+3 * 160 0 160
cfi=(4)
cfn=(194)
calls=160 0x403d7e +42 
* * 2240 800 800 1 0 0 1
+5 * 160 160
+1 * 160 160

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+1 * 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160 160
+4 * 160
+3 * 160 160
+4 * 160 160
+3 * 160
+3 * 160
+3 * 160
+4 * 160
+3 * 160 160
+4 * 160 160
+3 -1 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=160 0x403d98 +11 
* * 22414 6152 3906 1 0 0 1 0 0 4424 26 320
+5 +1 160 160
+4 * 160
+3 * 160 0 160
cfn=(192)
calls=160 0x403296 -82 
* * 3680 1280 1280 1 0 0 1
+5 * 160
jump=160 +28 * 
* * 
+28 * 160
+4 * 160 160
+1 * 160 160
+1 * 160 160

fn=(2)
0x402d74 645 664 0 664 1 0 0 1
+1 * 664
+3 * 664 0 664 0 0 1 0 0 1
+4 +1 664 664
+4 * 664 664 0 1 1 0 1 1
+4 * 664
+3 * 664 664
+4 * 664 664
+3 * 664
+3 * 664
+3 * 664
+4 * 664 664
+1 * 664 664

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=160 0x404236 -14 
* * 44925 8493 8115 21 15 8 21 15 8 6408 191 320
+5 * 160 160
+4 * 160 0 160
+3 +1 160 160
+4 * 160 160 0 1 0 0 1
+3 * 160 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+3 * 160 160
+4 * 160
+4 * 160
+3 * 160 160
+4 * 160 0 160
+4 +1 160 160
+1 * 160 160

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160 160 0 1 0 0 1
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(96)
calls=160 0x403fbe -14 
* * 44813 8527 7581 18 6 17 18 6 17 6422 172 320
+5 * 160 160
+4 * 160 0 160
+3 +1 160 160
+4 * 160 160
+3 * 160 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+3 * 160 160
+4 * 160
+4 * 160
+3 * 160 160
+4 * 160 0 160
+4 +1 160 160
+1 * 160 160

fn=(244)
0x402f7a 901 80 0 80
+1 * 80
+3 * 80 0 0 1 0 0 1
+4 * 80 0 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80 0 0 0 0 0 0 0 0 80
jcnd=6/80 +51 +10 
* * 
+2 +3 74 74
+4 * 74 74
+4 * 74 74
+4 -1 74 74
+4 * 74
+3 * 74
+3 * 74 0 74
cfi=(3)
cfn=(264)
calls=74 0x4036b1 215 
* * 2812 962 1036 0 5 2 0 5 2 74
+5 +2 74 74
+4 * 74 74
+4 * 74
+4 * 74 74
+4 * 74 0 74
+4 * 74
jump=74 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8458 2616 2264 27 7 12 27 7 12 481 38 35
+5 +2 80 80
+1 * 80 80

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 338 0 338 1 0 0 1
+1 * 338
+3 * 338 0 338 1 0 0 1
+4 +1 338 338
+4 * 338 338
+1 * 338 338

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+3 * 160 0 160
+4 * 160
+4 * 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=160 0x404380 726 
* * 1600 800 640
+5 * 160 160
+4 * 160 160
+1 * 160 160

fn=(148)
0x402df4 414 160 0 160
+1 * 160
+3 * 160 0 160
+1 * 160
+4 * 160 0 160 1 0 0 1
+4 +2 160 160
+4 * 160
+3 * 160 0 160
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=160 0x40325e 113 
* * 960 480 320
+5 * 160
+3 * 160 160
+4 * 160 160
+4 * 160 160
+4 * 160 160
+3 -1 160
+3 * 160
+3 * 160 0 160
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=160 0x40326c 148 
* * 4960 1600 1920 4 0 0 4
+5 +1 160 160
+4 * 160
+3 * 160 0 160
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=160 0x4031ec 159 
* * 30340 9076 5986 27 5 0 27 5 0 4328 101 320
+5 * 160
jump=160 +28 * 
* * 
+28 * 160 0 0 1 0 0 1
+4 * 160 160
+1 * 160 160
+1 * 160 160

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 166 0 166 1 0 0 1
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 +2 166 166
+5 * 166 0 0 0 0 0 0 0 0 166
+2 +1 166 166
+4 * 166 166
+4 * 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cfi=(5)
cfn=(160)
calls=166 0x4044d6 -65 
* * 20280 5238 3208 24 5 0 24 5 0 4298 103 332
+5 +1 166 166
+1 * 166 166

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 160 0 160
+1 * 160
+3 * 160 0 160
+1 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=160 0x4043ca -45 
* * 5760 2080 2240 4 0 4 4 0 4
+5 +1 160 160 0 1 0 0 1
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(20)
calls=160 0x404412 +43 
* * 48925 10413 9235 22 15 8 22 15 8 6408 191 320
+5 * 160
jump=160 +28 * 
* * 
+28 * 160
+4 * 160 160
+1 * 160 160
+1 * 160 160

fn=(14)
0x4043ca 90 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160 0 0 1 0 0 1
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(4)
cfn=(16)
calls=160 0x404804 +24 
* * 2880 960 1120 2 0 1 2 0 1
+5 * 160 160
+4 * 160 0 160 0 0 2 0 0 2
+7 * 160 160
+4 * 160 0 160 1 0 0 1
+8 * 160 160
+4 * 160 0 160
+8 +1 160 160
+1 * 160 160

fn=(80)
0x402ff4 310 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+2 * 160 0 160
+2 * 160 0 160
+1 * 160 0 0 1 0 0 1
+4 * 160 0 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160
+3 * 160 0 160
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=160 0x4039fc 117 
* * 960 480 320 2 0 0 2
+5 * 160
+3 * 160 0 160
cfi=(3)
cfn=(84)
calls=160 0x4039ed -88 
* * 960 480 320
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(2)
calls=160 0x402d74 645 
* * 2080 960 320
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160
+3 * 160
+3 * 160 0 160 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=160 0x403a0a 134 
* * 58093 13647 12061 25 6 17 25 6 17 6422 172 320
+5 +4 160 160
+4 * 160
+3 * 160 0 160
cfn=(106)
calls=160 0x40325e 113 
* * 960 480 320 1 0 0 1
+5 * 160
+3 * 160 160
+4 * 160 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=160 0x403a98 565 
* * 4000 1600 1280 2 0 0 2
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(112)
calls=160 0x403a68 547 
* * 4000 1600 1280
+5 * 160
+3 * 160
+3 * 160
+3 * 160
+3 * 160 0 160
cfi=(11)
cfn=(114)
calls=160 0x403ac9 -60 
* * 56426 17540 16744 7 1 7 7 1 7 1800 87 316
+5 -3 160 160
+4 * 160 0 160
+4 * 160
jump=160 +28 +4 
* * 
+28 +4 160
+4 * 160 160
+1 * 160 160
+2 * 160 160
+2 * 160 160
+1 * 160 160

fn=(188)
0x403d98 171 166 0 166 1 0 0 1
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 +2 166 166
+5 * 166 0 0 0 0 0 0 0 0 166 6
+2 +1 166 166
+4 * 166 166
+4 * 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cfi=(5)
cfn=(190)
calls=166 0x40452a -65 
* * 20540 5366 3212 0 0 0 0 0 0 4400 30 332
+5 +1 166 166
+1 * 166 166

fn=(22)
0x404236 167 166 0 166 1 0 0 1
+1 * 166
+3 * 166
+4 * 166 0 166 1 0 0 1
+4 * 166 0 166
+4 0 166 166
+5 0 166 0 0 0 0 0 0 0 0 166
+2 0 166 166
+4 0 166 166
+4 0 166
+5 0 166
+3 0 166
+3 0 166 0 166
fi=(6)
cfi=(5)
cfn=(26)
calls=166 0x404730 99 
* 0 44011 7985 7770 28 22 14 28 22 14 6485 217 332
+5 0 166
fi=(6)
jump=166 +7 0 
* 0 
+7 0 166 166
+1 0 166 166

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+4 * 160 0 160
+4 * 160
+4 * 160 0 0 1 0 0 1
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=160 0x404468 726 
* * 1600 800 640 1 0 0 1
+5 * 160 160
+4 * 160 160
+1 * 160 160

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+3 * 160 0 160
+4 * 160
+4 * 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(10)
cfn=(44)
calls=160 0x404468 726 
* * 1600 800 640
+5 * 160 160
+4 * 160 160
+1 * 160 160

fn=(86)
0x403a0a 134 160 0 160
+1 * 160
+3 * 160 0 160
+1 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=160 0x4042e2 -45 
* * 5760 2080 2240 5 0 0 5
+5 +1 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160 1 0 0 1
cfn=(94)
calls=160 0x40432a +43 
* * 48813 10447 8701 19 6 17 19 6 17 6422 172 320
+5 * 160
jump=160 +28 * 
* * 
+28 * 160
+4 * 160 160
+1 * 160 160
+1 * 160 160

fn=(88)
0x4042e2 90 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160 1 0 0 1
cfi=(4)
cfn=(90)
calls=160 0x4047b2 +24 
* * 2880 960 1120 3 0 0 3
+5 * 160 160
+4 * 160 0 160
+7 * 160 160
+4 * 160 0 160
+8 * 160 160
+4 * 160 0 160
+8 +1 160 160
+1 * 160 160

fn=(156)
0x4031ec 159 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+1 * 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160 160 0 1 0 0 1
+4 * 160
+3 * 160 160
+4 * 160 160
+3 * 160
+3 * 160
+3 * 160
+4 * 160
+3 * 160 160
+4 * 160 160
+3 -1 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(158)
calls=160 0x403ce6 +11 
* * 22180 6036 3906 24 5 0 24 5 0 4328 101 320
+5 +1 160 160
+4 * 160
+3 * 160 0 160
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=160 0x4031b8 -82 
* * 3680 1280 1280 1 0 0 1
+5 * 160
jump=160 +28 * 
* * 
+28 * 160
+4 * 160 160
+1 * 160 160
+1 * 160 160

fn=(172)
0x4031b8 79 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 160
+4 * 160
+3 * 160 0 160
cfi=(4)
cfn=(174)
calls=160 0x403ccc +42 
* * 2240 800 800
+5 * 160 160
+1 * 160 160

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246)
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10)
0x402f54 645 344 0 344 1 0 0 1
+1 * 344
+3 * 344 0 344
+4 +1 344 344
+4 * 344 344 0 0 2 0 0 2
+4 * 344
+3 * 344 344
+4 * 344 344
+3 * 344
+3 * 344
+3 * 344
+4 * 344 344
+1 * 344 344

fn=(106)
0x40325e 113 338 0 338 1 0 0 1
+1 * 338
+3 * 338 0 338
+4 +1 338 338
+4 * 338 338
+1 * 338 338

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6)
0x403b08 117 172 0 172 1 0 0 1
+1 * 172
+3 * 172 0 172 0 0 1 0 0 1
+4 +1 172 172
+4 * 172 172
+1 * 172 172

fn=(82)
0x4039fc 117 172 0 172 1 0 0 1
+1 * 172
+3 * 172 0 172 1 0 0 1
+4 +1 172 172
+4 * 172 172
+1 * 172 172

fn=(200)
0x402eda 901 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80 0 0 0 0 0 0 0 0 80 7
jcnd=6/80 +51 +10 
* * 
+2 +3 74 74
+4 * 74 74
+4 * 74 74
+4 -1 74 74
+4 * 74
+3 * 74
+3 * 74 0 74
cfi=(3)
cfn=(222)
calls=74 0x403373 215 
* * 2812 962 1036 0 5 0 0 5 0 74
+5 +2 74 74
+4 * 74 74
+4 * 74
+4 * 74 74
+4 * 74 0 74
+4 * 74
jump=74 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8298 2589 2243 24 5 8 24 5 8 452 16 35
+5 +2 80 80
+1 * 80 80

fn=(4)
0x4030b2 310 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+2 * 160 0 160
+2 * 160 0 160
+1 * 160
+4 * 160 0 160 1 0 0 1
+4 * 160 0 160
+4 +2 160 160
+4 * 160
+3 * 160 0 160
cfn=(6)
calls=160 0x403b08 117 
* * 960 480 320 1 0 1 1 0 1
+5 * 160
+3 * 160 0 160
cfi=(3)
cfn=(8)
calls=160 0x403afa -88 
* * 960 480 320 1 0 0 1
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(10)
calls=160 0x402f54 645 
* * 2080 960 320 1 1 0 1 1
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160
+3 * 160
+3 * 160 0 160
cfn=(12)
calls=160 0x403b16 134 
* * 58205 13613 12595 27 15 12 27 15 12 6408 191 320
+5 +4 160 160 0 1 0 0 1
+4 * 160
+3 * 160 0 160
cfn=(40)
calls=160 0x40333c 113 
* * 960 480 320 2 0 0 2
+5 * 160
+3 * 160 160
+4 * 160 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(42)
calls=160 0x403ba4 565 
* * 4000 1600 1280 3 0 0 3
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(46)
calls=160 0x403b74 547 
* * 4000 1600 1280
+5 * 160
+3 * 160
+3 * 160
+3 * 160
+3 * 160 0 160 1 0 0 1
cfi=(11)
cfn=(48)
calls=160 0x403bd5 -60 
* * 56426 17540 16744 26 3 4 26 3 4 1800 101 316 39
+5 -3 160 160
+4 * 160 0 160
+4 * 160
jump=160 +28 +4 
* * 
+28 +4 160
+4 * 160 160
+1 * 160 160
+2 * 160 160
+2 * 160 160
+1 * 160 160

fn=(108)
0x403a98 565 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+4 * 160 0 160
+4 * 160
+4 * 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(10)
cfn=(110)
calls=160 0x404380 726 
* * 1600 800 640 1 0 0 1
+5 * 160 160
+4 * 160 160
+1 * 160 160

fn=(178)
0x402e74 414 160 0 160
+1 * 160
+3 * 160 0 160
+1 * 160
+4 * 160 0 160 1 0 0 1
+4 +2 160 160
+4 * 160
+3 * 160 0 160
cfn=(40)
calls=160 0x40333c 113 
* * 960 480 320
+5 * 160
+3 * 160 160
+4 * 160 160
+4 * 160 160
+4 * 160 160
+3 -1 160
+3 * 160
+3 * 160 0 160
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=160 0x40334a 148 
* * 4960 1600 1920 2 0 0 2
+5 +1 160 160
+4 * 160
+3 * 160 0 160
cfn=(186)
calls=160 0x4032ca 159 
* * 30574 9192 5986 3 0 0 3 0 0 4424 26 320
+5 * 160
jump=160 +28 * 
* * 
+28 * 160 0 0 1 0 0 1
+4 * 160 160
+1 * 160 160
+1 * 160 160

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160 1 0 0 1
+4 * 160 0 160
+4 * 160 0 160
+4 +8 160 0 160
+4 +3 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=160 0x404f37 -22 
* * 23946 6500 5384 14 3 3 14 3 3 1800 101 316 39
+5 +1 160 160
+1 * 160 160

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 160 0 160
+1 * 160
+3 * 160 0 160
+2 * 160 0 160
+1 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +4 160 160
+4 * 160
+3 * 160 0 160
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=160 0x404878 277 
* * 2400 960 800 1 0 0 1
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=160 0x404d44 277 
* * 4000 1440 1280 2 0 0 2
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(132)
calls=160 0x404d44 277 
* * 4000 1440 1280
+5 * 160
+3 * 160
+3 * 160
+3 * 160 0 160
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=160 0x404d5e -49 
* * 26346 7300 6344 1 1 7 1 1 7 1800 87 316
+5 +1 160
+4 * 160 160
+1 * 160 160
+2 * 160 160
+1 * 160 160

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 160 0 160
+1 * 160
+3 * 160 0 160
+1 * 160
+4 * 160 0 160 1 0 0 1
+4 * 160 0 160
+4 * 160 0 160
+4 +10 160 160
+4 * 160
+3 * 160 0 160
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=160 0x404c38 288 
* * 2400 960 800 3 0 0 3
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(56)
calls=160 0x404c38 288 
* * 2400 960 800
+5 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=160 0x404c52 -36 
* * 41226 12260 11304 20 3 4 20 3 4 1800 101 316 39
+5 +1 160
+4 * 160 160
+1 * 160 160
+1 * 160 160

fn=(60)
0x404c52 424 160 0 160
+1 * 160
+3 * 160 0 160
+2 * 160 0 160
+1 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +4 160 160
+4 * 160
+3 * 160 0 160
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=160 0x40492d 277 
* * 2400 960 800 2 0 0 2
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=160 0x404d9d 277 
* * 4000 1440 1280 2 0 1 2 0 1
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(66)
calls=160 0x404d9d 277 
* * 4000 1440 1280
+5 * 160
+3 * 160
+3 * 160
+3 * 160 0 160
cfn=(72)
calls=160 0x404db7 -49 
* * 26346 7300 6344 15 3 3 15 3 3 1800 101 316 39
+5 +1 160
+4 * 160 160
+1 * 160 160
+2 * 160 160
+1 * 160 160

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 196 0 196 1 0 0 1
+1 * 196
+3 * 196
+4 * 196 0 196
+4 +1 196 196
+4 * 196
+3 * 196 0 196 1 0 0 1
cfi=(13)
cfn=(64)
calls=196 -33 -66 
* * 1176 588 392
+5 * 196 196
+1 * 196 196

fn=(66)
0x404d9d 277 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320
+3 * 320 0 320
cfi=(13)
cfn=(68)
calls=320 0x404f1a -58 
* * 5120 1920 1600 2 0 1 2 0 1
+5 * 320 320
+1 * 320 320

fn=(240)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 160 0 160
+1 * 160
+3 * 160 0 160
+1 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +10 160 160
+4 * 160
+3 * 160 0 160
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=160 0x404bc6 288 
* * 2400 960 800 3 0 0 3
+5 * 160
+3 * 160 160
+4 * 160
+3 * 160 0 160
cfn=(122)
calls=160 0x404bc6 288 
* * 2400 960 800
+5 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(126)
calls=160 0x404be0 -36 
* * 41226 12260 11304 4 1 7 4 1 7 1800 87 316
+5 +1 160
+4 * 160 160
+1 * 160 160
+1 * 160 160

fn=(128)
0x404878 277 196 0 196
+1 * 196
+3 * 196
+4 * 196 0 196 1 0 0 1
+4 +1 196 196
+4 * 196
+3 * 196 0 196
cfi=(13)
cfn=(130)
calls=196 -33 -66 
* * 1176 588 392 0 0 1 0 0 1
+5 * 196 196
+1 * 196 196

fn=(132)
0x404d44 277 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320
+3 * 320 0 320
cfi=(13)
cfn=(134)
calls=320 0x404e98 -58 
* * 5120 1920 1600 2 0 0 2
+5 * 320 320
+1 * 320 320

fn=(138)
0x404d5e 379 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +8 160 0 160
+4 +3 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=160 0x404eb5 -22 
* * 23946 6500 5384 1 1 7 1 1 7 1800 87 316
+5 +1 160 160
+1 * 160 160

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320
+3 * 320 0 320
cfi=(13)
cfn=(124)
calls=320 0x404d36 -77 
* * 1920 960 640 2 0 0 2
+5 * 320 320
+1 * 320 320

fn=(56)
0x404c38 288 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320 1 0 0 1
+4 +1 320 320
+4 * 320
+3 * 320 0 320
cfi=(13)
cfn=(58)
calls=320 0x404d8f -77 
* * 1920 960 640 1 0 0 1
+5 * 320 320
+1 * 320 320

fn=(74)
0x404f37 368 172 0 172
+1 * 172
+3 * 172
+4 * 172 0 172 1 0 0 1
+4 * 172 0 172
+4 * 172 0 172
+4 +2 172 172
+4 * 172 172
+4 * 172
+3 * 172
+3 * 172
+4 * 172 0 172
+4 +1 172 172
+5 * 172 0 0 0 0 0 0 0 0 172
jcnd=6/172 +33 +2 
* * 
+2 +1 166 166
+4 * 166
+8 * 166 166
+4 * 166 166
+4 * 166
+3 * 166 0 0 1 0 0 1
+3 * 166 0 166 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=166 0x3877c83840 0 
* * 19976 4850 4523 11 2 5 11 2 5 1688 103 161 39
* * 166 166 0 1 1 0 1 1 0 0 0 166
+5 +1 172 172
+4 * 172
+8 * 172 172
+4 * 172
+3 +1 172 172
+1 * 172 172

fn=(140)
0x404eb5 368 172 0 172
+1 * 172
+3 * 172
+4 * 172 0 172 1 0 0 1
+4 * 172 0 172
+4 * 172 0 172 0 0 1 0 0 1
+4 +2 172 172
+4 * 172 172
+4 * 172
+3 * 172
+3 * 172
+4 * 172 0 172
+4 +1 172 172
+5 * 172 0 0 0 0 0 0 0 0 172
jcnd=6/172 +33 +2 
* * 
+2 +1 166 166
+4 * 166
+8 * 166 166
+4 * 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cob=(2)
cfi=(9)
cfn=(78)
calls=166 0x3877c83840 0 
* * 19976 4850 4523 0 1 8 0 1 8 1688 90 161
* * 166 166 0 0 0 0 0 0 0 0 0 166
+5 +1 172 172
+4 * 172
+8 * 172 172
+4 * 172
+3 +1 172 172
+1 * 172 172

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+4 +1 320 320
+4 * 320 320
+1 * 320 320

fn=(110)
0x404380 726 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+4 * 320 0 320
+4 * 320 320
+4 * 320 320
+3 * 320 320
+4 * 320 0 320
+3 * 320 320
+1 * 320 320

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+4 +1 320 320
+4 * 320 320
+1 * 320 320

fn=(44)
0x404468 726 320 0 320
+1 * 320
+3 * 320 0 320
+4 * 320 0 320
+4 * 320 320
+4 * 320 320
+3 * 320 320
+4 * 320 0 320 1 0 0 1
+3 * 320 320
+1 * 320 320

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 166 0 166 1 0 0 1
+1 * 166
+3 * 166 0 166
+4 * 166 0 166
+4 * 166 166
+1 * 166 166

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 166 0 166 1 0 0 1
+1 * 166
+3 * 166 0 166
+4 * 166 0 166 1 0 0 1
+4 * 166 166
+1 * 166 166

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 166 0 166 1 0 0 1
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 +4 166 166
+4 * 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cfn=(184)
calls=166 0x40454c -14 
* * 996 332 498 1 0 0 1
+5 +2 166 166
+1 * 166 166

fn=(150)
0x40326c 148 166 0 166
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 +3 166 166 0 1 0 0 1
+4 * 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=166 0x403d1a -29 
* * 2988 996 1162 3 0 0 3
+5 +1 166 166
+1 * 166 166

fn=(180)
0x40334a 148 166 0 166
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 +3 166 166
+4 * 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cfn=(182)
calls=166 0x403dcc -29 
* * 2988 996 1162 2 0 0 2
+5 +1 166 166
+1 * 166 166

fn=(152)
0x403d1a 122 166 0 166 1 0 0 1
+1 * 166
+3 * 166
+4 * 166 0 166
+4 * 166 0 166
+4 +4 166 166
+4 * 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cfn=(154)
calls=166 0x4044f8 -14 
* * 996 332 498 2 0 0 2
+5 +2 166 166
+1 * 166 166

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1742 322 319 9 7 6 9 7 6 243 26 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1608 307 302 1 4 4 1 4 4 220 11 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 332 0 332 1 0 0 1
+5 0 332 0 332
+5 0 332
+3 0 332 0 332
+5 0 332
+4 0 332 332 0 0 1 0 0 1
+7 0 332 332 0 0 1 0 0 1
+3 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
+6 0 332 332 0 0 1 0 0 1
+7 0 332 332 0 1 1 0 1 1
+4 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
+2 0 332 332 0 0 1 0 0 1
+3 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 +97 0 
* 0 
+18 0 332
+3 0 332
+3 0 332 0 332
cfn=(38) _int_malloc
calls=332 0x3877c79a00 0 
* 0 59888 8353 9345 30 24 34 30 24 34 8977 385
+5 0 332
+3 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
+2 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
+2 0 332
+3 0 332 0 0 0 0 0 0 0 0 332 3
+2 0 332 332
+7 0 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 +13 0 
* 0 
+13 0 332 0 332
+2 0 332 0 0 0 0 0 0 0 0 332 12
+6 0 332
+3 0 332 332
+4 0 332 332
+5 0 332 332
+5 0 332
+4 0 332 332
+1 0 332 0 0 1 0 0 1
+5 0 332 332 0 0 1 0 0 1
+7 0 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 +14 0 
* 0 
+14 0 332 0 332 1 0 0 1
+3 0 332 0 0 0 0 0 0 0 0 332
+6 0 332
jump=332 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 332 0 332 1 0 0 1
+2 0 332
+3 0 332
+3 0 332 0 332
+2 0 332
+3 0 332 0 332
+1 0 332
+3 0 332 0 332
+1 0 332
+3 0 332
+4 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
+6 0 332
+4 0 332
+3 0 332 0 0 0 0 0 0 0 0 332 4
jcnd=10/332 0x3877c838d1 0 
* 0 
+2 0 322
+3 0 322
+3 0 322
+3 0 322
+3 0 322
+3 0 322 0 0 0 0 0 0 0 0 322
jcnd=322/322 +41 0 
* 0 
+41 0 322 0 0 1 0 0 1
+3 0 322 0 0 0 0 0 0 0 0 322
jcnd=322/322 0x3877c839c0 0 
* 0 
+24 0 322
+3 0 322
+4 0 322
+3 0 322
+3 0 322
+3 0 322
+3 0 322
+3 0 322 0 0 0 0 0 0 0 0 322 158
jcnd=166/322 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 166
+10 0 166 166 0 0 2 0 0 2
+3 0 166
+4 0 166 0 166
+3 0 166
+4 0 166
+4 0 166 0 0 0 0 0 0 0 0 166
jcnd=166/166 -18 0 
* 0 
-18 0 554 554
+3 0 554
+4 0 554 0 554
+3 0 554
+4 0 554
+4 0 554 0 0 0 0 0 0 0 0 554 8
jcnd=388/554 -18 0 
* 0 
+2 0 332
+4 0 332
+3 0 332 332
+1 0 332 332
+1 0 332 332
+2 0 332 332 0 1 0 0 1
+2 0 332 332
0x3877c839c0 0 322 0 0 1 0 0 1
+3 0 322
+3 0 322
+3 0 322
+4 0 322 0 322 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=322 0x3877c89b20 0 
* 0 21058 7320 6676 6 1 12 6 1 12 1016 23 322 39
+5 0 322
jump=322 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 332 332 0 1 1 0 1 1
+7 0 332 332 0 0 1 0 0 1
+3 0 332
+3 0 332 0 0 1 0 0 1 0 0 332
+6 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
+6 0 332 332
+4 0 332
+4 0 332
+2 0 332 0 0 0 0 0 0 0 0 332
+2 0 332
+2 0 332
+7 0 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 +14 0 
* 0 
+14 0 332
+2 0 332
cfn=(170) _int_free
calls=332 0x3877c78650 0 
* 0 30528 7948 4760 19 1 0 19 1 0 7038 133

fn=(170)
0x3877c78650 0 332 0 332 1 0 0 1
+2 0 332 0 332
+2 0 332 0 332
+2 0 332
+3 0 332 0 332
+2 0 332 0 332
+1 0 332 0 332
+1 0 332
+3 0 332
+4 0 332 332
+4 0 332 0 332
+4 0 332
+3 0 332
+4 0 332
+3 0 332
+3 0 332
+3 0 332 0 0 1 0 0 1 0 0 332
+6 0 332
+4 0 332 0 0 0 0 0 0 0 0 332
+6 0 332
+4 0 332 0 0 0 0 0 0 0 0 332
+6 0 332 332
+7 0 332 0 0 0 0 0 0 0 0 332 2
jcnd=208/332 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 208
+2 0 208 0 0 0 0 0 0 0 0 208
+6 0 208 208 0 1 0 0 1
+4 0 208
+3 0 208
+2 0 208 0 0 0 0 0 0 0 0 208
jcnd=208/208 0x3877c78a40 0 
* 0 
+6 0 208 208
+4 0 208
+3 0 208 0 0 0 0 0 0 0 0 208
+6 0 208 208
+5 0 208
+4 0 208 0 0 0 0 0 0 0 0 208
jcnd=208/208 0x3877c7907c 0 
* 0 
+6 0 208 208
+5 0 208
+4 0 208 0 0 0 0 0 0 0 0 208
+6 0 208
+4 0 208 0 0 1 0 0 1 0 0 208
+6 0 208
+4 0 208 208
+7 0 208 0 0 0 0 0 0 0 0 208
+6 0 208 208
+6 0 208
+2 0 208 0 0 0 0 0 0 0 0 208
+6 0 208 208
+4 0 208 0 0 0 0 0 0 0 0 208 2
jcnd=206/208 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 208 208 0 1 0 0 1
+4 0 208 0 0 0 0 0 0 0 0 208 22
jcnd=22/208 0x3877c78bf0 0 
* 0 
+6 0 186 186
+6 0 186 0 0 1 0 0 1 0 0 186 39
jcnd=24/186 0x3877c78a78 0 
* 0 
+6 0 162 162
+5 0 162 162
+5 0 162 162
+4 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+4 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+9 0 162 0 162
+4 0 162 0 162
+4 0 162 0 0 0 0 0 0 0 0 162 4
jcnd=154/162 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 162
+3 0 162
+4 0 162 162
+4 0 162 162
+4 0 162 0 0 0 0 0 0 0 0 162
-12 0 24
+4 0 24 24
+4 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 186
+7 0 186 0 186
+4 0 186 0 186
+4 0 186 0 0 0 0 0 0 0 0 186 60
jcnd=118/186 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 118 0 118
+4 0 118
+3 0 118 0 118
+4 0 118
+4 0 118 0 118
+4 0 118 0 118
+4 0 118
+7 0 118 0 0 0 0 0 0 0 0 118
jcnd=118/118 0x3877c78b20 0 
* 0 
-7 0 22
+7 0 22 0 0 0 0 0 0 0 0 22
jcnd=22/22 0x3877c78b20 0 
* 0 
0x3877c78a40 0 208 0 0 1 0 0 1
+5 0 208 208
+4 0 208 208
+7 0 208 0 0 0 0 0 0 0 0 208
jcnd=208/208 +16 0 
* 0 
+16 0 208 0 208
+5 0 208 0 0 0 0 0 0 0 0 208
+6 0 208
+3 0 208
jump=208 0x3877c7878f 0 
* 0 
+10 0 24 0 24
+6 0 24 0 0 1 0 0 1
jump=24 0x3877c78885 0 
* 0 
0x3877c78b20 0 208 208 0 1 0 0 1
+4 0 208
+2 0 208 0 0 0 0 0 0 0 0 208
+6 0 208 208
+7 0 208 0 0 0 0 0 0 0 0 208
jcnd=208/208 +15 0 
* 0 
+15 0 208 0 208 1 0 0 1
+4 0 208 0 0 0 0 0 0 0 0 208 2
+6 0 208
+4 0 208 208
+1 0 208 208
+1 0 208 208
+2 0 208 208
+2 0 208 208
+2 0 208 208
+2 0 208 208
0x3877c78bf0 0 22 0 0 1 0 0 1
+3 0 22 0 22
+4 0 22
+3 0 22
+4 0 22 0 22 1 0 0 1
+4 0 22
jump=22 0x3877c788cf 0 
* 0 
0x3877c7907c 0 208 208 0 1 1 0 1 1
+4 0 208 0 0 1 0 0 1
+7 0 208
+4 0 208
+3 0 208
+3 0 208 0 0 0 0 0 0 0 0 208
jcnd=208/208 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 322 0 0 1 0 0 1
+7 0 322
+3 0 322
+3 0 322 322 0 0 1 0 0 1
+4 0 322
+4 0 322 0 0 0 0 0 0 0 0 0 0 322 39
jump=32 0x3877c89be8 0 
* 0 
jump=46 0x3877c89bd0 0 
* 0 
jump=40 0x3877c89bb8 0 
* 0 
jump=40 +11 0 
* 0 
jump=40 0x3877c89c48 0 
* 0 
jump=42 0x3877c89c30 0 
* 0 
jump=40 0x3877c89c18 0 
* 0 
jump=42 0x3877c89c00 0 
* 0 
+11 0 40 40
+3 0 40
+4 0 40
+4 0 40 40
+4 0 40
+4 0 40 0 40
+4 0 40
+9 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-40 0 774 774
+4 0 774 0 774 0 0 3 0 0 3
+4 0 774 774
+4 0 774 0 774
+4 0 774 774
+4 0 774 0 774 0 0 1 0 0 1
+4 0 774 774
+4 0 774 0 774
+4 0 774
+4 0 774
+4 0 774 0 0 0 0 0 0 0 0 774 19
jcnd=286/774 0x3877c89c60 0 
* 0 
-32 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42
jcnd=10/42 0x3877c89c60 0 
* 0 
-24 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-16 0 42 42 0 1 0 0 1
+4 0 42 0 42
+4 0 42 0 0 1 0 0 1
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42 4
jcnd=10/42 0x3877c89c60 0 
* 0 
+6 0 616
+4 0 616 616
+3 0 616 0 616 0 0 1 0 0 1
+3 0 616 616
+4 0 616 0 616 0 0 3 0 0 3
+4 0 616 616
+4 0 616 0 616 0 0 4 0 0 4
+4 0 616 616
+4 0 616 0 616
+4 0 616
jump=616 -80 0 
* 0 
-30 0 32 32
+3 0 32 0 32
+3 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
-24 0 46 46
+4 0 46 0 46
+4 0 46 46
+4 0 46 0 46
+4 0 46 46
+4 0 46 0 46
+4 0 46
jump=46 -80 0 
* 0 
-16 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 -80 0 
* 0 
+8 0 40 40
+3 0 40
+4 0 40 0 0 1 0 0 1
+4 0 40
+4 0 40
jump=40 -39 0 
* 0 
+9 0 46
+3 0 46 0 0 0 0 0 0 0 0 46
+6 0 46 46
+3 0 46
+4 0 46
jump=46 -72 0 
* 0 
+8 0 32
+4 0 32 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32
+4 0 32
jump=32 -99 0 
* 0 
+11 0 42 42 0 1 0 0 1
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b78 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b70 0 
* 0 
+9 0 42 42
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b68 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b60 0 
* 0 
+9 0 322 0 322 1 0 0 1
+3 0 322 322

fn=(104) alloc_perturb
0x3877c77180 0 214 214 0 1 0 0 1
+6 0 214
+2 0 214 0 0 0 0 0 0 0 0 214 1
+2 0 214 214

fn=(38)
0x3877c79a00 0 332 0 332 1 0 0 1
+2 0 332
+3 0 332 0 332
+2 0 332 0 332
+2 0 332 0 332 0 0 1 0 0 1
+2 0 332
+3 0 332 0 332
+1 0 332 0 332
+1 0 332
+4 0 332
+4 0 332 0 0 0 0 0 0 0 0 332
+6 0 332
+4 0 332
+6 0 332
+3 0 332
+4 0 332
+4 0 332
+4 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
+6 0 332 332 0 1 1 0 1 1
+7 0 332 0 0 0 0 0 0 0 0 332 5
jcnd=210/332 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 214
+4 0 214 214
+1 0 214 214
+1 0 214 214
+2 0 214 214
+2 0 214 214
+2 0 214 214
+2 0 214 214
+7 0 227
+7 0 227 0 0 1 0 0 1 0 0 227
+2 0 227
+3 0 227
+5 0 227
+3 0 227
+4 0 227 0 227
+4 0 227
+2 0 227
+5 0 227 227 0 0 6 0 0 6
+4 0 227
+3 0 227 0 0 0 0 0 0 0 0 227
jcnd=227/227 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 227 0 0 1 0 0 1
+3 0 227
+3 0 227
+3 0 227
+4 0 227
+3 0 227
+4 0 227 0 227
+5 0 227
+3 0 227 0 227
+4 0 227 0 227
+4 0 227 0 227
+5 0 227
+3 0 227
+3 0 227
+3 0 227
+3 0 227
+4 0 227
+4 0 227 0 0 1 0 0 1
+4 0 227 0 227
+4 0 227
+4 0 227 0 227
+5 0 227 0 227
+5 0 227
+3 0 227
+3 0 227 0 227
+5 0 227
+5 0 227
+3 0 227 0 227
+4 0 227 0 227
+4 0 227
+6 0 227 0 227
+4 0 227 0 227
+5 0 227 0 0 1 0 0 1
+3 0 227
+3 0 227
+3 0 227
jump=227 +87 0 
* 0 
+8 0 186
+3 0 186
+4 0 186
+2 0 186
+2 0 186
+3 0 186
+3 0 186
+3 0 186
+2 0 186
+2 0 186
+5 0 186
+2 0 186 186 0 0 1 0 0 1
+4 0 186
+3 0 186
+4 0 186 0 186
+4 0 186 0 186
+8 0 186
+7 0 186 0 186
+4 0 186 0 186
+4 0 186 0 186
+4 0 186 0 0 0 0 0 0 0 0 186
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 479 479 0 1 0 0 1
+4 0 479
+3 0 479 0 0 0 0 0 0 0 0 479 18
jcnd=194/479 0x3877c79ef0 0 
* 0 
+6 0 285 285
+4 0 285 285
+4 0 285
+4 0 285 0 0 0 0 0 0 0 0 285
+6 0 285 285 0 1 1 0 1 1
+7 0 285 0 0 0 0 0 0 0 0 285
+6 0 285
+4 0 285
+7 0 285 0 0 0 0 0 0 0 0 285
+2 0 285
+3 0 285 0 0 0 0 0 0 0 0 285 62
jcnd=209/285 0x3877c79e28 0 
* 0 
+6 0 265
+3 0 265 0 265
+4 0 265 0 265
+5 0 265 0 0 0 0 0 0 0 0 265 9
jcnd=13/265 0x3877c7a090 0 
* 0 
+6 0 252
+7 0 252 0 0 0 0 0 0 0 0 252 8
jcnd=186/252 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66 0 0 2 0 0 2
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 3
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 209 209 0 1 0 0 1
+4 0 209
+3 0 209 0 0 0 0 0 0 0 0 209 29
jcnd=105/209 0x3877c79ce1 0 
* 0 
+6 0 104 104
+5 0 104 0 0 0 0 0 0 0 0 104 4
jcnd=84/104 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 194 0 0 1 0 0 1
+7 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
+6 0 194 194 0 1 0 0 1
+4 0 194
+3 0 194
+3 0 194
+2 0 194
+4 0 194
+3 0 194
+3 0 194
+2 0 194
+2 0 194
+2 0 194
+2 0 194 194 0 0 1 0 0 1
+8 0 194
+5 0 194
+5 0 194
+2 0 194 0 0 0 0 0 0 0 0 194
-2 0 97
+2 0 97 0 0 0 0 0 0 0 0 97
+2 0 291
+2 0 291 0 0 0 0 0 0 0 0 291 17
jcnd=143/291 +64 0 
* 0 
+2 0 148
+8 0 148
+3 0 148
+3 0 148 0 0 0 0 0 0 0 0 148 1
jcnd=1/148 0x3877c79fc0 0 
* 0 
-6 0 109
+3 0 109
+3 0 109 0 0 0 0 0 0 0 0 109 2
jcnd=21/109 0x3877c79fc0 0 
* 0 
+2 0 235
+2 0 235 235
+8 0 235
+2 0 235 0 0 0 0 0 0 0 0 235 15
jcnd=109/235 -20 0 
* 0 
+2 0 126
+2 0 126
+5 0 126
+3 0 126
+3 0 126
+2 0 126
+2 0 126
+5 0 126 0 0 0 0 0 0 0 0 126
+2 0 126
+2 0 126
+4 0 126
+2 0 126
+2 0 126 0 0 0 0 0 0 0 0 126 6
jcnd=63/126 -8 0 
* 0 
-8 0 616
+4 0 616
+2 0 616
+2 0 616 0 0 0 0 0 0 0 0 616 59
jcnd=429/616 -8 0 
* 0 
-2 0 143 0 0 1 0 0 1
+2 0 143 0 0 0 0 0 0 0 0 143 7
jcnd=124/143 -8 0 
* 0 
+2 0 269 269 0 0 5 0 0 5
+4 0 269 0 0 1 0 0 1
+3 0 269 0 0 0 0 0 0 0 0 269 93
jcnd=172/269 0x3877c7a1cf 0 
* 0 
+6 0 97
+2 0 97
+4 0 97
+2 0 97
+2 0 97
+2 0 97 0 97
+8 0 97
jump=97 0x3877c79f30 0 
* 0 
+37 0 22 22 0 1 0 0 1
+5 0 22 22
+4 0 22
+4 0 22 22
+5 0 22 0 0 0 0 0 0 0 0 22
jcnd=22/22 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 172 172 0 1 1 0 1 1
+4 0 172 172
+4 0 172
+3 0 172 172
+4 0 172
+4 0 172
+3 0 172
+3 0 172 172
+4 0 172 0 0 0 0 0 0 0 0 172
+6 0 172 172
+4 0 172 0 0 0 0 0 0 0 0 172
+6 0 172 172 0 1 0 0 1
+8 0 172 0 172
+4 0 172 0 172
+4 0 172 0 0 0 0 0 0 0 0 172 5
jcnd=104/172 +38 0 
* 0 
+2 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 104
+4 0 104 0 0 0 0 0 0 0 0 104 7
jcnd=9/104 0x3877c7a2e3 0 
* 0 
+6 0 163 163
+4 0 163 163 0 1 0 0 1
+4 0 163 0 0 0 0 0 0 0 0 163
+6 0 163
+4 0 163
+7 0 163 0 163 0 0 7 0 0 7
+4 0 163 0 163
+4 0 163 0 163
+4 0 163 0 163
+4 0 163 0 0 0 0 0 0 0 0 163
+2 0 163 0 163
+5 0 163
+7 0 163 0 0 0 0 0 0 0 0 163 4
jcnd=156/163 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 156
+7 0 156 0 156
+4 0 156
+3 0 156
+3 0 156
+4 0 156
+3 0 156
+4 0 156
+3 0 156
+3 0 156
+4 0 156 0 156
+4 0 156 0 156 0 0 1 0 0 1
+4 0 156
jump=156 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 9
+7 0 9 0 9
+6 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +7 0 
* 0 
+7 0 172
+4 0 172 0 0 1 0 0 1
+3 0 172
+3 0 172 0 172
cfn=(104)
calls=172 0x3877c77180 0 
* 0 688 344 0 0 0 0 0 0 0 172
+5 0 172
+3 0 172
jump=172 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 22 0 0 1 0 0 1
+7 0 22
+2 0 22
+4 0 22
+3 0 22
+3 0 22 0 22
+5 0 22
+3 0 22
+4 0 22
+3 0 22 0 0 1 0 0 1
+4 0 22
+4 0 22
+3 0 22
+4 0 22 0 22
+4 0 22 0 22 0 0 2 0 0 2
+4 0 22
+3 0 22
+3 0 22 0 22
cfn=(104)
calls=22 0x3877c77180 0 
* 0 88 44 0 0 0 0 0 0 0 22 1
+5 0 22
+3 0 22
jump=22 0x3877c79ae3 0 
* 0 

totals: 913242 341960 219540 226 57 65 226 57 65 36865 985 1982 39
