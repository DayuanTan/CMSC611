version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 448


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 545483977 - 545532136
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 170 0 0 1 0 0 1
+3 0 170 0 0 0 0 0 0 0 0 170
+2 0 170
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=170 0x3877c7b8b0 0 
* 0 16101 3858 2062 19 3 0 19 3 0 3527 41
* 0 170 170 0 1 1 0 1 1 0 0 0 170

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 170 0 170 1 0 0 1
+1 0 170
+5 0 170
+3 0 170 0 170
+1 0 170
+4 0 170 0 0 1 0 0 1
+3 0 170
+4 0 170
+3 0 170 0 170 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=170 0x3877c7aa50 0 
* 0 27701 5063 4132 31 25 27 31 25 27 4709 187
* 0 170 170 0 1 1 0 1 1 0 0 0 170
+5 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
jcnd=170/170 +96 0 
* 0 
+96 0 170 0 0 1 0 0 1
+4 0 170 170
+1 0 170 170
+1 0 170 170

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 40 0 40 1 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40
+3 * 40 0 40
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=40 0x402d74 645 
* * 520 240 80
+5 * 40
+3 * 40 0 40
+3 +1 40 40
+6 * 40 0 40
+3 * 40 40
+6 * 40 0 40
+3 +1 40 40
+6 * 40 0 40 1 0 0 1
+3 * 40 40
+6 * 40 0 40
+3 +2 40 0 40
+7 * 40
jump=40 +86 * 
* * 
+2 +1 860 860
+3 * 860
+3 * 860 860
+4 * 860
+3 * 860
+3 * 860 0 860
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=860 0x402d9a 770 
* * 9460 4300 2580
+5 * 860 860
+4 * 860 860
+5 * 860
+4 * 860 0 860
+5 +1 860 860
+3 * 860
+3 * 860 860
+4 * 860
+3 * 860
+3 * 860 0 860
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=860 0x402dba 770 
* * 9460 4300 2580 1 0 0 1
+5 * 860 860
+2 * 860
+4 * 860 860
+5 * 860
+4 * 860 0 860
+5 -2 860 0 860
+4 * 860 860
+3 * 860
+3 * 860 860
+3 * 860 0 0 0 0 0 0 0 0 860 41
jcnd=820/860 -93 +1 
* * 
-9 * 40 40 0 1 0 0 1
+3 * 40
+3 * 40 40
+3 * 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 -93 +1 
* * 
+2 +4 40 40
+3 * 40
+3 * 40
+4 * 40 40 0 1 0 0 1
+5 * 40
+4 * 40
+3 * 40 0 40
+5 +1 40 40
+3 * 40
+3 * 40
+4 * 40 40
+5 * 40
+4 * 40
+3 * 40 0 40
+5 +1 40 0 40
+7 * 40
jump=40 0x4016ee * 
* * 
+2 +1 860 860
+3 * 860
+3 * 860 860
+4 * 860
+3 * 860 0 0 1 0 0 1
+3 * 860 0 860
cfi=(2)
cfn=(146)
calls=860 0x402dba 770 
* * 9460 4300 2580
+5 * 860 860
+2 * 860
+4 * 860 860
+5 * 860 0 860
+5 +1 860 860
+3 * 860
+3 * 860 860
+4 * 860
+3 * 860
+3 * 860 0 860
cfi=(2)
cfn=(144)
calls=860 0x402d9a 770 
* * 9460 4300 2580
+5 * 860 860
+4 * 860 860
+5 * 860 0 860
+5 +1 860 860
+5 * 860 860
+5 * 860 860
+5 * 860
+4 * 860 0 860
+5 +1 860 860
+5 * 860 860
+5 * 860 860
+5 * 860
+4 * 860 0 860
+5 -4 860 0 860
+4 * 860 860
+3 * 860
+3 * 860 860
+3 * 860 0 0 0 0 0 0 0 0 860 41
jcnd=820/860 0x401672 +1 
* * 
-9 * 40 40 0 1 0 0 1
+3 * 40
+3 * 40 40
+3 * 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x401672 +1 
* * 
+6 +6 40 40 0 1 0 0 1
+5 * 40 40
+5 * 40 0 40
+5 +2 40 40
+3 +1 40 0 40
+3 * 40 40
+5 * 40 40
+1 * 40 40

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 40
+7 * 40
+7 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=40 0x4030b2 310 
* * 30638 9111 8093 63 16 16 63 16 16 1650 97 158 19
+5 * 40
+7 * 40
+7 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=40 0x402ff4 310 
* * 30610 9111 8063 35 7 14 35 7 14 1658 87 158
+5 * 40 0 0 1 0 0 1
+7 * 40
+7 * 40
+3 * 40
+3 * 40 0 40
cfn=(142)
calls=40 0x401585 -52 
* * 92040 40560 21320 8 0 0 8 0 0 1800 82
+5 * 40 0 40
+8 * 40 40
+6 * 40 0 40
+6 * 40
+7 * 40
+3 * 40 0 40
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=40 0x402df4 414 
* * 9555 2986 2213 31 5 0 31 5 0 910 14 80
+5 * 40
+7 * 40
+3 * 40 0 40 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=40 0x402e74 414 
* * 9559 2996 2201 7 0 0 7 0 0 916 9 80
+5 +2 40
+7 * 40
+7 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(4)
calls=40 0x4030b2 310 
* * 30352 9093 7997 2 0 1 2 0 1 1634 44 158
+5 * 40
+7 * 40
+7 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(80)
calls=40 0x402ff4 310 
* * 29883 9057 7922 0 0 2 0 0 2 1549 18 158
+5 * 40 40
+6 * 40 0 0 1 0 0 1
+7 * 40
+7 * 40 0 40
+6 * 40 40
+8 * 40
+3 * 40
+3 * 40 0 40
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=40 0x401719 -33 
* * 43640 18080 10060 4 0 0 4 0 0 900 41
+5 * 40 0 40
+8 * 40 40
+6 * 40 0 40
+6 * 40
+7 * 40 0 0 1 0 0 1
+3 * 40 0 40
cfi=(2)
cfn=(148)
calls=40 0x402df4 414 
* * 9555 2986 2213 0 0 0 0 0 0 910 9 80
+5 * 40
+7 * 40
+3 * 40 0 40
cfi=(2)
cfn=(178)
calls=40 0x402e74 414 
* * 9559 2996 2201 0 0 0 0 0 0 916 4 80
+5 +2 40 40
+7 * 40
+3 * 40 0 40
cfi=(2)
cfn=(2)
calls=40 0x402d74 645 
* * 520 240 80
+5 * 40 40
+6 * 40
+3 * 40
+3 * 40
+3 * 40 40
+7 * 40
+3 * 40 0 0 1 0 0 1
+3 * 40 0 40
cfi=(2)
cfn=(144)
calls=40 0x402d9a 770 
* * 440 200 120
+5 * 40
+3 * 40
+7 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=40 0x402eda 901 
* * 9324 3130 2565 36 12 8 36 12 8 445 32 29
+5 +1 40 40
+7 * 40
+3 * 40 0 40
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=40 0x402f54 645 
* * 520 240 80 0 1 0 0 1
+5 * 40 40
+6 * 40
+3 * 40
+3 * 40
+3 * 40 40
+7 * 40 0 0 1 0 0 1
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(146)
calls=40 0x402dba 770 
* * 440 200 120
+5 * 40
+3 * 40
+7 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=40 0x402f7a 901 
* * 9249 3127 2568 21 2 7 21 2 7 428 28 29
+5 +1 40 40
+7 * 40
+3 * 40 0 40
cfi=(2)
cfn=(10)
calls=40 0x402f54 645 
* * 520 240 80
+5 * 40 40
+6 * 40
+3 * 40
+3 * 40
+3 * 40 40 0 1 0 0 1
+7 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(146)
calls=40 0x402dba 770 
* * 440 200 120
+5 * 40 40
+2 * 40
+4 * 40 40
+8 * 40 40
+8 * 40 0 40
+8 +1 40 40
+7 * 40
+3 * 40 0 40
cfi=(2)
cfn=(2)
calls=40 0x402d74 645 
* * 520 240 80
+5 * 40 40 0 1 0 0 1
+6 * 40
+3 * 40
+3 * 40
+3 * 40 40
+7 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(144)
calls=40 0x402d9a 770 
* * 440 200 120
+5 * 40 40
+4 * 40 40
+8 * 40
+4 * 40 40
+8 * 40
+3 * 40 0 40
+8 +2 40 0 40
+7 -12 40 40
+8 * 40 40
+7 * 40 0 0 0 0 0 0 0 0 40 3
jcnd=1/40 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 40
+7 * 40
+3 * 40 0 40
cfi=(2)
cfn=(2)
calls=40 0x402d74 645 
* * 520 240 80 2 0 1 2 0 1
+5 * 40
+3 * 40 40
+7 * 40
+3 * 40 0 40
cfi=(2)
cfn=(2)
calls=40 0x402d74 645 
* * 520 240 80 0 1 0 0 1
+5 * 40
+3 * 40 0 0 0 0 0 0 0 0 40
+2 * 40 0 0 1 0 0 1
+5 * 40
jump=40 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 40
+2 * 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+5 +1 40 40
+4 * 40
+3 * 40 0 40
cfi=(2)
cfn=(2)
calls=40 0x402d74 645 
* * 520 240 80
+5 * 40
+3 * 40 0 40
+3 +1 40 40 0 1 0 0 1
+6 * 40 0 40
+3 * 40 40
+6 * 40 0 40
+3 +2 40 0 40
+7 * 40
jump=40 +86 * 
* * 
+2 +1 860 860
+3 * 860
+3 * 860 860
+4 * 860
+3 * 860
+3 * 860 0 860
cfi=(2)
cfn=(144)
calls=860 0x402d9a 770 
* * 9460 4300 2580
+5 * 860 860
+4 * 860 860
+5 * 860
+4 * 860 0 860
+5 +1 860 860
+3 * 860
+3 * 860 860
+4 * 860
+3 * 860
+3 * 860 0 860
cfi=(2)
cfn=(146)
calls=860 0x402dba 770 
* * 9460 4300 2580
+5 * 860 860
+2 * 860
+4 * 860 860
+5 * 860
+4 * 860 0 860
+5 -2 860 0 860
+4 * 860 860
+3 * 860
+3 * 860 860
+3 * 860 0 0 0 0 0 0 0 0 860 41
jcnd=820/860 -93 +1 
* * 
-9 * 40 40 0 1 0 0 1
+3 * 40
+3 * 40 40
+3 * 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 -93 +1 
* * 
+2 +4 40 40
+3 * 40
+3 * 40 0 0 1 0 0 1
+4 * 40 40
+5 * 40
+4 * 40
+3 * 40 0 40
+5 +1 40 40
+3 * 40
+3 * 40
+4 * 40 40
+5 * 40
+4 * 40
+3 * 40 0 40
+5 +1 40 40
+5 * 40 40
+5 * 40 40
+5 * 40 0 0 1 0 0 1
+4 * 40
+3 * 40 0 40
+5 +2 40 40
+3 +1 40 0 40
+3 * 40 40
+5 * 40 40
+1 * 40 40

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80 1 0 0 1
+4 +1 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=80 0x4049d4 -35 
* * 480 160 240 1 0 0 1
+5 * 80 80
+1 * 80 80

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 80
+4 * 80
+3 * 80 0 80
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=80 0x404520 -35 
* * 400 160 160
+5 * 80 80
+1 * 80 80

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=80 0x404a28 -35 
* * 480 160 240 1 0 1 1 0 1
+5 * 80 80
+1 * 80 80

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 80
+4 * 80
+3 * 80 0 80
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=80 0x4044cc -35 
* * 400 160 160
+5 * 80 80
+1 * 80 80

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 * 80 80
+4 * 80 80
+1 * 80 80

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=40 0x40406a -87 
* * 960 320 360 0 2 3 0 2 3 40
+5 * 40 40
+1 * 40 40

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=10 +8 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=10 +7 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 80 0 80
+1 * 80
+3 * 80 0 80
+4 * 80 80
+4 * 80 80
+1 * 80 80

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=40 0x403df2 -87 
* * 960 320 360 0 4 1 0 4 1 40
+5 * 40 40
+1 * 40 40

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 130 0 130
+1 * 130
+3 * 130 0 130
+4 +1 130 130
+4 * 130 130
+1 * 130 130

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+4 +1 160 160 0 1 0 0 1
+4 * 160 160
+1 * 160 160

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 130 0 130
+1 * 130
+3 * 130 0 130 0 0 1 0 0 1
+4 +1 130 130
+4 * 130 130
+1 * 130 130

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 +1 160
+4 * 160
+3 * 160 0 160
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=160 0x404ffe 790 
* * 960 480 320 1 0 0 1
+5 * 160 160
+3 * 160 160
+1 * 160 160

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+4 +1 160 160
+4 * 160 160
+1 * 160 160

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 +1 160
+4 * 160
+3 * 160 0 160 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=160 0x40500c 790 
* * 960 480 320 1 0 0 1
+5 * 160 160
+3 * 160 160
+1 * 160 160

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 80 0 80
+1 * 80
+3 * 80 0 80
+4 * 80 0 80
+4 * 80 80
+4 * 80 80
+1 * 80 80

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 85 0 85 1 0 0 1
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 * 85 0 85
+4 +2 85 85
+4 * 85
+3 * 85 0 85
cfn=(102)
calls=85 0x4048de +12 
* * 510 170 170 1 0 0 1
+5 * 85 85
+4 * 85 0 0 1 0 0 1
+3 * 85
+2 * 85 0 0 0 0 0 0 0 0 85
jcnd=85/85 +7 +3 
* * 
+7 +3 85 85
+4 * 85
+4 * 85
+3 * 85 0 85
cob=(5)
cfi=(8)
cfn=(32)
calls=85 0x387e4bd0b0 0 
* * 15006 2858 2268 18 15 16 18 15 16 2411 78 85
* * 85 85 0 0 0 0 0 0 0 0 0 85
+5 +1 85 85
+1 * 85 85

fn=(18)
0x404a28 81 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80 0 0 1 0 0 1
+4 * 80 0 80
+4 * 80 80
+1 * 80 80

fn=(92)
0x4049d4 81 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 * 80 0 80
+4 * 80 80
+1 * 80 80

fn=(196)
0x404520 86 80 0 80
+1 * 80
+3 * 80 0 80
+4 * 80 80
+1 * 80 80

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 85 0 85 1 0 0 1
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 * 85 0 85 1 0 0 1
+4 +2 85 85
+4 * 85
+3 * 85 0 85
cfn=(28)
calls=85 0x404992 +12 
* * 510 170 170 1 0 0 1
+5 * 85 85
+4 * 85
+3 * 85
+2 * 85 0 0 0 0 0 0 0 0 85
jcnd=85/85 +7 +3 
* * 
+7 +3 85 85
+4 * 85
+4 * 85
+3 * 85 0 85
cob=(5)
cfi=(8)
cfn=(32)
calls=85 0x387e4bd0b0 0 
* * 15415 2885 2374 17 11 12 17 11 12 2468 109 85
* * 85 85 0 1 1 0 1 1 0 0 0 85
+5 +1 85 85
+1 * 85 85

fn=(102)
0x4048de 113 95 0 95 1 0 0 1
+1 * 95
+3 * 95 0 95
+4 +1 95
+10 * 95 95
+1 * 95 95

fn=(266)
0x40406a 129 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40
+3 * 40
+5 * 40 0 40
cfi=(16)
cfn=(226)
calls=40 0x402d61 -20 
* * 280 120 120
+5 * 40
+3 * 40 0 0 0 0 0 0 0 0 40
+2 * 40 40
+4 * 40 40 0 0 2 0 0 2
+2 * 40 0 40 0 0 3 0 0 3
+2 * 40 40
+1 * 40 40

fn=(28)
0x404992 113 95 0 95 1 0 0 1
+1 * 95
+3 * 95 0 95
+4 +1 95
+10 * 95 95
+1 * 95 95

fn=(176)
0x4044cc 86 80 0 80
+1 * 80
+3 * 80 0 80
+4 * 80 80
+1 * 80 80

fn=(224)
0x403df2 129 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40
+3 * 40
+5 * 40 0 40
cfi=(16)
cfn=(226)
calls=40 0x402d61 -20 
* * 280 120 120
+5 * 40
+3 * 40 0 0 0 0 0 0 0 0 40
+2 * 40 40
+4 * 40 40 0 0 4 0 0 4
+2 * 40 0 40 0 0 1 0 0 1
+2 * 40 40
+1 * 40 40

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 85 0 85
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 * 85 0 85
+4 +1 85 85
+4 * 85
+3 * 85 0 85
cob=(5)
cfi=(8)
cfn=(164)
calls=85 0x387e4bb2f0 0 
* * 8380 2001 1042 21 4 0 21 4 0 1841 25 85
* * 85 85 0 1 1 0 1 1 0 0 0 85
+5 * 85 85
+1 * 85 85

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 85 0 85
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 * 85 0 85
+4 +1 85 85
+4 * 85
+3 * 85 0 85
cob=(5)
cfi=(8)
cfn=(164)
calls=85 0x387e4bb2f0 0 
* * 8401 2027 1020 0 0 0 0 0 0 1856 16 85
* * 85 85 0 0 0 0 0 0 0 0 0 85
+5 * 85 85
+1 * 85 85

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=10 0x404caa 450 
* * 2012 641 607 2 0 3 2 0 3 48 4 9
+5 * 10 10
+1 * 10 10

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=80 0x404484 107 
* * 24954 7580 7104 25 3 4 25 3 4 812 49 156 19
+5 * 80 80
+1 * 80 80

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=10 0x4048f2 107 
* * 2292 741 707 4 0 3 4 0 3 48 4 9
+5 * 10 10
+1 * 10 10

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +2 80 80 0 1 0 0 1
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=80 0x404a36 450 
* * 22714 6780 6304 24 3 4 24 3 4 812 49 156 19
+5 * 80 80
+1 * 80 80

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=80 0x40439c 107 
* * 24954 7580 7104 7 0 4 7 0 4 812 47 156
+5 * 80 80
+1 * 80 80

fn=(116)
0x40439c 107 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +10 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=80 0x4047d7 -26 
* * 23834 7180 6704 7 0 4 7 0 4 812 47 156
+5 +1 80 80
+1 * 80 80

fn=(118)
0x4047d7 91 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=80 0x4049e2 450 
* * 22714 6780 6304 7 0 4 7 0 4 812 47 156
+5 * 80 80
+1 * 80 80

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=10 0x404772 -25 
* * 2442 791 767 2 0 0 2 0 0 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(230)
calls=10 0x40465c -25 
* * 2442 791 767 5 0 3 5 0 3 48 4 9
+5 +1 10 10
+1 * 10 10

fn=(232)
0x4048f2 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(234)
calls=10 0x404af4 -26 
* * 2152 691 657 4 0 3 4 0 3 48 4 9
+5 +1 10 10
+1 * 10 10

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=10 0x404b99 -26 
* * 2152 691 657 2 0 0 2 0 0 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(274)
0x404b99 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=10 0x404cf0 450 
* * 2012 641 607 1 0 0 1 0 0 48 3 9
+5 * 10 10
+1 * 10 10

fn=(50)
0x404484 107 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +10 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(52)
calls=80 0x404829 -26 
* * 23834 7180 6704 25 3 4 25 3 4 812 49 156 19
+5 +1 80 80
+1 * 80 80

fn=(270)
0x404772 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(272)
calls=10 0x4049a6 107 
* * 2292 741 707 2 0 0 2 0 0 48 3 9
+5 * 10 10
+1 * 10 10

fl=(2)
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 85 0 85 1 0 0 1
+1 * 85 0 0 1 0 0 1
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 0 85 85
+5 0 85 0 0 0 0 0 0 0 0 85
+2 0 85 85
+4 0 85 85
+4 0 85
+5 0 85
+3 0 85
+3 0 85 0 85
fi=(6) ???
cfi=(5)
cfn=(100)
calls=85 0x40461a 99 
* 0 17216 3538 2948 21 15 16 21 15 16 2496 78 170
+5 0 85
fi=(6)
jump=85 +7 0 
* 0 
+7 0 85 85
+1 0 85 85

fn=(144)
0x402d9a 770 2660 0 2660
+1 * 2660
+3 * 2660 0 2660
+4 * 2660 0 2660
+4 +1 2660 2660
+4 * 2660 2660
+3 * 2660 2660
+4 * 2660
+4 * 2660
+3 * 2660 2660
+1 * 2660 2660

fn=(146)
0x402dba 770 2660 0 2660
+1 * 2660
+3 * 2660 0 2660 1 0 0 1
+4 * 2660 0 2660
+4 +1 2660 2660
+4 * 2660 2660
+3 * 2660 2660
+4 * 2660
+4 * 2660
+3 * 2660 2660
+1 * 2660 2660

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 80
+4 * 80
+3 * 80 0 80
cfi=(4)
cfn=(194)
calls=80 0x403d7e +42 
* * 1120 400 400 1 0 0 1
+5 * 80 80
+1 * 80 80

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=10 0x403b08 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(256)
calls=10 0x404978 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+1 * 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80 80
+4 * 80
+3 * 80 80
+4 * 80 80
+3 * 80
+3 * 80
+3 * 80
+4 * 80
+3 * 80 80
+4 * 80 80
+3 -1 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=80 0x403d98 +11 
* * 10158 2712 1762 1 0 0 1 0 0 1832 13 160
+5 +1 80 80
+4 * 80
+3 * 80 0 80
cfn=(192)
calls=80 0x403296 -82 
* * 1840 640 640 1 0 0 1
+5 * 80
jump=80 +28 * 
* * 
+28 * 80
+4 * 80 80
+1 * 80 80
+1 * 80 80

fn=(2)
0x402d74 645 340 0 340 1 0 0 1
+1 * 340
+3 * 340 0 340 0 0 1 0 0 1
+4 +1 340 340
+4 * 340 340 0 1 1 0 1 1
+4 * 340
+3 * 340 340
+4 * 340 340
+3 * 340
+3 * 340
+3 * 340
+4 * 340 340
+1 * 340 340

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=80 0x404236 -14 
* * 17716 3744 3146 21 12 8 21 12 8 2472 92 160
+5 * 80 80
+4 * 80 0 80
+3 +1 80 80
+4 * 80 80 0 1 0 0 1
+3 * 80 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+3 * 80 80
+4 * 80
+4 * 80
+3 * 80 80
+4 * 80 0 80
+4 +1 80 80
+1 * 80 80

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80 80 0 1 0 0 1
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(96)
calls=80 0x403fbe -14 
* * 17219 3708 3041 13 7 12 13 7 12 2395 58 160
+5 * 80 80
+4 * 80 0 80
+3 +1 80 80
+4 * 80 80
+3 * 80 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+3 * 80 80
+4 * 80
+4 * 80
+3 * 80 80
+4 * 80 0 80
+4 +1 80 80
+1 * 80 80

fn=(244)
0x402f7a 901 40 0 40
+1 * 40
+3 * 40 0 0 1 0 0 1
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40 0 0 0 0 0 0 0 0 40
jcnd=5/40 +51 +10 
* * 
+2 +3 35 35
+4 * 35 35
+4 * 35 35
+4 -1 35 35
+4 * 35
+3 * 35
+3 * 35 0 35
cfi=(3)
cfn=(264)
calls=35 0x4036b1 215 
* * 1330 455 490 0 2 1 0 2 1 35
+5 +2 35 35
+4 * 35 35
+4 * 35
+4 * 35 35
+4 * 35 0 35
+4 * 35
jump=35 +36 +8 
* * 
+2 +6 5 5
+4 * 5
+3 * 5 0 5
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=5 0x4039c4 556 
* * 115 45 35
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=5 0x4036de 318 
* * 6784 2127 1843 20 0 6 20 0 6 353 28 29
+5 +2 40 40
+1 * 40 40

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 175 0 175 1 0 0 1
+1 * 175
+3 * 175 0 175 1 0 0 1
+4 +1 175 175
+4 * 175 175
+1 * 175 175

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+3 * 80 0 80
+4 * 80
+4 * 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=80 0x404380 726 
* * 800 400 320
+5 * 80 80
+4 * 80 80
+1 * 80 80

fn=(148)
0x402df4 414 80 0 80
+1 * 80
+3 * 80 0 80
+1 * 80
+4 * 80 0 80 1 0 0 1
+4 +2 80 80
+4 * 80
+3 * 80 0 80
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=80 0x40325e 113 
* * 480 240 160
+5 * 80
+3 * 80 80
+4 * 80 80
+4 * 80 80
+4 * 80 80
+3 -1 80
+3 * 80
+3 * 80 0 80
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=80 0x40326c 148 
* * 2480 800 960 4 0 0 4
+5 +1 80 80
+4 * 80
+3 * 80 0 80
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=80 0x4031ec 159 
* * 14230 4212 2826 25 5 0 25 5 0 1820 23 160
+5 * 80
jump=80 +28 * 
* * 
+28 * 80 0 0 1 0 0 1
+4 * 80 80
+1 * 80 80
+1 * 80 80

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 85 0 85 1 0 0 1
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 * 85 0 85
+4 +2 85 85
+5 * 85 0 0 0 0 0 0 0 0 85
+2 +1 85 85
+4 * 85 85
+4 * 85 85
+4 * 85
+3 * 85
+3 * 85 0 85
cfi=(5)
cfn=(160)
calls=85 0x4044d6 -65 
* * 9400 2341 1467 22 5 0 22 5 0 1841 25 170
+5 +1 85 85
+1 * 85 85

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 80 0 80
+1 * 80
+3 * 80 0 80
+1 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=80 0x4043ca -45 
* * 2880 1040 1120 4 0 4 4 0 4
+5 +1 80 80 0 1 0 0 1
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(20)
calls=80 0x404412 +43 
* * 19716 4704 3706 22 12 8 22 12 8 2472 92 160
+5 * 80
jump=80 +28 * 
* * 
+28 * 80
+4 * 80 80
+1 * 80 80
+1 * 80 80

fn=(14)
0x4043ca 90 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80 0 0 1 0 0 1
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(4)
cfn=(16)
calls=80 0x404804 +24 
* * 1440 480 560 2 0 1 2 0 1
+5 * 80 80
+4 * 80 0 80 0 0 2 0 0 2
+7 * 80 80
+4 * 80 0 80 1 0 0 1
+8 * 80 80
+4 * 80 0 80
+8 +1 80 80
+1 * 80 80

fn=(80)
0x402ff4 310 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+2 * 80 0 80
+2 * 80 0 80
+1 * 80 0 0 1 0 0 1
+4 * 80 0 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80
+3 * 80 0 80
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=80 0x4039fc 117 
* * 480 240 160 2 0 0 2
+5 * 80
+3 * 80 0 80
cfi=(3)
cfn=(84)
calls=80 0x4039ed -88 
* * 480 240 160
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(2)
calls=80 0x402d74 645 
* * 1040 480 160
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80
+3 * 80
+3 * 80 0 80 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=80 0x403a0a 134 
* * 23859 6268 5281 20 7 12 20 7 12 2395 58 160
+5 +4 80 80
+4 * 80
+3 * 80 0 80
cfn=(106)
calls=80 0x40325e 113 
* * 480 240 160 1 0 0 1
+5 * 80
+3 * 80 80
+4 * 80 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=80 0x403a98 565 
* * 2000 800 640 2 0 0 2
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(112)
calls=80 0x403a68 547 
* * 2000 800 640
+5 * 80
+3 * 80
+3 * 80
+3 * 80
+3 * 80 0 80
cfi=(11)
cfn=(114)
calls=80 0x403ac9 -60 
* * 26154 7980 7584 7 0 4 7 0 4 812 47 156
+5 -3 80 80
+4 * 80 0 80
+4 * 80
jump=80 +28 +4 
* * 
+28 +4 80
+4 * 80 80
+1 * 80 80
+2 * 80 80
+2 * 80 80
+1 * 80 80

fn=(188)
0x403d98 171 85 0 85 1 0 0 1
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 * 85 0 85
+4 +2 85 85
+5 * 85 0 0 0 0 0 0 0 0 85 5
+2 +1 85 85
+4 * 85 85
+4 * 85 85
+4 * 85
+3 * 85
+3 * 85 0 85
cfi=(5)
cfn=(190)
calls=85 0x40452a -65 
* * 9421 2367 1445 0 0 0 0 0 0 1856 16 170
+5 +1 85 85
+1 * 85 85

fn=(22)
0x404236 167 85 0 85 1 0 0 1
+1 * 85
+3 * 85
+4 * 85 0 85 1 0 0 1
+4 * 85 0 85
+4 0 85 85
+5 0 85 0 0 0 0 0 0 0 0 85
+2 0 85 85
+4 0 85 85
+4 0 85
+5 0 85
+3 0 85
+3 0 85 0 85
fi=(6)
cfi=(5)
cfn=(26)
calls=85 0x404730 99 
* 0 17625 3565 3054 21 12 12 21 12 12 2553 109 170
+5 0 85
fi=(6)
jump=85 +7 0 
* 0 
+7 0 85 85
+1 0 85 85

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+4 * 80 0 80
+4 * 80
+4 * 80 0 0 1 0 0 1
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=80 0x404468 726 
* * 800 400 320 1 0 0 1
+5 * 80 80
+4 * 80 80
+1 * 80 80

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+3 * 80 0 80
+4 * 80
+4 * 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(10)
cfn=(44)
calls=80 0x404468 726 
* * 800 400 320
+5 * 80 80
+4 * 80 80
+1 * 80 80

fn=(86)
0x403a0a 134 80 0 80
+1 * 80
+3 * 80 0 80
+1 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=80 0x4042e2 -45 
* * 2880 1040 1120 5 0 0 5
+5 +1 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80 1 0 0 1
cfn=(94)
calls=80 0x40432a +43 
* * 19219 4668 3601 14 7 12 14 7 12 2395 58 160
+5 * 80
jump=80 +28 * 
* * 
+28 * 80
+4 * 80 80
+1 * 80 80
+1 * 80 80

fn=(88)
0x4042e2 90 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80 1 0 0 1
cfi=(4)
cfn=(90)
calls=80 0x4047b2 +24 
* * 1440 480 560 3 0 0 3
+5 * 80 80
+4 * 80 0 80
+7 * 80 80
+4 * 80 0 80
+8 * 80 80
+4 * 80 0 80
+8 +1 80 80
+1 * 80 80

fn=(156)
0x4031ec 159 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+1 * 80
+4 * 80 0 80
+4 +2 80 80
+4 * 80 80 0 1 0 0 1
+4 * 80
+3 * 80 80
+4 * 80 80
+3 * 80
+3 * 80
+3 * 80
+4 * 80
+3 * 80 80
+4 * 80 80
+3 -1 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(158)
calls=80 0x403ce6 +11 
* * 10150 2692 1786 22 5 0 22 5 0 1820 23 160
+5 +1 80 80
+4 * 80
+3 * 80 0 80
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=80 0x4031b8 -82 
* * 1840 640 640 1 0 0 1
+5 * 80
jump=80 +28 * 
* * 
+28 * 80
+4 * 80 80
+1 * 80 80
+1 * 80 80

fn=(172)
0x4031b8 79 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 80
+4 * 80
+3 * 80 0 80
cfi=(4)
cfn=(174)
calls=80 0x403ccc +42 
* * 1120 400 400
+5 * 80 80
+1 * 80 80

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=5 0x40404e 726 
* * 50 25 20 1 0 0 1
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=5 0x4045cc 650 
* * 160 55 55 1 0 0 1
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 5
+4 * 5
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(210)
calls=5 0x4045cc 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(246)
0x4039c4 556 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(10)
0x402f54 645 180 0 180 1 0 0 1
+1 * 180
+3 * 180 0 180
+4 +1 180 180
+4 * 180 180 0 0 2 0 0 2
+4 * 180
+3 * 180 180
+4 * 180 180
+3 * 180
+3 * 180
+3 * 180
+4 * 180 180
+1 * 180 180

fn=(106)
0x40325e 113 175 0 175 1 0 0 1
+1 * 175
+3 * 175 0 175
+4 +1 175 175
+4 * 175 175
+1 * 175 175

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204)
calls=5 0x40404e 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(254)
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5
+3 * 5 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(12)
cfn=(214)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(254)
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(6)
0x403b08 117 90 0 90 1 0 0 1
+1 * 90
+3 * 90 0 90 0 0 1 0 0 1
+4 +1 90 90
+4 * 90 90
+1 * 90 90

fn=(82)
0x4039fc 117 90 0 90 1 0 0 1
+1 * 90
+3 * 90 0 90 1 0 0 1
+4 +1 90 90
+4 * 90 90
+1 * 90 90

fn=(200)
0x402eda 901 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40 0 0 0 0 0 0 0 0 40 6
jcnd=5/40 +51 +10 
* * 
+2 +3 35 35
+4 * 35 35
+4 * 35 35
+4 -1 35 35
+4 * 35
+3 * 35
+3 * 35 0 35
cfi=(3)
cfn=(222)
calls=35 0x403373 215 
* * 1330 455 490 0 3 0 0 3 0 35
+5 +2 35 35
+4 * 35 35
+4 * 35
+4 * 35 35
+4 * 35 0 35
+4 * 35
jump=35 +36 +8 
* * 
+2 +6 5 5 0 1 0 0 1
+4 * 5
+3 * 5 0 5
cfn=(202)
calls=5 0x403688 556 
* * 115 45 35 2 0 0 2
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=5 0x4033a0 318 
* * 6859 2130 1840 33 9 8 33 9 8 370 26 29
+5 +2 40 40
+1 * 40 40

fn=(4)
0x4030b2 310 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+2 * 80 0 80
+2 * 80 0 80
+1 * 80
+4 * 80 0 80 1 0 0 1
+4 * 80 0 80
+4 +2 80 80
+4 * 80
+3 * 80 0 80
cfn=(6)
calls=80 0x403b08 117 
* * 480 240 160 1 0 1 1 0 1
+5 * 80
+3 * 80 0 80
cfi=(3)
cfn=(8)
calls=80 0x403afa -88 
* * 480 240 160 1 0 0 1
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(10)
calls=80 0x402f54 645 
* * 1040 480 160 1 1 0 1 1
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80
+3 * 80
+3 * 80 0 80
cfn=(12)
calls=80 0x403b16 134 
* * 24356 6304 5386 27 12 12 27 12 12 2472 92 160
+5 +4 80 80 0 1 0 0 1
+4 * 80
+3 * 80 0 80
cfn=(40)
calls=80 0x40333c 113 
* * 480 240 160 2 0 0 2
+5 * 80
+3 * 80 80
+4 * 80 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(42)
calls=80 0x403ba4 565 
* * 2000 800 640 3 0 0 3
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(46)
calls=80 0x403b74 547 
* * 2000 800 640
+5 * 80
+3 * 80
+3 * 80
+3 * 80
+3 * 80 0 80 1 0 0 1
cfi=(11)
cfn=(48)
calls=80 0x403bd5 -60 
* * 26154 7980 7584 26 3 4 26 3 4 812 49 156 19
+5 -3 80 80
+4 * 80 0 80
+4 * 80
jump=80 +28 +4 
* * 
+28 +4 80
+4 * 80 80
+1 * 80 80
+2 * 80 80
+2 * 80 80
+1 * 80 80

fn=(108)
0x403a98 565 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+4 * 80 0 80
+4 * 80
+4 * 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfi=(10)
cfn=(110)
calls=80 0x404380 726 
* * 800 400 320 1 0 0 1
+5 * 80 80
+4 * 80 80
+1 * 80 80

fn=(178)
0x402e74 414 80 0 80
+1 * 80
+3 * 80 0 80
+1 * 80
+4 * 80 0 80 1 0 0 1
+4 +2 80 80
+4 * 80
+3 * 80 0 80
cfn=(40)
calls=80 0x40333c 113 
* * 480 240 160
+5 * 80
+3 * 80 80
+4 * 80 80
+4 * 80 80
+4 * 80 80
+3 -1 80
+3 * 80
+3 * 80 0 80
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=80 0x40334a 148 
* * 2480 800 960 2 0 0 2
+5 +1 80 80
+4 * 80
+3 * 80 0 80
cfn=(186)
calls=80 0x4032ca 159 
* * 14238 4232 2802 3 0 0 3 0 0 1832 13 160
+5 * 80
jump=80 +28 * 
* * 
+28 * 80 0 0 1 0 0 1
+4 * 80 80
+1 * 80 80
+1 * 80 80

fn=(210)
0x4045cc 650 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(82)
calls=10 0x4039fc 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(212)
calls=10 0x4048c3 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fl=(12)
fn=(54)
0x404a36 450 80 0 80
+1 * 80
+3 * 80 0 80
+1 * 80
+4 * 80 0 80 1 0 0 1
+4 * 80 0 80
+4 * 80 0 80
+4 +10 80 80
+4 * 80
+3 * 80 0 80
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=80 0x404c38 288 
* * 1200 480 400 3 0 0 3
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(56)
calls=80 0x404c38 288 
* * 1200 480 400
+5 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=80 0x404c52 -36 
* * 18554 5340 4864 20 3 4 20 3 4 812 49 156 19
+5 +1 80
+4 * 80 80
+1 * 80 80
+1 * 80 80

fn=(60)
0x404c52 424 80 0 80
+1 * 80
+3 * 80 0 80
+2 * 80 0 80
+1 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +4 80 80
+4 * 80
+3 * 80 0 80
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=80 0x40492d 277 
* * 1200 480 400 2 0 0 2
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=80 0x404d9d 277 
* * 2000 720 640 2 0 1 2 0 1
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(66)
calls=80 0x404d9d 277 
* * 2000 720 640
+5 * 80
+3 * 80
+3 * 80
+3 * 80 0 80
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=80 0x404db7 -49 
* * 11114 2860 2384 15 3 3 15 3 3 812 49 156 19
+5 +1 80
+4 * 80 80
+1 * 80 80
+2 * 80 80
+1 * 80 80

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=10 0x404f37 -22 
* * 612 161 117 0 0 0 0 0 0 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(62)
0x40492d 277 110 0 110 1 0 0 1
+1 * 110
+3 * 110
+4 * 110 0 110
+4 +1 110 110
+4 * 110
+3 * 110 0 110 1 0 0 1
cfi=(13)
cfn=(64)
calls=110 -33 -66 
* * 660 330 220
+5 * 110 110
+1 * 110 110

fn=(66)
0x404d9d 277 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160
+3 * 160 0 160
cfi=(13)
cfn=(68)
calls=160 0x404f1a -58 
* * 2560 960 800 2 0 1 2 0 1
+5 * 160 160
+1 * 160 160

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 10 0 10
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=10 0x404878 277 
* * 150 60 50 0 0 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=10 0x404f9c -49 
* * 762 211 177 0 0 2 0 0 2 48 4 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(214)
0x4045ee 216 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 +5 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +8 +2 
* * 
+8 +2 10 10
+4 +1 10 10
+1 * 10 10

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(130)
calls=20 0x40486a -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(282)
calls=10 0x404fcd -49 
* * 762 211 177 0 0 0 0 0 0 48 3 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(120)
0x4049e2 450 80 0 80
+1 * 80
+3 * 80 0 80
+1 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +10 80 80
+4 * 80
+3 * 80 0 80
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=80 0x404bc6 288 
* * 1200 480 400 3 0 0 3
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(122)
calls=80 0x404bc6 288 
* * 1200 480 400
+5 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=80 0x404be0 -36 
* * 18554 5340 4864 4 0 4 4 0 4 812 47 156
+5 +1 80
+4 * 80 80
+1 * 80 80
+1 * 80 80

fn=(128)
0x404878 277 110 0 110
+1 * 110
+3 * 110
+4 * 110 0 110 1 0 0 1
+4 +1 110 110
+4 * 110
+3 * 110 0 110
cfi=(13)
cfn=(130)
calls=110 -33 -66 
* * 660 330 220 0 0 1 0 0 1
+5 * 110 110
+1 * 110 110

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160
+3 * 160 0 160
cfi=(13)
cfn=(134)
calls=160 0x404e98 -58 
* * 2560 960 800 2 0 0 2
+5 * 160 160
+1 * 160 160

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +8 80 0 80
+4 +3 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=80 0x404eb5 -22 
* * 9914 2460 1904 1 0 4 1 0 4 812 47 156
+5 +1 80 80
+1 * 80 80

fn=(242)
0x404f9c 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(140)
calls=10 0x404eb5 -22 
* * 612 161 117 0 0 2 0 0 2 48 4 9
+5 +1 10 10
+1 * 10 10

fn=(276)
0x404cf0 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10
+3 * 10 0 10
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(278)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(280)
calls=10 0x404e40 -36 
* * 1492 461 427 1 0 0 1 0 0 48 3 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(278)
0x40469c 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(64)
calls=20 0x40491f -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(122)
0x404bc6 288 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160
+3 * 160 0 160
cfi=(13)
cfn=(124)
calls=160 0x404d36 -77 
* * 960 480 320 2 0 0 2
+5 * 160 160
+1 * 160 160

fn=(56)
0x404c38 288 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160 1 0 0 1
+4 +1 160 160
+4 * 160
+3 * 160 0 160
cfi=(13)
cfn=(58)
calls=160 0x404d8f -77 
* * 960 480 320 1 0 0 1
+5 * 160 160
+1 * 160 160

fn=(74)
0x404f37 368 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90 1 0 0 1
+4 * 90 0 90
+4 * 90 0 90
+4 +2 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90
+4 * 90 0 90
+4 +1 90 90
+5 * 90 0 0 0 0 0 0 0 0 90
jcnd=5/90 +33 +2 
* * 
+2 +1 85 85
+4 * 85
+8 * 85 85
+4 * 85 85
+4 * 85
+3 * 85 0 0 1 0 0 1
+3 * 85 0 85 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=85 0x3877c83840 0 
* * 8046 1651 1486 11 2 2 11 2 2 770 52 80 19
* * 85 85 0 1 1 0 1 1 0 0 0 85
+5 +1 90 90
+4 * 90
+8 * 90 90
+4 * 90
+3 +1 90 90
+1 * 90 90

fn=(140)
0x404eb5 368 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90 1 0 0 1
+4 * 90 0 90
+4 * 90 0 90 0 0 1 0 0 1
+4 +2 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90
+4 * 90 0 90
+4 +1 90 90
+5 * 90 0 0 0 0 0 0 0 0 90
jcnd=5/90 +33 +2 
* * 
+2 +1 85 85
+4 * 85
+8 * 85 85
+4 * 85 85
+4 * 85
+3 * 85
+3 * 85 0 85
cob=(2)
cfi=(9)
cfn=(78)
calls=85 0x3877c83840 0 
* * 8046 1651 1486 0 0 5 0 0 5 770 51 80
* * 85 85 0 0 0 0 0 0 0 0 0 85
+5 +1 90 90
+4 * 90
+8 * 90 90
+4 * 90
+3 +1 90 90
+1 * 90 90

fn=(72)
0x404db7 379 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80 1 0 0 1
+4 * 80 0 80
+4 * 80 0 80
+4 +8 80 0 80
+4 +3 80 80
+4 * 80 80
+4 * 80 80
+4 * 80
+3 * 80
+3 * 80 0 80
cfn=(74)
calls=80 0x404f37 -22 
* * 9914 2460 1904 14 3 3 14 3 3 812 49 156 19
+5 +1 80 80
+1 * 80 80

fn=(126)
0x404be0 424 80 0 80
+1 * 80
+3 * 80 0 80
+2 * 80 0 80
+1 * 80
+4 * 80 0 80
+4 * 80 0 80
+4 * 80 0 80
+4 +4 80 80
+4 * 80
+3 * 80 0 80
cfn=(128)
calls=80 0x404878 277 
* * 1200 480 400 1 0 0 1
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(132)
calls=80 0x404d44 277 
* * 2000 720 640 2 0 0 2
+5 * 80
+3 * 80 80
+4 * 80
+3 * 80 0 80
cfn=(132)
calls=80 0x404d44 277 
* * 2000 720 640
+5 * 80
+3 * 80
+3 * 80
+3 * 80 0 80
cfn=(138)
calls=80 0x404d5e -49 
* * 11114 2860 2384 1 0 4 1 0 4 812 47 156
+5 +1 80
+4 * 80 80
+1 * 80 80
+2 * 80 80
+1 * 80 80

fn=(236)
0x404caa 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(240)
calls=10 0x404de8 -36 
* * 1492 461 427 1 0 3 1 0 3 48 4 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(204)
0x40404e 726 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=5 0x403e26 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(70)
0x40500c 790 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+4 +1 160 160
+4 * 160 160
+1 * 160 160

fn=(110)
0x404380 726 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+4 * 160 0 160
+4 * 160 160
+4 * 160 160
+3 * 160 160
+4 * 160 0 160
+3 * 160 160
+1 * 160 160

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(136)
0x404ffe 790 160 0 160 1 0 0 1
+1 * 160
+3 * 160 0 160
+4 +1 160 160
+4 * 160 160
+1 * 160 160

fn=(44)
0x404468 726 160 0 160
+1 * 160
+3 * 160 0 160
+4 * 160 0 160
+4 * 160 160
+4 * 160 160
+3 * 160 160
+4 * 160 0 160 1 0 0 1
+3 * 160 160
+1 * 160 160

fn=(248)
0x4042c6 726 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(220)
0x403e26 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 85 0 85 1 0 0 1
+1 * 85
+3 * 85 0 85
+4 * 85 0 85 1 0 0 1
+4 * 85 85
+1 * 85 85

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 85 0 85 1 0 0 1
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 +4 85 85
+4 * 85 85
+4 * 85
+3 * 85
+3 * 85 0 85
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=85 0x40454c -14 
* * 510 170 255 1 0 0 1
+5 +2 85 85
+1 * 85 85

fn=(150)
0x40326c 148 85 0 85
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 * 85 0 85
+4 +3 85 85 0 1 0 0 1
+4 * 85 85
+4 * 85
+3 * 85
+3 * 85 0 85
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=85 0x403d1a -29 
* * 1530 510 595 3 0 0 3
+5 +1 85 85
+1 * 85 85

fn=(180)
0x40334a 148 85 0 85
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 * 85 0 85
+4 +3 85 85
+4 * 85 85
+4 * 85
+3 * 85
+3 * 85 0 85
cfn=(182)
calls=85 0x403dcc -29 
* * 1530 510 595 2 0 0 2
+5 +1 85 85
+1 * 85 85

fn=(152)
0x403d1a 122 85 0 85 1 0 0 1
+1 * 85
+3 * 85
+4 * 85 0 85
+4 * 85 0 85
+4 +4 85 85
+4 * 85 85
+4 * 85
+3 * 85
+3 * 85 0 85
cfn=(154)
calls=85 0x4044f8 -14 
* * 510 170 255 2 0 0 2
+5 +2 85 85
+1 * 85 85

fn=(184)
0x40454c 112 85 0 85 1 0 0 1
+1 * 85
+3 * 85 0 85
+4 * 85 0 85
+4 * 85 85
+1 * 85 85

fl=(15)
fn=(250)
0x4036de 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x403799 +21 
* * 
0x403799 +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(252)
calls=5 0x404104 1336 
* * 905 335 235 4 0 0 4 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(258)
calls=5 0x4041ce 538 
* * 110 45 35
+5 * 5 0 5 1 0 0 1
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(260)
calls=5 0x4041f3 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(22)
calls=5 0x404236 167 
* * 1269 246 248 2 0 4 2 0 4 166 17 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5
+4 * 5 0 0 1 0 0 1
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(264)
calls=5 0x4036b1 215 
* * 190 65 70 0 0 2 0 0 2 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -88 
* * 1502 471 447 3 0 0 3 0 0 43 3 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 5
+3 -1 5 0 0 1 0 0 1
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(180)
calls=5 0x40334a 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(188)
calls=5 0x403d98 171 
* * 623 165 108 0 0 0 0 0 0 109 8 10
+5 +3 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x4039ba * 
* * 
0x4039ba * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fn=(206)
0x4033a0 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x40345e +21 
* * 
0x40345e +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(208)
calls=5 0x403e8c 1336 
* * 905 335 235 5 0 0 5 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(216)
calls=5 0x403f56 538 
* * 110 45 35
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(218)
calls=5 0x403f7b 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(96)
calls=5 0x403fbe 167 
* * 1357 255 247 10 8 4 10 8 4 186 20 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5 0 1 0 0 1
+4 * 5
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(222)
calls=5 0x403373 215 
* * 190 65 70 0 1 1 0 1 1 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -88 
* * 1502 471 447 6 0 3 6 0 3 43 4 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5
+4 * 5
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+3 -1 5
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(150)
calls=5 0x40326c 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(158)
calls=5 0x403ce6 171 
* * 610 159 106 1 0 0 1 0 0 106 2 10
+5 +3 5 5
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x40367f * 
* * 
0x40367f * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 60 60 0 1 0 0 1
+6 0 60
+2 0 60 0 0 0 0 0 0 0 0 60
+2 0 60 60

fn=(38) _int_malloc
0x3877c79a00 0 170 0 170 1 0 0 1
+2 0 170
+3 0 170 0 170
+2 0 170 0 170
+2 0 170 0 170 0 0 1 0 0 1
+2 0 170
+3 0 170 0 170
+1 0 170 0 170
+1 0 170
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
+6 0 170
+4 0 170
+6 0 170
+3 0 170
+4 0 170
+4 0 170
+4 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+6 0 170 170 0 1 1 0 1 1
+7 0 170 0 0 0 0 0 0 0 0 170 5
jcnd=48/170 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 110 110
+6 0 110
+4 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+3 0 110
+4 0 110 110
+1 0 110 110
+1 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
-14 0 60
+4 0 60 60
+1 0 60 60
+1 0 60 60
+2 0 60 60
+2 0 60 60
+2 0 60 60
+2 0 60 60
+7 0 65
+7 0 65 0 0 1 0 0 1 0 0 65 2
+2 0 65
+3 0 65
+5 0 65
+3 0 65
+4 0 65 0 65
+4 0 65
+2 0 65
+5 0 65 65 0 0 3 0 0 3
+4 0 65
+3 0 65 0 0 0 0 0 0 0 0 65
jcnd=65/65 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 65 0 0 1 0 0 1
+3 0 65
+3 0 65
+3 0 65
+4 0 65
+3 0 65
+4 0 65 0 65
+5 0 65
+3 0 65 0 65
+4 0 65 0 65
+4 0 65 0 65
+5 0 65
+3 0 65
+3 0 65
+3 0 65
+3 0 65
+4 0 65
+4 0 65 0 0 1 0 0 1
+4 0 65 0 65
+4 0 65
+4 0 65 0 65
+5 0 65 0 65
+5 0 65
+3 0 65
+3 0 65 0 65
+5 0 65
+5 0 65
+3 0 65 0 65
+4 0 65 0 65
+4 0 65
+6 0 65 0 65
+4 0 65 0 65
+5 0 65 0 0 1 0 0 1
+3 0 65
+3 0 65
+3 0 65
jump=65 +87 0 
* 0 
+8 0 34
+3 0 34
+4 0 34
+2 0 34
+2 0 34
+3 0 34
+3 0 34
+3 0 34
+2 0 34
+2 0 34
+5 0 34
+2 0 34 34
+4 0 34
+3 0 34
+4 0 34 0 34
+4 0 34 0 34
+8 0 34
+7 0 34 0 34
+4 0 34 0 34
+4 0 34 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
-38 0 19
+3 0 19
+4 0 19 0 19
+4 0 19 0 19
+8 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19
+6 0 118 118 0 1 0 0 1
+4 0 118
+3 0 118 0 0 0 0 0 0 0 0 118 6
jcnd=40/118 0x3877c79ef0 0 
* 0 
+6 0 78 78 0 0 1 0 0 1
+4 0 78 78
+4 0 78
+4 0 78 0 0 0 0 0 0 0 0 78
+6 0 78 78 0 1 1 0 1 1
+7 0 78 0 0 0 0 0 0 0 0 78 2
+6 0 78
+4 0 78
+7 0 78 0 0 0 0 0 0 0 0 78 2
+2 0 78
+3 0 78 0 0 0 0 0 0 0 0 78 16
jcnd=63/78 0x3877c79e28 0 
* 0 
+6 0 58
+3 0 58 0 58
+4 0 58 0 58
+5 0 58 0 0 0 0 0 0 0 0 58 5
jcnd=5/58 0x3877c7a090 0 
* 0 
+6 0 53
+7 0 53 0 0 0 0 0 0 0 0 53 6
jcnd=34/53 0x3877c79c50 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+4 0 19
+4 0 19 0 0 0 0 0 0 0 0 19
+6 0 19
+3 0 19
+4 0 19
+2 0 19
+2 0 19
+3 0 19
+3 0 19
+8 0 19
+3 0 19
+2 0 19
+2 0 19
+4 0 19 19
+4 0 19
+3 0 19 0 0 1 0 0 1 0 0 19 5
jcnd=19/19 0x3877c79e15 0 
* 0 
0x3877c79e15 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19
jump=19 0x3877c79c73 0 
* 0 
+8 0 63 63 0 1 0 0 1
+4 0 63
+3 0 63 0 0 0 0 0 0 0 0 63 8
jcnd=23/63 0x3877c79ce1 0 
* 0 
+6 0 40 40
+5 0 40 0 0 0 0 0 0 0 0 40 5
jcnd=20/40 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 40 0 0 1 0 0 1
+7 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 2
+6 0 40 40 0 1 0 0 1
+4 0 40
+3 0 40
+3 0 40
+2 0 40
+4 0 40
+3 0 40
+3 0 40
+2 0 40
+2 0 40
+2 0 40
+2 0 40 40 0 0 1 0 0 1
+8 0 40
+5 0 40
+5 0 40
+2 0 40 0 0 0 0 0 0 0 0 40
-2 0 29
+2 0 29 0 0 0 0 0 0 0 0 29
+2 0 69
+2 0 69 0 0 0 0 0 0 0 0 69 7
jcnd=48/69 +64 0 
* 0 
+2 0 21
+8 0 21
+3 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
-6 0 21
+3 0 21
+3 0 21 0 0 0 0 0 0 0 0 21 2
+2 0 42
+2 0 42 42
+8 0 42
+2 0 42 0 0 0 0 0 0 0 0 42 5
jcnd=21/42 -20 0 
* 0 
+2 0 21
+2 0 21
+5 0 21
+3 0 21
+3 0 21
+2 0 21
+2 0 21
+5 0 21 0 0 0 0 0 0 0 0 21
+2 0 21
+2 0 21
+4 0 21
+2 0 21
+2 0 21 0 0 0 0 0 0 0 0 21 4
jcnd=7/21 -8 0 
* 0 
-8 0 261
+4 0 261
+2 0 261
+2 0 261 0 0 0 0 0 0 0 0 261 42
jcnd=221/261 -8 0 
* 0 
-2 0 48 0 0 1 0 0 1
+2 0 48 0 0 0 0 0 0 0 0 48 5
jcnd=33/48 -8 0 
* 0 
+2 0 69 69 0 0 5 0 0 5
+4 0 69 0 0 1 0 0 1
+3 0 69 0 0 0 0 0 0 0 0 69 18
jcnd=40/69 0x3877c7a1cf 0 
* 0 
+6 0 29
+2 0 29
+4 0 29
+2 0 29
+2 0 29
+2 0 29 0 29
+8 0 29
jump=29 0x3877c79f30 0 
* 0 
0x3877c7a090 0 5 0 0 1 0 0 1
+7 0 5 0 5
+6 0 5
+3 0 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 40 40 0 1 1 0 1 1
+4 0 40 40 0 0 1 0 0 1
+4 0 40
+3 0 40 40
+4 0 40
+4 0 40
+3 0 40
+3 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40 0 1 0 0 1
+8 0 40 0 40
+4 0 40 0 40
+4 0 40 0 0 0 0 0 0 0 0 40 3
jcnd=19/40 +38 0 
* 0 
+2 0 21 21 0 0 1 0 0 1
+4 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
+2 0 21 21
+5 0 21 0 0 0 0 0 0 0 0 21
+6 0 21 21
+4 0 21 0 21
+4 0 21 21
+4 0 21 0 21
+4 0 21
+4 0 21 0 0 0 0 0 0 0 0 21
-4 0 19
+4 0 19 0 0 0 0 0 0 0 0 19
jcnd=1/19 0x3877c7a2e3 0 
* 0 
+6 0 39 39
+4 0 39 39 0 1 0 0 1
+4 0 39 0 0 0 0 0 0 0 0 39
+6 0 39
+4 0 39
+7 0 39 0 39 0 0 3 0 0 3
+4 0 39 0 39
+4 0 39 0 39
+4 0 39 0 39
+4 0 39 0 0 0 0 0 0 0 0 39 2
+2 0 39 0 39
+5 0 39
+7 0 39 0 0 0 0 0 0 0 0 39 4
jcnd=32/39 +18 0 
* 0 
+2 0 7 0 7 0 0 2 0 0 2
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 32
+7 0 32 0 32
+4 0 32
+3 0 32
+3 0 32
+4 0 32
+3 0 32
+4 0 32
+3 0 32
+3 0 32
+4 0 32 0 32
+4 0 32 0 32
+4 0 32
jump=32 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 1
+7 0 1 0 1
+6 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +7 0 
* 0 
+7 0 40
+4 0 40 0 0 1 0 0 1
+3 0 40
+3 0 40 0 40
cfn=(104)
calls=40 0x3877c77180 0 
* 0 160 80 0 1 0 0 1 0 0 40
+5 0 40
+3 0 40
jump=40 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 170 0 170 1 0 0 1
+5 0 170 0 170
+5 0 170
+3 0 170 0 170
+5 0 170
+4 0 170 170 0 0 1 0 0 1
+7 0 170 170 0 0 1 0 0 1
+3 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+6 0 170 170 0 0 1 0 0 1
+7 0 170 170 0 1 1 0 1 1
+4 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+2 0 170 170 0 0 1 0 0 1
+3 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
jcnd=170/170 +97 0 
* 0 
+18 0 170
+3 0 170
+3 0 170 0 170
cfn=(38)
calls=170 0x3877c79a00 0 
* 0 20561 3193 3112 27 19 27 27 19 27 3009 185
+5 0 170
+3 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+2 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+2 0 170
+3 0 170 0 0 0 0 0 0 0 0 170 2
+2 0 170 170
+7 0 170 0 0 0 0 0 0 0 0 170
jcnd=170/170 +13 0 
* 0 
+13 0 170 0 170
+2 0 170 0 0 0 0 0 0 0 0 170
+6 0 170
+3 0 170 170
+4 0 170 170
+5 0 170 170
+5 0 170
+4 0 170 170
+1 0 170 0 0 1 0 0 1
+5 0 170 170 0 0 1 0 0 1
+7 0 170 0 0 0 0 0 0 0 0 170
jcnd=170/170 +14 0 
* 0 
+14 0 170 0 170 1 0 0 1
+3 0 170 0 0 0 0 0 0 0 0 170
+6 0 170
jump=170 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 170 0 170 1 0 0 1
+2 0 170
+3 0 170
+3 0 170 0 170
+2 0 170
+3 0 170 0 170
+1 0 170
+3 0 170 0 170
+1 0 170
+3 0 170
+4 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+6 0 170
+4 0 170
+3 0 170 0 0 0 0 0 0 0 0 170 4
jcnd=10/170 0x3877c838d1 0 
* 0 
+2 0 160
+3 0 160
+3 0 160
+3 0 160
+3 0 160
+3 0 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 +41 0 
* 0 
+41 0 160 0 0 1 0 0 1
+3 0 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 0x3877c839c0 0 
* 0 
+24 0 160
+3 0 160
+4 0 160
+3 0 160
+3 0 160
+3 0 160
+3 0 160
+3 0 160 0 0 0 0 0 0 0 0 160 76
jcnd=84/160 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 86
+10 0 86 86 0 0 1 0 0 1
+3 0 86
+4 0 86 0 86
+3 0 86
+4 0 86
+4 0 86 0 0 0 0 0 0 0 0 86
jcnd=86/86 -18 0 
* 0 
-18 0 314 314
+3 0 314
+4 0 314 0 314
+3 0 314
+4 0 314
+4 0 314 0 0 0 0 0 0 0 0 314 8
jcnd=228/314 -18 0 
* 0 
+2 0 170
+4 0 170
+3 0 170 170
+1 0 170 170
+1 0 170 170
+2 0 170 170 0 1 0 0 1
+2 0 170 170
0x3877c839c0 0 160 0 0 1 0 0 1
+3 0 160
+3 0 160
+3 0 160
+4 0 160 0 160 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=160 0x3877c89b20 0 
* 0 6326 2052 1732 6 1 6 6 1 6 310 15 160 19
+5 0 160
jump=160 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 170 170 0 1 1 0 1 1
+7 0 170 170 0 0 1 0 0 1
+3 0 170
+3 0 170 0 0 1 0 0 1 0 0 170
+6 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+6 0 170 170
+4 0 170
+4 0 170
+2 0 170 0 0 0 0 0 0 0 0 170
+2 0 170
+2 0 170
+7 0 170 0 0 0 0 0 0 0 0 170
jcnd=170/170 +14 0 
* 0 
+14 0 170
+2 0 170
cfn=(170) _int_free
calls=170 0x3877c78650 0 
* 0 13551 3348 2062 17 1 0 17 1 0 2847 41

fn=(170)
0x3877c78650 0 170 0 170 1 0 0 1
+2 0 170 0 170
+2 0 170 0 170
+2 0 170
+3 0 170 0 170
+2 0 170 0 170
+1 0 170 0 170
+1 0 170
+3 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
+3 0 170
+4 0 170
+3 0 170
+3 0 170
+3 0 170 0 0 1 0 0 1 0 0 170
+6 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
+6 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
+6 0 170 170
+7 0 170 0 0 0 0 0 0 0 0 170 2
jcnd=46/170 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 46
+2 0 46 0 0 0 0 0 0 0 0 46
+6 0 46 46 0 1 0 0 1
+4 0 46
+3 0 46
+2 0 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 0x3877c78a40 0 
* 0 
+6 0 46 46
+4 0 46
+3 0 46 0 0 0 0 0 0 0 0 46
+6 0 46 46
+5 0 46
+4 0 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 0x3877c7907c 0 
* 0 
+6 0 46 46
+5 0 46
+4 0 46 0 0 0 0 0 0 0 0 46
+6 0 46
+4 0 46 0 0 1 0 0 1 0 0 46
+6 0 46
+4 0 46 46
+7 0 46 0 0 0 0 0 0 0 0 46
+6 0 46 46
+6 0 46
+2 0 46 0 0 0 0 0 0 0 0 46
+6 0 46 46
+4 0 46 0 0 0 0 0 0 0 0 46 1
jcnd=45/46 +70 0 
* 0 
+2 0 1 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +15 0 
* 0 
+15 0 46 46 0 1 0 0 1
+4 0 46 0 0 0 0 0 0 0 0 46 2
+6 0 46 46
+6 0 46 0 0 1 0 0 1 0 0 46 11
jcnd=6/46 0x3877c78a78 0 
* 0 
+6 0 40 40
+5 0 40 40
+5 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+9 0 40 0 40
+4 0 40 0 40
+4 0 40 0 0 0 0 0 0 0 0 40 4
jcnd=32/40 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8 2
+6 0 40
+3 0 40
+4 0 40 40
+4 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
-12 0 6
+4 0 6 6
+4 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 46
+7 0 46 0 46
+4 0 46 0 46
+4 0 46 0 0 0 0 0 0 0 0 46 18
jcnd=24/46 +18 0 
* 0 
+2 0 22 0 22
+8 0 22 0 22
+8 0 22 0 22
+4 0 22
+3 0 22 0 22 1 0 0 1
+4 0 22
+4 0 22 0 22
+4 0 22 0 22
+4 0 22
+7 0 22 0 0 0 0 0 0 0 0 22
jcnd=22/22 0x3877c78b20 0 
* 0 
-30 0 24 0 24
+4 0 24
+3 0 24 0 24
+4 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24
+7 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c78b20 0 
* 0 
0x3877c78a40 0 46 0 0 1 0 0 1
+5 0 46 46
+4 0 46 46
+7 0 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 +16 0 
* 0 
+16 0 46 0 46
+5 0 46 0 0 0 0 0 0 0 0 46
+6 0 46
+3 0 46
jump=46 0x3877c7878f 0 
* 0 
+10 0 6 0 6
+6 0 6 0 0 1 0 0 1
jump=6 0x3877c78885 0 
* 0 
0x3877c78b20 0 46 46 0 1 0 0 1
+4 0 46
+2 0 46 0 0 0 0 0 0 0 0 46
+6 0 46 46
+7 0 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 +15 0 
* 0 
+15 0 46 0 46 1 0 0 1
+4 0 46 0 0 0 0 0 0 0 0 46
+6 0 46
+4 0 46 46
+1 0 46 46
+1 0 46 46
+2 0 46 46
+2 0 46 46
+2 0 46 46
+2 0 46 46
0x3877c7907c 0 46 46 0 1 1 0 1 1
+4 0 46 0 0 1 0 0 1
+7 0 46
+4 0 46
+3 0 46
+3 0 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 160 0 0 1 0 0 1
+7 0 160
+3 0 160
+3 0 160 160 0 0 1 0 0 1
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 0 0 160 19
jump=16 0x3877c89be8 0 
* 0 
jump=20 0x3877c89bd0 0 
* 0 
jump=16 0x3877c89bb8 0 
* 0 
jump=16 +11 0 
* 0 
jump=16 0x3877c89c48 0 
* 0 
jump=26 0x3877c89c30 0 
* 0 
jump=24 0x3877c89c18 0 
* 0 
jump=26 0x3877c89c00 0 
* 0 
+11 0 16 16
+3 0 16
+4 0 16
+4 0 16 16
+4 0 16
+4 0 16 0 16
+4 0 16
+9 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
+4 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=8/16 0x3877c89c60 0 
* 0 
-40 0 182 182
+4 0 182 0 182
+4 0 182 182
+4 0 182 0 182
+4 0 182 182
+4 0 182 0 182 0 0 1 0 0 1
+4 0 182 182
+4 0 182 0 182
+4 0 182
+4 0 182
+4 0 182 0 0 0 0 0 0 0 0 182 9
jcnd=124/182 0x3877c89c60 0 
* 0 
-32 0 26 26
+4 0 26 0 26
+4 0 26 26
+4 0 26 0 26
+4 0 26 26
+4 0 26 0 26
+4 0 26
+4 0 26
+4 0 26 0 0 0 0 0 0 0 0 26
jcnd=10/26 0x3877c89c60 0 
* 0 
-24 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
+4 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=8/24 0x3877c89c60 0 
* 0 
-16 0 26 26 0 1 0 0 1
+4 0 26 0 26
+4 0 26 0 0 1 0 0 1
+4 0 26
+4 0 26 0 0 0 0 0 0 0 0 26 6
jcnd=10/26 0x3877c89c60 0 
* 0 
+6 0 114
+4 0 114 114
+3 0 114 0 114 0 0 1 0 0 1
+3 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114 0 0 4 0 0 4
+4 0 114 114
+4 0 114 0 114
+4 0 114
jump=114 -80 0 
* 0 
-30 0 16 16
+3 0 16 0 16
+3 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 -80 0 
* 0 
-24 0 20 20
+4 0 20 0 20
+4 0 20 20
+4 0 20 0 20
+4 0 20 20
+4 0 20 0 20
+4 0 20
jump=20 -80 0 
* 0 
-16 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 -80 0 
* 0 
+8 0 16 16
+3 0 16
+4 0 16 0 0 1 0 0 1
+4 0 16
+4 0 16
jump=16 -39 0 
* 0 
+9 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
+6 0 20 20
+3 0 20
+4 0 20
jump=20 -72 0 
* 0 
+8 0 16
+4 0 16 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+4 0 16
jump=16 -99 0 
* 0 
+11 0 26 26 0 1 0 0 1
+3 0 26
+4 0 26
+4 0 26
+4 0 26
jump=26 0x3877c89b78 0 
* 0 
+9 0 24 24
+3 0 24
+4 0 24
+4 0 24
+4 0 24
jump=24 0x3877c89b70 0 
* 0 
+9 0 26 26
+3 0 26
+4 0 26
+4 0 26
+4 0 26
jump=26 0x3877c89b68 0 
* 0 
+9 0 16 16
+3 0 16
+4 0 16
+4 0 16
+4 0 16
jump=16 0x3877c89b60 0 
* 0 
+9 0 160 0 160 1 0 0 1
+3 0 160 160

totals: 324174 116476 79577 221 46 50 221 46 50 13838 468 1010 19
