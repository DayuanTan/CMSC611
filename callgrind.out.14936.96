version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 96


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 90637402 - 91690339
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1264 0 0 1 0 0 1
+3 0 1264 0 0 0 0 0 0 0 0 1264
+2 0 1264
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1264 0x3877c7b8b0 0 
* 0 142505 36583 18781 21 4 0 21 4 0 34933 477
* 0 1264 1264 0 1 1 0 1 1 0 0 0 1264

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1264 0 1264 1 0 0 1
+1 0 1264
+5 0 1264
+3 0 1264 0 1264
+1 0 1264
+4 0 1264 0 0 1 0 0 1
+3 0 1264
+4 0 1264
+3 0 1264 0 1264 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1264 0x3877c7aa50 0 
* 0 344184 50033 50149 46 35 50 46 35 50 57690 1985
* 0 1264 1264 0 1 1 0 1 1 0 0 0 1264
+5 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264
jcnd=1264/1264 +96 0 
* 0 
+96 0 1264 0 0 1 0 0 1
+4 0 1264 1264
+1 0 1264 1264
+1 0 1264 1264

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(12) /usr/include/c++/4.8/bits/stl_algobase.h
fn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404a36 450 624 0 624
+1 * 624
+3 * 624 0 624
+1 * 624
+4 * 624 0 624 1 0 0 1
+4 * 624 0 624
+4 * 624 0 624
+4 +10 624 624
+4 * 624
+3 * 624 0 624
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=624 0x404c38 288 
* * 9360 3744 3120 3 0 0 3
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(56)
calls=624 0x404c38 288 
* * 9360 3744 3120
+5 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=624 0x404c52 -36 
* * 255602 83948 80208 20 3 4 20 3 4 11488 713 1244 155
+5 +1 624
+4 * 624 624
+1 * 624 624
+1 * 624 624

fn=(60)
0x404c52 424 624 0 624
+1 * 624
+3 * 624 0 624
+2 * 624 0 624
+1 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +4 624 624
+4 * 624
+3 * 624 0 624
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=624 0x40492d 277 
* * 9360 3744 3120 2 0 0 2
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=624 0x404d9d 277 
* * 15600 5616 4992 2 0 1 2 0 1
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(66)
calls=624 0x404d9d 277 
* * 15600 5616 4992
+5 * 624
+3 * 624
+3 * 624
+3 * 624 0 624
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=624 0x404db7 -49 
* * 197570 64604 60864 15 3 3 15 3 3 11488 713 1244 155
+5 +1 624
+4 * 624 624
+1 * 624 624
+2 * 624 624
+1 * 624 624

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672
+3 * 672 0 672 1 0 0 1
cfi=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
cfn=(64) std::_Iter_base<int*, false>::_S_base(int*)
calls=672 -33 -66 
* * 4032 2016 1344
+5 * 672 672
+1 * 672 672

fn=(66)
0x404d9d 277 1248 0 1248
+1 * 1248
+3 * 1248
+4 * 1248 0 1248
+4 +1 1248 1248
+4 * 1248
+3 * 1248 0 1248
cfi=(13)
cfn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1248 0x404f1a -58 
* * 19968 7488 6240 2 0 1 2 0 1
+5 * 1248 1248
+1 * 1248 1248

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130) std::_Iter_base<float*, false>::_S_base(float*)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x4049e2 450 624 0 624
+1 * 624
+3 * 624 0 624
+1 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +10 624 624
+4 * 624
+3 * 624 0 624
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=624 0x404bc6 288 
* * 9360 3744 3120 3 0 0 3
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(122)
calls=624 0x404bc6 288 
* * 9360 3744 3120
+5 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=624 0x404be0 -36 
* * 255602 83948 80208 4 0 22 4 0 22 11488 698 1244
+5 +1 624
+4 * 624 624
+1 * 624 624
+1 * 624 624

fn=(128)
0x404878 277 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672 1 0 0 1
+4 +1 672 672
+4 * 672
+3 * 672 0 672
cfi=(13)
cfn=(130)
calls=672 -33 -66 
* * 4032 2016 1344 0 0 1 0 0 1
+5 * 672 672
+1 * 672 672

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1248 0 1248
+1 * 1248
+3 * 1248
+4 * 1248 0 1248
+4 +1 1248 1248
+4 * 1248
+3 * 1248 0 1248
cfi=(13)
cfn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1248 0x404e98 -58 
* * 19968 7488 6240 2 0 0 2
+5 * 1248 1248
+1 * 1248 1248

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +8 624 0 624
+4 +3 624 624
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=624 0x404eb5 -22 
* * 188210 61484 57120 1 0 22 1 0 22 11488 698 1244
+5 +1 624 624
+1 * 624 624

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276) int* std::copy<int*, int*>(int*, int*, int*)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248
+4 * 1248 0 1248
+4 +1 1248 1248
+4 * 1248
+3 * 1248 0 1248
cfi=(13)
cfn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1248 0x404d36 -77 
* * 7488 3744 2496 2 0 0 2
+5 * 1248 1248
+1 * 1248 1248

fn=(56)
0x404c38 288 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248
+4 * 1248 0 1248 1 0 0 1
+4 +1 1248 1248
+4 * 1248
+3 * 1248 0 1248
cfi=(13)
cfn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1248 0x404d8f -77 
* * 7488 3744 2496 1 0 0 1
+5 * 1248 1248
+1 * 1248 1248

fn=(74)
0x404f37 368 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640 1 0 0 1
+4 * 640 0 640
+4 * 640 0 640
+4 +2 640 640
+4 * 640 640
+4 * 640
+3 * 640
+3 * 640
+4 * 640 0 640
+4 +1 640 640
+5 * 640 0 0 0 0 0 0 0 0 640
jcnd=8/640 +33 +2 
* * 
+2 +1 632 632
+4 * 632
+8 * 632 632
+4 * 632 632
+4 * 632
+3 * 632 0 0 1 0 0 1
+3 * 632 0 632 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=632 0x3877c83840 0 
* * 171860 54936 53677 11 2 20 11 2 20 10948 717 627 155
* * 632 632 0 1 1 0 1 1 0 0 0 632
+5 +1 640 640
+4 * 640
+8 * 640 640
+4 * 640
+3 +1 640 640
+1 * 640 640

fn=(140)
0x404eb5 368 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640 1 0 0 1
+4 * 640 0 640
+4 * 640 0 640 0 0 1 0 0 1
+4 +2 640 640
+4 * 640 640
+4 * 640
+3 * 640
+3 * 640
+4 * 640 0 640
+4 +1 640 640
+5 * 640 0 0 0 0 0 0 0 0 640
jcnd=8/640 +33 +2 
* * 
+2 +1 632 632
+4 * 632
+8 * 632 632
+4 * 632 632
+4 * 632
+3 * 632
+3 * 632 0 632
cob=(2)
cfi=(9)
cfn=(78)
calls=632 0x3877c83840 0 
* * 171860 54936 53677 0 0 23 0 0 23 10948 703 627
* * 632 632 0 0 0 0 0 0 0 0 0 632
+5 +1 640 640
+4 * 640
+8 * 640 640
+4 * 640
+3 +1 640 640
+1 * 640 640

fn=(72)
0x404db7 379 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624 1 0 0 1
+4 * 624 0 624
+4 * 624 0 624
+4 +8 624 0 624
+4 +3 624 624
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(74)
calls=624 0x404f37 -22 
* * 188210 61484 57120 14 3 3 14 3 3 11488 713 1244 155
+5 +1 624 624
+1 * 624 624

fn=(126)
0x404be0 424 624 0 624
+1 * 624
+3 * 624 0 624
+2 * 624 0 624
+1 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +4 624 624
+4 * 624
+3 * 624 0 624
cfn=(128)
calls=624 0x404878 277 
* * 9360 3744 3120 1 0 0 1
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(132)
calls=624 0x404d44 277 
* * 15600 5616 4992 2 0 0 2
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(132)
calls=624 0x404d44 277 
* * 15600 5616 4992
+5 * 624
+3 * 624
+3 * 624
+3 * 624 0 624
cfn=(138)
calls=624 0x404d5e -49 
* * 197570 64604 60864 1 0 22 1 0 22 11488 698 1244
+5 +1 624
+4 * 624 624
+1 * 624 624
+2 * 624 624
+1 * 624 624

fn=(236) float* std::copy<float*, float*>(float*, float*, float*)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10) /usr/include/c++/4.8/bits/stl_iterator.h
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
0x40500c 790 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248 0 1248
+4 +1 1248 1248
+4 * 1248 1248
+1 * 1248 1248

fn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
0x404380 726 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248 0 1248
+4 * 1248 0 1248
+4 * 1248 1248
+4 * 1248 1248
+3 * 1248 1248
+4 * 1248 0 1248
+3 * 1248 1248
+1 * 1248 1248

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
0x404ffe 790 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248 0 1248
+4 +1 1248 1248
+4 * 1248 1248
+1 * 1248 1248

fn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
0x404468 726 1248 0 1248
+1 * 1248
+3 * 1248 0 1248
+4 * 1248 0 1248
+4 * 1248 1248
+4 * 1248 1248
+3 * 1248 1248
+4 * 1248 0 1248 1 0 0 1
+3 * 1248 1248
+1 * 1248 1248

fn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14) /usr/include/c++/4.8/bits/stl_construct.h
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 632 0 632 1 0 0 1
+1 * 632
+3 * 632 0 632
+4 * 632 0 632 1 0 0 1
+4 * 632 632
+1 * 632 632

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 632 0 632 1 0 0 1
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 +4 632 632
+4 * 632 632
+4 * 632
+3 * 632
+3 * 632 0 632
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=632 0x40454c -14 
* * 3792 1264 1896 1 0 0 1
+5 +2 632 632
+1 * 632 632

fn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
0x40326c 148 632 0 632
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 * 632 0 632
+4 +3 632 632 0 1 0 0 1
+4 * 632 632
+4 * 632
+3 * 632
+3 * 632 0 632
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=632 0x403d1a -29 
* * 11376 3792 4424 3 0 0 3
+5 +1 632 632
+1 * 632 632

fn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
0x40334a 148 632 0 632
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 * 632 0 632
+4 +3 632 632
+4 * 632 632
+4 * 632
+3 * 632
+3 * 632 0 632
cfn=(182)
calls=632 0x403dcc -29 
* * 11376 3792 4424 2 0 0 2
+5 +1 632 632
+1 * 632 632

fn=(152)
0x403d1a 122 632 0 632 1 0 0 1
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 +4 632 632
+4 * 632 632
+4 * 632
+3 * 632
+3 * 632 0 632
cfn=(154)
calls=632 0x4044f8 -14 
* * 3792 1264 1896 2 0 0 2
+5 +2 632 632
+1 * 632 632

fn=(184)
0x40454c 112 632 0 632 1 0 0 1
+1 * 632
+3 * 632 0 632
+4 * 632 0 632
+4 * 632 632
+1 * 632 632

fl=(15) /usr/include/c++/4.8/bits/vector.tcc
fn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258) std::vector<int, std::allocator<int> >::begin()
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=8 0x404236 167 
* * 2316 429 435 0 1 6 0 1 6 316 36 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
cfn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216) std::vector<float, std::allocator<float> >::begin()
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=8 0x403fbe 167 
* * 3201 681 624 12 8 6 12 8 6 499 46 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 312 0 312 1 0 0 1
+1 * 312
+3 * 312
+4 * 312 0 312
+4 * 312 0 312
+4 +1 312 312
+4 * 312
+3 * 312 0 312
cfi=(2)
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=312 0x402d74 645 
* * 4056 1872 624
+5 * 312
+3 * 312 0 312
+3 +1 312 312
+6 * 312 0 312
+3 * 312 312
+6 * 312 0 312
+3 +1 312 312
+6 * 312 0 312 1 0 0 1
+3 * 312 312
+6 * 312 0 312
+3 +2 312 0 312
+7 * 312
jump=312 +86 * 
* * 
+2 +1 49140 49140
+3 * 49140
+3 * 49140 49140
+4 * 49140
+3 * 49140
+3 * 49140 0 49140
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=49140 0x402d9a 770 
* * 540540 245700 147420
+5 * 49140 49140
+4 * 49140 49140
+5 * 49140
+4 * 49140 0 49140
+5 +1 49140 49140
+3 * 49140
+3 * 49140 49140
+4 * 49140
+3 * 49140
+3 * 49140 0 49140
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=49140 0x402dba 770 
* * 540540 245700 147420 1 0 0 1
+5 * 49140 49140
+2 * 49140
+4 * 49140 49140
+5 * 49140
+4 * 49140 0 49140
+5 -2 49140 0 49140
+4 * 49140 49140
+3 * 49140
+3 * 49140 49140
+3 * 49140 0 0 0 0 0 0 0 0 49140 313
jcnd=48828/49140 -93 +1 
* * 
-9 * 312 312 0 1 0 0 1
+3 * 312
+3 * 312 312
+3 * 312 0 0 0 0 0 0 0 0 312
jcnd=312/312 -93 +1 
* * 
+2 +4 312 312
+3 * 312
+3 * 312
+4 * 312 312 0 1 0 0 1
+5 * 312
+4 * 312
+3 * 312 0 312
+5 +1 312 312
+3 * 312
+3 * 312
+4 * 312 312
+5 * 312
+4 * 312
+3 * 312 0 312
+5 +1 312 0 312
+7 * 312
jump=312 0x4016ee * 
* * 
+2 +1 49140 49140
+3 * 49140
+3 * 49140 49140
+4 * 49140
+3 * 49140 0 0 1 0 0 1
+3 * 49140 0 49140
cfi=(2)
cfn=(146)
calls=49140 0x402dba 770 
* * 540540 245700 147420
+5 * 49140 49140
+2 * 49140
+4 * 49140 49140
+5 * 49140 0 49140
+5 +1 49140 49140
+3 * 49140
+3 * 49140 49140
+4 * 49140
+3 * 49140
+3 * 49140 0 49140
cfi=(2)
cfn=(144)
calls=49140 0x402d9a 770 
* * 540540 245700 147420
+5 * 49140 49140
+4 * 49140 49140
+5 * 49140 0 49140
+5 +1 49140 49140
+5 * 49140 49140
+5 * 49140 49140
+5 * 49140
+4 * 49140 0 49140
+5 +1 49140 49140
+5 * 49140 49140
+5 * 49140 49140
+5 * 49140
+4 * 49140 0 49140
+5 -4 49140 0 49140
+4 * 49140 49140
+3 * 49140
+3 * 49140 49140
+3 * 49140 0 0 0 0 0 0 0 0 49140 313
jcnd=48828/49140 0x401672 +1 
* * 
-9 * 312 312 0 1 0 0 1
+3 * 312
+3 * 312 312
+3 * 312 0 0 0 0 0 0 0 0 312
jcnd=312/312 0x401672 +1 
* * 
+6 +6 312 312 0 1 0 0 1
+5 * 312 312
+5 * 312 0 312
+5 +2 312 312
+3 +1 312 0 312
+3 * 312 312
+5 * 312 312
+1 * 312 312

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 312
+7 * 312
+7 * 312
+3 * 312
+3 * 312 0 312
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=312 0x4030b2 310 
* * 327028 95427 89566 70 24 17 70 24 17 20725 1004 1246 155
+5 * 312
+7 * 312
+7 * 312
+3 * 312
+3 * 312 0 312
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=312 0x402ff4 310 
* * 327985 94901 87815 43 7 50 43 7 50 21177 1030 1246
+5 * 312 0 0 1 0 0 1
+7 * 312
+7 * 312
+3 * 312
+3 * 312 0 312
cfn=(142)
calls=312 0x401585 -52 
* * 5130840 2268240 1184664 8 0 0 8 0 0 98904 626
+5 * 312 0 312
+8 * 312 312
+6 * 312 0 312
+6 * 312
+7 * 312
+3 * 312 0 312
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=312 0x402df4 414 
* * 78433 24618 17577 33 5 0 33 5 0 8770 215 624
+5 * 312
+7 * 312
+3 * 312 0 312 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=312 0x402e74 414 
* * 81841 25914 18533 7 1 0 7 1 0 9754 21 624
+5 +2 312
+7 * 312
+7 * 312
+3 * 312
+3 * 312 0 312
cfi=(2)
cfn=(4)
calls=312 0x4030b2 310 
* * 326694 95402 89464 2 1 1 2 1 1 20698 643 1246
+5 * 312
+7 * 312
+7 * 312
+3 * 312
+3 * 312 0 312
cfi=(2)
cfn=(80)
calls=312 0x402ff4 310 
* * 327108 94849 87669 0 0 2 0 0 2 21043 637 1246
+5 * 312 312
+6 * 312 0 0 1 0 0 1
+7 * 312
+7 * 312 0 312
+6 * 312 312
+8 * 312
+3 * 312
+3 * 312 0 312
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=312 0x401719 -33 
* * 2377128 989664 545220 4 0 0 4 0 0 49452 313
+5 * 312 0 312
+8 * 312 312
+6 * 312 0 312
+6 * 312
+7 * 312 0 0 1 0 0 1
+3 * 312 0 312
cfi=(2)
cfn=(148)
calls=312 0x402df4 414 
* * 78433 24618 17577 0 0 0 0 0 0 8770 210 624
+5 * 312
+7 * 312
+3 * 312 0 312
cfi=(2)
cfn=(178)
calls=312 0x402e74 414 
* * 81841 25914 18533 0 0 0 0 0 0 9754 15 624
+5 +2 312 312
+7 * 312
+3 * 312 0 312
cfi=(2)
cfn=(2)
calls=312 0x402d74 645 
* * 4056 1872 624
+5 * 312 312
+6 * 312
+3 * 312
+3 * 312
+3 * 312 312
+7 * 312
+3 * 312 0 0 1 0 0 1
+3 * 312 0 312
cfi=(2)
cfn=(144)
calls=312 0x402d9a 770 
* * 3432 1560 936
+5 * 312
+3 * 312
+7 * 312
+3 * 312
+3 * 312 0 312
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=312 0x402eda 901 
* * 32445 11964 9268 38 29 12 38 29 12 1465 69 47
+5 +1 312 312
+7 * 312
+3 * 312 0 312
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=312 0x402f54 645 
* * 4056 1872 624 0 1 0 0 1
+5 * 312 312
+6 * 312
+3 * 312
+3 * 312
+3 * 312 312
+7 * 312 0 0 1 0 0 1
+3 * 312
+3 * 312 0 312
cfi=(2)
cfn=(146)
calls=312 0x402dba 770 
* * 3432 1560 936
+5 * 312
+3 * 312
+7 * 312
+3 * 312
+3 * 312 0 312
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=312 0x402f7a 901 
* * 31593 11729 9082 19 20 36 19 20 36 1291 57 47
+5 +1 312 312
+7 * 312
+3 * 312 0 312
cfi=(2)
cfn=(10)
calls=312 0x402f54 645 
* * 4056 1872 624
+5 * 312 312
+6 * 312
+3 * 312
+3 * 312
+3 * 312 312 0 1 0 0 1
+7 * 312
+3 * 312
+3 * 312 0 312
cfi=(2)
cfn=(146)
calls=312 0x402dba 770 
* * 3432 1560 936
+5 * 312 312
+2 * 312
+4 * 312 312
+8 * 312 312
+8 * 312 0 312
+8 +1 312 312
+7 * 312
+3 * 312 0 312
cfi=(2)
cfn=(2)
calls=312 0x402d74 645 
* * 4056 1872 624
+5 * 312 312 0 1 0 0 1
+6 * 312
+3 * 312
+3 * 312
+3 * 312 312
+7 * 312
+3 * 312
+3 * 312 0 312
cfi=(2)
cfn=(144)
calls=312 0x402d9a 770 
* * 3432 1560 936
+5 * 312 312
+4 * 312 312
+8 * 312
+4 * 312 312
+8 * 312
+3 * 312 0 312
+8 +2 312 0 312
+7 -12 312 312
+8 * 312 312
+7 * 312 0 0 0 0 0 0 0 0 312 3
jcnd=1/312 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 312
+7 * 312
+3 * 312 0 312
cfi=(2)
cfn=(2)
calls=312 0x402d74 645 
* * 4056 1872 624 2 0 1 2 0 1
+5 * 312
+3 * 312 312
+7 * 312
+3 * 312 0 312
cfi=(2)
cfn=(2)
calls=312 0x402d74 645 
* * 4056 1872 624 0 1 0 0 1
+5 * 312
+3 * 312 0 0 0 0 0 0 0 0 312
+2 * 312 0 0 1 0 0 1
+5 * 312
jump=312 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 312
+2 * 312 0 0 0 0 0 0 0 0 312
jcnd=312/312 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 312 0 312
+1 * 312
+3 * 312
+4 * 312 0 312
+4 * 312 0 312
+4 * 312 0 312
+5 +1 312 312
+4 * 312
+3 * 312 0 312
cfi=(2)
cfn=(2)
calls=312 0x402d74 645 
* * 4056 1872 624
+5 * 312
+3 * 312 0 312
+3 +1 312 312 0 1 0 0 1
+6 * 312 0 312
+3 * 312 312
+6 * 312 0 312
+3 +2 312 0 312
+7 * 312
jump=312 +86 * 
* * 
+2 +1 49140 49140
+3 * 49140
+3 * 49140 49140
+4 * 49140
+3 * 49140
+3 * 49140 0 49140
cfi=(2)
cfn=(144)
calls=49140 0x402d9a 770 
* * 540540 245700 147420
+5 * 49140 49140
+4 * 49140 49140
+5 * 49140
+4 * 49140 0 49140
+5 +1 49140 49140
+3 * 49140
+3 * 49140 49140
+4 * 49140
+3 * 49140
+3 * 49140 0 49140
cfi=(2)
cfn=(146)
calls=49140 0x402dba 770 
* * 540540 245700 147420
+5 * 49140 49140
+2 * 49140
+4 * 49140 49140
+5 * 49140
+4 * 49140 0 49140
+5 -2 49140 0 49140
+4 * 49140 49140
+3 * 49140
+3 * 49140 49140
+3 * 49140 0 0 0 0 0 0 0 0 49140 313
jcnd=48828/49140 -93 +1 
* * 
-9 * 312 312 0 1 0 0 1
+3 * 312
+3 * 312 312
+3 * 312 0 0 0 0 0 0 0 0 312
jcnd=312/312 -93 +1 
* * 
+2 +4 312 312
+3 * 312
+3 * 312 0 0 1 0 0 1
+4 * 312 312
+5 * 312
+4 * 312
+3 * 312 0 312
+5 +1 312 312
+3 * 312
+3 * 312
+4 * 312 312
+5 * 312
+4 * 312
+3 * 312 0 312
+5 +1 312 312
+5 * 312 312
+5 * 312 312
+5 * 312 0 0 1 0 0 1
+4 * 312
+3 * 312 0 312
+5 +2 312 312
+3 +1 312 0 312
+3 * 312 312
+5 * 312 312
+1 * 312 312

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624 1 0 0 1
+4 +1 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=624 0x4049d4 -35 
* * 3744 1248 1872 1 0 0 1
+5 * 624 624
+1 * 624 624

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 624
+4 * 624
+3 * 624 0 624
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=624 0x404520 -35 
* * 3120 1248 1248
+5 * 624 624
+1 * 624 624

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=624 0x404a28 -35 
* * 3744 1248 1872 1 0 1 1 0 1
+5 * 624 624
+1 * 624 624

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 624
+4 * 624
+3 * 624 0 624
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=624 0x4044cc -35 
* * 3120 1248 1248
+5 * 624 624
+1 * 624 624

fl=(3)
fn=(222)
0x403373 215 312 0 312
+1 * 312
+3 * 312
+4 * 312 0 312
+4 * 312 0 312
+4 * 312 0 312
+4 +1 312 312
+4 * 312 312
+4 * 312 312
+4 * 312
+3 * 312
+3 * 312 0 312
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=312 0x403df2 -87 
* * 7488 2496 2808 0 21 3 0 21 3 312 2
+5 * 312 312
+1 * 312 312

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624
+4 * 624 624
+4 * 624 624
+1 * 624 624

fn=(264)
0x4036b1 215 312 0 312
+1 * 312
+3 * 312
+4 * 312 0 312
+4 * 312 0 312
+4 * 312 0 312
+4 +1 312 312
+4 * 312 312
+4 * 312 312
+4 * 312
+3 * 312
+3 * 312 0 312
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=312 0x40406a -87 
* * 7488 2496 2808 0 19 12 0 19 12 312
+5 * 312 312
+1 * 312 312

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 624 0 624
+1 * 624
+3 * 624 0 624
+4 * 624 624
+4 * 624 624
+1 * 624 624

fl=(13)
fn=(130)
0x40486a 212 704 0 704
+1 * 704
+3 * 704 0 704 0 0 1 0 0 1
+4 +1 704 704
+4 * 704 704
+1 * 704 704

fn=(134)
0x404e98 220 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248
+4 * 1248 0 1248
+4 +1 1248
+4 * 1248
+3 * 1248 0 1248
cfi=(10)
cfn=(136)
calls=1248 0x404ffe 790 
* * 7488 3744 2496 1 0 0 1
+5 * 1248 1248
+3 * 1248 1248
+1 * 1248 1248

fn=(58)
0x404d8f 212 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248 0 1248
+4 +1 1248 1248
+4 * 1248 1248
+1 * 1248 1248

fn=(68)
0x404f1a 220 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248
+4 * 1248 0 1248
+4 +1 1248
+4 * 1248
+3 * 1248 0 1248 0 0 1 0 0 1
cfi=(10)
cfn=(70)
calls=1248 0x40500c 790 
* * 7488 3744 2496 1 0 0 1
+5 * 1248 1248
+3 * 1248 1248
+1 * 1248 1248

fn=(64)
0x40491f 212 704 0 704
+1 * 704
+3 * 704 0 704
+4 +1 704 704
+4 * 704 704
+1 * 704 704

fn=(124)
0x404d36 212 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248 0 1248
+4 +1 1248 1248 0 1 0 0 1
+4 * 1248 1248
+1 * 1248 1248

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 624 0 624
+1 * 624
+3 * 624 0 624
+4 * 624 0 624
+4 * 624 624
+4 * 624 624
+1 * 624 624

fl=(5)
fn=(28)
0x404992 113 648 0 648 1 0 0 1
+1 * 648
+3 * 648 0 648
+4 +1 648
+10 * 648 648
+1 * 648 648

fn=(176)
0x4044cc 86 624 0 624
+1 * 624
+3 * 624 0 624
+4 * 624 624
+1 * 624 624

fn=(224)
0x403df2 129 312 0 312
+1 * 312
+3 * 312
+4 * 312 0 312
+4 * 312 0 312
+4 * 312 0 312
+4 +1 312 312
+4 * 312
+3 * 312
+5 * 312 0 312
cfi=(16)
cfn=(226)
calls=312 0x402d61 -20 
* * 2184 936 936
+5 * 312
+3 * 312 0 0 0 0 0 0 0 0 312 2
+2 * 312 312
+4 * 312 312 0 0 21 0 0 21
+2 * 312 0 312 0 0 3 0 0 3
+2 * 312 312
+1 * 312 312

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 632 0 632
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 * 632 0 632
+4 +1 632 632
+4 * 632
+3 * 632 0 632
cob=(5)
cfi=(8)
cfn=(164)
calls=632 0x387e4bb2f0 0 
* * 70356 17619 8433 23 4 0 23 4 0 17110 432 632
* * 632 632 0 1 1 0 1 1 0 0 0 632
+5 * 632 632
+1 * 632 632

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 632 0 632
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 * 632 0 632
+4 +1 632 632
+4 * 632
+3 * 632 0 632
cob=(5)
cfi=(8)
cfn=(164)
calls=632 0x387e4bb2f0 0 
* * 77205 20228 10348 0 1 0 0 1 0 19087 45 632
* * 632 632 0 0 0 0 0 0 0 0 0 632
+5 * 632 632
+1 * 632 632

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 632 0 632 1 0 0 1
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 * 632 0 632
+4 +2 632 632
+4 * 632
+3 * 632 0 632
cfn=(102)
calls=632 0x4048de +12 
* * 3792 1264 1264 1 0 0 1
+5 * 632 632
+4 * 632 0 0 1 0 0 1
+3 * 632
+2 * 632 0 0 0 0 0 0 0 0 632
jcnd=632/632 +7 +3 
* * 
+7 +3 632 632
+4 * 632
+4 * 632
+3 * 632 0 632
cob=(5)
cfi=(8)
cfn=(32)
calls=632 0x387e4bd0b0 0 
* * 183332 27131 25292 28 15 36 28 15 36 29967 1015 632
* * 632 632 0 0 0 0 0 0 0 0 0 632
+5 +1 632 632
+1 * 632 632

fn=(18)
0x404a28 81 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624 0 0 1 0 0 1
+4 * 624 0 624
+4 * 624 624
+1 * 624 624

fn=(92)
0x4049d4 81 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624
+4 * 624 0 624
+4 * 624 624
+1 * 624 624

fn=(196)
0x404520 86 624 0 624
+1 * 624
+3 * 624 0 624
+4 * 624 624
+1 * 624 624

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 632 0 632 1 0 0 1
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 * 632 0 632 1 0 0 1
+4 +2 632 632
+4 * 632
+3 * 632 0 632
cfn=(28)
calls=632 0x404992 +12 
* * 3792 1264 1264 1 0 0 1
+5 * 632 632
+4 * 632
+3 * 632
+2 * 632 0 0 0 0 0 0 0 0 632
jcnd=632/632 +7 +3 
* * 
+7 +3 632 632
+4 * 632
+4 * 632
+3 * 632 0 632
cob=(5)
cfi=(8)
cfn=(32)
calls=632 0x387e4bd0b0 0 
* * 181076 27958 28649 22 21 15 22 21 15 28987 970 632
* * 632 632 0 1 1 0 1 1 0 0 0 632
+5 +1 632 632
+1 * 632 632

fn=(102)
0x4048de 113 648 0 648 1 0 0 1
+1 * 648
+3 * 648 0 648
+4 +1 648
+10 * 648 648
+1 * 648 648

fn=(266)
0x40406a 129 312 0 312
+1 * 312
+3 * 312
+4 * 312 0 312
+4 * 312 0 312
+4 * 312 0 312
+4 +1 312 312
+4 * 312
+3 * 312
+5 * 312 0 312
cfi=(16)
cfn=(226)
calls=312 0x402d61 -20 
* * 2184 936 936
+5 * 312
+3 * 312 0 0 0 0 0 0 0 0 312
+2 * 312 312
+4 * 312 312 0 0 19 0 0 19
+2 * 312 0 312 0 0 12 0 0 12
+2 * 312 312
+1 * 312 312

fl=(11)
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624 0 1 0 0 1
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(12)
cfn=(54)
calls=624 0x404a36 450 
* * 288050 95180 91440 24 3 4 24 3 4 11488 713 1244 155
+5 * 624 624
+1 * 624 624

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=624 0x40439c 107 
* * 305522 101420 97680 7 0 22 7 0 22 11488 698 1244
+5 * 624 624
+1 * 624 624

fn=(116)
0x40439c 107 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +10 624 624
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=624 0x4047d7 -26 
* * 296786 98300 94560 7 0 22 7 0 22 11488 698 1244
+5 +1 624 624
+1 * 624 624

fn=(118)
0x4047d7 91 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(12)
cfn=(120)
calls=624 0x4049e2 450 
* * 288050 95180 91440 7 0 22 7 0 22 11488 698 1244
+5 * 624 624
+1 * 624 624

fn=(268)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +10 624 624
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(52)
calls=624 0x404829 -26 
* * 296786 98300 94560 25 3 4 25 3 4 11488 713 1244 155
+5 +1 624 624
+1 * 624 624

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624 1 0 0 1
cfn=(50)
calls=624 0x404484 107 
* * 305522 101420 97680 25 3 4 25 3 4 11488 713 1244 155
+5 * 624 624
+1 * 624 624

fl=(2)
fn=(4)
0x4030b2 310 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624
+2 * 624 0 624
+2 * 624 0 624
+1 * 624
+4 * 624 0 624 1 0 0 1
+4 * 624 0 624
+4 +2 624 624
+4 * 624
+3 * 624 0 624
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=624 0x403b08 117 
* * 3744 1872 1248 1 0 1 1 0 1
+5 * 624
+3 * 624 0 624
cfi=(3)
cfn=(8)
calls=624 0x403afa -88 
* * 3744 1872 1248 1 0 0 1
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(10)
calls=624 0x402f54 645 
* * 8112 3744 1248 1 1 0 1 1
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624
+3 * 624
+3 * 624 0 624
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=624 0x403b16 134 
* * 257096 55713 53270 34 21 13 34 21 13 29935 934 1248
+5 +4 624 624 0 1 0 0 1
+4 * 624
+3 * 624 0 624
cfn=(40)
calls=624 0x40333c 113 
* * 3744 1872 1248 2 0 0 2
+5 * 624
+3 * 624 624
+4 * 624 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=624 0x403ba4 565 
* * 15600 6240 4992 3 0 0 3
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=624 0x403b74 547 
* * 15600 6240 4992
+5 * 624
+3 * 624
+3 * 624
+3 * 624
+3 * 624 0 624 1 0 0 1
cfi=(11)
cfn=(48)
calls=624 0x403bd5 -60 
* * 314882 104540 101424 26 3 4 26 3 4 11488 713 1244 155
+5 -3 624 624
+4 * 624 0 624
+4 * 624
jump=624 +28 +4 
* * 
+28 +4 624
+4 * 624 624
+1 * 624 624
+2 * 624 624
+2 * 624 624
+1 * 624 624

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+4 * 624 0 624
+4 * 624
+4 * 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(10)
cfn=(110)
calls=624 0x404380 726 
* * 6240 3120 2496 1 0 0 1
+5 * 624 624
+4 * 624 624
+1 * 624 624

fn=(178)
0x402e74 414 624 0 624
+1 * 624
+3 * 624 0 624
+1 * 624
+4 * 624 0 624 1 0 0 1
+4 +2 624 624
+4 * 624
+3 * 624 0 624
cfn=(40)
calls=624 0x40333c 113 
* * 3744 1872 1248
+5 * 624
+3 * 624 624
+4 * 624 624
+4 * 624 624
+4 * 624 624
+3 -1 624
+3 * 624
+3 * 624 0 624
cfi=(14)
cfn=(180)
calls=624 0x40334a 148 
* * 19344 6240 7488 2 0 0 2
+5 +1 624 624
+4 * 624
+3 * 624 0 624
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=624 0x4032ca 159 
* * 125618 38100 24586 3 1 0 3 1 0 19508 36 1248
+5 * 624
jump=624 +28 * 
* * 
+28 * 624 0 0 1 0 0 1
+4 * 624 624
+1 * 624 624
+1 * 624 624

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 632 0 632 1 0 0 1
+1 * 632 0 0 1 0 0 1
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 0 632 632
+5 0 632 0 0 0 0 0 0 0 0 632
+2 0 632 632
+4 0 632 632
+4 0 632
+5 0 632
+3 0 632
+3 0 632 0 632
fi=(6) ???
cfi=(5)
cfn=(100)
calls=632 0x40461a 99 
* 0 199764 32187 30348 31 15 36 31 15 36 30599 1015 1264
+5 0 632
fi=(6)
jump=632 +7 0 
* 0 
+7 0 632 632
+1 0 632 632

fn=(144)
0x402d9a 770 148044 0 148044
+1 * 148044
+3 * 148044 0 148044
+4 * 148044 0 148044
+4 +1 148044 148044
+4 * 148044 148044
+3 * 148044 148044
+4 * 148044
+4 * 148044
+3 * 148044 148044
+1 * 148044 148044

fn=(146)
0x402dba 770 148044 0 148044
+1 * 148044
+3 * 148044 0 148044 1 0 0 1
+4 * 148044 0 148044
+4 +1 148044 148044
+4 * 148044 148044
+3 * 148044 148044
+4 * 148044
+4 * 148044
+3 * 148044 148044
+1 * 148044 148044

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 624
+4 * 624
+3 * 624 0 624
cfi=(4)
cfn=(194)
calls=624 0x403d7e +42 
* * 8736 3120 3120 1 0 0 1
+5 * 624 624
+1 * 624 624

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624
+1 * 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624 624
+4 * 624
+3 * 624 624
+4 * 624 624
+3 * 624
+3 * 624
+3 * 624
+4 * 624
+3 * 624 624
+4 * 624 624
+3 -1 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(188)
calls=624 0x403d98 +11 
* * 93794 26244 16474 1 1 0 1 1 0 19508 36 1248
+5 +1 624 624
+4 * 624
+3 * 624 0 624
cfn=(192)
calls=624 0x403296 -82 
* * 14352 4992 4992 1 0 0 1
+5 * 624
jump=624 +28 * 
* * 
+28 * 624
+4 * 624 624
+1 * 624 624
+1 * 624 624

fn=(2)
0x402d74 645 2528 0 2528 1 0 0 1
+1 * 2528
+3 * 2528 0 2528 0 0 1 0 0 1
+4 +1 2528 2528
+4 * 2528 2528 0 1 1 0 1 1
+4 * 2528
+3 * 2528 2528
+4 * 2528 2528
+3 * 2528
+3 * 2528
+3 * 2528
+4 * 2528 2528
+1 * 2528 2528

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(22)
calls=624 0x404236 -14 
* * 205304 35745 35798 28 21 9 28 21 9 29935 934 1248
+5 * 624 624
+4 * 624 0 624
+3 +1 624 624
+4 * 624 624 0 1 0 0 1
+3 * 624 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+3 * 624 624
+4 * 624
+4 * 624
+3 * 624 624
+4 * 624 0 624
+4 +1 624 624
+1 * 624 624

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624 624 0 1 0 0 1
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(96)
calls=624 0x403fbe -14 
* * 206675 34666 32252 21 7 30 21 7 30 30732 969 1248
+5 * 624 624
+4 * 624 0 624
+3 +1 624 624
+4 * 624 624
+3 * 624 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+3 * 624 624
+4 * 624
+4 * 624
+3 * 624 624
+4 * 624 0 624
+4 +1 624 624
+1 * 624 624

fn=(244)
0x402f7a 901 312 0 312
+1 * 312
+3 * 312 0 0 1 0 0 1
+4 * 312 0 312
+4 * 312 0 312
+4 +2 312 312
+4 * 312 312
+4 * 312 312
+4 * 312 312
+4 * 312
+3 * 312 0 0 0 0 0 0 0 0 312
jcnd=8/312 +51 +10 
* * 
+2 +3 304 304
+4 * 304 304
+4 * 304 304
+4 -1 304 304
+4 * 304
+3 * 304
+3 * 304 0 304
cfi=(3)
cfn=(264)
calls=304 0x4036b1 215 
* * 11552 3952 4256 0 19 8 0 19 8 304
+5 +2 304 304
+4 * 304 304
+4 * 304
+4 * 304 304
+4 * 304 0 304
+4 * 304
jump=304 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250)
calls=8 0x4036de 318 
* * 11777 3681 3210 18 1 28 18 1 28 675 57 47
+5 +2 312 312
+1 * 312 312

fn=(258)
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1272 0 1272 1 0 0 1
+1 * 1272
+3 * 1272 0 1272 1 0 0 1
+4 +1 1272 1272
+4 * 1272 1272
+1 * 1272 1272

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+3 * 624 0 624
+4 * 624
+4 * 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(10)
cfn=(110)
calls=624 0x404380 726 
* * 6240 3120 2496
+5 * 624 624
+4 * 624 624
+1 * 624 624

fn=(148)
0x402df4 414 624 0 624
+1 * 624
+3 * 624 0 624
+1 * 624
+4 * 624 0 624 1 0 0 1
+4 +2 624 624
+4 * 624
+3 * 624 0 624
cfn=(106)
calls=624 0x40325e 113 
* * 3744 1872 1248
+5 * 624
+3 * 624 624
+4 * 624 624
+4 * 624 624
+4 * 624 624
+3 -1 624
+3 * 624
+3 * 624 0 624
cfi=(14)
cfn=(150)
calls=624 0x40326c 148 
* * 19344 6240 7488 4 0 0 4
+5 +1 624 624
+4 * 624
+3 * 624 0 624
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=624 0x4031ec 159 
* * 118802 35508 22674 27 5 0 27 5 0 17540 425 1248
+5 * 624
jump=624 +28 * 
* * 
+28 * 624 0 0 1 0 0 1
+4 * 624 624
+1 * 624 624
+1 * 624 624

fn=(158)
0x403ce6 171 632 0 632 1 0 0 1
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 * 632 0 632
+4 +2 632 632
+5 * 632 0 0 0 0 0 0 0 0 632
+2 +1 632 632
+4 * 632 632
+4 * 632 632
+4 * 632
+3 * 632
+3 * 632 0 632
cfi=(5)
cfn=(160)
calls=632 0x4044d6 -65 
* * 77940 20147 11593 24 5 0 24 5 0 17110 432 1264
+5 +1 632 632
+1 * 632 632

fn=(12)
0x403b16 134 624 0 624
+1 * 624
+3 * 624 0 624
+1 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=624 0x4043ca -45 
* * 22464 8112 8736 4 0 4 4 0 4
+5 +1 624 624 0 1 0 0 1
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(20)
calls=624 0x404412 +43 
* * 220904 43233 40166 29 21 9 29 21 9 29935 934 1248
+5 * 624
jump=624 +28 * 
* * 
+28 * 624
+4 * 624 624
+1 * 624 624
+1 * 624 624

fn=(14)
0x4043ca 90 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624 0 0 1 0 0 1
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(4)
cfn=(16)
calls=624 0x404804 +24 
* * 11232 3744 4368 2 0 1 2 0 1
+5 * 624 624
+4 * 624 0 624 0 0 2 0 0 2
+7 * 624 624
+4 * 624 0 624 1 0 0 1
+8 * 624 624
+4 * 624 0 624
+8 +1 624 624
+1 * 624 624

fn=(80)
0x402ff4 310 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624
+2 * 624 0 624
+2 * 624 0 624
+1 * 624 0 0 1 0 0 1
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624
+3 * 624 0 624
cfn=(82)
calls=624 0x4039fc 117 
* * 3744 1872 1248 2 0 0 2
+5 * 624
+3 * 624 0 624
cfi=(3)
cfn=(84)
calls=624 0x4039ed -88 
* * 3744 1872 1248
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(2)
calls=624 0x402d74 645 
* * 8112 3744 1248
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624
+3 * 624
+3 * 624 0 624 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=624 0x403a0a 134 
* * 258467 54634 49724 28 7 30 28 7 30 30732 969 1248
+5 +4 624 624
+4 * 624
+3 * 624 0 624
cfn=(106)
calls=624 0x40325e 113 
* * 3744 1872 1248 1 0 0 1
+5 * 624
+3 * 624 624
+4 * 624 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(108)
calls=624 0x403a98 565 
* * 15600 6240 4992 2 0 0 2
+5 * 624
+3 * 624 624
+4 * 624
+3 * 624 0 624
cfn=(112)
calls=624 0x403a68 547 
* * 15600 6240 4992
+5 * 624
+3 * 624
+3 * 624
+3 * 624
+3 * 624 0 624
cfi=(11)
cfn=(114)
calls=624 0x403ac9 -60 
* * 314882 104540 101424 7 0 22 7 0 22 11488 698 1244
+5 -3 624 624
+4 * 624 0 624
+4 * 624
jump=624 +28 +4 
* * 
+28 +4 624
+4 * 624 624
+1 * 624 624
+2 * 624 624
+2 * 624 624
+1 * 624 624

fn=(188)
0x403d98 171 632 0 632 1 0 0 1
+1 * 632
+3 * 632
+4 * 632 0 632
+4 * 632 0 632
+4 * 632 0 632
+4 +2 632 632
+5 * 632 0 0 0 0 0 0 0 0 632 8
+2 +1 632 632
+4 * 632 632
+4 * 632 632
+4 * 632
+3 * 632
+3 * 632 0 632
cfi=(5)
cfn=(190)
calls=632 0x40452a -65 
* * 84789 22756 13508 0 1 0 0 1 0 19087 45 1264
+5 +1 632 632
+1 * 632 632

fn=(22)
0x404236 167 632 0 632 1 0 0 1
+1 * 632
+3 * 632
+4 * 632 0 632 1 0 0 1
+4 * 632 0 632
+4 0 632 632
+5 0 632 0 0 0 0 0 0 0 0 632
+2 0 632 632
+4 0 632 632
+4 0 632
+5 0 632
+3 0 632
+3 0 632 0 632
fi=(6)
cfi=(5)
cfn=(26)
calls=632 0x404730 99 
* 0 197508 33014 33705 26 22 15 26 22 15 29619 970 1264
+5 0 632
fi=(6)
jump=632 +7 0 
* 0 
+7 0 632 632
+1 0 632 632

fn=(42)
0x403ba4 565 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+4 * 624 0 624
+4 * 624
+4 * 624 0 0 1 0 0 1
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(10)
cfn=(44)
calls=624 0x404468 726 
* * 6240 3120 2496 1 0 0 1
+5 * 624 624
+4 * 624 624
+1 * 624 624

fn=(46)
0x403b74 547 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+3 * 624 0 624
+4 * 624
+4 * 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfi=(10)
cfn=(44)
calls=624 0x404468 726 
* * 6240 3120 2496
+5 * 624 624
+4 * 624 624
+1 * 624 624

fn=(86)
0x403a0a 134 624 0 624
+1 * 624
+3 * 624 0 624
+1 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=624 0x4042e2 -45 
* * 22464 8112 8736 5 0 0 5
+5 +1 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624 1 0 0 1
cfn=(94)
calls=624 0x40432a +43 
* * 222275 42154 36620 22 7 30 22 7 30 30732 969 1248
+5 * 624
jump=624 +28 * 
* * 
+28 * 624
+4 * 624 624
+1 * 624 624
+1 * 624 624

fn=(88)
0x4042e2 90 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624 0 624 1 0 0 1
cfi=(4)
cfn=(90)
calls=624 0x4047b2 +24 
* * 11232 3744 4368 3 0 0 3
+5 * 624 624
+4 * 624 0 624
+7 * 624 624
+4 * 624 0 624
+8 * 624 624
+4 * 624 0 624
+8 +1 624 624
+1 * 624 624

fn=(156)
0x4031ec 159 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624
+1 * 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624 624 0 1 0 0 1
+4 * 624
+3 * 624 624
+4 * 624 624
+3 * 624
+3 * 624
+3 * 624
+4 * 624
+3 * 624 624
+4 * 624 624
+3 -1 624 624
+4 * 624
+3 * 624
+3 * 624 0 624
cfn=(158)
calls=624 0x403ce6 +11 
* * 86978 23652 14562 24 5 0 24 5 0 17540 425 1248
+5 +1 624 624
+4 * 624
+3 * 624 0 624
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=624 0x4031b8 -82 
* * 14352 4992 4992 1 0 0 1
+5 * 624
jump=624 +28 * 
* * 
+28 * 624
+4 * 624 624
+1 * 624 624
+1 * 624 624

fn=(172)
0x4031b8 79 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 * 624 624
+4 * 624
+3 * 624 0 624
cfi=(4)
cfn=(174)
calls=624 0x403ccc +42 
* * 8736 3120 3120
+5 * 624 624
+1 * 624 624

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208)
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280 0 0 2 0 0 2
+4 * 1280
+3 * 1280 1280
+4 * 1280 1280
+3 * 1280
+3 * 1280
+3 * 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(106)
0x40325e 113 1272 0 1272 1 0 0 1
+1 * 1272
+3 * 1272 0 1272
+4 +1 1272 1272
+4 * 1272 1272
+1 * 1272 1272

fn=(216)
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252)
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 640 0 640 1 0 0 1
+1 * 640
+3 * 640 0 640 0 0 1 0 0 1
+4 +1 640 640
+4 * 640 640
+1 * 640 640

fn=(82)
0x4039fc 117 640 0 640 1 0 0 1
+1 * 640
+3 * 640 0 640 1 0 0 1
+4 +1 640 640
+4 * 640 640
+1 * 640 640

fn=(200)
0x402eda 901 312 0 312
+1 * 312
+3 * 312
+4 * 312 0 312
+4 * 312 0 312
+4 +2 312 312
+4 * 312 312
+4 * 312 312
+4 * 312 312
+4 * 312
+3 * 312 0 0 0 0 0 0 0 0 312 9
jcnd=8/312 +51 +10 
* * 
+2 +3 304 304
+4 * 304 304
+4 * 304 304
+4 -1 304 304
+4 * 304
+3 * 304
+3 * 304 0 304
cfi=(3)
cfn=(222)
calls=304 0x403373 215 
* * 11552 3952 4256 0 20 2 0 20 2 304 2
+5 +2 304 304
+4 * 304 304
+4 * 304
+4 * 304 304
+4 * 304 0 304
+4 * 304
jump=304 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206)
calls=8 0x4033a0 318 
* * 12629 3916 3396 35 9 10 35 9 10 849 58 47
+5 +2 312 312
+1 * 312 312

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1264 0 1264 1 0 0 1
+2 0 1264 0 1264
+2 0 1264 0 1264
+2 0 1264
+3 0 1264 0 1264
+2 0 1264 0 1264
+1 0 1264 0 1264
+1 0 1264
+3 0 1264
+4 0 1264 1264
+4 0 1264 0 1264
+4 0 1264
+3 0 1264
+4 0 1264
+3 0 1264
+3 0 1264
+3 0 1264 0 0 1 0 0 1 0 0 1264
+6 0 1264
+4 0 1264 0 0 0 0 0 0 0 0 1264
+6 0 1264
+4 0 1264 0 0 0 0 0 0 0 0 1264
+6 0 1264 1264
+7 0 1264 0 0 0 0 0 0 0 0 1264 2
jcnd=1140/1264 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1140
+2 0 1140 0 0 0 0 0 0 0 0 1140
+6 0 1140 1140 0 1 0 0 1
+4 0 1140
+3 0 1140
+2 0 1140 0 0 0 0 0 0 0 0 1140
jcnd=1140/1140 0x3877c78a40 0 
* 0 
+6 0 1140 1140
+4 0 1140
+3 0 1140 0 0 0 0 0 0 0 0 1140
+6 0 1140 1140
+5 0 1140
+4 0 1140 0 0 0 0 0 0 0 0 1140
jcnd=1140/1140 0x3877c7907c 0 
* 0 
+6 0 1140 1140
+5 0 1140
+4 0 1140 0 0 0 0 0 0 0 0 1140
+6 0 1140
+4 0 1140 0 0 1 0 0 1 0 0 1140
+6 0 1140
+4 0 1140 1140
+7 0 1140 0 0 0 0 0 0 0 0 1140
+6 0 1140 1140
+6 0 1140
+2 0 1140 0 0 0 0 0 0 0 0 1140
+6 0 1140 1140
+4 0 1140 0 0 0 0 0 0 0 0 1140 5
jcnd=1136/1140 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1140 1140 0 1 0 0 1
+4 0 1140 0 0 0 0 0 0 0 0 1140 348
jcnd=400/1140 0x3877c78bf0 0 
* 0 
+6 0 740 740 0 0 1 0 0 1
+6 0 740 0 0 1 0 0 1 0 0 740 48
jcnd=45/740 0x3877c78a78 0 
* 0 
+6 0 695 695
+5 0 695 695
+5 0 695 695
+4 0 695 0 0 0 0 0 0 0 0 695
+6 0 695 695
+4 0 695 0 0 0 0 0 0 0 0 695
+6 0 695 695
+9 0 695 0 695
+4 0 695 0 695
+4 0 695 0 0 0 0 0 0 0 0 695 4
jcnd=687/695 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 695
+3 0 695
+4 0 695 695
+4 0 695 695
+4 0 695 0 0 0 0 0 0 0 0 695
-12 0 45
+4 0 45 45
+4 0 45 45
+4 0 45 0 0 0 0 0 0 0 0 45
+6 0 740
+7 0 740 0 740
+4 0 740 0 740
+4 0 740 0 0 0 0 0 0 0 0 740 66
jcnd=441/740 +18 0 
* 0 
+2 0 299 0 299
+8 0 299 0 299
+8 0 299 0 299
+4 0 299
+3 0 299 0 299 1 0 0 1
+4 0 299
+4 0 299 0 299
+4 0 299 0 299
+4 0 299
+7 0 299 0 0 0 0 0 0 0 0 299
jcnd=299/299 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 400
+7 0 400 0 0 0 0 0 0 0 0 400
jcnd=400/400 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1140 0 0 1 0 0 1
+5 0 1140 1140
+4 0 1140 1140
+7 0 1140 0 0 0 0 0 0 0 0 1140
jcnd=1140/1140 +16 0 
* 0 
+16 0 1140 0 1140
+5 0 1140 0 0 0 0 0 0 0 0 1140
+6 0 1140
+3 0 1140
jump=1140 0x3877c7878f 0 
* 0 
+10 0 45 0 45
+6 0 45 0 0 1 0 0 1
jump=45 0x3877c78885 0 
* 0 
0x3877c78b20 0 1140 1140 0 1 0 0 1
+4 0 1140
+2 0 1140 0 0 0 0 0 0 0 0 1140
+6 0 1140 1140
+7 0 1140 0 0 0 0 0 0 0 0 1140
jcnd=1140/1140 +15 0 
* 0 
+15 0 1140 0 1140 1 0 0 1
+4 0 1140 0 0 0 0 0 0 0 0 1140 2
+6 0 1140
+4 0 1140 1140
+1 0 1140 1140
+1 0 1140 1140
+2 0 1140 1140
+2 0 1140 1140
+2 0 1140 1140
+2 0 1140 1140
0x3877c78bf0 0 400 0 0 1 0 0 1
+3 0 400 0 400
+4 0 400
+3 0 400
+4 0 400 0 400 1 0 0 1
+4 0 400
jump=400 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1140 1140 0 1 1 0 1 1
+4 0 1140 0 0 1 0 0 1
+7 0 1140
+4 0 1140
+3 0 1140
+3 0 1140 0 0 0 0 0 0 0 0 1140
jcnd=1140/1140 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1254 0 0 1 0 0 1
+7 0 1254
+3 0 1254
+3 0 1254 1254 0 0 1 0 0 1
+4 0 1254
+4 0 1254 0 0 0 0 0 0 0 0 0 0 1254 155
jump=152 0x3877c89be8 0 
* 0 
jump=162 0x3877c89bd0 0 
* 0 
jump=152 0x3877c89bb8 0 
* 0 
jump=152 +11 0 
* 0 
jump=152 0x3877c89c48 0 
* 0 
jump=162 0x3877c89c30 0 
* 0 
jump=160 0x3877c89c18 0 
* 0 
jump=162 0x3877c89c00 0 
* 0 
+11 0 152 152
+3 0 152
+4 0 152
+4 0 152 152
+4 0 152
+4 0 152 0 152
+4 0 152
+9 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-40 0 12070 12070
+4 0 12070 0 12070 0 0 3 0 0 3
+4 0 12070 12070
+4 0 12070 0 12070 0 0 15 0 0 15
+4 0 12070 12070
+4 0 12070 0 12070 0 0 1 0 0 1
+4 0 12070 12070
+4 0 12070 0 12070
+4 0 12070
+4 0 12070
+4 0 12070 0 0 0 0 0 0 0 0 12070 780
jcnd=1218/12070 0x3877c89c60 0 
* 0 
-32 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162
jcnd=10/162 0x3877c89c60 0 
* 0 
-24 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
jcnd=8/160 0x3877c89c60 0 
* 0 
-16 0 162 162 0 1 0 0 1
+4 0 162 0 162
+4 0 162 0 0 1 0 0 1
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162 4
jcnd=10/162 0x3877c89c60 0 
* 0 
+6 0 11452
+4 0 11452 11452
+3 0 11452 0 11452 0 0 1 0 0 1
+3 0 11452 11452
+4 0 11452 0 11452 0 0 3 0 0 3
+4 0 11452 11452
+4 0 11452 0 11452 0 0 18 0 0 18
+4 0 11452 11452
+4 0 11452 0 11452
+4 0 11452
jump=11452 -80 0 
* 0 
-30 0 152 152
+3 0 152 0 152
+3 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152 0 0 1 0 0 1
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
-24 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
jump=162 -80 0 
* 0 
-16 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
+8 0 152 152
+3 0 152
+4 0 152 0 0 1 0 0 1
+4 0 152
+4 0 152
jump=152 -39 0 
* 0 
+9 0 162
+3 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+3 0 162
+4 0 162
jump=162 -72 0 
* 0 
+8 0 152
+4 0 152 152
+3 0 152 0 0 0 0 0 0 0 0 152
+2 0 152
+4 0 152
jump=152 -99 0 
* 0 
+11 0 162 162 0 1 0 0 1
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b78 0 
* 0 
+9 0 160 160
+3 0 160
+4 0 160
+4 0 160
+4 0 160
jump=160 0x3877c89b70 0 
* 0 
+9 0 162 162
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b68 0 
* 0 
+9 0 152 152
+3 0 152
+4 0 152
+4 0 152
+4 0 152
jump=152 0x3877c89b60 0 
* 0 
+9 0 1254 0 1254 1 0 0 1
+3 0 1254 1254

fn=(104) alloc_perturb
0x3877c77180 0 1139 1139 0 1 0 0 1
+6 0 1139
+2 0 1139 0 0 0 0 0 0 0 0 1139 1
+2 0 1139 1139

fn=(38) _int_malloc
0x3877c79a00 0 1264 0 1264 1 0 0 1
+2 0 1264
+3 0 1264 0 1264
+2 0 1264 0 1264
+2 0 1264 0 1264 0 0 1 0 0 1
+2 0 1264
+3 0 1264 0 1264
+1 0 1264 0 1264
+1 0 1264
+4 0 1264
+4 0 1264 0 0 0 0 0 0 0 0 1264
+6 0 1264
+4 0 1264
+6 0 1264
+3 0 1264
+4 0 1264
+4 0 1264
+4 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264
+6 0 1264 1264 0 1 1 0 1 1
+7 0 1264 0 0 0 0 0 0 0 0 1264 5
jcnd=1142/1264 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 125 125
+6 0 125
+4 0 125
+2 0 125 0 0 0 0 0 0 0 0 125
+6 0 125
+3 0 125
+4 0 125 125
+1 0 125 125
+1 0 125 125
+2 0 125 125
+2 0 125 125
+2 0 125 125
+2 0 125 125
-14 0 1139
+4 0 1139 1139
+1 0 1139 1139
+1 0 1139 1139
+2 0 1139 1139
+2 0 1139 1139
+2 0 1139 1139
+2 0 1139 1139
+7 0 1159
+7 0 1159 0 0 1 0 0 1 0 0 1159 7
jcnd=256/1159 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 12 0 0 12
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 256 0 0 1 0 0 1
+3 0 256
+4 0 256
+4 0 256 0 0 1 0 0 1 0 0 256
jcnd=256/256 0x3877c7a1a4 0 
* 0 
+30 0 256 256
+6 0 256
+5 0 256 0 0 0 0 0 0 0 0 256 1
jcnd=255/256 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 939 256 199 8 1 0 8 1 0 195 21
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1158 0 0 1 0 0 1
+3 0 1158
+3 0 1158
+3 0 1158
+4 0 1158
+3 0 1158
+4 0 1158 0 1158
+5 0 1158
+3 0 1158 0 1158
+4 0 1158 0 1158
+4 0 1158 0 1158
+5 0 1158
+3 0 1158
+3 0 1158
+3 0 1158
+3 0 1158
+4 0 1158
+4 0 1158 0 0 1 0 0 1
+4 0 1158 0 1158
+4 0 1158
+4 0 1158 0 1158
+5 0 1158 0 1158
+5 0 1158
+3 0 1158
+3 0 1158 0 1158
+5 0 1158
+5 0 1158
+3 0 1158 0 1158
+4 0 1158 0 1158
+4 0 1158
+6 0 1158 0 1158
+4 0 1158 0 1158
+5 0 1158 0 0 1 0 0 1
+3 0 1158
+3 0 1158
+3 0 1158
jump=1158 +87 0 
* 0 
+8 0 919
+3 0 919
+4 0 919
+2 0 919
+2 0 919
+3 0 919
+3 0 919
+3 0 919
+2 0 919
+2 0 919
+5 0 919
+2 0 919 919 0 0 2 0 0 2
+4 0 919
+3 0 919
+4 0 919 0 919
+4 0 919 0 919 0 0 1 0 0 1
+8 0 919
+7 0 919 0 919
+4 0 919 0 919 0 0 1 0 0 1
+4 0 919 0 919
+4 0 919 0 0 0 0 0 0 0 0 919
-38 0 296
+3 0 296
+4 0 296 0 296
+4 0 296 0 296
+8 0 296
+7 0 296 0 296
+4 0 296 0 296
+4 0 296 0 296
+4 0 296 0 0 0 0 0 0 0 0 296
+6 0 2374 2374 0 1 0 0 1
+4 0 2374
+3 0 2374 0 0 0 0 0 0 0 0 2374 162
jcnd=1117/2374 0x3877c79ef0 0 
* 0 
+6 0 1257 1257
+4 0 1257 1257
+4 0 1257
+4 0 1257 0 0 0 0 0 0 0 0 1257
+6 0 1257 1257 0 1 1 0 1 1
+7 0 1257 0 0 0 0 0 0 0 0 1257
+6 0 1257
+4 0 1257
+7 0 1257 0 0 0 0 0 0 0 0 1257 5
jcnd=346/1257 +11 0 
* 0 
+2 0 911
+3 0 911 0 0 0 0 0 0 0 0 911 62
jcnd=835/911 0x3877c79e28 0 
* 0 
+6 0 1235
+3 0 1235 0 1235
+4 0 1235 0 1235
+5 0 1235 0 0 0 0 0 0 0 0 1235 13
jcnd=20/1235 0x3877c7a090 0 
* 0 
+6 0 1215
+7 0 1215 0 0 0 0 0 0 0 0 1215 126
jcnd=919/1215 0x3877c79c50 0 
* 0 
+6 0 296 0 0 1 0 0 1
+3 0 296
+4 0 296
+4 0 296 0 0 0 0 0 0 0 0 296
+6 0 296
+3 0 296
+4 0 296
+2 0 296
+2 0 296
+3 0 296
+3 0 296
+8 0 296
+3 0 296
+2 0 296
+2 0 296
+4 0 296 296 0 0 2 0 0 2
+4 0 296
+3 0 296 0 0 1 0 0 1 0 0 296 9
jcnd=296/296 0x3877c79e15 0 
* 0 
0x3877c79e15 0 296 0 296
+4 0 296 0 296
+4 0 296
+3 0 296
jump=296 0x3877c79c73 0 
* 0 
+8 0 835 835 0 1 0 0 1
+4 0 835
+3 0 835 0 0 0 0 0 0 0 0 835 333
jcnd=428/835 0x3877c79ce1 0 
* 0 
+6 0 407 407
+5 0 407 0 0 0 0 0 0 0 0 407 3
jcnd=385/407 0x3877c79ce1 0 
* 0 
+6 0 22 0 0 1 0 0 1
+3 0 22
+3 0 22
+3 0 22
+7 0 22 0 22
+4 0 22 0 22
+4 0 22
+3 0 22 0 22
+4 0 22 0 22 0 0 17 0 0 17
+4 0 22 0 22
+4 0 22 0 0 0 0 0 0 0 0 22 4
jcnd=10/22 +18 0 
* 0 
+2 0 12 0 12 0 0 2 0 0 2
+8 0 12 0 12
+8 0 12
+7 0 12 0 12 1 0 1 1 0 1
+4 0 12
+3 0 12
+3 0 12
+3 0 12
+4 0 12
+3 0 12
+4 0 12
+3 0 12
+3 0 12
+4 0 12 0 12
+4 0 12 0 12
+4 0 12
+4 0 12
+3 0 12 0 12
cfn=(104)
calls=12 0x3877c77180 0 
* 0 48 24 0 1 0 0 1 0 0 12
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 22
+3 0 22
jump=22 0x3877c79ae3 0 
* 0 
+55 0 1117 0 0 1 0 0 1
+7 0 1117
+3 0 1117 0 0 0 0 0 0 0 0 1117 4
jcnd=256/1117 0x3877c7a0b0 0 
* 0 
+6 0 1117 1117 0 1 0 0 1
+4 0 1117
+3 0 1117
+3 0 1117
+2 0 1117
+4 0 1117
+3 0 1117
+3 0 1117
+2 0 1117
+2 0 1117
+2 0 1117
+2 0 1117 1117
+8 0 1117
+5 0 1117
+5 0 1117
+2 0 1117 0 0 0 0 0 0 0 0 1117
-2 0 526
+2 0 526 0 0 0 0 0 0 0 0 526
+2 0 1643
+2 0 1643 0 0 0 0 0 0 0 0 1643 31
jcnd=967/1643 +64 0 
* 0 
+2 0 676
+8 0 676
+3 0 676
+3 0 676 0 0 0 0 0 0 0 0 676 1
jcnd=1/676 0x3877c79fc0 0 
* 0 
-6 0 825
+3 0 825
+3 0 825 0 0 0 0 0 0 0 0 825 9
jcnd=401/825 0x3877c79fc0 0 
* 0 
+2 0 1099
+2 0 1099 1099
+8 0 1099
+2 0 1099 0 0 0 0 0 0 0 0 1099 24
jcnd=825/1099 -20 0 
* 0 
+2 0 274
+2 0 274
+5 0 274
+3 0 274
+3 0 274
+2 0 274
+2 0 274
+5 0 274 0 0 0 0 0 0 0 0 274
+2 0 274
+2 0 274
+4 0 274
+2 0 274
+2 0 274 0 0 0 0 0 0 0 0 274 6
jcnd=212/274 -8 0 
* 0 
-8 0 8217
+4 0 8217
+2 0 8217
+2 0 8217 0 0 0 0 0 0 0 0 8217 538
jcnd=7081/8217 -8 0 
* 0 
-2 0 967 0 0 1 0 0 1
+2 0 967 0 0 0 0 0 0 0 0 967 15
jcnd=924/967 -8 0 
* 0 
+2 0 1241 1241 0 0 4 0 0 4
+4 0 1241 0 0 1 0 0 1
+3 0 1241 0 0 0 0 0 0 0 0 1241 536
jcnd=715/1241 0x3877c7a1cf 0 
* 0 
+6 0 526
+2 0 526
+4 0 526
+2 0 526
+2 0 526
+2 0 526 0 526
+8 0 526
jump=526 0x3877c79f30 0 
* 0 
+37 0 402 402 0 1 0 0 1
+5 0 402 402
+4 0 402
+4 0 402 402
+5 0 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 20 0 0 1 0 0 1
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 0x3877c79ace 0 
* 0 
+16 0 256 256
+4 0 256
+4 0 256
+2 0 256
+5 0 256 256 0 1 1 0 1 1
+4 0 256
+3 0 256 0 0 0 0 0 0 0 0 256
jcnd=256/256 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 256 0 0 1 0 0 1
+3 0 256 0 256
+4 0 256
jump=256 0x3877c79b99 0 
* 0 
+36 0 715 715 0 1 0 0 1
+4 0 715 715
+4 0 715
+3 0 715 715
+4 0 715
+4 0 715
+3 0 715
+3 0 715 715
+4 0 715 0 0 0 0 0 0 0 0 715
+6 0 715 715
+4 0 715 0 0 0 0 0 0 0 0 715
+6 0 715 715 0 1 0 0 1
+8 0 715 0 715
+4 0 715 0 715
+4 0 715 0 0 0 0 0 0 0 0 715 10
jcnd=418/715 +38 0 
* 0 
+2 0 297 297 0 0 1 0 0 1
+4 0 297
+3 0 297 0 0 0 0 0 0 0 0 297
+2 0 297 297
+5 0 297 0 0 0 0 0 0 0 0 297
+6 0 297 297
+4 0 297 0 297
+4 0 297 297
+4 0 297 0 297
+4 0 297
+4 0 297 0 0 0 0 0 0 0 0 297
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 694 694
+4 0 694 694 0 1 0 0 1
+4 0 694 0 0 0 0 0 0 0 0 694
+6 0 694
+4 0 694
+7 0 694 0 694 0 0 7 0 0 7
+4 0 694 0 694
+4 0 694 0 694
+4 0 694 0 694
+4 0 694 0 0 0 0 0 0 0 0 694 4
jcnd=230/694 +7 0 
* 0 
+2 0 464 0 464
+5 0 464
+7 0 464 0 0 0 0 0 0 0 0 464 4
jcnd=458/464 +18 0 
* 0 
-7 0 230
+7 0 230 0 0 0 0 0 0 0 0 230
jcnd=230/230 +18 0 
* 0 
+2 0 6 0 6 0 0 1 0 0 1
+8 0 6 0 6 1 0 0 1
+8 0 6
+7 0 6 0 6 0 0 1 0 0 1
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 688
+7 0 688 0 688
+4 0 688
+3 0 688
+3 0 688
+4 0 688
+3 0 688
+4 0 688
+3 0 688
+3 0 688
+4 0 688 0 688
+4 0 688 0 688 0 0 1 0 0 1
+4 0 688
jump=688 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 21
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 +7 0 
* 0 
+7 0 715
+4 0 715 0 0 1 0 0 1
+3 0 715
+3 0 715 0 715
cfn=(104)
calls=715 0x3877c77180 0 
* 0 2860 1430 0 0 0 0 0 0 0 715
+5 0 715
+3 0 715
jump=715 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 402 0 0 1 0 0 1
+7 0 402
+2 0 402
+4 0 402
+3 0 402
+3 0 402 0 402
+5 0 402
+3 0 402
+4 0 402
+3 0 402 0 0 1 0 0 1
+4 0 402
+4 0 402
+3 0 402
+4 0 402 0 402
+4 0 402 0 402 0 0 15 0 0 15
+4 0 402
+3 0 402
+3 0 402 0 402
cfn=(104)
calls=402 0x3877c77180 0 
* 0 1608 804 0 0 0 0 0 0 0 402 1
+5 0 402
+3 0 402
jump=402 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 1264 0 1264 1 0 0 1
+5 0 1264 0 1264
+5 0 1264
+3 0 1264 0 1264
+5 0 1264
+4 0 1264 1264 0 0 1 0 0 1
+7 0 1264 1264 0 0 1 0 0 1
+3 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264
+6 0 1264 1264 0 0 1 0 0 1
+7 0 1264 1264 0 1 1 0 1 1
+4 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264
+2 0 1264 1264 0 0 1 0 0 1
+3 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264
jcnd=1264/1264 +97 0 
* 0 
+18 0 1264
+3 0 1264
+3 0 1264 0 1264
cfn=(38)
calls=1264 0x3877c79a00 0 
* 0 291096 36129 42565 42 29 50 42 29 50 45050 1966
+5 0 1264
+3 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264
+2 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264
+2 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264 7
+2 0 1264 1264
+7 0 1264 0 0 0 0 0 0 0 0 1264
jcnd=1264/1264 +13 0 
* 0 
+13 0 1264 0 1264
+2 0 1264 0 0 0 0 0 0 0 0 1264 12
+6 0 1264
+3 0 1264 1264
+4 0 1264 1264
+5 0 1264 1264
+5 0 1264
+4 0 1264 1264
+1 0 1264 0 0 1 0 0 1
+5 0 1264 1264 0 0 1 0 0 1
+7 0 1264 0 0 0 0 0 0 0 0 1264
jcnd=1264/1264 +14 0 
* 0 
+14 0 1264 0 1264 1 0 0 1
+3 0 1264 0 0 0 0 0 0 0 0 1264
+6 0 1264
jump=1264 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1264 0 1264 1 0 0 1
+2 0 1264
+3 0 1264
+3 0 1264 0 1264
+2 0 1264
+3 0 1264 0 1264
+1 0 1264
+3 0 1264 0 1264
+1 0 1264
+3 0 1264
+4 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264
+6 0 1264
+4 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264 4
jcnd=10/1264 0x3877c838d1 0 
* 0 
+2 0 1254
+3 0 1254
+3 0 1254
+3 0 1254
+3 0 1254
+3 0 1254 0 0 0 0 0 0 0 0 1254
jcnd=1254/1254 +41 0 
* 0 
+41 0 1254 0 0 1 0 0 1
+3 0 1254 0 0 0 0 0 0 0 0 1254
jcnd=1254/1254 0x3877c839c0 0 
* 0 
+24 0 1254
+3 0 1254
+4 0 1254
+3 0 1254
+3 0 1254
+3 0 1254
+3 0 1254
+3 0 1254 0 0 0 0 0 0 0 0 1254 624
jcnd=634/1254 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 630
+10 0 630 630 0 0 1 0 0 1
+3 0 630
+4 0 630 0 630
+3 0 630
+4 0 630
+4 0 630 0 0 0 0 0 0 0 0 630
jcnd=630/630 -18 0 
* 0 
-18 0 1946 1946
+3 0 1946
+4 0 1946 0 1946
+3 0 1946
+4 0 1946
+4 0 1946 0 0 0 0 0 0 0 0 1946 8
jcnd=1316/1946 -18 0 
* 0 
+2 0 1264
+4 0 1264
+3 0 1264 1264
+1 0 1264 1264
+1 0 1264 1264
+2 0 1264 1264 0 1 0 0 1
+2 0 1264 1264
0x3877c839c0 0 1254 0 0 1 0 0 1
+3 0 1254
+3 0 1254
+3 0 1254
+4 0 1254 0 1254 0 0 1 0 0 1
cfn=(284)
calls=1254 0x3877c89b20 0 
* 0 272218 100976 98468 6 1 42 6 1 42 13020 784 1254 155
+5 0 1254
jump=1254 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1264 1264 0 1 1 0 1 1
+7 0 1264 1264 0 0 1 0 0 1
+3 0 1264
+3 0 1264 0 0 1 0 0 1 0 0 1264
+6 0 1264
+3 0 1264 0 0 0 0 0 0 0 0 1264
+6 0 1264 1264
+4 0 1264
+4 0 1264
+2 0 1264 0 0 0 0 0 0 0 0 1264
+2 0 1264
+2 0 1264
+7 0 1264 0 0 0 0 0 0 0 0 1264
jcnd=1264/1264 +14 0 
* 0 
+14 0 1264
+2 0 1264
cfn=(170)
calls=1264 0x3877c78650 0 
* 0 123545 32791 18781 19 2 0 19 2 0 29877 477

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=16/20 +18 0 
* 0 
+2 0 4 0 4
+8 0 4 0 4
+8 0 4
+3 0 4 0 4
+4 0 4 0 4
+4 0 4
+4 0 4 0 4
+4 0 4 0 4
+4 0 4
+3 0 4
+3 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=2/4 0x3877c75f78 0 
* 0 
-29 0 16
+3 0 16 0 16
+4 0 16 0 16
+4 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 7
jcnd=5/16 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 2
jcnd=11/14 +15 0 
* 0 
+2 0 3 3
+4 0 3
+3 0 3 0 0 0 0 0 0 0 0 3
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 9280939 3788515 2191817 238 91 120 238 91 120 272741 4843 7574 155
