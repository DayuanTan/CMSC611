version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1083


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1321298200 - 1321535826
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 512 0 0 1 0 0 1
+3 0 512 0 0 0 0 0 0 0 0 512
+2 0 512
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=512 0x3877c7b8b0 0 
* 0 55758 14164 7280 21 3 0 21 3 0 13406 226
* 0 512 512 0 1 1 0 1 1 0 0 0 512

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 512 0 512 1 0 0 1
+1 0 512
+5 0 512
+3 0 512 0 512
+1 0 512
+4 0 512 0 0 1 0 0 1
+3 0 512
+4 0 512
+3 0 512 0 512 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=512 0x3877c7aa50 0 
* 0 122344 19197 18544 34 30 38 34 30 38 20002 622
* 0 512 512 0 1 1 0 1 1 0 0 0 512
+5 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +96 0 
* 0 
+96 0 512 0 0 1 0 0 1
+4 0 512 512
+1 0 512 512
+1 0 512 512

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 125 0 125 1 0 0 1
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125
+3 * 125 0 125
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=125 0x402d74 645 
* * 1625 750 250
+5 * 125
+3 * 125 0 125
+3 +1 125 125
+6 * 125 0 125
+3 * 125 125
+6 * 125 0 125
+3 +1 125 125
+6 * 125 0 125 1 0 0 1
+3 * 125 125
+6 * 125 0 125
+3 +2 125 0 125
+7 * 125
jump=125 +86 * 
* * 
+2 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=8000 0x402d9a 770 
* * 88000 40000 24000
+5 * 8000 8000
+4 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=8000 0x402dba 770 
* * 88000 40000 24000 1 0 0 1
+5 * 8000 8000
+2 * 8000
+4 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 -2 8000 0 8000
+4 * 8000 8000
+3 * 8000
+3 * 8000 8000
+3 * 8000 0 0 0 0 0 0 0 0 8000 126
jcnd=7875/8000 -93 +1 
* * 
-9 * 125 125 0 1 0 0 1
+3 * 125
+3 * 125 125
+3 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 -93 +1 
* * 
+2 +4 125 125
+3 * 125
+3 * 125
+4 * 125 125 0 1 0 0 1
+5 * 125
+4 * 125
+3 * 125 0 125
+5 +1 125 125
+3 * 125
+3 * 125
+4 * 125 125
+5 * 125
+4 * 125
+3 * 125 0 125
+5 +1 125 0 125
+7 * 125
jump=125 0x4016ee * 
* * 
+2 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000 0 0 1 0 0 1
+3 * 8000 0 8000
cfi=(2)
cfn=(146)
calls=8000 0x402dba 770 
* * 88000 40000 24000
+5 * 8000 8000
+2 * 8000
+4 * 8000 8000
+5 * 8000 0 8000
+5 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(144)
calls=8000 0x402d9a 770 
* * 88000 40000 24000
+5 * 8000 8000
+4 * 8000 8000
+5 * 8000 0 8000
+5 +1 8000 8000
+5 * 8000 8000
+5 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 +1 8000 8000
+5 * 8000 8000
+5 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 -4 8000 0 8000
+4 * 8000 8000
+3 * 8000
+3 * 8000 8000
+3 * 8000 0 0 0 0 0 0 0 0 8000 126
jcnd=7875/8000 0x401672 +1 
* * 
-9 * 125 125 0 1 0 0 1
+3 * 125
+3 * 125 125
+3 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 0x401672 +1 
* * 
+6 +6 125 125 0 1 0 0 1
+5 * 125 125
+5 * 125 0 125
+5 +2 125 125
+3 +1 125 0 125
+3 * 125 125
+5 * 125 125
+1 * 125 125

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 125
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=125 0x4030b2 310 
* * 111632 32086 29567 64 18 19 64 18 19 6795 300 498 62
+5 * 125
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=125 0x402ff4 310 
* * 112426 32059 29070 45 12 23 45 12 23 7003 324 498
+5 * 125 0 0 1 0 0 1
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfn=(142)
calls=125 0x401585 -52 
* * 840125 371125 194125 8 0 0 8 0 0 16250 252
+5 * 125 0 125
+8 * 125 125
+6 * 125 0 125
+6 * 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=125 0x402df4 414 
* * 31120 9763 7023 33 5 0 33 5 0 3379 99 250
+5 * 125
+7 * 125
+3 * 125 0 125 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=125 0x402e74 414 
* * 32182 10181 7293 7 0 0 7 0 0 3697 16 250
+5 +2 125
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(4)
calls=125 0x4030b2 310 
* * 111321 32064 29470 2 1 1 2 1 1 6769 146 498
+5 * 125
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(80)
calls=125 0x402ff4 310 
* * 111479 31989 28935 2 2 3 2 2 3 6839 122 498
+5 * 125 125
+6 * 125 0 0 1 0 0 1
+7 * 125
+7 * 125 0 125
+6 * 125 125
+8 * 125
+3 * 125
+3 * 125 0 125
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=125 0x401719 -33 
* * 391375 162750 89875 4 0 0 4 0 0 8125 126
+5 * 125 0 125
+8 * 125 125
+6 * 125 0 125
+6 * 125
+7 * 125 0 0 1 0 0 1
+3 * 125 0 125
cfi=(2)
cfn=(148)
calls=125 0x402df4 414 
* * 31120 9763 7023 0 0 0 0 0 0 3379 94 250
+5 * 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(178)
calls=125 0x402e74 414 
* * 32182 10181 7293 0 0 0 0 0 0 3697 11 250
+5 +2 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250
+5 * 125 125
+6 * 125
+3 * 125
+3 * 125
+3 * 125 125
+7 * 125
+3 * 125 0 0 1 0 0 1
+3 * 125 0 125
cfi=(2)
cfn=(144)
calls=125 0x402d9a 770 
* * 1375 625 375
+5 * 125
+3 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=125 0x402eda 901 
* * 16123 5787 4561 26 11 10 26 11 10 687 22 35
+5 +1 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=125 0x402f54 645 
* * 1625 750 250 0 1 0 0 1
+5 * 125 125
+6 * 125
+3 * 125
+3 * 125
+3 * 125 125
+7 * 125 0 0 1 0 0 1
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(146)
calls=125 0x402dba 770 
* * 1375 625 375
+5 * 125
+3 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=125 0x402f7a 901 
* * 16221 5804 4589 21 10 16 21 10 16 699 28 35
+5 +1 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(10)
calls=125 0x402f54 645 
* * 1625 750 250
+5 * 125 125
+6 * 125
+3 * 125
+3 * 125
+3 * 125 125 0 1 0 0 1
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(146)
calls=125 0x402dba 770 
* * 1375 625 375
+5 * 125 125
+2 * 125
+4 * 125 125
+8 * 125 125
+8 * 125 0 125
+8 +1 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250
+5 * 125 125 0 1 0 0 1
+6 * 125
+3 * 125
+3 * 125
+3 * 125 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(144)
calls=125 0x402d9a 770 
* * 1375 625 375
+5 * 125 125
+4 * 125 125
+8 * 125
+4 * 125 125
+8 * 125
+3 * 125 0 125
+8 +2 125 0 125
+7 -12 125 125
+8 * 125 125
+7 * 125 0 0 0 0 0 0 0 0 125 1
jcnd=1/125 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250 2 0 1 2 0 1
+5 * 125
+3 * 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250 0 1 0 0 1
+5 * 125
+3 * 125 0 0 0 0 0 0 0 0 125 1
+2 * 125 0 0 1 0 0 1
+5 * 125
jump=125 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 125
+2 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+5 +1 125 125
+4 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250
+5 * 125
+3 * 125 0 125
+3 +1 125 125 0 1 0 0 1
+6 * 125 0 125
+3 * 125 125
+6 * 125 0 125
+3 +2 125 0 125
+7 * 125
jump=125 +86 * 
* * 
+2 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(144)
calls=8000 0x402d9a 770 
* * 88000 40000 24000
+5 * 8000 8000
+4 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(146)
calls=8000 0x402dba 770 
* * 88000 40000 24000
+5 * 8000 8000
+2 * 8000
+4 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 -2 8000 0 8000
+4 * 8000 8000
+3 * 8000
+3 * 8000 8000
+3 * 8000 0 0 0 0 0 0 0 0 8000 126
jcnd=7875/8000 -93 +1 
* * 
-9 * 125 125 0 1 0 0 1
+3 * 125
+3 * 125 125
+3 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 -93 +1 
* * 
+2 +4 125 125
+3 * 125
+3 * 125 0 0 1 0 0 1
+4 * 125 125
+5 * 125
+4 * 125
+3 * 125 0 125
+5 +1 125 125
+3 * 125
+3 * 125
+4 * 125 125
+5 * 125
+4 * 125
+3 * 125 0 125
+5 +1 125 125
+5 * 125 125
+5 * 125 125
+5 * 125 0 0 1 0 0 1
+4 * 125
+3 * 125 0 125
+5 +2 125 125
+3 +1 125 0 125
+3 * 125 125
+5 * 125 125
+1 * 125 125

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 250
+4 * 250
+3 * 250 0 250
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=250 0x4044cc -35 
* * 1250 500 500
+5 * 250 250
+1 * 250 250

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250 1 0 0 1
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=250 0x4049d4 -35 
* * 1500 500 750 1 0 0 1
+5 * 250 250
+1 * 250 250

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 250
+4 * 250
+3 * 250 0 250
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=250 0x404520 -35 
* * 1250 500 500
+5 * 250 250
+1 * 250 250

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=250 0x404a28 -35 
* * 1500 500 750 1 0 1 1 0 1
+5 * 250 250
+1 * 250 250

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+4 * 250 250
+4 * 250 250
+1 * 250 250

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=125 0x40406a -87 
* * 3000 1000 1125 0 9 7 0 9 7 125
+5 * 125 125
+1 * 125 125

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 250 0 250
+1 * 250
+3 * 250 0 250
+4 * 250 250
+4 * 250 250
+1 * 250 250

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=125 0x403df2 -87 
* * 3000 1000 1125 0 9 4 0 9 4 125 1
+5 * 125 125
+1 * 125 125

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 310 0 310
+1 * 310
+3 * 310 0 310 0 0 1 0 0 1
+4 +1 310 310
+4 * 310 310
+1 * 310 310

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500
+4 * 500
+3 * 500 0 500
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=500 0x404ffe 790 
* * 3000 1500 1000 1 0 0 1
+5 * 500 500
+3 * 500 500
+1 * 500 500

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 +1 500 500
+4 * 500 500
+1 * 500 500

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500
+4 * 500
+3 * 500 0 500 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=500 0x40500c 790 
* * 3000 1500 1000 1 0 0 1
+5 * 500 500
+3 * 500 500
+1 * 500 500

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 310 0 310
+1 * 310
+3 * 310 0 310
+4 +1 310 310
+4 * 310 310
+1 * 310 310

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 +1 500 500 0 1 0 0 1
+4 * 500 500
+1 * 500 500

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 250 0 250
+1 * 250
+3 * 250 0 250
+4 * 250 0 250
+4 * 250 250
+4 * 250 250
+1 * 250 250

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256
+3 * 256 0 256
cfn=(102)
calls=256 0x4048de +12 
* * 1536 512 512 1 0 0 1
+5 * 256 256
+4 * 256 0 0 1 0 0 1
+3 * 256
+2 * 256 0 0 0 0 0 0 0 0 256
jcnd=256/256 +7 +3 
* * 
+7 +3 256 256
+4 * 256
+4 * 256
+3 * 256 0 256
cob=(5)
cfi=(8)
cfn=(32)
calls=256 0x387e4bd0b0 0 
* * 65708 10569 9512 20 16 24 20 16 24 10393 315 256
* * 256 256 0 0 0 0 0 0 0 0 0 256
+5 +1 256 256
+1 * 256 256

fn=(18)
0x404a28 81 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250 0 0 1 0 0 1
+4 * 250 0 250
+4 * 250 250
+1 * 250 250

fn=(92)
0x4049d4 81 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+4 * 250 0 250
+4 * 250 250
+1 * 250 250

fn=(196)
0x404520 86 250 0 250
+1 * 250
+3 * 250 0 250
+4 * 250 250
+1 * 250 250

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256 1 0 0 1
+4 +2 256 256
+4 * 256
+3 * 256 0 256
cfn=(28)
calls=256 0x404992 +12 
* * 1536 512 512 1 0 0 1
+5 * 256 256
+4 * 256
+3 * 256
+2 * 256 0 0 0 0 0 0 0 0 256
jcnd=256/256 +7 +3 
* * 
+7 +3 256 256
+4 * 256
+4 * 256
+3 * 256 0 256
cob=(5)
cfi=(8)
cfn=(32)
calls=256 0x387e4bd0b0 0 
* * 64828 10676 10568 18 15 15 18 15 15 10121 307 256
* * 256 256 0 1 1 0 1 1 0 0 0 256
+5 +1 256 256
+1 * 256 256

fn=(102)
0x4048de 113 268 0 268 1 0 0 1
+1 * 268
+3 * 268 0 268
+4 +1 268
+10 * 268 268
+1 * 268 268

fn=(266)
0x40406a 129 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125
+3 * 125
+5 * 125 0 125
cfi=(16)
cfn=(226)
calls=125 0x402d61 -20 
* * 875 375 375
+5 * 125
+3 * 125 0 0 0 0 0 0 0 0 125
+2 * 125 125
+4 * 125 125 0 0 9 0 0 9
+2 * 125 0 125 0 0 7 0 0 7
+2 * 125 125
+1 * 125 125

fn=(28)
0x404992 113 268 0 268 1 0 0 1
+1 * 268
+3 * 268 0 268
+4 +1 268
+10 * 268 268
+1 * 268 268

fn=(176)
0x4044cc 86 250 0 250
+1 * 250
+3 * 250 0 250
+4 * 250 250
+1 * 250 250

fn=(224)
0x403df2 129 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125
+3 * 125
+5 * 125 0 125
cfi=(16)
cfn=(226)
calls=125 0x402d61 -20 
* * 875 375 375
+5 * 125
+3 * 125 0 0 0 0 0 0 0 0 125 1
+2 * 125 125
+4 * 125 125 0 0 9 0 0 9
+2 * 125 0 125 0 0 4 0 0 4
+2 * 125 125
+1 * 125 125

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256
+3 * 256 0 256
cob=(5)
cfi=(8)
cfn=(164)
calls=256 0x387e4bb2f0 0 
* * 27828 6914 3368 23 4 0 23 4 0 6638 195 256
* * 256 256 0 1 1 0 1 1 0 0 0 256
+5 * 256 256
+1 * 256 256

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256
+3 * 256 0 256
cob=(5)
cfi=(8)
cfn=(164)
calls=256 0x387e4bb2f0 0 
* * 29978 7762 3912 0 0 0 0 0 0 7280 31 256
* * 256 256 0 0 0 0 0 0 0 0 0 256
+5 * 256 256
+1 * 256 256

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=250 0x404484 107 
* * 91742 28954 27458 25 3 6 25 3 6 3148 155 496 62
+5 * 250 250
+1 * 250 250

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250 0 1 0 0 1
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=250 0x404a36 450 
* * 84742 26454 24958 24 3 6 24 3 6 3148 155 496 62
+5 * 250 250
+1 * 250 250

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=250 0x40439c 107 
* * 91742 28954 27458 7 0 5 7 0 5 3148 140 496
+5 * 250 250
+1 * 250 250

fn=(116)
0x40439c 107 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +10 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=250 0x4047d7 -26 
* * 88242 27704 26208 7 0 5 7 0 5 3148 140 496
+5 +1 250 250
+1 * 250 250

fn=(118)
0x4047d7 91 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=250 0x4049e2 450 
* * 84742 26454 24958 7 0 5 7 0 5 3148 140 496
+5 * 250 250
+1 * 250 250

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +10 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(52)
calls=250 0x404829 -26 
* * 88242 27704 26208 25 3 6 25 3 6 3148 155 496 62
+5 +1 250 250
+1 * 250 250

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fl=(2)
fn=(2)
0x402d74 645 1024 0 1024 1 0 0 1
+1 * 1024
+3 * 1024 0 1024 0 0 1 0 0 1
+4 +1 1024 1024
+4 * 1024 1024 0 1 1 0 1 1
+4 * 1024
+3 * 1024 1024
+4 * 1024 1024
+3 * 1024
+3 * 1024
+3 * 1024
+4 * 1024 1024
+1 * 1024 1024

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=250 0x404236 -14 
* * 73961 13696 13329 22 15 9 22 15 9 10416 291 500
+5 * 250 250
+4 * 250 0 250
+3 +1 250 250
+4 * 250 250 0 1 0 0 1
+3 * 250 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+3 * 250 250
+4 * 250
+4 * 250
+3 * 250 250
+4 * 250 0 250
+4 +1 250 250
+1 * 250 250

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250 0 1 0 0 1
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=250 0x403fbe -14 
* * 74913 13594 12297 25 14 21 25 14 21 10694 306 500
+5 * 250 250
+4 * 250 0 250
+3 +1 250 250
+4 * 250 250
+3 * 250 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+3 * 250 250
+4 * 250
+4 * 250
+3 * 250 250
+4 * 250 0 250
+4 +1 250 250
+1 * 250 250

fn=(244)
0x402f7a 901 125 0 125
+1 * 125
+3 * 125 0 0 1 0 0 1
+4 * 125 0 125
+4 * 125 0 125
+4 +2 125 125
+4 * 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125 0 0 0 0 0 0 0 0 125
jcnd=6/125 +51 +10 
* * 
+2 +3 119 119
+4 * 119 119
+4 * 119 119
+4 -1 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfi=(3)
cfn=(264)
calls=119 0x4036b1 215 
* * 4522 1547 1666 0 8 4 0 8 4 119
+5 +2 119 119
+4 * 119 119
+4 * 119
+4 * 119 119
+4 * 119 0 119
+4 * 119
jump=119 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8335 2602 2256 20 2 12 20 2 12 455 28 35
+5 +2 125 125
+1 * 125 125

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 518 0 518 1 0 0 1
+1 * 518
+3 * 518 0 518 1 0 0 1
+4 +1 518 518
+4 * 518 518
+1 * 518 518

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+3 * 250 0 250
+4 * 250
+4 * 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=250 0x404380 726 
* * 2500 1250 1000
+5 * 250 250
+4 * 250 250
+1 * 250 250

fn=(148)
0x402df4 414 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250 1 0 0 1
+4 +2 250 250
+4 * 250
+3 * 250 0 250
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=250 0x40325e 113 
* * 1500 750 500
+5 * 250
+3 * 250 250
+4 * 250 250
+4 * 250 250
+4 * 250 250
+3 -1 250
+3 * 250
+3 * 250 0 250
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=250 0x40326c 148 
* * 7750 2500 3000 4 0 0 4
+5 +1 250 250
+4 * 250
+3 * 250 0 250
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=250 0x4031ec 159 
* * 46990 14026 9046 27 5 0 27 5 0 6758 193 500
+5 * 250
jump=250 +28 * 
* * 
+28 * 250 0 0 1 0 0 1
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+5 * 256 0 0 0 0 0 0 0 0 256
+2 +1 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(5)
cfn=(160)
calls=256 0x4044d6 -65 
* * 30900 7938 4648 24 5 0 24 5 0 6638 195 512
+5 +1 256 256
+1 * 256 256

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=250 0x4043ca -45 
* * 9000 3250 3500 4 0 4 4 0 4
+5 +1 250 250 0 1 0 0 1
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(20)
calls=250 0x404412 +43 
* * 80211 16696 15079 23 15 9 23 15 9 10416 291 500
+5 * 250
jump=250 +28 * 
* * 
+28 * 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(14)
0x4043ca 90 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250 0 0 1 0 0 1
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(4)
cfn=(16)
calls=250 0x404804 +24 
* * 4500 1500 1750 2 0 1 2 0 1
+5 * 250 250
+4 * 250 0 250 0 0 2 0 0 2
+7 * 250 250
+4 * 250 0 250 1 0 0 1
+8 * 250 250
+4 * 250 0 250
+8 +1 250 250
+1 * 250 250

fn=(80)
0x402ff4 310 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+2 * 250 0 250
+2 * 250 0 250
+1 * 250 0 0 1 0 0 1
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250
+3 * 250 0 250
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=250 0x4039fc 117 
* * 1500 750 500 2 0 0 2
+5 * 250
+3 * 250 0 250
cfi=(3)
cfn=(84)
calls=250 0x4039ed -88 
* * 1500 750 500
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(2)
calls=250 0x402d74 645 
* * 3250 1500 500
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=250 0x403a0a 134 
* * 95663 21594 19297 32 14 21 32 14 21 10694 306 500
+5 +4 250 250
+4 * 250
+3 * 250 0 250
cfn=(106)
calls=250 0x40325e 113 
* * 1500 750 500 1 0 0 1
+5 * 250
+3 * 250 250
+4 * 250 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=250 0x403a98 565 
* * 6250 2500 2000 2 0 0 2
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(112)
calls=250 0x403a68 547 
* * 6250 2500 2000
+5 * 250
+3 * 250
+3 * 250
+3 * 250
+3 * 250 0 250
cfi=(11)
cfn=(114)
calls=250 0x403ac9 -60 
* * 95492 30204 28958 7 0 5 7 0 5 3148 140 496
+5 -3 250 250
+4 * 250 0 250
+4 * 250
jump=250 +28 +4 
* * 
+28 +4 250
+4 * 250 250
+1 * 250 250
+2 * 250 250
+2 * 250 250
+1 * 250 250

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+5 * 256 0 0 0 0 0 0 0 0 256 6
+2 +1 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(5)
cfn=(190)
calls=256 0x40452a -65 
* * 33050 8786 5192 0 0 0 0 0 0 7280 31 512
+5 +1 256 256
+1 * 256 256

fn=(22)
0x404236 167 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256 1 0 0 1
+4 * 256 0 256
+4 0 256 256
+5 0 256 0 0 0 0 0 0 0 0 256
+2 0 256 256
+4 0 256 256
+4 0 256
+5 0 256
+3 0 256
+3 0 256 0 256
fi=(6) ???
cfi=(5)
cfn=(26)
calls=256 0x404730 99 
* 0 71484 12724 12616 22 16 15 22 16 15 10377 307 512
+5 0 256
fi=(6)
jump=256 +7 0 
* 0 
+7 0 256 256
+1 0 256 256

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250 0 250
+4 * 250
+4 * 250 0 0 1 0 0 1
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=250 0x404468 726 
* * 2500 1250 1000 1 0 0 1
+5 * 250 250
+4 * 250 250
+1 * 250 250

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+3 * 250 0 250
+4 * 250
+4 * 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(10)
cfn=(44)
calls=250 0x404468 726 
* * 2500 1250 1000
+5 * 250 250
+4 * 250 250
+1 * 250 250

fn=(86)
0x403a0a 134 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=250 0x4042e2 -45 
* * 9000 3250 3500 5 0 0 5
+5 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfn=(94)
calls=250 0x40432a +43 
* * 81163 16594 14047 26 14 21 26 14 21 10694 306 500
+5 * 250
jump=250 +28 * 
* * 
+28 * 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(88)
0x4042e2 90 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfi=(4)
cfn=(90)
calls=250 0x4047b2 +24 
* * 4500 1500 1750 3 0 0 3
+5 * 250 250
+4 * 250 0 250
+7 * 250 250
+4 * 250 0 250
+8 * 250 250
+4 * 250 0 250
+8 +1 250 250
+1 * 250 250

fn=(156)
0x4031ec 159 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250 0 1 0 0 1
+4 * 250
+3 * 250 250
+4 * 250 250
+3 * 250
+3 * 250
+3 * 250
+4 * 250
+3 * 250 250
+4 * 250 250
+3 -1 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(158)
calls=250 0x403ce6 +11 
* * 34240 9276 5796 24 5 0 24 5 0 6758 193 500
+5 +1 250 250
+4 * 250
+3 * 250 0 250
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=250 0x4031b8 -82 
* * 5750 2000 2000 1 0 0 1
+5 * 250
jump=250 +28 * 
* * 
+28 * 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(172)
0x4031b8 79 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 250
+4 * 250
+3 * 250 0 250
cfi=(4)
cfn=(174)
calls=250 0x403ccc +42 
* * 3500 1250 1250
+5 * 250 250
+1 * 250 250

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246)
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10)
0x402f54 645 524 0 524 1 0 0 1
+1 * 524
+3 * 524 0 524
+4 +1 524 524
+4 * 524 524 0 0 2 0 0 2
+4 * 524
+3 * 524 524
+4 * 524 524
+3 * 524
+3 * 524
+3 * 524
+4 * 524 524
+1 * 524 524

fn=(106)
0x40325e 113 518 0 518 1 0 0 1
+1 * 518
+3 * 518 0 518
+4 +1 518 518
+4 * 518 518
+1 * 518 518

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 262 0 262 1 0 0 1
+1 * 262
+3 * 262 0 262 0 0 1 0 0 1
+4 +1 262 262
+4 * 262 262
+1 * 262 262

fn=(82)
0x4039fc 117 262 0 262 1 0 0 1
+1 * 262
+3 * 262 0 262 1 0 0 1
+4 +1 262 262
+4 * 262 262
+1 * 262 262

fn=(200)
0x402eda 901 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 +2 125 125
+4 * 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125 0 0 0 0 0 0 0 0 125 6
jcnd=6/125 +51 +10 
* * 
+2 +3 119 119
+4 * 119 119
+4 * 119 119
+4 -1 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfi=(3)
cfn=(222)
calls=119 0x403373 215 
* * 4522 1547 1666 0 8 3 0 8 3 119 1
+5 +2 119 119
+4 * 119 119
+4 * 119
+4 * 119 119
+4 * 119 0 119
+4 * 119
jump=119 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8237 2585 2228 23 3 7 23 3 7 443 15 35
+5 +2 125 125
+1 * 125 125

fn=(4)
0x4030b2 310 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+2 * 250 0 250
+2 * 250 0 250
+1 * 250
+4 * 250 0 250 1 0 0 1
+4 * 250 0 250
+4 +2 250 250
+4 * 250
+3 * 250 0 250
cfn=(6)
calls=250 0x403b08 117 
* * 1500 750 500 1 0 1 1 0 1
+5 * 250
+3 * 250 0 250
cfi=(3)
cfn=(8)
calls=250 0x403afa -88 
* * 1500 750 500 1 0 0 1
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(10)
calls=250 0x402f54 645 
* * 3250 1500 500 1 1 0 1 1
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250
+3 * 250
+3 * 250 0 250
cfn=(12)
calls=250 0x403b16 134 
* * 94711 21696 20329 28 15 13 28 15 13 10416 291 500
+5 +4 250 250 0 1 0 0 1
+4 * 250
+3 * 250 0 250
cfn=(40)
calls=250 0x40333c 113 
* * 1500 750 500 2 0 0 2
+5 * 250
+3 * 250 250
+4 * 250 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(42)
calls=250 0x403ba4 565 
* * 6250 2500 2000 3 0 0 3
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(46)
calls=250 0x403b74 547 
* * 6250 2500 2000
+5 * 250
+3 * 250
+3 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfi=(11)
cfn=(48)
calls=250 0x403bd5 -60 
* * 95492 30204 28958 26 3 6 26 3 6 3148 155 496 62
+5 -3 250 250
+4 * 250 0 250
+4 * 250
jump=250 +28 +4 
* * 
+28 +4 250
+4 * 250 250
+1 * 250 250
+2 * 250 250
+2 * 250 250
+1 * 250 250

fn=(108)
0x403a98 565 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250 0 250
+4 * 250
+4 * 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(10)
cfn=(110)
calls=250 0x404380 726 
* * 2500 1250 1000 1 0 0 1
+5 * 250 250
+4 * 250 250
+1 * 250 250

fn=(178)
0x402e74 414 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250 1 0 0 1
+4 +2 250 250
+4 * 250
+3 * 250 0 250
cfn=(40)
calls=250 0x40333c 113 
* * 1500 750 500
+5 * 250
+3 * 250 250
+4 * 250 250
+4 * 250 250
+4 * 250 250
+3 -1 250
+3 * 250
+3 * 250 0 250
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=250 0x40334a 148 
* * 7750 2500 3000 2 0 0 2
+5 +1 250 250
+4 * 250
+3 * 250 0 250
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=250 0x4032ca 159 
* * 49114 14862 9586 3 0 0 3 0 0 7394 27 500
+5 * 250
jump=250 +28 * 
* * 
+28 * 250 0 0 1 0 0 1
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96)
0x403fbe 167 256 0 256 1 0 0 1
+1 * 256 0 0 1 0 0 1
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 0 256 256
+5 0 256 0 0 0 0 0 0 0 0 256
+2 0 256 256
+4 0 256 256
+4 0 256
+5 0 256
+3 0 256
+3 0 256 0 256
fi=(6)
cfi=(5)
cfn=(100)
calls=256 0x40461a 99 
* 0 72364 12617 11560 23 16 24 23 16 24 10649 315 512
+5 0 256
fi=(6)
jump=256 +7 0 
* 0 
+7 0 256 256
+1 0 256 256

fn=(144)
0x402d9a 770 24250 0 24250
+1 * 24250
+3 * 24250 0 24250
+4 * 24250 0 24250
+4 +1 24250 24250
+4 * 24250 24250
+3 * 24250 24250
+4 * 24250
+4 * 24250
+3 * 24250 24250
+1 * 24250 24250

fn=(146)
0x402dba 770 24250 0 24250
+1 * 24250
+3 * 24250 0 24250 1 0 0 1
+4 * 24250 0 24250
+4 +1 24250 24250
+4 * 24250 24250
+3 * 24250 24250
+4 * 24250
+4 * 24250
+3 * 24250 24250
+1 * 24250 24250

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 250
+4 * 250
+3 * 250 0 250
cfi=(4)
cfn=(194)
calls=250 0x403d7e +42 
* * 3500 1250 1250 1 0 0 1
+5 * 250 250
+1 * 250 250

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186)
0x4032ca 159 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250
+3 * 250 250
+4 * 250 250
+3 * 250
+3 * 250
+3 * 250
+4 * 250
+3 * 250 250
+4 * 250 250
+3 -1 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(188)
calls=250 0x403d98 +11 
* * 36364 10112 6336 1 0 0 1 0 0 7394 27 500
+5 +1 250 250
+4 * 250
+3 * 250 0 250
cfn=(192)
calls=250 0x403296 -82 
* * 5750 2000 2000 1 0 0 1
+5 * 250
jump=250 +28 * 
* * 
+28 * 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250 1 0 0 1
+4 * 250 0 250
+4 * 250 0 250
+4 +8 250 0 250
+4 +3 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=250 0x404f37 -22 
* * 44742 12954 11208 14 3 5 14 3 5 3148 155 496 62
+5 +1 250 250
+1 * 250 250

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 250 0 250
+1 * 250
+3 * 250 0 250
+2 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +4 250 250
+4 * 250
+3 * 250 0 250
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=250 0x404878 277 
* * 3750 1500 1250 1 0 0 1
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=250 0x404d44 277 
* * 6250 2250 2000 2 0 0 2
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(132)
calls=250 0x404d44 277 
* * 6250 2250 2000
+5 * 250
+3 * 250
+3 * 250
+3 * 250 0 250
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=250 0x404d5e -49 
* * 48492 14204 12708 1 0 5 1 0 5 3148 140 496
+5 +1 250
+4 * 250 250
+1 * 250 250
+2 * 250 250
+1 * 250 250

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250 1 0 0 1
+4 * 250 0 250
+4 * 250 0 250
+4 +10 250 250
+4 * 250
+3 * 250 0 250
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=250 0x404c38 288 
* * 3750 1500 1250 3 0 0 3
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(56)
calls=250 0x404c38 288 
* * 3750 1500 1250
+5 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=250 0x404c52 -36 
* * 71742 21954 20458 20 3 6 20 3 6 3148 155 496 62
+5 +1 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(60)
0x404c52 424 250 0 250
+1 * 250
+3 * 250 0 250
+2 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +4 250 250
+4 * 250
+3 * 250 0 250
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=250 0x40492d 277 
* * 3750 1500 1250 2 0 0 2
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=250 0x404d9d 277 
* * 6250 2250 2000 2 0 1 2 0 1
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(66)
calls=250 0x404d9d 277 
* * 6250 2250 2000
+5 * 250
+3 * 250
+3 * 250
+3 * 250 0 250
cfn=(72)
calls=250 0x404db7 -49 
* * 48492 14204 12708 15 3 5 15 3 5 3148 155 496 62
+5 +1 250
+4 * 250 250
+1 * 250 250
+2 * 250 250
+1 * 250 250

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 286 0 286 1 0 0 1
+1 * 286
+3 * 286
+4 * 286 0 286
+4 +1 286 286
+4 * 286
+3 * 286 0 286 1 0 0 1
cfi=(13)
cfn=(64)
calls=286 -33 -66 
* * 1716 858 572
+5 * 286 286
+1 * 286 286

fn=(66)
0x404d9d 277 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(13)
cfn=(68)
calls=500 0x404f1a -58 
* * 8000 3000 2500 2 0 1 2 0 1
+5 * 500 500
+1 * 500 500

fn=(240)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +10 250 250
+4 * 250
+3 * 250 0 250
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=250 0x404bc6 288 
* * 3750 1500 1250 3 0 0 3
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(122)
calls=250 0x404bc6 288 
* * 3750 1500 1250
+5 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(126)
calls=250 0x404be0 -36 
* * 71742 21954 20458 4 0 5 4 0 5 3148 140 496
+5 +1 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(128)
0x404878 277 286 0 286
+1 * 286
+3 * 286
+4 * 286 0 286 1 0 0 1
+4 +1 286 286
+4 * 286
+3 * 286 0 286
cfi=(13)
cfn=(130)
calls=286 -33 -66 
* * 1716 858 572 0 0 1 0 0 1
+5 * 286 286
+1 * 286 286

fn=(132)
0x404d44 277 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(13)
cfn=(134)
calls=500 0x404e98 -58 
* * 8000 3000 2500 2 0 0 2
+5 * 500 500
+1 * 500 500

fn=(138)
0x404d5e 379 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +8 250 0 250
+4 +3 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=250 0x404eb5 -22 
* * 44742 12954 11208 1 0 5 1 0 5 3148 140 496
+5 +1 250 250
+1 * 250 250

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(13)
cfn=(124)
calls=500 0x404d36 -77 
* * 3000 1500 1000 2 0 0 2
+5 * 500 500
+1 * 500 500

fn=(56)
0x404c38 288 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500 1 0 0 1
+4 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(13)
cfn=(58)
calls=500 0x404d8f -77 
* * 3000 1500 1000 1 0 0 1
+5 * 500 500
+1 * 500 500

fn=(74)
0x404f37 368 262 0 262
+1 * 262
+3 * 262
+4 * 262 0 262 1 0 0 1
+4 * 262 0 262
+4 * 262 0 262
+4 +2 262 262
+4 * 262 262
+4 * 262
+3 * 262
+3 * 262
+4 * 262 0 262
+4 +1 262 262
+5 * 262 0 0 0 0 0 0 0 0 262
jcnd=6/262 +33 +2 
* * 
+2 +1 256 256
+4 * 256
+8 * 256 256
+4 * 256 256
+4 * 256
+3 * 256 0 0 1 0 0 1
+3 * 256 0 256 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=256 0x3877c83840 0 
* * 38252 10314 9807 11 2 7 11 2 7 2946 157 251 62
* * 256 256 0 1 1 0 1 1 0 0 0 256
+5 +1 262 262
+4 * 262
+8 * 262 262
+4 * 262
+3 +1 262 262
+1 * 262 262

fn=(140)
0x404eb5 368 262 0 262
+1 * 262
+3 * 262
+4 * 262 0 262 1 0 0 1
+4 * 262 0 262
+4 * 262 0 262 0 0 1 0 0 1
+4 +2 262 262
+4 * 262 262
+4 * 262
+3 * 262
+3 * 262
+4 * 262 0 262
+4 +1 262 262
+5 * 262 0 0 0 0 0 0 0 0 262
jcnd=6/262 +33 +2 
* * 
+2 +1 256 256
+4 * 256
+8 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cob=(2)
cfi=(9)
cfn=(78)
calls=256 0x3877c83840 0 
* * 38252 10314 9807 0 0 6 0 0 6 2946 144 251
* * 256 256 0 0 0 0 0 0 0 0 0 256
+5 +1 262 262
+4 * 262
+8 * 262 262
+4 * 262
+3 +1 262 262
+1 * 262 262

fl=(10)
fn=(136)
0x404ffe 790 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 +1 500 500
+4 * 500 500
+1 * 500 500

fn=(44)
0x404468 726 500 0 500
+1 * 500
+3 * 500 0 500
+4 * 500 0 500
+4 * 500 500
+4 * 500 500
+3 * 500 500
+4 * 500 0 500 1 0 0 1
+3 * 500 500
+1 * 500 500

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 +1 500 500
+4 * 500 500
+1 * 500 500

fn=(110)
0x404380 726 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 * 500 0 500
+4 * 500 500
+4 * 500 500
+3 * 500 500
+4 * 500 0 500
+3 * 500 500
+1 * 500 500

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 * 256 0 256 1 0 0 1
+4 * 256 256
+1 * 256 256

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 +4 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=256 0x40454c -14 
* * 1536 512 768 1 0 0 1
+5 +2 256 256
+1 * 256 256

fn=(150)
0x40326c 148 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +3 256 256 0 1 0 0 1
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=256 0x403d1a -29 
* * 4608 1536 1792 3 0 0 3
+5 +1 256 256
+1 * 256 256

fn=(180)
0x40334a 148 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +3 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(182)
calls=256 0x403dcc -29 
* * 4608 1536 1792 2 0 0 2
+5 +1 256 256
+1 * 256 256

fn=(152)
0x403d1a 122 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 +4 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(154)
calls=256 0x4044f8 -14 
* * 1536 512 768 2 0 0 2
+5 +2 256 256
+1 * 256 256

fn=(184)
0x40454c 112 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 * 256 0 256
+4 * 256 256
+1 * 256 256

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1619 308 311 2 1 6 2 1 6 217 16 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 1 3 0 1 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1547 303 287 0 2 3 0 2 3 211 9 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 4 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 512 0 512 1 0 0 1
+5 0 512 0 512
+5 0 512
+3 0 512 0 512
+5 0 512
+4 0 512 512 0 0 1 0 0 1
+7 0 512 512 0 0 1 0 0 1
+3 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512 512 0 0 1 0 0 1
+7 0 512 512 0 1 1 0 1 1
+4 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+2 0 512 512 0 0 1 0 0 1
+3 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +97 0 
* 0 
+18 0 512
+3 0 512
+3 0 512 0 512
cfn=(38) _int_malloc
calls=512 0x3877c79a00 0 
* 0 100840 13565 15472 30 24 38 30 24 38 14882 607
+5 0 512
+3 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+2 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+2 0 512
+3 0 512 0 0 0 0 0 0 0 0 512 3
+2 0 512 512
+7 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +13 0 
* 0 
+13 0 512 0 512
+2 0 512 0 0 0 0 0 0 0 0 512 12
+6 0 512
+3 0 512 512
+4 0 512 512
+5 0 512 512
+5 0 512
+4 0 512 512
+1 0 512 0 0 1 0 0 1
+5 0 512 512 0 0 1 0 0 1
+7 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +14 0 
* 0 
+14 0 512 0 512 1 0 0 1
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512
jump=512 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 512 0 512 1 0 0 1
+2 0 512
+3 0 512
+3 0 512 0 512
+2 0 512
+3 0 512 0 512
+1 0 512
+3 0 512 0 512
+1 0 512
+3 0 512
+4 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512
+4 0 512
+3 0 512 0 0 0 0 0 0 0 0 512 7
jcnd=10/512 0x3877c838d1 0 
* 0 
+2 0 502
+3 0 502
+3 0 502
+3 0 502
+3 0 502
+3 0 502 0 0 0 0 0 0 0 0 502
jcnd=502/502 +41 0 
* 0 
+41 0 502 0 0 1 0 0 1
+3 0 502 0 0 0 0 0 0 0 0 502
jcnd=502/502 0x3877c839c0 0 
* 0 
+24 0 502
+3 0 502
+4 0 502
+3 0 502
+3 0 502
+3 0 502
+3 0 502
+3 0 502 0 0 0 0 0 0 0 0 502 250
jcnd=258/502 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 254
+10 0 254 254 0 0 1 0 0 1
+3 0 254
+4 0 254 0 254
+3 0 254
+4 0 254
+4 0 254 0 0 0 0 0 0 0 0 254
jcnd=254/254 -18 0 
* 0 
-18 0 818 818
+3 0 818
+4 0 818 0 818
+3 0 818
+4 0 818
+4 0 818 0 0 0 0 0 0 0 0 818 11
jcnd=564/818 -18 0 
* 0 
+2 0 512
+4 0 512
+3 0 512 512
+1 0 512 512
+1 0 512 512
+2 0 512 512 0 1 0 0 1
+2 0 512 512
0x3877c839c0 0 502 0 0 1 0 0 1
+3 0 502
+3 0 502
+3 0 502
+4 0 502 0 502 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=502 0x3877c89b20 0 
* 0 47490 16996 15992 6 1 12 6 1 12 2280 33 502 62
+5 0 502
jump=502 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 512 512 0 1 1 0 1 1
+7 0 512 512 0 0 1 0 0 1
+3 0 512
+3 0 512 0 0 1 0 0 1 0 0 512
+6 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512 512
+4 0 512
+4 0 512
+2 0 512 0 0 0 0 0 0 0 0 512
+2 0 512
+2 0 512
+7 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +14 0 
* 0 
+14 0 512
+2 0 512
cfn=(170) _int_free
calls=512 0x3877c78650 0 
* 0 48078 12628 7280 19 1 0 19 1 0 11358 226

fn=(170)
0x3877c78650 0 512 0 512 1 0 0 1
+2 0 512 0 512
+2 0 512 0 512
+2 0 512
+3 0 512 0 512
+2 0 512 0 512
+1 0 512 0 512
+1 0 512
+3 0 512
+4 0 512 512
+4 0 512 0 512
+4 0 512
+3 0 512
+4 0 512
+3 0 512
+3 0 512
+3 0 512 0 0 1 0 0 1 0 0 512
+6 0 512
+4 0 512 0 0 0 0 0 0 0 0 512
+6 0 512
+4 0 512 0 0 0 0 0 0 0 0 512
+6 0 512 512
+7 0 512 0 0 0 0 0 0 0 0 512 4
jcnd=388/512 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 388
+2 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388 0 1 0 0 1
+4 0 388
+3 0 388
+2 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 0x3877c78a40 0 
* 0 
+6 0 388 388
+4 0 388
+3 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388
+5 0 388
+4 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 0x3877c7907c 0 
* 0 
+6 0 388 388
+5 0 388
+4 0 388 0 0 0 0 0 0 0 0 388
+6 0 388
+4 0 388 0 0 1 0 0 1 0 0 388
+6 0 388
+4 0 388 388
+7 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388
+6 0 388
+2 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388
+4 0 388 0 0 0 0 0 0 0 0 388 2
jcnd=386/388 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 388 388 0 1 0 0 1
+4 0 388 0 0 0 0 0 0 0 0 388 112
jcnd=112/388 0x3877c78bf0 0 
* 0 
+6 0 276 276
+6 0 276 0 0 1 0 0 1 0 0 276 40
jcnd=24/276 0x3877c78a78 0 
* 0 
+6 0 252 252
+5 0 252 252
+5 0 252 252
+4 0 252 0 0 0 0 0 0 0 0 252
+6 0 252 252
+4 0 252 0 0 0 0 0 0 0 0 252
+6 0 252 252
+9 0 252 0 252
+4 0 252 0 252
+4 0 252 0 0 0 0 0 0 0 0 252 4
jcnd=244/252 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 252
+3 0 252
+4 0 252 252
+4 0 252 252
+4 0 252 0 0 0 0 0 0 0 0 252
-12 0 24
+4 0 24 24
+4 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 276
+7 0 276 0 276
+4 0 276 0 276
+4 0 276 0 0 0 0 0 0 0 0 276 60
jcnd=208/276 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 208 0 208
+4 0 208
+3 0 208 0 208
+4 0 208
+4 0 208 0 208
+4 0 208 0 208
+4 0 208
+7 0 208 0 0 0 0 0 0 0 0 208
jcnd=208/208 0x3877c78b20 0 
* 0 
-7 0 112
+7 0 112 0 0 0 0 0 0 0 0 112
jcnd=112/112 0x3877c78b20 0 
* 0 
0x3877c78a40 0 388 0 0 1 0 0 1
+5 0 388 388
+4 0 388 388
+7 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 +16 0 
* 0 
+16 0 388 0 388
+5 0 388 0 0 0 0 0 0 0 0 388
+6 0 388
+3 0 388
jump=388 0x3877c7878f 0 
* 0 
+10 0 24 0 24
+6 0 24 0 0 1 0 0 1
jump=24 0x3877c78885 0 
* 0 
0x3877c78b20 0 388 388 0 1 0 0 1
+4 0 388
+2 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388
+7 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 +15 0 
* 0 
+15 0 388 0 388 1 0 0 1
+4 0 388 0 0 0 0 0 0 0 0 388 2
+6 0 388
+4 0 388 388
+1 0 388 388
+1 0 388 388
+2 0 388 388
+2 0 388 388
+2 0 388 388
+2 0 388 388
0x3877c78bf0 0 112 0 0 1 0 0 1
+3 0 112 0 112
+4 0 112
+3 0 112
+4 0 112 0 112 1 0 0 1
+4 0 112
jump=112 0x3877c788cf 0 
* 0 
0x3877c7907c 0 388 388 0 1 1 0 1 1
+4 0 388 0 0 1 0 0 1
+7 0 388
+4 0 388
+3 0 388
+3 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 502 0 0 1 0 0 1
+7 0 502
+3 0 502
+3 0 502 502 0 0 1 0 0 1
+4 0 502
+4 0 502 0 0 0 0 0 0 0 0 0 0 502 62
jump=56 0x3877c89be8 0 
* 0 
jump=62 0x3877c89bd0 0 
* 0 
jump=60 0x3877c89bb8 0 
* 0 
jump=64 +11 0 
* 0 
jump=64 0x3877c89c48 0 
* 0 
jump=66 0x3877c89c30 0 
* 0 
jump=64 0x3877c89c18 0 
* 0 
jump=66 0x3877c89c00 0 
* 0 
+11 0 64 64
+3 0 64
+4 0 64
+4 0 64 64
+4 0 64
+4 0 64 0 64
+4 0 64
+9 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
+4 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
jcnd=8/64 0x3877c89c60 0 
* 0 
-40 0 1902 1902
+4 0 1902 0 1902 0 0 3 0 0 3
+4 0 1902 1902
+4 0 1902 0 1902
+4 0 1902 1902
+4 0 1902 0 1902 0 0 1 0 0 1
+4 0 1902 1902
+4 0 1902 0 1902 0 0 3 0 0 3
+4 0 1902
+4 0 1902
+4 0 1902 0 0 0 0 0 0 0 0 1902 29
jcnd=466/1902 0x3877c89c60 0 
* 0 
-32 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
jcnd=10/66 0x3877c89c60 0 
* 0 
-24 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
+4 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
jcnd=8/64 0x3877c89c60 0 
* 0 
-16 0 66 66 0 1 0 0 1
+4 0 66 0 66
+4 0 66 0 0 1 0 0 1
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66 4
jcnd=10/66 0x3877c89c60 0 
* 0 
+6 0 1660
+4 0 1660 1660
+3 0 1660 0 1660 0 0 4 0 0 4
+3 0 1660 1660
+4 0 1660 0 1660
+4 0 1660 1660
+4 0 1660 0 1660
+4 0 1660 1660
+4 0 1660 0 1660
+4 0 1660
jump=1660 -80 0 
* 0 
-30 0 56 56
+3 0 56 0 56
+3 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56 0 0 1 0 0 1
+4 0 56 56
+4 0 56 0 56
+4 0 56
jump=56 -80 0 
* 0 
-24 0 62 62
+4 0 62 0 62
+4 0 62 62
+4 0 62 0 62
+4 0 62 62
+4 0 62 0 62
+4 0 62
jump=62 -80 0 
* 0 
-16 0 60 60
+4 0 60 0 60
+4 0 60 60
+4 0 60 0 60
+4 0 60
jump=60 -80 0 
* 0 
+8 0 60 60
+3 0 60
+4 0 60 0 0 1 0 0 1
+4 0 60
+4 0 60
jump=60 -39 0 
* 0 
+9 0 62
+3 0 62 0 0 0 0 0 0 0 0 62
+6 0 62 62
+3 0 62
+4 0 62
jump=62 -72 0 
* 0 
+8 0 56
+4 0 56 56
+3 0 56 0 0 0 0 0 0 0 0 56
+2 0 56
+4 0 56
jump=56 -99 0 
* 0 
+11 0 66 66 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66
+4 0 66
jump=66 0x3877c89b78 0 
* 0 
+9 0 64 64
+3 0 64
+4 0 64
+4 0 64
+4 0 64
jump=64 0x3877c89b70 0 
* 0 
+9 0 66 66
+3 0 66
+4 0 66
+4 0 66
+4 0 66
jump=66 0x3877c89b68 0 
* 0 
+9 0 64 64
+3 0 64
+4 0 64
+4 0 64
+4 0 64
jump=64 0x3877c89b60 0 
* 0 
+9 0 502 0 502 1 0 0 1
+3 0 502 502

fn=(104) alloc_perturb
0x3877c77180 0 394 394 0 1 0 0 1
+6 0 394
+2 0 394 0 0 0 0 0 0 0 0 394 3
+2 0 394 394

fn=(38)
0x3877c79a00 0 512 0 512 1 0 0 1
+2 0 512
+3 0 512 0 512
+2 0 512 0 512
+2 0 512 0 512 0 0 1 0 0 1
+2 0 512
+3 0 512 0 512
+1 0 512 0 512
+1 0 512
+4 0 512
+4 0 512 0 0 0 0 0 0 0 0 512
+6 0 512
+4 0 512
+6 0 512
+3 0 512
+4 0 512
+4 0 512
+4 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512 512 0 1 1 0 1 1
+7 0 512 0 0 0 0 0 0 0 0 512 7
jcnd=390/512 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 1
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 394
+4 0 394 394
+1 0 394 394
+1 0 394 394
+2 0 394 394
+2 0 394 394
+2 0 394 394
+2 0 394 394
+7 0 407
+7 0 407 0 0 1 0 0 1 0 0 407
+2 0 407
+3 0 407
+5 0 407
+3 0 407
+4 0 407 0 407
+4 0 407
+2 0 407
+5 0 407 407 0 0 5 0 0 5
+4 0 407
+3 0 407 0 0 0 0 0 0 0 0 407
jcnd=407/407 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 407 0 0 1 0 0 1
+3 0 407
+3 0 407
+3 0 407
+4 0 407
+3 0 407
+4 0 407 0 407
+5 0 407
+3 0 407 0 407
+4 0 407 0 407
+4 0 407 0 407
+5 0 407
+3 0 407
+3 0 407
+3 0 407
+3 0 407
+4 0 407
+4 0 407 0 0 1 0 0 1
+4 0 407 0 407
+4 0 407
+4 0 407 0 407
+5 0 407 0 407
+5 0 407
+3 0 407
+3 0 407 0 407
+5 0 407
+5 0 407
+3 0 407 0 407
+4 0 407 0 407
+4 0 407
+6 0 407 0 407
+4 0 407 0 407
+5 0 407 0 0 1 0 0 1
+3 0 407
+3 0 407
+3 0 407
jump=407 +87 0 
* 0 
+8 0 367
+3 0 367
+4 0 367
+2 0 367
+2 0 367
+3 0 367
+3 0 367
+3 0 367
+2 0 367
+2 0 367
+5 0 367
+2 0 367 367
+4 0 367
+3 0 367
+4 0 367 0 367
+4 0 367 0 367 0 0 1 0 0 1
+8 0 367
+7 0 367 0 367
+4 0 367 0 367 0 0 2 0 0 2
+4 0 367 0 367
+4 0 367 0 0 0 0 0 0 0 0 367
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 840 840 0 1 0 0 1
+4 0 840
+3 0 840 0 0 0 0 0 0 0 0 840 19
jcnd=376/840 0x3877c79ef0 0 
* 0 
+6 0 464 464
+4 0 464 464 0 0 1 0 0 1
+4 0 464
+4 0 464 0 0 0 0 0 0 0 0 464
+6 0 464 464 0 1 1 0 1 1
+7 0 464 0 0 0 0 0 0 0 0 464
+6 0 464
+4 0 464
+7 0 464 0 0 0 0 0 0 0 0 464
+2 0 464
+3 0 464 0 0 0 0 0 0 0 0 464 62
jcnd=388/464 0x3877c79e28 0 
* 0 
+6 0 446
+3 0 446 0 446
+4 0 446 0 446
+5 0 446 0 0 0 0 0 0 0 0 446 8
jcnd=13/446 0x3877c7a090 0 
* 0 
+6 0 433
+7 0 433 0 0 0 0 0 0 0 0 433 8
jcnd=367/433 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66 0 0 2 0 0 2
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 3
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 388 388 0 1 0 0 1
+4 0 388
+3 0 388 0 0 0 0 0 0 0 0 388 120
jcnd=195/388 0x3877c79ce1 0 
* 0 
+6 0 193 193
+5 0 193 0 0 0 0 0 0 0 0 193 6
jcnd=175/193 0x3877c79ce1 0 
* 0 
+6 0 18 0 0 1 0 0 1
+3 0 18
+3 0 18
+3 0 18
+7 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18 0 18
+4 0 18 0 18 0 0 14 0 0 14
+4 0 18 0 18
+4 0 18 0 0 0 0 0 0 0 0 18 4
jcnd=11/18 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7
+4 0 7
+3 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7 0 0 1 0 0 1
+4 0 7
+4 0 7
+3 0 7 0 7
cfn=(104)
calls=7 0x3877c77180 0 
* 0 28 14 0 0 0 0 0 0 0 7
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 1 0 0 1
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 18
+3 0 18
jump=18 0x3877c79ae3 0 
* 0 
+55 0 376 0 0 1 0 0 1
+7 0 376
+3 0 376 0 0 0 0 0 0 0 0 376
+6 0 376 376 0 1 0 0 1
+4 0 376
+3 0 376
+3 0 376
+2 0 376
+4 0 376
+3 0 376
+3 0 376
+2 0 376
+2 0 376
+2 0 376
+2 0 376 376
+8 0 376
+5 0 376
+5 0 376
+2 0 376 0 0 0 0 0 0 0 0 376
-2 0 194
+2 0 194 0 0 0 0 0 0 0 0 194
+2 0 570
+2 0 570 0 0 0 0 0 0 0 0 570 22
jcnd=184/570 +64 0 
* 0 
+2 0 386
+8 0 386
+3 0 386
+3 0 386 0 0 0 0 0 0 0 0 386 1
jcnd=1/386 0x3877c79fc0 0 
* 0 
-6 0 289
+3 0 289
+3 0 289 0 0 0 0 0 0 0 0 289 3
jcnd=111/289 0x3877c79fc0 0 
* 0 
+2 0 563
+2 0 563 563
+8 0 563
+2 0 563 0 0 0 0 0 0 0 0 563 16
jcnd=289/563 -20 0 
* 0 
+2 0 274
+2 0 274
+5 0 274
+3 0 274
+3 0 274
+2 0 274
+2 0 274
+5 0 274 0 0 0 0 0 0 0 0 274 3
jcnd=2/274 +14 0 
* 0 
+2 0 272
+2 0 272
+4 0 272
+2 0 272
+2 0 272 0 0 0 0 0 0 0 0 272 6
jcnd=210/272 -8 0 
* 0 
-8 0 813
+4 0 813
+2 0 813
+2 0 813 0 0 0 0 0 0 0 0 813 67
jcnd=446/813 -8 0 
* 0 
-2 0 184 0 0 1 0 0 1
+2 0 184 0 0 0 0 0 0 0 0 184 14
jcnd=157/184 -8 0 
* 0 
+2 0 458 458 0 0 6 0 0 6
+4 0 458 0 0 1 0 0 1
+3 0 458 0 0 0 0 0 0 0 0 458 197
jcnd=264/458 0x3877c7a1cf 0 
* 0 
+6 0 194
+2 0 194
+4 0 194
+2 0 194
+2 0 194
+2 0 194 0 194
+8 0 194
jump=194 0x3877c79f30 0 
* 0 
+37 0 112 112 0 1 0 0 1
+5 0 112 112
+4 0 112
+4 0 112 112
+5 0 112 0 0 0 0 0 0 0 0 112
jcnd=112/112 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 264 264 0 1 2 0 1 2
+4 0 264 264
+4 0 264
+3 0 264 264
+4 0 264
+4 0 264
+3 0 264
+3 0 264 264
+4 0 264 0 0 0 0 0 0 0 0 264
+6 0 264 264 0 0 1 0 0 1
+4 0 264 0 0 0 0 0 0 0 0 264
+6 0 264 264 0 1 0 0 1
+8 0 264 0 264
+4 0 264 0 264
+4 0 264 0 0 0 0 0 0 0 0 264 4
jcnd=196/264 +38 0 
* 0 
+2 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 196
+4 0 196 0 0 0 0 0 0 0 0 196 5
jcnd=10/196 0x3877c7a2e3 0 
* 0 
+6 0 254 254
+4 0 254 254 0 1 0 0 1
+4 0 254 0 0 0 0 0 0 0 0 254
+6 0 254
+4 0 254
+7 0 254 0 254 0 0 8 0 0 8
+4 0 254 0 254
+4 0 254 0 254
+4 0 254 0 254
+4 0 254 0 0 0 0 0 0 0 0 254
+2 0 254 0 254
+5 0 254
+7 0 254 0 0 0 0 0 0 0 0 254 4
jcnd=247/254 +18 0 
* 0 
+2 0 7 0 7
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7 0 0 1 0 0 1
+4 0 7
jump=7 +71 0 
* 0 
-46 0 247 0 0 1 0 0 1
+7 0 247 0 247 0 0 1 0 0 1
+4 0 247
+3 0 247
+3 0 247
+4 0 247
+3 0 247
+4 0 247
+3 0 247
+3 0 247
+4 0 247 0 247
+4 0 247 0 247
+4 0 247
jump=247 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 10
+7 0 10 0 10
+6 0 10
+3 0 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +7 0 
* 0 
+7 0 264
+4 0 264 0 0 1 0 0 1
+3 0 264
+3 0 264 0 264
cfn=(104)
calls=264 0x3877c77180 0 
* 0 1056 528 0 1 0 0 1 0 0 264 2
+5 0 264
+3 0 264
jump=264 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 112 0 0 1 0 0 1
+7 0 112
+2 0 112
+4 0 112
+3 0 112
+3 0 112 0 112
+5 0 112
+3 0 112
+4 0 112
+3 0 112 0 0 1 0 0 1
+4 0 112
+4 0 112
+3 0 112
+4 0 112 0 112
+4 0 112 0 112 0 0 5 0 0 5
+4 0 112
+3 0 112
+3 0 112 0 112
cfn=(104)
calls=112 0x3877c77180 0 
* 0 448 224 0 0 0 0 0 0 0 112 1
+5 0 112
+3 0 112
jump=112 0x3877c79ae3 0 
* 0 

totals: 1869191 723680 445575 226 63 74 226 63 74 67696 1542 3062 62
