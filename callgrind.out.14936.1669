version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1669


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2088261697 - 2089507344
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1392 0 0 1 0 0 1
+3 0 1392 0 0 0 0 0 0 0 0 1392
+2 0 1392
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1392 0x3877c7b8b0 0 
* 0 156199 39975 20445 21 5 0 21 5 0 38289 593
* 0 1392 1392 0 1 1 0 1 1 0 0 0 1392

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1392 0 1392 1 0 0 1
+1 0 1392
+5 0 1392
+3 0 1392 0 1392
+1 0 1392
+4 0 1392 0 0 1 0 0 1
+3 0 1392
+4 0 1392
+3 0 1392 0 1392 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1392 0x3877c7aa50 0 
* 0 378330 54629 54670 49 38 52 49 38 52 63387 2272
* 0 1392 1392 0 1 1 0 1 1 0 0 0 1392
+5 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392
jcnd=1392/1392 +96 0 
* 0 
+96 0 1392 0 0 1 0 0 1
+4 0 1392 1392
+1 0 1392 1392
+1 0 1392 1392

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 344 0 344 1 0 0 1
+1 * 344
+3 * 344
+4 * 344 0 344
+4 * 344 0 344
+4 +1 344 344
+4 * 344
+3 * 344 0 344
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=344 0x402d74 645 
* * 4472 2064 688
+5 * 344
+3 * 344 0 344
+3 +1 344 344
+6 * 344 0 344
+3 * 344 344
+6 * 344 0 344
+3 +1 344 344
+6 * 344 0 344 1 0 0 1
+3 * 344 344
+6 * 344 0 344
+3 +2 344 0 344
+7 * 344
jump=344 +86 * 
* * 
+2 +1 59684 59684
+3 * 59684
+3 * 59684 59684
+4 * 59684
+3 * 59684
+3 * 59684 0 59684
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=59684 0x402d9a 770 
* * 656524 298420 179052
+5 * 59684 59684
+4 * 59684 59684
+5 * 59684
+4 * 59684 0 59684
+5 +1 59684 59684
+3 * 59684
+3 * 59684 59684
+4 * 59684
+3 * 59684
+3 * 59684 0 59684
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=59684 0x402dba 770 
* * 656524 298420 179052 1 0 0 1
+5 * 59684 59684
+2 * 59684
+4 * 59684 59684
+5 * 59684
+4 * 59684 0 59684
+5 -2 59684 0 59684
+4 * 59684 59684
+3 * 59684
+3 * 59684 59684
+3 * 59684 0 0 0 0 0 0 0 0 59684 345
jcnd=59340/59684 -93 +1 
* * 
-9 * 344 344 0 1 0 0 1
+3 * 344
+3 * 344 344
+3 * 344 0 0 0 0 0 0 0 0 344
jcnd=344/344 -93 +1 
* * 
+2 +4 344 344
+3 * 344
+3 * 344
+4 * 344 344 0 1 0 0 1
+5 * 344
+4 * 344
+3 * 344 0 344
+5 +1 344 344
+3 * 344
+3 * 344
+4 * 344 344
+5 * 344
+4 * 344
+3 * 344 0 344
+5 +1 344 0 344
+7 * 344
jump=344 0x4016ee * 
* * 
+2 +1 59684 59684
+3 * 59684
+3 * 59684 59684
+4 * 59684
+3 * 59684 0 0 1 0 0 1
+3 * 59684 0 59684
cfi=(2)
cfn=(146)
calls=59684 0x402dba 770 
* * 656524 298420 179052
+5 * 59684 59684
+2 * 59684
+4 * 59684 59684
+5 * 59684 0 59684
+5 +1 59684 59684
+3 * 59684
+3 * 59684 59684
+4 * 59684
+3 * 59684
+3 * 59684 0 59684
cfi=(2)
cfn=(144)
calls=59684 0x402d9a 770 
* * 656524 298420 179052
+5 * 59684 59684
+4 * 59684 59684
+5 * 59684 0 59684
+5 +1 59684 59684
+5 * 59684 59684
+5 * 59684 59684
+5 * 59684
+4 * 59684 0 59684
+5 +1 59684 59684
+5 * 59684 59684
+5 * 59684 59684
+5 * 59684
+4 * 59684 0 59684
+5 -4 59684 0 59684
+4 * 59684 59684
+3 * 59684
+3 * 59684 59684
+3 * 59684 0 0 0 0 0 0 0 0 59684 345
jcnd=59340/59684 0x401672 +1 
* * 
-9 * 344 344 0 1 0 0 1
+3 * 344
+3 * 344 344
+3 * 344 0 0 0 0 0 0 0 0 344
jcnd=344/344 0x401672 +1 
* * 
+6 +6 344 344 0 1 0 0 1
+5 * 344 344
+5 * 344 0 344
+5 +2 344 344
+3 +1 344 0 344
+3 * 344 344
+5 * 344 344
+1 * 344 344

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 344
+7 * 344
+7 * 344
+3 * 344
+3 * 344 0 344
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=344 0x4030b2 310 
* * 367558 107957 101392 68 15 16 68 15 16 23213 1059 1374 171
+5 * 344
+7 * 344
+7 * 344
+3 * 344
+3 * 344 0 344
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=344 0x402ff4 310 
* * 368323 107148 99383 45 9 71 45 9 71 23508 1242 1374
+5 * 344 0 0 1 0 0 1
+7 * 344
+7 * 344
+3 * 344
+3 * 344 0 344
cfn=(142)
calls=344 0x401585 -52 
* * 6229496 2754064 1438264 8 0 0 8 0 0 120056 690
+5 * 344 0 344
+8 * 344 344
+6 * 344 0 344
+6 * 344
+7 * 344
+3 * 344 0 344
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=344 0x402df4 414 
* * 85960 26962 19185 33 6 0 33 6 0 9544 263 688
+5 * 344
+7 * 344
+3 * 344 0 344 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=344 0x402e74 414 
* * 90377 28594 20509 7 1 0 7 1 0 10786 32 688
+5 +2 344
+7 * 344
+7 * 344
+3 * 344
+3 * 344 0 344
cfi=(2)
cfn=(4)
calls=344 0x4030b2 310 
* * 367175 107927 101281 2 1 1 2 1 1 23177 658 1374
+5 * 344
+7 * 344
+7 * 344
+3 * 344
+3 * 344 0 344
cfi=(2)
cfn=(80)
calls=344 0x402ff4 310 
* * 367410 107090 99237 0 0 2 0 0 2 23367 810 1374
+5 * 344 344
+6 * 344 0 0 1 0 0 1
+7 * 344
+7 * 344 0 344
+6 * 344 344
+8 * 344
+3 * 344
+3 * 344 0 344
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=344 0x401719 -33 
* * 2885128 1201248 661684 4 0 0 4 0 0 60028 345
+5 * 344 0 344
+8 * 344 344
+6 * 344 0 344
+6 * 344
+7 * 344 0 0 1 0 0 1
+3 * 344 0 344
cfi=(2)
cfn=(148)
calls=344 0x402df4 414 
* * 85960 26962 19185 0 0 0 0 0 0 9544 257 688
+5 * 344
+7 * 344
+3 * 344 0 344
cfi=(2)
cfn=(178)
calls=344 0x402e74 414 
* * 90377 28594 20509 0 0 0 0 0 0 10786 26 688
+5 +2 344 344
+7 * 344
+3 * 344 0 344
cfi=(2)
cfn=(2)
calls=344 0x402d74 645 
* * 4472 2064 688
+5 * 344 344
+6 * 344
+3 * 344
+3 * 344
+3 * 344 344
+7 * 344
+3 * 344 0 0 1 0 0 1
+3 * 344 0 344
cfi=(2)
cfn=(144)
calls=344 0x402d9a 770 
* * 3784 1720 1032
+5 * 344
+3 * 344
+7 * 344
+3 * 344
+3 * 344 0 344
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=344 0x402eda 901 
* * 34535 12792 9881 41 28 11 41 28 11 1537 75 47
+5 +1 344 344
+7 * 344
+3 * 344 0 344
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=344 0x402f54 645 
* * 4472 2064 688 0 1 0 0 1
+5 * 344 344
+6 * 344
+3 * 344
+3 * 344
+3 * 344 344
+7 * 344 0 0 1 0 0 1
+3 * 344
+3 * 344 0 344
cfi=(2)
cfn=(146)
calls=344 0x402dba 770 
* * 3784 1720 1032
+5 * 344
+3 * 344
+7 * 344
+3 * 344
+3 * 344 0 344
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=344 0x402f7a 901 
* * 34382 12610 9731 19 36 39 19 36 39 1534 79 47
+5 +1 344 344
+7 * 344
+3 * 344 0 344
cfi=(2)
cfn=(10)
calls=344 0x402f54 645 
* * 4472 2064 688
+5 * 344 344
+6 * 344
+3 * 344
+3 * 344
+3 * 344 344 0 1 0 0 1
+7 * 344
+3 * 344
+3 * 344 0 344
cfi=(2)
cfn=(146)
calls=344 0x402dba 770 
* * 3784 1720 1032
+5 * 344 344
+2 * 344
+4 * 344 344
+8 * 344 344
+8 * 344 0 344
+8 +1 344 344
+7 * 344
+3 * 344 0 344
cfi=(2)
cfn=(2)
calls=344 0x402d74 645 
* * 4472 2064 688
+5 * 344 344 0 1 0 0 1
+6 * 344
+3 * 344
+3 * 344
+3 * 344 344
+7 * 344
+3 * 344
+3 * 344 0 344
cfi=(2)
cfn=(144)
calls=344 0x402d9a 770 
* * 3784 1720 1032
+5 * 344 344
+4 * 344 344
+8 * 344
+4 * 344 344
+8 * 344
+3 * 344 0 344
+8 +2 344 0 344
+7 -12 344 344
+8 * 344 344
+7 * 344 0 0 0 0 0 0 0 0 344 1
jcnd=1/344 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 344
+7 * 344
+3 * 344 0 344
cfi=(2)
cfn=(2)
calls=344 0x402d74 645 
* * 4472 2064 688 2 0 1 2 0 1
+5 * 344
+3 * 344 344
+7 * 344
+3 * 344 0 344
cfi=(2)
cfn=(2)
calls=344 0x402d74 645 
* * 4472 2064 688 0 1 0 0 1
+5 * 344
+3 * 344 0 0 0 0 0 0 0 0 344 2
+2 * 344 0 0 1 0 0 1
+5 * 344
jump=344 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 344
+2 * 344 0 0 0 0 0 0 0 0 344
jcnd=344/344 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 344 0 344
+1 * 344
+3 * 344
+4 * 344 0 344
+4 * 344 0 344
+4 * 344 0 344
+5 +1 344 344
+4 * 344
+3 * 344 0 344
cfi=(2)
cfn=(2)
calls=344 0x402d74 645 
* * 4472 2064 688
+5 * 344
+3 * 344 0 344
+3 +1 344 344 0 1 0 0 1
+6 * 344 0 344
+3 * 344 344
+6 * 344 0 344
+3 +2 344 0 344
+7 * 344
jump=344 +86 * 
* * 
+2 +1 59684 59684
+3 * 59684
+3 * 59684 59684
+4 * 59684
+3 * 59684
+3 * 59684 0 59684
cfi=(2)
cfn=(144)
calls=59684 0x402d9a 770 
* * 656524 298420 179052
+5 * 59684 59684
+4 * 59684 59684
+5 * 59684
+4 * 59684 0 59684
+5 +1 59684 59684
+3 * 59684
+3 * 59684 59684
+4 * 59684
+3 * 59684
+3 * 59684 0 59684
cfi=(2)
cfn=(146)
calls=59684 0x402dba 770 
* * 656524 298420 179052
+5 * 59684 59684
+2 * 59684
+4 * 59684 59684
+5 * 59684
+4 * 59684 0 59684
+5 -2 59684 0 59684
+4 * 59684 59684
+3 * 59684
+3 * 59684 59684
+3 * 59684 0 0 0 0 0 0 0 0 59684 345
jcnd=59340/59684 -93 +1 
* * 
-9 * 344 344 0 1 0 0 1
+3 * 344
+3 * 344 344
+3 * 344 0 0 0 0 0 0 0 0 344
jcnd=344/344 -93 +1 
* * 
+2 +4 344 344
+3 * 344
+3 * 344 0 0 1 0 0 1
+4 * 344 344
+5 * 344
+4 * 344
+3 * 344 0 344
+5 +1 344 344
+3 * 344
+3 * 344
+4 * 344 344
+5 * 344
+4 * 344
+3 * 344 0 344
+5 +1 344 344
+5 * 344 344
+5 * 344 344
+5 * 344 0 0 1 0 0 1
+4 * 344
+3 * 344 0 344
+5 +2 344 344
+3 +1 344 0 344
+3 * 344 344
+5 * 344 344
+1 * 344 344

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688 1 0 0 1
+4 +1 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=688 0x4049d4 -35 
* * 4128 1376 2064 1 0 0 1
+5 * 688 688
+1 * 688 688

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 688
+4 * 688
+3 * 688 0 688
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=688 0x404520 -35 
* * 3440 1376 1376
+5 * 688 688
+1 * 688 688

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=688 0x404a28 -35 
* * 4128 1376 2064 1 0 1 1 0 1
+5 * 688 688
+1 * 688 688

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 688
+4 * 688
+3 * 688 0 688
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=688 0x4044cc -35 
* * 3440 1376 1376
+5 * 688 688
+1 * 688 688

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+4 * 688 688
+4 * 688 688
+1 * 688 688

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 344 0 344
+1 * 344
+3 * 344
+4 * 344 0 344
+4 * 344 0 344
+4 * 344 0 344
+4 +1 344 344
+4 * 344 344
+4 * 344 344
+4 * 344
+3 * 344
+3 * 344 0 344
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=344 0x40406a -87 
* * 8256 2752 3096 0 21 14 0 21 14 344
+5 * 344 344
+1 * 344 344

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 688 0 688
+1 * 688
+3 * 688 0 688
+4 * 688 688
+4 * 688 688
+1 * 688 688

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 344 0 344
+1 * 344
+3 * 344
+4 * 344 0 344
+4 * 344 0 344
+4 * 344 0 344
+4 +1 344 344
+4 * 344 344
+4 * 344 344
+4 * 344
+3 * 344
+3 * 344 0 344
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=344 0x403df2 -87 
* * 8256 2752 3096 0 23 3 0 23 3 344 2
+5 * 344 344
+1 * 344 344

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 768 0 768
+1 * 768
+3 * 768 0 768 0 0 1 0 0 1
+4 +1 768 768
+4 * 768 768
+1 * 768 768

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376
+4 * 1376 0 1376
+4 +1 1376
+4 * 1376
+3 * 1376 0 1376
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1376 0x404ffe 790 
* * 8256 4128 2752 1 0 0 1
+5 * 1376 1376
+3 * 1376 1376
+1 * 1376 1376

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376 0 1376
+4 +1 1376 1376
+4 * 1376 1376
+1 * 1376 1376

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376
+4 * 1376 0 1376
+4 +1 1376
+4 * 1376
+3 * 1376 0 1376 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1376 0x40500c 790 
* * 8256 4128 2752 1 0 0 1
+5 * 1376 1376
+3 * 1376 1376
+1 * 1376 1376

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 768 0 768
+1 * 768
+3 * 768 0 768
+4 +1 768 768
+4 * 768 768
+1 * 768 768

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376 0 1376
+4 +1 1376 1376 0 1 0 0 1
+4 * 1376 1376
+1 * 1376 1376

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 688 0 688
+1 * 688
+3 * 688 0 688
+4 * 688 0 688
+4 * 688 688
+4 * 688 688
+1 * 688 688

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 696 0 696 1 0 0 1
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 * 696 0 696
+4 +2 696 696
+4 * 696
+3 * 696 0 696
cfn=(102)
calls=696 0x4048de +12 
* * 4176 1392 1392 1 0 0 1
+5 * 696 696
+4 * 696 0 0 1 0 0 1
+3 * 696
+2 * 696 0 0 0 0 0 0 0 0 696
jcnd=696/696 +7 +3 
* * 
+7 +3 696 696
+4 * 696
+4 * 696
+3 * 696 0 696
cob=(5)
cfi=(8)
cfn=(32)
calls=696 0x387e4bd0b0 0 
* * 200894 29375 27473 33 13 38 33 13 38 32638 1309 696
* * 696 696 0 0 0 0 0 0 0 0 0 696
+5 +1 696 696
+1 * 696 696

fn=(18)
0x404a28 81 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688 0 0 1 0 0 1
+4 * 688 0 688
+4 * 688 688
+1 * 688 688

fn=(92)
0x4049d4 81 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+4 * 688 0 688
+4 * 688 688
+1 * 688 688

fn=(196)
0x404520 86 688 0 688
+1 * 688
+3 * 688 0 688
+4 * 688 688
+1 * 688 688

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 696 0 696 1 0 0 1
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 * 696 0 696 1 0 0 1
+4 +2 696 696
+4 * 696
+3 * 696 0 696
cfn=(28)
calls=696 0x404992 +12 
* * 4176 1392 1392 1 0 0 1
+5 * 696 696
+4 * 696
+3 * 696
+2 * 696 0 0 0 0 0 0 0 0 696
jcnd=696/696 +7 +3 
* * 
+7 +3 696 696
+4 * 696
+4 * 696
+3 * 696 0 696
cob=(5)
cfi=(8)
cfn=(32)
calls=696 0x387e4bd0b0 0 
* * 199708 30822 31373 20 26 15 20 26 15 32141 963 696
* * 696 696 0 1 1 0 1 1 0 0 0 696
+5 +1 696 696
+1 * 696 696

fn=(102)
0x4048de 113 712 0 712 1 0 0 1
+1 * 712
+3 * 712 0 712
+4 +1 712
+10 * 712 712
+1 * 712 712

fn=(266)
0x40406a 129 344 0 344
+1 * 344
+3 * 344
+4 * 344 0 344
+4 * 344 0 344
+4 * 344 0 344
+4 +1 344 344
+4 * 344
+3 * 344
+5 * 344 0 344
cfi=(16)
cfn=(226)
calls=344 0x402d61 -20 
* * 2408 1032 1032
+5 * 344
+3 * 344 0 0 0 0 0 0 0 0 344
+2 * 344 344
+4 * 344 344 0 0 21 0 0 21
+2 * 344 0 344 0 0 14 0 0 14
+2 * 344 344
+1 * 344 344

fn=(28)
0x404992 113 712 0 712 1 0 0 1
+1 * 712
+3 * 712 0 712
+4 +1 712
+10 * 712 712
+1 * 712 712

fn=(176)
0x4044cc 86 688 0 688
+1 * 688
+3 * 688 0 688
+4 * 688 688
+1 * 688 688

fn=(224)
0x403df2 129 344 0 344
+1 * 344
+3 * 344
+4 * 344 0 344
+4 * 344 0 344
+4 * 344 0 344
+4 +1 344 344
+4 * 344
+3 * 344
+5 * 344 0 344
cfi=(16)
cfn=(226)
calls=344 0x402d61 -20 
* * 2408 1032 1032
+5 * 344
+3 * 344 0 0 0 0 0 0 0 0 344 2
+2 * 344 344
+4 * 344 344 0 0 23 0 0 23
+2 * 344 0 344 0 0 3 0 0 3
+2 * 344 344
+1 * 344 344

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 696 0 696
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 * 696 0 696
+4 +1 696 696
+4 * 696
+3 * 696 0 696
cob=(5)
cfi=(8)
cfn=(164)
calls=696 0x387e4bb2f0 0 
* * 76450 19043 8897 23 5 0 23 5 0 18594 526 696
* * 696 696 0 1 1 0 1 1 0 0 0 696
+5 * 696 696
+1 * 696 696

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 696 0 696
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 * 696 0 696
+4 +1 696 696
+4 * 696
+3 * 696 0 696
cob=(5)
cfi=(8)
cfn=(164)
calls=696 0x387e4bb2f0 0 
* * 85317 22324 11548 0 1 0 0 1 0 21087 67 696
* * 696 696 0 0 0 0 0 0 0 0 0 696
+5 * 696 696
+1 * 696 696

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +10 688 688
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=688 0x404829 -26 
* * 341666 113884 109760 25 3 4 25 3 4 13352 812 1372 171
+5 +1 688 688
+1 * 688 688

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688 1 0 0 1
cfn=(50)
calls=688 0x404484 107 
* * 351298 117324 113200 25 3 4 25 3 4 13352 812 1372 171
+5 * 688 688
+1 * 688 688

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52)
0x404829 91 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688 0 1 0 0 1
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=688 0x404a36 450 
* * 332034 110444 106320 24 3 4 24 3 4 13352 812 1372 171
+5 * 688 688
+1 * 688 688

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=688 0x40439c 107 
* * 351298 117324 113200 7 1 40 7 1 40 13352 796 1372
+5 * 688 688
+1 * 688 688

fn=(116)
0x40439c 107 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +10 688 688
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=688 0x4047d7 -26 
* * 341666 113884 109760 7 1 40 7 1 40 13352 796 1372
+5 +1 688 688
+1 * 688 688

fn=(118)
0x4047d7 91 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=688 0x4049e2 450 
* * 332034 110444 106320 7 1 40 7 1 40 13352 796 1372
+5 * 688 688
+1 * 688 688

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+1 * 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688 688
+4 * 688
+3 * 688 688
+4 * 688 688
+3 * 688
+3 * 688
+3 * 688
+4 * 688
+3 * 688 688
+4 * 688 688
+3 -1 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=688 0x403d98 +11 
* * 103698 28980 18314 1 1 0 1 1 0 21572 58 1376
+5 +1 688 688
+4 * 688
+3 * 688 0 688
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=688 0x403296 -82 
* * 15824 5504 5504 1 0 0 1
+5 * 688
jump=688 +28 * 
* * 
+28 * 688
+4 * 688 688
+1 * 688 688
+1 * 688 688

fn=(2)
0x402d74 645 2784 0 2784 1 0 0 1
+1 * 2784
+3 * 2784 0 2784 0 0 1 0 0 1
+4 +1 2784 2784
+4 * 2784 2784 0 1 1 0 1 1
+4 * 2784
+3 * 2784 2784
+4 * 2784 2784
+3 * 2784
+3 * 2784
+3 * 2784
+4 * 2784 2784
+1 * 2784 2784

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=688 0x404236 -14 
* * 225883 39392 39249 26 12 8 26 12 8 33038 905 1376
+5 * 688 688
+4 * 688 0 688
+3 +1 688 688
+4 * 688 688 0 1 0 0 1
+3 * 688 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+3 * 688 688
+4 * 688
+4 * 688
+3 * 688 688
+4 * 688 0 688
+4 +1 688 688
+1 * 688 688

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688 688 0 1 0 0 1
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=688 0x403fbe -14 
* * 226883 37746 35196 23 8 33 23 8 33 33523 1256 1376
+5 * 688 688
+4 * 688 0 688
+3 +1 688 688
+4 * 688 688
+3 * 688 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+3 * 688 688
+4 * 688
+4 * 688
+3 * 688 688
+4 * 688 0 688
+4 +1 688 688
+1 * 688 688

fn=(244)
0x402f7a 901 344 0 344
+1 * 344
+3 * 344 0 0 1 0 0 1
+4 * 344 0 344
+4 * 344 0 344
+4 +2 344 344
+4 * 344 344
+4 * 344 344
+4 * 344 344
+4 * 344
+3 * 344 0 0 0 0 0 0 0 0 344
jcnd=8/344 +51 +10 
* * 
+2 +3 336 336
+4 * 336 336
+4 * 336 336
+4 -1 336 336
+4 * 336
+3 * 336
+3 * 336 0 336
cfi=(3)
cfn=(264)
calls=336 0x4036b1 215 
* * 12768 4368 4704 0 21 10 0 21 10 336
+5 +2 336 336
+4 * 336 336
+4 * 336
+4 * 336 336
+4 * 336 0 336
+4 * 336
jump=336 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12518 3730 3251 18 15 29 18 15 29 854 79 47
+5 +2 344 344
+1 * 344 344

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1400 0 1400 1 0 0 1
+1 * 1400
+3 * 1400 0 1400 1 0 0 1
+4 +1 1400 1400
+4 * 1400 1400
+1 * 1400 1400

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+3 * 688 0 688
+4 * 688
+4 * 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=688 0x404380 726 
* * 6880 3440 2752
+5 * 688 688
+4 * 688 688
+1 * 688 688

fn=(148)
0x402df4 414 688 0 688
+1 * 688
+3 * 688 0 688
+1 * 688
+4 * 688 0 688 1 0 0 1
+4 +2 688 688
+4 * 688
+3 * 688 0 688
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=688 0x40325e 113 
* * 4128 2064 1376
+5 * 688
+3 * 688 688
+4 * 688 688
+4 * 688 688
+4 * 688 688
+3 -1 688
+3 * 688
+3 * 688 0 688
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=688 0x40326c 148 
* * 21328 6880 8256 4 0 0 4
+5 +1 688 688
+4 * 688
+3 * 688 0 688
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=688 0x4031ec 159 
* * 129952 38788 24610 27 6 0 27 6 0 19088 520 1376
+5 * 688
jump=688 +28 * 
* * 
+28 * 688 0 0 1 0 0 1
+4 * 688 688
+1 * 688 688
+1 * 688 688

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 696 0 696 1 0 0 1
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 * 696 0 696
+4 +2 696 696
+5 * 696 0 0 0 0 0 0 0 0 696
+2 +1 696 696
+4 * 696 696
+4 * 696 696
+4 * 696
+3 * 696
+3 * 696 0 696
cfi=(5)
cfn=(160)
calls=696 0x4044d6 -65 
* * 84802 21827 12377 24 6 0 24 6 0 18594 526 1392
+5 +1 696 696
+1 * 696 696

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 688 0 688
+1 * 688
+3 * 688 0 688
+1 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=688 0x4043ca -45 
* * 24768 8944 9632 4 0 4 4 0 4
+5 +1 688 688 0 1 0 0 1
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(20)
calls=688 0x404412 +43 
* * 243083 47648 44065 27 12 8 27 12 8 33038 905 1376
+5 * 688
jump=688 +28 * 
* * 
+28 * 688
+4 * 688 688
+1 * 688 688
+1 * 688 688

fn=(14)
0x4043ca 90 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688 0 0 1 0 0 1
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(4)
cfn=(16)
calls=688 0x404804 +24 
* * 12384 4128 4816 2 0 1 2 0 1
+5 * 688 688
+4 * 688 0 688 0 0 2 0 0 2
+7 * 688 688
+4 * 688 0 688 1 0 0 1
+8 * 688 688
+4 * 688 0 688
+8 +1 688 688
+1 * 688 688

fn=(80)
0x402ff4 310 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+2 * 688 0 688
+2 * 688 0 688
+1 * 688 0 0 1 0 0 1
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688
+3 * 688 0 688
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=688 0x4039fc 117 
* * 4128 2064 1376 2 0 0 2
+5 * 688
+3 * 688 0 688
cfi=(3)
cfn=(84)
calls=688 0x4039ed -88 
* * 4128 2064 1376
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(2)
calls=688 0x402d74 645 
* * 8944 4128 1376
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688
+3 * 688
+3 * 688 0 688 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=688 0x403a0a 134 
* * 283987 59762 54460 30 8 33 30 8 33 33523 1256 1376
+5 +4 688 688
+4 * 688
+3 * 688 0 688
cfn=(106)
calls=688 0x40325e 113 
* * 4128 2064 1376 1 0 0 1
+5 * 688
+3 * 688 688
+4 * 688 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=688 0x403a98 565 
* * 17200 6880 5504 2 0 0 2
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(112)
calls=688 0x403a68 547 
* * 17200 6880 5504
+5 * 688
+3 * 688
+3 * 688
+3 * 688
+3 * 688 0 688
cfi=(11)
cfn=(114)
calls=688 0x403ac9 -60 
* * 361618 120764 117328 7 1 40 7 1 40 13352 796 1372
+5 -3 688 688
+4 * 688 0 688
+4 * 688
jump=688 +28 +4 
* * 
+28 +4 688
+4 * 688 688
+1 * 688 688
+2 * 688 688
+2 * 688 688
+1 * 688 688

fn=(188)
0x403d98 171 696 0 696 1 0 0 1
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 * 696 0 696
+4 +2 696 696
+5 * 696 0 0 0 0 0 0 0 0 696 8
+2 +1 696 696
+4 * 696 696
+4 * 696 696
+4 * 696
+3 * 696
+3 * 696 0 696
cfi=(5)
cfn=(190)
calls=696 0x40452a -65 
* * 93669 25108 15028 0 1 0 0 1 0 21087 67 1392
+5 +1 696 696
+1 * 696 696

fn=(22)
0x404236 167 696 0 696 1 0 0 1
+1 * 696
+3 * 696
+4 * 696 0 696 1 0 0 1
+4 * 696 0 696
+4 0 696 696
+5 0 696 0 0 0 0 0 0 0 0 696
+2 0 696 696
+4 0 696 696
+4 0 696
+5 0 696
+3 0 696
+3 0 696 0 696
fi=(6) ???
cfi=(5)
cfn=(26)
calls=696 0x404730 99 
* 0 217804 36390 36941 24 27 15 24 27 15 32837 963 1392
+5 0 696
fi=(6)
jump=696 +7 0 
* 0 
+7 0 696 696
+1 0 696 696

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+4 * 688 0 688
+4 * 688
+4 * 688 0 0 1 0 0 1
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=688 0x404468 726 
* * 6880 3440 2752 1 0 0 1
+5 * 688 688
+4 * 688 688
+1 * 688 688

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+3 * 688 0 688
+4 * 688
+4 * 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(10)
cfn=(44)
calls=688 0x404468 726 
* * 6880 3440 2752
+5 * 688 688
+4 * 688 688
+1 * 688 688

fn=(86)
0x403a0a 134 688 0 688
+1 * 688
+3 * 688 0 688
+1 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=688 0x4042e2 -45 
* * 24768 8944 9632 5 0 0 5
+5 +1 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688 1 0 0 1
cfn=(94)
calls=688 0x40432a +43 
* * 244083 46002 40012 24 8 33 24 8 33 33523 1256 1376
+5 * 688
jump=688 +28 * 
* * 
+28 * 688
+4 * 688 688
+1 * 688 688
+1 * 688 688

fn=(88)
0x4042e2 90 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688 1 0 0 1
cfi=(4)
cfn=(90)
calls=688 0x4047b2 +24 
* * 12384 4128 4816 3 0 0 3
+5 * 688 688
+4 * 688 0 688
+7 * 688 688
+4 * 688 0 688
+8 * 688 688
+4 * 688 0 688
+8 +1 688 688
+1 * 688 688

fn=(156)
0x4031ec 159 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+1 * 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688 688 0 1 0 0 1
+4 * 688
+3 * 688 688
+4 * 688 688
+3 * 688
+3 * 688
+3 * 688
+4 * 688
+3 * 688 688
+4 * 688 688
+3 -1 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(158)
calls=688 0x403ce6 +11 
* * 94864 25716 15666 24 6 0 24 6 0 19088 520 1376
+5 +1 688 688
+4 * 688
+3 * 688 0 688
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=688 0x4031b8 -82 
* * 15824 5504 5504 1 0 0 1
+5 * 688
jump=688 +28 * 
* * 
+28 * 688
+4 * 688 688
+1 * 688 688
+1 * 688 688

fn=(172)
0x4031b8 79 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 688
+4 * 688
+3 * 688 0 688
cfi=(4)
cfn=(174)
calls=688 0x403ccc +42 
* * 9632 3440 3440
+5 * 688 688
+1 * 688 688

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1408 0 1408 1 0 0 1
+1 * 1408
+3 * 1408 0 1408
+4 +1 1408 1408
+4 * 1408 1408 0 0 2 0 0 2
+4 * 1408
+3 * 1408 1408
+4 * 1408 1408
+3 * 1408
+3 * 1408
+3 * 1408
+4 * 1408 1408
+1 * 1408 1408

fn=(106)
0x40325e 113 1400 0 1400 1 0 0 1
+1 * 1400
+3 * 1400 0 1400
+4 +1 1400 1400
+4 * 1400 1400
+1 * 1400 1400

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 704 0 704 1 0 0 1
+1 * 704
+3 * 704 0 704 0 0 1 0 0 1
+4 +1 704 704
+4 * 704 704
+1 * 704 704

fn=(82)
0x4039fc 117 704 0 704 1 0 0 1
+1 * 704
+3 * 704 0 704 1 0 0 1
+4 +1 704 704
+4 * 704 704
+1 * 704 704

fn=(200)
0x402eda 901 344 0 344
+1 * 344
+3 * 344
+4 * 344 0 344
+4 * 344 0 344
+4 +2 344 344
+4 * 344 344
+4 * 344 344
+4 * 344 344
+4 * 344
+3 * 344 0 0 0 0 0 0 0 0 344 8
jcnd=8/344 +51 +10 
* * 
+2 +3 336 336
+4 * 336 336
+4 * 336 336
+4 -1 336 336
+4 * 336
+3 * 336
+3 * 336 0 336
cfi=(3)
cfn=(222)
calls=336 0x403373 215 
* * 12768 4368 4704 0 22 2 0 22 2 336 2
+5 +2 336 336
+4 * 336 336
+4 * 336
+4 * 336 336
+4 * 336 0 336
+4 * 336
jump=336 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12671 3912 3401 38 6 9 38 6 9 857 65 47
+5 +2 344 344
+1 * 344 344

fn=(4)
0x4030b2 310 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+2 * 688 0 688
+2 * 688 0 688
+1 * 688
+4 * 688 0 688 1 0 0 1
+4 * 688 0 688
+4 +2 688 688
+4 * 688
+3 * 688 0 688
cfn=(6)
calls=688 0x403b08 117 
* * 4128 2064 1376 1 0 1 1 0 1
+5 * 688
+3 * 688 0 688
cfi=(3)
cfn=(8)
calls=688 0x403afa -88 
* * 4128 2064 1376 1 0 0 1
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(10)
calls=688 0x402f54 645 
* * 8944 4128 1376 1 1 0 1 1
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688
+3 * 688
+3 * 688 0 688
cfn=(12)
calls=688 0x403b16 134 
* * 282987 61408 58513 32 12 12 32 12 12 33038 905 1376
+5 +4 688 688 0 1 0 0 1
+4 * 688
+3 * 688 0 688
cfn=(40)
calls=688 0x40333c 113 
* * 4128 2064 1376 2 0 0 2
+5 * 688
+3 * 688 688
+4 * 688 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(42)
calls=688 0x403ba4 565 
* * 17200 6880 5504 3 0 0 3
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(46)
calls=688 0x403b74 547 
* * 17200 6880 5504
+5 * 688
+3 * 688
+3 * 688
+3 * 688
+3 * 688 0 688 1 0 0 1
cfi=(11)
cfn=(48)
calls=688 0x403bd5 -60 
* * 361618 120764 117328 26 3 4 26 3 4 13352 812 1372 171
+5 -3 688 688
+4 * 688 0 688
+4 * 688
jump=688 +28 +4 
* * 
+28 +4 688
+4 * 688 688
+1 * 688 688
+2 * 688 688
+2 * 688 688
+1 * 688 688

fn=(108)
0x403a98 565 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688 688
+4 * 688 0 688
+4 * 688
+4 * 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(10)
cfn=(110)
calls=688 0x404380 726 
* * 6880 3440 2752 1 0 0 1
+5 * 688 688
+4 * 688 688
+1 * 688 688

fn=(178)
0x402e74 414 688 0 688
+1 * 688
+3 * 688 0 688
+1 * 688
+4 * 688 0 688 1 0 0 1
+4 +2 688 688
+4 * 688
+3 * 688 0 688
cfn=(40)
calls=688 0x40333c 113 
* * 4128 2064 1376
+5 * 688
+3 * 688 688
+4 * 688 688
+4 * 688 688
+4 * 688 688
+3 -1 688
+3 * 688
+3 * 688 0 688
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=688 0x40334a 148 
* * 21328 6880 8256 2 0 0 2
+5 +1 688 688
+4 * 688
+3 * 688 0 688
cfn=(186)
calls=688 0x4032ca 159 
* * 138786 42052 27258 3 1 0 3 1 0 21572 58 1376
+5 * 688
jump=688 +28 * 
* * 
+28 * 688 0 0 1 0 0 1
+4 * 688 688
+1 * 688 688
+1 * 688 688

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 696 0 696 1 0 0 1
+1 * 696 0 0 1 0 0 1
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 0 696 696
+5 0 696 0 0 0 0 0 0 0 0 696
+2 0 696 696
+4 0 696 696
+4 0 696
+5 0 696
+3 0 696
+3 0 696 0 696
fi=(6)
cfi=(5)
cfn=(100)
calls=696 0x40461a 99 
* 0 218990 34943 33041 36 13 38 36 13 38 33334 1309 1392
+5 0 696
fi=(6)
jump=696 +7 0 
* 0 
+7 0 696 696
+1 0 696 696

fn=(144)
0x402d9a 770 179740 0 179740
+1 * 179740
+3 * 179740 0 179740
+4 * 179740 0 179740
+4 +1 179740 179740
+4 * 179740 179740
+3 * 179740 179740
+4 * 179740
+4 * 179740
+3 * 179740 179740
+1 * 179740 179740

fn=(146)
0x402dba 770 179740 0 179740
+1 * 179740
+3 * 179740 0 179740 1 0 0 1
+4 * 179740 0 179740
+4 +1 179740 179740
+4 * 179740 179740
+3 * 179740 179740
+4 * 179740
+4 * 179740
+3 * 179740 179740
+1 * 179740 179740

fn=(192)
0x403296 79 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 688
+4 * 688
+3 * 688 0 688
cfi=(4)
cfn=(194)
calls=688 0x403d7e +42 
* * 9632 3440 3440 1 0 0 1
+5 * 688 688
+1 * 688 688

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 736 0 736 1 0 0 1
+1 * 736
+3 * 736
+4 * 736 0 736
+4 +1 736 736
+4 * 736
+3 * 736 0 736 1 0 0 1
cfi=(13)
cfn=(64)
calls=736 -33 -66 
* * 4416 2208 1472
+5 * 736 736
+1 * 736 736

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 1376 0 1376
+1 * 1376
+3 * 1376
+4 * 1376 0 1376
+4 +1 1376 1376
+4 * 1376
+3 * 1376 0 1376
cfi=(13)
cfn=(68)
calls=1376 0x404f1a -58 
* * 22016 8256 6880 2 0 1 2 0 1
+5 * 1376 1376
+1 * 1376 1376

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 688 0 688
+1 * 688
+3 * 688 0 688
+1 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +10 688 688
+4 * 688
+3 * 688 0 688
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=688 0x404bc6 288 
* * 10320 4128 3440 3 0 0 3
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(122)
calls=688 0x404bc6 288 
* * 10320 4128 3440
+5 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=688 0x404be0 -36 
* * 296258 98060 93936 4 1 40 4 1 40 13352 796 1372
+5 +1 688
+4 * 688 688
+1 * 688 688
+1 * 688 688

fn=(128)
0x404878 277 736 0 736
+1 * 736
+3 * 736
+4 * 736 0 736 1 0 0 1
+4 +1 736 736
+4 * 736
+3 * 736 0 736
cfi=(13)
cfn=(130)
calls=736 -33 -66 
* * 4416 2208 1472 0 0 1 0 0 1
+5 * 736 736
+1 * 736 736

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1376 0 1376
+1 * 1376
+3 * 1376
+4 * 1376 0 1376
+4 +1 1376 1376
+4 * 1376
+3 * 1376 0 1376
cfi=(13)
cfn=(134)
calls=1376 0x404e98 -58 
* * 22016 8256 6880 2 0 0 2
+5 * 1376 1376
+1 * 1376 1376

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +8 688 0 688
+4 +3 688 688
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=688 0x404eb5 -22 
* * 221954 73292 68480 1 1 40 1 1 40 13352 796 1372
+5 +1 688 688
+1 * 688 688

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376
+4 * 1376 0 1376
+4 +1 1376 1376
+4 * 1376
+3 * 1376 0 1376
cfi=(13)
cfn=(124)
calls=1376 0x404d36 -77 
* * 8256 4128 2752 2 0 0 2
+5 * 1376 1376
+1 * 1376 1376

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376
+4 * 1376 0 1376 1 0 0 1
+4 +1 1376 1376
+4 * 1376
+3 * 1376 0 1376
cfi=(13)
cfn=(58)
calls=1376 0x404d8f -77 
* * 8256 4128 2752 1 0 0 1
+5 * 1376 1376
+1 * 1376 1376

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 704 0 704
+1 * 704
+3 * 704
+4 * 704 0 704 1 0 0 1
+4 * 704 0 704
+4 * 704 0 704
+4 +2 704 704
+4 * 704 704
+4 * 704
+3 * 704
+3 * 704
+4 * 704 0 704
+4 +1 704 704
+5 * 704 0 0 0 0 0 0 0 0 704
jcnd=8/704 +33 +2 
* * 
+2 +1 696 696
+4 * 696
+8 * 696 696
+4 * 696 696
+4 * 696
+3 * 696 0 0 1 0 0 1
+3 * 696 0 696 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=696 0x3877c83840 0 
* * 203812 66040 64653 11 2 20 11 2 20 12748 816 691 171
* * 696 696 0 1 1 0 1 1 0 0 0 696
+5 +1 704 704
+4 * 704
+8 * 704 704
+4 * 704
+3 +1 704 704
+1 * 704 704

fn=(140)
0x404eb5 368 704 0 704
+1 * 704
+3 * 704
+4 * 704 0 704 1 0 0 1
+4 * 704 0 704
+4 * 704 0 704 0 0 1 0 0 1
+4 +2 704 704
+4 * 704 704
+4 * 704
+3 * 704
+3 * 704
+4 * 704 0 704
+4 +1 704 704
+5 * 704 0 0 0 0 0 0 0 0 704
jcnd=8/704 +33 +2 
* * 
+2 +1 696 696
+4 * 696
+8 * 696 696
+4 * 696 696
+4 * 696
+3 * 696
+3 * 696 0 696
cob=(2)
cfi=(9)
cfn=(78)
calls=696 0x3877c83840 0 
* * 203812 66040 64653 0 1 41 0 1 41 12748 802 691
* * 696 696 0 0 0 0 0 0 0 0 0 696
+5 +1 704 704
+4 * 704
+8 * 704 704
+4 * 704
+3 +1 704 704
+1 * 704 704

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688 1 0 0 1
+4 * 688 0 688
+4 * 688 0 688
+4 +8 688 0 688
+4 +3 688 688
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(74)
calls=688 0x404f37 -22 
* * 221954 73292 68480 14 3 3 14 3 3 13352 812 1372 171
+5 +1 688 688
+1 * 688 688

fn=(126)
0x404be0 424 688 0 688
+1 * 688
+3 * 688 0 688
+2 * 688 0 688
+1 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +4 688 688
+4 * 688
+3 * 688 0 688
cfn=(128)
calls=688 0x404878 277 
* * 10320 4128 3440 1 0 0 1
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(132)
calls=688 0x404d44 277 
* * 17200 6192 5504 2 0 0 2
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(132)
calls=688 0x404d44 277 
* * 17200 6192 5504
+5 * 688
+3 * 688
+3 * 688
+3 * 688 0 688
cfn=(138)
calls=688 0x404d5e -49 
* * 232274 76732 72608 1 1 40 1 1 40 13352 796 1372
+5 +1 688
+4 * 688 688
+1 * 688 688
+2 * 688 688
+1 * 688 688

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 688 0 688
+1 * 688
+3 * 688 0 688
+1 * 688
+4 * 688 0 688 1 0 0 1
+4 * 688 0 688
+4 * 688 0 688
+4 +10 688 688
+4 * 688
+3 * 688 0 688
cfn=(56)
calls=688 0x404c38 288 
* * 10320 4128 3440 3 0 0 3
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(56)
calls=688 0x404c38 288 
* * 10320 4128 3440
+5 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=688 0x404c52 -36 
* * 296258 98060 93936 20 3 4 20 3 4 13352 812 1372 171
+5 +1 688
+4 * 688 688
+1 * 688 688
+1 * 688 688

fn=(60)
0x404c52 424 688 0 688
+1 * 688
+3 * 688 0 688
+2 * 688 0 688
+1 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +4 688 688
+4 * 688
+3 * 688 0 688
cfn=(62)
calls=688 0x40492d 277 
* * 10320 4128 3440 2 0 0 2
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688 1 0 0 1
cfn=(66)
calls=688 0x404d9d 277 
* * 17200 6192 5504 2 0 1 2 0 1
+5 * 688
+3 * 688 688
+4 * 688
+3 * 688 0 688
cfn=(66)
calls=688 0x404d9d 277 
* * 17200 6192 5504
+5 * 688
+3 * 688
+3 * 688
+3 * 688 0 688
cfn=(72)
calls=688 0x404db7 -49 
* * 232274 76732 72608 15 3 3 15 3 3 13352 812 1372 171
+5 +1 688
+4 * 688 688
+1 * 688 688
+2 * 688 688
+1 * 688 688

fn=(282)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376 0 1376
+4 +1 1376 1376
+4 * 1376 1376
+1 * 1376 1376

fn=(110)
0x404380 726 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376 0 1376
+4 * 1376 0 1376
+4 * 1376 1376
+4 * 1376 1376
+3 * 1376 1376
+4 * 1376 0 1376
+3 * 1376 1376
+1 * 1376 1376

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376 0 1376
+4 +1 1376 1376
+4 * 1376 1376
+1 * 1376 1376

fn=(44)
0x404468 726 1376 0 1376
+1 * 1376
+3 * 1376 0 1376
+4 * 1376 0 1376
+4 * 1376 1376
+4 * 1376 1376
+3 * 1376 1376
+4 * 1376 0 1376 1 0 0 1
+3 * 1376 1376
+1 * 1376 1376

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 696 0 696 1 0 0 1
+1 * 696
+3 * 696 0 696
+4 * 696 0 696 1 0 0 1
+4 * 696 696
+1 * 696 696

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 696 0 696 1 0 0 1
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 +4 696 696
+4 * 696 696
+4 * 696
+3 * 696
+3 * 696 0 696
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=696 0x40454c -14 
* * 4176 1392 2088 1 0 0 1
+5 +2 696 696
+1 * 696 696

fn=(150)
0x40326c 148 696 0 696
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 * 696 0 696
+4 +3 696 696 0 1 0 0 1
+4 * 696 696
+4 * 696
+3 * 696
+3 * 696 0 696
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=696 0x403d1a -29 
* * 12528 4176 4872 3 0 0 3
+5 +1 696 696
+1 * 696 696

fn=(180)
0x40334a 148 696 0 696
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 * 696 0 696
+4 +3 696 696
+4 * 696 696
+4 * 696
+3 * 696
+3 * 696 0 696
cfn=(182)
calls=696 0x403dcc -29 
* * 12528 4176 4872 2 0 0 2
+5 +1 696 696
+1 * 696 696

fn=(152)
0x403d1a 122 696 0 696 1 0 0 1
+1 * 696
+3 * 696
+4 * 696 0 696
+4 * 696 0 696
+4 +4 696 696
+4 * 696 696
+4 * 696
+3 * 696
+3 * 696 0 696
cfn=(154)
calls=696 0x4044f8 -14 
* * 4176 1392 2088 2 0 0 2
+5 +2 696 696
+1 * 696 696

fn=(184)
0x40454c 112 696 0 696 1 0 0 1
+1 * 696
+3 * 696 0 696
+4 * 696 0 696
+4 * 696 696
+1 * 696 696

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 3057 478 476 0 15 7 0 15 7 495 58 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3243 677 629 15 5 5 15 5 5 507 53 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1392 0 1392 1 0 0 1
+2 0 1392 0 1392
+2 0 1392 0 1392
+2 0 1392
+3 0 1392 0 1392
+2 0 1392 0 1392
+1 0 1392 0 1392
+1 0 1392
+3 0 1392
+4 0 1392 1392
+4 0 1392 0 1392
+4 0 1392
+3 0 1392
+4 0 1392
+3 0 1392
+3 0 1392
+3 0 1392 0 0 1 0 0 1 0 0 1392
+6 0 1392
+4 0 1392 0 0 0 0 0 0 0 0 1392
+6 0 1392
+4 0 1392 0 0 0 0 0 0 0 0 1392
+6 0 1392 1392
+7 0 1392 0 0 0 0 0 0 0 0 1392 4
jcnd=1268/1392 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1268
+2 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268 0 1 0 0 1
+4 0 1268
+3 0 1268
+2 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 0x3877c78a40 0 
* 0 
+6 0 1268 1268
+4 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268
+5 0 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 0x3877c7907c 0 
* 0 
+6 0 1268 1268
+5 0 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268
+4 0 1268 0 0 1 0 0 1 0 0 1268
+6 0 1268
+4 0 1268 1268
+7 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268
+6 0 1268
+2 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268 5
jcnd=1264/1268 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1268 1268 0 1 0 0 1
+4 0 1268 0 0 0 0 0 0 0 0 1268 442
jcnd=494/1268 0x3877c78bf0 0 
* 0 
+6 0 774 774 0 0 1 0 0 1
+6 0 774 0 0 1 0 0 1 0 0 774 64
jcnd=61/774 0x3877c78a78 0 
* 0 
+6 0 713 713
+5 0 713 713
+5 0 713 713
+4 0 713 0 0 0 0 0 0 0 0 713
+6 0 713 713
+4 0 713 0 0 0 0 0 0 0 0 713
+6 0 713 713
+9 0 713 0 713
+4 0 713 0 713
+4 0 713 0 0 0 0 0 0 0 0 713 4
jcnd=705/713 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 713
+3 0 713
+4 0 713 713
+4 0 713 713
+4 0 713 0 0 0 0 0 0 0 0 713
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 774
+7 0 774 0 774
+4 0 774 0 774
+4 0 774 0 0 0 0 0 0 0 0 774 68
jcnd=441/774 +18 0 
* 0 
+2 0 333 0 333
+8 0 333 0 333
+8 0 333 0 333
+4 0 333
+3 0 333 0 333 1 0 0 1
+4 0 333
+4 0 333 0 333
+4 0 333 0 333
+4 0 333
+7 0 333 0 0 0 0 0 0 0 0 333
jcnd=333/333 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 494
+7 0 494 0 0 0 0 0 0 0 0 494
jcnd=494/494 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1268 0 0 1 0 0 1
+5 0 1268 1268
+4 0 1268 1268
+7 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 +16 0 
* 0 
+16 0 1268 0 1268
+5 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268
+3 0 1268
jump=1268 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1268 1268 0 1 0 0 1
+4 0 1268
+2 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268
+7 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 +15 0 
* 0 
+15 0 1268 0 1268 1 0 0 1
+4 0 1268 0 0 0 0 0 0 0 0 1268 2
+6 0 1268
+4 0 1268 1268
+1 0 1268 1268
+1 0 1268 1268
+2 0 1268 1268
+2 0 1268 1268
+2 0 1268 1268
+2 0 1268 1268
0x3877c78bf0 0 494 0 0 1 0 0 1
+3 0 494 0 494
+4 0 494
+3 0 494
+4 0 494 0 494 1 0 0 1
+4 0 494
jump=494 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1268 1268 0 1 1 0 1 1
+4 0 1268 0 0 1 0 0 1
+7 0 1268
+4 0 1268
+3 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1382 0 0 1 0 0 1
+7 0 1382
+3 0 1382
+3 0 1382 1382 0 0 1 0 0 1
+4 0 1382
+4 0 1382 0 0 0 0 0 0 0 0 0 0 1382 171
jump=168 0x3877c89be8 0 
* 0 
jump=178 0x3877c89bd0 0 
* 0 
jump=168 0x3877c89bb8 0 
* 0 
jump=168 +11 0 
* 0 
jump=168 0x3877c89c48 0 
* 0 
jump=178 0x3877c89c30 0 
* 0 
jump=176 0x3877c89c18 0 
* 0 
jump=178 0x3877c89c00 0 
* 0 
+11 0 168 168
+3 0 168
+4 0 168
+4 0 168 168
+4 0 168
+4 0 168 0 168
+4 0 168
+9 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-40 0 14678 14678
+4 0 14678 0 14678 0 0 3 0 0 3
+4 0 14678 14678
+4 0 14678 0 14678 0 0 15 0 0 15
+4 0 14678 14678
+4 0 14678 0 14678 0 0 19 0 0 19
+4 0 14678 14678
+4 0 14678 0 14678
+4 0 14678
+4 0 14678
+4 0 14678 0 0 0 0 0 0 0 0 14678 908
jcnd=1346/14678 0x3877c89c60 0 
* 0 
-32 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178
+4 0 178
+4 0 178 0 0 0 0 0 0 0 0 178
jcnd=10/178 0x3877c89c60 0 
* 0 
-24 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176
+4 0 176
+4 0 176 0 0 0 0 0 0 0 0 176
jcnd=8/176 0x3877c89c60 0 
* 0 
-16 0 178 178 0 1 0 0 1
+4 0 178 0 178
+4 0 178 0 0 1 0 0 1
+4 0 178
+4 0 178 0 0 0 0 0 0 0 0 178 4
jcnd=10/178 0x3877c89c60 0 
* 0 
+6 0 13996
+4 0 13996 13996
+3 0 13996 0 13996 0 0 1 0 0 1
+3 0 13996 13996
+4 0 13996 0 13996 0 0 3 0 0 3
+4 0 13996 13996
+4 0 13996 0 13996 0 0 18 0 0 18
+4 0 13996 13996
+4 0 13996 0 13996
+4 0 13996
jump=13996 -80 0 
* 0 
-30 0 168 168
+3 0 168 0 168
+3 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168 0 0 1 0 0 1
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
-24 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178
jump=178 -80 0 
* 0 
-16 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
+8 0 168 168
+3 0 168
+4 0 168 0 0 1 0 0 1
+4 0 168
+4 0 168
jump=168 -39 0 
* 0 
+9 0 178
+3 0 178 0 0 0 0 0 0 0 0 178
+6 0 178 178
+3 0 178
+4 0 178
jump=178 -72 0 
* 0 
+8 0 168
+4 0 168 168
+3 0 168 0 0 0 0 0 0 0 0 168
+2 0 168
+4 0 168
jump=168 -99 0 
* 0 
+11 0 178 178 0 1 0 0 1
+3 0 178
+4 0 178
+4 0 178
+4 0 178
jump=178 0x3877c89b78 0 
* 0 
+9 0 176 176
+3 0 176
+4 0 176
+4 0 176
+4 0 176
jump=176 0x3877c89b70 0 
* 0 
+9 0 178 178
+3 0 178
+4 0 178
+4 0 178
+4 0 178
jump=178 0x3877c89b68 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b60 0 
* 0 
+9 0 1382 0 1382 1 0 0 1
+3 0 1382 1382

fn=(104) alloc_perturb
0x3877c77180 0 1258 1258 0 1 0 0 1
+6 0 1258
+2 0 1258 0 0 0 0 0 0 0 0 1258 1
+2 0 1258 1258

fn=(38) _int_malloc
0x3877c79a00 0 1392 0 1392 1 0 0 1
+2 0 1392
+3 0 1392 0 1392
+2 0 1392 0 1392
+2 0 1392 0 1392 0 0 1 0 0 1
+2 0 1392
+3 0 1392 0 1392
+1 0 1392 0 1392
+1 0 1392
+4 0 1392
+4 0 1392 0 0 0 0 0 0 0 0 1392
+6 0 1392
+4 0 1392
+6 0 1392
+3 0 1392
+4 0 1392
+4 0 1392
+4 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392
+6 0 1392 1392 0 1 1 0 1 1
+7 0 1392 0 0 0 0 0 0 0 0 1392 7
jcnd=1270/1392 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1258
+4 0 1258 1258
+1 0 1258 1258
+1 0 1258 1258
+2 0 1258 1258
+2 0 1258 1258
+2 0 1258 1258
+2 0 1258 1258
+7 0 1287
+7 0 1287 0 0 1 0 0 1 0 0 1287 7
jcnd=384/1287 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 2 0 0 2
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 1 0 0 1 0 0 384
jcnd=384/384 0x3877c7a1a4 0 
* 0 
+30 0 384 384
+6 0 384
+5 0 384 0 0 0 0 0 0 0 0 384 1
jcnd=383/384 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 898 238 191 8 2 0 8 2 0 184 20
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1286 0 0 1 0 0 1
+3 0 1286
+3 0 1286
+3 0 1286
+4 0 1286
+3 0 1286
+4 0 1286 0 1286
+5 0 1286
+3 0 1286 0 1286
+4 0 1286 0 1286
+4 0 1286 0 1286
+5 0 1286
+3 0 1286
+3 0 1286
+3 0 1286
+3 0 1286
+4 0 1286
+4 0 1286 0 0 1 0 0 1
+4 0 1286 0 1286
+4 0 1286
+4 0 1286 0 1286
+5 0 1286 0 1286
+5 0 1286
+3 0 1286
+3 0 1286 0 1286
+5 0 1286
+5 0 1286
+3 0 1286 0 1286
+4 0 1286 0 1286
+4 0 1286
+6 0 1286 0 1286
+4 0 1286 0 1286
+5 0 1286 0 0 1 0 0 1
+3 0 1286
+3 0 1286
+3 0 1286
jump=1286 +87 0 
* 0 
+8 0 970
+3 0 970
+4 0 970
+2 0 970
+2 0 970
+3 0 970
+3 0 970
+3 0 970
+2 0 970
+2 0 970
+5 0 970
+2 0 970 970 0 0 1 0 0 1
+4 0 970
+3 0 970
+4 0 970 0 970
+4 0 970 0 970
+8 0 970
+7 0 970 0 970
+4 0 970 0 970 0 0 1 0 0 1
+4 0 970 0 970
+4 0 970 0 0 0 0 0 0 0 0 970
-38 0 323
+3 0 323
+4 0 323 0 323
+4 0 323 0 323
+8 0 323
+7 0 323 0 323
+4 0 323 0 323
+4 0 323 0 323
+4 0 323 0 0 0 0 0 0 0 0 323
+6 0 2580 2580 0 1 0 0 1
+4 0 2580
+3 0 2580 0 0 0 0 0 0 0 0 2580 150
jcnd=1239/2580 0x3877c79ef0 0 
* 0 
+6 0 1341 1341
+4 0 1341 1341
+4 0 1341
+4 0 1341 0 0 0 0 0 0 0 0 1341
+6 0 1341 1341 0 1 0 0 1
+7 0 1341 0 0 0 0 0 0 0 0 1341
+6 0 1341
+4 0 1341
+7 0 1341 0 0 0 0 0 0 0 0 1341 6
jcnd=432/1341 +11 0 
* 0 
+2 0 909
+3 0 909 0 0 0 0 0 0 0 0 909 62
jcnd=833/909 0x3877c79e28 0 
* 0 
+6 0 1322
+3 0 1322 0 1322
+4 0 1322 0 1322
+5 0 1322 0 0 0 0 0 0 0 0 1322 17
jcnd=29/1322 0x3877c7a090 0 
* 0 
+6 0 1293
+7 0 1293 0 0 0 0 0 0 0 0 1293 177
jcnd=970/1293 0x3877c79c50 0 
* 0 
+6 0 323 0 0 1 0 0 1
+3 0 323
+4 0 323
+4 0 323 0 0 0 0 0 0 0 0 323
+6 0 323
+3 0 323
+4 0 323
+2 0 323
+2 0 323
+3 0 323
+3 0 323
+8 0 323
+3 0 323
+2 0 323
+2 0 323
+4 0 323 323 0 0 2 0 0 2
+4 0 323
+3 0 323 0 0 1 0 0 1 0 0 323 9
jcnd=323/323 0x3877c79e15 0 
* 0 
0x3877c79e15 0 323 0 323
+4 0 323 0 323
+4 0 323
+3 0 323
jump=323 0x3877c79c73 0 
* 0 
+8 0 833 833 0 1 0 0 1
+4 0 833
+3 0 833 0 0 0 0 0 0 0 0 833 335
jcnd=428/833 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 5
jcnd=386/405 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1239 0 0 1 0 0 1
+7 0 1239
+3 0 1239 0 0 0 0 0 0 0 0 1239 4
jcnd=376/1239 0x3877c7a0b0 0 
* 0 
+6 0 1215 1215 0 1 0 0 1
+4 0 1215
+3 0 1215
+3 0 1215
+2 0 1215
+4 0 1215
+3 0 1215
+3 0 1215
+2 0 1215
+2 0 1215
+2 0 1215
+2 0 1215 1215 0 0 1 0 0 1
+8 0 1215
+5 0 1215
+5 0 1215
+2 0 1215 0 0 0 0 0 0 0 0 1215
-2 0 595
+2 0 595 0 0 0 0 0 0 0 0 595
+2 0 1810
+2 0 1810 0 0 0 0 0 0 0 0 1810 33
jcnd=1038/1810 +64 0 
* 0 
+2 0 772
+8 0 772
+3 0 772
+3 0 772 0 0 0 0 0 0 0 0 772 1
jcnd=1/772 0x3877c79fc0 0 
* 0 
-6 0 919
+3 0 919
+3 0 919 0 0 0 0 0 0 0 0 919 11
jcnd=495/919 0x3877c79fc0 0 
* 0 
+2 0 1195
+2 0 1195 1195
+8 0 1195
+2 0 1195 0 0 0 0 0 0 0 0 1195 26
jcnd=919/1195 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
+2 0 276
+2 0 276
+4 0 276
+2 0 276
+2 0 276 0 0 0 0 0 0 0 0 276 6
jcnd=214/276 -8 0 
* 0 
-8 0 9600
+4 0 9600
+2 0 9600
+2 0 9600 0 0 0 0 0 0 0 0 9600 697
jcnd=8489/9600 -8 0 
* 0 
-2 0 1038 0 0 1 0 0 1
+2 0 1038 0 0 0 0 0 0 0 0 1038 29
jcnd=897/1038 -8 0 
* 0 
+2 0 1314 1314 0 0 15 0 0 15
+4 0 1314 0 0 1 0 0 1
+3 0 1314 0 0 0 0 0 0 0 0 1314 537
jcnd=719/1314 0x3877c7a1cf 0 
* 0 
+6 0 595
+2 0 595
+4 0 595
+2 0 595
+2 0 595
+2 0 595 0 595
+8 0 595
jump=595 0x3877c79f30 0 
* 0 
+37 0 496 496 0 1 0 0 1
+5 0 496 496
+4 0 496
+4 0 496 496
+5 0 496 0 0 0 0 0 0 0 0 496
jcnd=496/496 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 376 376
+4 0 376
+4 0 376
+2 0 376
+5 0 376 376 0 1 0 0 1
+4 0 376
+3 0 376 0 0 0 0 0 0 0 0 376 4
jcnd=352/376 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 384 0 0 1 0 0 1
+3 0 384 0 384
+4 0 384
jump=384 0x3877c79b99 0 
* 0 
+36 0 719 719 0 1 2 0 1 2
+4 0 719 719 0 0 1 0 0 1
+4 0 719
+3 0 719 719
+4 0 719
+4 0 719
+3 0 719
+3 0 719 719
+4 0 719 0 0 0 0 0 0 0 0 719
+6 0 719 719
+4 0 719 0 0 0 0 0 0 0 0 719
+6 0 719 719 0 1 0 0 1
+8 0 719 0 719
+4 0 719 0 719
+4 0 719 0 0 0 0 0 0 0 0 719 11
jcnd=419/719 +38 0 
* 0 
+2 0 300 300 0 0 2 0 0 2
+4 0 300
+3 0 300 0 0 0 0 0 0 0 0 300
+2 0 300 300
+5 0 300 0 0 0 0 0 0 0 0 300
+6 0 300 300
+4 0 300 0 300
+4 0 300 300
+4 0 300 0 300
+4 0 300
+4 0 300 0 0 0 0 0 0 0 0 300
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 8
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 698 698
+4 0 698 698 0 1 0 0 1
+4 0 698 0 0 0 0 0 0 0 0 698
+6 0 698
+4 0 698
+7 0 698 0 698 0 0 7 0 0 7
+4 0 698 0 698
+4 0 698 0 698
+4 0 698 0 698
+4 0 698 0 0 0 0 0 0 0 0 698 4
jcnd=232/698 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 232
+7 0 232 0 0 0 0 0 0 0 0 232
jcnd=232/232 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 707 0 0 1 0 0 1
+7 0 707 0 707 0 0 1 0 0 1
+4 0 707
+3 0 707
+3 0 707
+4 0 707
+3 0 707
+4 0 707
+3 0 707
+3 0 707
+4 0 707 0 707
+4 0 707 0 707 0 0 1 0 0 1
+4 0 707
jump=707 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 743
+4 0 743 0 0 1 0 0 1
+3 0 743
+3 0 743 0 743
cfn=(104)
calls=743 0x3877c77180 0 
* 0 2972 1486 0 1 0 0 1 0 0 743
+5 0 743
+3 0 743
jump=743 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 496 0 0 1 0 0 1
+7 0 496
+2 0 496
+4 0 496
+3 0 496
+3 0 496 0 496
+5 0 496
+3 0 496
+4 0 496
+3 0 496 0 0 1 0 0 1
+4 0 496
+4 0 496
+3 0 496
+4 0 496 0 496
+4 0 496 0 496 0 0 19 0 0 19
+4 0 496
+3 0 496
+3 0 496 0 496
cfn=(104)
calls=496 0x3877c77180 0 
* 0 1984 992 0 0 0 0 0 0 0 496 1
+5 0 496
+3 0 496
jump=496 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1392 0 1392 1 0 0 1
+5 0 1392 0 1392
+5 0 1392
+3 0 1392 0 1392
+5 0 1392
+4 0 1392 1392 0 0 1 0 0 1
+7 0 1392 1392 0 0 1 0 0 1
+3 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392 2
+6 0 1392 1392 0 0 1 0 0 1
+7 0 1392 1392 0 1 1 0 1 1
+4 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392
+2 0 1392 1392 0 0 1 0 0 1
+3 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392
jcnd=1392/1392 +97 0 
* 0 
+18 0 1392
+3 0 1392
+3 0 1392 0 1392
cfn=(38)
calls=1392 0x3877c79a00 0 
* 0 319866 39317 46318 45 32 52 45 32 52 49467 2235
+5 0 1392
+3 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392
+2 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392
+2 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392 23
+2 0 1392 1392
+7 0 1392 0 0 0 0 0 0 0 0 1392
jcnd=1392/1392 +13 0 
* 0 
+13 0 1392 0 1392
+2 0 1392 0 0 0 0 0 0 0 0 1392 12
+6 0 1392
+3 0 1392 1392
+4 0 1392 1392
+5 0 1392 1392
+5 0 1392
+4 0 1392 1392
+1 0 1392 0 0 1 0 0 1
+5 0 1392 1392 0 0 1 0 0 1
+7 0 1392 0 0 0 0 0 0 0 0 1392
jcnd=1392/1392 +14 0 
* 0 
+14 0 1392 0 1392 1 0 0 1
+3 0 1392 0 0 0 0 0 0 0 0 1392
+6 0 1392
jump=1392 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1392 0 1392 1 0 0 1
+2 0 1392
+3 0 1392
+3 0 1392 0 1392
+2 0 1392
+3 0 1392 0 1392
+1 0 1392
+3 0 1392 0 1392
+1 0 1392
+3 0 1392
+4 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392
+6 0 1392
+4 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392 7
jcnd=10/1392 0x3877c838d1 0 
* 0 
+2 0 1382
+3 0 1382
+3 0 1382
+3 0 1382
+3 0 1382
+3 0 1382 0 0 0 0 0 0 0 0 1382
jcnd=1382/1382 +41 0 
* 0 
+41 0 1382 0 0 1 0 0 1
+3 0 1382 0 0 0 0 0 0 0 0 1382
jcnd=1382/1382 0x3877c839c0 0 
* 0 
+24 0 1382
+3 0 1382
+4 0 1382
+3 0 1382
+3 0 1382
+3 0 1382
+3 0 1382
+3 0 1382 0 0 0 0 0 0 0 0 1382 688
jcnd=698/1382 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 694
+10 0 694 694 0 0 2 0 0 2
+3 0 694
+4 0 694 0 694
+3 0 694
+4 0 694
+4 0 694 0 0 0 0 0 0 0 0 694
jcnd=694/694 -18 0 
* 0 
-18 0 2138 2138
+3 0 2138
+4 0 2138 0 2138
+3 0 2138
+4 0 2138
+4 0 2138 0 0 0 0 0 0 0 0 2138 11
jcnd=1444/2138 -18 0 
* 0 
+2 0 1392
+4 0 1392
+3 0 1392 1392
+1 0 1392 1392
+1 0 1392 1392
+2 0 1392 1392 0 1 0 0 1
+2 0 1392 1392
0x3877c839c0 0 1382 0 0 1 0 0 1
+3 0 1382
+3 0 1382
+3 0 1382
+4 0 1382 0 1382 0 0 1 0 0 1
cfn=(284)
calls=1382 0x3877c89b20 0 
* 0 328890 122288 119524 6 1 60 6 1 60 15724 912 1382 171
+5 0 1382
jump=1382 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1392 1392 0 1 1 0 1 1
+7 0 1392 1392 0 0 1 0 0 1
+3 0 1392
+3 0 1392 0 0 1 0 0 1 0 0 1392
+6 0 1392
+3 0 1392 0 0 0 0 0 0 0 0 1392
+6 0 1392 1392
+4 0 1392
+4 0 1392
+2 0 1392 0 0 0 0 0 0 0 0 1392 2
+2 0 1392
+2 0 1392
+7 0 1392 0 0 0 0 0 0 0 0 1392
jcnd=1392/1392 +14 0 
* 0 
+14 0 1392
+2 0 1392
cfn=(170)
calls=1392 0x3877c78650 0 
* 0 135319 35799 20445 19 3 0 19 3 0 32721 591

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 11094411 4549815 2618818 241 100 142 241 100 142 318114 5539 8342 171
