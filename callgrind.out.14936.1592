version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1592


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2023826469 - 2023925654
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 284 0 0 1 0 0 1
+3 0 284 0 0 0 0 0 0 0 0 284
+2 0 284
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=284 0x3877c7b8b0 0 
* 0 30084 7546 4078 19 3 0 19 3 0 7016 108
* 0 284 284 0 1 1 0 1 1 0 0 0 284

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 284 0 284 1 0 0 1
+1 0 284
+5 0 284
+3 0 284 0 284
+1 0 284
+4 0 284 0 0 1 0 0 1
+3 0 284
+4 0 284
+3 0 284 0 284 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=284 0x3877c7aa50 0 
* 0 60793 10100 9420 31 27 32 31 27 32 10215 310
* 0 284 284 0 1 1 0 1 1 0 0 0 284
+5 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
jcnd=284/284 +96 0 
* 0 
+96 0 284 0 0 1 0 0 1
+4 0 284 284
+1 0 284 284
+1 0 284 284

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=136 0x404a28 -35 
* * 816 272 408 1 0 1 1 0 1
+5 * 136 136
+1 * 136 136

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 136
+4 * 136
+3 * 136 0 136
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=136 0x4044cc -35 
* * 680 272 272
+5 * 136 136
+1 * 136 136

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136 1 0 0 1
+4 +1 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=136 0x4049d4 -35 
* * 816 272 408 1 0 0 1
+5 * 136 136
+1 * 136 136

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 136
+4 * 136
+3 * 136 0 136
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=136 0x404520 -35 
* * 680 272 272
+5 * 136 136
+1 * 136 136

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 68 0 68
+1 * 68
+3 * 68
+4 * 68 0 68
+4 * 68 0 68
+4 * 68 0 68
+4 +1 68 68
+4 * 68 68
+4 * 68 68
+4 * 68
+3 * 68
+3 * 68 0 68
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=68 0x403df2 -87 
* * 1632 544 612 0 5 1 0 5 1 68
+5 * 68 68
+1 * 68 68

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 136 0 136 1 0 0 1
+1 * 136
+3 * 136 0 136
+4 * 136 136
+4 * 136 136
+1 * 136 136

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 68 0 68
+1 * 68
+3 * 68
+4 * 68 0 68
+4 * 68 0 68
+4 * 68 0 68
+4 +1 68 68
+4 * 68 68
+4 * 68 68
+4 * 68
+3 * 68
+3 * 68 0 68
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=68 0x40406a -87 
* * 1632 544 612 0 4 4 0 4 4 68
+5 * 68 68
+1 * 68 68

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 136 0 136
+1 * 136
+3 * 136 0 136
+4 * 136 136
+4 * 136 136
+1 * 136 136

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 272 0 272 1 0 0 1
+1 * 272
+3 * 272 0 272
+4 +1 272 272
+4 * 272 272
+1 * 272 272

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 272 0 272 1 0 0 1
+1 * 272
+3 * 272
+4 * 272 0 272
+4 +1 272
+4 * 272
+3 * 272 0 272 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=272 0x40500c 790 
* * 1632 816 544 1 0 0 1
+5 * 272 272
+3 * 272 272
+1 * 272 272

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 196 0 196
+1 * 196
+3 * 196 0 196
+4 +1 196 196
+4 * 196 196
+1 * 196 196

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 272 0 272 1 0 0 1
+1 * 272
+3 * 272 0 272
+4 +1 272 272 0 1 0 0 1
+4 * 272 272
+1 * 272 272

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 196 0 196
+1 * 196
+3 * 196 0 196 0 0 1 0 0 1
+4 +1 196 196
+4 * 196 196
+1 * 196 196

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 272 0 272 1 0 0 1
+1 * 272
+3 * 272
+4 * 272 0 272
+4 +1 272
+4 * 272
+3 * 272 0 272
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=272 0x404ffe 790 
* * 1632 816 544 1 0 0 1
+5 * 272 272
+3 * 272 272
+1 * 272 272

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 136 0 136
+1 * 136
+3 * 136 0 136
+4 * 136 0 136
+4 * 136 136
+4 * 136 136
+1 * 136 136

fl=(5)
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 142 0 142
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 * 142 0 142
+4 +1 142 142
+4 * 142
+3 * 142 0 142
cob=(5)
cfi=(8)
cfn=(164)
calls=142 0x387e4bb2f0 0 
* * 15702 3934 2102 21 4 0 21 4 0 3662 79 142
* * 142 142 0 1 1 0 1 1 0 0 0 142
+5 * 142 142
+1 * 142 142

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 142 0 142
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 * 142 0 142
+4 +1 142 142
+4 * 142
+3 * 142 0 142
cob=(5)
cfi=(8)
cfn=(164)
calls=142 0x387e4bb2f0 0 
* * 15518 3896 1976 0 0 0 0 0 0 3638 29 142
* * 142 142 0 0 0 0 0 0 0 0 0 142
+5 * 142 142
+1 * 142 142

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 142 0 142 1 0 0 1
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 * 142 0 142
+4 +2 142 142
+4 * 142
+3 * 142 0 142
cfn=(102)
calls=142 0x4048de +12 
* * 852 284 284 1 0 0 1
+5 * 142 142
+4 * 142 0 0 1 0 0 1
+3 * 142
+2 * 142 0 0 0 0 0 0 0 0 142
jcnd=142/142 +7 +3 
* * 
+7 +3 142 142
+4 * 142
+4 * 142
+3 * 142 0 142
cob=(5)
cfi=(8)
cfn=(32)
calls=142 0x387e4bd0b0 0 
* * 32355 5645 4926 11 8 19 11 8 19 5203 135 142
* * 142 142 0 0 0 0 0 0 0 0 0 142
+5 +1 142 142
+1 * 142 142

fn=(18)
0x404a28 81 136 0 136 1 0 0 1
+1 * 136
+3 * 136 0 136 0 0 1 0 0 1
+4 * 136 0 136
+4 * 136 136
+1 * 136 136

fn=(92)
0x4049d4 81 136 0 136 1 0 0 1
+1 * 136
+3 * 136 0 136
+4 * 136 0 136
+4 * 136 136
+1 * 136 136

fn=(196)
0x404520 86 136 0 136
+1 * 136
+3 * 136 0 136
+4 * 136 136
+1 * 136 136

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 142 0 142 1 0 0 1
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 * 142 0 142 1 0 0 1
+4 +2 142 142
+4 * 142
+3 * 142 0 142
cfn=(28)
calls=142 0x404992 +12 
* * 852 284 284 1 0 0 1
+5 * 142 142
+4 * 142
+3 * 142
+2 * 142 0 0 0 0 0 0 0 0 142
jcnd=142/142 +7 +3 
* * 
+7 +3 142 142
+4 * 142
+4 * 142
+3 * 142 0 142
cob=(5)
cfi=(8)
cfn=(32)
calls=142 0x387e4bd0b0 0 
* * 32982 5591 5346 24 20 14 24 20 14 5296 175 142
* * 142 142 0 1 1 0 1 1 0 0 0 142
+5 +1 142 142
+1 * 142 142

fn=(102)
0x4048de 113 154 0 154 1 0 0 1
+1 * 154
+3 * 154 0 154
+4 +1 154
+10 * 154 154
+1 * 154 154

fn=(266)
0x40406a 129 68 0 68
+1 * 68
+3 * 68
+4 * 68 0 68
+4 * 68 0 68
+4 * 68 0 68
+4 +1 68 68
+4 * 68
+3 * 68
+5 * 68 0 68
cfi=(16)
cfn=(226)
calls=68 0x402d61 -20 
* * 476 204 204
+5 * 68
+3 * 68 0 0 0 0 0 0 0 0 68
+2 * 68 68
+4 * 68 68 0 0 4 0 0 4
+2 * 68 0 68 0 0 4 0 0 4
+2 * 68 68
+1 * 68 68

fn=(28)
0x404992 113 154 0 154 1 0 0 1
+1 * 154
+3 * 154 0 154
+4 +1 154
+10 * 154 154
+1 * 154 154

fn=(176)
0x4044cc 86 136 0 136
+1 * 136
+3 * 136 0 136
+4 * 136 136
+1 * 136 136

fn=(224)
0x403df2 129 68 0 68
+1 * 68
+3 * 68
+4 * 68 0 68
+4 * 68 0 68
+4 * 68 0 68
+4 +1 68 68
+4 * 68
+3 * 68
+5 * 68 0 68
cfi=(16)
cfn=(226)
calls=68 0x402d61 -20 
* * 476 204 204
+5 * 68
+3 * 68 0 0 0 0 0 0 0 0 68
+2 * 68 68
+4 * 68 68 0 0 5 0 0 5
+2 * 68 0 68 0 0 1 0 0 1
+2 * 68 68
+1 * 68 68

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=136 0x404484 107 
* * 44862 13824 13012 25 3 4 25 3 4 1484 84 268 33
+5 * 136 136
+1 * 136 136

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136 0 1 0 0 1
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=136 0x404a36 450 
* * 41054 12464 11652 24 3 4 24 3 4 1484 84 268 33
+5 * 136 136
+1 * 136 136

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=136 0x40439c 107 
* * 44862 13824 13012 7 1 4 7 1 4 1484 76 268
+5 * 136 136
+1 * 136 136

fn=(116)
0x40439c 107 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +10 136 136
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=136 0x4047d7 -26 
* * 42958 13144 12332 7 1 4 7 1 4 1484 76 268
+5 +1 136 136
+1 * 136 136

fn=(118)
0x4047d7 91 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=136 0x4049e2 450 
* * 41054 12464 11652 7 1 4 7 1 4 1484 76 268
+5 * 136 136
+1 * 136 136

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +10 136 136
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(52)
calls=136 0x404829 -26 
* * 42958 13144 12332 25 3 4 25 3 4 1484 84 268 33
+5 +1 136 136
+1 * 136 136

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(234)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 136 0 136
+1 * 136
+3 * 136 0 136
+1 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=136 0x4043ca -45 
* * 4896 1768 1904 4 0 4 4 0 4
+5 +1 136 136 0 1 0 0 1
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=136 0x404412 +43 
* * 40616 8748 7684 22 14 8 22 14 8 5340 145 272
+5 * 136
jump=136 +28 * 
* * 
+28 * 136
+4 * 136 136
+1 * 136 136
+1 * 136 136

fn=(14)
0x4043ca 90 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136 0 0 1 0 0 1
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(4)
cfn=(16)
calls=136 0x404804 +24 
* * 2448 816 952 2 0 1 2 0 1
+5 * 136 136
+4 * 136 0 136 0 0 2 0 0 2
+7 * 136 136
+4 * 136 0 136 1 0 0 1
+8 * 136 136
+4 * 136 0 136
+8 +1 136 136
+1 * 136 136

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 136 0 136 1 0 0 1
+1 * 136
+3 * 136 0 136
+2 * 136 0 136
+2 * 136 0 136
+1 * 136 0 0 1 0 0 1
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136
+4 * 136
+3 * 136 0 136
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=136 0x4039fc 117 
* * 816 408 272 2 0 0 2
+5 * 136
+3 * 136 0 136
cfi=(3)
cfn=(84)
calls=136 0x4039ed -88 
* * 816 408 272
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=136 0x402d74 645 
* * 1768 816 272
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136
+3 * 136
+3 * 136 0 136 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=136 0x403a0a 134 
* * 47999 11536 10136 22 4 15 22 4 15 5267 124 272
+5 +4 136 136
+4 * 136
+3 * 136 0 136
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=136 0x40325e 113 
* * 816 408 272 1 0 0 1
+5 * 136
+3 * 136 136
+4 * 136 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=136 0x403a98 565 
* * 3400 1360 1088 2 0 0 2
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=136 0x403a68 547 
* * 3400 1360 1088
+5 * 136
+3 * 136
+3 * 136
+3 * 136
+3 * 136 0 136
cfi=(11)
cfn=(114)
calls=136 0x403ac9 -60 
* * 46902 14504 13828 7 1 4 7 1 4 1484 76 268
+5 -3 136 136
+4 * 136 0 136
+4 * 136
jump=136 +28 +4 
* * 
+28 +4 136
+4 * 136 136
+1 * 136 136
+2 * 136 136
+2 * 136 136
+1 * 136 136

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 142 0 142 1 0 0 1
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 * 142 0 142
+4 +2 142 142
+5 * 142 0 0 0 0 0 0 0 0 142 6
+2 +1 142 142
+4 * 142 142
+4 * 142 142
+4 * 142
+3 * 142
+3 * 142 0 142
cfi=(5)
cfn=(190)
calls=142 0x40452a -65 
* * 17222 4464 2686 0 0 0 0 0 0 3638 29 284
+5 +1 142 142
+1 * 142 142

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 142 0 142 1 0 0 1
+1 * 142
+3 * 142
+4 * 142 0 142 1 0 0 1
+4 * 142 0 142
+4 0 142 142
+5 0 142 0 0 0 0 0 0 0 0 142
+2 0 142 142
+4 0 142 142
+4 0 142
+5 0 142
+3 0 142
+3 0 142 0 142
fi=(6) ???
cfi=(5)
cfn=(26)
calls=142 0x404730 99 
* 0 36674 6727 6482 28 21 14 28 21 14 5438 175 284
+5 0 142
fi=(6)
jump=142 +7 0 
* 0 
+7 0 142 142
+1 0 142 142

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+4 * 136 0 136
+4 * 136
+4 * 136 0 0 1 0 0 1
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=136 0x404468 726 
* * 1360 680 544 1 0 0 1
+5 * 136 136
+4 * 136 136
+1 * 136 136

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+3 * 136 0 136
+4 * 136
+4 * 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(10)
cfn=(44)
calls=136 0x404468 726 
* * 1360 680 544
+5 * 136 136
+4 * 136 136
+1 * 136 136

fn=(86)
0x403a0a 134 136 0 136
+1 * 136
+3 * 136 0 136
+1 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=136 0x4042e2 -45 
* * 4896 1768 1904 5 0 0 5
+5 +1 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=136 0x40432a +43 
* * 40111 8816 7280 16 4 15 16 4 15 5267 124 272
+5 * 136
jump=136 +28 * 
* * 
+28 * 136
+4 * 136 136
+1 * 136 136
+1 * 136 136

fn=(88)
0x4042e2 90 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136 1 0 0 1
cfi=(4)
cfn=(90)
calls=136 0x4047b2 +24 
* * 2448 816 952 3 0 0 3
+5 * 136 136
+4 * 136 0 136
+7 * 136 136
+4 * 136 0 136
+8 * 136 136
+4 * 136 0 136
+8 +1 136 136
+1 * 136 136

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 136 0 136 1 0 0 1
+1 * 136
+3 * 136 0 136
+1 * 136
+4 * 136 0 136
+4 +2 136 136
+4 * 136 136 0 1 0 0 1
+4 * 136
+3 * 136 136
+4 * 136 136
+3 * 136
+3 * 136
+3 * 136
+4 * 136
+3 * 136 136
+4 * 136 136
+3 -1 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=136 0x403ce6 +11 
* * 18922 5156 3390 22 5 0 22 5 0 3668 77 272
+5 +1 136 136
+4 * 136
+3 * 136 0 136
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=136 0x4031b8 -82 
* * 3128 1088 1088 1 0 0 1
+5 * 136
jump=136 +28 * 
* * 
+28 * 136
+4 * 136 136
+1 * 136 136
+1 * 136 136

fn=(172)
0x4031b8 79 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 136
+4 * 136
+3 * 136 0 136
cfi=(4)
cfn=(174)
calls=136 0x403ccc +42 
* * 1904 680 680
+5 * 136 136
+1 * 136 136

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 296 0 296 1 0 0 1
+1 * 296
+3 * 296 0 296
+4 +1 296 296
+4 * 296 296 0 0 2 0 0 2
+4 * 296
+3 * 296 296
+4 * 296 296
+3 * 296
+3 * 296
+3 * 296
+4 * 296 296
+1 * 296 296

fn=(106)
0x40325e 113 290 0 290 1 0 0 1
+1 * 290
+3 * 290 0 290
+4 +1 290 290
+4 * 290 290
+1 * 290 290

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 148 0 148 1 0 0 1
+1 * 148
+3 * 148 0 148 0 0 1 0 0 1
+4 +1 148 148
+4 * 148 148
+1 * 148 148

fn=(82)
0x4039fc 117 148 0 148 1 0 0 1
+1 * 148
+3 * 148 0 148 1 0 0 1
+4 +1 148 148
+4 * 148 148
+1 * 148 148

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 68 0 68
+1 * 68
+3 * 68
+4 * 68 0 68
+4 * 68 0 68
+4 +2 68 68
+4 * 68 68
+4 * 68 68
+4 * 68 68
+4 * 68
+3 * 68 0 0 0 0 0 0 0 0 68 7
jcnd=6/68 +51 +10 
* * 
+2 +3 62 62
+4 * 62 62
+4 * 62 62
+4 -1 62 62
+4 * 62
+3 * 62
+3 * 62 0 62
cfi=(3)
cfn=(222)
calls=62 0x403373 215 
* * 2356 806 868 0 4 0 0 4 0 62
+5 +2 62 62
+4 * 62 62
+4 * 62
+4 * 62 62
+4 * 62 0 62
+4 * 62
jump=62 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8298 2589 2243 24 5 8 24 5 8 452 16 35
+5 +2 68 68
+1 * 68 68

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 136 0 136 1 0 0 1
+1 * 136
+3 * 136 0 136
+2 * 136 0 136
+2 * 136 0 136
+1 * 136
+4 * 136 0 136 1 0 0 1
+4 * 136 0 136
+4 +2 136 136
+4 * 136
+3 * 136 0 136
cfn=(6)
calls=136 0x403b08 117 
* * 816 408 272 1 0 1 1 0 1
+5 * 136
+3 * 136 0 136
cfi=(3)
cfn=(8)
calls=136 0x403afa -88 
* * 816 408 272 1 0 0 1
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(10)
calls=136 0x402f54 645 
* * 1768 816 272 1 1 0 1 1
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136
+3 * 136
+3 * 136 0 136
cfn=(12)
calls=136 0x403b16 134 
* * 48504 11468 10540 27 14 12 27 14 12 5340 145 272
+5 +4 136 136 0 1 0 0 1
+4 * 136
+3 * 136 0 136
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=136 0x40333c 113 
* * 816 408 272 2 0 0 2
+5 * 136
+3 * 136 136
+4 * 136 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(42)
calls=136 0x403ba4 565 
* * 3400 1360 1088 3 0 0 3
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(46)
calls=136 0x403b74 547 
* * 3400 1360 1088
+5 * 136
+3 * 136
+3 * 136
+3 * 136
+3 * 136 0 136 1 0 0 1
cfi=(11)
cfn=(48)
calls=136 0x403bd5 -60 
* * 46902 14504 13828 26 3 4 26 3 4 1484 84 268 33
+5 -3 136 136
+4 * 136 0 136
+4 * 136
jump=136 +28 +4 
* * 
+28 +4 136
+4 * 136 136
+1 * 136 136
+2 * 136 136
+2 * 136 136
+1 * 136 136

fn=(108)
0x403a98 565 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+4 * 136 0 136
+4 * 136
+4 * 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=136 0x404380 726 
* * 1360 680 544 1 0 0 1
+5 * 136 136
+4 * 136 136
+1 * 136 136

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 136 0 136
+1 * 136
+3 * 136 0 136
+1 * 136
+4 * 136 0 136 1 0 0 1
+4 +2 136 136
+4 * 136
+3 * 136 0 136
cfn=(40)
calls=136 0x40333c 113 
* * 816 408 272
+5 * 136
+3 * 136 136
+4 * 136 136
+4 * 136 136
+4 * 136 136
+3 -1 136
+3 * 136
+3 * 136 0 136
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=136 0x40334a 148 
* * 4216 1360 1632 2 0 0 2
+5 +1 136 136
+4 * 136
+3 * 136 0 136
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=136 0x4032ca 159 
* * 25648 7690 5028 3 0 0 3 0 0 3638 23 272
+5 * 136
jump=136 +28 * 
* * 
+28 * 136 0 0 1 0 0 1
+4 * 136 136
+1 * 136 136
+1 * 136 136

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 142 0 142 1 0 0 1
+1 * 142 0 0 1 0 0 1
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 0 142 142
+5 0 142 0 0 0 0 0 0 0 0 142
+2 0 142 142
+4 0 142 142
+4 0 142
+5 0 142
+3 0 142
+3 0 142 0 142
fi=(6)
cfi=(5)
cfn=(100)
calls=142 0x40461a 99 
* 0 36047 6781 6062 14 8 19 14 8 19 5345 135 284
+5 0 142
fi=(6)
jump=142 +7 0 
* 0 
+7 0 142 142
+1 0 142 142

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 7378 0 7378
+1 * 7378
+3 * 7378 0 7378
+4 * 7378 0 7378
+4 +1 7378 7378
+4 * 7378 7378
+3 * 7378 7378
+4 * 7378
+4 * 7378
+3 * 7378 7378
+1 * 7378 7378

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 7378 0 7378
+1 * 7378
+3 * 7378 0 7378 1 0 0 1
+4 * 7378 0 7378
+4 +1 7378 7378
+4 * 7378 7378
+3 * 7378 7378
+4 * 7378
+4 * 7378
+3 * 7378 7378
+1 * 7378 7378

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 136
+4 * 136
+3 * 136 0 136
cfi=(4)
cfn=(194)
calls=136 0x403d7e +42 
* * 1904 680 680 1 0 0 1
+5 * 136 136
+1 * 136 136

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186)
0x4032ca 159 136 0 136 1 0 0 1
+1 * 136
+3 * 136 0 136
+1 * 136
+4 * 136 0 136
+4 +2 136 136
+4 * 136 136
+4 * 136
+3 * 136 136
+4 * 136 136
+3 * 136
+3 * 136
+3 * 136
+4 * 136
+3 * 136 136
+4 * 136 136
+3 -1 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(188)
calls=136 0x403d98 +11 
* * 18712 5106 3260 1 0 0 1 0 0 3638 23 272
+5 +1 136 136
+4 * 136
+3 * 136 0 136
cfn=(192)
calls=136 0x403296 -82 
* * 3128 1088 1088 1 0 0 1
+5 * 136
jump=136 +28 * 
* * 
+28 * 136
+4 * 136 136
+1 * 136 136
+1 * 136 136

fn=(2)
0x402d74 645 568 0 568 1 0 0 1
+1 * 568
+3 * 568 0 568 0 0 1 0 0 1
+4 +1 568 568
+4 * 568 568 0 1 1 0 1 1
+4 * 568
+3 * 568 568
+4 * 568 568
+3 * 568
+3 * 568
+3 * 568
+4 * 568 568
+1 * 568 568

fn=(20)
0x404412 179 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(22)
calls=136 0x404236 -14 
* * 37216 7116 6732 21 14 8 21 14 8 5340 145 272
+5 * 136 136
+4 * 136 0 136
+3 +1 136 136
+4 * 136 136 0 1 0 0 1
+3 * 136 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+3 * 136 136
+4 * 136
+4 * 136
+3 * 136 136
+4 * 136 0 136
+4 +1 136 136
+1 * 136 136

fn=(94)
0x40432a 179 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136
+4 * 136 136 0 1 0 0 1
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(96)
calls=136 0x403fbe -14 
* * 36711 7184 6328 15 4 15 15 4 15 5267 124 272
+5 * 136 136
+4 * 136 0 136
+3 +1 136 136
+4 * 136 136
+3 * 136 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+3 * 136 136
+4 * 136
+4 * 136
+3 * 136 136
+4 * 136 0 136
+4 +1 136 136
+1 * 136 136

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 68 0 68
+1 * 68
+3 * 68 0 0 1 0 0 1
+4 * 68 0 68
+4 * 68 0 68
+4 +2 68 68
+4 * 68 68
+4 * 68 68
+4 * 68 68
+4 * 68
+3 * 68 0 0 0 0 0 0 0 0 68
jcnd=6/68 +51 +10 
* * 
+2 +3 62 62
+4 * 62 62
+4 * 62 62
+4 -1 62 62
+4 * 62
+3 * 62
+3 * 62 0 62
cfi=(3)
cfn=(264)
calls=62 0x4036b1 215 
* * 2356 806 868 0 4 1 0 4 1 62
+5 +2 62 62
+4 * 62 62
+4 * 62
+4 * 62 62
+4 * 62 0 62
+4 * 62
jump=62 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246)
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8446 2615 2263 27 7 12 27 7 12 478 44 35
+5 +2 68 68
+1 * 68 68

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40)
0x40333c 113 290 0 290 1 0 0 1
+1 * 290
+3 * 290 0 290 1 0 0 1
+4 +1 290 290
+4 * 290 290
+1 * 290 290

fn=(112)
0x403a68 547 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136 136
+3 * 136 0 136
+4 * 136
+4 * 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(10)
cfn=(110)
calls=136 0x404380 726 
* * 1360 680 544
+5 * 136 136
+4 * 136 136
+1 * 136 136

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 136 0 136
+1 * 136
+3 * 136 0 136
+1 * 136
+4 * 136 0 136 1 0 0 1
+4 +2 136 136
+4 * 136
+3 * 136 0 136
cfn=(106)
calls=136 0x40325e 113 
* * 816 408 272
+5 * 136
+3 * 136 136
+4 * 136 136
+4 * 136 136
+4 * 136 136
+3 -1 136
+3 * 136
+3 * 136 0 136
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=136 0x40326c 148 
* * 4216 1360 1632 4 0 0 4
+5 +1 136 136
+4 * 136
+3 * 136 0 136
cfn=(156)
calls=136 0x4031ec 159 
* * 25858 7740 5158 25 5 0 25 5 0 3668 77 272
+5 * 136
jump=136 +28 * 
* * 
+28 * 136 0 0 1 0 0 1
+4 * 136 136
+1 * 136 136
+1 * 136 136

fn=(158)
0x403ce6 171 142 0 142 1 0 0 1
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 * 142 0 142
+4 +2 142 142
+5 * 142 0 0 0 0 0 0 0 0 142
+2 +1 142 142
+4 * 142 142
+4 * 142 142
+4 * 142
+3 * 142
+3 * 142 0 142
cfi=(5)
cfn=(160)
calls=142 0x4044d6 -65 
* * 17406 4502 2812 22 5 0 22 5 0 3662 79 284
+5 +1 142 142
+1 * 142 142

fl=(12)
fn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404c52 424 136 0 136
+1 * 136
+3 * 136 0 136
+2 * 136 0 136
+1 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +4 136 136
+4 * 136
+3 * 136 0 136
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=136 0x40492d 277 
* * 2040 816 680 2 0 0 2
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=136 0x404d9d 277 
* * 3400 1224 1088 2 0 1 2 0 1
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(66)
calls=136 0x404d9d 277 
* * 3400 1224 1088
+5 * 136
+3 * 136
+3 * 136
+3 * 136 0 136
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=136 0x404db7 -49 
* * 21334 5800 4988 15 3 3 15 3 3 1484 84 268 33
+5 +1 136
+4 * 136 136
+1 * 136 136
+2 * 136 136
+1 * 136 136

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 172 0 172 1 0 0 1
+1 * 172
+3 * 172
+4 * 172 0 172
+4 +1 172 172
+4 * 172
+3 * 172 0 172 1 0 0 1
cfi=(13)
cfn=(64)
calls=172 -33 -66 
* * 1032 516 344
+5 * 172 172
+1 * 172 172

fn=(66)
0x404d9d 277 272 0 272
+1 * 272
+3 * 272
+4 * 272 0 272
+4 +1 272 272
+4 * 272
+3 * 272 0 272
cfi=(13)
cfn=(68)
calls=272 0x404f1a -58 
* * 4352 1632 1360 2 0 1 2 0 1
+5 * 272 272
+1 * 272 272

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 136 0 136
+1 * 136
+3 * 136 0 136
+1 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +10 136 136
+4 * 136
+3 * 136 0 136
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=136 0x404bc6 288 
* * 2040 816 680 3 0 0 3
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(122)
calls=136 0x404bc6 288 
* * 2040 816 680
+5 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=136 0x404be0 -36 
* * 33982 10016 9204 4 1 4 4 1 4 1484 76 268
+5 +1 136
+4 * 136 136
+1 * 136 136
+1 * 136 136

fn=(128)
0x404878 277 172 0 172
+1 * 172
+3 * 172
+4 * 172 0 172 1 0 0 1
+4 +1 172 172
+4 * 172
+3 * 172 0 172
cfi=(13)
cfn=(130)
calls=172 -33 -66 
* * 1032 516 344 0 0 1 0 0 1
+5 * 172 172
+1 * 172 172

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 272 0 272
+1 * 272
+3 * 272
+4 * 272 0 272
+4 +1 272 272
+4 * 272
+3 * 272 0 272
cfi=(13)
cfn=(134)
calls=272 0x404e98 -58 
* * 4352 1632 1360 2 0 0 2
+5 * 272 272
+1 * 272 272

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +8 136 0 136
+4 +3 136 136
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=136 0x404eb5 -22 
* * 19294 5120 4172 1 1 4 1 1 4 1484 76 268
+5 +1 136 136
+1 * 136 136

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 272 0 272 1 0 0 1
+1 * 272
+3 * 272
+4 * 272 0 272
+4 +1 272 272
+4 * 272
+3 * 272 0 272
cfi=(13)
cfn=(124)
calls=272 0x404d36 -77 
* * 1632 816 544 2 0 0 2
+5 * 272 272
+1 * 272 272

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 272 0 272 1 0 0 1
+1 * 272
+3 * 272
+4 * 272 0 272 1 0 0 1
+4 +1 272 272
+4 * 272
+3 * 272 0 272
cfi=(13)
cfn=(58)
calls=272 0x404d8f -77 
* * 1632 816 544 1 0 0 1
+5 * 272 272
+1 * 272 272

fn=(74)
0x404f37 368 148 0 148
+1 * 148
+3 * 148
+4 * 148 0 148 1 0 0 1
+4 * 148 0 148
+4 * 148 0 148
+4 +2 148 148
+4 * 148 148
+4 * 148
+3 * 148
+3 * 148
+4 * 148 0 148
+4 +1 148 148
+5 * 148 0 0 0 0 0 0 0 0 148
jcnd=6/148 +33 +2 
* * 
+2 +1 142 142
+4 * 142
+8 * 142 142
+4 * 142 142
+4 * 142
+3 * 142 0 0 1 0 0 1
+3 * 142 0 142 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=142 0x3877c83840 0 
* * 15996 3734 3455 11 2 5 11 2 5 1396 86 137 33
* * 142 142 0 1 1 0 1 1 0 0 0 142
+5 +1 148 148
+4 * 148
+8 * 148 148
+4 * 148
+3 +1 148 148
+1 * 148 148

fn=(140)
0x404eb5 368 148 0 148
+1 * 148
+3 * 148
+4 * 148 0 148 1 0 0 1
+4 * 148 0 148
+4 * 148 0 148 0 0 1 0 0 1
+4 +2 148 148
+4 * 148 148
+4 * 148
+3 * 148
+3 * 148
+4 * 148 0 148
+4 +1 148 148
+5 * 148 0 0 0 0 0 0 0 0 148
jcnd=6/148 +33 +2 
* * 
+2 +1 142 142
+4 * 142
+8 * 142 142
+4 * 142 142
+4 * 142
+3 * 142
+3 * 142 0 142
cob=(2)
cfi=(9)
cfn=(78)
calls=142 0x3877c83840 0 
* * 15996 3734 3455 0 1 5 0 1 5 1396 79 137
* * 142 142 0 0 0 0 0 0 0 0 0 142
+5 +1 148 148
+4 * 148
+8 * 148 148
+4 * 148
+3 +1 148 148
+1 * 148 148

fn=(72)
0x404db7 379 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136 1 0 0 1
+4 * 136 0 136
+4 * 136 0 136
+4 +8 136 0 136
+4 +3 136 136
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(74)
calls=136 0x404f37 -22 
* * 19294 5120 4172 14 3 3 14 3 3 1484 84 268 33
+5 +1 136 136
+1 * 136 136

fn=(126)
0x404be0 424 136 0 136
+1 * 136
+3 * 136 0 136
+2 * 136 0 136
+1 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +4 136 136
+4 * 136
+3 * 136 0 136
cfn=(128)
calls=136 0x404878 277 
* * 2040 816 680 1 0 0 1
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(132)
calls=136 0x404d44 277 
* * 3400 1224 1088 2 0 0 2
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(132)
calls=136 0x404d44 277 
* * 3400 1224 1088
+5 * 136
+3 * 136
+3 * 136
+3 * 136 0 136
cfn=(138)
calls=136 0x404d5e -49 
* * 21334 5800 4988 1 1 4 1 1 4 1484 76 268
+5 +1 136
+4 * 136 136
+1 * 136 136
+2 * 136 136
+1 * 136 136

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 136 0 136
+1 * 136
+3 * 136 0 136
+1 * 136
+4 * 136 0 136 1 0 0 1
+4 * 136 0 136
+4 * 136 0 136
+4 +10 136 136
+4 * 136
+3 * 136 0 136
cfn=(56)
calls=136 0x404c38 288 
* * 2040 816 680 3 0 0 3
+5 * 136
+3 * 136 136
+4 * 136
+3 * 136 0 136
cfn=(56)
calls=136 0x404c38 288 
* * 2040 816 680
+5 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(60)
calls=136 0x404c52 -36 
* * 33982 10016 9204 20 3 4 20 3 4 1484 84 268 33
+5 +1 136
+4 * 136 136
+1 * 136 136
+1 * 136 136

fl=(10)
fn=(136)
0x404ffe 790 272 0 272 1 0 0 1
+1 * 272
+3 * 272 0 272
+4 +1 272 272
+4 * 272 272
+1 * 272 272

fn=(44)
0x404468 726 272 0 272
+1 * 272
+3 * 272 0 272
+4 * 272 0 272
+4 * 272 272
+4 * 272 272
+3 * 272 272
+4 * 272 0 272 1 0 0 1
+3 * 272 272
+1 * 272 272

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 272 0 272 1 0 0 1
+1 * 272
+3 * 272 0 272
+4 +1 272 272
+4 * 272 272
+1 * 272 272

fn=(110)
0x404380 726 272 0 272 1 0 0 1
+1 * 272
+3 * 272 0 272
+4 * 272 0 272
+4 * 272 272
+4 * 272 272
+3 * 272 272
+4 * 272 0 272
+3 * 272 272
+1 * 272 272

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 142 0 142 1 0 0 1
+1 * 142
+3 * 142 0 142
+4 * 142 0 142 1 0 0 1
+4 * 142 142
+1 * 142 142

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 142 0 142 1 0 0 1
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 +4 142 142
+4 * 142 142
+4 * 142
+3 * 142
+3 * 142 0 142
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=142 0x40454c -14 
* * 852 284 426 1 0 0 1
+5 +2 142 142
+1 * 142 142

fn=(150)
0x40326c 148 142 0 142
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 * 142 0 142
+4 +3 142 142 0 1 0 0 1
+4 * 142 142
+4 * 142
+3 * 142
+3 * 142 0 142
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=142 0x403d1a -29 
* * 2556 852 994 3 0 0 3
+5 +1 142 142
+1 * 142 142

fn=(180)
0x40334a 148 142 0 142
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 * 142 0 142
+4 +3 142 142
+4 * 142 142
+4 * 142
+3 * 142
+3 * 142 0 142
cfn=(182)
calls=142 0x403dcc -29 
* * 2556 852 994 2 0 0 2
+5 +1 142 142
+1 * 142 142

fn=(152)
0x403d1a 122 142 0 142 1 0 0 1
+1 * 142
+3 * 142
+4 * 142 0 142
+4 * 142 0 142
+4 +4 142 142
+4 * 142 142
+4 * 142
+3 * 142
+3 * 142 0 142
cfn=(154)
calls=142 0x4044f8 -14 
* * 852 284 426 2 0 0 2
+5 +2 142 142
+1 * 142 142

fn=(184)
0x40454c 112 142 0 142 1 0 0 1
+1 * 142
+3 * 142 0 142
+4 * 142 0 142
+4 * 142 142
+1 * 142 142

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1730 321 318 9 7 6 9 7 6 240 30 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 12 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1608 307 302 1 4 4 1 4 4 220 11 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 68 0 68 1 0 0 1
+1 * 68
+3 * 68
+4 * 68 0 68
+4 * 68 0 68
+4 +1 68 68
+4 * 68
+3 * 68 0 68
cfi=(2)
cfn=(2)
calls=68 0x402d74 645 
* * 884 408 136
+5 * 68
+3 * 68 0 68
+3 +1 68 68
+6 * 68 0 68
+3 * 68 68
+6 * 68 0 68
+3 +1 68 68
+6 * 68 0 68 1 0 0 1
+3 * 68 68
+6 * 68 0 68
+3 +2 68 0 68
+7 * 68
jump=68 +86 * 
* * 
+2 +1 2414 2414
+3 * 2414
+3 * 2414 2414
+4 * 2414
+3 * 2414
+3 * 2414 0 2414
cfi=(2)
cfn=(144)
calls=2414 0x402d9a 770 
* * 26554 12070 7242
+5 * 2414 2414
+4 * 2414 2414
+5 * 2414
+4 * 2414 0 2414
+5 +1 2414 2414
+3 * 2414
+3 * 2414 2414
+4 * 2414
+3 * 2414
+3 * 2414 0 2414
cfi=(2)
cfn=(146)
calls=2414 0x402dba 770 
* * 26554 12070 7242 1 0 0 1
+5 * 2414 2414
+2 * 2414
+4 * 2414 2414
+5 * 2414
+4 * 2414 0 2414
+5 -2 2414 0 2414
+4 * 2414 2414
+3 * 2414
+3 * 2414 2414
+3 * 2414 0 0 0 0 0 0 0 0 2414 69
jcnd=2346/2414 -93 +1 
* * 
-9 * 68 68 0 1 0 0 1
+3 * 68
+3 * 68 68
+3 * 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 -93 +1 
* * 
+2 +4 68 68
+3 * 68
+3 * 68
+4 * 68 68 0 1 0 0 1
+5 * 68
+4 * 68
+3 * 68 0 68
+5 +1 68 68
+3 * 68
+3 * 68
+4 * 68 68
+5 * 68
+4 * 68
+3 * 68 0 68
+5 +1 68 0 68
+7 * 68
jump=68 0x4016ee * 
* * 
+2 +1 2414 2414
+3 * 2414
+3 * 2414 2414
+4 * 2414
+3 * 2414 0 0 1 0 0 1
+3 * 2414 0 2414
cfi=(2)
cfn=(146)
calls=2414 0x402dba 770 
* * 26554 12070 7242
+5 * 2414 2414
+2 * 2414
+4 * 2414 2414
+5 * 2414 0 2414
+5 +1 2414 2414
+3 * 2414
+3 * 2414 2414
+4 * 2414
+3 * 2414
+3 * 2414 0 2414
cfi=(2)
cfn=(144)
calls=2414 0x402d9a 770 
* * 26554 12070 7242
+5 * 2414 2414
+4 * 2414 2414
+5 * 2414 0 2414
+5 +1 2414 2414
+5 * 2414 2414
+5 * 2414 2414
+5 * 2414
+4 * 2414 0 2414
+5 +1 2414 2414
+5 * 2414 2414
+5 * 2414 2414
+5 * 2414
+4 * 2414 0 2414
+5 -4 2414 0 2414
+4 * 2414 2414
+3 * 2414
+3 * 2414 2414
+3 * 2414 0 0 0 0 0 0 0 0 2414 69
jcnd=2346/2414 0x401672 +1 
* * 
-9 * 68 68 0 1 0 0 1
+3 * 68
+3 * 68 68
+3 * 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x401672 +1 
* * 
+6 +6 68 68 0 1 0 0 1
+5 * 68 68
+5 * 68 0 68
+5 +2 68 68
+3 +1 68 0 68
+3 * 68 68
+5 * 68 68
+1 * 68 68

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 68
+7 * 68
+7 * 68
+3 * 68
+3 * 68 0 68
cfi=(2)
cfn=(4)
calls=68 0x4030b2 310 
* * 56754 16327 14884 63 17 16 63 17 16 3420 162 270 33
+5 * 68
+7 * 68
+7 * 68
+3 * 68
+3 * 68 0 68
cfi=(2)
cfn=(80)
calls=68 0x402ff4 310 
* * 56666 16374 14702 37 5 17 37 5 17 3413 153 270
+5 * 68 0 0 1 0 0 1
+7 * 68
+7 * 68
+3 * 68
+3 * 68 0 68
cfn=(142)
calls=68 0x401585 -52 
* * 255476 112744 59092 8 0 0 8 0 0 4964 138
+5 * 68 0 68
+8 * 68 68
+6 * 68 0 68
+6 * 68
+7 * 68
+3 * 68 0 68
cfi=(2)
cfn=(148)
calls=68 0x402df4 414 
* * 17077 5366 3939 31 5 0 31 5 0 1834 40 136
+5 * 68
+7 * 68
+3 * 68 0 68 1 0 0 1
cfi=(2)
cfn=(178)
calls=68 0x402e74 414 
* * 16972 5341 3874 7 0 0 7 0 0 1819 13 136
+5 +2 68
+7 * 68
+7 * 68
+3 * 68
+3 * 68 0 68
cfi=(2)
cfn=(4)
calls=68 0x4030b2 310 
* * 56468 16309 14788 2 1 1 2 1 1 3404 67 270
+5 * 68
+7 * 68
+7 * 68
+3 * 68
+3 * 68 0 68
cfi=(2)
cfn=(80)
calls=68 0x402ff4 310 
* * 56051 16330 14566 0 0 2 0 0 2 3338 47 270
+5 * 68 68
+6 * 68 0 0 1 0 0 1
+7 * 68
+7 * 68 0 68
+6 * 68 68
+8 * 68
+3 * 68
+3 * 68 0 68
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=68 0x401719 -33 
* * 119884 49776 27574 4 0 0 4 0 0 2482 69
+5 * 68 0 68
+8 * 68 68
+6 * 68 0 68
+6 * 68
+7 * 68 0 0 1 0 0 1
+3 * 68 0 68
cfi=(2)
cfn=(148)
calls=68 0x402df4 414 
* * 17077 5366 3939 0 0 0 0 0 0 1834 37 136
+5 * 68
+7 * 68
+3 * 68 0 68
cfi=(2)
cfn=(178)
calls=68 0x402e74 414 
* * 16972 5341 3874 0 0 0 0 0 0 1819 10 136
+5 +2 68 68
+7 * 68
+3 * 68 0 68
cfi=(2)
cfn=(2)
calls=68 0x402d74 645 
* * 884 408 136
+5 * 68 68
+6 * 68
+3 * 68
+3 * 68
+3 * 68 68
+7 * 68
+3 * 68 0 0 1 0 0 1
+3 * 68 0 68
cfi=(2)
cfn=(144)
calls=68 0x402d9a 770 
* * 748 340 204
+5 * 68
+3 * 68
+7 * 68
+3 * 68
+3 * 68 0 68
cfi=(2)
cfn=(200)
calls=68 0x402eda 901 
* * 12536 4309 3493 27 9 8 27 9 8 582 23 35
+5 +1 68 68
+7 * 68
+3 * 68 0 68
cfi=(2)
cfn=(10)
calls=68 0x402f54 645 
* * 884 408 136 0 1 0 0 1
+5 * 68 68
+6 * 68
+3 * 68
+3 * 68
+3 * 68 68
+7 * 68 0 0 1 0 0 1
+3 * 68
+3 * 68 0 68
cfi=(2)
cfn=(146)
calls=68 0x402dba 770 
* * 748 340 204
+5 * 68
+3 * 68
+7 * 68
+3 * 68
+3 * 68 0 68
cfi=(2)
cfn=(244)
calls=68 0x402f7a 901 
* * 12684 4335 3513 28 11 13 28 11 13 608 44 35
+5 +1 68 68
+7 * 68
+3 * 68 0 68
cfi=(2)
cfn=(10)
calls=68 0x402f54 645 
* * 884 408 136
+5 * 68 68
+6 * 68
+3 * 68
+3 * 68
+3 * 68 68 0 1 0 0 1
+7 * 68
+3 * 68
+3 * 68 0 68
cfi=(2)
cfn=(146)
calls=68 0x402dba 770 
* * 748 340 204
+5 * 68 68
+2 * 68
+4 * 68 68
+8 * 68 68
+8 * 68 0 68
+8 +1 68 68
+7 * 68
+3 * 68 0 68
cfi=(2)
cfn=(2)
calls=68 0x402d74 645 
* * 884 408 136
+5 * 68 68 0 1 0 0 1
+6 * 68
+3 * 68
+3 * 68
+3 * 68 68
+7 * 68
+3 * 68
+3 * 68 0 68
cfi=(2)
cfn=(144)
calls=68 0x402d9a 770 
* * 748 340 204
+5 * 68 68
+4 * 68 68
+8 * 68
+4 * 68 68
+8 * 68
+3 * 68 0 68
+8 +2 68 0 68
+7 -12 68 68
+8 * 68 68
+7 * 68 0 0 0 0 0 0 0 0 68 2
jcnd=1/68 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 68
+7 * 68
+3 * 68 0 68
cfi=(2)
cfn=(2)
calls=68 0x402d74 645 
* * 884 408 136 2 0 1 2 0 1
+5 * 68
+3 * 68 68
+7 * 68
+3 * 68 0 68
cfi=(2)
cfn=(2)
calls=68 0x402d74 645 
* * 884 408 136 0 1 0 0 1
+5 * 68
+3 * 68 0 0 0 0 0 0 0 0 68
+2 * 68 0 0 1 0 0 1
+5 * 68
jump=68 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 68
+2 * 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 68 0 68
+1 * 68
+3 * 68
+4 * 68 0 68
+4 * 68 0 68
+4 * 68 0 68
+5 +1 68 68
+4 * 68
+3 * 68 0 68
cfi=(2)
cfn=(2)
calls=68 0x402d74 645 
* * 884 408 136
+5 * 68
+3 * 68 0 68
+3 +1 68 68 0 1 0 0 1
+6 * 68 0 68
+3 * 68 68
+6 * 68 0 68
+3 +2 68 0 68
+7 * 68
jump=68 +86 * 
* * 
+2 +1 2414 2414
+3 * 2414
+3 * 2414 2414
+4 * 2414
+3 * 2414
+3 * 2414 0 2414
cfi=(2)
cfn=(144)
calls=2414 0x402d9a 770 
* * 26554 12070 7242
+5 * 2414 2414
+4 * 2414 2414
+5 * 2414
+4 * 2414 0 2414
+5 +1 2414 2414
+3 * 2414
+3 * 2414 2414
+4 * 2414
+3 * 2414
+3 * 2414 0 2414
cfi=(2)
cfn=(146)
calls=2414 0x402dba 770 
* * 26554 12070 7242
+5 * 2414 2414
+2 * 2414
+4 * 2414 2414
+5 * 2414
+4 * 2414 0 2414
+5 -2 2414 0 2414
+4 * 2414 2414
+3 * 2414
+3 * 2414 2414
+3 * 2414 0 0 0 0 0 0 0 0 2414 69
jcnd=2346/2414 -93 +1 
* * 
-9 * 68 68 0 1 0 0 1
+3 * 68
+3 * 68 68
+3 * 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 -93 +1 
* * 
+2 +4 68 68
+3 * 68
+3 * 68 0 0 1 0 0 1
+4 * 68 68
+5 * 68
+4 * 68
+3 * 68 0 68
+5 +1 68 68
+3 * 68
+3 * 68
+4 * 68 68
+5 * 68
+4 * 68
+3 * 68 0 68
+5 +1 68 68
+5 * 68 68
+5 * 68 68
+5 * 68 0 0 1 0 0 1
+4 * 68
+3 * 68 0 68
+5 +2 68 68
+3 +1 68 0 68
+3 * 68 68
+5 * 68 68
+1 * 68 68

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 284 0 284 1 0 0 1
+2 0 284 0 284
+2 0 284 0 284
+2 0 284
+3 0 284 0 284
+2 0 284 0 284
+1 0 284 0 284
+1 0 284
+3 0 284
+4 0 284 284
+4 0 284 0 284
+4 0 284
+3 0 284
+4 0 284
+3 0 284
+3 0 284
+3 0 284 0 0 1 0 0 1 0 0 284
+6 0 284
+4 0 284 0 0 0 0 0 0 0 0 284
+6 0 284
+4 0 284 0 0 0 0 0 0 0 0 284
+6 0 284 284
+7 0 284 0 0 0 0 0 0 0 0 284 2
jcnd=160/284 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 160
+2 0 160 0 0 0 0 0 0 0 0 160
+6 0 160 160 0 1 0 0 1
+4 0 160
+3 0 160
+2 0 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 0x3877c78a40 0 
* 0 
+6 0 160 160
+4 0 160
+3 0 160 0 0 0 0 0 0 0 0 160
+6 0 160 160
+5 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 0x3877c7907c 0 
* 0 
+6 0 160 160
+5 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
+6 0 160
+4 0 160 0 0 1 0 0 1 0 0 160
+6 0 160
+4 0 160 160
+7 0 160 0 0 0 0 0 0 0 0 160
+6 0 160 160
+6 0 160
+2 0 160 0 0 0 0 0 0 0 0 160
+6 0 160 160
+4 0 160 0 0 0 0 0 0 0 0 160 2
jcnd=158/160 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 160 160 0 1 0 0 1
+4 0 160 0 0 0 0 0 0 0 0 160
+6 0 160 160
+6 0 160 0 0 1 0 0 1 0 0 160 34
jcnd=22/160 0x3877c78a78 0 
* 0 
+6 0 138 138
+5 0 138 138
+5 0 138 138
+4 0 138 0 0 0 0 0 0 0 0 138
+6 0 138 138
+4 0 138 0 0 0 0 0 0 0 0 138
+6 0 138 138
+9 0 138 0 138
+4 0 138 0 138
+4 0 138 0 0 0 0 0 0 0 0 138 4
jcnd=130/138 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 138
+3 0 138
+4 0 138 138
+4 0 138 138
+4 0 138 0 0 0 0 0 0 0 0 138
-12 0 22
+4 0 22 22
+4 0 22 22
+4 0 22 0 0 0 0 0 0 0 0 22
+6 0 160
+7 0 160 0 160
+4 0 160 0 160
+4 0 160 0 0 0 0 0 0 0 0 160 60
jcnd=92/160 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 92 0 92
+4 0 92
+3 0 92 0 92
+4 0 92
+4 0 92 0 92
+4 0 92 0 92
+4 0 92
+7 0 92 0 0 0 0 0 0 0 0 92
jcnd=92/92 0x3877c78b20 0 
* 0 
0x3877c78a40 0 160 0 0 1 0 0 1
+5 0 160 160
+4 0 160 160
+7 0 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 +16 0 
* 0 
+16 0 160 0 160
+5 0 160 0 0 0 0 0 0 0 0 160
+6 0 160
+3 0 160
jump=160 0x3877c7878f 0 
* 0 
+10 0 22 0 22
+6 0 22 0 0 1 0 0 1
jump=22 0x3877c78885 0 
* 0 
0x3877c78b20 0 160 160 0 1 0 0 1
+4 0 160
+2 0 160 0 0 0 0 0 0 0 0 160
+6 0 160 160
+7 0 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 +15 0 
* 0 
+15 0 160 0 160 1 0 0 1
+4 0 160 0 0 0 0 0 0 0 0 160 2
+6 0 160
+4 0 160 160
+1 0 160 160
+1 0 160 160
+2 0 160 160
+2 0 160 160
+2 0 160 160
+2 0 160 160
0x3877c7907c 0 160 160 0 1 1 0 1 1
+4 0 160 0 0 1 0 0 1
+7 0 160
+4 0 160
+3 0 160
+3 0 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 274 0 0 1 0 0 1
+7 0 274
+3 0 274
+3 0 274 274 0 0 1 0 0 1
+4 0 274
+4 0 274 0 0 0 0 0 0 0 0 0 0 274 33
jump=32 0x3877c89be8 0 
* 0 
jump=38 0x3877c89bd0 0 
* 0 
jump=32 0x3877c89bb8 0 
* 0 
jump=32 +11 0 
* 0 
jump=32 0x3877c89c48 0 
* 0 
jump=34 0x3877c89c30 0 
* 0 
jump=32 0x3877c89c18 0 
* 0 
jump=42 0x3877c89c00 0 
* 0 
+11 0 32 32
+3 0 32
+4 0 32
+4 0 32 32
+4 0 32
+4 0 32 0 32
+4 0 32
+9 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-40 0 558 558
+4 0 558 0 558
+4 0 558 558
+4 0 558 0 558
+4 0 558 558
+4 0 558 0 558 0 0 1 0 0 1
+4 0 558 558
+4 0 558 0 558
+4 0 558
+4 0 558
+4 0 558 0 0 0 0 0 0 0 0 558 17
jcnd=238/558 0x3877c89c60 0 
* 0 
-32 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
jcnd=10/34 0x3877c89c60 0 
* 0 
-24 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-16 0 42 42 0 1 0 0 1
+4 0 42 0 42
+4 0 42 0 0 1 0 0 1
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42 4
jcnd=10/42 0x3877c89c60 0 
* 0 
+6 0 424
+4 0 424 424
+3 0 424 0 424 0 0 1 0 0 1
+3 0 424 424
+4 0 424 0 424 0 0 3 0 0 3
+4 0 424 424
+4 0 424 0 424 0 0 4 0 0 4
+4 0 424 424
+4 0 424 0 424
+4 0 424
jump=424 -80 0 
* 0 
-30 0 32 32
+3 0 32 0 32
+3 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
-24 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38
jump=38 -80 0 
* 0 
-16 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
+8 0 32 32
+3 0 32
+4 0 32 0 0 1 0 0 1
+4 0 32
+4 0 32
jump=32 -39 0 
* 0 
+9 0 38
+3 0 38 0 0 0 0 0 0 0 0 38
+6 0 38 38
+3 0 38
+4 0 38
jump=38 -72 0 
* 0 
+8 0 32
+4 0 32 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32
+4 0 32
jump=32 -99 0 
* 0 
+11 0 42 42 0 1 0 0 1
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b78 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b70 0 
* 0 
+9 0 34 34
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b68 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b60 0 
* 0 
+9 0 274 0 274 1 0 0 1
+3 0 274 274

fn=(104) alloc_perturb
0x3877c77180 0 168 168 0 1 0 0 1
+6 0 168
+2 0 168 0 0 0 0 0 0 0 0 168
+2 0 168 168

fn=(38) _int_malloc
0x3877c79a00 0 284 0 284 1 0 0 1
+2 0 284
+3 0 284 0 284
+2 0 284 0 284
+2 0 284 0 284 0 0 1 0 0 1
+2 0 284
+3 0 284 0 284
+1 0 284 0 284
+1 0 284
+4 0 284
+4 0 284 0 0 0 0 0 0 0 0 284
+6 0 284
+4 0 284
+6 0 284
+3 0 284
+4 0 284
+4 0 284
+4 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
+6 0 284 284 0 1 1 0 1 1
+7 0 284 0 0 0 0 0 0 0 0 284 5
jcnd=162/284 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 116 116
+6 0 116
+4 0 116
+2 0 116 0 0 0 0 0 0 0 0 116
+6 0 116
+3 0 116
+4 0 116 116
+1 0 116 116
+1 0 116 116
+2 0 116 116
+2 0 116 116
+2 0 116 116
+2 0 116 116
-14 0 168
+4 0 168 168
+1 0 168 168
+1 0 168 168
+2 0 168 168
+2 0 168 168
+2 0 168 168
+2 0 168 168
+7 0 179
+7 0 179 0 0 1 0 0 1 0 0 179
+2 0 179
+3 0 179
+5 0 179
+3 0 179
+4 0 179 0 179
+4 0 179
+2 0 179
+5 0 179 179 0 0 5 0 0 5
+4 0 179
+3 0 179 0 0 0 0 0 0 0 0 179
jcnd=179/179 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 179 0 0 1 0 0 1
+3 0 179
+3 0 179
+3 0 179
+4 0 179
+3 0 179
+4 0 179 0 179
+5 0 179
+3 0 179 0 179
+4 0 179 0 179
+4 0 179 0 179
+5 0 179
+3 0 179
+3 0 179
+3 0 179
+3 0 179
+4 0 179
+4 0 179 0 0 1 0 0 1
+4 0 179 0 179
+4 0 179
+4 0 179 0 179
+5 0 179 0 179
+5 0 179
+3 0 179
+3 0 179 0 179
+5 0 179
+5 0 179
+3 0 179 0 179
+4 0 179 0 179
+4 0 179
+6 0 179 0 179
+4 0 179 0 179
+5 0 179 0 0 1 0 0 1
+3 0 179
+3 0 179
+3 0 179
jump=179 +87 0 
* 0 
+8 0 139
+3 0 139
+4 0 139
+2 0 139
+2 0 139
+3 0 139
+3 0 139
+3 0 139
+2 0 139
+2 0 139
+5 0 139
+2 0 139 139 0 0 1 0 0 1
+4 0 139
+3 0 139
+4 0 139 0 139
+4 0 139 0 139
+8 0 139
+7 0 139 0 139
+4 0 139 0 139
+4 0 139 0 139
+4 0 139 0 0 0 0 0 0 0 0 139
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 384 384 0 1 0 0 1
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384 16
jcnd=148/384 0x3877c79ef0 0 
* 0 
+6 0 236 236
+4 0 236 236
+4 0 236
+4 0 236 0 0 0 0 0 0 0 0 236
+6 0 236 236 0 1 1 0 1 1
+7 0 236 0 0 0 0 0 0 0 0 236
+6 0 236
+4 0 236
+7 0 236 0 0 0 0 0 0 0 0 236
+2 0 236
+3 0 236 0 0 0 0 0 0 0 0 236 60
jcnd=163/236 0x3877c79e28 0 
* 0 
+6 0 216
+3 0 216 0 216
+4 0 216 0 216
+5 0 216 0 0 0 0 0 0 0 0 216 8
jcnd=11/216 0x3877c7a090 0 
* 0 
+6 0 205
+7 0 205 0 0 0 0 0 0 0 0 205 8
jcnd=139/205 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66 0 0 2 0 0 2
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 3
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 163 163 0 1 0 0 1
+4 0 163
+3 0 163 0 0 0 0 0 0 0 0 163 8
jcnd=81/163 0x3877c79ce1 0 
* 0 
+6 0 82 82
+5 0 82 0 0 0 0 0 0 0 0 82 6
jcnd=62/82 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 148 0 0 1 0 0 1
+7 0 148
+3 0 148 0 0 0 0 0 0 0 0 148
+6 0 148 148 0 1 0 0 1
+4 0 148
+3 0 148
+3 0 148
+2 0 148
+4 0 148
+3 0 148
+3 0 148
+2 0 148
+2 0 148
+2 0 148
+2 0 148 148 0 0 1 0 0 1
+8 0 148
+5 0 148
+5 0 148
+2 0 148 0 0 0 0 0 0 0 0 148
-2 0 67
+2 0 67 0 0 0 0 0 0 0 0 67
+2 0 215
+2 0 215 0 0 0 0 0 0 0 0 215 9
jcnd=137/215 +64 0 
* 0 
+2 0 78
+8 0 78
+3 0 78
+3 0 78 0 0 0 0 0 0 0 0 78
-6 0 67
+3 0 67
+3 0 67 0 0 0 0 0 0 0 0 67
+2 0 145
+2 0 145 145
+8 0 145
+2 0 145 0 0 0 0 0 0 0 0 145 8
jcnd=67/145 -20 0 
* 0 
+2 0 78
+2 0 78
+5 0 78
+3 0 78
+3 0 78
+2 0 78
+2 0 78
+5 0 78 0 0 0 0 0 0 0 0 78
+2 0 78
+2 0 78
+4 0 78
+2 0 78
+2 0 78 0 0 0 0 0 0 0 0 78 5
jcnd=17/78 -8 0 
* 0 
-8 0 552
+4 0 552
+2 0 552
+2 0 552 0 0 0 0 0 0 0 0 552 52
jcnd=416/552 -8 0 
* 0 
-2 0 137 0 0 1 0 0 1
+2 0 137 0 0 0 0 0 0 0 0 137 7
jcnd=119/137 -8 0 
* 0 
+2 0 215 215 0 0 3 0 0 3
+4 0 215 0 0 1 0 0 1
+3 0 215 0 0 0 0 0 0 0 0 215 60
jcnd=148/215 0x3877c7a1cf 0 
* 0 
+6 0 67
+2 0 67
+4 0 67
+2 0 67
+2 0 67
+2 0 67 0 67
+8 0 67
jump=67 0x3877c79f30 0 
* 0 
0x3877c7a090 0 11 0 0 1 0 0 1
+7 0 11 0 11
+6 0 11
+3 0 11 0 0 0 0 0 0 0 0 11
jcnd=11/11 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 148 148 0 1 1 0 1 1
+4 0 148 148
+4 0 148
+3 0 148 148
+4 0 148
+4 0 148
+3 0 148
+3 0 148 148
+4 0 148 0 0 0 0 0 0 0 0 148
+6 0 148 148
+4 0 148 0 0 0 0 0 0 0 0 148
+6 0 148 148 0 1 0 0 1
+8 0 148 0 148
+4 0 148 0 148
+4 0 148 0 0 0 0 0 0 0 0 148 5
jcnd=80/148 +38 0 
* 0 
+2 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 80
+4 0 80 0 0 0 0 0 0 0 0 80 7
jcnd=9/80 0x3877c7a2e3 0 
* 0 
+6 0 139 139
+4 0 139 139 0 1 0 0 1
+4 0 139 0 0 0 0 0 0 0 0 139
+6 0 139
+4 0 139
+7 0 139 0 139 0 0 7 0 0 7
+4 0 139 0 139
+4 0 139 0 139
+4 0 139 0 139
+4 0 139 0 0 0 0 0 0 0 0 139
+2 0 139 0 139
+5 0 139
+7 0 139 0 0 0 0 0 0 0 0 139 4
jcnd=132/139 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 132
+7 0 132 0 132
+4 0 132
+3 0 132
+3 0 132
+4 0 132
+3 0 132
+4 0 132
+3 0 132
+3 0 132
+4 0 132 0 132
+4 0 132 0 132 0 0 1 0 0 1
+4 0 132
jump=132 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 9
+7 0 9 0 9
+6 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +7 0 
* 0 
+7 0 148
+4 0 148 0 0 1 0 0 1
+3 0 148
+3 0 148 0 148
cfn=(104)
calls=148 0x3877c77180 0 
* 0 592 296 0 0 0 0 0 0 0 148
+5 0 148
+3 0 148
jump=148 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 284 0 284 1 0 0 1
+5 0 284 0 284
+5 0 284
+3 0 284 0 284
+5 0 284
+4 0 284 284 0 0 1 0 0 1
+7 0 284 284 0 0 1 0 0 1
+3 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
+6 0 284 284 0 0 1 0 0 1
+7 0 284 284 0 1 1 0 1 1
+4 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
+2 0 284 284 0 0 1 0 0 1
+3 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
jcnd=284/284 +97 0 
* 0 
+18 0 284
+3 0 284
+3 0 284 0 284
cfn=(38)
calls=284 0x3877c79a00 0 
* 0 48865 6976 7716 27 21 32 27 21 32 7375 302
+5 0 284
+3 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
+2 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
+2 0 284
+3 0 284 0 0 0 0 0 0 0 0 284 2
+2 0 284 284
+7 0 284 0 0 0 0 0 0 0 0 284
jcnd=284/284 +13 0 
* 0 
+13 0 284 0 284
+2 0 284 0 0 0 0 0 0 0 0 284 6
+6 0 284
+3 0 284 284
+4 0 284 284
+5 0 284 284
+5 0 284
+4 0 284 284
+1 0 284 0 0 1 0 0 1
+5 0 284 284 0 0 1 0 0 1
+7 0 284 0 0 0 0 0 0 0 0 284
jcnd=284/284 +14 0 
* 0 
+14 0 284 0 284 1 0 0 1
+3 0 284 0 0 0 0 0 0 0 0 284
+6 0 284
jump=284 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 284 0 284 1 0 0 1
+2 0 284
+3 0 284
+3 0 284 0 284
+2 0 284
+3 0 284 0 284
+1 0 284
+3 0 284 0 284
+1 0 284
+3 0 284
+4 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
+6 0 284
+4 0 284
+3 0 284 0 0 0 0 0 0 0 0 284 4
jcnd=10/284 0x3877c838d1 0 
* 0 
+2 0 274
+3 0 274
+3 0 274
+3 0 274
+3 0 274
+3 0 274 0 0 0 0 0 0 0 0 274
jcnd=274/274 +41 0 
* 0 
+41 0 274 0 0 1 0 0 1
+3 0 274 0 0 0 0 0 0 0 0 274
jcnd=274/274 0x3877c839c0 0 
* 0 
+24 0 274
+3 0 274
+4 0 274
+3 0 274
+3 0 274
+3 0 274
+3 0 274
+3 0 274 0 0 0 0 0 0 0 0 274 132
jcnd=142/274 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 142
+10 0 142 142 0 0 2 0 0 2
+3 0 142
+4 0 142 0 142
+3 0 142
+4 0 142
+4 0 142 0 0 0 0 0 0 0 0 142
jcnd=142/142 -18 0 
* 0 
-18 0 482 482
+3 0 482
+4 0 482 0 482
+3 0 482
+4 0 482
+4 0 482 0 0 0 0 0 0 0 0 482 8
jcnd=340/482 -18 0 
* 0 
+2 0 284
+4 0 284
+3 0 284 284
+1 0 284 284
+1 0 284 284
+2 0 284 284 0 1 0 0 1
+2 0 284 284
0x3877c839c0 0 274 0 0 1 0 0 1
+3 0 274
+3 0 274
+3 0 274
+4 0 274 0 274 0 0 1 0 0 1
cfn=(284)
calls=274 0x3877c89b20 0 
* 0 15810 5424 4876 6 1 9 6 1 9 768 21 274 33
+5 0 274
jump=274 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 284 284 0 1 1 0 1 1
+7 0 284 284 0 0 1 0 0 1
+3 0 284
+3 0 284 0 0 1 0 0 1 0 0 284
+6 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
+6 0 284 284
+4 0 284
+4 0 284
+2 0 284 0 0 0 0 0 0 0 0 284
+2 0 284
+2 0 284
+7 0 284 0 0 0 0 0 0 0 0 284
jcnd=284/284 +14 0 
* 0 
+14 0 284
+2 0 284
cfn=(170)
calls=284 0x3877c78650 0 
* 0 25824 6694 4078 17 1 0 17 1 0 5880 108

totals: 711967 263429 171911 221 52 59 221 52 59 29723 805 1694 33
