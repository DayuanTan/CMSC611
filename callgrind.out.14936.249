version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 249


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 234206411 - 235054263
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1116 0 0 1 0 0 1
+3 0 1116 0 0 0 0 0 0 0 0 1116
+2 0 1116
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1116 0x3877c7b8b0 0 
* 0 124005 31699 15969 21 4 0 21 4 0 30345 482
* 0 1116 1116 0 1 1 0 1 1 0 0 0 1116

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1116 0 1116 1 0 0 1
+1 0 1116
+5 0 1116
+3 0 1116 0 1116
+1 0 1116
+4 0 1116 0 0 1 0 0 1
+3 0 1116
+4 0 1116
+3 0 1116 0 1116 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1116 0x3877c7aa50 0 
* 0 297564 42969 42785 46 39 48 46 39 48 49822 1701
* 0 1116 1116 0 1 1 0 1 1 0 0 0 1116
+5 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116
jcnd=1116/1116 +96 0 
* 0 
+96 0 1116 0 0 1 0 0 1
+4 0 1116 1116
+1 0 1116 1116
+1 0 1116 1116

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 275 0 275
+1 * 275
+3 * 275
+4 * 275 0 275
+4 * 275 0 275
+4 * 275 0 275
+4 +1 275 275
+4 * 275 275
+4 * 275 275
+4 * 275
+3 * 275
+3 * 275 0 275
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=275 0x403df2 -87 
* * 6600 2200 2475 0 18 3 0 18 3 275 2
+5 * 275 275
+1 * 275 275

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 550 0 550 1 0 0 1
+1 * 550
+3 * 550 0 550
+4 * 550 550
+4 * 550 550
+1 * 550 550

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 275 0 275
+1 * 275
+3 * 275
+4 * 275 0 275
+4 * 275 0 275
+4 * 275 0 275
+4 +1 275 275
+4 * 275 275
+4 * 275 275
+4 * 275
+3 * 275
+3 * 275 0 275
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=275 0x40406a -87 
* * 6600 2200 2475 0 17 9 0 17 9 275
+5 * 275 275
+1 * 275 275

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 550 0 550
+1 * 550
+3 * 550 0 550
+4 * 550 550
+4 * 550 550
+1 * 550 550

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 630 0 630
+1 * 630
+3 * 630 0 630 0 0 1 0 0 1
+4 +1 630 630
+4 * 630 630
+1 * 630 630

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1100 0 1100 1 0 0 1
+1 * 1100
+3 * 1100
+4 * 1100 0 1100
+4 +1 1100
+4 * 1100
+3 * 1100 0 1100
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1100 0x404ffe 790 
* * 6600 3300 2200 1 0 0 1
+5 * 1100 1100
+3 * 1100 1100
+1 * 1100 1100

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1100 0 1100 1 0 0 1
+1 * 1100
+3 * 1100 0 1100
+4 +1 1100 1100
+4 * 1100 1100
+1 * 1100 1100

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1100 0 1100 1 0 0 1
+1 * 1100
+3 * 1100
+4 * 1100 0 1100
+4 +1 1100
+4 * 1100
+3 * 1100 0 1100 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1100 0x40500c 790 
* * 6600 3300 2200 1 0 0 1
+5 * 1100 1100
+3 * 1100 1100
+1 * 1100 1100

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 630 0 630
+1 * 630
+3 * 630 0 630
+4 +1 630 630
+4 * 630 630
+1 * 630 630

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1100 0 1100 1 0 0 1
+1 * 1100
+3 * 1100 0 1100
+4 +1 1100 1100 0 1 0 0 1
+4 * 1100 1100
+1 * 1100 1100

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 550 0 550
+1 * 550
+3 * 550 0 550
+4 * 550 0 550
+4 * 550 550
+4 * 550 550
+1 * 550 550

fl=(5)
fn=(102)
0x4048de 113 574 0 574 1 0 0 1
+1 * 574
+3 * 574 0 574
+4 +1 574
+10 * 574 574
+1 * 574 574

fn=(266)
0x40406a 129 275 0 275
+1 * 275
+3 * 275
+4 * 275 0 275
+4 * 275 0 275
+4 * 275 0 275
+4 +1 275 275
+4 * 275
+3 * 275
+5 * 275 0 275
cfi=(16)
cfn=(226)
calls=275 0x402d61 -20 
* * 1925 825 825
+5 * 275
+3 * 275 0 0 0 0 0 0 0 0 275
+2 * 275 275
+4 * 275 275 0 0 17 0 0 17
+2 * 275 0 275 0 0 9 0 0 9
+2 * 275 275
+1 * 275 275

fn=(28)
0x404992 113 574 0 574 1 0 0 1
+1 * 574
+3 * 574 0 574
+4 +1 574
+10 * 574 574
+1 * 574 574

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 550 0 550
+1 * 550
+3 * 550 0 550
+4 * 550 550
+1 * 550 550

fn=(224)
0x403df2 129 275 0 275
+1 * 275
+3 * 275
+4 * 275 0 275
+4 * 275 0 275
+4 * 275 0 275
+4 +1 275 275
+4 * 275
+3 * 275
+5 * 275 0 275
cfi=(16)
cfn=(226)
calls=275 0x402d61 -20 
* * 1925 825 825
+5 * 275
+3 * 275 0 0 0 0 0 0 0 0 275 2
+2 * 275 275
+4 * 275 275 0 0 18 0 0 18
+2 * 275 0 275 0 0 3 0 0 3
+2 * 275 275
+1 * 275 275

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +1 558 558
+4 * 558
+3 * 558 0 558
cob=(5)
cfi=(8)
cfn=(164)
calls=558 0x387e4bb2f0 0 
* * 60810 15103 7027 23 4 0 23 4 0 14742 433 558
* * 558 558 0 1 1 0 1 1 0 0 0 558
+5 * 558 558
+1 * 558 558

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +1 558 558
+4 * 558
+3 * 558 0 558
cob=(5)
cfi=(8)
cfn=(164)
calls=558 0x387e4bb2f0 0 
* * 67659 17712 8942 0 1 0 0 1 0 16719 49 558
* * 558 558 0 0 0 0 0 0 0 0 0 558
+5 * 558 558
+1 * 558 558

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 558 0 558 1 0 0 1
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +2 558 558
+4 * 558
+3 * 558 0 558
cfn=(102)
calls=558 0x4048de +12 
* * 3348 1116 1116 1 0 0 1
+5 * 558 558
+4 * 558 0 0 1 0 0 1
+3 * 558
+2 * 558 0 0 0 0 0 0 0 0 558
jcnd=558/558 +7 +3 
* * 
+7 +3 558 558
+4 * 558
+4 * 558
+3 * 558 0 558
cob=(5)
cfi=(8)
cfn=(32)
calls=558 0x387e4bd0b0 0 
* * 159604 23471 21776 33 25 35 33 25 35 26009 920 558
* * 558 558 0 0 0 0 0 0 0 0 0 558
+5 +1 558 558
+1 * 558 558

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 550 0 550 1 0 0 1
+1 * 550
+3 * 550 0 550 0 0 1 0 0 1
+4 * 550 0 550
+4 * 550 550
+1 * 550 550

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 550 0 550 1 0 0 1
+1 * 550
+3 * 550 0 550
+4 * 550 0 550
+4 * 550 550
+1 * 550 550

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 550 0 550
+1 * 550
+3 * 550 0 550
+4 * 550 550
+1 * 550 550

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 558 0 558 1 0 0 1
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558 1 0 0 1
+4 +2 558 558
+4 * 558
+3 * 558 0 558
cfn=(28)
calls=558 0x404992 +12 
* * 3348 1116 1116 1 0 0 1
+5 * 558 558
+4 * 558
+3 * 558
+2 * 558 0 0 0 0 0 0 0 0 558
jcnd=558/558 +7 +3 
* * 
+7 +3 558 558
+4 * 558
+4 * 558
+3 * 558 0 558
cob=(5)
cfi=(8)
cfn=(32)
calls=558 0x387e4bd0b0 0 
* * 155816 23962 24357 17 15 14 17 15 14 24929 781 558
* * 558 558 0 1 1 0 1 1 0 0 0 558
+5 +1 558 558
+1 * 558 558

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +2 550 550
+4 * 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=550 0x404484 107 
* * 255910 84304 81008 25 3 4 25 3 4 9488 605 1096 137
+5 * 550 550
+1 * 550 550

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +2 550 550 0 1 0 0 1
+4 * 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=550 0x404a36 450 
* * 240510 78804 75508 24 3 4 24 3 4 9488 605 1096 137
+5 * 550 550
+1 * 550 550

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +2 550 550
+4 * 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=550 0x40439c 107 
* * 255910 84304 81008 7 1 22 7 1 22 9488 589 1096
+5 * 550 550
+1 * 550 550

fn=(116)
0x40439c 107 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +10 550 550
+4 * 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=550 0x4047d7 -26 
* * 248210 81554 78258 7 1 22 7 1 22 9488 589 1096
+5 +1 550 550
+1 * 550 550

fn=(118)
0x4047d7 91 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +2 550 550
+4 * 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=550 0x4049e2 450 
* * 240510 78804 75508 7 1 22 7 1 22 9488 589 1096
+5 * 550 550
+1 * 550 550

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +10 550 550
+4 * 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(52)
calls=550 0x404829 -26 
* * 248210 81554 78258 25 3 4 25 3 4 9488 605 1096 137
+5 +1 550 550
+1 * 550 550

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 558 0 558 1 0 0 1
+1 * 558
+3 * 558
+4 * 558 0 558 1 0 0 1
+4 * 558 0 558
+4 0 558 558
+5 0 558 0 0 0 0 0 0 0 0 558
+2 0 558 558
+4 0 558 558
+4 0 558
+5 0 558
+3 0 558
+3 0 558 0 558
fi=(6) ???
cfi=(5)
cfn=(26)
calls=558 0x404730 99 
* 0 170324 28426 28821 21 16 14 21 16 14 25487 781 1116
+5 0 558
fi=(6)
jump=558 +7 0 
* 0 
+7 0 558 558
+1 0 558 558

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 550 0 550 1 0 0 1
+1 * 550
+3 * 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+4 * 550 0 550
+4 * 550
+4 * 550 0 0 1 0 0 1
+4 * 550
+3 * 550
+3 * 550 0 550
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=550 0x404468 726 
* * 5500 2750 2200 1 0 0 1
+5 * 550 550
+4 * 550 550
+1 * 550 550

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+3 * 550 0 550
+4 * 550
+4 * 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfi=(10)
cfn=(44)
calls=550 0x404468 726 
* * 5500 2750 2200
+5 * 550 550
+4 * 550 550
+1 * 550 550

fn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
0x403a0a 134 550 0 550
+1 * 550
+3 * 550 0 550
+1 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=550 0x4042e2 -45 
* * 19800 7150 7700 5 0 0 5
+5 +1 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=550 0x40432a +43 
* * 192873 36603 31654 17 6 28 17 6 28 26459 845 1100
+5 * 550
jump=550 +28 * 
* * 
+28 * 550
+4 * 550 550
+1 * 550 550
+1 * 550 550

fn=(88)
0x4042e2 90 550 0 550 1 0 0 1
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550 1 0 0 1
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=550 0x4047b2 +24 
* * 9900 3300 3850 3 0 0 3
+5 * 550 550
+4 * 550 0 550
+7 * 550 550
+4 * 550 0 550
+8 * 550 550
+4 * 550 0 550
+8 +1 550 550
+1 * 550 550

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 550 0 550 1 0 0 1
+1 * 550
+3 * 550 0 550
+1 * 550
+4 * 550 0 550
+4 +2 550 550
+4 * 550 550 0 1 0 0 1
+4 * 550
+3 * 550 550
+4 * 550 550
+3 * 550
+3 * 550
+3 * 550
+4 * 550
+3 * 550 550
+4 * 550 550
+3 -1 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=550 0x403ce6 +11 
* * 75360 20396 12416 24 5 0 24 5 0 15098 426 1100
+5 +1 550 550
+4 * 550
+3 * 550 0 550
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=550 0x4031b8 -82 
* * 12650 4400 4400 1 0 0 1
+5 * 550
jump=550 +28 * 
* * 
+28 * 550
+4 * 550 550
+1 * 550 550
+1 * 550 550

fn=(172)
0x4031b8 79 550 0 550 1 0 0 1
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 550
+4 * 550
+3 * 550 0 550
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=550 0x403ccc +42 
* * 7700 2750 2750
+5 * 550 550
+1 * 550 550

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1132 0 1132 1 0 0 1
+1 * 1132
+3 * 1132 0 1132
+4 +1 1132 1132
+4 * 1132 1132 0 0 2 0 0 2
+4 * 1132
+3 * 1132 1132
+4 * 1132 1132
+3 * 1132
+3 * 1132
+3 * 1132
+4 * 1132 1132
+1 * 1132 1132

fn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
0x40325e 113 1124 0 1124 1 0 0 1
+1 * 1124
+3 * 1124 0 1124
+4 +1 1124 1124
+4 * 1124 1124
+1 * 1124 1124

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 566 0 566 1 0 0 1
+1 * 566
+3 * 566 0 566 0 0 1 0 0 1
+4 +1 566 566
+4 * 566 566
+1 * 566 566

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 566 0 566 1 0 0 1
+1 * 566
+3 * 566 0 566 1 0 0 1
+4 +1 566 566
+4 * 566 566
+1 * 566 566

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 275 0 275
+1 * 275
+3 * 275
+4 * 275 0 275
+4 * 275 0 275
+4 +2 275 275
+4 * 275 275
+4 * 275 275
+4 * 275 275
+4 * 275
+3 * 275 0 0 0 0 0 0 0 0 275 8
jcnd=8/275 +51 +10 
* * 
+2 +3 267 267
+4 * 267 267
+4 * 267 267
+4 -1 267 267
+4 * 267
+3 * 267
+3 * 267 0 267
cfi=(3)
cfn=(222)
calls=267 0x403373 215 
* * 10146 3471 3738 0 17 2 0 17 2 267 2
+5 +2 267 267
+4 * 267 267
+4 * 267
+4 * 267 267
+4 * 267 0 267
+4 * 267
jump=267 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 13345 3957 3440 45 20 11 45 20 11 1016 88 47
+5 +2 275 275
+1 * 275 275

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 550 0 550 1 0 0 1
+1 * 550
+3 * 550 0 550
+2 * 550 0 550
+2 * 550 0 550
+1 * 550
+4 * 550 0 550 1 0 0 1
+4 * 550 0 550
+4 +2 550 550
+4 * 550
+3 * 550 0 550
cfn=(6)
calls=550 0x403b08 117 
* * 3300 1650 1100 1 0 1 1 0 1
+5 * 550
+3 * 550 0 550
cfi=(3)
cfn=(8)
calls=550 0x403afa -88 
* * 3300 1650 1100 1 0 0 1
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(10)
calls=550 0x402f54 645 
* * 7150 3300 1100 1 1 0 1 1
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550
+3 * 550
+3 * 550 0 550
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=550 0x403b16 134 
* * 222586 48387 46018 27 14 12 27 14 12 25729 745 1100
+5 +4 550 550 0 1 0 0 1
+4 * 550
+3 * 550 0 550
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=550 0x40333c 113 
* * 3300 1650 1100 2 0 0 2
+5 * 550
+3 * 550 550
+4 * 550 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(42)
calls=550 0x403ba4 565 
* * 13750 5500 4400 3 0 0 3
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(46)
calls=550 0x403b74 547 
* * 13750 5500 4400
+5 * 550
+3 * 550
+3 * 550
+3 * 550
+3 * 550 0 550 1 0 0 1
cfi=(11)
cfn=(48)
calls=550 0x403bd5 -60 
* * 264160 87054 84308 26 3 4 26 3 4 9488 605 1096 137
+5 -3 550 550
+4 * 550 0 550
+4 * 550
jump=550 +28 +4 
* * 
+28 +4 550
+4 * 550 550
+1 * 550 550
+2 * 550 550
+2 * 550 550
+1 * 550 550

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 550 0 550 1 0 0 1
+1 * 550
+3 * 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+4 * 550 0 550
+4 * 550
+4 * 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=550 0x404380 726 
* * 5500 2750 2200 1 0 0 1
+5 * 550 550
+4 * 550 550
+1 * 550 550

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 550 0 550
+1 * 550
+3 * 550 0 550
+1 * 550
+4 * 550 0 550 1 0 0 1
+4 +2 550 550
+4 * 550
+3 * 550 0 550
cfn=(40)
calls=550 0x40333c 113 
* * 3300 1650 1100
+5 * 550
+3 * 550 550
+4 * 550 550
+4 * 550 550
+4 * 550 550
+3 -1 550
+3 * 550
+3 * 550 0 550
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=550 0x40334a 148 
* * 17050 5500 6600 2 0 0 2
+5 +1 550 550
+4 * 550
+3 * 550 0 550
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=550 0x4032ca 159 
* * 110226 33438 21478 3 1 0 3 1 0 17066 40 1100
+5 * 550
jump=550 +28 * 
* * 
+28 * 550 0 0 1 0 0 1
+4 * 550 550
+1 * 550 550
+1 * 550 550

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 558 0 558 1 0 0 1
+1 * 558 0 0 1 0 0 1
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 0 558 558
+5 0 558 0 0 0 0 0 0 0 0 558
+2 0 558 558
+4 0 558 558
+4 0 558
+5 0 558
+3 0 558
+3 0 558 0 558
fi=(6)
cfi=(5)
cfn=(100)
calls=558 0x40461a 99 
* 0 174112 27935 26240 36 25 35 36 25 35 26567 920 1116
+5 0 558
fi=(6)
jump=558 +7 0 
* 0 
+7 0 558 558
+1 0 558 558

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 115225 0 115225
+1 * 115225
+3 * 115225 0 115225
+4 * 115225 0 115225
+4 +1 115225 115225
+4 * 115225 115225
+3 * 115225 115225
+4 * 115225
+4 * 115225
+3 * 115225 115225
+1 * 115225 115225

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 115225 0 115225
+1 * 115225
+3 * 115225 0 115225 1 0 0 1
+4 * 115225 0 115225
+4 +1 115225 115225
+4 * 115225 115225
+3 * 115225 115225
+4 * 115225
+4 * 115225
+3 * 115225 115225
+1 * 115225 115225

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 550
+4 * 550
+3 * 550 0 550
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=550 0x403d7e +42 
* * 7700 2750 2750 1 0 0 1
+5 * 550 550
+1 * 550 550

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 550 0 550 1 0 0 1
+1 * 550
+3 * 550 0 550
+1 * 550
+4 * 550 0 550
+4 +2 550 550
+4 * 550 550
+4 * 550
+3 * 550 550
+4 * 550 550
+3 * 550
+3 * 550
+3 * 550
+4 * 550
+3 * 550 550
+4 * 550 550
+3 -1 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=550 0x403d98 +11 
* * 82176 22988 14328 1 1 0 1 1 0 17066 40 1100
+5 +1 550 550
+4 * 550
+3 * 550 0 550
cfn=(192)
calls=550 0x403296 -82 
* * 12650 4400 4400 1 0 0 1
+5 * 550
jump=550 +28 * 
* * 
+28 * 550
+4 * 550 550
+1 * 550 550
+1 * 550 550

fn=(2)
0x402d74 645 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232 0 2232 0 0 1 0 0 1
+4 +1 2232 2232
+4 * 2232 2232 0 1 1 0 1 1
+4 * 2232
+3 * 2232 2232
+4 * 2232 2232
+3 * 2232
+3 * 2232
+3 * 2232
+4 * 2232 2232
+1 * 2232 2232

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 +2 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(22)
calls=550 0x404236 -14 
* * 176936 30787 30618 21 14 8 21 14 8 25729 745 1100
+5 * 550 550
+4 * 550 0 550
+3 +1 550 550
+4 * 550 550 0 1 0 0 1
+3 * 550 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+3 * 550 550
+4 * 550
+4 * 550
+3 * 550 550
+4 * 550 0 550
+4 +1 550 550
+1 * 550 550

fn=(94)
0x40432a 179 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 +2 550 550
+4 * 550 550 0 1 0 0 1
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(96)
calls=550 0x403fbe -14 
* * 179123 30003 27804 16 6 28 16 6 28 26459 845 1100
+5 * 550 550
+4 * 550 0 550
+3 +1 550 550
+4 * 550 550
+3 * 550 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+3 * 550 550
+4 * 550
+4 * 550
+3 * 550 550
+4 * 550 0 550
+4 +1 550 550
+1 * 550 550

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 275 0 275
+1 * 275
+3 * 275 0 0 1 0 0 1
+4 * 275 0 275
+4 * 275 0 275
+4 +2 275 275
+4 * 275 275
+4 * 275 275
+4 * 275 275
+4 * 275
+3 * 275 0 0 0 0 0 0 0 0 275
jcnd=8/275 +51 +10 
* * 
+2 +3 267 267
+4 * 267 267
+4 * 267 267
+4 -1 267 267
+4 * 267
+3 * 267
+3 * 267 0 267
cfi=(3)
cfn=(264)
calls=267 0x4036b1 215 
* * 10146 3471 3738 0 17 5 0 17 5 267
+5 +2 267 267
+4 * 267 267
+4 * 267
+4 * 267 267
+4 * 267 0 267
+4 * 267
jump=267 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11777 3681 3210 20 2 28 20 2 28 675 57 47
+5 +2 275 275
+1 * 275 275

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1124 0 1124 1 0 0 1
+1 * 1124
+3 * 1124 0 1124 1 0 0 1
+4 +1 1124 1124
+4 * 1124 1124
+1 * 1124 1124

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+3 * 550 0 550
+4 * 550
+4 * 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfi=(10)
cfn=(110)
calls=550 0x404380 726 
* * 5500 2750 2200
+5 * 550 550
+4 * 550 550
+1 * 550 550

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 550 0 550
+1 * 550
+3 * 550 0 550
+1 * 550
+4 * 550 0 550 1 0 0 1
+4 +2 550 550
+4 * 550
+3 * 550 0 550
cfn=(106)
calls=550 0x40325e 113 
* * 3300 1650 1100
+5 * 550
+3 * 550 550
+4 * 550 550
+4 * 550 550
+4 * 550 550
+3 -1 550
+3 * 550
+3 * 550 0 550
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=550 0x40326c 148 
* * 17050 5500 6600 4 0 0 4
+5 +1 550 550
+4 * 550
+3 * 550 0 550
cfn=(156)
calls=550 0x4031ec 159 
* * 103410 30846 19566 27 5 0 27 5 0 15098 426 1100
+5 * 550
jump=550 +28 * 
* * 
+28 * 550 0 0 1 0 0 1
+4 * 550 550
+1 * 550 550
+1 * 550 550

fn=(158)
0x403ce6 171 558 0 558 1 0 0 1
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +2 558 558
+5 * 558 0 0 0 0 0 0 0 0 558
+2 +1 558 558
+4 * 558 558
+4 * 558 558
+4 * 558
+3 * 558
+3 * 558 0 558
cfi=(5)
cfn=(160)
calls=558 0x4044d6 -65 
* * 67506 17335 9817 24 5 0 24 5 0 14742 433 1116
+5 +1 558 558
+1 * 558 558

fn=(12)
0x403b16 134 550 0 550
+1 * 550
+3 * 550 0 550
+1 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=550 0x4043ca -45 
* * 19800 7150 7700 4 0 4 4 0 4
+5 +1 550 550 0 1 0 0 1
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(20)
calls=550 0x404412 +43 
* * 190686 37387 34468 22 14 8 22 14 8 25729 745 1100
+5 * 550
jump=550 +28 * 
* * 
+28 * 550
+4 * 550 550
+1 * 550 550
+1 * 550 550

fn=(14)
0x4043ca 90 550 0 550 1 0 0 1
+1 * 550
+3 * 550
+4 * 550 0 550 0 0 1 0 0 1
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=550 0x404804 +24 
* * 9900 3300 3850 2 0 1 2 0 1
+5 * 550 550
+4 * 550 0 550 0 0 2 0 0 2
+7 * 550 550
+4 * 550 0 550 1 0 0 1
+8 * 550 550
+4 * 550 0 550
+8 +1 550 550
+1 * 550 550

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 550 0 550 1 0 0 1
+1 * 550
+3 * 550 0 550
+2 * 550 0 550
+2 * 550 0 550
+1 * 550 0 0 1 0 0 1
+4 * 550 0 550
+4 * 550 0 550
+4 +2 550 550
+4 * 550
+3 * 550 0 550
cfn=(82)
calls=550 0x4039fc 117 
* * 3300 1650 1100 2 0 0 2
+5 * 550
+3 * 550 0 550
cfi=(3)
cfn=(84)
calls=550 0x4039ed -88 
* * 3300 1650 1100
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(2)
calls=550 0x402d74 645 
* * 7150 3300 1100
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550
+3 * 550
+3 * 550 0 550 1 0 0 1
cfn=(86)
calls=550 0x403a0a 134 
* * 224773 47603 43204 23 6 28 23 6 28 26459 845 1100
+5 +4 550 550
+4 * 550
+3 * 550 0 550
cfn=(106)
calls=550 0x40325e 113 
* * 3300 1650 1100 1 0 0 1
+5 * 550
+3 * 550 550
+4 * 550 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(108)
calls=550 0x403a98 565 
* * 13750 5500 4400 2 0 0 2
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(112)
calls=550 0x403a68 547 
* * 13750 5500 4400
+5 * 550
+3 * 550
+3 * 550
+3 * 550
+3 * 550 0 550
cfi=(11)
cfn=(114)
calls=550 0x403ac9 -60 
* * 264160 87054 84308 7 1 22 7 1 22 9488 589 1096
+5 -3 550 550
+4 * 550 0 550
+4 * 550
jump=550 +28 +4 
* * 
+28 +4 550
+4 * 550 550
+1 * 550 550
+2 * 550 550
+2 * 550 550
+1 * 550 550

fn=(188)
0x403d98 171 558 0 558 1 0 0 1
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +2 558 558
+5 * 558 0 0 0 0 0 0 0 0 558 8
+2 +1 558 558
+4 * 558 558
+4 * 558 558
+4 * 558
+3 * 558
+3 * 558 0 558
cfi=(5)
cfn=(190)
calls=558 0x40452a -65 
* * 74355 19944 11732 0 1 0 0 1 0 16719 49 1116
+5 +1 558 558
+1 * 558 558

fl=(12)
fn=(120)
0x4049e2 450 550 0 550
+1 * 550
+3 * 550 0 550
+1 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +10 550 550
+4 * 550
+3 * 550 0 550
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=550 0x404bc6 288 
* * 8250 3300 2750 3 0 0 3
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(122)
calls=550 0x404bc6 288 
* * 8250 3300 2750
+5 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=550 0x404be0 -36 
* * 211910 68904 65608 4 1 22 4 1 22 9488 589 1096
+5 +1 550
+4 * 550 550
+1 * 550 550
+1 * 550 550

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 598 0 598
+1 * 598
+3 * 598
+4 * 598 0 598 1 0 0 1
+4 +1 598 598
+4 * 598
+3 * 598 0 598
cfi=(13)
cfn=(130)
calls=598 -33 -66 
* * 3588 1794 1196 0 0 1 0 0 1
+5 * 598 598
+1 * 598 598

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1100 0 1100
+1 * 1100
+3 * 1100
+4 * 1100 0 1100
+4 +1 1100 1100
+4 * 1100
+3 * 1100 0 1100
cfi=(13)
cfn=(134)
calls=1100 0x404e98 -58 
* * 17600 6600 5500 2 0 0 2
+5 * 1100 1100
+1 * 1100 1100

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +8 550 0 550
+4 +3 550 550
+4 * 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=550 0x404eb5 -22 
* * 152510 49104 45258 1 1 22 1 1 22 9488 589 1096
+5 +1 550 550
+1 * 550 550

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1100 0 1100 1 0 0 1
+1 * 1100
+3 * 1100
+4 * 1100 0 1100
+4 +1 1100 1100
+4 * 1100
+3 * 1100 0 1100
cfi=(13)
cfn=(124)
calls=1100 0x404d36 -77 
* * 6600 3300 2200 2 0 0 2
+5 * 1100 1100
+1 * 1100 1100

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1100 0 1100 1 0 0 1
+1 * 1100
+3 * 1100
+4 * 1100 0 1100 1 0 0 1
+4 +1 1100 1100
+4 * 1100
+3 * 1100 0 1100
cfi=(13)
cfn=(58)
calls=1100 0x404d8f -77 
* * 6600 3300 2200 1 0 0 1
+5 * 1100 1100
+1 * 1100 1100

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 566 0 566
+1 * 566
+3 * 566
+4 * 566 0 566 1 0 0 1
+4 * 566 0 566
+4 * 566 0 566
+4 +2 566 566
+4 * 566 566
+4 * 566
+3 * 566
+3 * 566
+4 * 566 0 566
+4 +1 566 566
+5 * 566 0 0 0 0 0 0 0 0 566
jcnd=8/566 +33 +2 
* * 
+2 +1 558 558
+4 * 558
+8 * 558 558
+4 * 558 558
+4 * 558
+3 * 558 0 0 1 0 0 1
+3 * 558 0 558 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=558 0x3877c83840 0 
* * 138232 43370 42259 11 2 20 11 2 20 9022 609 553 137
* * 558 558 0 1 1 0 1 1 0 0 0 558
+5 +1 566 566
+4 * 566
+8 * 566 566
+4 * 566
+3 +1 566 566
+1 * 566 566

fn=(140)
0x404eb5 368 566 0 566
+1 * 566
+3 * 566
+4 * 566 0 566 1 0 0 1
+4 * 566 0 566
+4 * 566 0 566 0 0 1 0 0 1
+4 +2 566 566
+4 * 566 566
+4 * 566
+3 * 566
+3 * 566
+4 * 566 0 566
+4 +1 566 566
+5 * 566 0 0 0 0 0 0 0 0 566
jcnd=8/566 +33 +2 
* * 
+2 +1 558 558
+4 * 558
+8 * 558 558
+4 * 558 558
+4 * 558
+3 * 558
+3 * 558 0 558
cob=(2)
cfi=(9)
cfn=(78)
calls=558 0x3877c83840 0 
* * 138232 43370 42259 0 1 23 0 1 23 9022 595 553
* * 558 558 0 0 0 0 0 0 0 0 0 558
+5 +1 566 566
+4 * 566
+8 * 566 566
+4 * 566
+3 +1 566 566
+1 * 566 566

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550 1 0 0 1
+4 * 550 0 550
+4 * 550 0 550
+4 +8 550 0 550
+4 +3 550 550
+4 * 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(74)
calls=550 0x404f37 -22 
* * 152510 49104 45258 14 3 3 14 3 3 9488 605 1096 137
+5 +1 550 550
+1 * 550 550

fn=(126)
0x404be0 424 550 0 550
+1 * 550
+3 * 550 0 550
+2 * 550 0 550
+1 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +4 550 550
+4 * 550
+3 * 550 0 550
cfn=(128)
calls=550 0x404878 277 
* * 8250 3300 2750 1 0 0 1
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(132)
calls=550 0x404d44 277 
* * 13750 4950 4400 2 0 0 2
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(132)
calls=550 0x404d44 277 
* * 13750 4950 4400
+5 * 550
+3 * 550
+3 * 550
+3 * 550 0 550
cfn=(138)
calls=550 0x404d5e -49 
* * 160760 51854 48558 1 1 22 1 1 22 9488 589 1096
+5 +1 550
+4 * 550 550
+1 * 550 550
+2 * 550 550
+1 * 550 550

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 550 0 550
+1 * 550
+3 * 550 0 550
+1 * 550
+4 * 550 0 550 1 0 0 1
+4 * 550 0 550
+4 * 550 0 550
+4 +10 550 550
+4 * 550
+3 * 550 0 550
cfn=(56)
calls=550 0x404c38 288 
* * 8250 3300 2750 3 0 0 3
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(56)
calls=550 0x404c38 288 
* * 8250 3300 2750
+5 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=550 0x404c52 -36 
* * 211910 68904 65608 20 3 4 20 3 4 9488 605 1096 137
+5 +1 550
+4 * 550 550
+1 * 550 550
+1 * 550 550

fn=(60)
0x404c52 424 550 0 550
+1 * 550
+3 * 550 0 550
+2 * 550 0 550
+1 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 * 550 0 550
+4 +4 550 550
+4 * 550
+3 * 550 0 550
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=550 0x40492d 277 
* * 8250 3300 2750 2 0 0 2
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=550 0x404d9d 277 
* * 13750 4950 4400 2 0 1 2 0 1
+5 * 550
+3 * 550 550
+4 * 550
+3 * 550 0 550
cfn=(66)
calls=550 0x404d9d 277 
* * 13750 4950 4400
+5 * 550
+3 * 550
+3 * 550
+3 * 550 0 550
cfn=(72)
calls=550 0x404db7 -49 
* * 160760 51854 48558 15 3 3 15 3 3 9488 605 1096 137
+5 +1 550
+4 * 550 550
+1 * 550 550
+2 * 550 550
+1 * 550 550

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 598 0 598 1 0 0 1
+1 * 598
+3 * 598
+4 * 598 0 598
+4 +1 598 598
+4 * 598
+3 * 598 0 598 1 0 0 1
cfi=(13)
cfn=(64)
calls=598 -33 -66 
* * 3588 1794 1196
+5 * 598 598
+1 * 598 598

fn=(66)
0x404d9d 277 1100 0 1100
+1 * 1100
+3 * 1100
+4 * 1100 0 1100
+4 +1 1100 1100
+4 * 1100
+3 * 1100 0 1100
cfi=(13)
cfn=(68)
calls=1100 0x404f1a -58 
* * 17600 6600 5500 2 0 1 2 0 1
+5 * 1100 1100
+1 * 1100 1100

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1100 0 1100 1 0 0 1
+1 * 1100
+3 * 1100 0 1100
+4 +1 1100 1100
+4 * 1100 1100
+1 * 1100 1100

fn=(110)
0x404380 726 1100 0 1100 1 0 0 1
+1 * 1100
+3 * 1100 0 1100
+4 * 1100 0 1100
+4 * 1100 1100
+4 * 1100 1100
+3 * 1100 1100
+4 * 1100 0 1100
+3 * 1100 1100
+1 * 1100 1100

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1100 0 1100 1 0 0 1
+1 * 1100
+3 * 1100 0 1100
+4 +1 1100 1100
+4 * 1100 1100
+1 * 1100 1100

fn=(44)
0x404468 726 1100 0 1100
+1 * 1100
+3 * 1100 0 1100
+4 * 1100 0 1100
+4 * 1100 1100
+4 * 1100 1100
+3 * 1100 1100
+4 * 1100 0 1100 1 0 0 1
+3 * 1100 1100
+1 * 1100 1100

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 558 0 558 1 0 0 1
+1 * 558
+3 * 558 0 558
+4 * 558 0 558 1 0 0 1
+4 * 558 558
+1 * 558 558

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 558 0 558 1 0 0 1
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 +4 558 558
+4 * 558 558
+4 * 558
+3 * 558
+3 * 558 0 558
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=558 0x40454c -14 
* * 3348 1116 1674 1 0 0 1
+5 +2 558 558
+1 * 558 558

fn=(150)
0x40326c 148 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +3 558 558 0 1 0 0 1
+4 * 558 558
+4 * 558
+3 * 558
+3 * 558 0 558
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=558 0x403d1a -29 
* * 10044 3348 3906 3 0 0 3
+5 +1 558 558
+1 * 558 558

fn=(180)
0x40334a 148 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +3 558 558
+4 * 558 558
+4 * 558
+3 * 558
+3 * 558 0 558
cfn=(182)
calls=558 0x403dcc -29 
* * 10044 3348 3906 2 0 0 2
+5 +1 558 558
+1 * 558 558

fn=(152)
0x403d1a 122 558 0 558 1 0 0 1
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 +4 558 558
+4 * 558 558
+4 * 558
+3 * 558
+3 * 558 0 558
cfn=(154)
calls=558 0x4044f8 -14 
* * 3348 1116 1674 2 0 0 2
+5 +2 558 558
+1 * 558 558

fn=(184)
0x40454c 112 558 0 558 1 0 0 1
+1 * 558
+3 * 558 0 558
+4 * 558 0 558
+4 * 558 558
+1 * 558 558

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2316 429 435 2 2 6 2 2 6 316 36 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3917 722 668 22 19 7 22 19 7 666 75 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 275 0 275 1 0 0 1
+1 * 275
+3 * 275
+4 * 275 0 275
+4 * 275 0 275
+4 +1 275 275
+4 * 275
+3 * 275 0 275
cfi=(2)
cfn=(2)
calls=275 0x402d74 645 
* * 3575 1650 550
+5 * 275
+3 * 275 0 275
+3 +1 275 275
+6 * 275 0 275
+3 * 275 275
+6 * 275 0 275
+3 +1 275 275
+6 * 275 0 275 1 0 0 1
+3 * 275 275
+6 * 275 0 275
+3 +2 275 0 275
+7 * 275
jump=275 +86 * 
* * 
+2 +1 38225 38225
+3 * 38225
+3 * 38225 38225
+4 * 38225
+3 * 38225
+3 * 38225 0 38225
cfi=(2)
cfn=(144)
calls=38225 0x402d9a 770 
* * 420475 191125 114675
+5 * 38225 38225
+4 * 38225 38225
+5 * 38225
+4 * 38225 0 38225
+5 +1 38225 38225
+3 * 38225
+3 * 38225 38225
+4 * 38225
+3 * 38225
+3 * 38225 0 38225
cfi=(2)
cfn=(146)
calls=38225 0x402dba 770 
* * 420475 191125 114675 1 0 0 1
+5 * 38225 38225
+2 * 38225
+4 * 38225 38225
+5 * 38225
+4 * 38225 0 38225
+5 -2 38225 0 38225
+4 * 38225 38225
+3 * 38225
+3 * 38225 38225
+3 * 38225 0 0 0 0 0 0 0 0 38225 276
jcnd=37950/38225 -93 +1 
* * 
-9 * 275 275 0 1 0 0 1
+3 * 275
+3 * 275 275
+3 * 275 0 0 0 0 0 0 0 0 275
jcnd=275/275 -93 +1 
* * 
+2 +4 275 275
+3 * 275
+3 * 275
+4 * 275 275 0 1 0 0 1
+5 * 275
+4 * 275
+3 * 275 0 275
+5 +1 275 275
+3 * 275
+3 * 275
+4 * 275 275
+5 * 275
+4 * 275
+3 * 275 0 275
+5 +1 275 0 275
+7 * 275
jump=275 0x4016ee * 
* * 
+2 +1 38225 38225
+3 * 38225
+3 * 38225 38225
+4 * 38225
+3 * 38225 0 0 1 0 0 1
+3 * 38225 0 38225
cfi=(2)
cfn=(146)
calls=38225 0x402dba 770 
* * 420475 191125 114675
+5 * 38225 38225
+2 * 38225
+4 * 38225 38225
+5 * 38225 0 38225
+5 +1 38225 38225
+3 * 38225
+3 * 38225 38225
+4 * 38225
+3 * 38225
+3 * 38225 0 38225
cfi=(2)
cfn=(144)
calls=38225 0x402d9a 770 
* * 420475 191125 114675
+5 * 38225 38225
+4 * 38225 38225
+5 * 38225 0 38225
+5 +1 38225 38225
+5 * 38225 38225
+5 * 38225 38225
+5 * 38225
+4 * 38225 0 38225
+5 +1 38225 38225
+5 * 38225 38225
+5 * 38225 38225
+5 * 38225
+4 * 38225 0 38225
+5 -4 38225 0 38225
+4 * 38225 38225
+3 * 38225
+3 * 38225 38225
+3 * 38225 0 0 0 0 0 0 0 0 38225 276
jcnd=37950/38225 0x401672 +1 
* * 
-9 * 275 275 0 1 0 0 1
+3 * 275
+3 * 275 275
+3 * 275 0 0 0 0 0 0 0 0 275
jcnd=275/275 0x401672 +1 
* * 
+6 +6 275 275 0 1 0 0 1
+5 * 275 275
+5 * 275 0 275
+5 +2 275 275
+3 +1 275 0 275
+3 * 275 275
+5 * 275 275
+1 * 275 275

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 275
+7 * 275
+7 * 275
+3 * 275
+3 * 275 0 275
cfi=(2)
cfn=(4)
calls=275 0x4030b2 310 
* * 279565 81208 75939 63 17 16 63 17 16 17622 841 1098 137
+5 * 275
+7 * 275
+7 * 275
+3 * 275
+3 * 275 0 275
cfi=(2)
cfn=(80)
calls=275 0x402ff4 310 
* * 280919 80829 74550 38 7 48 38 7 48 18041 896 1098
+5 * 275 0 0 1 0 0 1
+7 * 275
+7 * 275
+3 * 275
+3 * 275 0 275
cfn=(142)
calls=275 0x401585 -52 
* * 3993275 1765225 922075 8 0 0 8 0 0 77000 552
+5 * 275 0 275
+8 * 275 275
+6 * 275 0 275
+6 * 275
+7 * 275
+3 * 275 0 275
cfi=(2)
cfn=(148)
calls=275 0x402df4 414 
* * 68480 21473 15283 33 5 0 33 5 0 7549 216 550
+5 * 275
+7 * 275
+3 * 275 0 275 1 0 0 1
cfi=(2)
cfn=(178)
calls=275 0x402e74 414 
* * 71888 22769 16239 7 1 0 7 1 0 8533 23 550
+5 +2 275
+7 * 275
+7 * 275
+3 * 275
+3 * 275 0 275
cfi=(2)
cfn=(4)
calls=275 0x4030b2 310 
* * 279231 81183 75837 2 1 1 2 1 1 17595 509 1098
+5 * 275
+7 * 275
+7 * 275
+3 * 275
+3 * 275 0 275
cfi=(2)
cfn=(80)
calls=275 0x402ff4 310 
* * 280064 80778 74412 0 0 2 0 0 2 17906 538 1098
+5 * 275 275
+6 * 275 0 0 1 0 0 1
+7 * 275
+7 * 275 0 275
+6 * 275 275
+8 * 275
+3 * 275
+3 * 275 0 275
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=275 0x401719 -33 
* * 1851025 770550 424600 4 0 0 4 0 0 38500 276
+5 * 275 0 275
+8 * 275 275
+6 * 275 0 275
+6 * 275
+7 * 275 0 0 1 0 0 1
+3 * 275 0 275
cfi=(2)
cfn=(148)
calls=275 0x402df4 414 
* * 68480 21473 15283 0 0 0 0 0 0 7549 210 550
+5 * 275
+7 * 275
+3 * 275 0 275
cfi=(2)
cfn=(178)
calls=275 0x402e74 414 
* * 71888 22769 16239 0 0 0 0 0 0 8533 17 550
+5 +2 275 275
+7 * 275
+3 * 275 0 275
cfi=(2)
cfn=(2)
calls=275 0x402d74 645 
* * 3575 1650 550
+5 * 275 275
+6 * 275
+3 * 275
+3 * 275
+3 * 275 275
+7 * 275
+3 * 275 0 0 1 0 0 1
+3 * 275 0 275
cfi=(2)
cfn=(144)
calls=275 0x402d9a 770 
* * 3025 1375 825
+5 * 275
+3 * 275
+7 * 275
+3 * 275
+3 * 275 0 275
cfi=(2)
cfn=(200)
calls=275 0x402eda 901 
* * 30793 11043 8609 48 37 13 48 37 13 1558 98 47
+5 +1 275 275
+7 * 275
+3 * 275 0 275
cfi=(2)
cfn=(10)
calls=275 0x402f54 645 
* * 3575 1650 550 0 1 0 0 1
+5 * 275 275
+6 * 275
+3 * 275
+3 * 275
+3 * 275 275
+7 * 275 0 0 1 0 0 1
+3 * 275
+3 * 275 0 275
cfi=(2)
cfn=(146)
calls=275 0x402dba 770 
* * 3025 1375 825
+5 * 275
+3 * 275
+7 * 275
+3 * 275
+3 * 275 0 275
cfi=(2)
cfn=(244)
calls=275 0x402f7a 901 
* * 29225 10767 8379 21 19 33 21 19 33 1217 57 47
+5 +1 275 275
+7 * 275
+3 * 275 0 275
cfi=(2)
cfn=(10)
calls=275 0x402f54 645 
* * 3575 1650 550
+5 * 275 275
+6 * 275
+3 * 275
+3 * 275
+3 * 275 275 0 1 0 0 1
+7 * 275
+3 * 275
+3 * 275 0 275
cfi=(2)
cfn=(146)
calls=275 0x402dba 770 
* * 3025 1375 825
+5 * 275 275
+2 * 275
+4 * 275 275
+8 * 275 275
+8 * 275 0 275
+8 +1 275 275
+7 * 275
+3 * 275 0 275
cfi=(2)
cfn=(2)
calls=275 0x402d74 645 
* * 3575 1650 550
+5 * 275 275 0 1 0 0 1
+6 * 275
+3 * 275
+3 * 275
+3 * 275 275
+7 * 275
+3 * 275
+3 * 275 0 275
cfi=(2)
cfn=(144)
calls=275 0x402d9a 770 
* * 3025 1375 825
+5 * 275 275
+4 * 275 275
+8 * 275
+4 * 275 275
+8 * 275
+3 * 275 0 275
+8 +2 275 0 275
+7 -12 275 275
+8 * 275 275
+7 * 275 0 0 0 0 0 0 0 0 275 1
jcnd=1/275 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 275
+7 * 275
+3 * 275 0 275
cfi=(2)
cfn=(2)
calls=275 0x402d74 645 
* * 3575 1650 550 2 0 1 2 0 1
+5 * 275
+3 * 275 275
+7 * 275
+3 * 275 0 275
cfi=(2)
cfn=(2)
calls=275 0x402d74 645 
* * 3575 1650 550 0 1 0 0 1
+5 * 275
+3 * 275 0 0 0 0 0 0 0 0 275 2
+2 * 275 0 0 1 0 0 1
+5 * 275
jump=275 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 275
+2 * 275 0 0 0 0 0 0 0 0 275
jcnd=275/275 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 275 0 275
+1 * 275
+3 * 275
+4 * 275 0 275
+4 * 275 0 275
+4 * 275 0 275
+5 +1 275 275
+4 * 275
+3 * 275 0 275
cfi=(2)
cfn=(2)
calls=275 0x402d74 645 
* * 3575 1650 550
+5 * 275
+3 * 275 0 275
+3 +1 275 275 0 1 0 0 1
+6 * 275 0 275
+3 * 275 275
+6 * 275 0 275
+3 +2 275 0 275
+7 * 275
jump=275 +86 * 
* * 
+2 +1 38225 38225
+3 * 38225
+3 * 38225 38225
+4 * 38225
+3 * 38225
+3 * 38225 0 38225
cfi=(2)
cfn=(144)
calls=38225 0x402d9a 770 
* * 420475 191125 114675
+5 * 38225 38225
+4 * 38225 38225
+5 * 38225
+4 * 38225 0 38225
+5 +1 38225 38225
+3 * 38225
+3 * 38225 38225
+4 * 38225
+3 * 38225
+3 * 38225 0 38225
cfi=(2)
cfn=(146)
calls=38225 0x402dba 770 
* * 420475 191125 114675
+5 * 38225 38225
+2 * 38225
+4 * 38225 38225
+5 * 38225
+4 * 38225 0 38225
+5 -2 38225 0 38225
+4 * 38225 38225
+3 * 38225
+3 * 38225 38225
+3 * 38225 0 0 0 0 0 0 0 0 38225 276
jcnd=37950/38225 -93 +1 
* * 
-9 * 275 275 0 1 0 0 1
+3 * 275
+3 * 275 275
+3 * 275 0 0 0 0 0 0 0 0 275
jcnd=275/275 -93 +1 
* * 
+2 +4 275 275
+3 * 275
+3 * 275 0 0 1 0 0 1
+4 * 275 275
+5 * 275
+4 * 275
+3 * 275 0 275
+5 +1 275 275
+3 * 275
+3 * 275
+4 * 275 275
+5 * 275
+4 * 275
+3 * 275 0 275
+5 +1 275 275
+5 * 275 275
+5 * 275 275
+5 * 275 0 0 1 0 0 1
+4 * 275
+3 * 275 0 275
+5 +2 275 275
+3 +1 275 0 275
+3 * 275 275
+5 * 275 275
+1 * 275 275

fl=(4)
fn=(90)
0x4047b2 115 550 0 550 1 0 0 1
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550 1 0 0 1
+4 +1 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfi=(5)
cfn=(92)
calls=550 0x4049d4 -35 
* * 3300 1100 1650 1 0 0 1
+5 * 550 550
+1 * 550 550

fn=(194)
0x403d7e 121 550 0 550 1 0 0 1
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 550
+4 * 550
+3 * 550 0 550
cfi=(5)
cfn=(196)
calls=550 0x404520 -35 
* * 2750 1100 1100
+5 * 550 550
+1 * 550 550

fn=(16)
0x404804 115 550 0 550 1 0 0 1
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 0 550
+4 +1 550 550
+4 * 550 550
+4 * 550
+3 * 550
+3 * 550 0 550
cfi=(5)
cfn=(18)
calls=550 0x404a28 -35 
* * 3300 1100 1650 1 0 1 1 0 1
+5 * 550 550
+1 * 550 550

fn=(174)
0x403ccc 121 550 0 550
+1 * 550
+3 * 550
+4 * 550 0 550
+4 * 550 550
+4 * 550
+3 * 550 0 550
cfi=(5)
cfn=(176)
calls=550 0x4044cc -35 
* * 2750 1100 1100
+5 * 550 550
+1 * 550 550

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1116 0 1116 1 0 0 1
+5 0 1116 0 1116
+5 0 1116
+3 0 1116 0 1116
+5 0 1116
+4 0 1116 1116 0 0 1 0 0 1
+7 0 1116 1116 0 0 1 0 0 1
+3 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116 2
+6 0 1116 1116 0 0 1 0 0 1
+7 0 1116 1116 0 1 1 0 1 1
+4 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116
+2 0 1116 1116 0 0 1 0 0 1
+3 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116
jcnd=1116/1116 +97 0 
* 0 
+18 0 1116
+3 0 1116
+3 0 1116 0 1116
cfn=(38) _int_malloc
calls=1116 0x3877c79a00 0 
* 0 250692 30693 36089 42 33 48 42 33 48 38662 1680
+5 0 1116
+3 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116
+2 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116
+2 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116 7
+2 0 1116 1116
+7 0 1116 0 0 0 0 0 0 0 0 1116
jcnd=1116/1116 +13 0 
* 0 
+13 0 1116 0 1116
+2 0 1116 0 0 0 0 0 0 0 0 1116 12
+6 0 1116
+3 0 1116 1116
+4 0 1116 1116
+5 0 1116 1116
+5 0 1116
+4 0 1116 1116
+1 0 1116 0 0 1 0 0 1
+5 0 1116 1116 0 0 1 0 0 1
+7 0 1116 0 0 0 0 0 0 0 0 1116
jcnd=1116/1116 +14 0 
* 0 
+14 0 1116 0 1116 1 0 0 1
+3 0 1116 0 0 0 0 0 0 0 0 1116
+6 0 1116
jump=1116 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1116 0 1116 1 0 0 1
+2 0 1116
+3 0 1116
+3 0 1116 0 1116
+2 0 1116
+3 0 1116 0 1116
+1 0 1116
+3 0 1116 0 1116
+1 0 1116
+3 0 1116
+4 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116
+6 0 1116
+4 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116 7
jcnd=10/1116 0x3877c838d1 0 
* 0 
+2 0 1106
+3 0 1106
+3 0 1106
+3 0 1106
+3 0 1106
+3 0 1106 0 0 0 0 0 0 0 0 1106
jcnd=1106/1106 +41 0 
* 0 
+41 0 1106 0 0 1 0 0 1
+3 0 1106 0 0 0 0 0 0 0 0 1106
jcnd=1106/1106 0x3877c839c0 0 
* 0 
+24 0 1106
+3 0 1106
+4 0 1106
+3 0 1106
+3 0 1106
+3 0 1106
+3 0 1106
+3 0 1106 0 0 0 0 0 0 0 0 1106 550
jcnd=562/1106 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 554
+10 0 554 554 0 0 2 0 0 2
+3 0 554
+4 0 554 0 554
+3 0 554
+4 0 554
+4 0 554 0 0 0 0 0 0 0 0 554
jcnd=554/554 -18 0 
* 0 
-18 0 1718 1718
+3 0 1718
+4 0 1718 0 1718
+3 0 1718
+4 0 1718
+4 0 1718 0 0 0 0 0 0 0 0 1718 11
jcnd=1164/1718 -18 0 
* 0 
+2 0 1116
+4 0 1116
+3 0 1116 1116
+1 0 1116 1116
+1 0 1116 1116
+2 0 1116 1116 0 1 0 0 1
+2 0 1116 1116
0x3877c839c0 0 1106 0 0 1 0 0 1
+3 0 1106
+3 0 1106
+3 0 1106
+4 0 1106 0 1106 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1106 0x3877c89b20 0 
* 0 213374 78888 76676 6 1 42 6 1 42 10212 636 1106 137
+5 0 1106
jump=1106 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1116 1116 0 1 1 0 1 1
+7 0 1116 1116 0 0 1 0 0 1
+3 0 1116
+3 0 1116 0 0 1 0 0 1 0 0 1116
+6 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116
+6 0 1116 1116
+4 0 1116
+4 0 1116
+2 0 1116 0 0 0 0 0 0 0 0 1116 2
+2 0 1116
+2 0 1116
+7 0 1116 0 0 0 0 0 0 0 0 1116
jcnd=1116/1116 +14 0 
* 0 
+14 0 1116
+2 0 1116
cfn=(170) _int_free
calls=1116 0x3877c78650 0 
* 0 107265 28351 15969 19 2 0 19 2 0 25881 480

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 6
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 2
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1116 0 1116 1 0 0 1
+2 0 1116 0 1116
+2 0 1116 0 1116
+2 0 1116
+3 0 1116 0 1116
+2 0 1116 0 1116
+1 0 1116 0 1116
+1 0 1116
+3 0 1116
+4 0 1116 1116
+4 0 1116 0 1116
+4 0 1116
+3 0 1116
+4 0 1116
+3 0 1116
+3 0 1116
+3 0 1116 0 0 1 0 0 1 0 0 1116
+6 0 1116
+4 0 1116 0 0 0 0 0 0 0 0 1116
+6 0 1116
+4 0 1116 0 0 0 0 0 0 0 0 1116
+6 0 1116 1116
+7 0 1116 0 0 0 0 0 0 0 0 1116 4
jcnd=992/1116 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 992
+2 0 992 0 0 0 0 0 0 0 0 992
+6 0 992 992 0 1 0 0 1
+4 0 992
+3 0 992
+2 0 992 0 0 0 0 0 0 0 0 992
jcnd=992/992 0x3877c78a40 0 
* 0 
+6 0 992 992
+4 0 992
+3 0 992 0 0 0 0 0 0 0 0 992
+6 0 992 992
+5 0 992
+4 0 992 0 0 0 0 0 0 0 0 992
jcnd=992/992 0x3877c7907c 0 
* 0 
+6 0 992 992
+5 0 992
+4 0 992 0 0 0 0 0 0 0 0 992
+6 0 992
+4 0 992 0 0 1 0 0 1 0 0 992
+6 0 992
+4 0 992 992
+7 0 992 0 0 0 0 0 0 0 0 992
+6 0 992 992
+6 0 992
+2 0 992 0 0 0 0 0 0 0 0 992
+6 0 992 992
+4 0 992 0 0 0 0 0 0 0 0 992 5
jcnd=988/992 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 992 992 0 1 0 0 1
+4 0 992 0 0 0 0 0 0 0 0 992 348
jcnd=400/992 0x3877c78bf0 0 
* 0 
+6 0 592 592 0 0 1 0 0 1
+6 0 592 0 0 1 0 0 1 0 0 592 48
jcnd=45/592 0x3877c78a78 0 
* 0 
+6 0 547 547
+5 0 547 547
+5 0 547 547
+4 0 547 0 0 0 0 0 0 0 0 547
+6 0 547 547
+4 0 547 0 0 0 0 0 0 0 0 547
+6 0 547 547
+9 0 547 0 547
+4 0 547 0 547
+4 0 547 0 0 0 0 0 0 0 0 547 4
jcnd=539/547 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 547
+3 0 547
+4 0 547 547
+4 0 547 547
+4 0 547 0 0 0 0 0 0 0 0 547
-12 0 45
+4 0 45 45
+4 0 45 45
+4 0 45 0 0 0 0 0 0 0 0 45
+6 0 592
+7 0 592 0 592
+4 0 592 0 592
+4 0 592 0 0 0 0 0 0 0 0 592 67
jcnd=441/592 +18 0 
* 0 
+2 0 151 0 151
+8 0 151 0 151
+8 0 151 0 151
+4 0 151
+3 0 151 0 151 1 0 0 1
+4 0 151
+4 0 151 0 151
+4 0 151 0 151
+4 0 151
+7 0 151 0 0 0 0 0 0 0 0 151
jcnd=151/151 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 400
+7 0 400 0 0 0 0 0 0 0 0 400
jcnd=400/400 0x3877c78b20 0 
* 0 
0x3877c78a40 0 992 0 0 1 0 0 1
+5 0 992 992
+4 0 992 992
+7 0 992 0 0 0 0 0 0 0 0 992
jcnd=992/992 +16 0 
* 0 
+16 0 992 0 992
+5 0 992 0 0 0 0 0 0 0 0 992
+6 0 992
+3 0 992
jump=992 0x3877c7878f 0 
* 0 
+10 0 45 0 45
+6 0 45 0 0 1 0 0 1
jump=45 0x3877c78885 0 
* 0 
0x3877c78b20 0 992 992 0 1 0 0 1
+4 0 992
+2 0 992 0 0 0 0 0 0 0 0 992
+6 0 992 992
+7 0 992 0 0 0 0 0 0 0 0 992
jcnd=992/992 +15 0 
* 0 
+15 0 992 0 992 1 0 0 1
+4 0 992 0 0 0 0 0 0 0 0 992 2
+6 0 992
+4 0 992 992
+1 0 992 992
+1 0 992 992
+2 0 992 992
+2 0 992 992
+2 0 992 992
+2 0 992 992
0x3877c78bf0 0 400 0 0 1 0 0 1
+3 0 400 0 400
+4 0 400
+3 0 400
+4 0 400 0 400 1 0 0 1
+4 0 400
jump=400 0x3877c788cf 0 
* 0 
0x3877c7907c 0 992 992 0 1 1 0 1 1
+4 0 992 0 0 1 0 0 1
+7 0 992
+4 0 992
+3 0 992
+3 0 992 0 0 0 0 0 0 0 0 992
jcnd=992/992 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1106 0 0 1 0 0 1
+7 0 1106
+3 0 1106
+3 0 1106 1106 0 0 1 0 0 1
+4 0 1106
+4 0 1106 0 0 0 0 0 0 0 0 0 0 1106 137
jump=136 0x3877c89be8 0 
* 0 
jump=146 0x3877c89bd0 0 
* 0 
jump=136 0x3877c89bb8 0 
* 0 
jump=136 +11 0 
* 0 
jump=136 0x3877c89c48 0 
* 0 
jump=138 0x3877c89c30 0 
* 0 
jump=136 0x3877c89c18 0 
* 0 
jump=142 0x3877c89c00 0 
* 0 
+11 0 136 136
+3 0 136
+4 0 136
+4 0 136 136
+4 0 136
+4 0 136 0 136
+4 0 136
+9 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136
+4 0 136
+4 0 136 0 0 0 0 0 0 0 0 136
jcnd=8/136 0x3877c89c60 0 
* 0 
-40 0 9378 9378
+4 0 9378 0 9378 0 0 3 0 0 3
+4 0 9378 9378
+4 0 9378 0 9378 0 0 15 0 0 15
+4 0 9378 9378
+4 0 9378 0 9378 0 0 1 0 0 1
+4 0 9378 9378
+4 0 9378 0 9378
+4 0 9378
+4 0 9378
+4 0 9378 0 0 0 0 0 0 0 0 9378 632
jcnd=1070/9378 0x3877c89c60 0 
* 0 
-32 0 138 138
+4 0 138 0 138
+4 0 138 138
+4 0 138 0 138
+4 0 138 138
+4 0 138 0 138
+4 0 138
+4 0 138
+4 0 138 0 0 0 0 0 0 0 0 138
jcnd=10/138 0x3877c89c60 0 
* 0 
-24 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136
+4 0 136
+4 0 136 0 0 0 0 0 0 0 0 136
jcnd=8/136 0x3877c89c60 0 
* 0 
-16 0 142 142 0 1 0 0 1
+4 0 142 0 142
+4 0 142 0 0 1 0 0 1
+4 0 142
+4 0 142 0 0 0 0 0 0 0 0 142 4
jcnd=10/142 0x3877c89c60 0 
* 0 
+6 0 8824
+4 0 8824 8824
+3 0 8824 0 8824 0 0 1 0 0 1
+3 0 8824 8824
+4 0 8824 0 8824 0 0 3 0 0 3
+4 0 8824 8824
+4 0 8824 0 8824 0 0 18 0 0 18
+4 0 8824 8824
+4 0 8824 0 8824
+4 0 8824
jump=8824 -80 0 
* 0 
-30 0 136 136
+3 0 136 0 136
+3 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136 0 0 1 0 0 1
+4 0 136 136
+4 0 136 0 136
+4 0 136
jump=136 -80 0 
* 0 
-24 0 146 146
+4 0 146 0 146
+4 0 146 146
+4 0 146 0 146
+4 0 146 146
+4 0 146 0 146
+4 0 146
jump=146 -80 0 
* 0 
-16 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136
jump=136 -80 0 
* 0 
+8 0 136 136
+3 0 136
+4 0 136 0 0 1 0 0 1
+4 0 136
+4 0 136
jump=136 -39 0 
* 0 
+9 0 146
+3 0 146 0 0 0 0 0 0 0 0 146
+6 0 146 146
+3 0 146
+4 0 146
jump=146 -72 0 
* 0 
+8 0 136
+4 0 136 136
+3 0 136 0 0 0 0 0 0 0 0 136
+2 0 136
+4 0 136
jump=136 -99 0 
* 0 
+11 0 142 142 0 1 0 0 1
+3 0 142
+4 0 142
+4 0 142
+4 0 142
jump=142 0x3877c89b78 0 
* 0 
+9 0 136 136
+3 0 136
+4 0 136
+4 0 136
+4 0 136
jump=136 0x3877c89b70 0 
* 0 
+9 0 138 138
+3 0 138
+4 0 138
+4 0 138
+4 0 138
jump=138 0x3877c89b68 0 
* 0 
+9 0 136 136
+3 0 136
+4 0 136
+4 0 136
+4 0 136
jump=136 0x3877c89b60 0 
* 0 
+9 0 1106 0 1106 1 0 0 1
+3 0 1106 1106

fn=(104) alloc_perturb
0x3877c77180 0 990 990 0 1 0 0 1
+6 0 990
+2 0 990 0 0 0 0 0 0 0 0 990 1
+2 0 990 990

fn=(38)
0x3877c79a00 0 1116 0 1116 1 0 0 1
+2 0 1116
+3 0 1116 0 1116
+2 0 1116 0 1116
+2 0 1116 0 1116 0 0 1 0 0 1
+2 0 1116
+3 0 1116 0 1116
+1 0 1116 0 1116
+1 0 1116
+4 0 1116
+4 0 1116 0 0 0 0 0 0 0 0 1116
+6 0 1116
+4 0 1116
+6 0 1116
+3 0 1116
+4 0 1116
+4 0 1116
+4 0 1116
+3 0 1116 0 0 0 0 0 0 0 0 1116
+6 0 1116 1116 0 1 1 0 1 1
+7 0 1116 0 0 0 0 0 0 0 0 1116 7
jcnd=994/1116 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 990
+4 0 990 990
+1 0 990 990
+1 0 990 990
+2 0 990 990
+2 0 990 990
+2 0 990 990
+2 0 990 990
+7 0 1011
+7 0 1011 0 0 1 0 0 1 0 0 1011 7
jcnd=108/1011 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 3 0 0 3
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 108 0 0 1 0 0 1
+3 0 108
+4 0 108
+4 0 108 0 0 1 0 0 1 0 0 108
jcnd=108/108 0x3877c7a1a4 0 
* 0 
+30 0 108 108
+6 0 108
+5 0 108 0 0 0 0 0 0 0 0 108 1
jcnd=107/108 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 912 244 194 8 2 0 8 2 0 188 21
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1010 0 0 1 0 0 1
+3 0 1010
+3 0 1010
+3 0 1010
+4 0 1010
+3 0 1010
+4 0 1010 0 1010
+5 0 1010
+3 0 1010 0 1010
+4 0 1010 0 1010
+4 0 1010 0 1010
+5 0 1010
+3 0 1010
+3 0 1010
+3 0 1010
+3 0 1010
+4 0 1010
+4 0 1010 0 0 1 0 0 1
+4 0 1010 0 1010
+4 0 1010
+4 0 1010 0 1010
+5 0 1010 0 1010
+5 0 1010
+3 0 1010
+3 0 1010 0 1010
+5 0 1010
+5 0 1010
+3 0 1010 0 1010
+4 0 1010 0 1010
+4 0 1010
+6 0 1010 0 1010
+4 0 1010 0 1010
+5 0 1010 0 0 1 0 0 1
+3 0 1010
+3 0 1010
+3 0 1010
jump=1010 +87 0 
* 0 
+8 0 847
+3 0 847
+4 0 847
+2 0 847
+2 0 847
+3 0 847
+3 0 847
+3 0 847
+2 0 847
+2 0 847
+5 0 847
+2 0 847 847 0 0 2 0 0 2
+4 0 847
+3 0 847
+4 0 847 0 847
+4 0 847 0 847
+8 0 847
+7 0 847 0 847
+4 0 847 0 847 0 0 1 0 0 1
+4 0 847 0 847
+4 0 847 0 0 0 0 0 0 0 0 847
-38 0 148
+3 0 148
+4 0 148 0 148
+4 0 148 0 148
+8 0 148
+7 0 148 0 148
+4 0 148 0 148
+4 0 148 0 148
+4 0 148 0 0 0 0 0 0 0 0 148
+6 0 2006 2006 0 1 0 0 1
+4 0 2006
+3 0 2006 0 0 0 0 0 0 0 0 2006 91
jcnd=970/2006 0x3877c79ef0 0 
* 0 
+6 0 1036 1036
+4 0 1036 1036
+4 0 1036
+4 0 1036 0 0 0 0 0 0 0 0 1036
+6 0 1036 1036 0 1 1 0 1 1
+7 0 1036 0 0 0 0 0 0 0 0 1036
+6 0 1036
+4 0 1036
+7 0 1036 0 0 0 0 0 0 0 0 1036 6
jcnd=126/1036 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1016
+3 0 1016 0 1016
+4 0 1016 0 1016
+5 0 1016 0 0 0 0 0 0 0 0 1016 14
jcnd=21/1016 0x3877c7a090 0 
* 0 
+6 0 995
+7 0 995 0 0 0 0 0 0 0 0 995 52
jcnd=847/995 0x3877c79c50 0 
* 0 
+6 0 148 0 0 1 0 0 1
+3 0 148
+4 0 148
+4 0 148 0 0 0 0 0 0 0 0 148
+6 0 148
+3 0 148
+4 0 148
+2 0 148
+2 0 148
+3 0 148
+3 0 148
+8 0 148
+3 0 148
+2 0 148
+2 0 148
+4 0 148 148 0 0 2 0 0 2
+4 0 148
+3 0 148 0 0 1 0 0 1 0 0 148 9
jcnd=148/148 0x3877c79e15 0 
* 0 
0x3877c79e15 0 148 0 148
+4 0 148 0 148
+4 0 148
+3 0 148
jump=148 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 970 0 0 1 0 0 1
+7 0 970
+3 0 970 0 0 0 0 0 0 0 0 970 4
jcnd=108/970 0x3877c7a0b0 0 
* 0 
+6 0 970 970 0 1 0 0 1
+4 0 970
+3 0 970
+3 0 970
+2 0 970
+4 0 970
+3 0 970
+3 0 970
+2 0 970
+2 0 970
+2 0 970
+2 0 970 970 0 0 1 0 0 1
+8 0 970
+5 0 970
+5 0 970
+2 0 970 0 0 0 0 0 0 0 0 970
-2 0 483
+2 0 483 0 0 0 0 0 0 0 0 483
+2 0 1453
+2 0 1453 0 0 0 0 0 0 0 0 1453 38
jcnd=775/1453 +64 0 
* 0 
+2 0 678
+8 0 678
+3 0 678
+3 0 678 0 0 0 0 0 0 0 0 678 1
jcnd=1/678 0x3877c79fc0 0 
* 0 
-6 0 825
+3 0 825
+3 0 825 0 0 0 0 0 0 0 0 825 9
jcnd=401/825 0x3877c79fc0 0 
* 0 
+2 0 1101
+2 0 1101 1101
+8 0 1101
+2 0 1101 0 0 0 0 0 0 0 0 1101 26
jcnd=825/1101 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
+2 0 276
+2 0 276
+4 0 276
+2 0 276
+2 0 276 0 0 0 0 0 0 0 0 276 6
jcnd=214/276 -8 0 
* 0 
-8 0 7234
+4 0 7234
+2 0 7234
+2 0 7234 0 0 0 0 0 0 0 0 7234 469
jcnd=6315/7234 -8 0 
* 0 
-2 0 775 0 0 1 0 0 1
+2 0 775 0 0 0 0 0 0 0 0 775 19
jcnd=705/775 -8 0 
* 0 
+2 0 1051 1051 0 0 14 0 0 14
+4 0 1051 0 0 1 0 0 1
+3 0 1051 0 0 0 0 0 0 0 0 1051 440
jcnd=568/1051 0x3877c7a1cf 0 
* 0 
+6 0 483
+2 0 483
+4 0 483
+2 0 483
+2 0 483
+2 0 483 0 483
+8 0 483
jump=483 0x3877c79f30 0 
* 0 
+37 0 402 402 0 1 0 0 1
+5 0 402 402
+4 0 402
+4 0 402 402
+5 0 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 108 108
+4 0 108
+4 0 108
+2 0 108
+5 0 108 108 0 1 0 0 1
+4 0 108
+3 0 108 0 0 0 0 0 0 0 0 108
jcnd=108/108 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 108 0 0 1 0 0 1
+3 0 108 0 108
+4 0 108
jump=108 0x3877c79b99 0 
* 0 
+36 0 568 568 0 1 1 0 1 1
+4 0 568 568 0 0 1 0 0 1
+4 0 568
+3 0 568 568
+4 0 568
+4 0 568
+3 0 568
+3 0 568 568
+4 0 568 0 0 0 0 0 0 0 0 568
+6 0 568 568
+4 0 568 0 0 0 0 0 0 0 0 568
+6 0 568 568 0 1 0 0 1
+8 0 568 0 568
+4 0 568 0 568
+4 0 568 0 0 0 0 0 0 0 0 568 11
jcnd=418/568 +38 0 
* 0 
+2 0 150 150 0 0 1 0 0 1
+4 0 150
+3 0 150 0 0 0 0 0 0 0 0 150
+2 0 150 150
+5 0 150 0 0 0 0 0 0 0 0 150
+6 0 150 150
+4 0 150 0 150
+4 0 150 150
+4 0 150 0 150
+4 0 150
+4 0 150 0 0 0 0 0 0 0 0 150
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 547 547
+4 0 547 547 0 1 0 0 1
+4 0 547 0 0 0 0 0 0 0 0 547
+6 0 547
+4 0 547
+7 0 547 0 547 0 0 7 0 0 7
+4 0 547 0 547
+4 0 547 0 547
+4 0 547 0 547
+4 0 547 0 0 0 0 0 0 0 0 547 4
jcnd=82/547 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 82
+7 0 82 0 0 0 0 0 0 0 0 82
jcnd=82/82 +18 0 
* 0 
+2 0 7 0 7 0 0 2 0 0 2
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 540
+7 0 540 0 540
+4 0 540
+3 0 540
+3 0 540
+4 0 540
+3 0 540
+4 0 540
+3 0 540
+3 0 540
+4 0 540 0 540
+4 0 540 0 540 0 0 1 0 0 1
+4 0 540
jump=540 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 21
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 +7 0 
* 0 
+7 0 568
+4 0 568 0 0 1 0 0 1
+3 0 568
+3 0 568 0 568
cfn=(104)
calls=568 0x3877c77180 0 
* 0 2272 1136 0 1 0 0 1 0 0 568
+5 0 568
+3 0 568
jump=568 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 402 0 0 1 0 0 1
+7 0 402
+2 0 402
+4 0 402
+3 0 402
+3 0 402 0 402
+5 0 402
+3 0 402
+4 0 402
+3 0 402 0 0 1 0 0 1
+4 0 402
+4 0 402
+3 0 402
+4 0 402 0 402
+4 0 402 0 402 0 0 15 0 0 15
+4 0 402
+3 0 402
+3 0 402 0 402
cfn=(104)
calls=402 0x3877c77180 0 
* 0 1608 804 0 0 0 0 0 0 0 402 1
+5 0 402
+3 0 402
jump=402 0x3877c79ae3 0 
* 0 

totals: 7374968 2992345 1742296 238 91 115 238 91 115 222430 4236 6686 137
