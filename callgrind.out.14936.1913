version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1913


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2484601881 - 2485210419
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 906 0 0 1 0 0 1
+3 0 906 0 0 0 0 0 0 0 0 906
+2 0 906
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=906 0x3877c7b8b0 0 
* 0 108095 28357 15267 19 4 0 19 4 0 26591 430
* 0 906 906 0 1 1 0 1 1 0 0 0 906

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 906 0 906 1 0 0 1
+1 0 906
+5 0 906
+3 0 906 0 906
+1 0 906
+4 0 906 0 0 1 0 0 1
+3 0 906
+4 0 906
+3 0 906 0 906 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=906 0x3877c7aa50 0 
* 0 279902 39415 40654 45 37 45 45 37 45 48708 1890
* 0 906 906 0 1 1 0 1 1 0 0 0 906
+5 0 906
+3 0 906 0 0 0 0 0 0 0 0 906
jcnd=906/906 +96 0 
* 0 
+96 0 906 0 0 1 0 0 1
+4 0 906 906
+1 0 906 906
+1 0 906 906

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 446
+4 * 446
+3 * 446 0 446
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=446 0x4044cc -35 
* * 2230 892 892
+5 * 446 446
+1 * 446 446

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446 1 0 0 1
+4 +1 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=446 0x4049d4 -35 
* * 2676 892 1338 1 0 0 1
+5 * 446 446
+1 * 446 446

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 446
+4 * 446
+3 * 446 0 446
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=446 0x404520 -35 
* * 2230 892 892
+5 * 446 446
+1 * 446 446

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=446 0x404a28 -35 
* * 2676 892 1338 1 0 1 1 0 1
+5 * 446 446
+1 * 446 446

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 223 0 223
+1 * 223
+3 * 223
+4 * 223 0 223
+4 * 223 0 223
+4 * 223 0 223
+4 +1 223 223
+4 * 223 223
+4 * 223 223
+4 * 223
+3 * 223
+3 * 223 0 223
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=223 0x403df2 -87 
* * 5352 1784 2007 0 15 4 0 15 4 223 1
+5 * 223 223
+1 * 223 223

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 446 0 446 1 0 0 1
+1 * 446
+3 * 446 0 446
+4 * 446 446
+4 * 446 446
+1 * 446 446

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 223 0 223
+1 * 223
+3 * 223
+4 * 223 0 223
+4 * 223 0 223
+4 * 223 0 223
+4 +1 223 223
+4 * 223 223
+4 * 223 223
+4 * 223
+3 * 223
+3 * 223 0 223
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=223 0x40406a -87 
* * 5352 1784 2007 0 15 7 0 15 7 223
+5 * 223 223
+1 * 223 223

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 446 0 446
+1 * 446
+3 * 446 0 446
+4 * 446 446
+4 * 446 446
+1 * 446 446

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 516 0 516
+1 * 516
+3 * 516 0 516 0 0 1 0 0 1
+4 +1 516 516
+4 * 516 516
+1 * 516 516

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 +1 892
+4 * 892
+3 * 892 0 892
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=892 0x404ffe 790 
* * 5352 2676 1784 1 0 0 1
+5 * 892 892
+3 * 892 892
+1 * 892 892

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+4 +1 892 892
+4 * 892 892
+1 * 892 892

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 +1 892
+4 * 892
+3 * 892 0 892 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=892 0x40500c 790 
* * 5352 2676 1784 1 0 0 1
+5 * 892 892
+3 * 892 892
+1 * 892 892

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 516 0 516
+1 * 516
+3 * 516 0 516
+4 +1 516 516
+4 * 516 516
+1 * 516 516

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+4 +1 892 892 0 1 0 0 1
+4 * 892 892
+1 * 892 892

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 446 0 446
+1 * 446
+3 * 446 0 446
+4 * 446 0 446
+4 * 446 446
+4 * 446 446
+1 * 446 446

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 453 0 453 1 0 0 1
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 * 453 0 453
+4 +2 453 453
+4 * 453
+3 * 453 0 453
cfn=(102)
calls=453 0x4048de +12 
* * 2718 906 906 1 0 0 1
+5 * 453 453
+4 * 453 0 0 1 0 0 1
+3 * 453
+2 * 453 0 0 0 0 0 0 0 0 453
jcnd=453/453 +7 +3 
* * 
+7 +3 453 453
+4 * 453
+4 * 453
+3 * 453 0 453
cob=(5)
cfi=(8)
cfn=(32)
calls=453 0x387e4bd0b0 0 
* * 149022 22134 20951 23 13 28 23 13 28 25458 921 453
* * 453 453 0 0 0 0 0 0 0 0 0 453
+5 +1 453 453
+1 * 453 453

fn=(18)
0x404a28 81 446 0 446 1 0 0 1
+1 * 446
+3 * 446 0 446 0 0 1 0 0 1
+4 * 446 0 446
+4 * 446 446
+1 * 446 446

fn=(92)
0x4049d4 81 446 0 446 1 0 0 1
+1 * 446
+3 * 446 0 446
+4 * 446 0 446
+4 * 446 446
+1 * 446 446

fn=(196)
0x404520 86 446 0 446
+1 * 446
+3 * 446 0 446
+4 * 446 446
+1 * 446 446

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 453 0 453 1 0 0 1
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 * 453 0 453 1 0 0 1
+4 +2 453 453
+4 * 453
+3 * 453 0 453
cfn=(28)
calls=453 0x404992 +12 
* * 2718 906 906 1 0 0 1
+5 * 453 453
+4 * 453
+3 * 453
+2 * 453 0 0 0 0 0 0 0 0 453
jcnd=453/453 +7 +3 
* * 
+7 +3 453 453
+4 * 453
+4 * 453
+3 * 453 0 453
cob=(5)
cfi=(8)
cfn=(32)
calls=453 0x387e4bd0b0 0 
* * 145376 20905 22421 26 25 18 26 25 18 24156 969 453
* * 453 453 0 1 1 0 1 1 0 0 0 453
+5 +1 453 453
+1 * 453 453

fn=(102)
0x4048de 113 467 0 467 1 0 0 1
+1 * 467
+3 * 467 0 467
+4 +1 467
+10 * 467 467
+1 * 467 467

fn=(266)
0x40406a 129 223 0 223
+1 * 223
+3 * 223
+4 * 223 0 223
+4 * 223 0 223
+4 * 223 0 223
+4 +1 223 223
+4 * 223
+3 * 223
+5 * 223 0 223
cfi=(16)
cfn=(226)
calls=223 0x402d61 -20 
* * 1561 669 669
+5 * 223
+3 * 223 0 0 0 0 0 0 0 0 223
+2 * 223 223
+4 * 223 223 0 0 15 0 0 15
+2 * 223 0 223 0 0 7 0 0 7
+2 * 223 223
+1 * 223 223

fn=(28)
0x404992 113 467 0 467 1 0 0 1
+1 * 467
+3 * 467 0 467
+4 +1 467
+10 * 467 467
+1 * 467 467

fn=(176)
0x4044cc 86 446 0 446
+1 * 446
+3 * 446 0 446
+4 * 446 446
+1 * 446 446

fn=(224)
0x403df2 129 223 0 223
+1 * 223
+3 * 223
+4 * 223 0 223
+4 * 223 0 223
+4 * 223 0 223
+4 +1 223 223
+4 * 223
+3 * 223
+5 * 223 0 223
cfi=(16)
cfn=(226)
calls=223 0x402d61 -20 
* * 1561 669 669
+5 * 223
+3 * 223 0 0 0 0 0 0 0 0 223 1
+2 * 223 223
+4 * 223 223 0 0 15 0 0 15
+2 * 223 0 223 0 0 4 0 0 4
+2 * 223 223
+1 * 223 223

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 453 0 453
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 * 453 0 453
+4 +1 453 453
+4 * 453
+3 * 453 0 453
cob=(5)
cfi=(8)
cfn=(164)
calls=453 0x387e4bb2f0 0 
* * 56745 14817 8008 21 4 0 21 4 0 13922 198 453
* * 453 453 0 1 1 0 1 1 0 0 0 453
+5 * 453 453
+1 * 453 453

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 453 0 453
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 * 453 0 453
+4 +1 453 453
+4 * 453
+3 * 453 0 453
cob=(5)
cfi=(8)
cfn=(164)
calls=453 0x387e4bb2f0 0 
* * 54974 14446 7259 0 1 0 0 1 0 13575 232 453
* * 453 453 0 0 0 0 0 0 0 0 0 453
+5 * 453 453
+1 * 453 453

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=446 0x404484 107 
* * 192312 62568 59896 25 3 6 25 3 6 6970 510 888 111
+5 * 446 446
+1 * 446 446

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +2 446 446 0 1 0 0 1
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=446 0x404a36 450 
* * 179824 58108 55436 24 3 6 24 3 6 6970 510 888 111
+5 * 446 446
+1 * 446 446

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=446 0x40439c 107 
* * 192312 62568 59896 7 1 5 7 1 5 6970 436 888
+5 * 446 446
+1 * 446 446

fn=(116)
0x40439c 107 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +10 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=446 0x4047d7 -26 
* * 186068 60338 57666 7 1 5 7 1 5 6970 436 888
+5 +1 446 446
+1 * 446 446

fn=(118)
0x4047d7 91 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=446 0x4049e2 450 
* * 179824 58108 55436 7 1 5 7 1 5 6970 436 888
+5 * 446 446
+1 * 446 446

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +10 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(52)
calls=446 0x404829 -26 
* * 186068 60338 57666 25 3 6 25 3 6 6970 510 888 111
+5 +1 446 446
+1 * 446 446

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 446 0 446
+1 * 446
+3 * 446 0 446
+1 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=446 0x4043ca -45 
* * 16056 5798 6244 4 0 4 4 0 4
+5 +1 446 446 0 1 0 0 1
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=446 0x404412 +43 
* * 173124 31738 30573 24 16 10 24 16 10 24686 931 892
+5 * 446
jump=446 +28 * 
* * 
+28 * 446
+4 * 446 446
+1 * 446 446
+1 * 446 446

fn=(14)
0x4043ca 90 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446 0 0 1 0 0 1
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(4)
cfn=(16)
calls=446 0x404804 +24 
* * 8028 2676 3122 2 0 1 2 0 1
+5 * 446 446
+4 * 446 0 446 0 0 2 0 0 2
+7 * 446 446
+4 * 446 0 446 1 0 0 1
+8 * 446 446
+4 * 446 0 446
+8 +1 446 446
+1 * 446 446

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 446 0 446 1 0 0 1
+1 * 446
+3 * 446 0 446
+2 * 446 0 446
+2 * 446 0 446
+1 * 446 0 0 1 0 0 1
+4 * 446 0 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446
+3 * 446 0 446
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=446 0x4039fc 117 
* * 2676 1338 892 2 0 0 2
+5 * 446
+3 * 446 0 446
cfi=(3)
cfn=(84)
calls=446 0x4039ed -88 
* * 2676 1338 892
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=446 0x402d74 645 
* * 5798 2676 892
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446
+3 * 446
+3 * 446 0 446 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=446 0x403a0a 134 
* * 202032 41655 38283 22 8 25 22 8 25 25877 876 892
+5 +4 446 446
+4 * 446
+3 * 446 0 446
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=446 0x40325e 113 
* * 2676 1338 892 1 0 0 1
+5 * 446
+3 * 446 446
+4 * 446 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=446 0x403a98 565 
* * 11150 4460 3568 2 0 0 2
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=446 0x403a68 547 
* * 11150 4460 3568
+5 * 446
+3 * 446
+3 * 446
+3 * 446
+3 * 446 0 446
cfi=(11)
cfn=(114)
calls=446 0x403ac9 -60 
* * 199002 64798 62572 7 1 5 7 1 5 6970 436 888
+5 -3 446 446
+4 * 446 0 446
+4 * 446
jump=446 +28 +4 
* * 
+28 +4 446
+4 * 446 446
+1 * 446 446
+2 * 446 446
+2 * 446 446
+1 * 446 446

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 453 0 453 1 0 0 1
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 * 453 0 453
+4 +2 453 453
+5 * 453 0 0 0 0 0 0 0 0 453 7
+2 +1 453 453
+4 * 453 453
+4 * 453 453
+4 * 453
+3 * 453
+3 * 453 0 453
cfi=(5)
cfn=(190)
calls=453 0x40452a -65 
* * 60410 16258 9524 0 1 0 0 1 0 13575 232 906
+5 +1 453 453
+1 * 453 453

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 453 0 453 1 0 0 1
+1 * 453
+3 * 453
+4 * 453 0 453 1 0 0 1
+4 * 453 0 453
+4 0 453 453
+5 0 453 0 0 0 0 0 0 0 0 453
+2 0 453 453
+4 0 453 453
+4 0 453
+5 0 453
+3 0 453
+3 0 453 0 453
fi=(6) ???
cfi=(5)
cfn=(26)
calls=453 0x404730 99 
* 0 157154 24529 26045 30 26 18 30 26 18 24609 969 906
+5 0 453
fi=(6)
jump=453 +7 0 
* 0 
+7 0 453 453
+1 0 453 453

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+4 * 446 0 446
+4 * 446
+4 * 446 0 0 1 0 0 1
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=446 0x404468 726 
* * 4460 2230 1784 1 0 0 1
+5 * 446 446
+4 * 446 446
+1 * 446 446

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+3 * 446 0 446
+4 * 446
+4 * 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(10)
cfn=(44)
calls=446 0x404468 726 
* * 4460 2230 1784
+5 * 446 446
+4 * 446 446
+1 * 446 446

fn=(86)
0x403a0a 134 446 0 446
+1 * 446
+3 * 446 0 446
+1 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=446 0x4042e2 -45 
* * 16056 5798 6244 5 0 0 5
+5 +1 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=446 0x40432a +43 
* * 176164 32735 28917 16 8 25 16 8 25 25877 876 892
+5 * 446
jump=446 +28 * 
* * 
+28 * 446
+4 * 446 446
+1 * 446 446
+1 * 446 446

fn=(88)
0x4042e2 90 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446 1 0 0 1
cfi=(4)
cfn=(90)
calls=446 0x4047b2 +24 
* * 8028 2676 3122 3 0 0 3
+5 * 446 446
+4 * 446 0 446
+7 * 446 446
+4 * 446 0 446
+8 * 446 446
+4 * 446 0 446
+8 +1 446 446
+1 * 446 446

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 446 0 446 1 0 0 1
+1 * 446
+3 * 446 0 446
+1 * 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446 446 0 1 0 0 1
+4 * 446
+3 * 446 446
+4 * 446 446
+3 * 446
+3 * 446
+3 * 446
+4 * 446
+3 * 446 446
+4 * 446 446
+3 -1 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=446 0x403ce6 +11 
* * 68512 19104 12376 22 5 0 22 5 0 14206 194 892
+5 +1 446 446
+4 * 446
+3 * 446 0 446
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=446 0x4031b8 -82 
* * 10258 3568 3568 1 0 0 1
+5 * 446
jump=446 +28 * 
* * 
+28 * 446
+4 * 446 446
+1 * 446 446
+1 * 446 446

fn=(172)
0x4031b8 79 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 446
+4 * 446
+3 * 446 0 446
cfi=(4)
cfn=(174)
calls=446 0x403ccc +42 
* * 6244 2230 2230
+5 * 446 446
+1 * 446 446

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 920 0 920 1 0 0 1
+1 * 920
+3 * 920 0 920
+4 +1 920 920
+4 * 920 920 0 0 2 0 0 2
+4 * 920
+3 * 920 920
+4 * 920 920
+3 * 920
+3 * 920
+3 * 920
+4 * 920 920
+1 * 920 920

fn=(106)
0x40325e 113 913 0 913 1 0 0 1
+1 * 913
+3 * 913 0 913
+4 +1 913 913
+4 * 913 913
+1 * 913 913

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 460 0 460 1 0 0 1
+1 * 460
+3 * 460 0 460 0 0 1 0 0 1
+4 +1 460 460
+4 * 460 460
+1 * 460 460

fn=(82)
0x4039fc 117 460 0 460 1 0 0 1
+1 * 460
+3 * 460 0 460 1 0 0 1
+4 +1 460 460
+4 * 460 460
+1 * 460 460

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 223 0 223
+1 * 223
+3 * 223
+4 * 223 0 223
+4 * 223 0 223
+4 +2 223 223
+4 * 223 223
+4 * 223 223
+4 * 223 223
+4 * 223
+3 * 223 0 0 0 0 0 0 0 0 223 7
jcnd=7/223 +51 +10 
* * 
+2 +3 216 216
+4 * 216 216
+4 * 216 216
+4 -1 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(3)
cfn=(222)
calls=216 0x403373 215 
* * 8208 2808 3024 0 14 3 0 14 3 216 1
+5 +2 216 216
+4 * 216 216
+4 * 216
+4 * 216 216
+4 * 216 0 216
+4 * 216
jump=216 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11011 3367 2917 36 6 7 36 6 7 774 54 41
+5 +2 223 223
+1 * 223 223

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 446 0 446 1 0 0 1
+1 * 446
+3 * 446 0 446
+2 * 446 0 446
+2 * 446 0 446
+1 * 446
+4 * 446 0 446 1 0 0 1
+4 * 446 0 446
+4 +2 446 446
+4 * 446
+3 * 446 0 446
cfn=(6)
calls=446 0x403b08 117 
* * 2676 1338 892 1 0 1 1 0 1
+5 * 446
+3 * 446 0 446
cfi=(3)
cfn=(8)
calls=446 0x403afa -88 
* * 2676 1338 892 1 0 0 1
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(10)
calls=446 0x402f54 645 
* * 5798 2676 892 1 1 0 1 1
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446
+3 * 446
+3 * 446 0 446
cfn=(12)
calls=446 0x403b16 134 
* * 198992 40658 39939 29 16 14 29 16 14 24686 931 892
+5 +4 446 446 0 1 0 0 1
+4 * 446
+3 * 446 0 446
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=446 0x40333c 113 
* * 2676 1338 892 2 0 0 2
+5 * 446
+3 * 446 446
+4 * 446 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(42)
calls=446 0x403ba4 565 
* * 11150 4460 3568 3 0 0 3
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(46)
calls=446 0x403b74 547 
* * 11150 4460 3568
+5 * 446
+3 * 446
+3 * 446
+3 * 446
+3 * 446 0 446 1 0 0 1
cfi=(11)
cfn=(48)
calls=446 0x403bd5 -60 
* * 199002 64798 62572 26 3 6 26 3 6 6970 510 888 111
+5 -3 446 446
+4 * 446 0 446
+4 * 446
jump=446 +28 +4 
* * 
+28 +4 446
+4 * 446 446
+1 * 446 446
+2 * 446 446
+2 * 446 446
+1 * 446 446

fn=(108)
0x403a98 565 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+4 * 446 0 446
+4 * 446
+4 * 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=446 0x404380 726 
* * 4460 2230 1784 1 0 0 1
+5 * 446 446
+4 * 446 446
+1 * 446 446

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 446 0 446
+1 * 446
+3 * 446 0 446
+1 * 446
+4 * 446 0 446 1 0 0 1
+4 +2 446 446
+4 * 446
+3 * 446 0 446
cfn=(40)
calls=446 0x40333c 113 
* * 2676 1338 892
+5 * 446
+3 * 446 446
+4 * 446 446
+4 * 446 446
+4 * 446 446
+3 -1 446
+3 * 446
+3 * 446 0 446
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=446 0x40334a 148 
* * 13826 4460 5352 2 0 0 2
+5 +1 446 446
+4 * 446
+3 * 446 0 446
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=446 0x4032ca 159 
* * 89454 27190 17422 3 1 0 3 1 0 13850 224 892
+5 * 446
jump=446 +28 * 
* * 
+28 * 446 0 0 1 0 0 1
+4 * 446 446
+1 * 446 446
+1 * 446 446

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 453 0 453 1 0 0 1
+1 * 453 0 0 1 0 0 1
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 0 453 453
+5 0 453 0 0 0 0 0 0 0 0 453
+2 0 453 453
+4 0 453 453
+4 0 453
+5 0 453
+3 0 453
+3 0 453 0 453
fi=(6)
cfi=(5)
cfn=(100)
calls=453 0x40461a 99 
* 0 160800 25758 24575 26 13 28 26 13 28 25911 921 906
+5 0 453
fi=(6)
jump=453 +7 0 
* 0 
+7 0 453 453
+1 0 453 453

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 76043 0 76043
+1 * 76043
+3 * 76043 0 76043
+4 * 76043 0 76043
+4 +1 76043 76043
+4 * 76043 76043
+3 * 76043 76043
+4 * 76043
+4 * 76043
+3 * 76043 76043
+1 * 76043 76043

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 76043 0 76043
+1 * 76043
+3 * 76043 0 76043 1 0 0 1
+4 * 76043 0 76043
+4 +1 76043 76043
+4 * 76043 76043
+3 * 76043 76043
+4 * 76043
+4 * 76043
+3 * 76043 76043
+1 * 76043 76043

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 446
+4 * 446
+3 * 446 0 446
cfi=(4)
cfn=(194)
calls=446 0x403d7e +42 
* * 6244 2230 2230 1 0 0 1
+5 * 446 446
+1 * 446 446

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 446 0 446 1 0 0 1
+1 * 446
+3 * 446 0 446
+1 * 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446 446
+4 * 446
+3 * 446 446
+4 * 446 446
+3 * 446
+3 * 446
+3 * 446
+4 * 446
+3 * 446 446
+4 * 446 446
+3 -1 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(188)
calls=446 0x403d98 +11 
* * 66708 18716 11624 1 1 0 1 1 0 13850 224 892
+5 +1 446 446
+4 * 446
+3 * 446 0 446
cfn=(192)
calls=446 0x403296 -82 
* * 10258 3568 3568 1 0 0 1
+5 * 446
jump=446 +28 * 
* * 
+28 * 446
+4 * 446 446
+1 * 446 446
+1 * 446 446

fn=(2)
0x402d74 645 1812 0 1812 1 0 0 1
+1 * 1812
+3 * 1812 0 1812 0 0 1 0 0 1
+4 +1 1812 1812
+4 * 1812 1812 0 1 1 0 1 1
+4 * 1812
+3 * 1812 1812
+4 * 1812 1812
+3 * 1812
+3 * 1812
+3 * 1812
+4 * 1812 1812
+1 * 1812 1812

fn=(20)
0x404412 179 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(22)
calls=446 0x404236 -14 
* * 161974 26386 27451 23 16 10 23 16 10 24686 931 892
+5 * 446 446
+4 * 446 0 446
+3 +1 446 446
+4 * 446 446 0 1 0 0 1
+3 * 446 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+3 * 446 446
+4 * 446
+4 * 446
+3 * 446 446
+4 * 446 0 446
+4 +1 446 446
+1 * 446 446

fn=(94)
0x40432a 179 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446 446 0 1 0 0 1
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(96)
calls=446 0x403fbe -14 
* * 165014 27383 25795 15 8 25 15 8 25 25877 876 892
+5 * 446 446
+4 * 446 0 446
+3 +1 446 446
+4 * 446 446
+3 * 446 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+3 * 446 446
+4 * 446
+4 * 446
+3 * 446 446
+4 * 446 0 446
+4 +1 446 446
+1 * 446 446

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 223 0 223
+1 * 223
+3 * 223 0 0 1 0 0 1
+4 * 223 0 223
+4 * 223 0 223
+4 +2 223 223
+4 * 223 223
+4 * 223 223
+4 * 223 223
+4 * 223
+3 * 223 0 0 0 0 0 0 0 0 223
jcnd=7/223 +51 +10 
* * 
+2 +3 216 216
+4 * 216 216
+4 * 216 216
+4 -1 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(3)
cfn=(264)
calls=216 0x4036b1 215 
* * 8208 2808 3024 0 14 4 0 14 4 216
+5 +2 216 216
+4 * 216 216
+4 * 216
+4 * 216 216
+4 * 216 0 216
+4 * 216
jump=216 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246)
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10438 3152 2734 27 11 14 27 11 14 672 56 41
+5 +2 223 223
+1 * 223 223

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40)
0x40333c 113 913 0 913 1 0 0 1
+1 * 913
+3 * 913 0 913 1 0 0 1
+4 +1 913 913
+4 * 913 913
+1 * 913 913

fn=(112)
0x403a68 547 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+3 * 446 0 446
+4 * 446
+4 * 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(10)
cfn=(110)
calls=446 0x404380 726 
* * 4460 2230 1784
+5 * 446 446
+4 * 446 446
+1 * 446 446

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 446 0 446
+1 * 446
+3 * 446 0 446
+1 * 446
+4 * 446 0 446 1 0 0 1
+4 +2 446 446
+4 * 446
+3 * 446 0 446
cfn=(106)
calls=446 0x40325e 113 
* * 2676 1338 892
+5 * 446
+3 * 446 446
+4 * 446 446
+4 * 446 446
+4 * 446 446
+3 -1 446
+3 * 446
+3 * 446 0 446
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=446 0x40326c 148 
* * 13826 4460 5352 4 0 0 4
+5 +1 446 446
+4 * 446
+3 * 446 0 446
cfn=(156)
calls=446 0x4031ec 159 
* * 91258 27578 18174 25 5 0 25 5 0 14206 194 892
+5 * 446
jump=446 +28 * 
* * 
+28 * 446 0 0 1 0 0 1
+4 * 446 446
+1 * 446 446
+1 * 446 446

fn=(158)
0x403ce6 171 453 0 453 1 0 0 1
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 * 453 0 453
+4 +2 453 453
+5 * 453 0 0 0 0 0 0 0 0 453
+2 +1 453 453
+4 * 453 453
+4 * 453 453
+4 * 453
+3 * 453
+3 * 453 0 453
cfi=(5)
cfn=(160)
calls=453 0x4044d6 -65 
* * 62181 16629 10273 22 5 0 22 5 0 13922 198 906
+5 +1 453 453
+1 * 453 453

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892 1 0 0 1
+4 +1 892 892
+4 * 892
+3 * 892 0 892
cfi=(13)
cfn=(58)
calls=892 0x404d8f -77 
* * 5352 2676 1784 1 0 0 1
+5 * 892 892
+1 * 892 892

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460 1 0 0 1
+4 * 460 0 460
+4 * 460 0 460
+4 +2 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460
+4 * 460 0 460
+4 +1 460 460
+5 * 460 0 0 0 0 0 0 0 0 460
jcnd=7/460 +33 +2 
* * 
+2 +1 453 453
+4 * 453
+8 * 453 453
+4 * 453 453
+4 * 453
+3 * 453 0 0 1 0 0 1
+3 * 453 0 453 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=453 0x3877c83840 0 
* * 96708 29299 28398 11 2 7 11 2 7 6586 513 448 111
* * 453 453 0 1 1 0 1 1 0 0 0 453
+5 +1 460 460
+4 * 460
+8 * 460 460
+4 * 460
+3 +1 460 460
+1 * 460 460

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460 1 0 0 1
+4 * 460 0 460
+4 * 460 0 460 0 0 1 0 0 1
+4 +2 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460
+4 * 460 0 460
+4 +1 460 460
+5 * 460 0 0 0 0 0 0 0 0 460
jcnd=7/460 +33 +2 
* * 
+2 +1 453 453
+4 * 453
+8 * 453 453
+4 * 453 453
+4 * 453
+3 * 453
+3 * 453 0 453
cob=(2)
cfi=(9)
cfn=(78)
calls=453 0x3877c83840 0 
* * 96708 29299 28398 0 1 6 0 1 6 6586 441 448
* * 453 453 0 0 0 0 0 0 0 0 0 453
+5 +1 460 460
+4 * 460
+8 * 460 460
+4 * 460
+3 +1 460 460
+1 * 460 460

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446 1 0 0 1
+4 * 446 0 446
+4 * 446 0 446
+4 +8 446 0 446
+4 +3 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(74)
calls=446 0x404f37 -22 
* * 108464 34024 30906 14 3 5 14 3 5 6970 510 888 111
+5 +1 446 446
+1 * 446 446

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 446 0 446
+1 * 446
+3 * 446 0 446
+2 * 446 0 446
+1 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +4 446 446
+4 * 446
+3 * 446 0 446
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=446 0x404878 277 
* * 6690 2676 2230 1 0 0 1
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=446 0x404d44 277 
* * 11150 4014 3568 2 0 0 2
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(132)
calls=446 0x404d44 277 
* * 11150 4014 3568
+5 * 446
+3 * 446
+3 * 446
+3 * 446 0 446
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=446 0x404d5e -49 
* * 115154 36254 33582 1 1 5 1 1 5 6970 436 888
+5 +1 446
+4 * 446 446
+1 * 446 446
+2 * 446 446
+1 * 446 446

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 446 0 446
+1 * 446
+3 * 446 0 446
+1 * 446
+4 * 446 0 446 1 0 0 1
+4 * 446 0 446
+4 * 446 0 446
+4 +10 446 446
+4 * 446
+3 * 446 0 446
cfn=(56)
calls=446 0x404c38 288 
* * 6690 2676 2230 3 0 0 3
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(56)
calls=446 0x404c38 288 
* * 6690 2676 2230
+5 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=446 0x404c52 -36 
* * 156632 50080 47408 20 3 6 20 3 6 6970 510 888 111
+5 +1 446
+4 * 446 446
+1 * 446 446
+1 * 446 446

fn=(60)
0x404c52 424 446 0 446
+1 * 446
+3 * 446 0 446
+2 * 446 0 446
+1 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +4 446 446
+4 * 446
+3 * 446 0 446
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=446 0x40492d 277 
* * 6690 2676 2230 2 0 0 2
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=446 0x404d9d 277 
* * 11150 4014 3568 2 0 1 2 0 1
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(66)
calls=446 0x404d9d 277 
* * 11150 4014 3568
+5 * 446
+3 * 446
+3 * 446
+3 * 446 0 446
cfn=(72)
calls=446 0x404db7 -49 
* * 115154 36254 33582 15 3 5 15 3 5 6970 510 888 111
+5 +1 446
+4 * 446 446
+1 * 446 446
+2 * 446 446
+1 * 446 446

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 488 0 488 1 0 0 1
+1 * 488
+3 * 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488
+3 * 488 0 488 1 0 0 1
cfi=(13)
cfn=(64)
calls=488 -33 -66 
* * 2928 1464 976
+5 * 488 488
+1 * 488 488

fn=(66)
0x404d9d 277 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892
+3 * 892 0 892
cfi=(13)
cfn=(68)
calls=892 0x404f1a -58 
* * 14272 5352 4460 2 0 1 2 0 1
+5 * 892 892
+1 * 892 892

fn=(240)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 446 0 446
+1 * 446
+3 * 446 0 446
+1 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +10 446 446
+4 * 446
+3 * 446 0 446
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=446 0x404bc6 288 
* * 6690 2676 2230 3 0 0 3
+5 * 446
+3 * 446 446
+4 * 446
+3 * 446 0 446
cfn=(122)
calls=446 0x404bc6 288 
* * 6690 2676 2230
+5 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(126)
calls=446 0x404be0 -36 
* * 156632 50080 47408 4 1 5 4 1 5 6970 436 888
+5 +1 446
+4 * 446 446
+1 * 446 446
+1 * 446 446

fn=(128)
0x404878 277 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488 1 0 0 1
+4 +1 488 488
+4 * 488
+3 * 488 0 488
cfi=(13)
cfn=(130)
calls=488 -33 -66 
* * 2928 1464 976 0 0 1 0 0 1
+5 * 488 488
+1 * 488 488

fn=(132)
0x404d44 277 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892
+3 * 892 0 892
cfi=(13)
cfn=(134)
calls=892 0x404e98 -58 
* * 14272 5352 4460 2 0 0 2
+5 * 892 892
+1 * 892 892

fn=(138)
0x404d5e 379 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +8 446 0 446
+4 +3 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfn=(140)
calls=446 0x404eb5 -22 
* * 108464 34024 30906 1 1 5 1 1 5 6970 436 888
+5 +1 446 446
+1 * 446 446

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892
+3 * 892 0 892
cfi=(13)
cfn=(124)
calls=892 0x404d36 -77 
* * 5352 2676 1784 2 0 0 2
+5 * 892 892
+1 * 892 892

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+4 +1 892 892
+4 * 892 892
+1 * 892 892

fn=(110)
0x404380 726 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+4 * 892 0 892
+4 * 892 892
+4 * 892 892
+3 * 892 892
+4 * 892 0 892
+3 * 892 892
+1 * 892 892

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+4 +1 892 892
+4 * 892 892
+1 * 892 892

fn=(44)
0x404468 726 892 0 892
+1 * 892
+3 * 892 0 892
+4 * 892 0 892
+4 * 892 892
+4 * 892 892
+3 * 892 892
+4 * 892 0 892 1 0 0 1
+3 * 892 892
+1 * 892 892

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 453 0 453 1 0 0 1
+1 * 453
+3 * 453 0 453
+4 * 453 0 453 1 0 0 1
+4 * 453 453
+1 * 453 453

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 453 0 453 1 0 0 1
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 +4 453 453
+4 * 453 453
+4 * 453
+3 * 453
+3 * 453 0 453
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=453 0x40454c -14 
* * 2718 906 1359 1 0 0 1
+5 +2 453 453
+1 * 453 453

fn=(150)
0x40326c 148 453 0 453
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 * 453 0 453
+4 +3 453 453 0 1 0 0 1
+4 * 453 453
+4 * 453
+3 * 453
+3 * 453 0 453
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=453 0x403d1a -29 
* * 8154 2718 3171 3 0 0 3
+5 +1 453 453
+1 * 453 453

fn=(180)
0x40334a 148 453 0 453
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 * 453 0 453
+4 +3 453 453
+4 * 453 453
+4 * 453
+3 * 453
+3 * 453 0 453
cfn=(182)
calls=453 0x403dcc -29 
* * 8154 2718 3171 2 0 0 2
+5 +1 453 453
+1 * 453 453

fn=(152)
0x403d1a 122 453 0 453 1 0 0 1
+1 * 453
+3 * 453
+4 * 453 0 453
+4 * 453 0 453
+4 +4 453 453
+4 * 453 453
+4 * 453
+3 * 453
+3 * 453 0 453
cfn=(154)
calls=453 0x4044f8 -14 
* * 2718 906 1359 2 0 0 2
+5 +2 453 453
+1 * 453 453

fn=(184)
0x40454c 112 453 0 453 1 0 0 1
+1 * 453
+3 * 453 0 453
+4 * 453 0 453
+4 * 453 453
+1 * 453 453

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2428 408 406 9 10 8 9 10 8 376 38 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 1 3 0 1 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 15 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3034 640 592 13 5 3 13 5 3 487 45 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 5 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 223 0 223 1 0 0 1
+1 * 223
+3 * 223
+4 * 223 0 223
+4 * 223 0 223
+4 +1 223 223
+4 * 223
+3 * 223 0 223
cfi=(2)
cfn=(2)
calls=223 0x402d74 645 
* * 2899 1338 446
+5 * 223
+3 * 223 0 223
+3 +1 223 223
+6 * 223 0 223
+3 * 223 223
+6 * 223 0 223
+3 +1 223 223
+6 * 223 0 223 1 0 0 1
+3 * 223 223
+6 * 223 0 223
+3 +2 223 0 223
+7 * 223
jump=223 +86 * 
* * 
+2 +1 25199 25199
+3 * 25199
+3 * 25199 25199
+4 * 25199
+3 * 25199
+3 * 25199 0 25199
cfi=(2)
cfn=(144)
calls=25199 0x402d9a 770 
* * 277189 125995 75597
+5 * 25199 25199
+4 * 25199 25199
+5 * 25199
+4 * 25199 0 25199
+5 +1 25199 25199
+3 * 25199
+3 * 25199 25199
+4 * 25199
+3 * 25199
+3 * 25199 0 25199
cfi=(2)
cfn=(146)
calls=25199 0x402dba 770 
* * 277189 125995 75597 1 0 0 1
+5 * 25199 25199
+2 * 25199
+4 * 25199 25199
+5 * 25199
+4 * 25199 0 25199
+5 -2 25199 0 25199
+4 * 25199 25199
+3 * 25199
+3 * 25199 25199
+3 * 25199 0 0 0 0 0 0 0 0 25199 224
jcnd=24976/25199 -93 +1 
* * 
-9 * 223 223 0 1 0 0 1
+3 * 223
+3 * 223 223
+3 * 223 0 0 0 0 0 0 0 0 223
jcnd=223/223 -93 +1 
* * 
+2 +4 223 223
+3 * 223
+3 * 223
+4 * 223 223 0 1 0 0 1
+5 * 223
+4 * 223
+3 * 223 0 223
+5 +1 223 223
+3 * 223
+3 * 223
+4 * 223 223
+5 * 223
+4 * 223
+3 * 223 0 223
+5 +1 223 0 223
+7 * 223
jump=223 0x4016ee * 
* * 
+2 +1 25199 25199
+3 * 25199
+3 * 25199 25199
+4 * 25199
+3 * 25199 0 0 1 0 0 1
+3 * 25199 0 25199
cfi=(2)
cfn=(146)
calls=25199 0x402dba 770 
* * 277189 125995 75597
+5 * 25199 25199
+2 * 25199
+4 * 25199 25199
+5 * 25199 0 25199
+5 +1 25199 25199
+3 * 25199
+3 * 25199 25199
+4 * 25199
+3 * 25199
+3 * 25199 0 25199
cfi=(2)
cfn=(144)
calls=25199 0x402d9a 770 
* * 277189 125995 75597
+5 * 25199 25199
+4 * 25199 25199
+5 * 25199 0 25199
+5 +1 25199 25199
+5 * 25199 25199
+5 * 25199 25199
+5 * 25199
+4 * 25199 0 25199
+5 +1 25199 25199
+5 * 25199 25199
+5 * 25199 25199
+5 * 25199
+4 * 25199 0 25199
+5 -4 25199 0 25199
+4 * 25199 25199
+3 * 25199
+3 * 25199 25199
+3 * 25199 0 0 0 0 0 0 0 0 25199 224
jcnd=24976/25199 0x401672 +1 
* * 
-9 * 223 223 0 1 0 0 1
+3 * 223
+3 * 223 223
+3 * 223 0 0 0 0 0 0 0 0 223
jcnd=223/223 0x401672 +1 
* * 
+6 +6 223 223 0 1 0 0 1
+5 * 223 223
+5 * 223 0 223
+5 +2 223 223
+3 +1 223 0 223
+3 * 223 223
+5 * 223 223
+1 * 223 223

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 223
+7 * 223
+7 * 223
+3 * 223
+3 * 223 0 223
cfi=(2)
cfn=(4)
calls=223 0x4030b2 310 
* * 228338 63659 60006 63 19 20 63 19 20 15828 823 890 111
+5 * 223
+7 * 223
+7 * 223
+3 * 223
+3 * 223 0 223
cfi=(2)
cfn=(80)
calls=223 0x402ff4 310 
* * 230186 64184 59210 37 9 30 37 9 30 16489 714 890
+5 * 223 0 0 1 0 0 1
+7 * 223
+7 * 223
+3 * 223
+3 * 223 0 223
cfn=(142)
calls=223 0x401585 -52 
* * 2635191 1164729 608567 8 0 0 8 0 0 50844 448
+5 * 223 0 223
+8 * 223 223
+6 * 223 0 223
+6 * 223
+7 * 223
+3 * 223 0 223
cfi=(2)
cfn=(148)
calls=223 0x402df4 414 
* * 59232 18695 13547 31 5 0 31 5 0 7103 99 446
+5 * 223
+7 * 223
+3 * 223 0 223 1 0 0 1
cfi=(2)
cfn=(178)
calls=223 0x402e74 414 
* * 58330 18501 13171 7 1 0 7 1 0 6925 113 446
+5 +2 223
+7 * 223
+7 * 223
+3 * 223
+3 * 223 0 223
cfi=(2)
cfn=(4)
calls=223 0x4030b2 310 
* * 228082 63651 59899 4 1 1 4 1 1 15828 618 890
+5 * 223
+7 * 223
+7 * 223
+3 * 223
+3 * 223 0 223
cfi=(2)
cfn=(80)
calls=223 0x402ff4 310 
* * 229274 64123 59039 0 0 0 0 0 0 16358 598 890
+5 * 223 223
+6 * 223 0 0 1 0 0 1
+7 * 223
+7 * 223 0 223
+6 * 223 223
+8 * 223
+3 * 223
+3 * 223 0 223
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=223 0x401719 -33 
* * 1222709 508886 280534 4 0 0 4 0 0 25422 224
+5 * 223 0 223
+8 * 223 223
+6 * 223 0 223
+6 * 223
+7 * 223 0 0 1 0 0 1
+3 * 223 0 223
cfi=(2)
cfn=(148)
calls=223 0x402df4 414 
* * 59232 18695 13547 0 0 0 0 0 0 7103 95 446
+5 * 223
+7 * 223
+3 * 223 0 223
cfi=(2)
cfn=(178)
calls=223 0x402e74 414 
* * 58330 18501 13171 0 0 0 0 0 0 6925 111 446
+5 +2 223 223
+7 * 223
+3 * 223 0 223
cfi=(2)
cfn=(2)
calls=223 0x402d74 645 
* * 2899 1338 446
+5 * 223 223
+6 * 223
+3 * 223
+3 * 223
+3 * 223 223
+7 * 223
+3 * 223 0 0 1 0 0 1
+3 * 223 0 223
cfi=(2)
cfn=(144)
calls=223 0x402d9a 770 
* * 2453 1115 669
+5 * 223
+3 * 223
+7 * 223
+3 * 223
+3 * 223 0 223
cfi=(2)
cfn=(200)
calls=223 0x402eda 901 
* * 25150 9109 7105 39 20 10 39 20 10 1213 62 41
+5 +1 223 223
+7 * 223
+3 * 223 0 223
cfi=(2)
cfn=(10)
calls=223 0x402f54 645 
* * 2899 1338 446 0 1 0 0 1
+5 * 223 223
+6 * 223
+3 * 223
+3 * 223
+3 * 223 223
+7 * 223 0 0 1 0 0 1
+3 * 223
+3 * 223 0 223
cfi=(2)
cfn=(146)
calls=223 0x402dba 770 
* * 2453 1115 669
+5 * 223
+3 * 223
+7 * 223
+3 * 223
+3 * 223 0 223
cfi=(2)
cfn=(244)
calls=223 0x402f7a 901 
* * 24577 8894 6922 28 25 18 28 25 18 1111 56 41
+5 +1 223 223
+7 * 223
+3 * 223 0 223
cfi=(2)
cfn=(10)
calls=223 0x402f54 645 
* * 2899 1338 446
+5 * 223 223
+6 * 223
+3 * 223
+3 * 223
+3 * 223 223 0 1 0 0 1
+7 * 223
+3 * 223
+3 * 223 0 223
cfi=(2)
cfn=(146)
calls=223 0x402dba 770 
* * 2453 1115 669
+5 * 223 223
+2 * 223
+4 * 223 223
+8 * 223 223
+8 * 223 0 223
+8 +1 223 223
+7 * 223
+3 * 223 0 223
cfi=(2)
cfn=(2)
calls=223 0x402d74 645 
* * 2899 1338 446
+5 * 223 223 0 1 0 0 1
+6 * 223
+3 * 223
+3 * 223
+3 * 223 223
+7 * 223
+3 * 223
+3 * 223 0 223
cfi=(2)
cfn=(144)
calls=223 0x402d9a 770 
* * 2453 1115 669
+5 * 223 223
+4 * 223 223
+8 * 223
+4 * 223 223
+8 * 223
+3 * 223 0 223
+8 +2 223 0 223
+7 -12 223 223
+8 * 223 223
+7 * 223 0 0 0 0 0 0 0 0 223 1
jcnd=1/223 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 223
+7 * 223
+3 * 223 0 223
cfi=(2)
cfn=(2)
calls=223 0x402d74 645 
* * 2899 1338 446 2 0 1 2 0 1
+5 * 223
+3 * 223 223
+7 * 223
+3 * 223 0 223
cfi=(2)
cfn=(2)
calls=223 0x402d74 645 
* * 2899 1338 446 0 1 0 0 1
+5 * 223
+3 * 223 0 0 0 0 0 0 0 0 223 1
+2 * 223 0 0 1 0 0 1
+5 * 223
jump=223 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 223
+2 * 223 0 0 0 0 0 0 0 0 223
jcnd=223/223 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 223 0 223
+1 * 223
+3 * 223
+4 * 223 0 223
+4 * 223 0 223
+4 * 223 0 223
+5 +1 223 223
+4 * 223
+3 * 223 0 223
cfi=(2)
cfn=(2)
calls=223 0x402d74 645 
* * 2899 1338 446
+5 * 223
+3 * 223 0 223
+3 +1 223 223 0 1 0 0 1
+6 * 223 0 223
+3 * 223 223
+6 * 223 0 223
+3 +2 223 0 223
+7 * 223
jump=223 +86 * 
* * 
+2 +1 25199 25199
+3 * 25199
+3 * 25199 25199
+4 * 25199
+3 * 25199
+3 * 25199 0 25199
cfi=(2)
cfn=(144)
calls=25199 0x402d9a 770 
* * 277189 125995 75597
+5 * 25199 25199
+4 * 25199 25199
+5 * 25199
+4 * 25199 0 25199
+5 +1 25199 25199
+3 * 25199
+3 * 25199 25199
+4 * 25199
+3 * 25199
+3 * 25199 0 25199
cfi=(2)
cfn=(146)
calls=25199 0x402dba 770 
* * 277189 125995 75597
+5 * 25199 25199
+2 * 25199
+4 * 25199 25199
+5 * 25199
+4 * 25199 0 25199
+5 -2 25199 0 25199
+4 * 25199 25199
+3 * 25199
+3 * 25199 25199
+3 * 25199 0 0 0 0 0 0 0 0 25199 224
jcnd=24976/25199 -93 +1 
* * 
-9 * 223 223 0 1 0 0 1
+3 * 223
+3 * 223 223
+3 * 223 0 0 0 0 0 0 0 0 223
jcnd=223/223 -93 +1 
* * 
+2 +4 223 223
+3 * 223
+3 * 223 0 0 1 0 0 1
+4 * 223 223
+5 * 223
+4 * 223
+3 * 223 0 223
+5 +1 223 223
+3 * 223
+3 * 223
+4 * 223 223
+5 * 223
+4 * 223
+3 * 223 0 223
+5 +1 223 223
+5 * 223 223
+5 * 223 223
+5 * 223 0 0 1 0 0 1
+4 * 223
+3 * 223 0 223
+5 +2 223 223
+3 +1 223 0 223
+3 * 223 223
+5 * 223 223
+1 * 223 223

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 906 0 906 1 0 0 1
+2 0 906 0 906
+2 0 906 0 906
+2 0 906
+3 0 906 0 906
+2 0 906 0 906
+1 0 906 0 906
+1 0 906
+3 0 906
+4 0 906 906
+4 0 906 0 906
+4 0 906
+3 0 906
+4 0 906
+3 0 906
+3 0 906
+3 0 906 0 0 1 0 0 1 0 0 906
+6 0 906
+4 0 906 0 0 0 0 0 0 0 0 906
+6 0 906
+4 0 906 0 0 0 0 0 0 0 0 906
+6 0 906 906
+7 0 906 0 0 0 0 0 0 0 0 906 4
jcnd=782/906 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 782
+2 0 782 0 0 0 0 0 0 0 0 782
+6 0 782 782 0 1 0 0 1
+4 0 782
+3 0 782
+2 0 782 0 0 0 0 0 0 0 0 782
jcnd=782/782 0x3877c78a40 0 
* 0 
+6 0 782 782
+4 0 782
+3 0 782 0 0 0 0 0 0 0 0 782
+6 0 782 782
+5 0 782
+4 0 782 0 0 0 0 0 0 0 0 782
jcnd=782/782 0x3877c7907c 0 
* 0 
+6 0 782 782
+5 0 782
+4 0 782 0 0 0 0 0 0 0 0 782
+6 0 782
+4 0 782 0 0 1 0 0 1 0 0 782
+6 0 782
+4 0 782 782
+7 0 782 0 0 0 0 0 0 0 0 782
+6 0 782 782
+6 0 782
+2 0 782 0 0 0 0 0 0 0 0 782
+6 0 782 782
+4 0 782 0 0 0 0 0 0 0 0 782 5
jcnd=778/782 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 782 782 0 1 0 0 1
+4 0 782 0 0 0 0 0 0 0 0 782
+6 0 782 782
+6 0 782 0 0 1 0 0 1 0 0 782 44
jcnd=29/782 0x3877c78a78 0 
* 0 
+6 0 753 753
+5 0 753 753
+5 0 753 753
+4 0 753 0 0 0 0 0 0 0 0 753
+6 0 753 753
+4 0 753 0 0 0 0 0 0 0 0 753
+6 0 753 753
+9 0 753 0 753
+4 0 753 0 753
+4 0 753 0 0 0 0 0 0 0 0 753 309
jcnd=437/753 +16 0 
* 0 
+2 0 316 316
+5 0 316
+3 0 316 0 0 1 0 0 1 0 0 316
+6 0 753
+3 0 753
+4 0 753 753
+4 0 753 753
+4 0 753 0 0 0 0 0 0 0 0 753
-12 0 29
+4 0 29 29
+4 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 782
+7 0 782 0 782
+4 0 782 0 782
+4 0 782 0 0 0 0 0 0 0 0 782 66
jcnd=405/782 +18 0 
* 0 
+2 0 377 0 377
+8 0 377 0 377
+8 0 377 0 377
+4 0 377
+3 0 377 0 377 1 0 0 1
+4 0 377
+4 0 377 0 377
+4 0 377 0 377
+4 0 377
+7 0 377 0 0 0 0 0 0 0 0 377
jcnd=377/377 0x3877c78b20 0 
* 0 
-30 0 405 0 405
+4 0 405
+3 0 405 0 405
+4 0 405
+4 0 405 0 405
+4 0 405 0 405
+4 0 405
+7 0 405 0 0 0 0 0 0 0 0 405
jcnd=405/405 0x3877c78b20 0 
* 0 
0x3877c78a40 0 782 0 0 1 0 0 1
+5 0 782 782
+4 0 782 782
+7 0 782 0 0 0 0 0 0 0 0 782
jcnd=782/782 +16 0 
* 0 
+16 0 782 0 782
+5 0 782 0 0 0 0 0 0 0 0 782
+6 0 782
+3 0 782
jump=782 0x3877c7878f 0 
* 0 
+10 0 29 0 29
+6 0 29 0 0 1 0 0 1
jump=29 0x3877c78885 0 
* 0 
0x3877c78b20 0 782 782 0 1 0 0 1
+4 0 782
+2 0 782 0 0 0 0 0 0 0 0 782
+6 0 782 782
+7 0 782 0 0 0 0 0 0 0 0 782
jcnd=782/782 +15 0 
* 0 
+15 0 782 0 782 1 0 0 1
+4 0 782 0 0 0 0 0 0 0 0 782
+6 0 782
+4 0 782 782
+1 0 782 782
+1 0 782 782
+2 0 782 782
+2 0 782 782
+2 0 782 782
+2 0 782 782
0x3877c7907c 0 782 782 0 1 1 0 1 1
+4 0 782 0 0 1 0 0 1
+7 0 782
+4 0 782
+3 0 782
+3 0 782 0 0 0 0 0 0 0 0 782
jcnd=782/782 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 896 0 0 1 0 0 1
+7 0 896
+3 0 896
+3 0 896 896 0 0 1 0 0 1
+4 0 896
+4 0 896 0 0 0 0 0 0 0 0 0 0 896 111
jump=104 0x3877c89be8 0 
* 0 
jump=116 0x3877c89bd0 0 
* 0 
jump=112 0x3877c89bb8 0 
* 0 
jump=112 +11 0 
* 0 
jump=112 0x3877c89c48 0 
* 0 
jump=114 0x3877c89c30 0 
* 0 
jump=112 0x3877c89c18 0 
* 0 
jump=114 0x3877c89c00 0 
* 0 
+11 0 112 112
+3 0 112
+4 0 112
+4 0 112 112
+4 0 112
+4 0 112 0 112
+4 0 112
+9 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-40 0 6134 6134
+4 0 6134 0 6134
+4 0 6134 6134
+4 0 6134 0 6134
+4 0 6134 6134
+4 0 6134 0 6134 0 0 4 0 0 4
+4 0 6134 6134
+4 0 6134 0 6134 0 0 3 0 0 3
+4 0 6134
+4 0 6134
+4 0 6134 0 0 0 0 0 0 0 0 6134 423
jcnd=860/6134 0x3877c89c60 0 
* 0 
-32 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
jcnd=10/114 0x3877c89c60 0 
* 0 
-24 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-16 0 114 114 0 1 0 0 1
+4 0 114 0 114
+4 0 114 0 0 1 0 0 1
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114 4
jcnd=10/114 0x3877c89c60 0 
* 0 
+6 0 5690
+4 0 5690 5690
+3 0 5690 0 5690 0 0 4 0 0 4
+3 0 5690 5690
+4 0 5690 0 5690
+4 0 5690 5690
+4 0 5690 0 5690
+4 0 5690 5690
+4 0 5690 0 5690
+4 0 5690
jump=5690 -80 0 
* 0 
-30 0 104 104
+3 0 104 0 104
+3 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104 0 0 1 0 0 1
+4 0 104 104
+4 0 104 0 104
+4 0 104
jump=104 -80 0 
* 0 
-24 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116
jump=116 -80 0 
* 0 
-16 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
+8 0 112 112
+3 0 112
+4 0 112 0 0 1 0 0 1
+4 0 112
+4 0 112
jump=112 -39 0 
* 0 
+9 0 116
+3 0 116 0 0 0 0 0 0 0 0 116
+6 0 116 116
+3 0 116
+4 0 116
jump=116 -72 0 
* 0 
+8 0 104
+4 0 104 104
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104
+4 0 104
jump=104 -99 0 
* 0 
+11 0 114 114 0 1 0 0 1
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b78 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b70 0 
* 0 
+9 0 114 114
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b68 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b60 0 
* 0 
+9 0 896 0 896 1 0 0 1
+3 0 896 896

fn=(104) alloc_perturb
0x3877c77180 0 788 788 0 1 0 0 1
+6 0 788
+2 0 788 0 0 0 0 0 0 0 0 788 33
+2 0 788 788

fn=(38) _int_malloc
0x3877c79a00 0 906 0 906 1 0 0 1
+2 0 906
+3 0 906 0 906
+2 0 906 0 906
+2 0 906 0 906 0 0 1 0 0 1
+2 0 906
+3 0 906 0 906
+1 0 906 0 906
+1 0 906
+4 0 906
+4 0 906 0 0 0 0 0 0 0 0 906
+6 0 906
+4 0 906
+6 0 906
+3 0 906
+4 0 906
+4 0 906
+4 0 906
+3 0 906 0 0 0 0 0 0 0 0 906
+6 0 906 906 0 1 1 0 1 1
+7 0 906 0 0 0 0 0 0 0 0 906 7
jcnd=784/906 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 788
+4 0 788 788
+1 0 788 788
+1 0 788 788
+2 0 788 788
+2 0 788 788
+2 0 788 788
+2 0 788 788
+7 0 801
+7 0 801 0 0 1 0 0 1 0 0 801 3
jcnd=2/801 0x3877c79b70 0 
* 0 
+2 0 799
+3 0 799
+5 0 799
+3 0 799
+4 0 799 0 799
+4 0 799
+2 0 799
+5 0 799 799 0 0 7 0 0 7
+4 0 799
+3 0 799 0 0 0 0 0 0 0 0 799
jcnd=799/799 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 920 249 194 8 0 0 8 0 0 190 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 800 0 0 1 0 0 1
+3 0 800
+3 0 800
+3 0 800
+4 0 800
+3 0 800
+4 0 800 0 800
+5 0 800
+3 0 800 0 800
+4 0 800 0 800
+4 0 800 0 800
+5 0 800
+3 0 800
+3 0 800
+3 0 800
+3 0 800
+4 0 800
+4 0 800 0 0 1 0 0 1
+4 0 800 0 800
+4 0 800
+4 0 800 0 800
+5 0 800 0 800
+5 0 800
+3 0 800
+3 0 800 0 800
+5 0 800
+5 0 800
+3 0 800 0 800
+4 0 800 0 800
+4 0 800
+6 0 800 0 800
+4 0 800 0 800
+5 0 800 0 0 1 0 0 1
+3 0 800
+3 0 800
+3 0 800
jump=800 +87 0 
* 0 
+8 0 758
+3 0 758
+4 0 758
+2 0 758
+2 0 758
+3 0 758
+3 0 758
+3 0 758
+2 0 758
+2 0 758
+5 0 758
+2 0 758 758 0 0 1 0 0 1
+4 0 758
+3 0 758
+4 0 758 0 758
+4 0 758 0 758
+8 0 758
+7 0 758 0 758
+4 0 758 0 758 0 0 1 0 0 1
+4 0 758 0 758
+4 0 758 0 0 0 0 0 0 0 0 758
-38 0 375
+3 0 375
+4 0 375 0 375
+4 0 375 0 375
+8 0 375
+7 0 375 0 375
+4 0 375 0 375
+4 0 375 0 375
+4 0 375 0 0 0 0 0 0 0 0 375
+6 0 1934 1934 0 1 0 0 1
+4 0 1934
+3 0 1934 0 0 0 0 0 0 0 0 1934 26
jcnd=767/1934 0x3877c79ef0 0 
* 0 
+6 0 1167 1167
+4 0 1167 1167
+4 0 1167
+4 0 1167 0 0 0 0 0 0 0 0 1167
+6 0 1167 1167 0 1 1 0 1 1
+7 0 1167 0 0 0 0 0 0 0 0 1167
+6 0 1167
+4 0 1167
+7 0 1167 0 0 0 0 0 0 0 0 1167 5
jcnd=7/1167 +11 0 
* 0 
+2 0 1160
+3 0 1160 0 0 0 0 0 0 0 0 1160 556
jcnd=778/1160 0x3877c79e28 0 
* 0 
+6 0 1146
+3 0 1146 0 1146
+4 0 1146 0 1146
+5 0 1146 0 0 0 0 0 0 0 0 1146 9
jcnd=13/1146 0x3877c7a090 0 
* 0 
+6 0 1133
+7 0 1133 0 0 0 0 0 0 0 0 1133 12
jcnd=758/1133 0x3877c79c50 0 
* 0 
+6 0 375 0 0 1 0 0 1
+3 0 375
+4 0 375
+4 0 375 0 0 0 0 0 0 0 0 375 4
jcnd=307/375 0x3877c79db0 0 
* 0 
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 6
jcnd=68/68 0x3877c79e15 0 
* 0 
-36 0 307
+2 0 307
+2 0 307
+3 0 307
+3 0 307
+8 0 307
+3 0 307
+2 0 307
+2 0 307
+4 0 307 307
+4 0 307
+3 0 307 0 0 0 0 0 0 0 0 307
jcnd=307/307 0x3877c79e15 0 
* 0 
0x3877c79db0 0 307 0 0 1 0 0 1
+3 0 307
+4 0 307
+4 0 307 0 0 0 0 0 0 0 0 307
+2 0 307
+3 0 307 0 0 1 0 0 1
+7 0 307
jump=307 0x3877c79d18 0 
* 0 
+78 0 375 0 375
+4 0 375 0 375
+4 0 375
+3 0 375
jump=375 0x3877c79c73 0 
* 0 
+8 0 778 778 0 1 0 0 1
+4 0 778
+3 0 778 0 0 0 0 0 0 0 0 778 9
jcnd=391/778 0x3877c79ce1 0 
* 0 
+6 0 387 387
+5 0 387 0 0 0 0 0 0 0 0 387 6
jcnd=366/387 0x3877c79ce1 0 
* 0 
+6 0 21 0 0 1 0 0 1
+3 0 21
+3 0 21
+3 0 21
+7 0 21 0 21
+4 0 21 0 21
+4 0 21
+3 0 21 0 21
+4 0 21 0 21 0 0 17 0 0 17
+4 0 21 0 21
+4 0 21 0 0 0 0 0 0 0 0 21 5
jcnd=11/21 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 1 0 0 1
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 1 0 0 1
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 21
+3 0 21
jump=21 0x3877c79ae3 0 
* 0 
+55 0 767 0 0 1 0 0 1
+7 0 767
+3 0 767 0 0 0 0 0 0 0 0 767 1
jcnd=2/767 0x3877c7a0b0 0 
* 0 
+6 0 767 767 0 1 0 0 1
+4 0 767
+3 0 767
+3 0 767
+2 0 767
+4 0 767
+3 0 767
+3 0 767
+2 0 767
+2 0 767
+2 0 767
+2 0 767 767 0 0 1 0 0 1
+8 0 767
+5 0 767
+5 0 767
+2 0 767 0 0 0 0 0 0 0 0 767
-2 0 401
+2 0 401 0 0 0 0 0 0 0 0 401
+2 0 1168
+2 0 1168 0 0 0 0 0 0 0 0 1168 25
jcnd=586/1168 +64 0 
* 0 
+2 0 582
+8 0 582
+3 0 582
+3 0 582 0 0 0 0 0 0 0 0 582
-6 0 373
+3 0 373
+3 0 373 0 0 0 0 0 0 0 0 373
+2 0 955
+2 0 955 955
+8 0 955
+2 0 955 0 0 0 0 0 0 0 0 955 14
jcnd=373/955 -20 0 
* 0 
+2 0 582
+2 0 582
+5 0 582
+3 0 582
+3 0 582
+2 0 582
+2 0 582
+5 0 582 0 0 0 0 0 0 0 0 582
+2 0 582
+2 0 582
+4 0 582
+2 0 582
+2 0 582 0 0 0 0 0 0 0 0 582 6
jcnd=520/582 -8 0 
* 0 
-8 0 7496
+4 0 7496
+2 0 7496
+2 0 7496 0 0 0 0 0 0 0 0 7496 421
jcnd=6433/7496 -8 0 
* 0 
-2 0 586 0 0 1 0 0 1
+2 0 586 0 0 0 0 0 0 0 0 586 14
jcnd=543/586 -8 0 
* 0 
+2 0 1168 1168 0 0 9 0 0 9
+4 0 1168 0 0 1 0 0 1
+3 0 1168 0 0 0 0 0 0 0 0 1168 380
jcnd=767/1168 0x3877c7a1cf 0 
* 0 
+6 0 401
+2 0 401
+4 0 401
+2 0 401
+2 0 401
+2 0 401 0 401
+8 0 401
jump=401 0x3877c79f30 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 767 767 0 1 1 0 1 1
+4 0 767 767 0 0 2 0 0 2
+4 0 767
+3 0 767 767
+4 0 767
+4 0 767
+3 0 767
+3 0 767 767
+4 0 767 0 0 0 0 0 0 0 0 767
+6 0 767 767 0 0 1 0 0 1
+4 0 767 0 0 0 0 0 0 0 0 767
+6 0 767 767 0 1 0 0 1
+8 0 767 0 767
+4 0 767 0 767
+4 0 767 0 0 0 0 0 0 0 0 767 205
jcnd=389/767 +38 0 
* 0 
+2 0 378 378 0 0 1 0 0 1
+4 0 378
+3 0 378 0 0 0 0 0 0 0 0 378
+2 0 378 378
+5 0 378 0 0 0 0 0 0 0 0 378
+6 0 378 378
+4 0 378 0 378
+4 0 378 378
+4 0 378 0 378
+4 0 378
+4 0 378 0 0 0 0 0 0 0 0 378
-4 0 389
+4 0 389 0 0 0 0 0 0 0 0 389 7
jcnd=12/389 0x3877c7a2e3 0 
* 0 
+6 0 755 755
+4 0 755 755 0 1 0 0 1
+4 0 755 0 0 0 0 0 0 0 0 755
+6 0 755
+4 0 755
+7 0 755 0 755 0 0 8 0 0 8
+4 0 755 0 755
+4 0 755 0 755
+4 0 755 0 755
+4 0 755 0 0 0 0 0 0 0 0 755 3
jcnd=2/755 +7 0 
* 0 
+2 0 753 0 753
+5 0 753
+7 0 753 0 0 0 0 0 0 0 0 753 4
jcnd=438/753 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 315 0 315 0 0 11 0 0 11
+8 0 315 0 315 1 0 0 1
+8 0 315
+7 0 315 0 315 0 0 3 0 0 3
+4 0 315
+3 0 315
+3 0 315
+4 0 315
+3 0 315
+4 0 315
+3 0 315
+3 0 315
+4 0 315 0 315
+4 0 315 0 315 0 0 1 0 0 1
+4 0 315
jump=315 +71 0 
* 0 
-46 0 440
+7 0 440 0 440
+4 0 440
+3 0 440
+3 0 440
+4 0 440
+3 0 440
+4 0 440
+3 0 440
+3 0 440
+4 0 440 0 440
+4 0 440 0 440
+4 0 440
jump=440 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 12
+7 0 12 0 12
+6 0 12
+3 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +7 0 
* 0 
+7 0 767
+4 0 767 0 0 1 0 0 1
+3 0 767
+3 0 767 0 767
cfn=(104)
calls=767 0x3877c77180 0 
* 0 3068 1534 0 0 0 0 0 0 0 767 33
+5 0 767
+3 0 767
jump=767 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 906 0 906 1 0 0 1
+5 0 906 0 906
+5 0 906
+3 0 906 0 906
+5 0 906
+4 0 906 906 0 0 1 0 0 1
+7 0 906 906 0 0 1 0 0 1
+3 0 906
+3 0 906 0 0 0 0 0 0 0 0 906
+6 0 906 906 0 0 1 0 0 1
+7 0 906 906 0 1 1 0 1 1
+4 0 906
+3 0 906 0 0 0 0 0 0 0 0 906
+2 0 906 906 0 0 1 0 0 1
+3 0 906
+3 0 906 0 0 0 0 0 0 0 0 906
jcnd=906/906 +97 0 
* 0 
+18 0 906
+3 0 906
+3 0 906 0 906
cfn=(38)
calls=906 0x3877c79a00 0 
* 0 241850 29449 35218 41 31 45 41 31 45 39648 1811
+5 0 906
+3 0 906
+3 0 906 0 0 0 0 0 0 0 0 906
+2 0 906
+3 0 906 0 0 0 0 0 0 0 0 906
+2 0 906
+3 0 906 0 0 0 0 0 0 0 0 906 5
+2 0 906 906
+7 0 906 0 0 0 0 0 0 0 0 906
jcnd=906/906 +13 0 
* 0 
+13 0 906 0 906
+2 0 906 0 0 0 0 0 0 0 0 906 74
+6 0 906
+3 0 906 906
+4 0 906 906
+5 0 906 906
+5 0 906
+4 0 906 906
+1 0 906 0 0 1 0 0 1
+5 0 906 906 0 0 1 0 0 1
+7 0 906 0 0 0 0 0 0 0 0 906
jcnd=906/906 +14 0 
* 0 
+14 0 906 0 906 1 0 0 1
+3 0 906 0 0 0 0 0 0 0 0 906
+6 0 906
jump=906 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 906 0 906 1 0 0 1
+2 0 906
+3 0 906
+3 0 906 0 906
+2 0 906
+3 0 906 0 906
+1 0 906
+3 0 906 0 906
+1 0 906
+3 0 906
+4 0 906
+3 0 906 0 0 0 0 0 0 0 0 906
+6 0 906
+4 0 906
+3 0 906 0 0 0 0 0 0 0 0 906 7
jcnd=10/906 0x3877c838d1 0 
* 0 
+2 0 896
+3 0 896
+3 0 896
+3 0 896
+3 0 896
+3 0 896 0 0 0 0 0 0 0 0 896
jcnd=896/896 +41 0 
* 0 
+41 0 896 0 0 1 0 0 1
+3 0 896 0 0 0 0 0 0 0 0 896
jcnd=896/896 0x3877c839c0 0 
* 0 
+24 0 896
+3 0 896
+4 0 896
+3 0 896
+3 0 896
+3 0 896
+3 0 896
+3 0 896 0 0 0 0 0 0 0 0 896 509
jcnd=456/896 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 450
+10 0 450 450 0 0 2 0 0 2
+3 0 450
+4 0 450 0 450
+3 0 450
+4 0 450
+4 0 450 0 0 0 0 0 0 0 0 450
jcnd=450/450 -18 0 
* 0 
-18 0 1406 1406
+3 0 1406
+4 0 1406 0 1406
+3 0 1406
+4 0 1406
+4 0 1406 0 0 0 0 0 0 0 0 1406 11
jcnd=956/1406 -18 0 
* 0 
+2 0 906
+4 0 906
+3 0 906 906
+1 0 906 906
+1 0 906 906
+2 0 906 906 0 1 0 0 1
+2 0 906 906
0x3877c839c0 0 896 0 0 1 0 0 1
+3 0 896
+3 0 896
+3 0 896
+4 0 896 0 896 0 0 1 0 0 1
cfn=(284)
calls=896 0x3877c89b20 0 
* 0 142166 52212 50420 6 1 12 6 1 12 6806 427 896 111
+5 0 896
jump=896 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 906 906 0 1 1 0 1 1
+7 0 906 906 0 0 1 0 0 1
+3 0 906
+3 0 906 0 0 1 0 0 1 0 0 906
+6 0 906
+3 0 906 0 0 0 0 0 0 0 0 906
+6 0 906 906
+4 0 906
+4 0 906
+2 0 906 0 0 0 0 0 0 0 0 906
+2 0 906
+2 0 906
+7 0 906 0 0 0 0 0 0 0 0 906
jcnd=906/906 +14 0 
* 0 
+14 0 906
+2 0 906
cfn=(170)
calls=906 0x3877c78650 0 
* 0 94505 25639 15267 17 2 0 17 2 0 22967 430

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 5115506 2039693 1206761 235 84 81 235 84 81 171820 3963 5426 111
