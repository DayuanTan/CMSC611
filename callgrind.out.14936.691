version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 691


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 857847764 - 858097856
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 526 0 0 1 0 0 1
+3 0 526 0 0 0 0 0 0 0 0 526
+2 0 526
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=526 0x3877c7b8b0 0 
* 0 58906 15184 7870 22 6 0 22 6 0 14271 110
* 0 526 526 0 1 1 0 1 1 0 0 0 526

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 526 0 526 1 0 0 1
+1 0 526
+5 0 526
+3 0 526 0 526
+1 0 526
+4 0 526 0 0 1 0 0 1
+3 0 526
+4 0 526
+3 0 526 0 526 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=526 0x3877c7aa50 0 
* 0 136775 20140 20008 46 33 38 46 33 38 23400 887
* 0 526 526 0 1 1 0 1 1 0 0 0 526
+5 0 526
+3 0 526 0 0 0 0 0 0 0 0 526
jcnd=526/526 +96 0 
* 0 
+96 0 526 0 0 1 0 0 1
+4 0 526 526
+1 0 526 526
+1 0 526 526

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 256
+4 * 256
+3 * 256 0 256
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=256 0x4044cc -35 
* * 1280 512 512
+5 * 256 256
+1 * 256 256

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256 1 0 0 1
+4 +1 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=256 0x4049d4 -35 
* * 1536 512 768 1 0 0 1
+5 * 256 256
+1 * 256 256

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 256
+4 * 256
+3 * 256 0 256
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=256 0x404520 -35 
* * 1280 512 512
+5 * 256 256
+1 * 256 256

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=256 0x404a28 -35 
* * 1536 512 768 1 0 1 1 0 1
+5 * 256 256
+1 * 256 256

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 * 256 256
+4 * 256 256
+1 * 256 256

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=128 0x40406a -87 
* * 3072 1024 1152 0 8 7 0 8 7 128
+5 * 128 128
+1 * 128 128

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 256 0 256
+1 * 256
+3 * 256 0 256
+4 * 256 256
+4 * 256 256
+1 * 256 256

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=128 0x403df2 -87 
* * 3072 1024 1152 0 9 3 0 9 3 128
+5 * 128 128
+1 * 128 128

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 326 0 326
+1 * 326
+3 * 326 0 326 0 0 1 0 0 1
+4 +1 326 326
+4 * 326 326
+1 * 326 326

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 512 0 512 1 0 0 1
+1 * 512
+3 * 512
+4 * 512 0 512
+4 +1 512
+4 * 512
+3 * 512 0 512
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=512 0x404ffe 790 
* * 3072 1536 1024 1 0 0 1
+5 * 512 512
+3 * 512 512
+1 * 512 512

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 512 0 512 1 0 0 1
+1 * 512
+3 * 512 0 512
+4 +1 512 512
+4 * 512 512
+1 * 512 512

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 512 0 512 1 0 0 1
+1 * 512
+3 * 512
+4 * 512 0 512
+4 +1 512
+4 * 512
+3 * 512 0 512 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=512 0x40500c 790 
* * 3072 1536 1024 1 0 0 1
+5 * 512 512
+3 * 512 512
+1 * 512 512

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 326 0 326
+1 * 326
+3 * 326 0 326
+4 +1 326 326
+4 * 326 326
+1 * 326 326

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 512 0 512 1 0 0 1
+1 * 512
+3 * 512 0 512
+4 +1 512 512 0 1 0 0 1
+4 * 512 512
+1 * 512 512

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 256 0 256
+1 * 256
+3 * 256 0 256
+4 * 256 0 256
+4 * 256 256
+4 * 256 256
+1 * 256 256

fl=(5)
fn=(28)
0x404992 113 277 0 277 1 0 0 1
+1 * 277
+3 * 277 0 277
+4 +1 277
+10 * 277 277
+1 * 277 277

fn=(176)
0x4044cc 86 256 0 256
+1 * 256
+3 * 256 0 256
+4 * 256 256
+1 * 256 256

fn=(224)
0x403df2 129 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128
+3 * 128
+5 * 128 0 128
cfi=(16)
cfn=(226)
calls=128 0x402d61 -20 
* * 896 384 384
+5 * 128
+3 * 128 0 0 0 0 0 0 0 0 128
+2 * 128 128
+4 * 128 128 0 0 9 0 0 9
+2 * 128 0 128 0 0 3 0 0 3
+2 * 128 128
+1 * 128 128

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 263 0 263
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 * 263 0 263
+4 +1 263 263
+4 * 263
+3 * 263 0 263
cob=(5)
cfi=(8)
cfn=(164)
calls=263 0x387e4bb2f0 0 
* * 30344 7818 3865 24 5 0 24 5 0 7359 55 263
* * 263 263 0 1 1 0 1 1 0 0 0 263
+5 * 263 263
+1 * 263 263

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 263 0 263
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 * 263 0 263
+4 +1 263 263
+4 * 263
+3 * 263 0 263
cob=(5)
cfi=(8)
cfn=(164)
calls=263 0x387e4bb2f0 0 
* * 30666 7892 4005 0 2 0 0 2 0 7438 55 263
* * 263 263 0 0 0 0 0 0 0 0 0 263
+5 * 263 263
+1 * 263 263

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 263 0 263 1 0 0 1
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 * 263 0 263
+4 +2 263 263
+4 * 263
+3 * 263 0 263
cfn=(102)
calls=263 0x4048de +12 
* * 1578 526 526 1 0 0 1
+5 * 263 263
+4 * 263 0 0 1 0 0 1
+3 * 263
+2 * 263 0 0 0 0 0 0 0 0 263
jcnd=263/263 +7 +3 
* * 
+7 +3 263 263
+4 * 263
+4 * 263
+3 * 263 0 263
cob=(5)
cfi=(8)
cfn=(32)
calls=263 0x387e4bd0b0 0 
* * 75942 10973 10326 32 8 20 32 8 20 12815 508 263
* * 263 263 0 0 0 0 0 0 0 0 0 263
+5 +1 263 263
+1 * 263 263

fn=(18)
0x404a28 81 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256 0 0 1 0 0 1
+4 * 256 0 256
+4 * 256 256
+1 * 256 256

fn=(92)
0x4049d4 81 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 * 256 0 256
+4 * 256 256
+1 * 256 256

fn=(196)
0x404520 86 256 0 256
+1 * 256
+3 * 256 0 256
+4 * 256 256
+1 * 256 256

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 263 0 263 1 0 0 1
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 * 263 0 263 1 0 0 1
+4 +2 263 263
+4 * 263
+3 * 263 0 263
cfn=(28)
calls=263 0x404992 +12 
* * 1578 526 526 1 0 0 1
+5 * 263 263
+4 * 263
+3 * 263
+2 * 263 0 0 0 0 0 0 0 0 263
jcnd=263/263 +7 +3 
* * 
+7 +3 263 263
+4 * 263
+4 * 263
+3 * 263 0 263
cob=(5)
cfi=(8)
cfn=(32)
calls=263 0x387e4bd0b0 0 
* * 69249 11271 11260 18 26 19 18 26 19 11111 379 263
* * 263 263 0 1 1 0 1 1 0 0 0 263
+5 +1 263 263
+1 * 263 263

fn=(102)
0x4048de 113 277 0 277 1 0 0 1
+1 * 277
+3 * 277 0 277
+4 +1 277
+10 * 277 277
+1 * 277 277

fn=(266)
0x40406a 129 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128
+3 * 128
+5 * 128 0 128
cfi=(16)
cfn=(226)
calls=128 0x402d61 -20 
* * 896 384 384
+5 * 128
+3 * 128 0 0 0 0 0 0 0 0 128
+2 * 128 128
+4 * 128 128 0 0 8 0 0 8
+2 * 128 0 128 0 0 7 0 0 7
+2 * 128 128
+1 * 128 128

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=256 0x404484 107 
* * 94466 29844 28312 25 3 4 25 3 4 3252 155 508 63
+5 * 256 256
+1 * 256 256

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256 0 1 0 0 1
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=256 0x404a36 450 
* * 87298 27284 25752 24 3 4 24 3 4 3252 155 508 63
+5 * 256 256
+1 * 256 256

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=256 0x40439c 107 
* * 94466 29844 28312 7 0 14 7 0 14 3252 146 508
+5 * 256 256
+1 * 256 256

fn=(116)
0x40439c 107 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +10 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=256 0x4047d7 -26 
* * 90882 28564 27032 7 0 14 7 0 14 3252 146 508
+5 +1 256 256
+1 * 256 256

fn=(118)
0x4047d7 91 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=256 0x4049e2 450 
* * 87298 27284 25752 7 0 14 7 0 14 3252 146 508
+5 * 256 256
+1 * 256 256

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +10 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(52)
calls=256 0x404829 -26 
* * 90882 28564 27032 25 3 4 25 3 4 3252 155 508 63
+5 +1 256 256
+1 * 256 256

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 1052 0 1052 1 0 0 1
+1 * 1052
+3 * 1052 0 1052 0 0 1 0 0 1
+4 +1 1052 1052
+4 * 1052 1052 0 1 1 0 1 1
+4 * 1052
+3 * 1052 1052
+4 * 1052 1052
+3 * 1052
+3 * 1052
+3 * 1052
+4 * 1052 1052
+1 * 1052 1052

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=256 0x404236 -14 
* * 77875 14298 14029 21 23 13 21 23 13 11266 321 512
+5 * 256 256
+4 * 256 0 256
+3 +1 256 256
+4 * 256 256 0 1 0 0 1
+3 * 256 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+3 * 256 256
+4 * 256
+4 * 256
+3 * 256 256
+4 * 256 0 256
+4 +1 256 256
+1 * 256 256

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256 256 0 1 0 0 1
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=256 0x403fbe -14 
* * 83961 13762 12912 25 5 16 25 5 16 12845 447 512
+5 * 256 256
+4 * 256 0 256
+3 +1 256 256
+4 * 256 256
+3 * 256 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+3 * 256 256
+4 * 256
+4 * 256
+3 * 256 256
+4 * 256 0 256
+4 +1 256 256
+1 * 256 256

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 128 0 128
+1 * 128
+3 * 128 0 0 1 0 0 1
+4 * 128 0 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128 0 0 0 0 0 0 0 0 128
jcnd=7/128 +51 +10 
* * 
+2 +3 121 121
+4 * 121 121
+4 * 121 121
+4 -1 121 121
+4 * 121
+3 * 121
+3 * 121 0 121
cfi=(3)
cfn=(264)
calls=121 0x4036b1 215 
* * 4598 1573 1694 0 8 4 0 8 4 121
+5 +2 121 121
+4 * 121 121
+4 * 121
+4 * 121 121
+4 * 121 0 121
+4 * 121
jump=121 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10396 3122 2707 21 5 12 21 5 12 658 75 41
+5 +2 128 128
+1 * 128 128

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 533 0 533 1 0 0 1
+1 * 533
+3 * 533 0 533 1 0 0 1
+4 +1 533 533
+4 * 533 533
+1 * 533 533

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+3 * 256 0 256
+4 * 256
+4 * 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=256 0x404380 726 
* * 2560 1280 1024
+5 * 256 256
+4 * 256 256
+1 * 256 256

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 256 0 256
+1 * 256
+3 * 256 0 256
+1 * 256
+4 * 256 0 256 1 0 0 1
+4 +2 256 256
+4 * 256
+3 * 256 0 256
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=256 0x40325e 113 
* * 1536 768 512
+5 * 256
+3 * 256 256
+4 * 256 256
+4 * 256 256
+4 * 256 256
+3 -1 256
+3 * 256
+3 * 256 0 256
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=256 0x40326c 148 
* * 7936 2560 3072 4 0 0 4
+5 +1 256 256
+4 * 256
+3 * 256 0 256
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=256 0x4031ec 159 
* * 49828 15060 9658 27 6 0 27 6 0 7448 50 512
+5 * 256
jump=256 +28 * 
* * 
+28 * 256 0 0 1 0 0 1
+4 * 256 256
+1 * 256 256
+1 * 256 256

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 263 0 263 1 0 0 1
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 * 263 0 263
+4 +2 263 263
+5 * 263 0 0 0 0 0 0 0 0 263
+2 +1 263 263
+4 * 263 263
+4 * 263 263
+4 * 263
+3 * 263
+3 * 263 0 263
cfi=(5)
cfn=(160)
calls=263 0x4044d6 -65 
* * 33500 8870 5180 25 6 0 25 6 0 7359 55 526
+5 +1 263 263
+1 * 263 263

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 256 0 256
+1 * 256
+3 * 256 0 256
+1 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=256 0x4043ca -45 
* * 9216 3328 3584 4 0 4 4 0 4
+5 +1 256 256 0 1 0 0 1
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(20)
calls=256 0x404412 +43 
* * 84275 17370 15821 22 23 13 22 23 13 11266 321 512
+5 * 256
jump=256 +28 * 
* * 
+28 * 256
+4 * 256 256
+1 * 256 256
+1 * 256 256

fn=(14)
0x4043ca 90 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256 0 0 1 0 0 1
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(4)
cfn=(16)
calls=256 0x404804 +24 
* * 4608 1536 1792 2 0 1 2 0 1
+5 * 256 256
+4 * 256 0 256 0 0 2 0 0 2
+7 * 256 256
+4 * 256 0 256 1 0 0 1
+8 * 256 256
+4 * 256 0 256
+8 +1 256 256
+1 * 256 256

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+2 * 256 0 256
+2 * 256 0 256
+1 * 256 0 0 1 0 0 1
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256
+3 * 256 0 256
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=256 0x4039fc 117 
* * 1536 768 512 2 0 0 2
+5 * 256
+3 * 256 0 256
cfi=(3)
cfn=(84)
calls=256 0x4039ed -88 
* * 1536 768 512
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(2)
calls=256 0x402d74 645 
* * 3328 1536 512
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256
+3 * 256
+3 * 256 0 256 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=256 0x403a0a 134 
* * 105209 21954 20080 32 5 16 32 5 16 12845 447 512
+5 +4 256 256
+4 * 256
+3 * 256 0 256
cfn=(106)
calls=256 0x40325e 113 
* * 1536 768 512 1 0 0 1
+5 * 256
+3 * 256 256
+4 * 256 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=256 0x403a98 565 
* * 6400 2560 2048 2 0 0 2
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(112)
calls=256 0x403a68 547 
* * 6400 2560 2048
+5 * 256
+3 * 256
+3 * 256
+3 * 256
+3 * 256 0 256
cfi=(11)
cfn=(114)
calls=256 0x403ac9 -60 
* * 98306 31124 29848 7 0 14 7 0 14 3252 146 508
+5 -3 256 256
+4 * 256 0 256
+4 * 256
jump=256 +28 +4 
* * 
+28 +4 256
+4 * 256 256
+1 * 256 256
+2 * 256 256
+2 * 256 256
+1 * 256 256

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 263 0 263 1 0 0 1
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 * 263 0 263
+4 +2 263 263
+5 * 263 0 0 0 0 0 0 0 0 263 7
+2 +1 263 263
+4 * 263 263
+4 * 263 263
+4 * 263
+3 * 263
+3 * 263 0 263
cfi=(5)
cfn=(190)
calls=263 0x40452a -65 
* * 33822 8944 5320 0 2 0 0 2 0 7438 55 526
+5 +1 263 263
+1 * 263 263

fn=(22)
0x404236 167 263 0 263 1 0 0 1
+1 * 263
+3 * 263
+4 * 263 0 263 1 0 0 1
+4 * 263 0 263
+4 0 263 263
+5 0 263 0 0 0 0 0 0 0 0 263
+2 0 263 263
+4 0 263 263
+4 0 263
+5 0 263
+3 0 263
+3 0 263 0 263
fi=(6) ???
cfi=(5)
cfn=(26)
calls=263 0x404730 99 
* 0 76087 13375 13364 22 27 19 22 27 19 11374 379 526
+5 0 263
fi=(6)
jump=263 +7 0 
* 0 
+7 0 263 263
+1 0 263 263

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+4 * 256 0 256
+4 * 256
+4 * 256 0 0 1 0 0 1
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=256 0x404468 726 
* * 2560 1280 1024 1 0 0 1
+5 * 256 256
+4 * 256 256
+1 * 256 256

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+3 * 256 0 256
+4 * 256
+4 * 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(10)
cfn=(44)
calls=256 0x404468 726 
* * 2560 1280 1024
+5 * 256 256
+4 * 256 256
+1 * 256 256

fn=(86)
0x403a0a 134 256 0 256
+1 * 256
+3 * 256 0 256
+1 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=256 0x4042e2 -45 
* * 9216 3328 3584 5 0 0 5
+5 +1 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256 1 0 0 1
cfn=(94)
calls=256 0x40432a +43 
* * 90361 16834 14704 26 5 16 26 5 16 12845 447 512
+5 * 256
jump=256 +28 * 
* * 
+28 * 256
+4 * 256 256
+1 * 256 256
+1 * 256 256

fn=(88)
0x4042e2 90 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256 1 0 0 1
cfi=(4)
cfn=(90)
calls=256 0x4047b2 +24 
* * 4608 1536 1792 3 0 0 3
+5 * 256 256
+4 * 256 0 256
+7 * 256 256
+4 * 256 0 256
+8 * 256 256
+4 * 256 0 256
+8 +1 256 256
+1 * 256 256

fn=(156)
0x4031ec 159 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+1 * 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256 256 0 1 0 0 1
+4 * 256
+3 * 256 256
+4 * 256 256
+3 * 256
+3 * 256
+3 * 256
+4 * 256
+3 * 256 256
+4 * 256 256
+3 -1 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(158)
calls=256 0x403ce6 +11 
* * 36772 10196 6330 24 6 0 24 6 0 7448 50 512
+5 +1 256 256
+4 * 256
+3 * 256 0 256
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=256 0x4031b8 -82 
* * 5888 2048 2048 1 0 0 1
+5 * 256
jump=256 +28 * 
* * 
+28 * 256
+4 * 256 256
+1 * 256 256
+1 * 256 256

fn=(172)
0x4031b8 79 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 256
+4 * 256
+3 * 256 0 256
cfi=(4)
cfn=(174)
calls=256 0x403ccc +42 
* * 3584 1280 1280
+5 * 256 256
+1 * 256 256

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 540 0 540 1 0 0 1
+1 * 540
+3 * 540 0 540
+4 +1 540 540
+4 * 540 540 0 0 2 0 0 2
+4 * 540
+3 * 540 540
+4 * 540 540
+3 * 540
+3 * 540
+3 * 540
+4 * 540 540
+1 * 540 540

fn=(106)
0x40325e 113 533 0 533 1 0 0 1
+1 * 533
+3 * 533 0 533
+4 +1 533 533
+4 * 533 533
+1 * 533 533

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 270 0 270 1 0 0 1
+1 * 270
+3 * 270 0 270 0 0 1 0 0 1
+4 +1 270 270
+4 * 270 270
+1 * 270 270

fn=(82)
0x4039fc 117 270 0 270 1 0 0 1
+1 * 270
+3 * 270 0 270 1 0 0 1
+4 +1 270 270
+4 * 270 270
+1 * 270 270

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128 0 0 0 0 0 0 0 0 128 9
jcnd=7/128 +51 +10 
* * 
+2 +3 121 121
+4 * 121 121
+4 * 121 121
+4 -1 121 121
+4 * 121
+3 * 121
+3 * 121 0 121
cfi=(3)
cfn=(222)
calls=121 0x403373 215 
* * 4598 1573 1694 0 8 2 0 8 2 121
+5 +2 121 121
+4 * 121 121
+4 * 121
+4 * 121 121
+4 * 121 0 121
+4 * 121
jump=121 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11023 3366 2898 36 4 8 36 4 8 788 71 41
+5 +2 128 128
+1 * 128 128

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+2 * 256 0 256
+2 * 256 0 256
+1 * 256
+4 * 256 0 256 1 0 0 1
+4 * 256 0 256
+4 +2 256 256
+4 * 256
+3 * 256 0 256
cfn=(6)
calls=256 0x403b08 117 
* * 1536 768 512 1 0 1 1 0 1
+5 * 256
+3 * 256 0 256
cfi=(3)
cfn=(8)
calls=256 0x403afa -88 
* * 1536 768 512 1 0 0 1
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(10)
calls=256 0x402f54 645 
* * 3328 1536 512 1 1 0 1 1
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256
+3 * 256
+3 * 256 0 256
cfn=(12)
calls=256 0x403b16 134 
* * 99123 22490 21197 27 23 17 27 23 17 11266 321 512
+5 +4 256 256 0 1 0 0 1
+4 * 256
+3 * 256 0 256
cfn=(40)
calls=256 0x40333c 113 
* * 1536 768 512 2 0 0 2
+5 * 256
+3 * 256 256
+4 * 256 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(42)
calls=256 0x403ba4 565 
* * 6400 2560 2048 3 0 0 3
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(46)
calls=256 0x403b74 547 
* * 6400 2560 2048
+5 * 256
+3 * 256
+3 * 256
+3 * 256
+3 * 256 0 256 1 0 0 1
cfi=(11)
cfn=(48)
calls=256 0x403bd5 -60 
* * 98306 31124 29848 26 3 4 26 3 4 3252 155 508 63
+5 -3 256 256
+4 * 256 0 256
+4 * 256
jump=256 +28 +4 
* * 
+28 +4 256
+4 * 256 256
+1 * 256 256
+2 * 256 256
+2 * 256 256
+1 * 256 256

fn=(108)
0x403a98 565 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256 256
+4 * 256 0 256
+4 * 256
+4 * 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(10)
cfn=(110)
calls=256 0x404380 726 
* * 2560 1280 1024 1 0 0 1
+5 * 256 256
+4 * 256 256
+1 * 256 256

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 256 0 256
+1 * 256
+3 * 256 0 256
+1 * 256
+4 * 256 0 256 1 0 0 1
+4 +2 256 256
+4 * 256
+3 * 256 0 256
cfn=(40)
calls=256 0x40333c 113 
* * 1536 768 512
+5 * 256
+3 * 256 256
+4 * 256 256
+4 * 256 256
+4 * 256 256
+3 -1 256
+3 * 256
+3 * 256 0 256
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=256 0x40334a 148 
* * 7936 2560 3072 2 0 0 2
+5 +1 256 256
+4 * 256
+3 * 256 0 256
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=256 0x4032ca 159 
* * 50170 15140 9806 3 1 0 3 1 0 7532 49 512
+5 * 256
jump=256 +28 * 
* * 
+28 * 256 0 0 1 0 0 1
+4 * 256 256
+1 * 256 256
+1 * 256 256

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 263 0 263 1 0 0 1
+1 * 263 0 0 1 0 0 1
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 0 263 263
+5 0 263 0 0 0 0 0 0 0 0 263
+2 0 263 263
+4 0 263 263
+4 0 263
+5 0 263
+3 0 263
+3 0 263 0 263
fi=(6)
cfi=(5)
cfn=(100)
calls=263 0x40461a 99 
* 0 82780 13077 12430 35 8 20 35 8 20 13078 508 526
+5 0 263
fi=(6)
jump=263 +7 0 
* 0 
+7 0 263 263
+1 0 263 263

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 25408 0 25408
+1 * 25408
+3 * 25408 0 25408
+4 * 25408 0 25408
+4 +1 25408 25408
+4 * 25408 25408
+3 * 25408 25408
+4 * 25408
+4 * 25408
+3 * 25408 25408
+1 * 25408 25408

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 25408 0 25408
+1 * 25408
+3 * 25408 0 25408 1 0 0 1
+4 * 25408 0 25408
+4 +1 25408 25408
+4 * 25408 25408
+3 * 25408 25408
+4 * 25408
+4 * 25408
+3 * 25408 25408
+1 * 25408 25408

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 256
+4 * 256
+3 * 256 0 256
cfi=(4)
cfn=(194)
calls=256 0x403d7e +42 
* * 3584 1280 1280 1 0 0 1
+5 * 256 256
+1 * 256 256

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+1 * 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256 256
+4 * 256
+3 * 256 256
+4 * 256 256
+3 * 256
+3 * 256
+3 * 256
+4 * 256
+3 * 256 256
+4 * 256 256
+3 -1 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(188)
calls=256 0x403d98 +11 
* * 37114 10276 6478 1 1 0 1 1 0 7532 49 512
+5 +1 256 256
+4 * 256
+3 * 256 0 256
cfn=(192)
calls=256 0x403296 -82 
* * 5888 2048 2048 1 0 0 1
+5 * 256
jump=256 +28 * 
* * 
+28 * 256
+4 * 256 256
+1 * 256 256
+1 * 256 256

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 512 0 512 1 0 0 1
+1 * 512
+3 * 512
+4 * 512 0 512 1 0 0 1
+4 +1 512 512
+4 * 512
+3 * 512 0 512
cfi=(13)
cfn=(58)
calls=512 0x404d8f -77 
* * 3072 1536 1024 1 0 0 1
+5 * 512 512
+1 * 512 512

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 270 0 270
+1 * 270
+3 * 270
+4 * 270 0 270 1 0 0 1
+4 * 270 0 270
+4 * 270 0 270
+4 +2 270 270
+4 * 270 270
+4 * 270
+3 * 270
+3 * 270
+4 * 270 0 270
+4 +1 270 270
+5 * 270 0 0 0 0 0 0 0 0 270
jcnd=7/270 +33 +2 
* * 
+2 +1 263 263
+4 * 263
+8 * 263 263
+4 * 263 263
+4 * 263
+3 * 263 0 0 1 0 0 1
+3 * 263 0 263 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=263 0x3877c83840 0 
* * 39902 10825 10304 11 2 5 11 2 5 3058 159 258 63
* * 263 263 0 1 1 0 1 1 0 0 0 263
+5 +1 270 270
+4 * 270
+8 * 270 270
+4 * 270
+3 +1 270 270
+1 * 270 270

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 270 0 270
+1 * 270
+3 * 270
+4 * 270 0 270 1 0 0 1
+4 * 270 0 270
+4 * 270 0 270 0 0 1 0 0 1
+4 +2 270 270
+4 * 270 270
+4 * 270
+3 * 270
+3 * 270
+4 * 270 0 270
+4 +1 270 270
+5 * 270 0 0 0 0 0 0 0 0 270
jcnd=7/270 +33 +2 
* * 
+2 +1 263 263
+4 * 263
+8 * 263 263
+4 * 263 263
+4 * 263
+3 * 263
+3 * 263 0 263
cob=(2)
cfi=(9)
cfn=(78)
calls=263 0x3877c83840 0 
* * 39902 10825 10304 0 0 15 0 0 15 3058 151 258
* * 263 263 0 0 0 0 0 0 0 0 0 263
+5 +1 270 270
+4 * 270
+8 * 270 270
+4 * 270
+3 +1 270 270
+1 * 270 270

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256 1 0 0 1
+4 * 256 0 256
+4 * 256 0 256
+4 +8 256 0 256
+4 +3 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(74)
calls=256 0x404f37 -22 
* * 46338 13460 11672 14 3 3 14 3 3 3252 155 508 63
+5 +1 256 256
+1 * 256 256

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 256 0 256
+1 * 256
+3 * 256 0 256
+2 * 256 0 256
+1 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +4 256 256
+4 * 256
+3 * 256 0 256
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=256 0x404878 277 
* * 3840 1536 1280 1 0 0 1
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=256 0x404d44 277 
* * 6400 2304 2048 2 0 0 2
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(132)
calls=256 0x404d44 277 
* * 6400 2304 2048
+5 * 256
+3 * 256
+3 * 256
+3 * 256 0 256
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=256 0x404d5e -49 
* * 50178 14740 13208 1 0 14 1 0 14 3252 146 508
+5 +1 256
+4 * 256 256
+1 * 256 256
+2 * 256 256
+1 * 256 256

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 256 0 256
+1 * 256
+3 * 256 0 256
+1 * 256
+4 * 256 0 256 1 0 0 1
+4 * 256 0 256
+4 * 256 0 256
+4 +10 256 256
+4 * 256
+3 * 256 0 256
cfn=(56)
calls=256 0x404c38 288 
* * 3840 1536 1280 3 0 0 3
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(56)
calls=256 0x404c38 288 
* * 3840 1536 1280
+5 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=256 0x404c52 -36 
* * 73986 22676 21144 20 3 4 20 3 4 3252 155 508 63
+5 +1 256
+4 * 256 256
+1 * 256 256
+1 * 256 256

fn=(60)
0x404c52 424 256 0 256
+1 * 256
+3 * 256 0 256
+2 * 256 0 256
+1 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +4 256 256
+4 * 256
+3 * 256 0 256
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=256 0x40492d 277 
* * 3840 1536 1280 2 0 0 2
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=256 0x404d9d 277 
* * 6400 2304 2048 2 0 1 2 0 1
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(66)
calls=256 0x404d9d 277 
* * 6400 2304 2048
+5 * 256
+3 * 256
+3 * 256
+3 * 256 0 256
cfn=(72)
calls=256 0x404db7 -49 
* * 50178 14740 13208 15 3 3 15 3 3 3252 155 508 63
+5 +1 256
+4 * 256 256
+1 * 256 256
+2 * 256 256
+1 * 256 256

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 298 0 298 1 0 0 1
+1 * 298
+3 * 298
+4 * 298 0 298
+4 +1 298 298
+4 * 298
+3 * 298 0 298 1 0 0 1
cfi=(13)
cfn=(64)
calls=298 -33 -66 
* * 1788 894 596
+5 * 298 298
+1 * 298 298

fn=(66)
0x404d9d 277 512 0 512
+1 * 512
+3 * 512
+4 * 512 0 512
+4 +1 512 512
+4 * 512
+3 * 512 0 512
cfi=(13)
cfn=(68)
calls=512 0x404f1a -58 
* * 8192 3072 2560 2 0 1 2 0 1
+5 * 512 512
+1 * 512 512

fn=(240)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 256 0 256
+1 * 256
+3 * 256 0 256
+1 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +10 256 256
+4 * 256
+3 * 256 0 256
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=256 0x404bc6 288 
* * 3840 1536 1280 3 0 0 3
+5 * 256
+3 * 256 256
+4 * 256
+3 * 256 0 256
cfn=(122)
calls=256 0x404bc6 288 
* * 3840 1536 1280
+5 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(126)
calls=256 0x404be0 -36 
* * 73986 22676 21144 4 0 14 4 0 14 3252 146 508
+5 +1 256
+4 * 256 256
+1 * 256 256
+1 * 256 256

fn=(128)
0x404878 277 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298 1 0 0 1
+4 +1 298 298
+4 * 298
+3 * 298 0 298
cfi=(13)
cfn=(130)
calls=298 -33 -66 
* * 1788 894 596 0 0 1 0 0 1
+5 * 298 298
+1 * 298 298

fn=(132)
0x404d44 277 512 0 512
+1 * 512
+3 * 512
+4 * 512 0 512
+4 +1 512 512
+4 * 512
+3 * 512 0 512
cfi=(13)
cfn=(134)
calls=512 0x404e98 -58 
* * 8192 3072 2560 2 0 0 2
+5 * 512 512
+1 * 512 512

fn=(138)
0x404d5e 379 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +8 256 0 256
+4 +3 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(140)
calls=256 0x404eb5 -22 
* * 46338 13460 11672 1 0 14 1 0 14 3252 146 508
+5 +1 256 256
+1 * 256 256

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 512 0 512 1 0 0 1
+1 * 512
+3 * 512
+4 * 512 0 512
+4 +1 512 512
+4 * 512
+3 * 512 0 512
cfi=(13)
cfn=(124)
calls=512 0x404d36 -77 
* * 3072 1536 1024 2 0 0 2
+5 * 512 512
+1 * 512 512

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 512 0 512 1 0 0 1
+1 * 512
+3 * 512 0 512
+4 +1 512 512
+4 * 512 512
+1 * 512 512

fn=(110)
0x404380 726 512 0 512 1 0 0 1
+1 * 512
+3 * 512 0 512
+4 * 512 0 512
+4 * 512 512
+4 * 512 512
+3 * 512 512
+4 * 512 0 512
+3 * 512 512
+1 * 512 512

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 512 0 512 1 0 0 1
+1 * 512
+3 * 512 0 512
+4 +1 512 512
+4 * 512 512
+1 * 512 512

fn=(44)
0x404468 726 512 0 512
+1 * 512
+3 * 512 0 512
+4 * 512 0 512
+4 * 512 512
+4 * 512 512
+3 * 512 512
+4 * 512 0 512 1 0 0 1
+3 * 512 512
+1 * 512 512

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 263 0 263 1 0 0 1
+1 * 263
+3 * 263 0 263
+4 * 263 0 263 1 0 0 1
+4 * 263 263
+1 * 263 263

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 263 0 263 1 0 0 1
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 +4 263 263
+4 * 263 263
+4 * 263
+3 * 263
+3 * 263 0 263
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=263 0x40454c -14 
* * 1578 526 789 1 0 0 1
+5 +2 263 263
+1 * 263 263

fn=(150)
0x40326c 148 263 0 263
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 * 263 0 263
+4 +3 263 263 0 1 0 0 1
+4 * 263 263
+4 * 263
+3 * 263
+3 * 263 0 263
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=263 0x403d1a -29 
* * 4734 1578 1841 3 0 0 3
+5 +1 263 263
+1 * 263 263

fn=(180)
0x40334a 148 263 0 263
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 * 263 0 263
+4 +3 263 263
+4 * 263 263
+4 * 263
+3 * 263
+3 * 263 0 263
cfn=(182)
calls=263 0x403dcc -29 
* * 4734 1578 1841 2 0 0 2
+5 +1 263 263
+1 * 263 263

fn=(152)
0x403d1a 122 263 0 263 1 0 0 1
+1 * 263
+3 * 263
+4 * 263 0 263
+4 * 263 0 263
+4 +4 263 263
+4 * 263 263
+4 * 263
+3 * 263
+3 * 263 0 263
cfn=(154)
calls=263 0x4044f8 -14 
* * 1578 526 789 2 0 0 2
+5 +2 263 263
+1 * 263 263

fn=(184)
0x40454c 112 263 0 263 1 0 0 1
+1 * 263
+3 * 263 0 263
+4 * 263 0 263
+4 * 263 263
+1 * 263 263

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2420 392 387 3 4 6 3 4 6 371 58 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 916 246 157 0 1 0 0 1 0 169 13 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3027 630 570 12 3 4 12 3 4 496 61 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 5 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 936 252 165 2 0 0 2 0 0 174 5 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128
+3 * 128 0 128
cfi=(2)
cfn=(2)
calls=128 0x402d74 645 
* * 1664 768 256
+5 * 128
+3 * 128 0 128
+3 +1 128 128
+6 * 128 0 128
+3 * 128 128
+6 * 128 0 128
+3 +1 128 128
+6 * 128 0 128 1 0 0 1
+3 * 128 128
+6 * 128 0 128
+3 +2 128 0 128
+7 * 128
jump=128 +86 * 
* * 
+2 +1 8384 8384
+3 * 8384
+3 * 8384 8384
+4 * 8384
+3 * 8384
+3 * 8384 0 8384
cfi=(2)
cfn=(144)
calls=8384 0x402d9a 770 
* * 92224 41920 25152
+5 * 8384 8384
+4 * 8384 8384
+5 * 8384
+4 * 8384 0 8384
+5 +1 8384 8384
+3 * 8384
+3 * 8384 8384
+4 * 8384
+3 * 8384
+3 * 8384 0 8384
cfi=(2)
cfn=(146)
calls=8384 0x402dba 770 
* * 92224 41920 25152 1 0 0 1
+5 * 8384 8384
+2 * 8384
+4 * 8384 8384
+5 * 8384
+4 * 8384 0 8384
+5 -2 8384 0 8384
+4 * 8384 8384
+3 * 8384
+3 * 8384 8384
+3 * 8384 0 0 0 0 0 0 0 0 8384 129
jcnd=8256/8384 -93 +1 
* * 
-9 * 128 128 0 1 0 0 1
+3 * 128
+3 * 128 128
+3 * 128 0 0 0 0 0 0 0 0 128
jcnd=128/128 -93 +1 
* * 
+2 +4 128 128
+3 * 128
+3 * 128
+4 * 128 128 0 1 0 0 1
+5 * 128
+4 * 128
+3 * 128 0 128
+5 +1 128 128
+3 * 128
+3 * 128
+4 * 128 128
+5 * 128
+4 * 128
+3 * 128 0 128
+5 +1 128 0 128
+7 * 128
jump=128 0x4016ee * 
* * 
+2 +1 8384 8384
+3 * 8384
+3 * 8384 8384
+4 * 8384
+3 * 8384 0 0 1 0 0 1
+3 * 8384 0 8384
cfi=(2)
cfn=(146)
calls=8384 0x402dba 770 
* * 92224 41920 25152
+5 * 8384 8384
+2 * 8384
+4 * 8384 8384
+5 * 8384 0 8384
+5 +1 8384 8384
+3 * 8384
+3 * 8384 8384
+4 * 8384
+3 * 8384
+3 * 8384 0 8384
cfi=(2)
cfn=(144)
calls=8384 0x402d9a 770 
* * 92224 41920 25152
+5 * 8384 8384
+4 * 8384 8384
+5 * 8384 0 8384
+5 +1 8384 8384
+5 * 8384 8384
+5 * 8384 8384
+5 * 8384
+4 * 8384 0 8384
+5 +1 8384 8384
+5 * 8384 8384
+5 * 8384 8384
+5 * 8384
+4 * 8384 0 8384
+5 -4 8384 0 8384
+4 * 8384 8384
+3 * 8384
+3 * 8384 8384
+3 * 8384 0 0 0 0 0 0 0 0 8384 129
jcnd=8256/8384 0x401672 +1 
* * 
-9 * 128 128 0 1 0 0 1
+3 * 128
+3 * 128 128
+3 * 128 0 0 0 0 0 0 0 0 128
jcnd=128/128 0x401672 +1 
* * 
+6 +6 128 128 0 1 0 0 1
+5 * 128 128
+5 * 128 0 128
+5 +2 128 128
+3 +1 128 0 128
+3 * 128 128
+5 * 128 128
+1 * 128 128

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 128
+7 * 128
+7 * 128
+3 * 128
+3 * 128 0 128
cfi=(2)
cfn=(4)
calls=128 0x4030b2 310 
* * 115890 33112 30593 63 27 21 63 27 21 7321 330 510 63
+5 * 128
+7 * 128
+7 * 128
+3 * 128
+3 * 128 0 128
cfi=(2)
cfn=(80)
calls=128 0x402ff4 310 
* * 118923 32836 30046 47 5 30 47 5 30 8096 397 510
+5 * 128 0 0 1 0 0 1
+7 * 128
+7 * 128
+3 * 128
+3 * 128 0 128
cfn=(142)
calls=128 0x401585 -52 
* * 880256 388864 203392 8 0 0 8 0 0 17024 258
+5 * 128 0 128
+8 * 128 128
+6 * 128 0 128
+6 * 128
+7 * 128
+3 * 128 0 128
cfi=(2)
cfn=(148)
calls=128 0x402df4 414 
* * 32722 10346 7389 33 6 0 33 6 0 3724 27 256
+5 * 128
+7 * 128
+3 * 128 0 128 1 0 0 1
cfi=(2)
cfn=(178)
calls=128 0x402e74 414 
* * 32893 10386 7463 7 1 0 7 1 0 3766 26 256
+5 +2 128
+7 * 128
+7 * 128
+3 * 128
+3 * 128 0 128
cfi=(2)
cfn=(4)
calls=128 0x4030b2 310 
* * 115075 33046 30436 2 0 1 2 0 1 7197 146 510
+5 * 128
+7 * 128
+7 * 128
+3 * 128
+3 * 128 0 128
cfi=(2)
cfn=(80)
calls=128 0x402ff4 310 
* * 118128 32786 29866 0 0 0 0 0 0 8001 196 510
+5 * 128 128
+6 * 128 0 0 1 0 0 1
+7 * 128
+7 * 128 0 128
+6 * 128 128
+8 * 128
+3 * 128
+3 * 128 0 128
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=128 0x401719 -33 
* * 409984 170496 94144 4 0 0 4 0 0 8512 129
+5 * 128 0 128
+8 * 128 128
+6 * 128 0 128
+6 * 128
+7 * 128 0 0 1 0 0 1
+3 * 128 0 128
cfi=(2)
cfn=(148)
calls=128 0x402df4 414 
* * 32722 10346 7389 0 0 0 0 0 0 3724 23 256
+5 * 128
+7 * 128
+3 * 128 0 128
cfi=(2)
cfn=(178)
calls=128 0x402e74 414 
* * 32893 10386 7463 0 0 0 0 0 0 3766 23 256
+5 +2 128 128
+7 * 128
+3 * 128 0 128
cfi=(2)
cfn=(2)
calls=128 0x402d74 645 
* * 1664 768 256
+5 * 128 128
+6 * 128
+3 * 128
+3 * 128
+3 * 128 128
+7 * 128
+3 * 128 0 0 1 0 0 1
+3 * 128 0 128
cfi=(2)
cfn=(144)
calls=128 0x402d9a 770 
* * 1408 640 384
+5 * 128
+3 * 128
+7 * 128
+3 * 128
+3 * 128 0 128
cfi=(2)
cfn=(200)
calls=128 0x402eda 901 
* * 19082 6638 5281 39 12 10 39 12 10 1037 80 41
+5 +1 128 128
+7 * 128
+3 * 128 0 128
cfi=(2)
cfn=(10)
calls=128 0x402f54 645 
* * 1664 768 256 0 1 0 0 1
+5 * 128 128
+6 * 128
+3 * 128
+3 * 128
+3 * 128 128
+7 * 128 0 0 1 0 0 1
+3 * 128
+3 * 128 0 128
cfi=(2)
cfn=(146)
calls=128 0x402dba 770 
* * 1408 640 384
+5 * 128
+3 * 128
+7 * 128
+3 * 128
+3 * 128 0 128
cfi=(2)
cfn=(244)
calls=128 0x402f7a 901 
* * 18455 6394 5090 22 13 16 22 13 16 907 75 41
+5 +1 128 128
+7 * 128
+3 * 128 0 128
cfi=(2)
cfn=(10)
calls=128 0x402f54 645 
* * 1664 768 256
+5 * 128 128
+6 * 128
+3 * 128
+3 * 128
+3 * 128 128 0 1 0 0 1
+7 * 128
+3 * 128
+3 * 128 0 128
cfi=(2)
cfn=(146)
calls=128 0x402dba 770 
* * 1408 640 384
+5 * 128 128
+2 * 128
+4 * 128 128
+8 * 128 128
+8 * 128 0 128
+8 +1 128 128
+7 * 128
+3 * 128 0 128
cfi=(2)
cfn=(2)
calls=128 0x402d74 645 
* * 1664 768 256
+5 * 128 128 0 1 0 0 1
+6 * 128
+3 * 128
+3 * 128
+3 * 128 128
+7 * 128
+3 * 128
+3 * 128 0 128
cfi=(2)
cfn=(144)
calls=128 0x402d9a 770 
* * 1408 640 384
+5 * 128 128
+4 * 128 128
+8 * 128
+4 * 128 128
+8 * 128
+3 * 128 0 128
+8 +2 128 0 128
+7 -12 128 128
+8 * 128 128
+7 * 128 0 0 0 0 0 0 0 0 128 1
jcnd=1/128 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 128
+7 * 128
+3 * 128 0 128
cfi=(2)
cfn=(2)
calls=128 0x402d74 645 
* * 1664 768 256 2 0 1 2 0 1
+5 * 128
+3 * 128 128
+7 * 128
+3 * 128 0 128
cfi=(2)
cfn=(2)
calls=128 0x402d74 645 
* * 1664 768 256 0 1 0 0 1
+5 * 128
+3 * 128 0 0 0 0 0 0 0 0 128
+2 * 128 0 0 1 0 0 1
+5 * 128
jump=128 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 128
+2 * 128 0 0 0 0 0 0 0 0 128
jcnd=128/128 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+5 +1 128 128
+4 * 128
+3 * 128 0 128
cfi=(2)
cfn=(2)
calls=128 0x402d74 645 
* * 1664 768 256
+5 * 128
+3 * 128 0 128
+3 +1 128 128 0 1 0 0 1
+6 * 128 0 128
+3 * 128 128
+6 * 128 0 128
+3 +2 128 0 128
+7 * 128
jump=128 +86 * 
* * 
+2 +1 8384 8384
+3 * 8384
+3 * 8384 8384
+4 * 8384
+3 * 8384
+3 * 8384 0 8384
cfi=(2)
cfn=(144)
calls=8384 0x402d9a 770 
* * 92224 41920 25152
+5 * 8384 8384
+4 * 8384 8384
+5 * 8384
+4 * 8384 0 8384
+5 +1 8384 8384
+3 * 8384
+3 * 8384 8384
+4 * 8384
+3 * 8384
+3 * 8384 0 8384
cfi=(2)
cfn=(146)
calls=8384 0x402dba 770 
* * 92224 41920 25152
+5 * 8384 8384
+2 * 8384
+4 * 8384 8384
+5 * 8384
+4 * 8384 0 8384
+5 -2 8384 0 8384
+4 * 8384 8384
+3 * 8384
+3 * 8384 8384
+3 * 8384 0 0 0 0 0 0 0 0 8384 129
jcnd=8256/8384 -93 +1 
* * 
-9 * 128 128 0 1 0 0 1
+3 * 128
+3 * 128 128
+3 * 128 0 0 0 0 0 0 0 0 128
jcnd=128/128 -93 +1 
* * 
+2 +4 128 128
+3 * 128
+3 * 128 0 0 1 0 0 1
+4 * 128 128
+5 * 128
+4 * 128
+3 * 128 0 128
+5 +1 128 128
+3 * 128
+3 * 128
+4 * 128 128
+5 * 128
+4 * 128
+3 * 128 0 128
+5 +1 128 128
+5 * 128 128
+5 * 128 128
+5 * 128 0 0 1 0 0 1
+4 * 128
+3 * 128 0 128
+5 +2 128 128
+3 +1 128 0 128
+3 * 128 128
+5 * 128 128
+1 * 128 128

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 526 0 526 1 0 0 1
+2 0 526 0 526
+2 0 526 0 526
+2 0 526
+3 0 526 0 526
+2 0 526 0 526
+1 0 526 0 526
+1 0 526
+3 0 526
+4 0 526 526
+4 0 526 0 526
+4 0 526
+3 0 526
+4 0 526
+3 0 526
+3 0 526
+3 0 526 0 0 1 0 0 1 0 0 526
+6 0 526
+4 0 526 0 0 0 0 0 0 0 0 526
+6 0 526
+4 0 526 0 0 0 0 0 0 0 0 526
+6 0 526 526
+7 0 526 0 0 0 0 0 0 0 0 526 2
jcnd=402/526 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 402
+2 0 402 0 0 0 0 0 0 0 0 402
+6 0 402 402 0 1 0 0 1
+4 0 402
+3 0 402
+2 0 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 0x3877c78a40 0 
* 0 
+6 0 402 402
+4 0 402
+3 0 402 0 0 0 0 0 0 0 0 402
+6 0 402 402
+5 0 402
+4 0 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 0x3877c7907c 0 
* 0 
+6 0 402 402
+5 0 402
+4 0 402 0 0 0 0 0 0 0 0 402
+6 0 402
+4 0 402 0 0 1 0 0 1 0 0 402
+6 0 402
+4 0 402 402
+7 0 402 0 0 0 0 0 0 0 0 402
+6 0 402 402
+6 0 402
+2 0 402 0 0 0 0 0 0 0 0 402
+6 0 402 402
+4 0 402 0 0 0 0 0 0 0 0 402 3
jcnd=399/402 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=2/3 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 402 402 0 1 0 0 1
+4 0 402 0 0 0 0 0 0 0 0 402 33
jcnd=31/402 0x3877c78bf0 0 
* 0 
+6 0 371 371 0 0 1 0 0 1
+6 0 371 0 0 1 0 0 1 0 0 371 60
jcnd=44/371 0x3877c78a78 0 
* 0 
+6 0 327 327
+5 0 327 327
+5 0 327 327
+4 0 327 0 0 0 0 0 0 0 0 327
+6 0 327 327
+4 0 327 0 0 0 0 0 0 0 0 327
+6 0 327 327
+9 0 327 0 327
+4 0 327 0 327
+4 0 327 0 0 0 0 0 0 0 0 327 4
jcnd=319/327 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8 2
+6 0 327
+3 0 327
+4 0 327 327
+4 0 327 327
+4 0 327 0 0 0 0 0 0 0 0 327
-12 0 44
+4 0 44 44
+4 0 44 44
+4 0 44 0 0 0 0 0 0 0 0 44
+6 0 371
+7 0 371 0 371
+4 0 371 0 371
+4 0 371 0 0 0 0 0 0 0 0 371 2
jcnd=362/371 +18 0 
* 0 
+2 0 9 0 9
+8 0 9 0 9
+8 0 9 0 9
+4 0 9
+3 0 9 0 9 1 0 0 1
+4 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+7 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x3877c78b20 0 
* 0 
-30 0 362 0 362
+4 0 362
+3 0 362 0 362
+4 0 362
+4 0 362 0 362
+4 0 362 0 362
+4 0 362
+7 0 362 0 0 0 0 0 0 0 0 362
jcnd=362/362 0x3877c78b20 0 
* 0 
-7 0 31
+7 0 31 0 0 0 0 0 0 0 0 31
jcnd=31/31 0x3877c78b20 0 
* 0 
0x3877c78a40 0 402 0 0 1 0 0 1
+5 0 402 402
+4 0 402 402
+7 0 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 +16 0 
* 0 
+16 0 402 0 402
+5 0 402 0 0 0 0 0 0 0 0 402
+6 0 402
+3 0 402
jump=402 0x3877c7878f 0 
* 0 
+10 0 44 0 44
+6 0 44 0 0 1 0 0 1
jump=44 0x3877c78885 0 
* 0 
0x3877c78b20 0 402 402 0 1 0 0 1
+4 0 402
+2 0 402 0 0 0 0 0 0 0 0 402
+6 0 402 402
+7 0 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 +15 0 
* 0 
+15 0 402 0 402 1 0 0 1
+4 0 402 0 0 0 0 0 0 0 0 402
+6 0 402
+4 0 402 402
+1 0 402 402
+1 0 402 402
+2 0 402 402
+2 0 402 402
+2 0 402 402
+2 0 402 402
0x3877c78bf0 0 31 0 0 1 0 0 1
+3 0 31 0 31
+4 0 31
+3 0 31
+4 0 31 0 31 1 0 0 1
+4 0 31
jump=31 0x3877c788cf 0 
* 0 
0x3877c78f12 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 402 402 0 1 1 0 1 1
+4 0 402 0 0 1 0 0 1
+7 0 402
+4 0 402
+3 0 402
+3 0 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 516 0 0 1 0 0 1
+7 0 516
+3 0 516
+3 0 516 516 0 0 1 0 0 1
+4 0 516
+4 0 516 0 0 0 0 0 0 0 0 0 0 516 63
jump=56 0x3877c89be8 0 
* 0 
jump=72 0x3877c89bd0 0 
* 0 
jump=64 0x3877c89bb8 0 
* 0 
jump=64 +11 0 
* 0 
jump=64 0x3877c89c48 0 
* 0 
jump=66 0x3877c89c30 0 
* 0 
jump=64 0x3877c89c18 0 
* 0 
jump=66 0x3877c89c00 0 
* 0 
+11 0 64 64
+3 0 64
+4 0 64
+4 0 64 64
+4 0 64
+4 0 64 0 64
+4 0 64
+9 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
+4 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
jcnd=8/64 0x3877c89c60 0 
* 0 
-40 0 2014 2014
+4 0 2014 0 2014 0 0 6 0 0 6
+4 0 2014 2014
+4 0 2014 0 2014
+4 0 2014 2014
+4 0 2014 0 2014 0 0 1 0 0 1
+4 0 2014 2014
+4 0 2014 0 2014 0 0 3 0 0 3
+4 0 2014
+4 0 2014
+4 0 2014 0 0 0 0 0 0 0 0 2014 39
jcnd=480/2014 0x3877c89c60 0 
* 0 
-32 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
jcnd=10/66 0x3877c89c60 0 
* 0 
-24 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
+4 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
jcnd=8/64 0x3877c89c60 0 
* 0 
-16 0 66 66 0 1 0 0 1
+4 0 66 0 66
+4 0 66 0 0 1 0 0 1
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66 6
jcnd=10/66 0x3877c89c60 0 
* 0 
+6 0 1758
+4 0 1758 1758
+3 0 1758 0 1758 0 0 1 0 0 1
+3 0 1758 1758
+4 0 1758 0 1758 0 0 3 0 0 3
+4 0 1758 1758
+4 0 1758 0 1758 0 0 4 0 0 4
+4 0 1758 1758
+4 0 1758 0 1758
+4 0 1758
jump=1758 -80 0 
* 0 
-30 0 56 56
+3 0 56 0 56
+3 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56 0 0 1 0 0 1
+4 0 56 56
+4 0 56 0 56
+4 0 56
jump=56 -80 0 
* 0 
-24 0 72 72
+4 0 72 0 72
+4 0 72 72
+4 0 72 0 72
+4 0 72 72
+4 0 72 0 72
+4 0 72
jump=72 -80 0 
* 0 
-16 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
jump=64 -80 0 
* 0 
+8 0 64 64
+3 0 64
+4 0 64 0 0 1 0 0 1
+4 0 64
+4 0 64
jump=64 -39 0 
* 0 
+9 0 72
+3 0 72 0 0 0 0 0 0 0 0 72
+6 0 72 72
+3 0 72
+4 0 72
jump=72 -72 0 
* 0 
+8 0 56
+4 0 56 56
+3 0 56 0 0 0 0 0 0 0 0 56
+2 0 56
+4 0 56
jump=56 -99 0 
* 0 
+11 0 66 66 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66
+4 0 66
jump=66 0x3877c89b78 0 
* 0 
+9 0 64 64
+3 0 64
+4 0 64
+4 0 64
+4 0 64
jump=64 0x3877c89b70 0 
* 0 
+9 0 66 66
+3 0 66
+4 0 66
+4 0 66
+4 0 66
jump=66 0x3877c89b68 0 
* 0 
+9 0 64 64
+3 0 64
+4 0 64
+4 0 64
+4 0 64
jump=64 0x3877c89b60 0 
* 0 
+9 0 516 0 516 1 0 0 1
+3 0 516 516

fn=(104) alloc_perturb
0x3877c77180 0 401 401 0 1 0 0 1
+6 0 401
+2 0 401 0 0 0 0 0 0 0 0 401 1
+2 0 401 401

fn=(38) _int_malloc
0x3877c79a00 0 526 0 526 1 0 0 1
+2 0 526
+3 0 526 0 526
+2 0 526 0 526
+2 0 526 0 526 0 0 1 0 0 1
+2 0 526
+3 0 526 0 526
+1 0 526 0 526
+1 0 526
+4 0 526
+4 0 526 0 0 0 0 0 0 0 0 526
+6 0 526
+4 0 526
+6 0 526
+3 0 526
+4 0 526
+4 0 526
+4 0 526
+3 0 526 0 0 0 0 0 0 0 0 526
+6 0 526 526 0 1 1 0 1 1
+7 0 526 0 0 0 0 0 0 0 0 526 5
jcnd=404/526 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 125 125
+6 0 125
+4 0 125
+2 0 125 0 0 0 0 0 0 0 0 125
+6 0 125
+3 0 125
+4 0 125 125
+1 0 125 125
+1 0 125 125
+2 0 125 125
+2 0 125 125
+2 0 125 125
+2 0 125 125
-14 0 401
+4 0 401 401
+1 0 401 401
+1 0 401 401
+2 0 401 401
+2 0 401 401
+2 0 401 401
+2 0 401 401
+7 0 421
+7 0 421 0 0 1 0 0 1 0 0 421 5
jcnd=2/421 0x3877c79b70 0 
* 0 
+2 0 419
+3 0 419
+5 0 419
+3 0 419
+4 0 419 0 419
+4 0 419
+2 0 419
+5 0 419 419 0 0 6 0 0 6
+4 0 419
+3 0 419 0 0 0 0 0 0 0 0 419
jcnd=419/419 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 913 247 193 8 0 0 8 0 0 189 28
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 420 0 0 1 0 0 1
+3 0 420
+3 0 420
+3 0 420
+4 0 420
+3 0 420
+4 0 420 0 420
+5 0 420
+3 0 420 0 420
+4 0 420 0 420
+4 0 420 0 420
+5 0 420
+3 0 420
+3 0 420
+3 0 420
+3 0 420
+4 0 420
+4 0 420 0 0 1 0 0 1
+4 0 420 0 420
+4 0 420
+4 0 420 0 420
+5 0 420 0 420
+5 0 420
+3 0 420
+3 0 420 0 420
+5 0 420
+5 0 420
+3 0 420 0 420
+4 0 420 0 420
+4 0 420
+6 0 420 0 420
+4 0 420 0 420
+5 0 420 0 0 1 0 0 1
+3 0 420
+3 0 420
+3 0 420
jump=420 +87 0 
* 0 
+8 0 504
+3 0 504
+4 0 504
+2 0 504
+2 0 504
+3 0 504
+3 0 504
+3 0 504
+2 0 504
+2 0 504
+5 0 504
+2 0 504 504 0 0 2 0 0 2
+4 0 504
+3 0 504
+4 0 504 0 504
+4 0 504 0 504
+8 0 504
+7 0 504 0 504
+4 0 504 0 504
+4 0 504 0 504
+4 0 504 0 0 0 0 0 0 0 0 504
-38 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 933 933 0 1 0 0 1
+4 0 933
+3 0 933 0 0 0 0 0 0 0 0 933 45
jcnd=381/933 0x3877c79ef0 0 
* 0 
+6 0 552 552
+4 0 552 552
+4 0 552
+4 0 552 0 0 0 0 0 0 0 0 552
+6 0 552 552 0 1 0 0 1
+7 0 552 0 0 0 0 0 0 0 0 552 2
+6 0 552
+4 0 552
+7 0 552 0 0 0 0 0 0 0 0 552 5
jcnd=7/552 +11 0 
* 0 
+2 0 545
+3 0 545 0 0 0 0 0 0 0 0 545 135
jcnd=382/545 0x3877c79e28 0 
* 0 
+6 0 532
+3 0 532 0 532
+4 0 532 0 532
+5 0 532 0 0 0 0 0 0 0 0 532 14
jcnd=20/532 0x3877c7a090 0 
* 0 
+6 0 512
+7 0 512 0 0 0 0 0 0 0 0 512 9
jcnd=504/512 0x3877c79c50 0 
* 0 
+6 0 8 0 0 1 0 0 1
+3 0 8
+4 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+3 0 8
+4 0 8
+2 0 8
+2 0 8
+3 0 8
+3 0 8
+8 0 8
+3 0 8
+2 0 8
+2 0 8
+4 0 8 8
+4 0 8
+3 0 8 0 0 1 0 0 1 0 0 8 5
jcnd=8/8 0x3877c79e15 0 
* 0 
0x3877c79e15 0 8 0 8
+4 0 8 0 8
+4 0 8
+3 0 8
jump=8 0x3877c79c73 0 
* 0 
+8 0 382 382 0 1 0 0 1
+4 0 382
+3 0 382 0 0 0 0 0 0 0 0 382 38
jcnd=201/382 0x3877c79ce1 0 
* 0 
+6 0 181 181
+5 0 181 0 0 0 0 0 0 0 0 181 6
jcnd=161/181 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 15 0 0 15
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 381 0 0 1 0 0 1
+7 0 381
+3 0 381 0 0 0 0 0 0 0 0 381 4
jcnd=2/381 0x3877c7a0b0 0 
* 0 
+6 0 381 381 0 1 0 0 1
+4 0 381
+3 0 381
+3 0 381
+2 0 381
+4 0 381
+3 0 381
+3 0 381
+2 0 381
+2 0 381
+2 0 381
+2 0 381 381 0 0 1 0 0 1
+8 0 381
+5 0 381
+5 0 381
+2 0 381 0 0 0 0 0 0 0 0 381
-2 0 202
+2 0 202 0 0 0 0 0 0 0 0 202
+2 0 583
+2 0 583 0 0 0 0 0 0 0 0 583 29
jcnd=378/583 +64 0 
* 0 
+2 0 205
+8 0 205
+3 0 205
+3 0 205 0 0 0 0 0 0 0 0 205 1
jcnd=1/205 0x3877c79fc0 0 
* 0 
-6 0 66
+3 0 66
+3 0 66 0 0 0 0 0 0 0 0 66 5
jcnd=30/66 0x3877c79fc0 0 
* 0 
+2 0 240
+2 0 240 240
+8 0 240
+2 0 240 0 0 0 0 0 0 0 0 240 17
jcnd=66/240 -20 0 
* 0 
+2 0 174
+2 0 174
+5 0 174
+3 0 174
+3 0 174
+2 0 174
+2 0 174
+5 0 174 0 0 0 0 0 0 0 0 174 1
jcnd=1/174 +14 0 
* 0 
+2 0 173
+2 0 173
+4 0 173
+2 0 173
+2 0 173 0 0 0 0 0 0 0 0 173 3
jcnd=171/173 -8 0 
* 0 
-8 0 3460
+4 0 3460
+2 0 3460
+2 0 3460 0 0 0 0 0 0 0 0 3460 265
jcnd=2969/3460 -8 0 
* 0 
-2 0 378 0 0 1 0 0 1
+2 0 378 0 0 0 0 0 0 0 0 378 26
jcnd=320/378 -8 0 
* 0 
+2 0 552 552 0 0 9 0 0 9
+4 0 552 0 0 1 0 0 1
+3 0 552 0 0 0 0 0 0 0 0 552 167
jcnd=350/552 0x3877c7a1cf 0 
* 0 
+6 0 202
+2 0 202
+4 0 202
+2 0 202
+2 0 202
+2 0 202 0 202
+8 0 202
jump=202 0x3877c79f30 0 
* 0 
+37 0 31 31 0 1 0 0 1
+5 0 31 31
+4 0 31
+4 0 31 31
+5 0 31 0 0 0 0 0 0 0 0 31
jcnd=31/31 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 20 0 0 1 0 0 1
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 0 0 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 0x3877c79f00 0 
* 0 
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 350 350 0 1 2 0 1 2
+4 0 350 350 0 0 1 0 0 1
+4 0 350
+3 0 350 350
+4 0 350
+4 0 350
+3 0 350
+3 0 350 350
+4 0 350 0 0 0 0 0 0 0 0 350
+6 0 350 350
+4 0 350 0 0 0 0 0 0 0 0 350
+6 0 350 350 0 1 0 0 1
+8 0 350 0 350
+4 0 350 0 350
+4 0 350 0 0 0 0 0 0 0 0 350 8
jcnd=341/350 +38 0 
* 0 
+2 0 9 9 0 0 1 0 0 1
+4 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
+2 0 9 9
+5 0 9 0 0 0 0 0 0 0 0 9
+6 0 9 9
+4 0 9 0 9
+4 0 9 9
+4 0 9 0 9
+4 0 9
+4 0 9 0 0 0 0 0 0 0 0 9
-4 0 341
+4 0 341 0 0 0 0 0 0 0 0 341 12
jcnd=20/341 0x3877c7a2e3 0 
* 0 
+6 0 330 330
+4 0 330 330 0 1 0 0 1
+4 0 330 0 0 0 0 0 0 0 0 330
+6 0 330
+4 0 330
+7 0 330 0 330 0 0 10 0 0 10
+4 0 330 0 330
+4 0 330 0 330
+4 0 330 0 330
+4 0 330 0 0 0 0 0 0 0 0 330 4
jcnd=2/330 +7 0 
* 0 
+2 0 328 0 328
+5 0 328
+7 0 328 0 0 0 0 0 0 0 0 328 1
jcnd=322/328 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 6 0 6 0 0 1 0 0 1
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 324 0 0 1 0 0 1
+7 0 324 0 324 0 0 1 0 0 1
+4 0 324
+3 0 324
+3 0 324
+4 0 324
+3 0 324
+4 0 324
+3 0 324
+3 0 324
+4 0 324 0 324
+4 0 324 0 324 0 0 1 0 0 1
+4 0 324
jump=324 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 20
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 +7 0 
* 0 
+7 0 350
+4 0 350 0 0 1 0 0 1
+3 0 350
+3 0 350 0 350
cfn=(104)
calls=350 0x3877c77180 0 
* 0 1400 700 0 1 0 0 1 0 0 350
+5 0 350
+3 0 350
jump=350 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 31 0 0 1 0 0 1
+7 0 31
+2 0 31
+4 0 31
+3 0 31
+3 0 31 0 31
+5 0 31
+3 0 31
+4 0 31
+3 0 31 0 0 1 0 0 1
+4 0 31
+4 0 31
+3 0 31
+4 0 31 0 31
+4 0 31 0 31 0 0 3 0 0 3
+4 0 31
+3 0 31
+3 0 31 0 31
cfn=(104)
calls=31 0x3877c77180 0 
* 0 124 62 0 0 0 0 0 0 0 31 1
+5 0 31
+3 0 31
jump=31 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 526 0 526 1 0 0 1
+5 0 526 0 526
+5 0 526
+3 0 526 0 526
+5 0 526
+4 0 526 526 0 0 1 0 0 1
+7 0 526 526 0 0 1 0 0 1
+3 0 526
+3 0 526 0 0 0 0 0 0 0 0 526
+6 0 526 526 0 0 1 0 0 1
+7 0 526 526 0 1 1 0 1 1
+4 0 526
+3 0 526 0 0 0 0 0 0 0 0 526
+2 0 526 526 0 0 1 0 0 1
+3 0 526
+3 0 526 0 0 0 0 0 0 0 0 526
jcnd=526/526 +97 0 
* 0 
+18 0 526
+3 0 526
+3 0 526 0 526
cfn=(38)
calls=526 0x3877c79a00 0 
* 0 114683 14354 16852 42 27 38 42 27 38 18140 874
+5 0 526
+3 0 526
+3 0 526 0 0 0 0 0 0 0 0 526
+2 0 526
+3 0 526 0 0 0 0 0 0 0 0 526
+2 0 526
+3 0 526 0 0 0 0 0 0 0 0 526 5
+2 0 526 526
+7 0 526 0 0 0 0 0 0 0 0 526
jcnd=526/526 +13 0 
* 0 
+13 0 526 0 526
+2 0 526 0 0 0 0 0 0 0 0 526 8
+6 0 526
+3 0 526 526
+4 0 526 526
+5 0 526 526
+5 0 526
+4 0 526 526
+1 0 526 0 0 1 0 0 1
+5 0 526 526 0 0 1 0 0 1
+7 0 526 0 0 0 0 0 0 0 0 526
jcnd=526/526 +14 0 
* 0 
+14 0 526 0 526 1 0 0 1
+3 0 526 0 0 0 0 0 0 0 0 526
+6 0 526
jump=526 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 526 0 526 1 0 0 1
+2 0 526
+3 0 526
+3 0 526 0 526
+2 0 526
+3 0 526 0 526
+1 0 526
+3 0 526 0 526
+1 0 526
+3 0 526
+4 0 526
+3 0 526 0 0 0 0 0 0 0 0 526
+6 0 526
+4 0 526
+3 0 526 0 0 0 0 0 0 0 0 526 4
jcnd=10/526 0x3877c838d1 0 
* 0 
+2 0 516
+3 0 516
+3 0 516
+3 0 516
+3 0 516
+3 0 516 0 0 0 0 0 0 0 0 516
jcnd=516/516 +41 0 
* 0 
+41 0 516 0 0 1 0 0 1
+3 0 516 0 0 0 0 0 0 0 0 516
jcnd=516/516 0x3877c839c0 0 
* 0 
+24 0 516
+3 0 516
+4 0 516
+3 0 516
+3 0 516
+3 0 516
+3 0 516
+3 0 516 0 0 0 0 0 0 0 0 516 253
jcnd=264/516 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 262
+10 0 262 262 0 0 1 0 0 1
+3 0 262
+4 0 262 0 262
+3 0 262
+4 0 262
+4 0 262 0 0 0 0 0 0 0 0 262
jcnd=262/262 -18 0 
* 0 
-18 0 842 842
+3 0 842
+4 0 842 0 842
+3 0 842
+4 0 842
+4 0 842 0 0 0 0 0 0 0 0 842 8
jcnd=580/842 -18 0 
* 0 
+2 0 526
+4 0 526
+3 0 526 526
+1 0 526 526
+1 0 526 526
+2 0 526 526 0 1 0 0 1
+2 0 526 526
0x3877c839c0 0 516 0 0 1 0 0 1
+3 0 516
+3 0 516
+3 0 516
+4 0 516 0 516 0 0 1 0 0 1
cfn=(284)
calls=516 0x3877c89b20 0 
* 0 49974 17916 16884 6 1 19 6 1 19 2402 45 516 63
+5 0 516
jump=516 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 526 526 0 1 1 0 1 1
+7 0 526 526 0 0 1 0 0 1
+3 0 526
+3 0 526 0 0 1 0 0 1 0 0 526
+6 0 526
+3 0 526 0 0 0 0 0 0 0 0 526
+6 0 526 526
+4 0 526
+4 0 526
+2 0 526 0 0 0 0 0 0 0 0 526
+2 0 526
+2 0 526
+7 0 526 0 0 0 0 0 0 0 0 526
jcnd=526/526 +14 0 
* 0 
+14 0 526
+2 0 526
cfn=(170)
calls=526 0x3877c78650 0 
* 0 51016 13606 7870 20 4 0 20 4 0 12167 110

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 6
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20
+6 0 20 0 0 0 0 0 0 0 0 20 8
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 1959673 756007 465465 239 68 80 239 68 80 73461 1711 3146 63
