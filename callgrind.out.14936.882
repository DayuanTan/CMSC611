version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 882


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 990509225 - 990565570
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 190 0 0 1 0 0 1
+3 0 190 0 0 0 0 0 0 0 0 190
+2 0 190
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=190 0x3877c7b8b0 0 
* 0 18581 4518 2422 19 3 0 19 3 0 4147 43
* 0 190 190 0 1 1 0 1 1 0 0 0 190

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 190 0 190 1 0 0 1
+1 0 190
+5 0 190
+3 0 190 0 190
+1 0 190
+4 0 190 0 0 1 0 0 1
+3 0 190
+4 0 190
+3 0 190 0 190 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=190 0x3877c7aa50 0 
* 0 33919 5981 5098 31 25 27 31 25 27 5759 184
* 0 190 190 0 1 1 0 1 1 0 0 0 190
+5 0 190
+3 0 190 0 0 0 0 0 0 0 0 190
jcnd=190/190 +96 0 
* 0 
+96 0 190 0 0 1 0 0 1
+4 0 190 190
+1 0 190 190
+1 0 190 190

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 90 0 90 1 0 0 1
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=90 0x404a28 -35 
* * 540 180 270 1 0 1 1 0 1
+5 * 90 90
+1 * 90 90

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 90
+4 * 90
+3 * 90 0 90
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=90 0x4044cc -35 
* * 450 180 180
+5 * 90 90
+1 * 90 90

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 90 0 90 1 0 0 1
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90 1 0 0 1
+4 +1 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=90 0x4049d4 -35 
* * 540 180 270 1 0 0 1
+5 * 90 90
+1 * 90 90

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 90 0 90 1 0 0 1
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 90
+4 * 90
+3 * 90 0 90
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=90 0x404520 -35 
* * 450 180 180
+5 * 90 90
+1 * 90 90

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
+4 * 45 0 45
+4 * 45 0 45
+4 +1 45 45
+4 * 45 45
+4 * 45 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=45 0x403df2 -87 
* * 1080 360 405 0 4 1 0 4 1 45
+5 * 45 45
+1 * 45 45

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 90 0 90 1 0 0 1
+1 * 90
+3 * 90 0 90
+4 * 90 90
+4 * 90 90
+1 * 90 90

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
+4 * 45 0 45
+4 * 45 0 45
+4 +1 45 45
+4 * 45 45
+4 * 45 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=45 0x40406a -87 
* * 1080 360 405 0 3 3 0 3 3 45
+5 * 45 45
+1 * 45 45

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=10 +8 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=10 +7 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 90 0 90
+1 * 90
+3 * 90 0 90
+4 * 90 90
+4 * 90 90
+1 * 90 90

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 180 0 180 1 0 0 1
+1 * 180
+3 * 180 0 180
+4 +1 180 180
+4 * 180 180
+1 * 180 180

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 180 0 180 1 0 0 1
+1 * 180
+3 * 180
+4 * 180 0 180
+4 +1 180
+4 * 180
+3 * 180 0 180 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=180 0x40500c 790 
* * 1080 540 360 1 0 0 1
+5 * 180 180
+3 * 180 180
+1 * 180 180

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 140 0 140
+1 * 140
+3 * 140 0 140
+4 +1 140 140
+4 * 140 140
+1 * 140 140

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 180 0 180 1 0 0 1
+1 * 180
+3 * 180 0 180
+4 +1 180 180 0 1 0 0 1
+4 * 180 180
+1 * 180 180

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 140 0 140
+1 * 140
+3 * 140 0 140 0 0 1 0 0 1
+4 +1 140 140
+4 * 140 140
+1 * 140 140

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 180 0 180 1 0 0 1
+1 * 180
+3 * 180
+4 * 180 0 180
+4 +1 180
+4 * 180
+3 * 180 0 180
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=180 0x404ffe 790 
* * 1080 540 360 1 0 0 1
+5 * 180 180
+3 * 180 180
+1 * 180 180

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 90 0 90
+1 * 90
+3 * 90 0 90
+4 * 90 0 90
+4 * 90 90
+4 * 90 90
+1 * 90 90

fl=(5)
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 95 0 95
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 * 95 0 95
+4 +1 95 95
+4 * 95
+3 * 95 0 95
cob=(5)
cfi=(8)
cfn=(164)
calls=95 0x387e4bb2f0 0 
* * 9670 2341 1232 21 4 0 21 4 0 2161 31 95
* * 95 95 0 1 1 0 1 1 0 0 0 95
+5 * 95 95
+1 * 95 95

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 95 0 95
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 * 95 0 95
+4 +1 95 95
+4 * 95
+3 * 95 0 95
cob=(5)
cfi=(8)
cfn=(164)
calls=95 0x387e4bb2f0 0 
* * 9671 2367 1190 0 0 0 0 0 0 2176 12 95
* * 95 95 0 0 0 0 0 0 0 0 0 95
+5 * 95 95
+1 * 95 95

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 95 0 95 1 0 0 1
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 * 95 0 95
+4 +2 95 95
+4 * 95
+3 * 95 0 95
cfn=(102)
calls=95 0x4048de +12 
* * 570 190 190 1 0 0 1
+5 * 95 95
+4 * 95 0 0 1 0 0 1
+3 * 95
+2 * 95 0 0 0 0 0 0 0 0 95
jcnd=95/95 +7 +3 
* * 
+7 +3 95 95
+4 * 95
+4 * 95
+3 * 95 0 95
cob=(5)
cfi=(8)
cfn=(32)
calls=95 0x387e4bd0b0 0 
* * 18111 3353 2739 11 7 15 11 7 15 2917 70 95
* * 95 95 0 0 0 0 0 0 0 0 0 95
+5 +1 95 95
+1 * 95 95

fn=(18)
0x404a28 81 90 0 90 1 0 0 1
+1 * 90
+3 * 90 0 90 0 0 1 0 0 1
+4 * 90 0 90
+4 * 90 90
+1 * 90 90

fn=(92)
0x4049d4 81 90 0 90 1 0 0 1
+1 * 90
+3 * 90 0 90
+4 * 90 0 90
+4 * 90 90
+1 * 90 90

fn=(196)
0x404520 86 90 0 90
+1 * 90
+3 * 90 0 90
+4 * 90 90
+1 * 90 90

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 95 0 95 1 0 0 1
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 * 95 0 95 1 0 0 1
+4 +2 95 95
+4 * 95
+3 * 95 0 95
cfn=(28)
calls=95 0x404992 +12 
* * 570 190 190 1 0 0 1
+5 * 95 95
+4 * 95
+3 * 95
+2 * 95 0 0 0 0 0 0 0 0 95
jcnd=95/95 +7 +3 
* * 
+7 +3 95 95
+4 * 95
+4 * 95
+3 * 95 0 95
cob=(5)
cfi=(8)
cfn=(32)
calls=95 0x387e4bd0b0 0 
* * 18848 3388 2929 24 19 13 24 19 13 3032 114 95
* * 95 95 0 1 1 0 1 1 0 0 0 95
+5 +1 95 95
+1 * 95 95

fn=(102)
0x4048de 113 105 0 105 1 0 0 1
+1 * 105
+3 * 105 0 105
+4 +1 105
+10 * 105 105
+1 * 105 105

fn=(266)
0x40406a 129 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
+4 * 45 0 45
+4 * 45 0 45
+4 +1 45 45
+4 * 45
+3 * 45
+5 * 45 0 45
cfi=(16)
cfn=(226)
calls=45 0x402d61 -20 
* * 315 135 135
+5 * 45
+3 * 45 0 0 0 0 0 0 0 0 45
+2 * 45 45
+4 * 45 45 0 0 3 0 0 3
+2 * 45 0 45 0 0 3 0 0 3
+2 * 45 45
+1 * 45 45

fn=(28)
0x404992 113 105 0 105 1 0 0 1
+1 * 105
+3 * 105 0 105
+4 +1 105
+10 * 105 105
+1 * 105 105

fn=(176)
0x4044cc 86 90 0 90
+1 * 90
+3 * 90 0 90
+4 * 90 90
+1 * 90 90

fn=(224)
0x403df2 129 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
+4 * 45 0 45
+4 * 45 0 45
+4 +1 45 45
+4 * 45
+3 * 45
+5 * 45 0 45
cfi=(16)
cfn=(226)
calls=45 0x402d61 -20 
* * 315 135 135
+5 * 45
+3 * 45 0 0 0 0 0 0 0 0 45
+2 * 45 45
+4 * 45 45 0 0 4 0 0 4
+2 * 45 0 45 0 0 1 0 0 1
+2 * 45 45
+1 * 45 45

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +2 90 90
+4 * 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=90 0x404484 107 
* * 28332 8634 8098 25 3 4 25 3 4 918 54 176 22
+5 * 90 90
+1 * 90 90

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=10 0x4048f2 107 
* * 2292 741 707 4 0 3 4 0 3 48 3 9
+5 * 10 10
+1 * 10 10

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +2 90 90 0 1 0 0 1
+4 * 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=90 0x404a36 450 
* * 25812 7734 7198 24 3 4 24 3 4 918 54 176 22
+5 * 90 90
+1 * 90 90

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +2 90 90
+4 * 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=90 0x40439c 107 
* * 28332 8634 8098 7 1 4 7 1 4 918 51 176
+5 * 90 90
+1 * 90 90

fn=(116)
0x40439c 107 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +10 90 90
+4 * 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=90 0x4047d7 -26 
* * 27072 8184 7648 7 1 4 7 1 4 918 51 176
+5 +1 90 90
+1 * 90 90

fn=(118)
0x4047d7 91 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +2 90 90
+4 * 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=90 0x4049e2 450 
* * 25812 7734 7198 7 1 4 7 1 4 918 51 176
+5 * 90 90
+1 * 90 90

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=10 0x404772 -25 
* * 2442 791 767 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(230)
calls=10 0x40465c -25 
* * 2442 791 767 5 0 3 5 0 3 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(232)
0x4048f2 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=10 0x404af4 -26 
* * 2152 691 657 4 0 3 4 0 3 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=10 0x404b99 -26 
* * 2152 691 657 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(274)
0x404b99 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=10 0x404cf0 450 
* * 2012 641 607 1 0 0 1 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fn=(50)
0x404484 107 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +10 90 90
+4 * 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(52)
calls=90 0x404829 -26 
* * 27072 8184 7648 25 3 4 25 3 4 918 54 176 22
+5 +1 90 90
+1 * 90 90

fn=(270)
0x404772 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(272)
calls=10 0x4049a6 107 
* * 2292 741 707 2 0 0 2 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fn=(234)
0x404af4 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=10 0x404caa 450 
* * 2012 641 607 2 0 3 2 0 3 48 3 9
+5 * 10 10
+1 * 10 10

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 90 0 90
+1 * 90
+3 * 90 0 90
+1 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=90 0x4043ca -45 
* * 3240 1170 1260 4 0 4 4 0 4
+5 +1 90 90 0 1 0 0 1
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=90 0x404412 +43 
* * 23714 5444 4446 22 14 8 22 14 8 3034 96 180
+5 * 90
jump=90 +28 * 
* * 
+28 * 90
+4 * 90 90
+1 * 90 90
+1 * 90 90

fn=(14)
0x4043ca 90 90 0 90 1 0 0 1
+1 * 90
+3 * 90
+4 * 90 0 90 0 0 1 0 0 1
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(4)
cfn=(16)
calls=90 0x404804 +24 
* * 1620 540 630 2 0 1 2 0 1
+5 * 90 90
+4 * 90 0 90 0 0 2 0 0 2
+7 * 90 90
+4 * 90 0 90 1 0 0 1
+8 * 90 90
+4 * 90 0 90
+8 +1 90 90
+1 * 90 90

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 90 0 90 1 0 0 1
+1 * 90
+3 * 90 0 90
+2 * 90 0 90
+2 * 90 0 90
+1 * 90 0 0 1 0 0 1
+4 * 90 0 90
+4 * 90 0 90
+4 +2 90 90
+4 * 90
+3 * 90 0 90
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=90 0x4039fc 117 
* * 540 270 180 2 0 0 2
+5 * 90
+3 * 90 0 90
cfi=(3)
cfn=(84)
calls=90 0x4039ed -88 
* * 540 270 180
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=90 0x402d74 645 
* * 1170 540 180
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90
+3 * 90
+3 * 90 0 90 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=90 0x403a0a 134 
* * 28345 7228 6166 22 4 13 22 4 13 2943 62 180
+5 +4 90 90
+4 * 90
+3 * 90 0 90
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=90 0x40325e 113 
* * 540 270 180 1 0 0 1
+5 * 90
+3 * 90 90
+4 * 90 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=90 0x403a98 565 
* * 2250 900 720 2 0 0 2
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=90 0x403a68 547 
* * 2250 900 720
+5 * 90
+3 * 90
+3 * 90
+3 * 90
+3 * 90 0 90
cfi=(11)
cfn=(114)
calls=90 0x403ac9 -60 
* * 29682 9084 8638 7 1 4 7 1 4 918 51 176
+5 -3 90 90
+4 * 90 0 90
+4 * 90
jump=90 +28 +4 
* * 
+28 +4 90
+4 * 90 90
+1 * 90 90
+2 * 90 90
+2 * 90 90
+1 * 90 90

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 95 0 95 1 0 0 1
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 * 95 0 95
+4 +2 95 95
+5 * 95 0 0 0 0 0 0 0 0 95 5
+2 +1 95 95
+4 * 95 95
+4 * 95 95
+4 * 95
+3 * 95
+3 * 95 0 95
cfi=(5)
cfn=(190)
calls=95 0x40452a -65 
* * 10811 2747 1665 0 0 0 0 0 0 2176 12 190
+5 +1 95 95
+1 * 95 95

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 95 0 95 1 0 0 1
+1 * 95
+3 * 95
+4 * 95 0 95 1 0 0 1
+4 * 95 0 95
+4 0 95 95
+5 0 95 0 0 0 0 0 0 0 0 95
+2 0 95 95
+4 0 95 95
+4 0 95
+5 0 95
+3 0 95
+3 0 95 0 95
fi=(6) ???
cfi=(5)
cfn=(26)
calls=95 0x404730 99 
* 0 21318 4148 3689 28 20 13 28 20 13 3127 114 190
+5 0 95
fi=(6)
jump=95 +7 0 
* 0 
+7 0 95 95
+1 0 95 95

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 90 0 90 1 0 0 1
+1 * 90
+3 * 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+4 * 90 0 90
+4 * 90
+4 * 90 0 0 1 0 0 1
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=90 0x404468 726 
* * 900 450 360 1 0 0 1
+5 * 90 90
+4 * 90 90
+1 * 90 90

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+3 * 90 0 90
+4 * 90
+4 * 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(10)
cfn=(44)
calls=90 0x404468 726 
* * 900 450 360
+5 * 90 90
+4 * 90 90
+1 * 90 90

fn=(86)
0x403a0a 134 90 0 90
+1 * 90
+3 * 90 0 90
+1 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=90 0x4042e2 -45 
* * 3240 1170 1260 5 0 0 5
+5 +1 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=90 0x40432a +43 
* * 23125 5428 4276 16 4 13 16 4 13 2943 62 180
+5 * 90
jump=90 +28 * 
* * 
+28 * 90
+4 * 90 90
+1 * 90 90
+1 * 90 90

fn=(88)
0x4042e2 90 90 0 90 1 0 0 1
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90 1 0 0 1
cfi=(4)
cfn=(90)
calls=90 0x4047b2 +24 
* * 1620 540 630 3 0 0 3
+5 * 90 90
+4 * 90 0 90
+7 * 90 90
+4 * 90 0 90
+8 * 90 90
+4 * 90 0 90
+8 +1 90 90
+1 * 90 90

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 90 0 90 1 0 0 1
+1 * 90
+3 * 90 0 90
+1 * 90
+4 * 90 0 90
+4 +2 90 90
+4 * 90 90 0 1 0 0 1
+4 * 90
+3 * 90 90
+4 * 90 90
+3 * 90
+3 * 90
+3 * 90
+4 * 90
+3 * 90 90
+4 * 90 90
+3 -1 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=90 0x403ce6 +11 
* * 11720 3132 2076 22 5 0 22 5 0 2150 30 180
+5 +1 90 90
+4 * 90
+3 * 90 0 90
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=90 0x4031b8 -82 
* * 2070 720 720 1 0 0 1
+5 * 90
jump=90 +28 * 
* * 
+28 * 90
+4 * 90 90
+1 * 90 90
+1 * 90 90

fn=(172)
0x4031b8 79 90 0 90 1 0 0 1
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 90
+4 * 90
+3 * 90 0 90
cfi=(4)
cfn=(174)
calls=90 0x403ccc +42 
* * 1260 450 450
+5 * 90 90
+1 * 90 90

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=5 0x40404e 726 
* * 50 25 20 1 0 0 1
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=5 0x4045cc 650 
* * 160 55 55 1 0 0 1
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 5
+4 * 5
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(210)
calls=5 0x4045cc 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 200 0 200 1 0 0 1
+1 * 200
+3 * 200 0 200
+4 +1 200 200
+4 * 200 200 0 0 2 0 0 2
+4 * 200
+3 * 200 200
+4 * 200 200
+3 * 200
+3 * 200
+3 * 200
+4 * 200 200
+1 * 200 200

fn=(106)
0x40325e 113 195 0 195 1 0 0 1
+1 * 195
+3 * 195 0 195
+4 +1 195 195
+4 * 195 195
+1 * 195 195

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204)
calls=5 0x40404e 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5
+3 * 5 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(12)
cfn=(214)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(254)
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 100 0 100 1 0 0 1
+1 * 100
+3 * 100 0 100 0 0 1 0 0 1
+4 +1 100 100
+4 * 100 100
+1 * 100 100

fn=(82)
0x4039fc 117 100 0 100 1 0 0 1
+1 * 100
+3 * 100 0 100 1 0 0 1
+4 +1 100 100
+4 * 100 100
+1 * 100 100

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
+4 * 45 0 45
+4 +2 45 45
+4 * 45 45
+4 * 45 45
+4 * 45 45
+4 * 45
+3 * 45 0 0 0 0 0 0 0 0 45 5
jcnd=5/45 +51 +10 
* * 
+2 +3 40 40
+4 * 40 40
+4 * 40 40
+4 -1 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(3)
cfn=(222)
calls=40 0x403373 215 
* * 1520 520 560 0 3 0 0 3 0 40
+5 +2 40 40
+4 * 40 40
+4 * 40
+4 * 40 40
+4 * 40 0 40
+4 * 40
jump=40 +36 +8 
* * 
+2 +6 5 5 0 1 0 0 1
+4 * 5
+3 * 5 0 5
cfn=(202)
calls=5 0x403688 556 
* * 115 45 35 2 0 0 2
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=5 0x4033a0 318 
* * 6728 2115 1826 24 4 6 24 4 6 348 12 29
+5 +2 45 45
+1 * 45 45

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 90 0 90 1 0 0 1
+1 * 90
+3 * 90 0 90
+2 * 90 0 90
+2 * 90 0 90
+1 * 90
+4 * 90 0 90 1 0 0 1
+4 * 90 0 90
+4 +2 90 90
+4 * 90
+3 * 90 0 90
cfn=(6)
calls=90 0x403b08 117 
* * 540 270 180 1 0 1 1 0 1
+5 * 90
+3 * 90 0 90
cfi=(3)
cfn=(8)
calls=90 0x403afa -88 
* * 540 270 180 1 0 0 1
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(10)
calls=90 0x402f54 645 
* * 1170 540 180 1 1 0 1 1
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90
+3 * 90
+3 * 90 0 90
cfn=(12)
calls=90 0x403b16 134 
* * 28934 7244 6336 27 14 12 27 14 12 3034 96 180
+5 +4 90 90 0 1 0 0 1
+4 * 90
+3 * 90 0 90
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=90 0x40333c 113 
* * 540 270 180 2 0 0 2
+5 * 90
+3 * 90 90
+4 * 90 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(42)
calls=90 0x403ba4 565 
* * 2250 900 720 3 0 0 3
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(46)
calls=90 0x403b74 547 
* * 2250 900 720
+5 * 90
+3 * 90
+3 * 90
+3 * 90
+3 * 90 0 90 1 0 0 1
cfi=(11)
cfn=(48)
calls=90 0x403bd5 -60 
* * 29682 9084 8638 26 3 4 26 3 4 918 54 176 22
+5 -3 90 90
+4 * 90 0 90
+4 * 90
jump=90 +28 +4 
* * 
+28 +4 90
+4 * 90 90
+1 * 90 90
+2 * 90 90
+2 * 90 90
+1 * 90 90

fn=(108)
0x403a98 565 90 0 90 1 0 0 1
+1 * 90
+3 * 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+4 * 90 0 90
+4 * 90
+4 * 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=90 0x404380 726 
* * 900 450 360 1 0 0 1
+5 * 90 90
+4 * 90 90
+1 * 90 90

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 90 0 90
+1 * 90
+3 * 90 0 90
+1 * 90
+4 * 90 0 90 1 0 0 1
+4 +2 90 90
+4 * 90
+3 * 90 0 90
cfn=(40)
calls=90 0x40333c 113 
* * 540 270 180
+5 * 90
+3 * 90 90
+4 * 90 90
+4 * 90 90
+4 * 90 90
+3 -1 90
+3 * 90
+3 * 90 0 90
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=90 0x40334a 148 
* * 2790 900 1080 2 0 0 2
+5 +1 90 90
+4 * 90
+3 * 90 0 90
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=90 0x4032ca 159 
* * 16298 4862 3202 3 0 0 3 0 0 2162 10 180
+5 * 90
jump=90 +28 * 
* * 
+28 * 90 0 0 1 0 0 1
+4 * 90 90
+1 * 90 90
+1 * 90 90

fn=(210)
0x4045cc 650 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(82)
calls=10 0x4039fc 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(212)
calls=10 0x4048c3 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 95 0 95 1 0 0 1
+1 * 95 0 0 1 0 0 1
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 0 95 95
+5 0 95 0 0 0 0 0 0 0 0 95
+2 0 95 95
+4 0 95 95
+4 0 95
+5 0 95
+3 0 95
+3 0 95 0 95
fi=(6)
cfi=(5)
cfn=(100)
calls=95 0x40461a 99 
* 0 20581 4113 3499 14 7 15 14 7 15 3012 70 190
+5 0 95
fi=(6)
jump=95 +7 0 
* 0 
+7 0 95 95
+1 0 95 95

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 3330 0 3330
+1 * 3330
+3 * 3330 0 3330
+4 * 3330 0 3330
+4 +1 3330 3330
+4 * 3330 3330
+3 * 3330 3330
+4 * 3330
+4 * 3330
+3 * 3330 3330
+1 * 3330 3330

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 3330 0 3330
+1 * 3330
+3 * 3330 0 3330 1 0 0 1
+4 * 3330 0 3330
+4 +1 3330 3330
+4 * 3330 3330
+3 * 3330 3330
+4 * 3330
+4 * 3330
+3 * 3330 3330
+1 * 3330 3330

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 90
+4 * 90
+3 * 90 0 90
cfi=(4)
cfn=(194)
calls=90 0x403d7e +42 
* * 1260 450 450 1 0 0 1
+5 * 90 90
+1 * 90 90

fn=(254)
0x40470e 650 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(6)
calls=10 0x403b08 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(256)
calls=10 0x404978 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(186)
0x4032ca 159 90 0 90 1 0 0 1
+1 * 90
+3 * 90 0 90
+1 * 90
+4 * 90 0 90
+4 +2 90 90
+4 * 90 90
+4 * 90
+3 * 90 90
+4 * 90 90
+3 * 90
+3 * 90
+3 * 90
+4 * 90
+3 * 90 90
+4 * 90 90
+3 -1 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(188)
calls=90 0x403d98 +11 
* * 11708 3152 2032 1 0 0 1 0 0 2162 10 180
+5 +1 90 90
+4 * 90
+3 * 90 0 90
cfn=(192)
calls=90 0x403296 -82 
* * 2070 720 720 1 0 0 1
+5 * 90
jump=90 +28 * 
* * 
+28 * 90
+4 * 90 90
+1 * 90 90
+1 * 90 90

fn=(2)
0x402d74 645 380 0 380 1 0 0 1
+1 * 380
+3 * 380 0 380 0 0 1 0 0 1
+4 +1 380 380
+4 * 380 380 0 1 1 0 1 1
+4 * 380
+3 * 380 380
+4 * 380 380
+3 * 380
+3 * 380
+3 * 380
+4 * 380 380
+1 * 380 380

fn=(20)
0x404412 179 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 +2 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(22)
calls=90 0x404236 -14 
* * 21464 4364 3816 21 14 8 21 14 8 3034 96 180
+5 * 90 90
+4 * 90 0 90
+3 +1 90 90
+4 * 90 90 0 1 0 0 1
+3 * 90 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+3 * 90 90
+4 * 90
+4 * 90
+3 * 90 90
+4 * 90 0 90
+4 +1 90 90
+1 * 90 90

fn=(94)
0x40432a 179 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 +2 90 90
+4 * 90 90 0 1 0 0 1
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(96)
calls=90 0x403fbe -14 
* * 20875 4348 3646 15 4 13 15 4 13 2943 62 180
+5 * 90 90
+4 * 90 0 90
+3 +1 90 90
+4 * 90 90
+3 * 90 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+3 * 90 90
+4 * 90
+4 * 90
+3 * 90 90
+4 * 90 0 90
+4 +1 90 90
+1 * 90 90

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 45 0 45
+1 * 45
+3 * 45 0 0 1 0 0 1
+4 * 45 0 45
+4 * 45 0 45
+4 +2 45 45
+4 * 45 45
+4 * 45 45
+4 * 45 45
+4 * 45
+3 * 45 0 0 0 0 0 0 0 0 45
jcnd=5/45 +51 +10 
* * 
+2 +3 40 40
+4 * 40 40
+4 * 40 40
+4 -1 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(3)
cfn=(264)
calls=40 0x4036b1 215 
* * 1520 520 560 0 3 1 0 3 1 40
+5 +2 40 40
+4 * 40 40
+4 * 40
+4 * 40 40
+4 * 40 0 40
+4 * 40
jump=40 +36 +8 
* * 
+2 +6 5 5
+4 * 5
+3 * 5 0 5
cfn=(246)
calls=5 0x4039c4 556 
* * 115 45 35
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=5 0x4036de 318 
* * 6889 2140 1848 27 6 7 27 6 7 375 27 29
+5 +2 45 45
+1 * 45 45

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(40)
0x40333c 113 195 0 195 1 0 0 1
+1 * 195
+3 * 195 0 195 1 0 0 1
+4 +1 195 195
+4 * 195 195
+1 * 195 195

fn=(112)
0x403a68 547 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 +1 90 90
+4 * 90 90
+3 * 90 0 90
+4 * 90
+4 * 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfi=(10)
cfn=(110)
calls=90 0x404380 726 
* * 900 450 360
+5 * 90 90
+4 * 90 90
+1 * 90 90

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 90 0 90
+1 * 90
+3 * 90 0 90
+1 * 90
+4 * 90 0 90 1 0 0 1
+4 +2 90 90
+4 * 90
+3 * 90 0 90
cfn=(106)
calls=90 0x40325e 113 
* * 540 270 180
+5 * 90
+3 * 90 90
+4 * 90 90
+4 * 90 90
+4 * 90 90
+3 -1 90
+3 * 90
+3 * 90 0 90
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=90 0x40326c 148 
* * 2790 900 1080 4 0 0 4
+5 +1 90 90
+4 * 90
+3 * 90 0 90
cfn=(156)
calls=90 0x4031ec 159 
* * 16310 4842 3246 25 5 0 25 5 0 2150 30 180
+5 * 90
jump=90 +28 * 
* * 
+28 * 90 0 0 1 0 0 1
+4 * 90 90
+1 * 90 90
+1 * 90 90

fn=(158)
0x403ce6 171 95 0 95 1 0 0 1
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 * 95 0 95
+4 +2 95 95
+5 * 95 0 0 0 0 0 0 0 0 95
+2 +1 95 95
+4 * 95 95
+4 * 95 95
+4 * 95
+3 * 95
+3 * 95 0 95
cfi=(5)
cfn=(160)
calls=95 0x4044d6 -65 
* * 10810 2721 1707 22 5 0 22 5 0 2161 31 190
+5 +1 95 95
+1 * 95 95

fl=(12)
fn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404c52 424 90 0 90
+1 * 90
+3 * 90 0 90
+2 * 90 0 90
+1 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +4 90 90
+4 * 90
+3 * 90 0 90
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=90 0x40492d 277 
* * 1350 540 450 2 0 0 2
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=90 0x404d9d 277 
* * 2250 810 720 2 0 1 2 0 1
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(66)
calls=90 0x404d9d 277 
* * 2250 810 720
+5 * 90
+3 * 90
+3 * 90
+3 * 90 0 90
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=90 0x404db7 -49 
* * 12762 3324 2788 15 3 3 15 3 3 918 54 176 22
+5 +1 90
+4 * 90 90
+1 * 90 90
+2 * 90 90
+1 * 90 90

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=10 0x404f37 -22 
* * 612 161 117 0 0 0 0 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(62)
0x40492d 277 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120
+3 * 120 0 120 1 0 0 1
cfi=(13)
cfn=(64)
calls=120 -33 -66 
* * 720 360 240
+5 * 120 120
+1 * 120 120

fn=(66)
0x404d9d 277 180 0 180
+1 * 180
+3 * 180
+4 * 180 0 180
+4 +1 180 180
+4 * 180
+3 * 180 0 180
cfi=(13)
cfn=(68)
calls=180 0x404f1a -58 
* * 2880 1080 900 2 0 1 2 0 1
+5 * 180 180
+1 * 180 180

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 10 0 10
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=10 0x404878 277 
* * 150 60 50 0 0 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=10 0x404f9c -49 
* * 762 211 177 0 0 2 0 0 2 48 3 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(214)
0x4045ee 216 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 +5 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +8 +2 
* * 
+8 +2 10 10
+4 +1 10 10
+1 * 10 10

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(130)
calls=20 0x40486a -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(282)
calls=10 0x404fcd -49 
* * 762 211 177 0 0 0 0 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(120)
0x4049e2 450 90 0 90
+1 * 90
+3 * 90 0 90
+1 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +10 90 90
+4 * 90
+3 * 90 0 90
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=90 0x404bc6 288 
* * 1350 540 450 3 0 0 3
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(122)
calls=90 0x404bc6 288 
* * 1350 540 450
+5 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=90 0x404be0 -36 
* * 21132 6114 5578 4 1 4 4 1 4 918 51 176
+5 +1 90
+4 * 90 90
+1 * 90 90
+1 * 90 90

fn=(128)
0x404878 277 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120 1 0 0 1
+4 +1 120 120
+4 * 120
+3 * 120 0 120
cfi=(13)
cfn=(130)
calls=120 -33 -66 
* * 720 360 240 0 0 1 0 0 1
+5 * 120 120
+1 * 120 120

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 180 0 180
+1 * 180
+3 * 180
+4 * 180 0 180
+4 +1 180 180
+4 * 180
+3 * 180 0 180
cfi=(13)
cfn=(134)
calls=180 0x404e98 -58 
* * 2880 1080 900 2 0 0 2
+5 * 180 180
+1 * 180 180

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +8 90 0 90
+4 +3 90 90
+4 * 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=90 0x404eb5 -22 
* * 11412 2874 2248 1 1 4 1 1 4 918 51 176
+5 +1 90 90
+1 * 90 90

fn=(242)
0x404f9c 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(140)
calls=10 0x404eb5 -22 
* * 612 161 117 0 0 2 0 0 2 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(276)
0x404cf0 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10
+3 * 10 0 10
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(278)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(280)
calls=10 0x404e40 -36 
* * 1492 461 427 1 0 0 1 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(278)
0x40469c 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(64)
calls=20 0x40491f -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(122)
0x404bc6 288 180 0 180 1 0 0 1
+1 * 180
+3 * 180
+4 * 180 0 180
+4 +1 180 180
+4 * 180
+3 * 180 0 180
cfi=(13)
cfn=(124)
calls=180 0x404d36 -77 
* * 1080 540 360 2 0 0 2
+5 * 180 180
+1 * 180 180

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 180 0 180 1 0 0 1
+1 * 180
+3 * 180
+4 * 180 0 180 1 0 0 1
+4 +1 180 180
+4 * 180
+3 * 180 0 180
cfi=(13)
cfn=(58)
calls=180 0x404d8f -77 
* * 1080 540 360 1 0 0 1
+5 * 180 180
+1 * 180 180

fn=(74)
0x404f37 368 100 0 100
+1 * 100
+3 * 100
+4 * 100 0 100 1 0 0 1
+4 * 100 0 100
+4 * 100 0 100
+4 +2 100 100
+4 * 100 100
+4 * 100
+3 * 100
+3 * 100
+4 * 100 0 100
+4 +1 100 100
+5 * 100 0 0 0 0 0 0 0 0 100
jcnd=5/100 +33 +2 
* * 
+2 +1 95 95
+4 * 95
+8 * 95 95
+4 * 95 95
+4 * 95
+3 * 95 0 0 1 0 0 1
+3 * 95 0 95 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=95 0x3877c83840 0 
* * 9264 1955 1770 11 2 2 11 2 2 866 56 90 22
* * 95 95 0 1 1 0 1 1 0 0 0 95
+5 +1 100 100
+4 * 100
+8 * 100 100
+4 * 100
+3 +1 100 100
+1 * 100 100

fn=(140)
0x404eb5 368 100 0 100
+1 * 100
+3 * 100
+4 * 100 0 100 1 0 0 1
+4 * 100 0 100
+4 * 100 0 100 0 0 1 0 0 1
+4 +2 100 100
+4 * 100 100
+4 * 100
+3 * 100
+3 * 100
+4 * 100 0 100
+4 +1 100 100
+5 * 100 0 0 0 0 0 0 0 0 100
jcnd=5/100 +33 +2 
* * 
+2 +1 95 95
+4 * 95
+8 * 95 95
+4 * 95 95
+4 * 95
+3 * 95
+3 * 95 0 95
cob=(2)
cfi=(9)
cfn=(78)
calls=95 0x3877c83840 0 
* * 9264 1955 1770 0 1 5 0 1 5 866 54 90
* * 95 95 0 0 0 0 0 0 0 0 0 95
+5 +1 100 100
+4 * 100
+8 * 100 100
+4 * 100
+3 +1 100 100
+1 * 100 100

fn=(72)
0x404db7 379 90 0 90
+1 * 90
+3 * 90
+4 * 90 0 90 1 0 0 1
+4 * 90 0 90
+4 * 90 0 90
+4 +8 90 0 90
+4 +3 90 90
+4 * 90 90
+4 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(74)
calls=90 0x404f37 -22 
* * 11412 2874 2248 14 3 3 14 3 3 918 54 176 22
+5 +1 90 90
+1 * 90 90

fn=(126)
0x404be0 424 90 0 90
+1 * 90
+3 * 90 0 90
+2 * 90 0 90
+1 * 90
+4 * 90 0 90
+4 * 90 0 90
+4 * 90 0 90
+4 +4 90 90
+4 * 90
+3 * 90 0 90
cfn=(128)
calls=90 0x404878 277 
* * 1350 540 450 1 0 0 1
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(132)
calls=90 0x404d44 277 
* * 2250 810 720 2 0 0 2
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(132)
calls=90 0x404d44 277 
* * 2250 810 720
+5 * 90
+3 * 90
+3 * 90
+3 * 90 0 90
cfn=(138)
calls=90 0x404d5e -49 
* * 12762 3324 2788 1 1 4 1 1 4 918 51 176
+5 +1 90
+4 * 90 90
+1 * 90 90
+2 * 90 90
+1 * 90 90

fn=(236)
0x404caa 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(240)
calls=10 0x404de8 -36 
* * 1492 461 427 1 0 3 1 0 3 48 3 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(54)
0x404a36 450 90 0 90
+1 * 90
+3 * 90 0 90
+1 * 90
+4 * 90 0 90 1 0 0 1
+4 * 90 0 90
+4 * 90 0 90
+4 +10 90 90
+4 * 90
+3 * 90 0 90
cfn=(56)
calls=90 0x404c38 288 
* * 1350 540 450 3 0 0 3
+5 * 90
+3 * 90 90
+4 * 90
+3 * 90 0 90
cfn=(56)
calls=90 0x404c38 288 
* * 1350 540 450
+5 * 90 90
+4 * 90
+3 * 90
+3 * 90 0 90
cfn=(60)
calls=90 0x404c52 -36 
* * 21132 6114 5578 20 3 4 20 3 4 918 54 176 22
+5 +1 90
+4 * 90 90
+1 * 90 90
+1 * 90 90

fl=(10)
fn=(136)
0x404ffe 790 180 0 180 1 0 0 1
+1 * 180
+3 * 180 0 180
+4 +1 180 180
+4 * 180 180
+1 * 180 180

fn=(44)
0x404468 726 180 0 180
+1 * 180
+3 * 180 0 180
+4 * 180 0 180
+4 * 180 180
+4 * 180 180
+3 * 180 180
+4 * 180 0 180 1 0 0 1
+3 * 180 180
+1 * 180 180

fn=(248)
0x4042c6 726 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(204)
0x40404e 726 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(70)
0x40500c 790 180 0 180 1 0 0 1
+1 * 180
+3 * 180 0 180
+4 +1 180 180
+4 * 180 180
+1 * 180 180

fn=(110)
0x404380 726 180 0 180 1 0 0 1
+1 * 180
+3 * 180 0 180
+4 * 180 0 180
+4 * 180 180
+4 * 180 180
+3 * 180 180
+4 * 180 0 180
+3 * 180 180
+1 * 180 180

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 95 0 95 1 0 0 1
+1 * 95
+3 * 95 0 95
+4 * 95 0 95 1 0 0 1
+4 * 95 95
+1 * 95 95

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 95 0 95 1 0 0 1
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 +4 95 95
+4 * 95 95
+4 * 95
+3 * 95
+3 * 95 0 95
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=95 0x40454c -14 
* * 570 190 285 1 0 0 1
+5 +2 95 95
+1 * 95 95

fn=(150)
0x40326c 148 95 0 95
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 * 95 0 95
+4 +3 95 95 0 1 0 0 1
+4 * 95 95
+4 * 95
+3 * 95
+3 * 95 0 95
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=95 0x403d1a -29 
* * 1710 570 665 3 0 0 3
+5 +1 95 95
+1 * 95 95

fn=(180)
0x40334a 148 95 0 95
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 * 95 0 95
+4 +3 95 95
+4 * 95 95
+4 * 95
+3 * 95
+3 * 95 0 95
cfn=(182)
calls=95 0x403dcc -29 
* * 1710 570 665 2 0 0 2
+5 +1 95 95
+1 * 95 95

fn=(152)
0x403d1a 122 95 0 95 1 0 0 1
+1 * 95
+3 * 95
+4 * 95 0 95
+4 * 95 0 95
+4 +4 95 95
+4 * 95 95
+4 * 95
+3 * 95
+3 * 95 0 95
cfn=(154)
calls=95 0x4044f8 -14 
* * 570 190 285 2 0 0 2
+5 +2 95 95
+1 * 95 95

fn=(184)
0x40454c 112 95 0 95 1 0 0 1
+1 * 95
+3 * 95 0 95
+4 * 95 0 95
+4 * 95 95
+1 * 95 95

fl=(15)
fn=(250)
0x4036de 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x403799 +21 
* * 
0x403799 +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(252)
calls=5 0x404104 1336 
* * 905 335 235 4 0 0 4 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(258)
calls=5 0x4041ce 538 
* * 110 45 35
+5 * 5 0 5 1 0 0 1
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(260)
calls=5 0x4041f3 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(22)
calls=5 0x404236 167 
* * 1374 259 253 9 6 5 9 6 5 188 18 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5
+4 * 5 0 0 1 0 0 1
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(264)
calls=5 0x4036b1 215 
* * 190 65 70 0 0 2 0 0 2 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -88 
* * 1502 471 447 3 0 0 3 0 0 43 2 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 5
+3 -1 5 0 0 1 0 0 1
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(180)
calls=5 0x40334a 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(188)
calls=5 0x403d98 171 
* * 623 165 108 0 0 0 0 0 0 109 7 10
+5 +3 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x4039ba * 
* * 
0x4039ba * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fn=(206)
0x4033a0 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x40345e +21 
* * 
0x40345e +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(208)
calls=5 0x403e8c 1336 
* * 905 335 235 5 0 0 5 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(216)
calls=5 0x403f56 538 
* * 110 45 35
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(218)
calls=5 0x403f7b 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(96)
calls=5 0x403fbe 167 
* * 1226 240 233 1 3 2 1 3 2 164 8 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5 0 1 0 0 1
+4 * 5
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(222)
calls=5 0x403373 215 
* * 190 65 70 0 1 1 0 1 1 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -88 
* * 1502 471 447 6 0 3 6 0 3 43 3 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5
+4 * 5
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+3 -1 5
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(150)
calls=5 0x40326c 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(158)
calls=5 0x403ce6 171 
* * 610 159 106 1 0 0 1 0 0 106 1 10
+5 +3 5 5
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x40367f * 
* * 
0x40367f * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 45 0 45 1 0 0 1
+1 * 45
+3 * 45
+4 * 45 0 45
+4 * 45 0 45
+4 +1 45 45
+4 * 45
+3 * 45 0 45
cfi=(2)
cfn=(2)
calls=45 0x402d74 645 
* * 585 270 90
+5 * 45
+3 * 45 0 45
+3 +1 45 45
+6 * 45 0 45
+3 * 45 45
+6 * 45 0 45
+3 +1 45 45
+6 * 45 0 45 1 0 0 1
+3 * 45 45
+6 * 45 0 45
+3 +2 45 0 45
+7 * 45
jump=45 +86 * 
* * 
+2 +1 1080 1080
+3 * 1080
+3 * 1080 1080
+4 * 1080
+3 * 1080
+3 * 1080 0 1080
cfi=(2)
cfn=(144)
calls=1080 0x402d9a 770 
* * 11880 5400 3240
+5 * 1080 1080
+4 * 1080 1080
+5 * 1080
+4 * 1080 0 1080
+5 +1 1080 1080
+3 * 1080
+3 * 1080 1080
+4 * 1080
+3 * 1080
+3 * 1080 0 1080
cfi=(2)
cfn=(146)
calls=1080 0x402dba 770 
* * 11880 5400 3240 1 0 0 1
+5 * 1080 1080
+2 * 1080
+4 * 1080 1080
+5 * 1080
+4 * 1080 0 1080
+5 -2 1080 0 1080
+4 * 1080 1080
+3 * 1080
+3 * 1080 1080
+3 * 1080 0 0 0 0 0 0 0 0 1080 46
jcnd=1035/1080 -93 +1 
* * 
-9 * 45 45 0 1 0 0 1
+3 * 45
+3 * 45 45
+3 * 45 0 0 0 0 0 0 0 0 45
jcnd=45/45 -93 +1 
* * 
+2 +4 45 45
+3 * 45
+3 * 45
+4 * 45 45 0 1 0 0 1
+5 * 45
+4 * 45
+3 * 45 0 45
+5 +1 45 45
+3 * 45
+3 * 45
+4 * 45 45
+5 * 45
+4 * 45
+3 * 45 0 45
+5 +1 45 0 45
+7 * 45
jump=45 0x4016ee * 
* * 
+2 +1 1080 1080
+3 * 1080
+3 * 1080 1080
+4 * 1080
+3 * 1080 0 0 1 0 0 1
+3 * 1080 0 1080
cfi=(2)
cfn=(146)
calls=1080 0x402dba 770 
* * 11880 5400 3240
+5 * 1080 1080
+2 * 1080
+4 * 1080 1080
+5 * 1080 0 1080
+5 +1 1080 1080
+3 * 1080
+3 * 1080 1080
+4 * 1080
+3 * 1080
+3 * 1080 0 1080
cfi=(2)
cfn=(144)
calls=1080 0x402d9a 770 
* * 11880 5400 3240
+5 * 1080 1080
+4 * 1080 1080
+5 * 1080 0 1080
+5 +1 1080 1080
+5 * 1080 1080
+5 * 1080 1080
+5 * 1080
+4 * 1080 0 1080
+5 +1 1080 1080
+5 * 1080 1080
+5 * 1080 1080
+5 * 1080
+4 * 1080 0 1080
+5 -4 1080 0 1080
+4 * 1080 1080
+3 * 1080
+3 * 1080 1080
+3 * 1080 0 0 0 0 0 0 0 0 1080 46
jcnd=1035/1080 0x401672 +1 
* * 
-9 * 45 45 0 1 0 0 1
+3 * 45
+3 * 45 45
+3 * 45 0 0 0 0 0 0 0 0 45
jcnd=45/45 0x401672 +1 
* * 
+6 +6 45 45 0 1 0 0 1
+5 * 45 45
+5 * 45 0 45
+5 +2 45 45
+3 +1 45 0 45
+3 * 45 45
+5 * 45 45
+1 * 45 45

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 45
+7 * 45
+7 * 45
+3 * 45
+3 * 45 0 45
cfi=(2)
cfn=(4)
calls=45 0x4030b2 310 
* * 35346 10378 9290 63 17 16 63 17 16 1984 105 178 22
+5 * 45
+7 * 45
+7 * 45
+3 * 45
+3 * 45 0 45
cfi=(2)
cfn=(80)
calls=45 0x402ff4 310 
* * 35216 10383 9225 37 5 15 37 5 15 1968 89 178
+5 * 45 0 0 1 0 0 1
+7 * 45
+7 * 45
+3 * 45
+3 * 45 0 45
cfn=(142)
calls=45 0x401585 -52 
* * 115245 50805 26685 8 0 0 8 0 0 2250 92
+5 * 45 0 45
+8 * 45 45
+6 * 45 0 45
+6 * 45
+7 * 45
+3 * 45 0 45
cfi=(2)
cfn=(148)
calls=45 0x402df4 414 
* * 10900 3411 2523 31 5 0 31 5 0 1075 16 90
+5 * 45
+7 * 45
+3 * 45 0 45 1 0 0 1
cfi=(2)
cfn=(178)
calls=45 0x402e74 414 
* * 10894 3421 2501 7 0 0 7 0 0 1081 6 90
+5 +2 45
+7 * 45
+7 * 45
+3 * 45
+3 * 45 0 45
cfi=(2)
cfn=(4)
calls=45 0x4030b2 310 
* * 35060 10360 9194 2 1 1 2 1 1 1968 45 178
+5 * 45
+7 * 45
+7 * 45
+3 * 45
+3 * 45 0 45
cfi=(2)
cfn=(80)
calls=45 0x402ff4 310 
* * 34601 10339 9089 0 0 2 0 0 2 1893 24 178
+5 * 45 45
+6 * 45 0 0 1 0 0 1
+7 * 45
+7 * 45 0 45
+6 * 45 45
+8 * 45
+3 * 45
+3 * 45 0 45
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=45 0x401719 -33 
* * 54495 22590 12555 4 0 0 4 0 0 1125 46
+5 * 45 0 45
+8 * 45 45
+6 * 45 0 45
+6 * 45
+7 * 45 0 0 1 0 0 1
+3 * 45 0 45
cfi=(2)
cfn=(148)
calls=45 0x402df4 414 
* * 10900 3411 2523 0 0 0 0 0 0 1075 14 90
+5 * 45
+7 * 45
+3 * 45 0 45
cfi=(2)
cfn=(178)
calls=45 0x402e74 414 
* * 10894 3421 2501 0 0 0 0 0 0 1081 4 90
+5 +2 45 45
+7 * 45
+3 * 45 0 45
cfi=(2)
cfn=(2)
calls=45 0x402d74 645 
* * 585 270 90
+5 * 45 45
+6 * 45
+3 * 45
+3 * 45
+3 * 45 45
+7 * 45
+3 * 45 0 0 1 0 0 1
+3 * 45 0 45
cfi=(2)
cfn=(144)
calls=45 0x402d9a 770 
* * 495 225 135
+5 * 45
+3 * 45
+7 * 45
+3 * 45
+3 * 45 0 45
cfi=(2)
cfn=(200)
calls=45 0x402eda 901 
* * 9513 3245 2646 27 7 6 27 7 6 433 17 29
+5 +1 45 45
+7 * 45
+3 * 45 0 45
cfi=(2)
cfn=(10)
calls=45 0x402f54 645 
* * 585 270 90 0 1 0 0 1
+5 * 45 45
+6 * 45
+3 * 45
+3 * 45
+3 * 45 45
+7 * 45 0 0 1 0 0 1
+3 * 45
+3 * 45 0 45
cfi=(2)
cfn=(146)
calls=45 0x402dba 770 
* * 495 225 135
+5 * 45
+3 * 45
+7 * 45
+3 * 45
+3 * 45 0 45
cfi=(2)
cfn=(244)
calls=45 0x402f7a 901 
* * 9674 3270 2668 28 9 8 28 9 8 460 27 29
+5 +1 45 45
+7 * 45
+3 * 45 0 45
cfi=(2)
cfn=(10)
calls=45 0x402f54 645 
* * 585 270 90
+5 * 45 45
+6 * 45
+3 * 45
+3 * 45
+3 * 45 45 0 1 0 0 1
+7 * 45
+3 * 45
+3 * 45 0 45
cfi=(2)
cfn=(146)
calls=45 0x402dba 770 
* * 495 225 135
+5 * 45 45
+2 * 45
+4 * 45 45
+8 * 45 45
+8 * 45 0 45
+8 +1 45 45
+7 * 45
+3 * 45 0 45
cfi=(2)
cfn=(2)
calls=45 0x402d74 645 
* * 585 270 90
+5 * 45 45 0 1 0 0 1
+6 * 45
+3 * 45
+3 * 45
+3 * 45 45
+7 * 45
+3 * 45
+3 * 45 0 45
cfi=(2)
cfn=(144)
calls=45 0x402d9a 770 
* * 495 225 135
+5 * 45 45
+4 * 45 45
+8 * 45
+4 * 45 45
+8 * 45
+3 * 45 0 45
+8 +2 45 0 45
+7 -12 45 45
+8 * 45 45
+7 * 45 0 0 0 0 0 0 0 0 45 1
jcnd=1/45 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 45
+7 * 45
+3 * 45 0 45
cfi=(2)
cfn=(2)
calls=45 0x402d74 645 
* * 585 270 90 2 0 1 2 0 1
+5 * 45
+3 * 45 45
+7 * 45
+3 * 45 0 45
cfi=(2)
cfn=(2)
calls=45 0x402d74 645 
* * 585 270 90 0 1 0 0 1
+5 * 45
+3 * 45 0 0 0 0 0 0 0 0 45 1
+2 * 45 0 0 1 0 0 1
+5 * 45
jump=45 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 45
+2 * 45 0 0 0 0 0 0 0 0 45
jcnd=45/45 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
+4 * 45 0 45
+4 * 45 0 45
+5 +1 45 45
+4 * 45
+3 * 45 0 45
cfi=(2)
cfn=(2)
calls=45 0x402d74 645 
* * 585 270 90
+5 * 45
+3 * 45 0 45
+3 +1 45 45 0 1 0 0 1
+6 * 45 0 45
+3 * 45 45
+6 * 45 0 45
+3 +2 45 0 45
+7 * 45
jump=45 +86 * 
* * 
+2 +1 1080 1080
+3 * 1080
+3 * 1080 1080
+4 * 1080
+3 * 1080
+3 * 1080 0 1080
cfi=(2)
cfn=(144)
calls=1080 0x402d9a 770 
* * 11880 5400 3240
+5 * 1080 1080
+4 * 1080 1080
+5 * 1080
+4 * 1080 0 1080
+5 +1 1080 1080
+3 * 1080
+3 * 1080 1080
+4 * 1080
+3 * 1080
+3 * 1080 0 1080
cfi=(2)
cfn=(146)
calls=1080 0x402dba 770 
* * 11880 5400 3240
+5 * 1080 1080
+2 * 1080
+4 * 1080 1080
+5 * 1080
+4 * 1080 0 1080
+5 -2 1080 0 1080
+4 * 1080 1080
+3 * 1080
+3 * 1080 1080
+3 * 1080 0 0 0 0 0 0 0 0 1080 46
jcnd=1035/1080 -93 +1 
* * 
-9 * 45 45 0 1 0 0 1
+3 * 45
+3 * 45 45
+3 * 45 0 0 0 0 0 0 0 0 45
jcnd=45/45 -93 +1 
* * 
+2 +4 45 45
+3 * 45
+3 * 45 0 0 1 0 0 1
+4 * 45 45
+5 * 45
+4 * 45
+3 * 45 0 45
+5 +1 45 45
+3 * 45
+3 * 45
+4 * 45 45
+5 * 45
+4 * 45
+3 * 45 0 45
+5 +1 45 45
+5 * 45 45
+5 * 45 45
+5 * 45 0 0 1 0 0 1
+4 * 45
+3 * 45 0 45
+5 +2 45 45
+3 +1 45 0 45
+3 * 45 45
+5 * 45 45
+1 * 45 45

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 190 0 190 1 0 0 1
+2 0 190 0 190
+2 0 190 0 190
+2 0 190
+3 0 190 0 190
+2 0 190 0 190
+1 0 190 0 190
+1 0 190
+3 0 190
+4 0 190 190
+4 0 190 0 190
+4 0 190
+3 0 190
+4 0 190
+3 0 190
+3 0 190
+3 0 190 0 0 1 0 0 1 0 0 190
+6 0 190
+4 0 190 0 0 0 0 0 0 0 0 190
+6 0 190
+4 0 190 0 0 0 0 0 0 0 0 190
+6 0 190 190
+7 0 190 0 0 0 0 0 0 0 0 190 2
jcnd=66/190 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 66
+2 0 66 0 0 0 0 0 0 0 0 66
+6 0 66 66 0 1 0 0 1
+4 0 66
+3 0 66
+2 0 66 0 0 0 0 0 0 0 0 66
jcnd=66/66 0x3877c78a40 0 
* 0 
+6 0 66 66
+4 0 66
+3 0 66 0 0 0 0 0 0 0 0 66
+6 0 66 66
+5 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
jcnd=66/66 0x3877c7907c 0 
* 0 
+6 0 66 66
+5 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+4 0 66 0 0 1 0 0 1 0 0 66
+6 0 66
+4 0 66 66
+7 0 66 0 0 0 0 0 0 0 0 66
+6 0 66 66
+6 0 66
+2 0 66 0 0 0 0 0 0 0 0 66
+6 0 66 66
+4 0 66 0 0 0 0 0 0 0 0 66 1
jcnd=65/66 +70 0 
* 0 
+2 0 1 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +15 0 
* 0 
+15 0 66 66 0 1 0 0 1
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66 66
+6 0 66 0 0 1 0 0 1 0 0 66 9
jcnd=6/66 0x3877c78a78 0 
* 0 
+6 0 60 60
+5 0 60 60
+5 0 60 60
+4 0 60 0 0 0 0 0 0 0 0 60
+6 0 60 60
+4 0 60 0 0 0 0 0 0 0 0 60
+6 0 60 60
+9 0 60 0 60
+4 0 60 0 60
+4 0 60 0 0 0 0 0 0 0 0 60 2
jcnd=52/60 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8 2
+6 0 60
+3 0 60
+4 0 60 60
+4 0 60 60
+4 0 60 0 0 0 0 0 0 0 0 60
-12 0 6
+4 0 6 6
+4 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66 26
jcnd=34/66 +18 0 
* 0 
+2 0 32 0 32
+8 0 32 0 32
+8 0 32 0 32
+4 0 32
+3 0 32 0 32 1 0 0 1
+4 0 32
+4 0 32 0 32
+4 0 32 0 32
+4 0 32
+7 0 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 0x3877c78b20 0 
* 0 
-30 0 34 0 34
+4 0 34
+3 0 34 0 34
+4 0 34
+4 0 34 0 34
+4 0 34 0 34
+4 0 34
+7 0 34 0 0 0 0 0 0 0 0 34
jcnd=34/34 0x3877c78b20 0 
* 0 
0x3877c78a40 0 66 0 0 1 0 0 1
+5 0 66 66
+4 0 66 66
+7 0 66 0 0 0 0 0 0 0 0 66
jcnd=66/66 +16 0 
* 0 
+16 0 66 0 66
+5 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
jump=66 0x3877c7878f 0 
* 0 
+10 0 6 0 6
+6 0 6 0 0 1 0 0 1
jump=6 0x3877c78885 0 
* 0 
0x3877c78b20 0 66 66 0 1 0 0 1
+4 0 66
+2 0 66 0 0 0 0 0 0 0 0 66
+6 0 66 66
+7 0 66 0 0 0 0 0 0 0 0 66
jcnd=66/66 +15 0 
* 0 
+15 0 66 0 66 1 0 0 1
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+4 0 66 66
+1 0 66 66
+1 0 66 66
+2 0 66 66
+2 0 66 66
+2 0 66 66
+2 0 66 66
0x3877c7907c 0 66 66 0 1 1 0 1 1
+4 0 66 0 0 1 0 0 1
+7 0 66
+4 0 66
+3 0 66
+3 0 66 0 0 0 0 0 0 0 0 66
jcnd=66/66 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 180 0 0 1 0 0 1
+7 0 180
+3 0 180
+3 0 180 180 0 0 1 0 0 1
+4 0 180
+4 0 180 0 0 0 0 0 0 0 0 0 0 180 22
jump=16 0x3877c89be8 0 
* 0 
jump=20 0x3877c89bd0 0 
* 0 
jump=20 0x3877c89bb8 0 
* 0 
jump=24 +11 0 
* 0 
jump=24 0x3877c89c48 0 
* 0 
jump=26 0x3877c89c30 0 
* 0 
jump=24 0x3877c89c18 0 
* 0 
jump=26 0x3877c89c00 0 
* 0 
+11 0 24 24
+3 0 24
+4 0 24
+4 0 24 24
+4 0 24
+4 0 24 0 24
+4 0 24
+9 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
+4 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=8/24 0x3877c89c60 0 
* 0 
-40 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234 0 0 1 0 0 1
+4 0 234 234
+4 0 234 0 234
+4 0 234
+4 0 234
+4 0 234 0 0 0 0 0 0 0 0 234 6
jcnd=144/234 0x3877c89c60 0 
* 0 
-32 0 26 26
+4 0 26 0 26
+4 0 26 26
+4 0 26 0 26
+4 0 26 26
+4 0 26 0 26
+4 0 26
+4 0 26
+4 0 26 0 0 0 0 0 0 0 0 26
jcnd=10/26 0x3877c89c60 0 
* 0 
-24 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
+4 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=8/24 0x3877c89c60 0 
* 0 
-16 0 26 26 0 1 0 0 1
+4 0 26 0 26
+4 0 26 0 0 1 0 0 1
+4 0 26
+4 0 26 0 0 0 0 0 0 0 0 26 4
jcnd=10/26 0x3877c89c60 0 
* 0 
+6 0 154
+4 0 154 154
+3 0 154 0 154 0 0 1 0 0 1
+3 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154 0 0 4 0 0 4
+4 0 154 154
+4 0 154 0 154
+4 0 154
jump=154 -80 0 
* 0 
-30 0 16 16
+3 0 16 0 16
+3 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 -80 0 
* 0 
-24 0 20 20
+4 0 20 0 20
+4 0 20 20
+4 0 20 0 20
+4 0 20 20
+4 0 20 0 20
+4 0 20
jump=20 -80 0 
* 0 
-16 0 20 20
+4 0 20 0 20
+4 0 20 20
+4 0 20 0 20
+4 0 20
jump=20 -80 0 
* 0 
+8 0 20 20
+3 0 20
+4 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20
jump=20 -39 0 
* 0 
+9 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
+6 0 20 20
+3 0 20
+4 0 20
jump=20 -72 0 
* 0 
+8 0 16
+4 0 16 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+4 0 16
jump=16 -99 0 
* 0 
+11 0 26 26 0 1 0 0 1
+3 0 26
+4 0 26
+4 0 26
+4 0 26
jump=26 0x3877c89b78 0 
* 0 
+9 0 24 24
+3 0 24
+4 0 24
+4 0 24
+4 0 24
jump=24 0x3877c89b70 0 
* 0 
+9 0 26 26
+3 0 26
+4 0 26
+4 0 26
+4 0 26
jump=26 0x3877c89b68 0 
* 0 
+9 0 24 24
+3 0 24
+4 0 24
+4 0 24
+4 0 24
jump=24 0x3877c89b60 0 
* 0 
+9 0 180 0 180 1 0 0 1
+3 0 180 180

fn=(104) alloc_perturb
0x3877c77180 0 80 80 0 1 0 0 1
+6 0 80
+2 0 80 0 0 0 0 0 0 0 0 80
+2 0 80 80

fn=(38) _int_malloc
0x3877c79a00 0 190 0 190 1 0 0 1
+2 0 190
+3 0 190 0 190
+2 0 190 0 190
+2 0 190 0 190 0 0 1 0 0 1
+2 0 190
+3 0 190 0 190
+1 0 190 0 190
+1 0 190
+4 0 190
+4 0 190 0 0 0 0 0 0 0 0 190
+6 0 190
+4 0 190
+6 0 190
+3 0 190
+4 0 190
+4 0 190
+4 0 190
+3 0 190 0 0 0 0 0 0 0 0 190
+6 0 190 190 0 1 1 0 1 1
+7 0 190 0 0 0 0 0 0 0 0 190 5
jcnd=68/190 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 110 110
+6 0 110
+4 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+3 0 110
+4 0 110 110
+1 0 110 110
+1 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
-14 0 80
+4 0 80 80
+1 0 80 80
+1 0 80 80
+2 0 80 80
+2 0 80 80
+2 0 80 80
+2 0 80 80
+7 0 85
+7 0 85 0 0 1 0 0 1 0 0 85
+2 0 85
+3 0 85
+5 0 85
+3 0 85
+4 0 85 0 85
+4 0 85
+2 0 85
+5 0 85 85 0 0 4 0 0 4
+4 0 85
+3 0 85 0 0 0 0 0 0 0 0 85
jcnd=85/85 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 85 0 0 1 0 0 1
+3 0 85
+3 0 85
+3 0 85
+4 0 85
+3 0 85
+4 0 85 0 85
+5 0 85
+3 0 85 0 85
+4 0 85 0 85
+4 0 85 0 85
+5 0 85
+3 0 85
+3 0 85
+3 0 85
+3 0 85
+4 0 85
+4 0 85 0 0 1 0 0 1
+4 0 85 0 85
+4 0 85
+4 0 85 0 85
+5 0 85 0 85
+5 0 85
+3 0 85
+3 0 85 0 85
+5 0 85
+5 0 85
+3 0 85 0 85
+4 0 85 0 85
+4 0 85
+6 0 85 0 85
+4 0 85 0 85
+5 0 85 0 0 1 0 0 1
+3 0 85
+3 0 85
+3 0 85
jump=85 +87 0 
* 0 
+8 0 54
+3 0 54
+4 0 54
+2 0 54
+2 0 54
+3 0 54
+3 0 54
+3 0 54
+2 0 54
+2 0 54
+5 0 54
+2 0 54 54
+4 0 54
+3 0 54
+4 0 54 0 54
+4 0 54 0 54
+8 0 54
+7 0 54 0 54
+4 0 54 0 54
+4 0 54 0 54
+4 0 54 0 0 0 0 0 0 0 0 54
-38 0 29
+3 0 29
+4 0 29 0 29
+4 0 29 0 29
+8 0 29
+7 0 29 0 29
+4 0 29 0 29
+4 0 29 0 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 168 168 0 1 0 0 1
+4 0 168
+3 0 168 0 0 0 0 0 0 0 0 168 4
jcnd=60/168 0x3877c79ef0 0 
* 0 
+6 0 108 108
+4 0 108 108
+4 0 108
+4 0 108 0 0 0 0 0 0 0 0 108
+6 0 108 108 0 1 1 0 1 1
+7 0 108 0 0 0 0 0 0 0 0 108 2
+6 0 108
+4 0 108
+7 0 108 0 0 0 0 0 0 0 0 108 2
+2 0 108
+3 0 108 0 0 0 0 0 0 0 0 108 26
jcnd=83/108 0x3877c79e28 0 
* 0 
+6 0 88
+3 0 88 0 88
+4 0 88 0 88
+5 0 88 0 0 0 0 0 0 0 0 88 7
jcnd=5/88 0x3877c7a090 0 
* 0 
+6 0 83
+7 0 83 0 0 0 0 0 0 0 0 83 6
jcnd=54/83 0x3877c79c50 0 
* 0 
+6 0 29 0 0 1 0 0 1
+3 0 29
+4 0 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 29
+3 0 29
+4 0 29
+2 0 29
+2 0 29
+3 0 29
+3 0 29
+8 0 29
+3 0 29
+2 0 29
+2 0 29
+4 0 29 29 0 0 2 0 0 2
+4 0 29
+3 0 29 0 0 1 0 0 1 0 0 29 5
jcnd=29/29 0x3877c79e15 0 
* 0 
0x3877c79e15 0 29 0 29
+4 0 29 0 29
+4 0 29
+3 0 29
jump=29 0x3877c79c73 0 
* 0 
+8 0 83 83 0 1 0 0 1
+4 0 83
+3 0 83 0 0 0 0 0 0 0 0 83 8
jcnd=33/83 0x3877c79ce1 0 
* 0 
+6 0 50 50
+5 0 50 0 0 0 0 0 0 0 0 50 4
jcnd=30/50 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 60 0 0 1 0 0 1
+7 0 60
+3 0 60 0 0 0 0 0 0 0 0 60 2
+6 0 60 60 0 1 0 0 1
+4 0 60
+3 0 60
+3 0 60
+2 0 60
+4 0 60
+3 0 60
+3 0 60
+2 0 60
+2 0 60
+2 0 60
+2 0 60 60 0 0 1 0 0 1
+8 0 60
+5 0 60
+5 0 60
+2 0 60 0 0 0 0 0 0 0 0 60
-2 0 27
+2 0 27 0 0 0 0 0 0 0 0 27
+2 0 87
+2 0 87 0 0 0 0 0 0 0 0 87 1
jcnd=56/87 +64 0 
* 0 
+2 0 31
+8 0 31
+3 0 31
+3 0 31 0 0 0 0 0 0 0 0 31
-6 0 31
+3 0 31
+3 0 31 0 0 0 0 0 0 0 0 31
+2 0 62
+2 0 62 62
+8 0 62
+2 0 62 0 0 0 0 0 0 0 0 62 3
jcnd=31/62 -20 0 
* 0 
+2 0 31
+2 0 31
+5 0 31
+3 0 31
+3 0 31
+2 0 31
+2 0 31
+5 0 31 0 0 0 0 0 0 0 0 31
+2 0 31
+2 0 31
+4 0 31
+2 0 31
+2 0 31 0 0 0 0 0 0 0 0 31 2
jcnd=7/31 -8 0 
* 0 
-8 0 379
+4 0 379
+2 0 379
+2 0 379 0 0 0 0 0 0 0 0 379 38
jcnd=318/379 -8 0 
* 0 
-2 0 56 0 0 1 0 0 1
+2 0 56 0 0 0 0 0 0 0 0 56 4
jcnd=54/56 -8 0 
* 0 
+2 0 87 87 0 0 3 0 0 3
+4 0 87 0 0 1 0 0 1
+3 0 87 0 0 0 0 0 0 0 0 87 28
jcnd=60/87 0x3877c7a1cf 0 
* 0 
+6 0 27
+2 0 27
+4 0 27
+2 0 27
+2 0 27
+2 0 27 0 27
+8 0 27
jump=27 0x3877c79f30 0 
* 0 
0x3877c7a090 0 5 0 0 1 0 0 1
+7 0 5 0 5
+6 0 5
+3 0 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 60 60 0 1 1 0 1 1
+4 0 60 60
+4 0 60
+3 0 60 60
+4 0 60
+4 0 60
+3 0 60
+3 0 60 60
+4 0 60 0 0 0 0 0 0 0 0 60
+6 0 60 60
+4 0 60 0 0 0 0 0 0 0 0 60
+6 0 60 60 0 1 0 0 1
+8 0 60 0 60
+4 0 60 0 60
+4 0 60 0 0 0 0 0 0 0 0 60 4
jcnd=29/60 +38 0 
* 0 
+2 0 31 31 0 0 2 0 0 2
+4 0 31
+3 0 31 0 0 0 0 0 0 0 0 31
+2 0 31 31
+5 0 31 0 0 0 0 0 0 0 0 31
+6 0 31 31
+4 0 31 0 31
+4 0 31 31
+4 0 31 0 31
+4 0 31
+4 0 31 0 0 0 0 0 0 0 0 31
-4 0 29
+4 0 29 0 0 0 0 0 0 0 0 29
jcnd=1/29 0x3877c7a2e3 0 
* 0 
+6 0 59 59
+4 0 59 59 0 1 0 0 1
+4 0 59 0 0 0 0 0 0 0 0 59
+6 0 59
+4 0 59
+7 0 59 0 59 0 0 3 0 0 3
+4 0 59 0 59
+4 0 59 0 59
+4 0 59 0 59
+4 0 59 0 0 0 0 0 0 0 0 59
+2 0 59 0 59
+5 0 59
+7 0 59 0 0 0 0 0 0 0 0 59 2
jcnd=52/59 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 52
+7 0 52 0 52
+4 0 52
+3 0 52
+3 0 52
+4 0 52
+3 0 52
+4 0 52
+3 0 52
+3 0 52
+4 0 52 0 52
+4 0 52 0 52
+4 0 52
jump=52 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 1
+7 0 1 0 1
+6 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +7 0 
* 0 
+7 0 60
+4 0 60 0 0 1 0 0 1
+3 0 60
+3 0 60 0 60
cfn=(104)
calls=60 0x3877c77180 0 
* 0 240 120 0 0 0 0 0 0 0 60
+5 0 60
+3 0 60
jump=60 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 190 0 190 1 0 0 1
+5 0 190 0 190
+5 0 190
+3 0 190 0 190
+5 0 190
+4 0 190 190 0 0 1 0 0 1
+7 0 190 190 0 0 1 0 0 1
+3 0 190
+3 0 190 0 0 0 0 0 0 0 0 190
+6 0 190 190 0 0 1 0 0 1
+7 0 190 190 0 1 1 0 1 1
+4 0 190
+3 0 190 0 0 0 0 0 0 0 0 190
+2 0 190 190 0 0 1 0 0 1
+3 0 190
+3 0 190 0 0 0 0 0 0 0 0 190
jcnd=190/190 +97 0 
* 0 
+18 0 190
+3 0 190
+3 0 190 0 190
cfn=(38)
calls=190 0x3877c79a00 0 
* 0 25939 3891 3958 27 19 27 27 19 27 3859 183
+5 0 190
+3 0 190
+3 0 190 0 0 0 0 0 0 0 0 190
+2 0 190
+3 0 190 0 0 0 0 0 0 0 0 190
+2 0 190
+3 0 190 0 0 0 0 0 0 0 0 190 1
+2 0 190 190
+7 0 190 0 0 0 0 0 0 0 0 190
jcnd=190/190 +13 0 
* 0 
+13 0 190 0 190
+2 0 190 0 0 0 0 0 0 0 0 190
+6 0 190
+3 0 190 190
+4 0 190 190
+5 0 190 190
+5 0 190
+4 0 190 190
+1 0 190 0 0 1 0 0 1
+5 0 190 190 0 0 1 0 0 1
+7 0 190 0 0 0 0 0 0 0 0 190
jcnd=190/190 +14 0 
* 0 
+14 0 190 0 190 1 0 0 1
+3 0 190 0 0 0 0 0 0 0 0 190
+6 0 190
jump=190 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 190 0 190 1 0 0 1
+2 0 190
+3 0 190
+3 0 190 0 190
+2 0 190
+3 0 190 0 190
+1 0 190
+3 0 190 0 190
+1 0 190
+3 0 190
+4 0 190
+3 0 190 0 0 0 0 0 0 0 0 190
+6 0 190
+4 0 190
+3 0 190 0 0 0 0 0 0 0 0 190 7
jcnd=10/190 0x3877c838d1 0 
* 0 
+2 0 180
+3 0 180
+3 0 180
+3 0 180
+3 0 180
+3 0 180 0 0 0 0 0 0 0 0 180
jcnd=180/180 +41 0 
* 0 
+41 0 180 0 0 1 0 0 1
+3 0 180 0 0 0 0 0 0 0 0 180
jcnd=180/180 0x3877c839c0 0 
* 0 
+24 0 180
+3 0 180
+4 0 180
+3 0 180
+3 0 180
+3 0 180
+3 0 180
+3 0 180 0 0 0 0 0 0 0 0 180 84
jcnd=96/180 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 94
+10 0 94 94 0 0 2 0 0 2
+3 0 94
+4 0 94 0 94
+3 0 94
+4 0 94
+4 0 94 0 0 0 0 0 0 0 0 94
jcnd=94/94 -18 0 
* 0 
-18 0 338 338
+3 0 338
+4 0 338 0 338
+3 0 338
+4 0 338
+4 0 338 0 0 0 0 0 0 0 0 338 9
jcnd=244/338 -18 0 
* 0 
+2 0 190
+4 0 190
+3 0 190 190
+1 0 190 190
+1 0 190 190
+2 0 190 190 0 1 0 0 1
+2 0 190 190
0x3877c839c0 0 180 0 0 1 0 0 1
+3 0 180
+3 0 180
+3 0 180
+4 0 180 0 180 0 0 1 0 0 1
cfn=(284)
calls=180 0x3877c89b20 0 
* 0 7682 2528 2168 6 1 6 6 1 6 370 10 180 22
+5 0 180
jump=180 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 190 190 0 1 1 0 1 1
+7 0 190 190 0 0 1 0 0 1
+3 0 190
+3 0 190 0 0 1 0 0 1 0 0 190
+6 0 190
+3 0 190 0 0 0 0 0 0 0 0 190
+6 0 190 190
+4 0 190
+4 0 190
+2 0 190 0 0 0 0 0 0 0 0 190
+2 0 190
+2 0 190
+7 0 190 0 0 0 0 0 0 0 0 190
jcnd=190/190 +14 0 
* 0 
+14 0 190
+2 0 190
cfn=(170)
calls=190 0x3877c78650 0 
* 0 15731 3948 2422 17 1 0 17 1 0 3387 43

totals: 384223 138682 93831 221 48 50 221 48 50 16530 487 1130 22
