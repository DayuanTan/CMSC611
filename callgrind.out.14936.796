version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 796


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 945305754 - 945399191
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 272 0 0 1 0 0 1
+3 0 272 0 0 0 0 0 0 0 0 272
+2 0 272
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=272 0x3877c7b8b0 0 
* 0 28662 7180 3880 19 3 0 19 3 0 6662 92
* 0 272 272 0 1 1 0 1 1 0 0 0 272

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 272 0 272 1 0 0 1
+1 0 272
+5 0 272
+3 0 272 0 272
+1 0 272
+4 0 272 0 0 1 0 0 1
+3 0 272
+4 0 272
+3 0 272 0 272 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=272 0x3877c7aa50 0 
* 0 58413 9720 9006 31 26 33 31 26 33 9847 287
* 0 272 272 0 1 1 0 1 1 0 0 0 272
+5 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 +96 0 
* 0 
+96 0 272 0 0 1 0 0 1
+4 0 272 272
+1 0 272 272
+1 0 272 272

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 130 0 130 1 0 0 1
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=130 0x404a28 -35 
* * 780 260 390 1 0 1 1 0 1
+5 * 130 130
+1 * 130 130

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 130
+4 * 130
+3 * 130 0 130
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=130 0x4044cc -35 
* * 650 260 260
+5 * 130 130
+1 * 130 130

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 130 0 130 1 0 0 1
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130 1 0 0 1
+4 +1 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=130 0x4049d4 -35 
* * 780 260 390 1 0 0 1
+5 * 130 130
+1 * 130 130

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 130 0 130 1 0 0 1
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 130
+4 * 130
+3 * 130 0 130
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=130 0x404520 -35 
* * 650 260 260
+5 * 130 130
+1 * 130 130

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 65 0 65
+1 * 65
+3 * 65
+4 * 65 0 65
+4 * 65 0 65
+4 * 65 0 65
+4 +1 65 65
+4 * 65 65
+4 * 65 65
+4 * 65
+3 * 65
+3 * 65 0 65
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=65 0x403df2 -87 
* * 1560 520 585 0 5 1 0 5 1 65
+5 * 65 65
+1 * 65 65

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 130 0 130 1 0 0 1
+1 * 130
+3 * 130 0 130
+4 * 130 130
+4 * 130 130
+1 * 130 130

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 65 0 65
+1 * 65
+3 * 65
+4 * 65 0 65
+4 * 65 0 65
+4 * 65 0 65
+4 +1 65 65
+4 * 65 65
+4 * 65 65
+4 * 65
+3 * 65
+3 * 65 0 65
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=65 0x40406a -87 
* * 1560 520 585 0 4 4 0 4 4 65
+5 * 65 65
+1 * 65 65

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 130 0 130
+1 * 130
+3 * 130 0 130
+4 * 130 130
+4 * 130 130
+1 * 130 130

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 260 0 260 1 0 0 1
+1 * 260
+3 * 260 0 260
+4 +1 260 260
+4 * 260 260
+1 * 260 260

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 260 0 260 1 0 0 1
+1 * 260
+3 * 260
+4 * 260 0 260
+4 +1 260
+4 * 260
+3 * 260 0 260 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=260 0x40500c 790 
* * 1560 780 520 1 0 0 1
+5 * 260 260
+3 * 260 260
+1 * 260 260

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 190 0 190
+1 * 190
+3 * 190 0 190
+4 +1 190 190
+4 * 190 190
+1 * 190 190

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 260 0 260 1 0 0 1
+1 * 260
+3 * 260 0 260
+4 +1 260 260 0 1 0 0 1
+4 * 260 260
+1 * 260 260

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 190 0 190
+1 * 190
+3 * 190 0 190 0 0 1 0 0 1
+4 +1 190 190
+4 * 190 190
+1 * 190 190

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 260 0 260 1 0 0 1
+1 * 260
+3 * 260
+4 * 260 0 260
+4 +1 260
+4 * 260
+3 * 260 0 260
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=260 0x404ffe 790 
* * 1560 780 520 1 0 0 1
+5 * 260 260
+3 * 260 260
+1 * 260 260

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 130 0 130
+1 * 130
+3 * 130 0 130
+4 * 130 0 130
+4 * 130 130
+4 * 130 130
+1 * 130 130

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136 1 0 0 1
+4 +2 136 136
+4 * 136
+3 * 136 0 136
cfn=(28)
calls=136 0x404992 +12 
* * 816 272 272 1 0 0 1
+5 * 136 136
+4 * 136
+3 * 136
+2 * 136 0 0 0 0 0 0 0 0 136
jcnd=136/136 +7 +3 
* * 
+7 +3 136 136
+4 * 136
+4 * 136
+3 * 136 0 136
cob=(5)
cfi=(8)
cfn=(32)
calls=136 0x387e4bd0b0 0 
* * 31746 5382 5119 17 16 14 17 16 14 5098 155 136
* * 136 136 0 1 1 0 1 1 0 0 0 136
+5 +1 136 136
+1 * 136 136

fn=(102)
0x4048de 113 148 0 148 1 0 0 1
+1 * 148
+3 * 148 0 148
+4 +1 148
+10 * 148 148
+1 * 148 148

fn=(266)
0x40406a 129 65 0 65
+1 * 65
+3 * 65
+4 * 65 0 65
+4 * 65 0 65
+4 * 65 0 65
+4 +1 65 65
+4 * 65
+3 * 65
+5 * 65 0 65
cfi=(16)
cfn=(226)
calls=65 0x402d61 -20 
* * 455 195 195
+5 * 65
+3 * 65 0 0 0 0 0 0 0 0 65
+2 * 65 65
+4 * 65 65 0 0 4 0 0 4
+2 * 65 0 65 0 0 4 0 0 4
+2 * 65 65
+1 * 65 65

fn=(28)
0x404992 113 148 0 148 1 0 0 1
+1 * 148
+3 * 148 0 148
+4 +1 148
+10 * 148 148
+1 * 148 148

fn=(176)
0x4044cc 86 130 0 130
+1 * 130
+3 * 130 0 130
+4 * 130 130
+1 * 130 130

fn=(224)
0x403df2 129 65 0 65
+1 * 65
+3 * 65
+4 * 65 0 65
+4 * 65 0 65
+4 * 65 0 65
+4 +1 65 65
+4 * 65
+3 * 65
+5 * 65 0 65
cfi=(16)
cfn=(226)
calls=65 0x402d61 -20 
* * 455 195 195
+5 * 65
+3 * 65 0 0 0 0 0 0 0 0 65
+2 * 65 65
+4 * 65 65 0 0 5 0 0 5
+2 * 65 0 65 0 0 1 0 0 1
+2 * 65 65
+1 * 65 65

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136
+3 * 136 0 136
cob=(5)
cfi=(8)
cfn=(164)
calls=136 0x387e4bb2f0 0 
* * 14940 3730 2000 21 4 0 21 4 0 3470 72 136
* * 136 136 0 1 1 0 1 1 0 0 0 136
+5 * 136 136
+1 * 136 136

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +1 136 136
+4 * 136
+3 * 136 0 136
cob=(5)
cfi=(8)
cfn=(164)
calls=136 0x387e4bb2f0 0 
* * 14810 3722 1880 0 0 0 0 0 0 3464 20 136
* * 136 136 0 0 0 0 0 0 0 0 0 136
+5 * 136 136
+1 * 136 136

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136
+4 * 136
+3 * 136 0 136
cfn=(102)
calls=136 0x4048de +12 
* * 816 272 272 1 0 0 1
+5 * 136 136
+4 * 136 0 0 1 0 0 1
+3 * 136
+2 * 136 0 0 0 0 0 0 0 0 136
jcnd=136/136 +7 +3 
* * 
+7 +3 136 136
+4 * 136
+4 * 136
+3 * 136 0 136
cob=(5)
cfi=(8)
cfn=(32)
calls=136 0x387e4bd0b0 0 
* * 31019 5426 4703 18 11 20 18 11 20 5021 132 136
* * 136 136 0 0 0 0 0 0 0 0 0 136
+5 +1 136 136
+1 * 136 136

fn=(18)
0x404a28 81 130 0 130 1 0 0 1
+1 * 130
+3 * 130 0 130 0 0 1 0 0 1
+4 * 130 0 130
+4 * 130 130
+1 * 130 130

fn=(92)
0x4049d4 81 130 0 130 1 0 0 1
+1 * 130
+3 * 130 0 130
+4 * 130 0 130
+4 * 130 130
+1 * 130 130

fn=(196)
0x404520 86 130 0 130
+1 * 130
+3 * 130 0 130
+4 * 130 130
+1 * 130 130

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +2 130 130
+4 * 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=130 0x404484 107 
* * 42602 13114 12338 25 3 4 25 3 4 1402 79 256 32
+5 * 130 130
+1 * 130 130

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +2 130 130 0 1 0 0 1
+4 * 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=130 0x404a36 450 
* * 38962 11814 11038 24 3 4 24 3 4 1402 79 256 32
+5 * 130 130
+1 * 130 130

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +2 130 130
+4 * 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=130 0x40439c 107 
* * 42602 13114 12338 7 1 4 7 1 4 1402 74 256
+5 * 130 130
+1 * 130 130

fn=(116)
0x40439c 107 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +10 130 130
+4 * 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=130 0x4047d7 -26 
* * 40782 12464 11688 7 1 4 7 1 4 1402 74 256
+5 +1 130 130
+1 * 130 130

fn=(118)
0x4047d7 91 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +2 130 130
+4 * 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=130 0x4049e2 450 
* * 38962 11814 11038 7 1 4 7 1 4 1402 74 256
+5 * 130 130
+1 * 130 130

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +10 130 130
+4 * 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(52)
calls=130 0x404829 -26 
* * 40782 12464 11688 25 3 4 25 3 4 1402 79 256 32
+5 +1 130 130
+1 * 130 130

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 130 0 130
+1 * 130
+3 * 130 0 130
+1 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=130 0x4043ca -45 
* * 4680 1690 1820 4 0 4 4 0 4
+5 +1 130 130 0 1 0 0 1
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=130 0x404412 +43 
* * 38978 8388 7342 24 13 8 24 13 8 5130 132 260
+5 * 130
jump=130 +28 * 
* * 
+28 * 130
+4 * 130 130
+1 * 130 130
+1 * 130 130

fn=(14)
0x4043ca 90 130 0 130 1 0 0 1
+1 * 130
+3 * 130
+4 * 130 0 130 0 0 1 0 0 1
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfi=(4)
cfn=(16)
calls=130 0x404804 +24 
* * 2340 780 910 2 0 1 2 0 1
+5 * 130 130
+4 * 130 0 130 0 0 2 0 0 2
+7 * 130 130
+4 * 130 0 130 1 0 0 1
+8 * 130 130
+4 * 130 0 130
+8 +1 130 130
+1 * 130 130

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 130 0 130 1 0 0 1
+1 * 130
+3 * 130 0 130
+2 * 130 0 130
+2 * 130 0 130
+1 * 130 0 0 1 0 0 1
+4 * 130 0 130
+4 * 130 0 130
+4 +2 130 130
+4 * 130
+3 * 130 0 130
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=130 0x4039fc 117 
* * 780 390 260 2 0 0 2
+5 * 130
+3 * 130 0 130
cfi=(3)
cfn=(84)
calls=130 0x4039ed -88 
* * 780 390 260
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=130 0x402d74 645 
* * 1690 780 260
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130
+3 * 130
+3 * 130 0 130 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=130 0x403a0a 134 
* * 45970 11051 9688 30 7 16 30 7 16 5081 124 260
+5 +4 130 130
+4 * 130
+3 * 130 0 130
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=130 0x40325e 113 
* * 780 390 260 1 0 0 1
+5 * 130
+3 * 130 130
+4 * 130 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=130 0x403a98 565 
* * 3250 1300 1040 2 0 0 2
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=130 0x403a68 547 
* * 3250 1300 1040
+5 * 130
+3 * 130
+3 * 130
+3 * 130
+3 * 130 0 130
cfi=(11)
cfn=(114)
calls=130 0x403ac9 -60 
* * 44552 13764 13118 7 1 4 7 1 4 1402 74 256
+5 -3 130 130
+4 * 130 0 130
+4 * 130
jump=130 +28 +4 
* * 
+28 +4 130
+4 * 130 130
+1 * 130 130
+2 * 130 130
+2 * 130 130
+1 * 130 130

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136
+5 * 136 0 0 0 0 0 0 0 0 136 6
+2 +1 136 136
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(5)
cfn=(190)
calls=136 0x40452a -65 
* * 16442 4266 2560 0 0 0 0 0 0 3464 20 272
+5 +1 136 136
+1 * 136 136

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136 1 0 0 1
+4 * 136 0 136
+4 0 136 136
+5 0 136 0 0 0 0 0 0 0 0 136
+2 0 136 136
+4 0 136 136
+4 0 136
+5 0 136
+3 0 136
+3 0 136 0 136
fi=(6) ???
cfi=(5)
cfn=(26)
calls=136 0x404730 99 
* 0 35282 6470 6207 21 17 14 21 17 14 5234 155 272
+5 0 136
fi=(6)
jump=136 +7 0 
* 0 
+7 0 136 136
+1 0 136 136

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 130 0 130 1 0 0 1
+1 * 130
+3 * 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+4 * 130 0 130
+4 * 130
+4 * 130 0 0 1 0 0 1
+4 * 130
+3 * 130
+3 * 130 0 130
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=130 0x404468 726 
* * 1300 650 520 1 0 0 1
+5 * 130 130
+4 * 130 130
+1 * 130 130

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+3 * 130 0 130
+4 * 130
+4 * 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfi=(10)
cfn=(44)
calls=130 0x404468 726 
* * 1300 650 520
+5 * 130 130
+4 * 130 130
+1 * 130 130

fn=(86)
0x403a0a 134 130 0 130
+1 * 130
+3 * 130 0 130
+1 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=130 0x4042e2 -45 
* * 4680 1690 1820 5 0 0 5
+5 +1 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=130 0x40432a +43 
* * 38430 8451 6958 24 7 16 24 7 16 5081 124 260
+5 * 130
jump=130 +28 * 
* * 
+28 * 130
+4 * 130 130
+1 * 130 130
+1 * 130 130

fn=(88)
0x4042e2 90 130 0 130 1 0 0 1
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130 1 0 0 1
cfi=(4)
cfn=(90)
calls=130 0x4047b2 +24 
* * 2340 780 910 3 0 0 3
+5 * 130 130
+4 * 130 0 130
+7 * 130 130
+4 * 130 0 130
+8 * 130 130
+4 * 130 0 130
+8 +1 130 130
+1 * 130 130

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 130 0 130 1 0 0 1
+1 * 130
+3 * 130 0 130
+1 * 130
+4 * 130 0 130
+4 +2 130 130
+4 * 130 130 0 1 0 0 1
+4 * 130
+3 * 130 130
+4 * 130 130
+3 * 130
+3 * 130
+3 * 130
+4 * 130
+3 * 130 130
+4 * 130 130
+3 -1 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=130 0x403ce6 +11 
* * 17992 4892 3228 22 5 0 22 5 0 3470 70 260
+5 +1 130 130
+4 * 130
+3 * 130 0 130
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=130 0x4031b8 -82 
* * 2990 1040 1040 1 0 0 1
+5 * 130
jump=130 +28 * 
* * 
+28 * 130
+4 * 130 130
+1 * 130 130
+1 * 130 130

fn=(172)
0x4031b8 79 130 0 130 1 0 0 1
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 130
+4 * 130
+3 * 130 0 130
cfi=(4)
cfn=(174)
calls=130 0x403ccc +42 
* * 1820 650 650
+5 * 130 130
+1 * 130 130

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 284 0 284 1 0 0 1
+1 * 284
+3 * 284 0 284
+4 +1 284 284
+4 * 284 284 0 0 2 0 0 2
+4 * 284
+3 * 284 284
+4 * 284 284
+3 * 284
+3 * 284
+3 * 284
+4 * 284 284
+1 * 284 284

fn=(106)
0x40325e 113 278 0 278 1 0 0 1
+1 * 278
+3 * 278 0 278
+4 +1 278 278
+4 * 278 278
+1 * 278 278

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 142 0 142 1 0 0 1
+1 * 142
+3 * 142 0 142 0 0 1 0 0 1
+4 +1 142 142
+4 * 142 142
+1 * 142 142

fn=(82)
0x4039fc 117 142 0 142 1 0 0 1
+1 * 142
+3 * 142 0 142 1 0 0 1
+4 +1 142 142
+4 * 142 142
+1 * 142 142

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 65 0 65
+1 * 65
+3 * 65
+4 * 65 0 65
+4 * 65 0 65
+4 +2 65 65
+4 * 65 65
+4 * 65 65
+4 * 65 65
+4 * 65
+3 * 65 0 0 0 0 0 0 0 0 65 8
jcnd=6/65 +51 +10 
* * 
+2 +3 59 59
+4 * 59 59
+4 * 59 59
+4 -1 59 59
+4 * 59
+3 * 59
+3 * 59 0 59
cfi=(3)
cfn=(222)
calls=59 0x403373 215 
* * 2242 767 826 0 4 0 0 4 0 59
+5 +2 59 59
+4 * 59 59
+4 * 59
+4 * 59 59
+4 * 59 0 59
+4 * 59
jump=59 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8241 2585 2228 23 5 8 23 5 8 444 13 35
+5 +2 65 65
+1 * 65 65

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 130 0 130 1 0 0 1
+1 * 130
+3 * 130 0 130
+2 * 130 0 130
+2 * 130 0 130
+1 * 130
+4 * 130 0 130 1 0 0 1
+4 * 130 0 130
+4 +2 130 130
+4 * 130
+3 * 130 0 130
cfn=(6)
calls=130 0x403b08 117 
* * 780 390 260 1 0 1 1 0 1
+5 * 130
+3 * 130 0 130
cfi=(3)
cfn=(8)
calls=130 0x403afa -88 
* * 780 390 260 1 0 0 1
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(10)
calls=130 0x402f54 645 
* * 1690 780 260 1 1 0 1 1
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130
+3 * 130
+3 * 130 0 130
cfn=(12)
calls=130 0x403b16 134 
* * 46518 10988 10072 29 13 12 29 13 12 5130 132 260
+5 +4 130 130 0 1 0 0 1
+4 * 130
+3 * 130 0 130
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=130 0x40333c 113 
* * 780 390 260 2 0 0 2
+5 * 130
+3 * 130 130
+4 * 130 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(42)
calls=130 0x403ba4 565 
* * 3250 1300 1040 3 0 0 3
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(46)
calls=130 0x403b74 547 
* * 3250 1300 1040
+5 * 130
+3 * 130
+3 * 130
+3 * 130
+3 * 130 0 130 1 0 0 1
cfi=(11)
cfn=(48)
calls=130 0x403bd5 -60 
* * 44552 13764 13118 26 3 4 26 3 4 1402 79 256 32
+5 -3 130 130
+4 * 130 0 130
+4 * 130
jump=130 +28 +4 
* * 
+28 +4 130
+4 * 130 130
+1 * 130 130
+2 * 130 130
+2 * 130 130
+1 * 130 130

fn=(108)
0x403a98 565 130 0 130 1 0 0 1
+1 * 130
+3 * 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+4 * 130 0 130
+4 * 130
+4 * 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=130 0x404380 726 
* * 1300 650 520 1 0 0 1
+5 * 130 130
+4 * 130 130
+1 * 130 130

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 130 0 130
+1 * 130
+3 * 130 0 130
+1 * 130
+4 * 130 0 130 1 0 0 1
+4 +2 130 130
+4 * 130
+3 * 130 0 130
cfn=(40)
calls=130 0x40333c 113 
* * 780 390 260
+5 * 130
+3 * 130 130
+4 * 130 130
+4 * 130 130
+4 * 130 130
+3 -1 130
+3 * 130
+3 * 130 0 130
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=130 0x40334a 148 
* * 4030 1300 1560 2 0 0 2
+5 +1 130 130
+4 * 130
+3 * 130 0 130
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=130 0x4032ca 159 
* * 24466 7342 4794 3 0 0 3 0 0 3458 16 260
+5 * 130
jump=130 +28 * 
* * 
+28 * 130 0 0 1 0 0 1
+4 * 130 130
+1 * 130 130
+1 * 130 130

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 136 0 136 1 0 0 1
+1 * 136 0 0 1 0 0 1
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 0 136 136
+5 0 136 0 0 0 0 0 0 0 0 136
+2 0 136 136
+4 0 136 136
+4 0 136
+5 0 136
+3 0 136
+3 0 136 0 136
fi=(6)
cfi=(5)
cfn=(100)
calls=136 0x40461a 99 
* 0 34555 6514 5791 21 11 20 21 11 20 5157 132 272
+5 0 136
fi=(6)
jump=136 +7 0 
* 0 
+7 0 136 136
+1 0 136 136

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 6760 0 6760
+1 * 6760
+3 * 6760 0 6760
+4 * 6760 0 6760
+4 +1 6760 6760
+4 * 6760 6760
+3 * 6760 6760
+4 * 6760
+4 * 6760
+3 * 6760 6760
+1 * 6760 6760

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 6760 0 6760
+1 * 6760
+3 * 6760 0 6760 1 0 0 1
+4 * 6760 0 6760
+4 +1 6760 6760
+4 * 6760 6760
+3 * 6760 6760
+4 * 6760
+4 * 6760
+3 * 6760 6760
+1 * 6760 6760

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 130
+4 * 130
+3 * 130 0 130
cfi=(4)
cfn=(194)
calls=130 0x403d7e +42 
* * 1820 650 650 1 0 0 1
+5 * 130 130
+1 * 130 130

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186)
0x4032ca 159 130 0 130 1 0 0 1
+1 * 130
+3 * 130 0 130
+1 * 130
+4 * 130 0 130
+4 +2 130 130
+4 * 130 130
+4 * 130
+3 * 130 130
+4 * 130 130
+3 * 130
+3 * 130
+3 * 130
+4 * 130
+3 * 130 130
+4 * 130 130
+3 -1 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(188)
calls=130 0x403d98 +11 
* * 17836 4872 3104 1 0 0 1 0 0 3458 16 260
+5 +1 130 130
+4 * 130
+3 * 130 0 130
cfn=(192)
calls=130 0x403296 -82 
* * 2990 1040 1040 1 0 0 1
+5 * 130
jump=130 +28 * 
* * 
+28 * 130
+4 * 130 130
+1 * 130 130
+1 * 130 130

fn=(2)
0x402d74 645 544 0 544 1 0 0 1
+1 * 544
+3 * 544 0 544 0 0 1 0 0 1
+4 +1 544 544
+4 * 544 544 0 1 1 0 1 1
+4 * 544
+3 * 544 544
+4 * 544 544
+3 * 544
+3 * 544
+3 * 544
+4 * 544 544
+1 * 544 544

fn=(20)
0x404412 179 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 +2 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(22)
calls=130 0x404236 -14 
* * 35728 6828 6432 23 13 8 23 13 8 5130 132 260
+5 * 130 130
+4 * 130 0 130
+3 +1 130 130
+4 * 130 130 0 1 0 0 1
+3 * 130 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+3 * 130 130
+4 * 130
+4 * 130
+3 * 130 130
+4 * 130 0 130
+4 +1 130 130
+1 * 130 130

fn=(94)
0x40432a 179 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 +2 130 130
+4 * 130 130 0 1 0 0 1
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(96)
calls=130 0x403fbe -14 
* * 35180 6891 6048 23 7 16 23 7 16 5081 124 260
+5 * 130 130
+4 * 130 0 130
+3 +1 130 130
+4 * 130 130
+3 * 130 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+3 * 130 130
+4 * 130
+4 * 130
+3 * 130 130
+4 * 130 0 130
+4 +1 130 130
+1 * 130 130

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 65 0 65
+1 * 65
+3 * 65 0 0 1 0 0 1
+4 * 65 0 65
+4 * 65 0 65
+4 +2 65 65
+4 * 65 65
+4 * 65 65
+4 * 65 65
+4 * 65
+3 * 65 0 0 0 0 0 0 0 0 65
jcnd=6/65 +51 +10 
* * 
+2 +3 59 59
+4 * 59 59
+4 * 59 59
+4 -1 59 59
+4 * 59
+3 * 59
+3 * 59 0 59
cfi=(3)
cfn=(264)
calls=59 0x4036b1 215 
* * 2242 767 826 0 4 1 0 4 1 59
+5 +2 59 59
+4 * 59 59
+4 * 59
+4 * 59 59
+4 * 59 0 59
+4 * 59
jump=59 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246)
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8446 2616 2264 18 4 12 18 4 12 478 35 35
+5 +2 65 65
+1 * 65 65

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40)
0x40333c 113 278 0 278 1 0 0 1
+1 * 278
+3 * 278 0 278 1 0 0 1
+4 +1 278 278
+4 * 278 278
+1 * 278 278

fn=(112)
0x403a68 547 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 +1 130 130
+4 * 130 130
+3 * 130 0 130
+4 * 130
+4 * 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfi=(10)
cfn=(110)
calls=130 0x404380 726 
* * 1300 650 520
+5 * 130 130
+4 * 130 130
+1 * 130 130

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 130 0 130
+1 * 130
+3 * 130 0 130
+1 * 130
+4 * 130 0 130 1 0 0 1
+4 +2 130 130
+4 * 130
+3 * 130 0 130
cfn=(106)
calls=130 0x40325e 113 
* * 780 390 260
+5 * 130
+3 * 130 130
+4 * 130 130
+4 * 130 130
+4 * 130 130
+3 -1 130
+3 * 130
+3 * 130 0 130
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=130 0x40326c 148 
* * 4030 1300 1560 4 0 0 4
+5 +1 130 130
+4 * 130
+3 * 130 0 130
cfn=(156)
calls=130 0x4031ec 159 
* * 24622 7362 4918 25 5 0 25 5 0 3470 70 260
+5 * 130
jump=130 +28 * 
* * 
+28 * 130 0 0 1 0 0 1
+4 * 130 130
+1 * 130 130
+1 * 130 130

fn=(158)
0x403ce6 171 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +2 136 136
+5 * 136 0 0 0 0 0 0 0 0 136
+2 +1 136 136
+4 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfi=(5)
cfn=(160)
calls=136 0x4044d6 -65 
* * 16572 4274 2680 22 5 0 22 5 0 3470 72 272
+5 +1 136 136
+1 * 136 136

fl=(12)
fn=(54)
0x404a36 450 130 0 130
+1 * 130
+3 * 130 0 130
+1 * 130
+4 * 130 0 130 1 0 0 1
+4 * 130 0 130
+4 * 130 0 130
+4 +10 130 130
+4 * 130
+3 * 130 0 130
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=130 0x404c38 288 
* * 1950 780 650 3 0 0 3
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(56)
calls=130 0x404c38 288 
* * 1950 780 650
+5 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=130 0x404c52 -36 
* * 32202 9474 8698 20 3 4 20 3 4 1402 79 256 32
+5 +1 130
+4 * 130 130
+1 * 130 130
+1 * 130 130

fn=(60)
0x404c52 424 130 0 130
+1 * 130
+3 * 130 0 130
+2 * 130 0 130
+1 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +4 130 130
+4 * 130
+3 * 130 0 130
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=130 0x40492d 277 
* * 1950 780 650 2 0 0 2
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=130 0x404d9d 277 
* * 3250 1170 1040 2 0 1 2 0 1
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(66)
calls=130 0x404d9d 277 
* * 3250 1170 1040
+5 * 130
+3 * 130
+3 * 130
+3 * 130 0 130
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=130 0x404db7 -49 
* * 20112 5444 4668 15 3 3 15 3 3 1402 79 256 32
+5 +1 130
+4 * 130 130
+1 * 130 130
+2 * 130 130
+1 * 130 130

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 166 0 166 1 0 0 1
+1 * 166
+3 * 166
+4 * 166 0 166
+4 +1 166 166
+4 * 166
+3 * 166 0 166 1 0 0 1
cfi=(13)
cfn=(64)
calls=166 -33 -66 
* * 996 498 332
+5 * 166 166
+1 * 166 166

fn=(66)
0x404d9d 277 260 0 260
+1 * 260
+3 * 260
+4 * 260 0 260
+4 +1 260 260
+4 * 260
+3 * 260 0 260
cfi=(13)
cfn=(68)
calls=260 0x404f1a -58 
* * 4160 1560 1300 2 0 1 2 0 1
+5 * 260 260
+1 * 260 260

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 130 0 130
+1 * 130
+3 * 130 0 130
+1 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +10 130 130
+4 * 130
+3 * 130 0 130
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=130 0x404bc6 288 
* * 1950 780 650 3 0 0 3
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(122)
calls=130 0x404bc6 288 
* * 1950 780 650
+5 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=130 0x404be0 -36 
* * 32202 9474 8698 4 1 4 4 1 4 1402 74 256
+5 +1 130
+4 * 130 130
+1 * 130 130
+1 * 130 130

fn=(128)
0x404878 277 166 0 166
+1 * 166
+3 * 166
+4 * 166 0 166 1 0 0 1
+4 +1 166 166
+4 * 166
+3 * 166 0 166
cfi=(13)
cfn=(130)
calls=166 -33 -66 
* * 996 498 332 0 0 1 0 0 1
+5 * 166 166
+1 * 166 166

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 260 0 260
+1 * 260
+3 * 260
+4 * 260 0 260
+4 +1 260 260
+4 * 260
+3 * 260 0 260
cfi=(13)
cfn=(134)
calls=260 0x404e98 -58 
* * 4160 1560 1300 2 0 0 2
+5 * 260 260
+1 * 260 260

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +8 130 0 130
+4 +3 130 130
+4 * 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=130 0x404eb5 -22 
* * 18162 4794 3888 1 1 4 1 1 4 1402 74 256
+5 +1 130 130
+1 * 130 130

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 260 0 260 1 0 0 1
+1 * 260
+3 * 260
+4 * 260 0 260
+4 +1 260 260
+4 * 260
+3 * 260 0 260
cfi=(13)
cfn=(124)
calls=260 0x404d36 -77 
* * 1560 780 520 2 0 0 2
+5 * 260 260
+1 * 260 260

fn=(56)
0x404c38 288 260 0 260 1 0 0 1
+1 * 260
+3 * 260
+4 * 260 0 260 1 0 0 1
+4 +1 260 260
+4 * 260
+3 * 260 0 260
cfi=(13)
cfn=(58)
calls=260 0x404d8f -77 
* * 1560 780 520 1 0 0 1
+5 * 260 260
+1 * 260 260

fn=(74)
0x404f37 368 142 0 142
+1 * 142
+3 * 142
+4 * 142 0 142 1 0 0 1
+4 * 142 0 142
+4 * 142 0 142
+4 +2 142 142
+4 * 142 142
+4 * 142
+3 * 142
+3 * 142
+4 * 142 0 142
+4 +1 142 142
+5 * 142 0 0 0 0 0 0 0 0 142
jcnd=6/142 +33 +2 
* * 
+2 +1 136 136
+4 * 136
+8 * 136 136
+4 * 136 136
+4 * 136
+3 * 136 0 0 1 0 0 1
+3 * 136 0 136 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=136 0x3877c83840 0 
* * 15032 3474 3207 11 2 5 11 2 5 1320 81 131 32
* * 136 136 0 1 1 0 1 1 0 0 0 136
+5 +1 142 142
+4 * 142
+8 * 142 142
+4 * 142
+3 +1 142 142
+1 * 142 142

fn=(140)
0x404eb5 368 142 0 142
+1 * 142
+3 * 142
+4 * 142 0 142 1 0 0 1
+4 * 142 0 142
+4 * 142 0 142 0 0 1 0 0 1
+4 +2 142 142
+4 * 142 142
+4 * 142
+3 * 142
+3 * 142
+4 * 142 0 142
+4 +1 142 142
+5 * 142 0 0 0 0 0 0 0 0 142
jcnd=6/142 +33 +2 
* * 
+2 +1 136 136
+4 * 136
+8 * 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cob=(2)
cfi=(9)
cfn=(78)
calls=136 0x3877c83840 0 
* * 15032 3474 3207 0 1 5 0 1 5 1320 77 131
* * 136 136 0 0 0 0 0 0 0 0 0 136
+5 +1 142 142
+4 * 142
+8 * 142 142
+4 * 142
+3 +1 142 142
+1 * 142 142

fn=(72)
0x404db7 379 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130 1 0 0 1
+4 * 130 0 130
+4 * 130 0 130
+4 +8 130 0 130
+4 +3 130 130
+4 * 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130 0 130
cfn=(74)
calls=130 0x404f37 -22 
* * 18162 4794 3888 14 3 3 14 3 3 1402 79 256 32
+5 +1 130 130
+1 * 130 130

fn=(126)
0x404be0 424 130 0 130
+1 * 130
+3 * 130 0 130
+2 * 130 0 130
+1 * 130
+4 * 130 0 130
+4 * 130 0 130
+4 * 130 0 130
+4 +4 130 130
+4 * 130
+3 * 130 0 130
cfn=(128)
calls=130 0x404878 277 
* * 1950 780 650 1 0 0 1
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(132)
calls=130 0x404d44 277 
* * 3250 1170 1040 2 0 0 2
+5 * 130
+3 * 130 130
+4 * 130
+3 * 130 0 130
cfn=(132)
calls=130 0x404d44 277 
* * 3250 1170 1040
+5 * 130
+3 * 130
+3 * 130
+3 * 130 0 130
cfn=(138)
calls=130 0x404d5e -49 
* * 20112 5444 4668 1 1 4 1 1 4 1402 74 256
+5 +1 130
+4 * 130 130
+1 * 130 130
+2 * 130 130
+1 * 130 130

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 260 0 260 1 0 0 1
+1 * 260
+3 * 260 0 260
+4 +1 260 260
+4 * 260 260
+1 * 260 260

fn=(110)
0x404380 726 260 0 260 1 0 0 1
+1 * 260
+3 * 260 0 260
+4 * 260 0 260
+4 * 260 260
+4 * 260 260
+3 * 260 260
+4 * 260 0 260
+3 * 260 260
+1 * 260 260

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 260 0 260 1 0 0 1
+1 * 260
+3 * 260 0 260
+4 +1 260 260
+4 * 260 260
+1 * 260 260

fn=(44)
0x404468 726 260 0 260
+1 * 260
+3 * 260 0 260
+4 * 260 0 260
+4 * 260 260
+4 * 260 260
+3 * 260 260
+4 * 260 0 260 1 0 0 1
+3 * 260 260
+1 * 260 260

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 136 0 136 1 0 0 1
+1 * 136
+3 * 136 0 136
+4 * 136 0 136
+4 * 136 136
+1 * 136 136

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 136 0 136 1 0 0 1
+1 * 136
+3 * 136 0 136
+4 * 136 0 136 1 0 0 1
+4 * 136 136
+1 * 136 136

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 +4 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(184)
calls=136 0x40454c -14 
* * 816 272 408 1 0 0 1
+5 +2 136 136
+1 * 136 136

fn=(150)
0x40326c 148 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +3 136 136 0 1 0 0 1
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=136 0x403d1a -29 
* * 2448 816 952 3 0 0 3
+5 +1 136 136
+1 * 136 136

fn=(180)
0x40334a 148 136 0 136
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 * 136 0 136
+4 +3 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(182)
calls=136 0x403dcc -29 
* * 2448 816 952 2 0 0 2
+5 +1 136 136
+1 * 136 136

fn=(152)
0x403d1a 122 136 0 136 1 0 0 1
+1 * 136
+3 * 136
+4 * 136 0 136
+4 * 136 0 136
+4 +4 136 136
+4 * 136 136
+4 * 136
+3 * 136
+3 * 136 0 136
cfn=(154)
calls=136 0x4044f8 -14 
* * 816 272 408 2 0 0 2
+5 +2 136 136
+1 * 136 136

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1730 322 319 0 4 6 0 4 6 240 23 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1551 303 287 0 4 4 0 4 4 212 8 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 65 0 65 1 0 0 1
+1 * 65
+3 * 65
+4 * 65 0 65
+4 * 65 0 65
+4 +1 65 65
+4 * 65
+3 * 65 0 65
cfi=(2)
cfn=(2)
calls=65 0x402d74 645 
* * 845 390 130
+5 * 65
+3 * 65 0 65
+3 +1 65 65
+6 * 65 0 65
+3 * 65 65
+6 * 65 0 65
+3 +1 65 65
+6 * 65 0 65 1 0 0 1
+3 * 65 65
+6 * 65 0 65
+3 +2 65 0 65
+7 * 65
jump=65 +86 * 
* * 
+2 +1 2210 2210
+3 * 2210
+3 * 2210 2210
+4 * 2210
+3 * 2210
+3 * 2210 0 2210
cfi=(2)
cfn=(144)
calls=2210 0x402d9a 770 
* * 24310 11050 6630
+5 * 2210 2210
+4 * 2210 2210
+5 * 2210
+4 * 2210 0 2210
+5 +1 2210 2210
+3 * 2210
+3 * 2210 2210
+4 * 2210
+3 * 2210
+3 * 2210 0 2210
cfi=(2)
cfn=(146)
calls=2210 0x402dba 770 
* * 24310 11050 6630 1 0 0 1
+5 * 2210 2210
+2 * 2210
+4 * 2210 2210
+5 * 2210
+4 * 2210 0 2210
+5 -2 2210 0 2210
+4 * 2210 2210
+3 * 2210
+3 * 2210 2210
+3 * 2210 0 0 0 0 0 0 0 0 2210 66
jcnd=2145/2210 -93 +1 
* * 
-9 * 65 65 0 1 0 0 1
+3 * 65
+3 * 65 65
+3 * 65 0 0 0 0 0 0 0 0 65
jcnd=65/65 -93 +1 
* * 
+2 +4 65 65
+3 * 65
+3 * 65
+4 * 65 65 0 1 0 0 1
+5 * 65
+4 * 65
+3 * 65 0 65
+5 +1 65 65
+3 * 65
+3 * 65
+4 * 65 65
+5 * 65
+4 * 65
+3 * 65 0 65
+5 +1 65 0 65
+7 * 65
jump=65 0x4016ee * 
* * 
+2 +1 2210 2210
+3 * 2210
+3 * 2210 2210
+4 * 2210
+3 * 2210 0 0 1 0 0 1
+3 * 2210 0 2210
cfi=(2)
cfn=(146)
calls=2210 0x402dba 770 
* * 24310 11050 6630
+5 * 2210 2210
+2 * 2210
+4 * 2210 2210
+5 * 2210 0 2210
+5 +1 2210 2210
+3 * 2210
+3 * 2210 2210
+4 * 2210
+3 * 2210
+3 * 2210 0 2210
cfi=(2)
cfn=(144)
calls=2210 0x402d9a 770 
* * 24310 11050 6630
+5 * 2210 2210
+4 * 2210 2210
+5 * 2210 0 2210
+5 +1 2210 2210
+5 * 2210 2210
+5 * 2210 2210
+5 * 2210
+4 * 2210 0 2210
+5 +1 2210 2210
+5 * 2210 2210
+5 * 2210 2210
+5 * 2210
+4 * 2210 0 2210
+5 -4 2210 0 2210
+4 * 2210 2210
+3 * 2210
+3 * 2210 2210
+3 * 2210 0 0 0 0 0 0 0 0 2210 66
jcnd=2145/2210 0x401672 +1 
* * 
-9 * 65 65 0 1 0 0 1
+3 * 65
+3 * 65 65
+3 * 65 0 0 0 0 0 0 0 0 65
jcnd=65/65 0x401672 +1 
* * 
+6 +6 65 65 0 1 0 0 1
+5 * 65 65
+5 * 65 0 65
+5 +2 65 65
+3 +1 65 0 65
+3 * 65 65
+5 * 65 65
+1 * 65 65

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 65
+7 * 65
+7 * 65
+3 * 65
+3 * 65 0 65
cfi=(2)
cfn=(4)
calls=65 0x4030b2 310 
* * 54193 15570 14178 65 17 16 65 17 16 3274 147 258 32
+5 * 65
+7 * 65
+7 * 65
+3 * 65
+3 * 65 0 65
cfi=(2)
cfn=(80)
calls=65 0x402ff4 310 
* * 54164 15624 14019 45 8 18 45 8 18 3294 150 258
+5 * 65 0 0 1 0 0 1
+7 * 65
+7 * 65
+3 * 65
+3 * 65 0 65
cfn=(142)
calls=65 0x401585 -52 
* * 234065 103285 54145 8 0 0 8 0 0 4550 132
+5 * 65 0 65
+8 * 65 65
+6 * 65 0 65
+6 * 65
+7 * 65
+3 * 65 0 65
cfi=(2)
cfn=(148)
calls=65 0x402df4 414 
* * 16276 5111 3759 31 5 0 31 5 0 1735 36 130
+5 * 65
+7 * 65
+3 * 65 0 65 1 0 0 1
cfi=(2)
cfn=(178)
calls=65 0x402e74 414 
* * 16198 5101 3697 7 0 0 7 0 0 1729 9 130
+5 +2 65
+7 * 65
+7 * 65
+3 * 65
+3 * 65 0 65
cfi=(2)
cfn=(4)
calls=65 0x4030b2 310 
* * 53907 15552 14082 2 0 1 2 0 1 3258 64 258
+5 * 65
+7 * 65
+7 * 65
+3 * 65
+3 * 65 0 65
cfi=(2)
cfn=(80)
calls=65 0x402ff4 310 
* * 53388 15561 13857 0 0 2 0 0 2 3189 48 258
+5 * 65 65
+6 * 65 0 0 1 0 0 1
+7 * 65
+7 * 65 0 65
+6 * 65 65
+8 * 65
+3 * 65
+3 * 65 0 65
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=65 0x401719 -33 
* * 109915 45630 25285 4 0 0 4 0 0 2275 66
+5 * 65 0 65
+8 * 65 65
+6 * 65 0 65
+6 * 65
+7 * 65 0 0 1 0 0 1
+3 * 65 0 65
cfi=(2)
cfn=(148)
calls=65 0x402df4 414 
* * 16276 5111 3759 0 0 0 0 0 0 1735 34 130
+5 * 65
+7 * 65
+3 * 65 0 65
cfi=(2)
cfn=(178)
calls=65 0x402e74 414 
* * 16198 5101 3697 0 0 0 0 0 0 1729 7 130
+5 +2 65 65
+7 * 65
+3 * 65 0 65
cfi=(2)
cfn=(2)
calls=65 0x402d74 645 
* * 845 390 130
+5 * 65 65
+6 * 65
+3 * 65
+3 * 65
+3 * 65 65
+7 * 65
+3 * 65 0 0 1 0 0 1
+3 * 65 0 65
cfi=(2)
cfn=(144)
calls=65 0x402d9a 770 
* * 715 325 195
+5 * 65
+3 * 65
+7 * 65
+3 * 65
+3 * 65 0 65
cfi=(2)
cfn=(200)
calls=65 0x402eda 901 
* * 12287 4227 3421 26 9 8 26 9 8 568 21 35
+5 +1 65 65
+7 * 65
+3 * 65 0 65
cfi=(2)
cfn=(10)
calls=65 0x402f54 645 
* * 845 390 130 0 1 0 0 1
+5 * 65 65
+6 * 65
+3 * 65
+3 * 65
+3 * 65 65
+7 * 65 0 0 1 0 0 1
+3 * 65
+3 * 65 0 65
cfi=(2)
cfn=(146)
calls=65 0x402dba 770 
* * 715 325 195
+5 * 65
+3 * 65
+7 * 65
+3 * 65
+3 * 65 0 65
cfi=(2)
cfn=(244)
calls=65 0x402f7a 901 
* * 12492 4258 3457 19 8 13 19 8 13 602 35 35
+5 +1 65 65
+7 * 65
+3 * 65 0 65
cfi=(2)
cfn=(10)
calls=65 0x402f54 645 
* * 845 390 130
+5 * 65 65
+6 * 65
+3 * 65
+3 * 65
+3 * 65 65 0 1 0 0 1
+7 * 65
+3 * 65
+3 * 65 0 65
cfi=(2)
cfn=(146)
calls=65 0x402dba 770 
* * 715 325 195
+5 * 65 65
+2 * 65
+4 * 65 65
+8 * 65 65
+8 * 65 0 65
+8 +1 65 65
+7 * 65
+3 * 65 0 65
cfi=(2)
cfn=(2)
calls=65 0x402d74 645 
* * 845 390 130
+5 * 65 65 0 1 0 0 1
+6 * 65
+3 * 65
+3 * 65
+3 * 65 65
+7 * 65
+3 * 65
+3 * 65 0 65
cfi=(2)
cfn=(144)
calls=65 0x402d9a 770 
* * 715 325 195
+5 * 65 65
+4 * 65 65
+8 * 65
+4 * 65 65
+8 * 65
+3 * 65 0 65
+8 +2 65 0 65
+7 -12 65 65
+8 * 65 65
+7 * 65 0 0 0 0 0 0 0 0 65 1
jcnd=1/65 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 65
+7 * 65
+3 * 65 0 65
cfi=(2)
cfn=(2)
calls=65 0x402d74 645 
* * 845 390 130 2 0 1 2 0 1
+5 * 65
+3 * 65 65
+7 * 65
+3 * 65 0 65
cfi=(2)
cfn=(2)
calls=65 0x402d74 645 
* * 845 390 130 0 1 0 0 1
+5 * 65
+3 * 65 0 0 0 0 0 0 0 0 65
+2 * 65 0 0 1 0 0 1
+5 * 65
jump=65 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 65
+2 * 65 0 0 0 0 0 0 0 0 65
jcnd=65/65 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 65 0 65
+1 * 65
+3 * 65
+4 * 65 0 65
+4 * 65 0 65
+4 * 65 0 65
+5 +1 65 65
+4 * 65
+3 * 65 0 65
cfi=(2)
cfn=(2)
calls=65 0x402d74 645 
* * 845 390 130
+5 * 65
+3 * 65 0 65
+3 +1 65 65 0 1 0 0 1
+6 * 65 0 65
+3 * 65 65
+6 * 65 0 65
+3 +2 65 0 65
+7 * 65
jump=65 +86 * 
* * 
+2 +1 2210 2210
+3 * 2210
+3 * 2210 2210
+4 * 2210
+3 * 2210
+3 * 2210 0 2210
cfi=(2)
cfn=(144)
calls=2210 0x402d9a 770 
* * 24310 11050 6630
+5 * 2210 2210
+4 * 2210 2210
+5 * 2210
+4 * 2210 0 2210
+5 +1 2210 2210
+3 * 2210
+3 * 2210 2210
+4 * 2210
+3 * 2210
+3 * 2210 0 2210
cfi=(2)
cfn=(146)
calls=2210 0x402dba 770 
* * 24310 11050 6630
+5 * 2210 2210
+2 * 2210
+4 * 2210 2210
+5 * 2210
+4 * 2210 0 2210
+5 -2 2210 0 2210
+4 * 2210 2210
+3 * 2210
+3 * 2210 2210
+3 * 2210 0 0 0 0 0 0 0 0 2210 66
jcnd=2145/2210 -93 +1 
* * 
-9 * 65 65 0 1 0 0 1
+3 * 65
+3 * 65 65
+3 * 65 0 0 0 0 0 0 0 0 65
jcnd=65/65 -93 +1 
* * 
+2 +4 65 65
+3 * 65
+3 * 65 0 0 1 0 0 1
+4 * 65 65
+5 * 65
+4 * 65
+3 * 65 0 65
+5 +1 65 65
+3 * 65
+3 * 65
+4 * 65 65
+5 * 65
+4 * 65
+3 * 65 0 65
+5 +1 65 65
+5 * 65 65
+5 * 65 65
+5 * 65 0 0 1 0 0 1
+4 * 65
+3 * 65 0 65
+5 +2 65 65
+3 +1 65 0 65
+3 * 65 65
+5 * 65 65
+1 * 65 65

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 272 0 272 1 0 0 1
+5 0 272 0 272
+5 0 272
+3 0 272 0 272
+5 0 272
+4 0 272 272 0 0 1 0 0 1
+7 0 272 272 0 0 1 0 0 1
+3 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
+6 0 272 272 0 0 1 0 0 1
+7 0 272 272 0 1 1 0 1 1
+4 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
+2 0 272 272 0 0 1 0 0 1
+3 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 +97 0 
* 0 
+18 0 272
+3 0 272
+3 0 272 0 272
cfn=(38) _int_malloc
calls=272 0x3877c79a00 0 
* 0 46989 6728 7374 27 20 33 27 20 33 7127 282
+5 0 272
+3 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
+2 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
+2 0 272
+3 0 272 0 0 0 0 0 0 0 0 272 2
+2 0 272 272
+7 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 +13 0 
* 0 
+13 0 272 0 272
+2 0 272 0 0 0 0 0 0 0 0 272 3
+6 0 272
+3 0 272 272
+4 0 272 272
+5 0 272 272
+5 0 272
+4 0 272 272
+1 0 272 0 0 1 0 0 1
+5 0 272 272 0 0 1 0 0 1
+7 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 +14 0 
* 0 
+14 0 272 0 272 1 0 0 1
+3 0 272 0 0 0 0 0 0 0 0 272
+6 0 272
jump=272 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 272 0 272 1 0 0 1
+2 0 272
+3 0 272
+3 0 272 0 272
+2 0 272
+3 0 272 0 272
+1 0 272
+3 0 272 0 272
+1 0 272
+3 0 272
+4 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
+6 0 272
+4 0 272
+3 0 272 0 0 0 0 0 0 0 0 272 4
jcnd=10/272 0x3877c838d1 0 
* 0 
+2 0 262
+3 0 262
+3 0 262
+3 0 262
+3 0 262
+3 0 262 0 0 0 0 0 0 0 0 262
jcnd=262/262 +41 0 
* 0 
+41 0 262 0 0 1 0 0 1
+3 0 262 0 0 0 0 0 0 0 0 262
jcnd=262/262 0x3877c839c0 0 
* 0 
+24 0 262
+3 0 262
+4 0 262
+3 0 262
+3 0 262
+3 0 262
+3 0 262
+3 0 262 0 0 0 0 0 0 0 0 262 127
jcnd=138/262 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 134
+10 0 134 134 0 0 2 0 0 2
+3 0 134
+4 0 134 0 134
+3 0 134
+4 0 134
+4 0 134 0 0 0 0 0 0 0 0 134
jcnd=134/134 -18 0 
* 0 
-18 0 458 458
+3 0 458
+4 0 458 0 458
+3 0 458
+4 0 458
+4 0 458 0 0 0 0 0 0 0 0 458 8
jcnd=324/458 -18 0 
* 0 
+2 0 272
+4 0 272
+3 0 272 272
+1 0 272 272
+1 0 272 272
+2 0 272 272 0 1 0 0 1
+2 0 272 272
0x3877c839c0 0 262 0 0 1 0 0 1
+3 0 262
+3 0 262
+3 0 262
+4 0 262 0 262 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=262 0x3877c89b20 0 
* 0 14610 4996 4472 6 1 9 6 1 9 708 19 262 32
+5 0 262
jump=262 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 272 272 0 1 1 0 1 1
+7 0 272 272 0 0 1 0 0 1
+3 0 272
+3 0 272 0 0 1 0 0 1 0 0 272
+6 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
+6 0 272 272
+4 0 272
+4 0 272
+2 0 272 0 0 0 0 0 0 0 0 272
+2 0 272
+2 0 272
+7 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 +14 0 
* 0 
+14 0 272
+2 0 272
cfn=(170) _int_free
calls=272 0x3877c78650 0 
* 0 24582 6364 3880 17 1 0 17 1 0 5574 92

fn=(170)
0x3877c78650 0 272 0 272 1 0 0 1
+2 0 272 0 272
+2 0 272 0 272
+2 0 272
+3 0 272 0 272
+2 0 272 0 272
+1 0 272 0 272
+1 0 272
+3 0 272
+4 0 272 272
+4 0 272 0 272
+4 0 272
+3 0 272
+4 0 272
+3 0 272
+3 0 272
+3 0 272 0 0 1 0 0 1 0 0 272
+6 0 272
+4 0 272 0 0 0 0 0 0 0 0 272
+6 0 272
+4 0 272 0 0 0 0 0 0 0 0 272
+6 0 272 272
+7 0 272 0 0 0 0 0 0 0 0 272 2
jcnd=148/272 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 148
+2 0 148 0 0 0 0 0 0 0 0 148
+6 0 148 148 0 1 0 0 1
+4 0 148
+3 0 148
+2 0 148 0 0 0 0 0 0 0 0 148
jcnd=148/148 0x3877c78a40 0 
* 0 
+6 0 148 148
+4 0 148
+3 0 148 0 0 0 0 0 0 0 0 148
+6 0 148 148
+5 0 148
+4 0 148 0 0 0 0 0 0 0 0 148
jcnd=148/148 0x3877c7907c 0 
* 0 
+6 0 148 148
+5 0 148
+4 0 148 0 0 0 0 0 0 0 0 148
+6 0 148
+4 0 148 0 0 1 0 0 1 0 0 148
+6 0 148
+4 0 148 148
+7 0 148 0 0 0 0 0 0 0 0 148
+6 0 148 148
+6 0 148
+2 0 148 0 0 0 0 0 0 0 0 148
+6 0 148 148
+4 0 148 0 0 0 0 0 0 0 0 148 2
jcnd=146/148 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 148 148 0 1 0 0 1
+4 0 148 0 0 0 0 0 0 0 0 148
+6 0 148 148
+6 0 148 0 0 1 0 0 1 0 0 148 22
jcnd=16/148 0x3877c78a78 0 
* 0 
+6 0 132 132
+5 0 132 132
+5 0 132 132
+4 0 132 0 0 0 0 0 0 0 0 132
+6 0 132 132
+4 0 132 0 0 0 0 0 0 0 0 132
+6 0 132 132
+9 0 132 0 132
+4 0 132 0 132
+4 0 132 0 0 0 0 0 0 0 0 132 4
jcnd=124/132 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 132
+3 0 132
+4 0 132 132
+4 0 132 132
+4 0 132 0 0 0 0 0 0 0 0 132
-12 0 16
+4 0 16 16
+4 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 148
+7 0 148 0 148
+4 0 148 0 148
+4 0 148 0 0 0 0 0 0 0 0 148 60
jcnd=80/148 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 80 0 80
+4 0 80
+3 0 80 0 80
+4 0 80
+4 0 80 0 80
+4 0 80 0 80
+4 0 80
+7 0 80 0 0 0 0 0 0 0 0 80
jcnd=80/80 0x3877c78b20 0 
* 0 
0x3877c78a40 0 148 0 0 1 0 0 1
+5 0 148 148
+4 0 148 148
+7 0 148 0 0 0 0 0 0 0 0 148
jcnd=148/148 +16 0 
* 0 
+16 0 148 0 148
+5 0 148 0 0 0 0 0 0 0 0 148
+6 0 148
+3 0 148
jump=148 0x3877c7878f 0 
* 0 
+10 0 16 0 16
+6 0 16 0 0 1 0 0 1
jump=16 0x3877c78885 0 
* 0 
0x3877c78b20 0 148 148 0 1 0 0 1
+4 0 148
+2 0 148 0 0 0 0 0 0 0 0 148
+6 0 148 148
+7 0 148 0 0 0 0 0 0 0 0 148
jcnd=148/148 +15 0 
* 0 
+15 0 148 0 148 1 0 0 1
+4 0 148 0 0 0 0 0 0 0 0 148
+6 0 148
+4 0 148 148
+1 0 148 148
+1 0 148 148
+2 0 148 148
+2 0 148 148
+2 0 148 148
+2 0 148 148
0x3877c7907c 0 148 148 0 1 1 0 1 1
+4 0 148 0 0 1 0 0 1
+7 0 148
+4 0 148
+3 0 148
+3 0 148 0 0 0 0 0 0 0 0 148
jcnd=148/148 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 262 0 0 1 0 0 1
+7 0 262
+3 0 262
+3 0 262 262 0 0 1 0 0 1
+4 0 262
+4 0 262 0 0 0 0 0 0 0 0 0 0 262 32
jump=28 0x3877c89be8 0 
* 0 
jump=38 0x3877c89bd0 0 
* 0 
jump=32 0x3877c89bb8 0 
* 0 
jump=32 +11 0 
* 0 
jump=32 0x3877c89c48 0 
* 0 
jump=34 0x3877c89c30 0 
* 0 
jump=32 0x3877c89c18 0 
* 0 
jump=34 0x3877c89c00 0 
* 0 
+11 0 32 32
+3 0 32
+4 0 32
+4 0 32 32
+4 0 32
+4 0 32 0 32
+4 0 32
+9 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-40 0 510 510
+4 0 510 0 510
+4 0 510 510
+4 0 510 0 510
+4 0 510 510
+4 0 510 0 510 0 0 1 0 0 1
+4 0 510 510
+4 0 510 0 510
+4 0 510
+4 0 510
+4 0 510 0 0 0 0 0 0 0 0 510 15
jcnd=226/510 0x3877c89c60 0 
* 0 
-32 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
jcnd=10/34 0x3877c89c60 0 
* 0 
-24 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-16 0 34 34 0 1 0 0 1
+4 0 34 0 34
+4 0 34 0 0 1 0 0 1
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34 4
jcnd=10/34 0x3877c89c60 0 
* 0 
+6 0 380
+4 0 380 380
+3 0 380 0 380 0 0 1 0 0 1
+3 0 380 380
+4 0 380 0 380 0 0 3 0 0 3
+4 0 380 380
+4 0 380 0 380 0 0 4 0 0 4
+4 0 380 380
+4 0 380 0 380
+4 0 380
jump=380 -80 0 
* 0 
-30 0 28 28
+3 0 28 0 28
+3 0 28 28
+4 0 28 0 28
+4 0 28 28
+4 0 28 0 28
+4 0 28 28
+4 0 28 0 28
+4 0 28
jump=28 -80 0 
* 0 
-24 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38
jump=38 -80 0 
* 0 
-16 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
+8 0 32 32
+3 0 32
+4 0 32 0 0 1 0 0 1
+4 0 32
+4 0 32
jump=32 -39 0 
* 0 
+9 0 38
+3 0 38 0 0 0 0 0 0 0 0 38
+6 0 38 38
+3 0 38
+4 0 38
jump=38 -72 0 
* 0 
+8 0 28
+4 0 28 28
+3 0 28 0 0 0 0 0 0 0 0 28
+2 0 28
+4 0 28
jump=28 -99 0 
* 0 
+11 0 34 34 0 1 0 0 1
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b78 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b70 0 
* 0 
+9 0 34 34
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b68 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b60 0 
* 0 
+9 0 262 0 262 1 0 0 1
+3 0 262 262

fn=(104) alloc_perturb
0x3877c77180 0 162 162 0 1 0 0 1
+6 0 162
+2 0 162 0 0 0 0 0 0 0 0 162
+2 0 162 162

fn=(38)
0x3877c79a00 0 272 0 272 1 0 0 1
+2 0 272
+3 0 272 0 272
+2 0 272 0 272
+2 0 272 0 272 0 0 1 0 0 1
+2 0 272
+3 0 272 0 272
+1 0 272 0 272
+1 0 272
+4 0 272
+4 0 272 0 0 0 0 0 0 0 0 272
+6 0 272
+4 0 272
+6 0 272
+3 0 272
+4 0 272
+4 0 272
+4 0 272
+3 0 272 0 0 0 0 0 0 0 0 272
+6 0 272 272 0 1 1 0 1 1
+7 0 272 0 0 0 0 0 0 0 0 272 5
jcnd=150/272 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 110 110
+6 0 110
+4 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+3 0 110
+4 0 110 110
+1 0 110 110
+1 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
-14 0 162
+4 0 162 162
+1 0 162 162
+1 0 162 162
+2 0 162 162
+2 0 162 162
+2 0 162 162
+2 0 162 162
+7 0 167
+7 0 167 0 0 1 0 0 1 0 0 167
+2 0 167
+3 0 167
+5 0 167
+3 0 167
+4 0 167 0 167
+4 0 167
+2 0 167
+5 0 167 167 0 0 5 0 0 5
+4 0 167
+3 0 167 0 0 0 0 0 0 0 0 167
jcnd=167/167 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 167 0 0 1 0 0 1
+3 0 167
+3 0 167
+3 0 167
+4 0 167
+3 0 167
+4 0 167 0 167
+5 0 167
+3 0 167 0 167
+4 0 167 0 167
+4 0 167 0 167
+5 0 167
+3 0 167
+3 0 167
+3 0 167
+3 0 167
+4 0 167
+4 0 167 0 0 1 0 0 1
+4 0 167 0 167
+4 0 167
+4 0 167 0 167
+5 0 167 0 167
+5 0 167
+3 0 167
+3 0 167 0 167
+5 0 167
+5 0 167
+3 0 167 0 167
+4 0 167 0 167
+4 0 167
+6 0 167 0 167
+4 0 167 0 167
+5 0 167 0 0 1 0 0 1
+3 0 167
+3 0 167
+3 0 167
jump=167 +87 0 
* 0 
+8 0 134
+3 0 134
+4 0 134
+2 0 134
+2 0 134
+3 0 134
+3 0 134
+3 0 134
+2 0 134
+2 0 134
+5 0 134
+2 0 134 134 0 0 1 0 0 1
+4 0 134
+3 0 134
+4 0 134 0 134
+4 0 134 0 134 0 0 1 0 0 1
+8 0 134
+7 0 134 0 134
+4 0 134 0 134 0 0 1 0 0 1
+4 0 134 0 134
+4 0 134 0 0 0 0 0 0 0 0 134
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 367 367 0 1 0 0 1
+4 0 367
+3 0 367 0 0 0 0 0 0 0 0 367 10
jcnd=143/367 0x3877c79ef0 0 
* 0 
+6 0 224 224
+4 0 224 224 0 0 1 0 0 1
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
+6 0 224 224 0 1 1 0 1 1
+7 0 224 0 0 0 0 0 0 0 0 224
+6 0 224
+4 0 224
+7 0 224 0 0 0 0 0 0 0 0 224
+2 0 224
+3 0 224 0 0 0 0 0 0 0 0 224 60
jcnd=157/224 0x3877c79e28 0 
* 0 
+6 0 205
+3 0 205 0 205
+4 0 205 0 205
+5 0 205 0 0 0 0 0 0 0 0 205 5
jcnd=5/205 0x3877c7a090 0 
* 0 
+6 0 200
+7 0 200 0 0 0 0 0 0 0 0 200 6
jcnd=134/200 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 3
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 157 157 0 1 0 0 1
+4 0 157
+3 0 157 0 0 0 0 0 0 0 0 157 8
jcnd=75/157 0x3877c79ce1 0 
* 0 
+6 0 82 82
+5 0 82 0 0 0 0 0 0 0 0 82 5
jcnd=63/82 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 143 0 0 1 0 0 1
+7 0 143
+3 0 143 0 0 0 0 0 0 0 0 143
+6 0 143 143 0 1 0 0 1
+4 0 143
+3 0 143
+3 0 143
+2 0 143
+4 0 143
+3 0 143
+3 0 143
+2 0 143
+2 0 143
+2 0 143
+2 0 143 143
+8 0 143
+5 0 143
+5 0 143
+2 0 143 0 0 0 0 0 0 0 0 143
-2 0 70
+2 0 70 0 0 0 0 0 0 0 0 70
+2 0 213
+2 0 213 0 0 0 0 0 0 0 0 213 8
jcnd=141/213 +64 0 
* 0 
+2 0 72
+8 0 72
+3 0 72
+3 0 72 0 0 0 0 0 0 0 0 72
-6 0 67
+3 0 67
+3 0 67 0 0 0 0 0 0 0 0 67
+2 0 139
+2 0 139 139
+8 0 139
+2 0 139 0 0 0 0 0 0 0 0 139 3
jcnd=67/139 -20 0 
* 0 
+2 0 72
+2 0 72
+5 0 72
+3 0 72
+3 0 72
+2 0 72
+2 0 72
+5 0 72 0 0 0 0 0 0 0 0 72
+2 0 72
+2 0 72
+4 0 72
+2 0 72
+2 0 72 0 0 0 0 0 0 0 0 72 5
jcnd=11/72 -8 0 
* 0 
-8 0 541
+4 0 541
+2 0 541
+2 0 541 0 0 0 0 0 0 0 0 541 52
jcnd=408/541 -8 0 
* 0 
-2 0 141 0 0 1 0 0 1
+2 0 141 0 0 0 0 0 0 0 0 141 5
jcnd=122/141 -8 0 
* 0 
+2 0 213 213 0 0 4 0 0 4
+4 0 213 0 0 1 0 0 1
+3 0 213 0 0 0 0 0 0 0 0 213 66
jcnd=143/213 0x3877c7a1cf 0 
* 0 
+6 0 70
+2 0 70
+4 0 70
+2 0 70
+2 0 70
+2 0 70 0 70
+8 0 70
jump=70 0x3877c79f30 0 
* 0 
0x3877c7a090 0 5 0 0 1 0 0 1
+7 0 5 0 5
+6 0 5
+3 0 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 143 143 0 1 1 0 1 1
+4 0 143 143
+4 0 143
+3 0 143 143
+4 0 143
+4 0 143
+3 0 143
+3 0 143 143
+4 0 143 0 0 0 0 0 0 0 0 143
+6 0 143 143
+4 0 143 0 0 0 0 0 0 0 0 143
+6 0 143 143 0 1 0 0 1
+8 0 143 0 143
+4 0 143 0 143
+4 0 143 0 0 0 0 0 0 0 0 143 5
jcnd=75/143 +38 0 
* 0 
+2 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 75
+4 0 75 0 0 0 0 0 0 0 0 75 4
jcnd=9/75 0x3877c7a2e3 0 
* 0 
+6 0 134 134
+4 0 134 134 0 1 0 0 1
+4 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+4 0 134
+7 0 134 0 134 0 0 7 0 0 7
+4 0 134 0 134
+4 0 134 0 134
+4 0 134 0 134
+4 0 134 0 0 0 0 0 0 0 0 134
+2 0 134 0 134
+5 0 134
+7 0 134 0 0 0 0 0 0 0 0 134 4
jcnd=127/134 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 127 0 0 1 0 0 1
+7 0 127 0 127
+4 0 127
+3 0 127
+3 0 127
+4 0 127
+3 0 127
+4 0 127
+3 0 127
+3 0 127
+4 0 127 0 127
+4 0 127 0 127 0 0 1 0 0 1
+4 0 127
jump=127 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 9
+7 0 9 0 9
+6 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +7 0 
* 0 
+7 0 143
+4 0 143 0 0 1 0 0 1
+3 0 143
+3 0 143 0 143
cfn=(104)
calls=143 0x3877c77180 0 
* 0 572 286 0 1 0 0 1 0 0 143
+5 0 143
+3 0 143
jump=143 0x3877c79ae3 0 
* 0 

totals: 665944 245399 160867 221 51 60 221 51 60 28135 750 1622 32
