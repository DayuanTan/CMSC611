version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 581


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 726008109 - 726209793
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 460 0 0 1 0 0 1
+3 0 460 0 0 0 0 0 0 0 0 460
+2 0 460
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=460 0x3877c7b8b0 0 
* 0 49908 12656 6552 21 3 0 21 3 0 11950 199
* 0 460 460 0 1 1 0 1 1 0 0 0 460

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 460 0 460 1 0 0 1
+1 0 460
+5 0 460
+3 0 460 0 460
+1 0 460
+4 0 460 0 0 1 0 0 1
+3 0 460
+4 0 460
+3 0 460 0 460 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=460 0x3877c7aa50 0 
* 0 108683 17141 16459 34 31 40 34 31 40 17826 533
* 0 460 460 0 1 1 0 1 1 0 0 0 460
+5 0 460
+3 0 460 0 0 0 0 0 0 0 0 460
jcnd=460/460 +96 0 
* 0 
+96 0 460 0 0 1 0 0 1
+4 0 460 460
+1 0 460 460
+1 0 460 460

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 112 0 112 1 0 0 1
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112
+3 * 112 0 112
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=112 0x402d74 645 
* * 1456 672 224
+5 * 112
+3 * 112 0 112
+3 +1 112 112
+6 * 112 0 112
+3 * 112 112
+6 * 112 0 112
+3 +1 112 112
+6 * 112 0 112 1 0 0 1
+3 * 112 112
+6 * 112 0 112
+3 +2 112 0 112
+7 * 112
jump=112 +86 * 
* * 
+2 +1 6440 6440
+3 * 6440
+3 * 6440 6440
+4 * 6440
+3 * 6440
+3 * 6440 0 6440
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=6440 0x402d9a 770 
* * 70840 32200 19320
+5 * 6440 6440
+4 * 6440 6440
+5 * 6440
+4 * 6440 0 6440
+5 +1 6440 6440
+3 * 6440
+3 * 6440 6440
+4 * 6440
+3 * 6440
+3 * 6440 0 6440
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=6440 0x402dba 770 
* * 70840 32200 19320 1 0 0 1
+5 * 6440 6440
+2 * 6440
+4 * 6440 6440
+5 * 6440
+4 * 6440 0 6440
+5 -2 6440 0 6440
+4 * 6440 6440
+3 * 6440
+3 * 6440 6440
+3 * 6440 0 0 0 0 0 0 0 0 6440 113
jcnd=6328/6440 -93 +1 
* * 
-9 * 112 112 0 1 0 0 1
+3 * 112
+3 * 112 112
+3 * 112 0 0 0 0 0 0 0 0 112
jcnd=112/112 -93 +1 
* * 
+2 +4 112 112
+3 * 112
+3 * 112
+4 * 112 112 0 1 0 0 1
+5 * 112
+4 * 112
+3 * 112 0 112
+5 +1 112 112
+3 * 112
+3 * 112
+4 * 112 112
+5 * 112
+4 * 112
+3 * 112 0 112
+5 +1 112 0 112
+7 * 112
jump=112 0x4016ee * 
* * 
+2 +1 6440 6440
+3 * 6440
+3 * 6440 6440
+4 * 6440
+3 * 6440 0 0 1 0 0 1
+3 * 6440 0 6440
cfi=(2)
cfn=(146)
calls=6440 0x402dba 770 
* * 70840 32200 19320
+5 * 6440 6440
+2 * 6440
+4 * 6440 6440
+5 * 6440 0 6440
+5 +1 6440 6440
+3 * 6440
+3 * 6440 6440
+4 * 6440
+3 * 6440
+3 * 6440 0 6440
cfi=(2)
cfn=(144)
calls=6440 0x402d9a 770 
* * 70840 32200 19320
+5 * 6440 6440
+4 * 6440 6440
+5 * 6440 0 6440
+5 +1 6440 6440
+5 * 6440 6440
+5 * 6440 6440
+5 * 6440
+4 * 6440 0 6440
+5 +1 6440 6440
+5 * 6440 6440
+5 * 6440 6440
+5 * 6440
+4 * 6440 0 6440
+5 -4 6440 0 6440
+4 * 6440 6440
+3 * 6440
+3 * 6440 6440
+3 * 6440 0 0 0 0 0 0 0 0 6440 113
jcnd=6328/6440 0x401672 +1 
* * 
-9 * 112 112 0 1 0 0 1
+3 * 112
+3 * 112 112
+3 * 112 0 0 0 0 0 0 0 0 112
jcnd=112/112 0x401672 +1 
* * 
+6 +6 112 112 0 1 0 0 1
+5 * 112 112
+5 * 112 0 112
+5 +2 112 112
+3 +1 112 0 112
+3 * 112 112
+5 * 112 112
+1 * 112 112

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 112
+7 * 112
+7 * 112
+3 * 112
+3 * 112 0 112
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=112 0x4030b2 310 
* * 98920 28359 26087 63 22 18 63 22 18 6034 266 446 55
+5 * 112
+7 * 112
+7 * 112
+3 * 112
+3 * 112 0 112
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=112 0x402ff4 310 
* * 99463 28343 25661 50 11 24 50 11 24 6184 273 446
+5 * 112 0 0 1 0 0 1
+7 * 112
+7 * 112
+3 * 112
+3 * 112 0 112
cfn=(142)
calls=112 0x401585 -52 
* * 677040 299040 156464 8 0 0 8 0 0 13104 226
+5 * 112 0 112
+8 * 112 112
+6 * 112 0 112
+6 * 112
+7 * 112
+3 * 112 0 112
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=112 0x402df4 414 
* * 27922 8762 6321 33 5 0 33 5 0 3028 84 224
+5 * 112
+7 * 112
+3 * 112 0 112 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=112 0x402e74 414 
* * 28711 9076 6513 7 0 0 7 0 0 3268 16 224
+5 +2 112
+7 * 112
+7 * 112
+3 * 112
+3 * 112 0 112
cfi=(2)
cfn=(4)
calls=112 0x4030b2 310 
* * 98528 28333 25978 0 1 1 0 1 1 5998 127 446
+5 * 112
+7 * 112
+7 * 112
+3 * 112
+3 * 112 0 112
cfi=(2)
cfn=(80)
calls=112 0x402ff4 310 
* * 98375 28267 25476 0 0 0 0 0 0 6014 101 446
+5 * 112 112
+6 * 112 0 0 1 0 0 1
+7 * 112
+7 * 112 0 112
+6 * 112 112
+8 * 112
+3 * 112
+3 * 112 0 112
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=112 0x401719 -33 
* * 315728 131264 72520 4 0 0 4 0 0 6552 113
+5 * 112 0 112
+8 * 112 112
+6 * 112 0 112
+6 * 112
+7 * 112 0 0 1 0 0 1
+3 * 112 0 112
cfi=(2)
cfn=(148)
calls=112 0x402df4 414 
* * 27922 8762 6321 0 0 0 0 0 0 3028 81 224
+5 * 112
+7 * 112
+3 * 112 0 112
cfi=(2)
cfn=(178)
calls=112 0x402e74 414 
* * 28711 9076 6513 0 0 0 0 0 0 3268 12 224
+5 +2 112 112
+7 * 112
+3 * 112 0 112
cfi=(2)
cfn=(2)
calls=112 0x402d74 645 
* * 1456 672 224
+5 * 112 112
+6 * 112
+3 * 112
+3 * 112
+3 * 112 112
+7 * 112
+3 * 112 0 0 1 0 0 1
+3 * 112 0 112
cfi=(2)
cfn=(144)
calls=112 0x402d9a 770 
* * 1232 560 336
+5 * 112
+3 * 112
+7 * 112
+3 * 112
+3 * 112 0 112
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=112 0x402eda 901 
* * 15368 5454 4335 28 10 10 28 10 10 668 25 35
+5 +1 112 112
+7 * 112
+3 * 112 0 112
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=112 0x402f54 645 
* * 1456 672 224 0 1 0 0 1
+5 * 112 112
+6 * 112
+3 * 112
+3 * 112
+3 * 112 112
+7 * 112 0 0 1 0 0 1
+3 * 112
+3 * 112 0 112
cfi=(2)
cfn=(146)
calls=112 0x402dba 770 
* * 1232 560 336
+5 * 112
+3 * 112
+7 * 112
+3 * 112
+3 * 112 0 112
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=112 0x402f7a 901 
* * 15443 5477 4344 19 9 19 19 9 19 686 30 35
+5 +1 112 112
+7 * 112
+3 * 112 0 112
cfi=(2)
cfn=(10)
calls=112 0x402f54 645 
* * 1456 672 224
+5 * 112 112
+6 * 112
+3 * 112
+3 * 112
+3 * 112 112 0 1 0 0 1
+7 * 112
+3 * 112
+3 * 112 0 112
cfi=(2)
cfn=(146)
calls=112 0x402dba 770 
* * 1232 560 336
+5 * 112 112
+2 * 112
+4 * 112 112
+8 * 112 112
+8 * 112 0 112
+8 +1 112 112
+7 * 112
+3 * 112 0 112
cfi=(2)
cfn=(2)
calls=112 0x402d74 645 
* * 1456 672 224
+5 * 112 112 0 1 0 0 1
+6 * 112
+3 * 112
+3 * 112
+3 * 112 112
+7 * 112
+3 * 112
+3 * 112 0 112
cfi=(2)
cfn=(144)
calls=112 0x402d9a 770 
* * 1232 560 336
+5 * 112 112
+4 * 112 112
+8 * 112
+4 * 112 112
+8 * 112
+3 * 112 0 112
+8 +2 112 0 112
+7 -12 112 112
+8 * 112 112
+7 * 112 0 0 0 0 0 0 0 0 112 1
jcnd=1/112 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 112
+7 * 112
+3 * 112 0 112
cfi=(2)
cfn=(2)
calls=112 0x402d74 645 
* * 1456 672 224 2 0 1 2 0 1
+5 * 112
+3 * 112 112
+7 * 112
+3 * 112 0 112
cfi=(2)
cfn=(2)
calls=112 0x402d74 645 
* * 1456 672 224 0 1 0 0 1
+5 * 112
+3 * 112 0 0 0 0 0 0 0 0 112
+2 * 112 0 0 1 0 0 1
+5 * 112
jump=112 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 112
+2 * 112 0 0 0 0 0 0 0 0 112
jcnd=112/112 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+5 +1 112 112
+4 * 112
+3 * 112 0 112
cfi=(2)
cfn=(2)
calls=112 0x402d74 645 
* * 1456 672 224
+5 * 112
+3 * 112 0 112
+3 +1 112 112 0 1 0 0 1
+6 * 112 0 112
+3 * 112 112
+6 * 112 0 112
+3 +2 112 0 112
+7 * 112
jump=112 +86 * 
* * 
+2 +1 6440 6440
+3 * 6440
+3 * 6440 6440
+4 * 6440
+3 * 6440
+3 * 6440 0 6440
cfi=(2)
cfn=(144)
calls=6440 0x402d9a 770 
* * 70840 32200 19320
+5 * 6440 6440
+4 * 6440 6440
+5 * 6440
+4 * 6440 0 6440
+5 +1 6440 6440
+3 * 6440
+3 * 6440 6440
+4 * 6440
+3 * 6440
+3 * 6440 0 6440
cfi=(2)
cfn=(146)
calls=6440 0x402dba 770 
* * 70840 32200 19320
+5 * 6440 6440
+2 * 6440
+4 * 6440 6440
+5 * 6440
+4 * 6440 0 6440
+5 -2 6440 0 6440
+4 * 6440 6440
+3 * 6440
+3 * 6440 6440
+3 * 6440 0 0 0 0 0 0 0 0 6440 113
jcnd=6328/6440 -93 +1 
* * 
-9 * 112 112 0 1 0 0 1
+3 * 112
+3 * 112 112
+3 * 112 0 0 0 0 0 0 0 0 112
jcnd=112/112 -93 +1 
* * 
+2 +4 112 112
+3 * 112
+3 * 112 0 0 1 0 0 1
+4 * 112 112
+5 * 112
+4 * 112
+3 * 112 0 112
+5 +1 112 112
+3 * 112
+3 * 112
+4 * 112 112
+5 * 112
+4 * 112
+3 * 112 0 112
+5 +1 112 112
+5 * 112 112
+5 * 112 112
+5 * 112 0 0 1 0 0 1
+4 * 112
+3 * 112 0 112
+5 +2 112 112
+3 +1 112 0 112
+3 * 112 112
+5 * 112 112
+1 * 112 112

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224 1 0 0 1
+4 +1 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=224 0x4049d4 -35 
* * 1344 448 672 1 0 0 1
+5 * 224 224
+1 * 224 224

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 224
+4 * 224
+3 * 224 0 224
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=224 0x404520 -35 
* * 1120 448 448
+5 * 224 224
+1 * 224 224

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=224 0x404a28 -35 
* * 1344 448 672 1 0 1 1 0 1
+5 * 224 224
+1 * 224 224

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 224
+4 * 224
+3 * 224 0 224
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=224 0x4044cc -35 
* * 1120 448 448
+5 * 224 224
+1 * 224 224

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+4 * 224 224
+4 * 224 224
+1 * 224 224

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=112 0x40406a -87 
* * 2688 896 1008 0 8 7 0 8 7 112
+5 * 112 112
+1 * 112 112

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 224 0 224
+1 * 224
+3 * 224 0 224
+4 * 224 224
+4 * 224 224
+1 * 224 224

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=112 0x403df2 -87 
* * 2688 896 1008 0 7 4 0 7 4 112
+5 * 112 112
+1 * 112 112

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 284 0 284
+1 * 284
+3 * 284 0 284
+4 +1 284 284
+4 * 284 284
+1 * 284 284

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+4 +1 448 448 0 1 0 0 1
+4 * 448 448
+1 * 448 448

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 284 0 284
+1 * 284
+3 * 284 0 284 0 0 1 0 0 1
+4 +1 284 284
+4 * 284 284
+1 * 284 284

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 +1 448
+4 * 448
+3 * 448 0 448
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=448 0x404ffe 790 
* * 2688 1344 896 1 0 0 1
+5 * 448 448
+3 * 448 448
+1 * 448 448

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+4 +1 448 448
+4 * 448 448
+1 * 448 448

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 +1 448
+4 * 448
+3 * 448 0 448 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=448 0x40500c 790 
* * 2688 1344 896 1 0 0 1
+5 * 448 448
+3 * 448 448
+1 * 448 448

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 224 0 224
+1 * 224
+3 * 224 0 224
+4 * 224 0 224
+4 * 224 224
+4 * 224 224
+1 * 224 224

fl=(5)
fn=(28)
0x404992 113 242 0 242 1 0 0 1
+1 * 242
+3 * 242 0 242
+4 +1 242
+10 * 242 242
+1 * 242 242

fn=(176)
0x4044cc 86 224 0 224
+1 * 224
+3 * 224 0 224
+4 * 224 224
+1 * 224 224

fn=(224)
0x403df2 129 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112
+3 * 112
+5 * 112 0 112
cfi=(16)
cfn=(226)
calls=112 0x402d61 -20 
* * 784 336 336
+5 * 112
+3 * 112 0 0 0 0 0 0 0 0 112
+2 * 112 112
+4 * 112 112 0 0 7 0 0 7
+2 * 112 0 112 0 0 4 0 0 4
+2 * 112 112
+1 * 112 112

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +1 230 230
+4 * 230
+3 * 230 0 230
cob=(5)
cfi=(8)
cfn=(164)
calls=230 0x387e4bb2f0 0 
* * 25072 6238 3082 23 4 0 23 4 0 5962 167 230
* * 230 230 0 1 1 0 1 1 0 0 0 230
+5 * 230 230
+1 * 230 230

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +1 230 230
+4 * 230
+3 * 230 0 230
cob=(5)
cfi=(8)
cfn=(164)
calls=230 0x387e4bb2f0 0 
* * 26676 6878 3470 0 0 0 0 0 0 6448 32 230
* * 230 230 0 0 0 0 0 0 0 0 0 230
+5 * 230 230
+1 * 230 230

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 230 0 230 1 0 0 1
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +2 230 230
+4 * 230
+3 * 230 0 230
cfn=(102)
calls=230 0x4048de +12 
* * 1380 460 460 1 0 0 1
+5 * 230 230
+4 * 230 0 0 1 0 0 1
+3 * 230
+2 * 230 0 0 0 0 0 0 0 0 230
jcnd=230/230 +7 +3 
* * 
+7 +3 230 230
+4 * 230
+4 * 230
+3 * 230 0 230
cob=(5)
cfi=(8)
cfn=(32)
calls=230 0x387e4bd0b0 0 
* * 58192 9444 8453 25 13 22 25 13 22 9220 261 230
* * 230 230 0 0 0 0 0 0 0 0 0 230
+5 +1 230 230
+1 * 230 230

fn=(18)
0x404a28 81 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224 0 0 1 0 0 1
+4 * 224 0 224
+4 * 224 224
+1 * 224 224

fn=(92)
0x4049d4 81 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+4 * 224 0 224
+4 * 224 224
+1 * 224 224

fn=(196)
0x404520 86 224 0 224
+1 * 224
+3 * 224 0 224
+4 * 224 224
+1 * 224 224

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 230 0 230 1 0 0 1
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230 1 0 0 1
+4 +2 230 230
+4 * 230
+3 * 230 0 230
cfn=(28)
calls=230 0x404992 +12 
* * 1380 460 460 1 0 0 1
+5 * 230 230
+4 * 230
+3 * 230
+2 * 230 0 0 0 0 0 0 0 0 230
jcnd=230/230 +7 +3 
* * 
+7 +3 230 230
+4 * 230
+4 * 230
+3 * 230 0 230
cob=(5)
cfi=(8)
cfn=(32)
calls=230 0x387e4bd0b0 0 
* * 57851 9537 9386 13 19 19 13 19 19 9066 272 230
* * 230 230 0 1 1 0 1 1 0 0 0 230
+5 +1 230 230
+1 * 230 230

fn=(102)
0x4048de 113 242 0 242 1 0 0 1
+1 * 242
+3 * 242 0 242
+4 +1 242
+10 * 242 242
+1 * 242 242

fn=(266)
0x40406a 129 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112
+3 * 112
+5 * 112 0 112
cfi=(16)
cfn=(226)
calls=112 0x402d61 -20 
* * 784 336 336
+5 * 112
+3 * 112 0 0 0 0 0 0 0 0 112
+2 * 112 112
+4 * 112 112 0 0 8 0 0 8
+2 * 112 0 112 0 0 7 0 0 7
+2 * 112 112
+1 * 112 112

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=224 0x404484 107 
* * 80314 25220 23880 25 3 4 25 3 4 2736 139 444 55
+5 * 224 224
+1 * 224 224

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +2 224 224 0 1 0 0 1
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=224 0x404a36 450 
* * 74042 22980 21640 24 3 4 24 3 4 2736 139 444 55
+5 * 224 224
+1 * 224 224

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=224 0x40439c 107 
* * 80314 25220 23880 7 1 5 7 1 5 2736 125 444
+5 * 224 224
+1 * 224 224

fn=(116)
0x40439c 107 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +10 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=224 0x4047d7 -26 
* * 77178 24100 22760 7 1 5 7 1 5 2736 125 444
+5 +1 224 224
+1 * 224 224

fn=(118)
0x4047d7 91 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=224 0x4049e2 450 
* * 74042 22980 21640 7 1 5 7 1 5 2736 125 444
+5 * 224 224
+1 * 224 224

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +10 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(52)
calls=224 0x404829 -26 
* * 77178 24100 22760 25 3 4 25 3 4 2736 139 444 55
+5 +1 224 224
+1 * 224 224

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(234)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fl=(2)
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 224 0 224
+1 * 224
+3 * 224 0 224
+1 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=224 0x4043ca -45 
* * 8064 2912 3136 4 0 4 4 0 4
+5 +1 224 224 0 1 0 0 1
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=224 0x404412 +43 
* * 71438 14896 13401 20 19 10 20 19 10 9296 254 448
+5 * 224
jump=224 +28 * 
* * 
+28 * 224
+4 * 224 224
+1 * 224 224
+1 * 224 224

fn=(14)
0x4043ca 90 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224 0 0 1 0 0 1
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(4)
cfn=(16)
calls=224 0x404804 +24 
* * 4032 1344 1568 2 0 1 2 0 1
+5 * 224 224
+4 * 224 0 224 0 0 2 0 0 2
+7 * 224 224
+4 * 224 0 224 1 0 0 1
+8 * 224 224
+4 * 224 0 224
+8 +1 224 224
+1 * 224 224

fn=(80)
0x402ff4 310 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+2 * 224 0 224
+2 * 224 0 224
+1 * 224 0 0 1 0 0 1
+4 * 224 0 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224
+3 * 224 0 224
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=224 0x4039fc 117 
* * 1344 672 448 2 0 0 2
+5 * 224
+3 * 224 0 224
cfi=(3)
cfn=(84)
calls=224 0x4039ed -88 
* * 1344 672 448
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(2)
calls=224 0x402d74 645 
* * 2912 1344 448
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224
+3 * 224
+3 * 224 0 224 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=224 0x403a0a 134 
* * 84820 19294 17177 35 10 19 35 10 19 9462 249 448
+5 +4 224 224
+4 * 224
+3 * 224 0 224
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=224 0x40325e 113 
* * 1344 672 448 1 0 0 1
+5 * 224
+3 * 224 224
+4 * 224 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=224 0x403a98 565 
* * 5600 2240 1792 2 0 0 2
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=224 0x403a68 547 
* * 5600 2240 1792
+5 * 224
+3 * 224
+3 * 224
+3 * 224
+3 * 224 0 224
cfi=(11)
cfn=(114)
calls=224 0x403ac9 -60 
* * 83674 26340 25224 7 1 5 7 1 5 2736 125 444
+5 -3 224 224
+4 * 224 0 224
+4 * 224
jump=224 +28 +4 
* * 
+28 +4 224
+4 * 224 224
+1 * 224 224
+2 * 224 224
+2 * 224 224
+1 * 224 224

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 230 0 230 1 0 0 1
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +2 230 230
+5 * 230 0 0 0 0 0 0 0 0 230 6
+2 +1 230 230
+4 * 230 230
+4 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(5)
cfn=(190)
calls=230 0x40452a -65 
* * 29436 7798 4620 0 0 0 0 0 0 6448 32 460
+5 +1 230 230
+1 * 230 230

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 230 0 230 1 0 0 1
+1 * 230
+3 * 230
+4 * 230 0 230 1 0 0 1
+4 * 230 0 230
+4 0 230 230
+5 0 230 0 0 0 0 0 0 0 0 230
+2 0 230 230
+4 0 230 230
+4 0 230
+5 0 230
+3 0 230
+3 0 230 0 230
fi=(6) ???
cfi=(5)
cfn=(26)
calls=230 0x404730 99 
* 0 63831 11377 11226 17 20 19 17 20 19 9296 272 460
+5 0 230
fi=(6)
jump=230 +7 0 
* 0 
+7 0 230 230
+1 0 230 230

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+4 * 224 0 224
+4 * 224
+4 * 224 0 0 1 0 0 1
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=224 0x404468 726 
* * 2240 1120 896 1 0 0 1
+5 * 224 224
+4 * 224 224
+1 * 224 224

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+3 * 224 0 224
+4 * 224
+4 * 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(10)
cfn=(44)
calls=224 0x404468 726 
* * 2240 1120 896
+5 * 224 224
+4 * 224 224
+1 * 224 224

fn=(86)
0x403a0a 134 224 0 224
+1 * 224
+3 * 224 0 224
+1 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=224 0x4042e2 -45 
* * 8064 2912 3136 5 0 0 5
+5 +1 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=224 0x40432a +43 
* * 71828 14814 12473 29 10 19 29 10 19 9462 249 448
+5 * 224
jump=224 +28 * 
* * 
+28 * 224
+4 * 224 224
+1 * 224 224
+1 * 224 224

fn=(88)
0x4042e2 90 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224 1 0 0 1
cfi=(4)
cfn=(90)
calls=224 0x4047b2 +24 
* * 4032 1344 1568 3 0 0 3
+5 * 224 224
+4 * 224 0 224
+7 * 224 224
+4 * 224 0 224
+8 * 224 224
+4 * 224 0 224
+8 +1 224 224
+1 * 224 224

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+1 * 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224 224 0 1 0 0 1
+4 * 224
+3 * 224 224
+4 * 224 224
+3 * 224
+3 * 224
+3 * 224
+4 * 224
+3 * 224 224
+4 * 224 224
+3 -1 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=224 0x403ce6 +11 
* * 30756 8340 5250 24 5 0 24 5 0 6056 165 448
+5 +1 224 224
+4 * 224
+3 * 224 0 224
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=224 0x4031b8 -82 
* * 5152 1792 1792 1 0 0 1
+5 * 224
jump=224 +28 * 
* * 
+28 * 224
+4 * 224 224
+1 * 224 224
+1 * 224 224

fn=(172)
0x4031b8 79 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 224
+4 * 224
+3 * 224 0 224
cfi=(4)
cfn=(174)
calls=224 0x403ccc +42 
* * 3136 1120 1120
+5 * 224 224
+1 * 224 224

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10)
0x402f54 645 472 0 472 1 0 0 1
+1 * 472
+3 * 472 0 472
+4 +1 472 472
+4 * 472 472 0 0 2 0 0 2
+4 * 472
+3 * 472 472
+4 * 472 472
+3 * 472
+3 * 472
+3 * 472
+4 * 472 472
+1 * 472 472

fn=(106)
0x40325e 113 466 0 466 1 0 0 1
+1 * 466
+3 * 466 0 466
+4 +1 466 466
+4 * 466 466
+1 * 466 466

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 236 0 236 1 0 0 1
+1 * 236
+3 * 236 0 236 0 0 1 0 0 1
+4 +1 236 236
+4 * 236 236
+1 * 236 236

fn=(82)
0x4039fc 117 236 0 236 1 0 0 1
+1 * 236
+3 * 236 0 236 1 0 0 1
+4 +1 236 236
+4 * 236 236
+1 * 236 236

fn=(200)
0x402eda 901 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112 0 0 0 0 0 0 0 0 112 8
jcnd=6/112 +51 +10 
* * 
+2 +3 106 106
+4 * 106 106
+4 * 106 106
+4 -1 106 106
+4 * 106
+3 * 106
+3 * 106 0 106
cfi=(3)
cfn=(222)
calls=106 0x403373 215 
* * 4028 1378 1484 0 7 3 0 7 3 106
+5 +2 106 106
+4 * 106 106
+4 * 106
+4 * 106 106
+4 * 106 0 106
+4 * 106
jump=106 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8314 2590 2249 25 3 7 25 3 7 450 17 35
+5 +2 112 112
+1 * 112 112

fn=(4)
0x4030b2 310 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+2 * 224 0 224
+2 * 224 0 224
+1 * 224
+4 * 224 0 224 1 0 0 1
+4 * 224 0 224
+4 +2 224 224
+4 * 224
+3 * 224 0 224
cfn=(6)
calls=224 0x403b08 117 
* * 1344 672 448 1 0 1 1 0 1
+5 * 224
+3 * 224 0 224
cfi=(3)
cfn=(8)
calls=224 0x403afa -88 
* * 1344 672 448 1 0 0 1
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(10)
calls=224 0x402f54 645 
* * 2912 1344 448 1 1 0 1 1
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224
+3 * 224
+3 * 224 0 224
cfn=(12)
calls=224 0x403b16 134 
* * 84430 19376 18105 25 19 14 25 19 14 9296 254 448
+5 +4 224 224 0 1 0 0 1
+4 * 224
+3 * 224 0 224
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=224 0x40333c 113 
* * 1344 672 448 2 0 0 2
+5 * 224
+3 * 224 224
+4 * 224 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(42)
calls=224 0x403ba4 565 
* * 5600 2240 1792 3 0 0 3
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(46)
calls=224 0x403b74 547 
* * 5600 2240 1792
+5 * 224
+3 * 224
+3 * 224
+3 * 224
+3 * 224 0 224 1 0 0 1
cfi=(11)
cfn=(48)
calls=224 0x403bd5 -60 
* * 83674 26340 25224 26 3 4 26 3 4 2736 139 444 55
+5 -3 224 224
+4 * 224 0 224
+4 * 224
jump=224 +28 +4 
* * 
+28 +4 224
+4 * 224 224
+1 * 224 224
+2 * 224 224
+2 * 224 224
+1 * 224 224

fn=(108)
0x403a98 565 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+4 * 224 0 224
+4 * 224
+4 * 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=224 0x404380 726 
* * 2240 1120 896 1 0 0 1
+5 * 224 224
+4 * 224 224
+1 * 224 224

fn=(178)
0x402e74 414 224 0 224
+1 * 224
+3 * 224 0 224
+1 * 224
+4 * 224 0 224 1 0 0 1
+4 +2 224 224
+4 * 224
+3 * 224 0 224
cfn=(40)
calls=224 0x40333c 113 
* * 1344 672 448
+5 * 224
+3 * 224 224
+4 * 224 224
+4 * 224 224
+4 * 224 224
+3 -1 224
+3 * 224
+3 * 224 0 224
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=224 0x40334a 148 
* * 6944 2240 2688 2 0 0 2
+5 +1 224 224
+4 * 224
+3 * 224 0 224
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=224 0x4032ca 159 
* * 43758 13224 8546 3 0 0 3 0 0 6536 28 448
+5 * 224
jump=224 +28 * 
* * 
+28 * 224 0 0 1 0 0 1
+4 * 224 224
+1 * 224 224
+1 * 224 224

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 230 0 230 1 0 0 1
+1 * 230 0 0 1 0 0 1
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 0 230 230
+5 0 230 0 0 0 0 0 0 0 0 230
+2 0 230 230
+4 0 230 230
+4 0 230
+5 0 230
+3 0 230
+3 0 230 0 230
fi=(6)
cfi=(5)
cfn=(100)
calls=230 0x40461a 99 
* 0 64172 11284 10293 28 13 22 28 13 22 9450 261 460
+5 0 230
fi=(6)
jump=230 +7 0 
* 0 
+7 0 230 230
+1 0 230 230

fn=(144)
0x402d9a 770 19544 0 19544
+1 * 19544
+3 * 19544 0 19544
+4 * 19544 0 19544
+4 +1 19544 19544
+4 * 19544 19544
+3 * 19544 19544
+4 * 19544
+4 * 19544
+3 * 19544 19544
+1 * 19544 19544

fn=(146)
0x402dba 770 19544 0 19544
+1 * 19544
+3 * 19544 0 19544 1 0 0 1
+4 * 19544 0 19544
+4 +1 19544 19544
+4 * 19544 19544
+3 * 19544 19544
+4 * 19544
+4 * 19544
+3 * 19544 19544
+1 * 19544 19544

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 224
+4 * 224
+3 * 224 0 224
cfi=(4)
cfn=(194)
calls=224 0x403d7e +42 
* * 3136 1120 1120 1 0 0 1
+5 * 224 224
+1 * 224 224

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186)
0x4032ca 159 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+1 * 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224 224
+4 * 224
+3 * 224 224
+4 * 224 224
+3 * 224
+3 * 224
+3 * 224
+4 * 224
+3 * 224 224
+4 * 224 224
+3 -1 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(188)
calls=224 0x403d98 +11 
* * 32334 8968 5634 1 0 0 1 0 0 6536 28 448
+5 +1 224 224
+4 * 224
+3 * 224 0 224
cfn=(192)
calls=224 0x403296 -82 
* * 5152 1792 1792 1 0 0 1
+5 * 224
jump=224 +28 * 
* * 
+28 * 224
+4 * 224 224
+1 * 224 224
+1 * 224 224

fn=(2)
0x402d74 645 920 0 920 1 0 0 1
+1 * 920
+3 * 920 0 920 0 0 1 0 0 1
+4 +1 920 920
+4 * 920 920 0 1 1 0 1 1
+4 * 920
+3 * 920 920
+4 * 920 920
+3 * 920
+3 * 920
+3 * 920
+4 * 920 920
+1 * 920 920

fn=(20)
0x404412 179 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(22)
calls=224 0x404236 -14 
* * 65838 12208 11833 19 19 10 19 19 10 9296 254 448
+5 * 224 224
+4 * 224 0 224
+3 +1 224 224
+4 * 224 224 0 1 0 0 1
+3 * 224 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+3 * 224 224
+4 * 224
+4 * 224
+3 * 224 224
+4 * 224 0 224
+4 +1 224 224
+1 * 224 224

fn=(94)
0x40432a 179 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224 224 0 1 0 0 1
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(96)
calls=224 0x403fbe -14 
* * 66228 12126 10905 28 10 19 28 10 19 9462 249 448
+5 * 224 224
+4 * 224 0 224
+3 +1 224 224
+4 * 224 224
+3 * 224 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+3 * 224 224
+4 * 224
+4 * 224
+3 * 224 224
+4 * 224 0 224
+4 +1 224 224
+1 * 224 224

fn=(244)
0x402f7a 901 112 0 112
+1 * 112
+3 * 112 0 0 1 0 0 1
+4 * 112 0 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112 0 0 0 0 0 0 0 0 112
jcnd=6/112 +51 +10 
* * 
+2 +3 106 106
+4 * 106 106
+4 * 106 106
+4 -1 106 106
+4 * 106
+3 * 106
+3 * 106 0 106
cfi=(3)
cfn=(264)
calls=106 0x4036b1 215 
* * 4028 1378 1484 0 7 4 0 7 4 106
+5 +2 106 106
+4 * 106 106
+4 * 106
+4 * 106 106
+4 * 106 0 106
+4 * 106
jump=106 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246)
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8389 2613 2258 18 2 15 18 2 15 468 30 35
+5 +2 112 112
+1 * 112 112

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40)
0x40333c 113 466 0 466 1 0 0 1
+1 * 466
+3 * 466 0 466 1 0 0 1
+4 +1 466 466
+4 * 466 466
+1 * 466 466

fn=(112)
0x403a68 547 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+3 * 224 0 224
+4 * 224
+4 * 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(10)
cfn=(110)
calls=224 0x404380 726 
* * 2240 1120 896
+5 * 224 224
+4 * 224 224
+1 * 224 224

fn=(148)
0x402df4 414 224 0 224
+1 * 224
+3 * 224 0 224
+1 * 224
+4 * 224 0 224 1 0 0 1
+4 +2 224 224
+4 * 224
+3 * 224 0 224
cfn=(106)
calls=224 0x40325e 113 
* * 1344 672 448
+5 * 224
+3 * 224 224
+4 * 224 224
+4 * 224 224
+4 * 224 224
+3 -1 224
+3 * 224
+3 * 224 0 224
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=224 0x40326c 148 
* * 6944 2240 2688 4 0 0 4
+5 +1 224 224
+4 * 224
+3 * 224 0 224
cfn=(156)
calls=224 0x4031ec 159 
* * 42180 12596 8162 27 5 0 27 5 0 6056 165 448
+5 * 224
jump=224 +28 * 
* * 
+28 * 224 0 0 1 0 0 1
+4 * 224 224
+1 * 224 224
+1 * 224 224

fn=(158)
0x403ce6 171 230 0 230 1 0 0 1
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +2 230 230
+5 * 230 0 0 0 0 0 0 0 0 230
+2 +1 230 230
+4 * 230 230
+4 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(5)
cfn=(160)
calls=230 0x4044d6 -65 
* * 27832 7158 4232 24 5 0 24 5 0 5962 167 460
+5 +1 230 230
+1 * 230 230

fl=(12)
fn=(54)
0x404a36 450 224 0 224
+1 * 224
+3 * 224 0 224
+1 * 224
+4 * 224 0 224 1 0 0 1
+4 * 224 0 224
+4 * 224 0 224
+4 +10 224 224
+4 * 224
+3 * 224 0 224
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=224 0x404c38 288 
* * 3360 1344 1120 3 0 0 3
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(56)
calls=224 0x404c38 288 
* * 3360 1344 1120
+5 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=224 0x404c52 -36 
* * 62394 18948 17608 20 3 4 20 3 4 2736 139 444 55
+5 +1 224
+4 * 224 224
+1 * 224 224
+1 * 224 224

fn=(60)
0x404c52 424 224 0 224
+1 * 224
+3 * 224 0 224
+2 * 224 0 224
+1 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +4 224 224
+4 * 224
+3 * 224 0 224
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=224 0x40492d 277 
* * 3360 1344 1120 2 0 0 2
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=224 0x404d9d 277 
* * 5600 2016 1792 2 0 1 2 0 1
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(66)
calls=224 0x404d9d 277 
* * 5600 2016 1792
+5 * 224
+3 * 224
+3 * 224
+3 * 224 0 224
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=224 0x404db7 -49 
* * 41562 12004 10664 15 3 3 15 3 3 2736 139 444 55
+5 +1 224
+4 * 224 224
+1 * 224 224
+2 * 224 224
+1 * 224 224

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 260 0 260 1 0 0 1
+1 * 260
+3 * 260
+4 * 260 0 260
+4 +1 260 260
+4 * 260
+3 * 260 0 260 1 0 0 1
cfi=(13)
cfn=(64)
calls=260 -33 -66 
* * 1560 780 520
+5 * 260 260
+1 * 260 260

fn=(66)
0x404d9d 277 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448
+3 * 448 0 448
cfi=(13)
cfn=(68)
calls=448 0x404f1a -58 
* * 7168 2688 2240 2 0 1 2 0 1
+5 * 448 448
+1 * 448 448

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 224 0 224
+1 * 224
+3 * 224 0 224
+1 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +10 224 224
+4 * 224
+3 * 224 0 224
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=224 0x404bc6 288 
* * 3360 1344 1120 3 0 0 3
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(122)
calls=224 0x404bc6 288 
* * 3360 1344 1120
+5 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=224 0x404be0 -36 
* * 62394 18948 17608 4 1 5 4 1 5 2736 125 444
+5 +1 224
+4 * 224 224
+1 * 224 224
+1 * 224 224

fn=(128)
0x404878 277 260 0 260
+1 * 260
+3 * 260
+4 * 260 0 260 1 0 0 1
+4 +1 260 260
+4 * 260
+3 * 260 0 260
cfi=(13)
cfn=(130)
calls=260 -33 -66 
* * 1560 780 520 0 0 1 0 0 1
+5 * 260 260
+1 * 260 260

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448
+3 * 448 0 448
cfi=(13)
cfn=(134)
calls=448 0x404e98 -58 
* * 7168 2688 2240 2 0 0 2
+5 * 448 448
+1 * 448 448

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +8 224 0 224
+4 +3 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=224 0x404eb5 -22 
* * 38202 10884 9320 1 1 5 1 1 5 2736 125 444
+5 +1 224 224
+1 * 224 224

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448
+3 * 448 0 448
cfi=(13)
cfn=(124)
calls=448 0x404d36 -77 
* * 2688 1344 896 2 0 0 2
+5 * 448 448
+1 * 448 448

fn=(56)
0x404c38 288 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448 1 0 0 1
+4 +1 448 448
+4 * 448
+3 * 448 0 448
cfi=(13)
cfn=(58)
calls=448 0x404d8f -77 
* * 2688 1344 896 1 0 0 1
+5 * 448 448
+1 * 448 448

fn=(74)
0x404f37 368 236 0 236
+1 * 236
+3 * 236
+4 * 236 0 236 1 0 0 1
+4 * 236 0 236
+4 * 236 0 236
+4 +2 236 236
+4 * 236 236
+4 * 236
+3 * 236
+3 * 236
+4 * 236 0 236
+4 +1 236 236
+5 * 236 0 0 0 0 0 0 0 0 236
jcnd=6/236 +33 +2 
* * 
+2 +1 230 230
+4 * 230
+8 * 230 230
+4 * 230 230
+4 * 230
+3 * 230 0 0 1 0 0 1
+3 * 230 0 230 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=230 0x3877c83840 0 
* * 32440 8530 8075 11 2 5 11 2 5 2560 141 225 55
* * 230 230 0 1 1 0 1 1 0 0 0 230
+5 +1 236 236
+4 * 236
+8 * 236 236
+4 * 236
+3 +1 236 236
+1 * 236 236

fn=(140)
0x404eb5 368 236 0 236
+1 * 236
+3 * 236
+4 * 236 0 236 1 0 0 1
+4 * 236 0 236
+4 * 236 0 236 0 0 1 0 0 1
+4 +2 236 236
+4 * 236 236
+4 * 236
+3 * 236
+3 * 236
+4 * 236 0 236
+4 +1 236 236
+5 * 236 0 0 0 0 0 0 0 0 236
jcnd=6/236 +33 +2 
* * 
+2 +1 230 230
+4 * 230
+8 * 230 230
+4 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cob=(2)
cfi=(9)
cfn=(78)
calls=230 0x3877c83840 0 
* * 32440 8530 8075 0 1 6 0 1 6 2560 128 225
* * 230 230 0 0 0 0 0 0 0 0 0 230
+5 +1 236 236
+4 * 236
+8 * 236 236
+4 * 236
+3 +1 236 236
+1 * 236 236

fn=(72)
0x404db7 379 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224 1 0 0 1
+4 * 224 0 224
+4 * 224 0 224
+4 +8 224 0 224
+4 +3 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfn=(74)
calls=224 0x404f37 -22 
* * 38202 10884 9320 14 3 3 14 3 3 2736 139 444 55
+5 +1 224 224
+1 * 224 224

fn=(126)
0x404be0 424 224 0 224
+1 * 224
+3 * 224 0 224
+2 * 224 0 224
+1 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +4 224 224
+4 * 224
+3 * 224 0 224
cfn=(128)
calls=224 0x404878 277 
* * 3360 1344 1120 1 0 0 1
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(132)
calls=224 0x404d44 277 
* * 5600 2016 1792 2 0 0 2
+5 * 224
+3 * 224 224
+4 * 224
+3 * 224 0 224
cfn=(132)
calls=224 0x404d44 277 
* * 5600 2016 1792
+5 * 224
+3 * 224
+3 * 224
+3 * 224 0 224
cfn=(138)
calls=224 0x404d5e -49 
* * 41562 12004 10664 1 1 5 1 1 5 2736 125 444
+5 +1 224
+4 * 224 224
+1 * 224 224
+2 * 224 224
+1 * 224 224

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+4 +1 448 448
+4 * 448 448
+1 * 448 448

fn=(110)
0x404380 726 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+4 * 448 0 448
+4 * 448 448
+4 * 448 448
+3 * 448 448
+4 * 448 0 448
+3 * 448 448
+1 * 448 448

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+4 +1 448 448
+4 * 448 448
+1 * 448 448

fn=(44)
0x404468 726 448 0 448
+1 * 448
+3 * 448 0 448
+4 * 448 0 448
+4 * 448 448
+4 * 448 448
+3 * 448 448
+4 * 448 0 448 1 0 0 1
+3 * 448 448
+1 * 448 448

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 230 0 230 1 0 0 1
+1 * 230
+3 * 230 0 230
+4 * 230 0 230 1 0 0 1
+4 * 230 230
+1 * 230 230

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 230 0 230 1 0 0 1
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 +4 230 230
+4 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=230 0x40454c -14 
* * 1380 460 690 1 0 0 1
+5 +2 230 230
+1 * 230 230

fn=(150)
0x40326c 148 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +3 230 230 0 1 0 0 1
+4 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=230 0x403d1a -29 
* * 4140 1380 1610 3 0 0 3
+5 +1 230 230
+1 * 230 230

fn=(180)
0x40334a 148 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +3 230 230
+4 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfn=(182)
calls=230 0x403dcc -29 
* * 4140 1380 1610 2 0 0 2
+5 +1 230 230
+1 * 230 230

fn=(152)
0x403d1a 122 230 0 230 1 0 0 1
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 +4 230 230
+4 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfn=(154)
calls=230 0x4044f8 -14 
* * 1380 460 690 2 0 0 2
+5 +2 230 230
+1 * 230 230

fn=(184)
0x40454c 112 230 0 230 1 0 0 1
+1 * 230
+3 * 230 0 230
+4 * 230 0 230
+4 * 230 230
+1 * 230 230

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1673 319 313 0 1 9 0 1 9 230 18 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 1 3 0 1 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1624 308 308 2 3 3 2 3 3 218 12 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 0 1 0 0 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 460 0 460 1 0 0 1
+2 0 460 0 460
+2 0 460 0 460
+2 0 460
+3 0 460 0 460
+2 0 460 0 460
+1 0 460 0 460
+1 0 460
+3 0 460
+4 0 460 460
+4 0 460 0 460
+4 0 460
+3 0 460
+4 0 460
+3 0 460
+3 0 460
+3 0 460 0 0 1 0 0 1 0 0 460
+6 0 460
+4 0 460 0 0 0 0 0 0 0 0 460
+6 0 460
+4 0 460 0 0 0 0 0 0 0 0 460
+6 0 460 460
+7 0 460 0 0 0 0 0 0 0 0 460 2
jcnd=336/460 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 336
+2 0 336 0 0 0 0 0 0 0 0 336
+6 0 336 336 0 1 0 0 1
+4 0 336
+3 0 336
+2 0 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 0x3877c78a40 0 
* 0 
+6 0 336 336
+4 0 336
+3 0 336 0 0 0 0 0 0 0 0 336
+6 0 336 336
+5 0 336
+4 0 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 0x3877c7907c 0 
* 0 
+6 0 336 336
+5 0 336
+4 0 336 0 0 0 0 0 0 0 0 336
+6 0 336
+4 0 336 0 0 1 0 0 1 0 0 336
+6 0 336
+4 0 336 336
+7 0 336 0 0 0 0 0 0 0 0 336
+6 0 336 336
+6 0 336
+2 0 336 0 0 0 0 0 0 0 0 336
+6 0 336 336
+4 0 336 0 0 0 0 0 0 0 0 336 2
jcnd=334/336 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 336 336 0 1 0 0 1
+4 0 336 0 0 0 0 0 0 0 0 336 86
jcnd=86/336 0x3877c78bf0 0 
* 0 
+6 0 250 250
+6 0 250 0 0 1 0 0 1 0 0 250 39
jcnd=24/250 0x3877c78a78 0 
* 0 
+6 0 226 226
+5 0 226 226
+5 0 226 226
+4 0 226 0 0 0 0 0 0 0 0 226
+6 0 226 226
+4 0 226 0 0 0 0 0 0 0 0 226
+6 0 226 226
+9 0 226 0 226
+4 0 226 0 226
+4 0 226 0 0 0 0 0 0 0 0 226 4
jcnd=218/226 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8 2
+6 0 226
+3 0 226
+4 0 226 226
+4 0 226 226
+4 0 226 0 0 0 0 0 0 0 0 226
-12 0 24
+4 0 24 24
+4 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 250
+7 0 250 0 250
+4 0 250 0 250
+4 0 250 0 0 0 0 0 0 0 0 250 62
jcnd=182/250 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 182 0 182
+4 0 182
+3 0 182 0 182
+4 0 182
+4 0 182 0 182
+4 0 182 0 182
+4 0 182
+7 0 182 0 0 0 0 0 0 0 0 182
jcnd=182/182 0x3877c78b20 0 
* 0 
-7 0 86
+7 0 86 0 0 0 0 0 0 0 0 86
jcnd=86/86 0x3877c78b20 0 
* 0 
0x3877c78a40 0 336 0 0 1 0 0 1
+5 0 336 336
+4 0 336 336
+7 0 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 +16 0 
* 0 
+16 0 336 0 336
+5 0 336 0 0 0 0 0 0 0 0 336
+6 0 336
+3 0 336
jump=336 0x3877c7878f 0 
* 0 
+10 0 24 0 24
+6 0 24 0 0 1 0 0 1
jump=24 0x3877c78885 0 
* 0 
0x3877c78b20 0 336 336 0 1 0 0 1
+4 0 336
+2 0 336 0 0 0 0 0 0 0 0 336
+6 0 336 336
+7 0 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 +15 0 
* 0 
+15 0 336 0 336 1 0 0 1
+4 0 336 0 0 0 0 0 0 0 0 336
+6 0 336
+4 0 336 336
+1 0 336 336
+1 0 336 336
+2 0 336 336
+2 0 336 336
+2 0 336 336
+2 0 336 336
0x3877c78bf0 0 86 0 0 1 0 0 1
+3 0 86 0 86
+4 0 86
+3 0 86
+4 0 86 0 86 1 0 0 1
+4 0 86
jump=86 0x3877c788cf 0 
* 0 
0x3877c7907c 0 336 336 0 1 1 0 1 1
+4 0 336 0 0 1 0 0 1
+7 0 336
+4 0 336
+3 0 336
+3 0 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 450 0 0 1 0 0 1
+7 0 450
+3 0 450
+3 0 450 450 0 0 1 0 0 1
+4 0 450
+4 0 450 0 0 0 0 0 0 0 0 0 0 450 55
jump=48 0x3877c89be8 0 
* 0 
jump=62 0x3877c89bd0 0 
* 0 
jump=56 0x3877c89bb8 0 
* 0 
jump=56 +11 0 
* 0 
jump=56 0x3877c89c48 0 
* 0 
jump=58 0x3877c89c30 0 
* 0 
jump=56 0x3877c89c18 0 
* 0 
jump=58 0x3877c89c00 0 
* 0 
+11 0 56 56
+3 0 56
+4 0 56
+4 0 56 56
+4 0 56
+4 0 56 0 56
+4 0 56
+9 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56
+4 0 56
+4 0 56 0 0 0 0 0 0 0 0 56
jcnd=8/56 0x3877c89c60 0 
* 0 
-40 0 1526 1526
+4 0 1526 0 1526 0 0 3 0 0 3
+4 0 1526 1526
+4 0 1526 0 1526
+4 0 1526 1526
+4 0 1526 0 1526 0 0 1 0 0 1
+4 0 1526 1526
+4 0 1526 0 1526 0 0 3 0 0 3
+4 0 1526
+4 0 1526
+4 0 1526 0 0 0 0 0 0 0 0 1526 29
jcnd=414/1526 0x3877c89c60 0 
* 0 
-32 0 58 58
+4 0 58 0 58
+4 0 58 58
+4 0 58 0 58
+4 0 58 58
+4 0 58 0 58
+4 0 58
+4 0 58
+4 0 58 0 0 0 0 0 0 0 0 58
jcnd=10/58 0x3877c89c60 0 
* 0 
-24 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56
+4 0 56
+4 0 56 0 0 0 0 0 0 0 0 56
jcnd=8/56 0x3877c89c60 0 
* 0 
-16 0 58 58 0 1 0 0 1
+4 0 58 0 58
+4 0 58 0 0 1 0 0 1
+4 0 58
+4 0 58 0 0 0 0 0 0 0 0 58 4
jcnd=10/58 0x3877c89c60 0 
* 0 
+6 0 1304
+4 0 1304 1304
+3 0 1304 0 1304 0 0 3 0 0 3
+3 0 1304 1304
+4 0 1304 0 1304
+4 0 1304 1304
+4 0 1304 0 1304
+4 0 1304 1304
+4 0 1304 0 1304
+4 0 1304
jump=1304 -80 0 
* 0 
-30 0 48 48
+3 0 48 0 48
+3 0 48 48
+4 0 48 0 48
+4 0 48 48
+4 0 48 0 48
+4 0 48 48
+4 0 48 0 48
+4 0 48
jump=48 -80 0 
* 0 
-24 0 62 62
+4 0 62 0 62
+4 0 62 62
+4 0 62 0 62
+4 0 62 62
+4 0 62 0 62
+4 0 62
jump=62 -80 0 
* 0 
-16 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56
jump=56 -80 0 
* 0 
+8 0 56 56
+3 0 56
+4 0 56 0 0 1 0 0 1
+4 0 56
+4 0 56
jump=56 -39 0 
* 0 
+9 0 62
+3 0 62 0 0 0 0 0 0 0 0 62
+6 0 62 62
+3 0 62
+4 0 62
jump=62 -72 0 
* 0 
+8 0 48
+4 0 48 48
+3 0 48 0 0 0 0 0 0 0 0 48
+2 0 48
+4 0 48
jump=48 -99 0 
* 0 
+11 0 58 58 0 1 0 0 1
+3 0 58
+4 0 58
+4 0 58
+4 0 58
jump=58 0x3877c89b78 0 
* 0 
+9 0 56 56
+3 0 56
+4 0 56
+4 0 56
+4 0 56
jump=56 0x3877c89b70 0 
* 0 
+9 0 58 58
+3 0 58
+4 0 58
+4 0 58
+4 0 58
jump=58 0x3877c89b68 0 
* 0 
+9 0 56 56
+3 0 56
+4 0 56
+4 0 56
+4 0 56
jump=56 0x3877c89b60 0 
* 0 
+9 0 450 0 450 1 0 0 1
+3 0 450 450

fn=(104) alloc_perturb
0x3877c77180 0 342 342 0 1 0 0 1
+6 0 342
+2 0 342 0 0 0 0 0 0 0 0 342 1
+2 0 342 342

fn=(38) _int_malloc
0x3877c79a00 0 460 0 460 1 0 0 1
+2 0 460
+3 0 460 0 460
+2 0 460 0 460
+2 0 460 0 460 0 0 1 0 0 1
+2 0 460
+3 0 460 0 460
+1 0 460 0 460
+1 0 460
+4 0 460
+4 0 460 0 0 0 0 0 0 0 0 460
+6 0 460
+4 0 460
+6 0 460
+3 0 460
+4 0 460
+4 0 460
+4 0 460
+3 0 460 0 0 0 0 0 0 0 0 460
+6 0 460 460 0 1 1 0 1 1
+7 0 460 0 0 0 0 0 0 0 0 460 5
jcnd=338/460 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 23
jcnd=16/122 0x3877c79af8 0 
* 0 
+6 0 106
+4 0 106 106 0 0 1 0 0 1
+4 0 106
+3 0 106
+4 0 106 106 0 0 1 0 0 1
+9 0 106 0 0 0 0 0 0 0 0 106
jcnd=106/106 +3 0 
* 0 
+3 0 106 0 106 1 0 0 1
+5 0 106
+3 0 106
+3 0 106 0 0 0 0 0 0 0 0 106
+2 0 106
jump=106 0x3877c7a2db 0 
* 0 
+46 0 106 106
+4 0 106 0 0 1 0 0 1
+3 0 106
+3 0 106
+2 0 106 0 0 0 0 0 0 0 0 106
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 342
+4 0 342 342
+1 0 342 342
+1 0 342 342
+2 0 342 342
+2 0 342 342
+2 0 342 342
+2 0 342 342
+7 0 354
+7 0 354 0 0 1 0 0 1 0 0 354 2
+2 0 354
+3 0 354
+5 0 354
+3 0 354
+4 0 354 0 354
+4 0 354
+2 0 354
+5 0 354 354 0 0 7 0 0 7
+4 0 354
+3 0 354 0 0 0 0 0 0 0 0 354
jcnd=354/354 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 354 0 0 1 0 0 1
+3 0 354
+3 0 354
+3 0 354
+4 0 354
+3 0 354
+4 0 354 0 354
+5 0 354
+3 0 354 0 354
+4 0 354 0 354
+4 0 354 0 354
+5 0 354
+3 0 354
+3 0 354
+3 0 354
+3 0 354
+4 0 354
+4 0 354 0 0 1 0 0 1
+4 0 354 0 354
+4 0 354
+4 0 354 0 354
+5 0 354 0 354
+5 0 354
+3 0 354
+3 0 354 0 354
+5 0 354
+5 0 354
+3 0 354 0 354
+4 0 354 0 354
+4 0 354
+6 0 354 0 354
+4 0 354 0 354
+5 0 354 0 0 1 0 0 1
+3 0 354
+3 0 354
+3 0 354
jump=354 +87 0 
* 0 
+8 0 315
+3 0 315
+4 0 315
+2 0 315
+2 0 315
+3 0 315
+3 0 315
+3 0 315
+2 0 315
+2 0 315
+5 0 315
+2 0 315 315
+4 0 315
+3 0 315
+4 0 315 0 315
+4 0 315 0 315
+8 0 315
+7 0 315 0 315
+4 0 315 0 315 0 0 2 0 0 2
+4 0 315 0 315
+4 0 315 0 0 0 0 0 0 0 0 315
-38 0 67
+3 0 67
+4 0 67 0 67
+4 0 67 0 67
+8 0 67
+7 0 67 0 67
+4 0 67 0 67
+4 0 67 0 67
+4 0 67 0 0 0 0 0 0 0 0 67
+6 0 736 736 0 1 0 0 1
+4 0 736
+3 0 736 0 0 0 0 0 0 0 0 736 19
jcnd=323/736 0x3877c79ef0 0 
* 0 
+6 0 413 413 0 0 1 0 0 1
+4 0 413 413
+4 0 413
+4 0 413 0 0 0 0 0 0 0 0 413
+6 0 413 413 0 1 1 0 1 1
+7 0 413 0 0 0 0 0 0 0 0 413 2
+6 0 413
+4 0 413
+7 0 413 0 0 0 0 0 0 0 0 413 2
+2 0 413
+3 0 413 0 0 0 0 0 0 0 0 413 62
jcnd=337/413 0x3877c79e28 0 
* 0 
+6 0 394
+3 0 394 0 394
+4 0 394 0 394
+5 0 394 0 0 0 0 0 0 0 0 394 7
jcnd=12/394 0x3877c7a090 0 
* 0 
+6 0 382
+7 0 382 0 0 0 0 0 0 0 0 382 6
jcnd=315/382 0x3877c79c50 0 
* 0 
+6 0 67 0 0 1 0 0 1
+3 0 67
+4 0 67
+4 0 67 0 0 0 0 0 0 0 0 67
+6 0 67
+3 0 67
+4 0 67
+2 0 67
+2 0 67
+3 0 67
+3 0 67
+8 0 67
+3 0 67
+2 0 67
+2 0 67
+4 0 67 67 0 0 3 0 0 3
+4 0 67
+3 0 67 0 0 1 0 0 1 0 0 67 5
jcnd=67/67 0x3877c79e15 0 
* 0 
0x3877c79e15 0 67 0 67 0 0 1 0 0 1
+4 0 67 0 67
+4 0 67
+3 0 67
jump=67 0x3877c79c73 0 
* 0 
+8 0 337 337 0 1 0 0 1
+4 0 337
+3 0 337 0 0 0 0 0 0 0 0 337 94
jcnd=170/337 0x3877c79ce1 0 
* 0 
+6 0 167 167
+5 0 167 0 0 0 0 0 0 0 0 167 6
jcnd=148/167 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 14 0 0 14
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 3
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8 0 0 1 0 0 1
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 323 0 0 1 0 0 1
+7 0 323
+3 0 323 0 0 0 0 0 0 0 0 323 2
+6 0 323 323 0 1 0 0 1
+4 0 323
+3 0 323
+3 0 323
+2 0 323
+4 0 323
+3 0 323
+3 0 323
+2 0 323
+2 0 323
+2 0 323
+2 0 323 323 0 0 1 0 0 1
+8 0 323
+5 0 323
+5 0 323
+2 0 323 0 0 0 0 0 0 0 0 323
-2 0 162
+2 0 162 0 0 0 0 0 0 0 0 162
+2 0 485
+2 0 485 0 0 0 0 0 0 0 0 485 20
jcnd=145/485 +64 0 
* 0 
+2 0 340
+8 0 340
+3 0 340
+3 0 340 0 0 0 0 0 0 0 0 340 1
jcnd=1/340 0x3877c79fc0 0 
* 0 
-6 0 237
+3 0 237
+3 0 237 0 0 0 0 0 0 0 0 237 4
jcnd=85/237 0x3877c79fc0 0 
* 0 
+2 0 491
+2 0 491 491
+8 0 491
+2 0 491 0 0 0 0 0 0 0 0 491 14
jcnd=237/491 -20 0 
* 0 
+2 0 254
+2 0 254
+5 0 254
+3 0 254
+3 0 254
+2 0 254
+2 0 254
+5 0 254 0 0 0 0 0 0 0 0 254
+2 0 254
+2 0 254
+4 0 254
+2 0 254
+2 0 254 0 0 0 0 0 0 0 0 254 7
jcnd=190/254 -8 0 
* 0 
-8 0 747
+4 0 747
+2 0 747
+2 0 747 0 0 0 0 0 0 0 0 747 52
jcnd=431/747 -8 0 
* 0 
-2 0 145 0 0 1 0 0 1
+2 0 145 0 0 0 0 0 0 0 0 145 6
jcnd=126/145 -8 0 
* 0 
+2 0 399 399 0 0 5 0 0 5
+4 0 399 0 0 1 0 0 1
+3 0 399 0 0 0 0 0 0 0 0 399 159
jcnd=237/399 0x3877c7a1cf 0 
* 0 
+6 0 162
+2 0 162
+4 0 162
+2 0 162
+2 0 162
+2 0 162 0 162
+8 0 162
jump=162 0x3877c79f30 0 
* 0 
+37 0 86 86 0 1 0 0 1
+5 0 86 86
+4 0 86
+4 0 86 86
+5 0 86 0 0 0 0 0 0 0 0 86
jcnd=86/86 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 12 0 0 1 0 0 1
+7 0 12 0 12
+6 0 12
+3 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 237 237 0 1 2 0 1 2
+4 0 237 237 0 0 1 0 0 1
+4 0 237
+3 0 237 237
+4 0 237
+4 0 237
+3 0 237
+3 0 237 237
+4 0 237 0 0 0 0 0 0 0 0 237
+6 0 237 237
+4 0 237 0 0 0 0 0 0 0 0 237
+6 0 237 237 0 1 0 0 1
+8 0 237 0 237
+4 0 237 0 237
+4 0 237 0 0 0 0 0 0 0 0 237 5
jcnd=169/237 +38 0 
* 0 
+2 0 68 68
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 169
+4 0 169 0 0 0 0 0 0 0 0 169 5
jcnd=9/169 0x3877c7a2e3 0 
* 0 
+6 0 228 228
+4 0 228 228 0 1 0 0 1
+4 0 228 0 0 0 0 0 0 0 0 228
+6 0 228
+4 0 228
+7 0 228 0 228 0 0 8 0 0 8
+4 0 228 0 228
+4 0 228 0 228
+4 0 228 0 228
+4 0 228 0 0 0 0 0 0 0 0 228 2
+2 0 228 0 228
+5 0 228
+7 0 228 0 0 0 0 0 0 0 0 228 4
jcnd=221/228 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7 0 0 1 0 0 1
+4 0 7
jump=7 +71 0 
* 0 
-46 0 221 0 0 1 0 0 1
+7 0 221 0 221 0 0 1 0 0 1
+4 0 221
+3 0 221
+3 0 221
+4 0 221
+3 0 221
+4 0 221
+3 0 221
+3 0 221
+4 0 221 0 221
+4 0 221 0 221
+4 0 221
jump=221 +71 0 
* 0 
+40 0 106 0 0 1 0 0 1
+3 0 106
jump=106 0x3877c79abc 0 
* 0 
+5 0 9
+7 0 9 0 9
+6 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +7 0 
* 0 
+7 0 237
+4 0 237 0 0 1 0 0 1
+3 0 237
+3 0 237 0 237
cfn=(104)
calls=237 0x3877c77180 0 
* 0 948 474 0 1 0 0 1 0 0 237
+5 0 237
+3 0 237
jump=237 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 86 0 0 1 0 0 1
+7 0 86
+2 0 86
+4 0 86
+3 0 86
+3 0 86 0 86
+5 0 86
+3 0 86
+4 0 86
+3 0 86 0 0 1 0 0 1
+4 0 86
+4 0 86
+3 0 86
+4 0 86 0 86
+4 0 86 0 86 0 0 4 0 0 4
+4 0 86
+3 0 86
+3 0 86 0 86
cfn=(104)
calls=86 0x3877c77180 0 
* 0 344 172 0 0 0 0 0 0 0 86 1
+5 0 86
+3 0 86
jump=86 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 460 0 460 1 0 0 1
+5 0 460 0 460
+5 0 460
+3 0 460 0 460
+5 0 460
+4 0 460 460 0 0 1 0 0 1
+7 0 460 460 0 0 1 0 0 1
+3 0 460
+3 0 460 0 0 0 0 0 0 0 0 460 1
+6 0 460 460 0 0 1 0 0 1
+7 0 460 460 0 1 1 0 1 1
+4 0 460
+3 0 460 0 0 0 0 0 0 0 0 460
+2 0 460 460 0 0 1 0 0 1
+3 0 460
+3 0 460 0 0 0 0 0 0 0 0 460
jcnd=460/460 +97 0 
* 0 
+18 0 460
+3 0 460
+3 0 460 0 460
cfn=(38)
calls=460 0x3877c79a00 0 
* 0 89363 12081 13699 30 25 40 30 25 40 13226 518
+5 0 460
+3 0 460
+3 0 460 0 0 0 0 0 0 0 0 460
+2 0 460
+3 0 460 0 0 0 0 0 0 0 0 460
+2 0 460
+3 0 460 0 0 0 0 0 0 0 0 460 2
+2 0 460 460
+7 0 460 0 0 0 0 0 0 0 0 460
jcnd=460/460 +13 0 
* 0 
+13 0 460 0 460
+2 0 460 0 0 0 0 0 0 0 0 460 12
+6 0 460
+3 0 460 460
+4 0 460 460
+5 0 460 460
+5 0 460
+4 0 460 460
+1 0 460 0 0 1 0 0 1
+5 0 460 460 0 0 1 0 0 1
+7 0 460 0 0 0 0 0 0 0 0 460
jcnd=460/460 +14 0 
* 0 
+14 0 460 0 460 1 0 0 1
+3 0 460 0 0 0 0 0 0 0 0 460
+6 0 460
jump=460 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 460 0 460 1 0 0 1
+2 0 460
+3 0 460
+3 0 460 0 460
+2 0 460
+3 0 460 0 460
+1 0 460
+3 0 460 0 460
+1 0 460
+3 0 460
+4 0 460
+3 0 460 0 0 0 0 0 0 0 0 460
+6 0 460
+4 0 460
+3 0 460 0 0 0 0 0 0 0 0 460 4
jcnd=10/460 0x3877c838d1 0 
* 0 
+2 0 450
+3 0 450
+3 0 450
+3 0 450
+3 0 450
+3 0 450 0 0 0 0 0 0 0 0 450
jcnd=450/450 +41 0 
* 0 
+41 0 450 0 0 1 0 0 1
+3 0 450 0 0 0 0 0 0 0 0 450
jcnd=450/450 0x3877c839c0 0 
* 0 
+24 0 450
+3 0 450
+4 0 450
+3 0 450
+3 0 450
+3 0 450
+3 0 450
+3 0 450 0 0 0 0 0 0 0 0 450 224
jcnd=230/450 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 230
+10 0 230 230 0 0 2 0 0 2
+3 0 230
+4 0 230 0 230
+3 0 230
+4 0 230
+4 0 230 0 0 0 0 0 0 0 0 230
jcnd=230/230 -18 0 
* 0 
-18 0 746 746
+3 0 746
+4 0 746 0 746
+3 0 746
+4 0 746
+4 0 746 0 0 0 0 0 0 0 0 746 8
jcnd=516/746 -18 0 
* 0 
+2 0 460
+4 0 460
+3 0 460 460
+1 0 460 460
+1 0 460 460
+2 0 460 460 0 1 0 0 1
+2 0 460 460
0x3877c839c0 0 450 0 0 1 0 0 1
+3 0 450
+3 0 450
+3 0 450
+4 0 450 0 450 0 0 1 0 0 1
cfn=(284)
calls=450 0x3877c89b20 0 
* 0 38754 13784 12884 6 1 10 6 1 10 1864 33 450 55
+5 0 450
jump=450 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 460 460 0 1 1 0 1 1
+7 0 460 460 0 0 1 0 0 1
+3 0 460
+3 0 460 0 0 1 0 0 1 0 0 460
+6 0 460
+3 0 460 0 0 0 0 0 0 0 0 460
+6 0 460 460
+4 0 460
+4 0 460
+2 0 460 0 0 0 0 0 0 0 0 460
+2 0 460
+2 0 460
+7 0 460 0 0 0 0 0 0 0 0 460
jcnd=460/460 +14 0 
* 0 
+14 0 460
+2 0 460
cfn=(170)
calls=460 0x3877c78650 0 
* 0 43008 11276 6552 19 1 0 19 1 0 10110 199

totals: 1560701 599288 372582 226 62 74 226 62 74 58170 1355 2750 55
