version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1018


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1259177389 - 1260515063
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1440 0 0 1 0 0 1
+3 0 1440 0 0 0 0 0 0 0 0 1440
+2 0 1440
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1440 0x3877c7b8b0 0 
* 0 174977 46015 25325 19 4 0 19 4 0 43213 488
* 0 1440 1440 0 1 1 0 1 1 0 0 0 1440

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1440 0 1440 1 0 0 1
+1 0 1440
+5 0 1440
+3 0 1440 0 1440
+1 0 1440
+4 0 1440 0 0 1 0 0 1
+3 0 1440
+4 0 1440
+3 0 1440 0 1440 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1440 0x3877c7aa50 0 
* 0 445666 64309 66854 45 40 54 45 40 54 76638 3481
* 0 1440 1440 0 1 1 0 1 1 0 0 0 1440
+5 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440
jcnd=1440/1440 +96 0 
* 0 
+96 0 1440 0 0 1 0 0 1
+4 0 1440 1440
+1 0 1440 1440
+1 0 1440 1440

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 792 0 792
+1 * 792
+3 * 792 0 792 0 0 1 0 0 1
+4 +1 792 792
+4 * 792 792
+1 * 792 792

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1424 0 1424 1 0 0 1
+1 * 1424
+3 * 1424
+4 * 1424 0 1424
+4 +1 1424
+4 * 1424
+3 * 1424 0 1424
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1424 0x404ffe 790 
* * 8544 4272 2848 1 0 0 1
+5 * 1424 1424
+3 * 1424 1424
+1 * 1424 1424

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1424 0 1424 1 0 0 1
+1 * 1424
+3 * 1424 0 1424
+4 +1 1424 1424
+4 * 1424 1424
+1 * 1424 1424

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1424 0 1424 1 0 0 1
+1 * 1424
+3 * 1424
+4 * 1424 0 1424
+4 +1 1424
+4 * 1424
+3 * 1424 0 1424 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1424 0x40500c 790 
* * 8544 4272 2848 1 0 0 1
+5 * 1424 1424
+3 * 1424 1424
+1 * 1424 1424

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 792 0 792
+1 * 792
+3 * 792 0 792
+4 +1 792 792
+4 * 792 792
+1 * 792 792

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1424 0 1424 1 0 0 1
+1 * 1424
+3 * 1424 0 1424
+4 +1 1424 1424 0 1 0 0 1
+4 * 1424 1424
+1 * 1424 1424

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 712 0 712
+1 * 712
+3 * 712 0 712
+4 * 712 0 712
+4 * 712 712
+4 * 712 712
+1 * 712 712

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 720 0 720 1 0 0 1
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 * 720 0 720 1 0 0 1
+4 +2 720 720
+4 * 720
+3 * 720 0 720
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=720 0x404992 +12 
* * 4320 1440 1440 1 0 0 1
+5 * 720 720
+4 * 720
+3 * 720
+2 * 720 0 0 0 0 0 0 0 0 720
jcnd=720/720 +7 +3 
* * 
+7 +3 720 720
+4 * 720
+4 * 720
+3 * 720 0 720
cob=(5)
cfi=(8)
cfn=(32)
calls=720 0x387e4bd0b0 0 
* * 234363 34898 37450 17 18 22 17 18 22 38435 1640 720
* * 720 720 0 1 1 0 1 1 0 0 0 720
+5 +1 720 720
+1 * 720 720

fn=(102) __gnu_cxx::new_allocator<float>::max_size() const
0x4048de 113 736 0 736 1 0 0 1
+1 * 736
+3 * 736 0 736
+4 +1 736
+10 * 736 736
+1 * 736 736

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 356 0 356
+1 * 356
+3 * 356
+4 * 356 0 356
+4 * 356 0 356
+4 * 356 0 356
+4 +1 356 356
+4 * 356
+3 * 356
+5 * 356 0 356
cfi=(16)
cfn=(226)
calls=356 0x402d61 -20 
* * 2492 1068 1068
+5 * 356
+3 * 356 0 0 0 0 0 0 0 0 356
+2 * 356 356
+4 * 356 356 0 0 23 0 0 23
+2 * 356 0 356 0 0 14 0 0 14
+2 * 356 356
+1 * 356 356

fn=(28)
0x404992 113 736 0 736 1 0 0 1
+1 * 736
+3 * 736 0 736
+4 +1 736
+10 * 736 736
+1 * 736 736

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 712 0 712
+1 * 712
+3 * 712 0 712
+4 * 712 712
+1 * 712 712

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 356 0 356
+1 * 356
+3 * 356
+4 * 356 0 356
+4 * 356 0 356
+4 * 356 0 356
+4 +1 356 356
+4 * 356
+3 * 356
+5 * 356 0 356
cfi=(16)
cfn=(226)
calls=356 0x402d61 -20 
* * 2492 1068 1068
+5 * 356
+3 * 356 0 0 0 0 0 0 0 0 356 2
+2 * 356 356
+4 * 356 356 0 0 23 0 0 23
+2 * 356 0 356 0 0 4 0 0 4
+2 * 356 356
+1 * 356 356

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 720 0 720
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 * 720 0 720
+4 +1 720 720
+4 * 720
+3 * 720 0 720
cob=(5)
cfi=(8)
cfn=(164)
calls=720 0x387e4bb2f0 0 
* * 91452 23983 13081 21 4 0 21 4 0 22554 200 720
* * 720 720 0 1 1 0 1 1 0 0 0 720
+5 * 720 720
+1 * 720 720

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 720 0 720
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 * 720 0 720
+4 +1 720 720
+4 * 720
+3 * 720 0 720
cob=(5)
cfi=(8)
cfn=(164)
calls=720 0x387e4bb2f0 0 
* * 89285 23472 12244 0 1 0 0 1 0 22099 288 720
* * 720 720 0 0 0 0 0 0 0 0 0 720
+5 * 720 720
+1 * 720 720

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 720 0 720 1 0 0 1
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 * 720 0 720
+4 +2 720 720
+4 * 720
+3 * 720 0 720
cfn=(102)
calls=720 0x4048de +12 
* * 4320 1440 1440 1 0 0 1
+5 * 720 720
+4 * 720 0 0 1 0 0 1
+3 * 720
+2 * 720 0 0 0 0 0 0 0 0 720
jcnd=720/720 +7 +3 
* * 
+7 +3 720 720
+4 * 720
+4 * 720
+3 * 720 0 720
cob=(5)
cfi=(8)
cfn=(32)
calls=720 0x387e4bd0b0 0 
* * 234343 35171 33724 32 23 33 32 23 33 39643 1841 720
* * 720 720 0 0 0 0 0 0 0 0 0 720
+5 +1 720 720
+1 * 720 720

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 712 0 712 1 0 0 1
+1 * 712
+3 * 712 0 712 0 0 1 0 0 1
+4 * 712 0 712
+4 * 712 712
+1 * 712 712

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 712 0 712 1 0 0 1
+1 * 712
+3 * 712 0 712
+4 * 712 0 712
+4 * 712 712
+1 * 712 712

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 712 0 712
+1 * 712
+3 * 712 0 712
+4 * 712 712
+1 * 712 712

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +2 712 712
+4 * 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=712 0x404484 107 
* * 369150 123552 119284 25 3 2 25 3 2 14084 917 1420 176
+5 * 712 712
+1 * 712 712

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +2 712 712 0 1 0 0 1
+4 * 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=712 0x404a36 450 
* * 349214 116432 112164 24 3 2 24 3 2 14084 917 1420 176
+5 * 712 712
+1 * 712 712

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +2 712 712
+4 * 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=712 0x40439c 107 
* * 369150 123552 119284 7 0 20 7 0 20 14084 834 1420
+5 * 712 712
+1 * 712 712

fn=(116)
0x40439c 107 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +10 712 712
+4 * 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=712 0x4047d7 -26 
* * 359182 119992 115724 7 0 20 7 0 20 14084 834 1420
+5 +1 712 712
+1 * 712 712

fn=(118)
0x4047d7 91 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +2 712 712
+4 * 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=712 0x4049e2 450 
* * 349214 116432 112164 7 0 20 7 0 20 14084 834 1420
+5 * 712 712
+1 * 712 712

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +10 712 712
+4 * 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(52)
calls=712 0x404829 -26 
* * 359182 119992 115724 25 3 2 25 3 2 14084 917 1420 176
+5 +1 712 712
+1 * 712 712

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 712 0 712 1 0 0 1
+1 * 712
+3 * 712 0 712
+1 * 712
+4 * 712 0 712
+4 +2 712 712
+4 * 712 712
+4 * 712
+3 * 712 712
+4 * 712 712
+3 * 712
+3 * 712
+3 * 712
+4 * 712
+3 * 712 712
+4 * 712 712
+3 -1 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=712 0x403d98 +11 
* * 108338 30368 19250 1 1 0 1 1 0 22608 279 1424
+5 +1 712 712
+4 * 712
+3 * 712 0 712
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=712 0x403296 -82 
* * 16376 5696 5696 1 0 0 1
+5 * 712
jump=712 +28 * 
* * 
+28 * 712
+4 * 712 712
+1 * 712 712
+1 * 712 712

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2880 0 2880 1 0 0 1
+1 * 2880
+3 * 2880 0 2880 0 0 1 0 0 1
+4 +1 2880 2880
+4 * 2880 2880 0 1 1 0 1 1
+4 * 2880
+3 * 2880 2880
+4 * 2880 2880
+3 * 2880
+3 * 2880
+3 * 2880
+4 * 2880 2880
+1 * 2880 2880

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 +2 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=712 0x404236 -14 
* * 262158 43816 45637 23 18 16 23 18 16 39530 1596 1424
+5 * 712 712
+4 * 712 0 712
+3 +1 712 712
+4 * 712 712 0 1 0 0 1
+3 * 712 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+3 * 712 712
+4 * 712
+4 * 712
+3 * 712 712
+4 * 712 0 712
+4 +1 712 712
+1 * 712 712

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 +2 712 712
+4 * 712 712 0 1 0 0 1
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=712 0x403fbe -14 
* * 261146 43825 41703 21 19 29 21 19 29 40536 1785 1424
+5 * 712 712
+4 * 712 0 712
+3 +1 712 712
+4 * 712 712
+3 * 712 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+3 * 712 712
+4 * 712
+4 * 712
+3 * 712 712
+4 * 712 0 712
+4 +1 712 712
+1 * 712 712

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 356 0 356
+1 * 356
+3 * 356 0 0 1 0 0 1
+4 * 356 0 356
+4 * 356 0 356
+4 +2 356 356
+4 * 356 356
+4 * 356 356
+4 * 356 356
+4 * 356
+3 * 356 0 0 0 0 0 0 0 0 356
jcnd=8/356 +51 +10 
* * 
+2 +3 348 348
+4 * 348 348
+4 * 348 348
+4 -1 348 348
+4 * 348
+3 * 348
+3 * 348 0 348
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=348 0x4036b1 215 
* * 13224 4524 4872 0 22 10 0 22 10 348
+5 +2 348 348
+4 * 348 348
+4 * 348
+4 * 348 348
+4 * 348 0 348
+4 * 348
jump=348 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11906 3694 3228 18 2 29 18 2 29 704 65 47
+5 +2 356 356
+1 * 356 356

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1448 0 1448 1 0 0 1
+1 * 1448
+3 * 1448 0 1448 1 0 0 1
+4 +1 1448 1448
+4 * 1448 1448
+1 * 1448 1448

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+3 * 712 0 712
+4 * 712
+4 * 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=712 0x404380 726 
* * 7120 3560 2848
+5 * 712 712
+4 * 712 712
+1 * 712 712

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 712 0 712
+1 * 712
+3 * 712 0 712
+1 * 712
+4 * 712 0 712 1 0 0 1
+4 +2 712 712
+4 * 712
+3 * 712 0 712
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=712 0x40325e 113 
* * 4272 2136 1424
+5 * 712
+3 * 712 712
+4 * 712 712
+4 * 712 712
+4 * 712 712
+3 -1 712
+3 * 712
+3 * 712 0 712
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=712 0x40326c 148 
* * 22072 7120 8544 4 0 0 4
+5 +1 712 712
+4 * 712
+3 * 712 0 712
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=712 0x4031ec 159 
* * 146850 44424 29346 25 5 0 25 5 0 23072 195 1424
+5 * 712
jump=712 +28 * 
* * 
+28 * 712 0 0 1 0 0 1
+4 * 712 712
+1 * 712 712
+1 * 712 712

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 720 0 720 1 0 0 1
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 * 720 0 720
+4 +2 720 720
+5 * 720 0 0 0 0 0 0 0 0 720
+2 +1 720 720
+4 * 720 720
+4 * 720 720
+4 * 720
+3 * 720
+3 * 720 0 720
cfi=(5)
cfn=(160)
calls=720 0x4044d6 -65 
* * 100092 26863 16681 22 5 0 22 5 0 22554 200 1440
+5 +1 720 720
+1 * 720 720

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 712 0 712
+1 * 712
+3 * 712 0 712
+1 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=712 0x4043ca -45 
* * 25632 9256 9968 4 0 4 4 0 4
+5 +1 712 712 0 1 0 0 1
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(20)
calls=712 0x404412 +43 
* * 279958 52360 50621 24 18 16 24 18 16 39530 1596 1424
+5 * 712
jump=712 +28 * 
* * 
+28 * 712
+4 * 712 712
+1 * 712 712
+1 * 712 712

fn=(14)
0x4043ca 90 712 0 712 1 0 0 1
+1 * 712
+3 * 712
+4 * 712 0 712 0 0 1 0 0 1
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=712 0x404804 +24 
* * 12816 4272 4984 2 0 1 2 0 1
+5 * 712 712
+4 * 712 0 712 0 0 2 0 0 2
+7 * 712 712
+4 * 712 0 712 1 0 0 1
+8 * 712 712
+4 * 712 0 712
+8 +1 712 712
+1 * 712 712

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 712 0 712 1 0 0 1
+1 * 712
+3 * 712 0 712
+2 * 712 0 712
+2 * 712 0 712
+1 * 712 0 0 1 0 0 1
+4 * 712 0 712
+4 * 712 0 712
+4 +2 712 712
+4 * 712
+3 * 712 0 712
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=712 0x4039fc 117 
* * 4272 2136 1424 2 0 0 2
+5 * 712
+3 * 712 0 712
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=712 0x4039ed -88 
* * 4272 2136 1424
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(2)
calls=712 0x402d74 645 
* * 9256 4272 1424
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712
+3 * 712
+3 * 712 0 712 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=712 0x403a0a 134 
* * 320242 66609 61639 28 19 29 28 19 29 40536 1785 1424
+5 +4 712 712
+4 * 712
+3 * 712 0 712
cfn=(106)
calls=712 0x40325e 113 
* * 4272 2136 1424 1 0 0 1
+5 * 712
+3 * 712 712
+4 * 712 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=712 0x403a98 565 
* * 17800 7120 5696 2 0 0 2
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(112)
calls=712 0x403a68 547 
* * 17800 7120 5696
+5 * 712
+3 * 712
+3 * 712
+3 * 712
+3 * 712 0 712
cfi=(11)
cfn=(114)
calls=712 0x403ac9 -60 
* * 379830 127112 123556 7 0 20 7 0 20 14084 834 1420
+5 -3 712 712
+4 * 712 0 712
+4 * 712
jump=712 +28 +4 
* * 
+28 +4 712
+4 * 712 712
+1 * 712 712
+2 * 712 712
+2 * 712 712
+1 * 712 712

fn=(188)
0x403d98 171 720 0 720 1 0 0 1
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 * 720 0 720
+4 +2 720 720
+5 * 720 0 0 0 0 0 0 0 0 720 8
+2 +1 720 720
+4 * 720 720
+4 * 720 720
+4 * 720
+3 * 720
+3 * 720 0 720
cfi=(5)
cfn=(190)
calls=720 0x40452a -65 
* * 97925 26352 15844 0 1 0 0 1 0 22099 288 1440
+5 +1 720 720
+1 * 720 720

fn=(22)
0x404236 167 720 0 720 1 0 0 1
+1 * 720
+3 * 720
+4 * 720 0 720 1 0 0 1
+4 * 720 0 720
+4 0 720 720
+5 0 720 0 0 0 0 0 0 0 0 720
+2 0 720 720
+4 0 720 720
+4 0 720
+5 0 720
+3 0 720
+3 0 720 0 720
fi=(6) ???
cfi=(5)
cfn=(26)
calls=720 0x404730 99 
* 0 253083 40658 43210 21 19 22 21 19 22 39155 1640 1440
+5 0 720
fi=(6)
jump=720 +7 0 
* 0 
+7 0 720 720
+1 0 720 720

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 712 0 712 1 0 0 1
+1 * 712
+3 * 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+4 * 712 0 712
+4 * 712
+4 * 712 0 0 1 0 0 1
+4 * 712
+3 * 712
+3 * 712 0 712
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=712 0x404468 726 
* * 7120 3560 2848 1 0 0 1
+5 * 712 712
+4 * 712 712
+1 * 712 712

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+3 * 712 0 712
+4 * 712
+4 * 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfi=(10)
cfn=(44)
calls=712 0x404468 726 
* * 7120 3560 2848
+5 * 712 712
+4 * 712 712
+1 * 712 712

fn=(86)
0x403a0a 134 712 0 712
+1 * 712
+3 * 712 0 712
+1 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=712 0x4042e2 -45 
* * 25632 9256 9968 5 0 0 5
+5 +1 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712 1 0 0 1
cfn=(94)
calls=712 0x40432a +43 
* * 278946 52369 46687 22 19 29 22 19 29 40536 1785 1424
+5 * 712
jump=712 +28 * 
* * 
+28 * 712
+4 * 712 712
+1 * 712 712
+1 * 712 712

fn=(88)
0x4042e2 90 712 0 712 1 0 0 1
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=712 0x4047b2 +24 
* * 12816 4272 4984 3 0 0 3
+5 * 712 712
+4 * 712 0 712
+7 * 712 712
+4 * 712 0 712
+8 * 712 712
+4 * 712 0 712
+8 +1 712 712
+1 * 712 712

fn=(156)
0x4031ec 159 712 0 712 1 0 0 1
+1 * 712
+3 * 712 0 712
+1 * 712
+4 * 712 0 712
+4 +2 712 712
+4 * 712 712 0 1 0 0 1
+4 * 712
+3 * 712 712
+4 * 712 712
+3 * 712
+3 * 712
+3 * 712
+4 * 712
+3 * 712 712
+4 * 712 712
+3 -1 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(158)
calls=712 0x403ce6 +11 
* * 110538 30896 20090 22 5 0 22 5 0 23072 195 1424
+5 +1 712 712
+4 * 712
+3 * 712 0 712
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=712 0x4031b8 -82 
* * 16376 5696 5696 1 0 0 1
+5 * 712
jump=712 +28 * 
* * 
+28 * 712
+4 * 712 712
+1 * 712 712
+1 * 712 712

fn=(172)
0x4031b8 79 712 0 712 1 0 0 1
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 712
+4 * 712
+3 * 712 0 712
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=712 0x403ccc +42 
* * 9968 3560 3560
+5 * 712 712
+1 * 712 712

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1456 0 1456 1 0 0 1
+1 * 1456
+3 * 1456 0 1456
+4 +1 1456 1456
+4 * 1456 1456 0 0 2 0 0 2
+4 * 1456
+3 * 1456 1456
+4 * 1456 1456
+3 * 1456
+3 * 1456
+3 * 1456
+4 * 1456 1456
+1 * 1456 1456

fn=(106)
0x40325e 113 1448 0 1448 1 0 0 1
+1 * 1448
+3 * 1448 0 1448
+4 +1 1448 1448
+4 * 1448 1448
+1 * 1448 1448

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 728 0 728 1 0 0 1
+1 * 728
+3 * 728 0 728 0 0 1 0 0 1
+4 +1 728 728
+4 * 728 728
+1 * 728 728

fn=(82)
0x4039fc 117 728 0 728 1 0 0 1
+1 * 728
+3 * 728 0 728 1 0 0 1
+4 +1 728 728
+4 * 728 728
+1 * 728 728

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 356 0 356
+1 * 356
+3 * 356
+4 * 356 0 356
+4 * 356 0 356
+4 +2 356 356
+4 * 356 356
+4 * 356 356
+4 * 356 356
+4 * 356
+3 * 356 0 0 0 0 0 0 0 0 356 8
jcnd=8/356 +51 +10 
* * 
+2 +3 348 348
+4 * 348 348
+4 * 348 348
+4 -1 348 348
+4 * 348
+3 * 348
+3 * 348 0 348
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=348 0x403373 215 
* * 13224 4524 4872 0 22 3 0 22 3 348 2
+5 +2 348 348
+4 * 348 348
+4 * 348
+4 * 348 348
+4 * 348 0 348
+4 * 348
jump=348 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12865 3941 3433 39 5 8 39 5 8 897 67 47
+5 +2 356 356
+1 * 356 356

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 712 0 712 1 0 0 1
+1 * 712
+3 * 712 0 712
+2 * 712 0 712
+2 * 712 0 712
+1 * 712
+4 * 712 0 712 1 0 0 1
+4 * 712 0 712
+4 +2 712 712
+4 * 712
+3 * 712 0 712
cfn=(6)
calls=712 0x403b08 117 
* * 4272 2136 1424 1 0 1 1 0 1
+5 * 712
+3 * 712 0 712
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=712 0x403afa -88 
* * 4272 2136 1424 1 0 0 1
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(10)
calls=712 0x402f54 645 
* * 9256 4272 1424 1 1 0 1 1
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712
+3 * 712
+3 * 712 0 712
cfn=(12)
calls=712 0x403b16 134 
* * 321254 66600 65573 29 18 20 29 18 20 39530 1596 1424
+5 +4 712 712 0 1 0 0 1
+4 * 712
+3 * 712 0 712
cfn=(40)
calls=712 0x40333c 113 
* * 4272 2136 1424 2 0 0 2
+5 * 712
+3 * 712 712
+4 * 712 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(42)
calls=712 0x403ba4 565 
* * 17800 7120 5696 3 0 0 3
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(46)
calls=712 0x403b74 547 
* * 17800 7120 5696
+5 * 712
+3 * 712
+3 * 712
+3 * 712
+3 * 712 0 712 1 0 0 1
cfi=(11)
cfn=(48)
calls=712 0x403bd5 -60 
* * 379830 127112 123556 26 3 2 26 3 2 14084 917 1420 176
+5 -3 712 712
+4 * 712 0 712
+4 * 712
jump=712 +28 +4 
* * 
+28 +4 712
+4 * 712 712
+1 * 712 712
+2 * 712 712
+2 * 712 712
+1 * 712 712

fn=(108)
0x403a98 565 712 0 712 1 0 0 1
+1 * 712
+3 * 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+4 * 712 0 712
+4 * 712
+4 * 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfi=(10)
cfn=(110)
calls=712 0x404380 726 
* * 7120 3560 2848 1 0 0 1
+5 * 712 712
+4 * 712 712
+1 * 712 712

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 712 0 712
+1 * 712
+3 * 712 0 712
+1 * 712
+4 * 712 0 712 1 0 0 1
+4 +2 712 712
+4 * 712
+3 * 712 0 712
cfn=(40)
calls=712 0x40333c 113 
* * 4272 2136 1424
+5 * 712
+3 * 712 712
+4 * 712 712
+4 * 712 712
+4 * 712 712
+3 -1 712
+3 * 712
+3 * 712 0 712
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=712 0x40334a 148 
* * 22072 7120 8544 2 0 0 2
+5 +1 712 712
+4 * 712
+3 * 712 0 712
cfn=(186)
calls=712 0x4032ca 159 
* * 144650 43896 28506 3 1 0 3 1 0 22608 279 1424
+5 * 712
jump=712 +28 * 
* * 
+28 * 712 0 0 1 0 0 1
+4 * 712 712
+1 * 712 712
+1 * 712 712

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 720 0 720 1 0 0 1
+1 * 720 0 0 1 0 0 1
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 0 720 720
+5 0 720 0 0 0 0 0 0 0 0 720
+2 0 720 720
+4 0 720 720
+4 0 720
+5 0 720
+3 0 720
+3 0 720 0 720
fi=(6)
cfi=(5)
cfn=(100)
calls=720 0x40461a 99 
* 0 253063 40931 39484 35 23 33 35 23 33 40363 1841 1440
+5 0 720
fi=(6)
jump=720 +7 0 
* 0 
+7 0 720 720
+1 0 720 720

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 192418 0 192418
+1 * 192418
+3 * 192418 0 192418
+4 * 192418 0 192418
+4 +1 192418 192418
+4 * 192418 192418
+3 * 192418 192418
+4 * 192418
+4 * 192418
+3 * 192418 192418
+1 * 192418 192418

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 192418 0 192418
+1 * 192418
+3 * 192418 0 192418 1 0 0 1
+4 * 192418 0 192418
+4 +1 192418 192418
+4 * 192418 192418
+3 * 192418 192418
+4 * 192418
+4 * 192418
+3 * 192418 192418
+1 * 192418 192418

fn=(192)
0x403296 79 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 712
+4 * 712
+3 * 712 0 712
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=712 0x403d7e +42 
* * 9968 3560 3560 1 0 0 1
+5 * 712 712
+1 * 712 712

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1424 0 1424 1 0 0 1
+1 * 1424
+3 * 1424
+4 * 1424 0 1424 1 0 0 1
+4 +1 1424 1424
+4 * 1424
+3 * 1424 0 1424
cfi=(13)
cfn=(58)
calls=1424 0x404d8f -77 
* * 8544 4272 2848 1 0 0 1
+5 * 1424 1424
+1 * 1424 1424

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 728 0 728
+1 * 728
+3 * 728
+4 * 728 0 728 1 0 0 1
+4 * 728 0 728
+4 * 728 0 728
+4 +2 728 728
+4 * 728 728
+4 * 728
+3 * 728
+3 * 728
+4 * 728 0 728
+4 +1 728 728
+5 * 728 0 0 0 0 0 0 0 0 728
jcnd=8/728 +33 +2 
* * 
+2 +1 720 720
+4 * 720
+8 * 720 720
+4 * 720 720
+4 * 720
+3 * 720 0 0 1 0 0 1
+3 * 720 0 720 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=720 0x3877c83840 0 
* * 216480 70468 69033 11 2 19 11 2 19 13456 921 715 176
* * 720 720 0 1 1 0 1 1 0 0 0 720
+5 +1 728 728
+4 * 728
+8 * 728 728
+4 * 728
+3 +1 728 728
+1 * 728 728

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 728 0 728
+1 * 728
+3 * 728
+4 * 728 0 728 1 0 0 1
+4 * 728 0 728
+4 * 728 0 728 0 0 1 0 0 1
+4 +2 728 728
+4 * 728 728
+4 * 728
+3 * 728
+3 * 728
+4 * 728 0 728
+4 +1 728 728
+5 * 728 0 0 0 0 0 0 0 0 728
jcnd=8/728 +33 +2 
* * 
+2 +1 720 720
+4 * 720
+8 * 720 720
+4 * 720 720
+4 * 720
+3 * 720
+3 * 720 0 720
cob=(2)
cfi=(9)
cfn=(78)
calls=720 0x3877c83840 0 
* * 216480 70468 69033 0 0 21 0 0 21 13456 840 715
* * 720 720 0 0 0 0 0 0 0 0 0 720
+5 +1 728 728
+4 * 728
+8 * 728 728
+4 * 728
+3 +1 728 728
+1 * 728 728

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712 1 0 0 1
+4 * 712 0 712
+4 * 712 0 712
+4 +8 712 0 712
+4 +3 712 712
+4 * 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(74)
calls=712 0x404f37 -22 
* * 235294 77984 73004 14 3 1 14 3 1 14084 917 1420 176
+5 +1 712 712
+1 * 712 712

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 712 0 712
+1 * 712
+3 * 712 0 712
+2 * 712 0 712
+1 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +4 712 712
+4 * 712
+3 * 712 0 712
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=712 0x404878 277 
* * 10680 4272 3560 1 0 0 1
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=712 0x404d44 277 
* * 17800 6408 5696 2 0 0 2
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(132)
calls=712 0x404d44 277 
* * 17800 6408 5696
+5 * 712
+3 * 712
+3 * 712
+3 * 712 0 712
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=712 0x404d5e -49 
* * 245974 81544 77276 1 0 20 1 0 20 14084 834 1420
+5 +1 712
+4 * 712 712
+1 * 712 712
+2 * 712 712
+1 * 712 712

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 712 0 712
+1 * 712
+3 * 712 0 712
+1 * 712
+4 * 712 0 712 1 0 0 1
+4 * 712 0 712
+4 * 712 0 712
+4 +10 712 712
+4 * 712
+3 * 712 0 712
cfn=(56)
calls=712 0x404c38 288 
* * 10680 4272 3560 3 0 0 3
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(56)
calls=712 0x404c38 288 
* * 10680 4272 3560
+5 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=712 0x404c52 -36 
* * 312190 103616 99348 20 3 2 20 3 2 14084 917 1420 176
+5 +1 712
+4 * 712 712
+1 * 712 712
+1 * 712 712

fn=(60)
0x404c52 424 712 0 712
+1 * 712
+3 * 712 0 712
+2 * 712 0 712
+1 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +4 712 712
+4 * 712
+3 * 712 0 712
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=712 0x40492d 277 
* * 10680 4272 3560 2 0 0 2
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=712 0x404d9d 277 
* * 17800 6408 5696 2 0 1 2 0 1
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(66)
calls=712 0x404d9d 277 
* * 17800 6408 5696
+5 * 712
+3 * 712
+3 * 712
+3 * 712 0 712
cfn=(72)
calls=712 0x404db7 -49 
* * 245974 81544 77276 15 3 1 15 3 1 14084 917 1420 176
+5 +1 712
+4 * 712 712
+1 * 712 712
+2 * 712 712
+1 * 712 712

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 760 0 760 1 0 0 1
+1 * 760
+3 * 760
+4 * 760 0 760
+4 +1 760 760
+4 * 760
+3 * 760 0 760 1 0 0 1
cfi=(13)
cfn=(64)
calls=760 -33 -66 
* * 4560 2280 1520
+5 * 760 760
+1 * 760 760

fn=(66)
0x404d9d 277 1424 0 1424
+1 * 1424
+3 * 1424
+4 * 1424 0 1424
+4 +1 1424 1424
+4 * 1424
+3 * 1424 0 1424
cfi=(13)
cfn=(68)
calls=1424 0x404f1a -58 
* * 22784 8544 7120 2 0 1 2 0 1
+5 * 1424 1424
+1 * 1424 1424

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 712 0 712
+1 * 712
+3 * 712 0 712
+1 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +10 712 712
+4 * 712
+3 * 712 0 712
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=712 0x404bc6 288 
* * 10680 4272 3560 3 0 0 3
+5 * 712
+3 * 712 712
+4 * 712
+3 * 712 0 712
cfn=(122)
calls=712 0x404bc6 288 
* * 10680 4272 3560
+5 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(126)
calls=712 0x404be0 -36 
* * 312190 103616 99348 4 0 20 4 0 20 14084 834 1420
+5 +1 712
+4 * 712 712
+1 * 712 712
+1 * 712 712

fn=(128)
0x404878 277 760 0 760
+1 * 760
+3 * 760
+4 * 760 0 760 1 0 0 1
+4 +1 760 760
+4 * 760
+3 * 760 0 760
cfi=(13)
cfn=(130)
calls=760 -33 -66 
* * 4560 2280 1520 0 0 1 0 0 1
+5 * 760 760
+1 * 760 760

fn=(132)
0x404d44 277 1424 0 1424
+1 * 1424
+3 * 1424
+4 * 1424 0 1424
+4 +1 1424 1424
+4 * 1424
+3 * 1424 0 1424
cfi=(13)
cfn=(134)
calls=1424 0x404e98 -58 
* * 22784 8544 7120 2 0 0 2
+5 * 1424 1424
+1 * 1424 1424

fn=(138)
0x404d5e 379 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 * 712 0 712
+4 +8 712 0 712
+4 +3 712 712
+4 * 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfn=(140)
calls=712 0x404eb5 -22 
* * 235294 77984 73004 1 0 20 1 0 20 14084 834 1420
+5 +1 712 712
+1 * 712 712

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1424 0 1424 1 0 0 1
+1 * 1424
+3 * 1424
+4 * 1424 0 1424
+4 +1 1424 1424
+4 * 1424
+3 * 1424 0 1424
cfi=(13)
cfn=(124)
calls=1424 0x404d36 -77 
* * 8544 4272 2848 2 0 0 2
+5 * 1424 1424
+1 * 1424 1424

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1424 0 1424 1 0 0 1
+1 * 1424
+3 * 1424 0 1424
+4 +1 1424 1424
+4 * 1424 1424
+1 * 1424 1424

fn=(110)
0x404380 726 1424 0 1424 1 0 0 1
+1 * 1424
+3 * 1424 0 1424
+4 * 1424 0 1424
+4 * 1424 1424
+4 * 1424 1424
+3 * 1424 1424
+4 * 1424 0 1424
+3 * 1424 1424
+1 * 1424 1424

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1424 0 1424 1 0 0 1
+1 * 1424
+3 * 1424 0 1424
+4 +1 1424 1424
+4 * 1424 1424
+1 * 1424 1424

fn=(44)
0x404468 726 1424 0 1424
+1 * 1424
+3 * 1424 0 1424
+4 * 1424 0 1424
+4 * 1424 1424
+4 * 1424 1424
+3 * 1424 1424
+4 * 1424 0 1424 1 0 0 1
+3 * 1424 1424
+1 * 1424 1424

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 720 0 720 1 0 0 1
+1 * 720
+3 * 720 0 720
+4 * 720 0 720 1 0 0 1
+4 * 720 720
+1 * 720 720

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 720 0 720 1 0 0 1
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 +4 720 720
+4 * 720 720
+4 * 720
+3 * 720
+3 * 720 0 720
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=720 0x40454c -14 
* * 4320 1440 2160 1 0 0 1
+5 +2 720 720
+1 * 720 720

fn=(150)
0x40326c 148 720 0 720
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 * 720 0 720
+4 +3 720 720 0 1 0 0 1
+4 * 720 720
+4 * 720
+3 * 720
+3 * 720 0 720
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=720 0x403d1a -29 
* * 12960 4320 5040 3 0 0 3
+5 +1 720 720
+1 * 720 720

fn=(180)
0x40334a 148 720 0 720
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 * 720 0 720
+4 +3 720 720
+4 * 720 720
+4 * 720
+3 * 720
+3 * 720 0 720
cfn=(182)
calls=720 0x403dcc -29 
* * 12960 4320 5040 2 0 0 2
+5 +1 720 720
+1 * 720 720

fn=(152)
0x403d1a 122 720 0 720 1 0 0 1
+1 * 720
+3 * 720
+4 * 720 0 720
+4 * 720 0 720
+4 +4 720 720
+4 * 720 720
+4 * 720
+3 * 720
+3 * 720 0 720
cfn=(154)
calls=720 0x4044f8 -14 
* * 4320 1440 2160 2 0 0 2
+5 +2 720 720
+1 * 720 720

fn=(184)
0x40454c 112 720 0 720 1 0 0 1
+1 * 720
+3 * 720 0 720
+4 * 720 0 720
+4 * 720 720
+1 * 720 720

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2445 442 453 0 1 6 0 1 6 345 44 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3437 706 661 16 4 4 16 4 4 547 56 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 5 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 356 0 356 1 0 0 1
+1 * 356
+3 * 356
+4 * 356 0 356
+4 * 356 0 356
+4 +1 356 356
+4 * 356
+3 * 356 0 356
cfi=(2)
cfn=(2)
calls=356 0x402d74 645 
* * 4628 2136 712
+5 * 356
+3 * 356 0 356
+3 +1 356 356
+6 * 356 0 356
+3 * 356 356
+6 * 356 0 356
+3 +1 356 356
+6 * 356 0 356 1 0 0 1
+3 * 356 356
+6 * 356 0 356
+3 +2 356 0 356
+7 * 356
jump=356 +86 * 
* * 
+2 +1 63902 63902
+3 * 63902
+3 * 63902 63902
+4 * 63902
+3 * 63902
+3 * 63902 0 63902
cfi=(2)
cfn=(144)
calls=63902 0x402d9a 770 
* * 702922 319510 191706
+5 * 63902 63902
+4 * 63902 63902
+5 * 63902
+4 * 63902 0 63902
+5 +1 63902 63902
+3 * 63902
+3 * 63902 63902
+4 * 63902
+3 * 63902
+3 * 63902 0 63902
cfi=(2)
cfn=(146)
calls=63902 0x402dba 770 
* * 702922 319510 191706 1 0 0 1
+5 * 63902 63902
+2 * 63902
+4 * 63902 63902
+5 * 63902
+4 * 63902 0 63902
+5 -2 63902 0 63902
+4 * 63902 63902
+3 * 63902
+3 * 63902 63902
+3 * 63902 0 0 0 0 0 0 0 0 63902 357
jcnd=63546/63902 -93 +1 
* * 
-9 * 356 356 0 1 0 0 1
+3 * 356
+3 * 356 356
+3 * 356 0 0 0 0 0 0 0 0 356
jcnd=356/356 -93 +1 
* * 
+2 +4 356 356
+3 * 356
+3 * 356
+4 * 356 356 0 1 0 0 1
+5 * 356
+4 * 356
+3 * 356 0 356
+5 +1 356 356
+3 * 356
+3 * 356
+4 * 356 356
+5 * 356
+4 * 356
+3 * 356 0 356
+5 +1 356 0 356
+7 * 356
jump=356 0x4016ee * 
* * 
+2 +1 63902 63902
+3 * 63902
+3 * 63902 63902
+4 * 63902
+3 * 63902 0 0 1 0 0 1
+3 * 63902 0 63902
cfi=(2)
cfn=(146)
calls=63902 0x402dba 770 
* * 702922 319510 191706
+5 * 63902 63902
+2 * 63902
+4 * 63902 63902
+5 * 63902 0 63902
+5 +1 63902 63902
+3 * 63902
+3 * 63902 63902
+4 * 63902
+3 * 63902
+3 * 63902 0 63902
cfi=(2)
cfn=(144)
calls=63902 0x402d9a 770 
* * 702922 319510 191706
+5 * 63902 63902
+4 * 63902 63902
+5 * 63902 0 63902
+5 +1 63902 63902
+5 * 63902 63902
+5 * 63902 63902
+5 * 63902
+4 * 63902 0 63902
+5 +1 63902 63902
+5 * 63902 63902
+5 * 63902 63902
+5 * 63902
+4 * 63902 0 63902
+5 -4 63902 0 63902
+4 * 63902 63902
+3 * 63902
+3 * 63902 63902
+3 * 63902 0 0 0 0 0 0 0 0 63902 357
jcnd=63546/63902 0x401672 +1 
* * 
-9 * 356 356 0 1 0 0 1
+3 * 356
+3 * 356 356
+3 * 356 0 0 0 0 0 0 0 0 356
jcnd=356/356 0x401672 +1 
* * 
+6 +6 356 356 0 1 0 0 1
+5 * 356 356
+5 * 356 0 356
+5 +2 356 356
+3 +1 356 0 356
+3 * 356 356
+5 * 356 356
+1 * 356 356

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 356
+7 * 356
+7 * 356
+3 * 356
+3 * 356 0 356
cfi=(2)
cfn=(4)
calls=356 0x4030b2 310 
* * 397402 114316 108511 63 21 22 63 21 22 26827 1431 1422 176
+5 * 356
+7 * 356
+7 * 356
+3 * 356
+3 * 356 0 356
cfi=(2)
cfn=(80)
calls=356 0x402ff4 310 
* * 397407 114345 106577 43 19 49 43 19 49 27445 1430 1422
+5 * 356 0 0 1 0 0 1
+7 * 356
+7 * 356
+3 * 356
+3 * 356 0 356
cfn=(142)
calls=356 0x401585 -52 
* * 6668948 2948392 1539700 8 0 0 8 0 0 128516 714
+5 * 356 0 356
+8 * 356 356
+6 * 356 0 356
+6 * 356
+7 * 356
+3 * 356 0 356
cfi=(2)
cfn=(148)
calls=356 0x402df4 414 
* * 95141 30044 21793 31 5 0 31 5 0 11536 100 712
+5 * 356
+7 * 356
+3 * 356 0 356 1 0 0 1
cfi=(2)
cfn=(178)
calls=356 0x402e74 414 
* * 94041 29780 21373 7 1 0 7 1 0 11304 141 712
+5 +2 356
+7 * 356
+7 * 356
+3 * 356
+3 * 356 0 356
cfi=(2)
cfn=(4)
calls=356 0x4030b2 310 
* * 396954 114284 108386 4 1 1 4 1 1 26787 1082 1422
+5 * 356
+7 * 356
+7 * 356
+3 * 356
+3 * 356 0 356
cfi=(2)
cfn=(80)
calls=356 0x402ff4 310 
* * 395937 114264 106386 0 0 0 0 0 0 27175 1189 1422
+5 * 356 356
+6 * 356 0 0 1 0 0 1
+7 * 356
+7 * 356 0 356
+6 * 356 356
+8 * 356
+3 * 356
+3 * 356 0 356
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=356 0x401719 -33 
* * 3088300 1285872 708262 4 0 0 4 0 0 64258 357
+5 * 356 0 356
+8 * 356 356
+6 * 356 0 356
+6 * 356
+7 * 356 0 0 1 0 0 1
+3 * 356 0 356
cfi=(2)
cfn=(148)
calls=356 0x402df4 414 
* * 95141 30044 21793 0 0 0 0 0 0 11536 95 712
+5 * 356
+7 * 356
+3 * 356 0 356
cfi=(2)
cfn=(178)
calls=356 0x402e74 414 
* * 94041 29780 21373 0 0 0 0 0 0 11304 138 712
+5 +2 356 356
+7 * 356
+3 * 356 0 356
cfi=(2)
cfn=(2)
calls=356 0x402d74 645 
* * 4628 2136 712
+5 * 356 356
+6 * 356
+3 * 356
+3 * 356
+3 * 356 356
+7 * 356
+3 * 356 0 0 1 0 0 1
+3 * 356 0 356
cfi=(2)
cfn=(144)
calls=356 0x402d9a 770 
* * 3916 1780 1068
+5 * 356
+3 * 356
+7 * 356
+3 * 356
+3 * 356 0 356
cfi=(2)
cfn=(200)
calls=356 0x402eda 901 
* * 35497 13133 10141 42 27 11 42 27 11 1601 77 47
+5 +1 356 356
+7 * 356
+3 * 356 0 356
cfi=(2)
cfn=(10)
calls=356 0x402f54 645 
* * 4628 2136 712 0 1 0 0 1
+5 * 356 356
+6 * 356
+3 * 356
+3 * 356
+3 * 356 356
+7 * 356 0 0 1 0 0 1
+3 * 356
+3 * 356 0 356
cfi=(2)
cfn=(146)
calls=356 0x402dba 770 
* * 3916 1780 1068
+5 * 356
+3 * 356
+7 * 356
+3 * 356
+3 * 356 0 356
cfi=(2)
cfn=(244)
calls=356 0x402f7a 901 
* * 34538 12886 9936 19 24 39 19 24 39 1408 65 47
+5 +1 356 356
+7 * 356
+3 * 356 0 356
cfi=(2)
cfn=(10)
calls=356 0x402f54 645 
* * 4628 2136 712
+5 * 356 356
+6 * 356
+3 * 356
+3 * 356
+3 * 356 356 0 1 0 0 1
+7 * 356
+3 * 356
+3 * 356 0 356
cfi=(2)
cfn=(146)
calls=356 0x402dba 770 
* * 3916 1780 1068
+5 * 356 356
+2 * 356
+4 * 356 356
+8 * 356 356
+8 * 356 0 356
+8 +1 356 356
+7 * 356
+3 * 356 0 356
cfi=(2)
cfn=(2)
calls=356 0x402d74 645 
* * 4628 2136 712
+5 * 356 356 0 1 0 0 1
+6 * 356
+3 * 356
+3 * 356
+3 * 356 356
+7 * 356
+3 * 356
+3 * 356 0 356
cfi=(2)
cfn=(144)
calls=356 0x402d9a 770 
* * 3916 1780 1068
+5 * 356 356
+4 * 356 356
+8 * 356
+4 * 356 356
+8 * 356
+3 * 356 0 356
+8 +2 356 0 356
+7 -12 356 356
+8 * 356 356
+7 * 356 0 0 0 0 0 0 0 0 356 1
jcnd=1/356 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 356
+7 * 356
+3 * 356 0 356
cfi=(2)
cfn=(2)
calls=356 0x402d74 645 
* * 4628 2136 712 2 0 1 2 0 1
+5 * 356
+3 * 356 356
+7 * 356
+3 * 356 0 356
cfi=(2)
cfn=(2)
calls=356 0x402d74 645 
* * 4628 2136 712 0 1 0 0 1
+5 * 356
+3 * 356 0 0 0 0 0 0 0 0 356 1
+2 * 356 0 0 1 0 0 1
+5 * 356
jump=356 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 356
+2 * 356 0 0 0 0 0 0 0 0 356
jcnd=356/356 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 356 0 356
+1 * 356
+3 * 356
+4 * 356 0 356
+4 * 356 0 356
+4 * 356 0 356
+5 +1 356 356
+4 * 356
+3 * 356 0 356
cfi=(2)
cfn=(2)
calls=356 0x402d74 645 
* * 4628 2136 712
+5 * 356
+3 * 356 0 356
+3 +1 356 356 0 1 0 0 1
+6 * 356 0 356
+3 * 356 356
+6 * 356 0 356
+3 +2 356 0 356
+7 * 356
jump=356 +86 * 
* * 
+2 +1 63902 63902
+3 * 63902
+3 * 63902 63902
+4 * 63902
+3 * 63902
+3 * 63902 0 63902
cfi=(2)
cfn=(144)
calls=63902 0x402d9a 770 
* * 702922 319510 191706
+5 * 63902 63902
+4 * 63902 63902
+5 * 63902
+4 * 63902 0 63902
+5 +1 63902 63902
+3 * 63902
+3 * 63902 63902
+4 * 63902
+3 * 63902
+3 * 63902 0 63902
cfi=(2)
cfn=(146)
calls=63902 0x402dba 770 
* * 702922 319510 191706
+5 * 63902 63902
+2 * 63902
+4 * 63902 63902
+5 * 63902
+4 * 63902 0 63902
+5 -2 63902 0 63902
+4 * 63902 63902
+3 * 63902
+3 * 63902 63902
+3 * 63902 0 0 0 0 0 0 0 0 63902 357
jcnd=63546/63902 -93 +1 
* * 
-9 * 356 356 0 1 0 0 1
+3 * 356
+3 * 356 356
+3 * 356 0 0 0 0 0 0 0 0 356
jcnd=356/356 -93 +1 
* * 
+2 +4 356 356
+3 * 356
+3 * 356 0 0 1 0 0 1
+4 * 356 356
+5 * 356
+4 * 356
+3 * 356 0 356
+5 +1 356 356
+3 * 356
+3 * 356
+4 * 356 356
+5 * 356
+4 * 356
+3 * 356 0 356
+5 +1 356 356
+5 * 356 356
+5 * 356 356
+5 * 356 0 0 1 0 0 1
+4 * 356
+3 * 356 0 356
+5 +2 356 356
+3 +1 356 0 356
+3 * 356 356
+5 * 356 356
+1 * 356 356

fl=(4)
fn=(174)
0x403ccc 121 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 712
+4 * 712
+3 * 712 0 712
cfi=(5)
cfn=(176)
calls=712 0x4044cc -35 
* * 3560 1424 1424
+5 * 712 712
+1 * 712 712

fn=(90)
0x4047b2 115 712 0 712 1 0 0 1
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712 1 0 0 1
+4 +1 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfi=(5)
cfn=(92)
calls=712 0x4049d4 -35 
* * 4272 1424 2136 1 0 0 1
+5 * 712 712
+1 * 712 712

fn=(194)
0x403d7e 121 712 0 712 1 0 0 1
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 712
+4 * 712
+3 * 712 0 712
cfi=(5)
cfn=(196)
calls=712 0x404520 -35 
* * 3560 1424 1424
+5 * 712 712
+1 * 712 712

fn=(16)
0x404804 115 712 0 712 1 0 0 1
+1 * 712
+3 * 712
+4 * 712 0 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712 712
+4 * 712
+3 * 712
+3 * 712 0 712
cfi=(5)
cfn=(18)
calls=712 0x404a28 -35 
* * 4272 1424 2136 1 0 1 1 0 1
+5 * 712 712
+1 * 712 712

fl=(3)
fn=(222)
0x403373 215 356 0 356
+1 * 356
+3 * 356
+4 * 356 0 356
+4 * 356 0 356
+4 * 356 0 356
+4 +1 356 356
+4 * 356 356
+4 * 356 356
+4 * 356
+3 * 356
+3 * 356 0 356
cfi=(5)
cfn=(224)
calls=356 0x403df2 -87 
* * 8544 2848 3204 0 23 4 0 23 4 356 2
+5 * 356 356
+1 * 356 356

fn=(8)
0x403afa 224 712 0 712 1 0 0 1
+1 * 712
+3 * 712 0 712
+4 * 712 712
+4 * 712 712
+1 * 712 712

fn=(264)
0x4036b1 215 356 0 356
+1 * 356
+3 * 356
+4 * 356 0 356
+4 * 356 0 356
+4 * 356 0 356
+4 +1 356 356
+4 * 356 356
+4 * 356 356
+4 * 356
+3 * 356
+3 * 356 0 356
cfi=(5)
cfn=(266)
calls=356 0x40406a -87 
* * 8544 2848 3204 0 23 14 0 23 14 356
+5 * 356 356
+1 * 356 356

fn=(212)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102)
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28)
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84)
0x4039ed 224 712 0 712
+1 * 712
+3 * 712 0 712
+4 * 712 712
+4 * 712 712
+1 * 712 712

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 1315 1315 0 1 0 0 1
+6 0 1315
+2 0 1315 0 0 0 0 0 0 0 0 1315 33
+2 0 1315 1315

fn=(38) _int_malloc
0x3877c79a00 0 1440 0 1440 1 0 0 1
+2 0 1440
+3 0 1440 0 1440
+2 0 1440 0 1440
+2 0 1440 0 1440 0 0 1 0 0 1
+2 0 1440
+3 0 1440 0 1440
+1 0 1440 0 1440
+1 0 1440
+4 0 1440
+4 0 1440 0 0 0 0 0 0 0 0 1440
+6 0 1440
+4 0 1440
+6 0 1440
+3 0 1440
+4 0 1440
+4 0 1440
+4 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440
+6 0 1440 1440 0 1 1 0 1 1
+7 0 1440 0 0 0 0 0 0 0 0 1440 7
jcnd=1318/1440 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 125 125
+6 0 125
+4 0 125
+2 0 125 0 0 0 0 0 0 0 0 125
+6 0 125
+3 0 125
+4 0 125 125
+1 0 125 125
+1 0 125 125
+2 0 125 125
+2 0 125 125
+2 0 125 125
+2 0 125 125
-14 0 1315
+4 0 1315 1315
+1 0 1315 1315
+1 0 1315 1315
+2 0 1315 1315
+2 0 1315 1315
+2 0 1315 1315
+2 0 1315 1315
+7 0 1335
+7 0 1335 0 0 1 0 0 1 0 0 1335 7
jcnd=432/1335 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 5 0 0 5
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 432 0 0 1 0 0 1
+3 0 432
+4 0 432
+4 0 432 0 0 1 0 0 1 0 0 432
jcnd=432/432 0x3877c7a1a4 0 
* 0 
+30 0 432 432
+6 0 432
+5 0 432 0 0 0 0 0 0 0 0 432 1
jcnd=431/432 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 935 255 198 8 1 0 8 1 0 195 24
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1334 0 0 1 0 0 1
+3 0 1334
+3 0 1334
+3 0 1334
+4 0 1334
+3 0 1334
+4 0 1334 0 1334
+5 0 1334
+3 0 1334 0 1334
+4 0 1334 0 1334
+4 0 1334 0 1334
+5 0 1334
+3 0 1334
+3 0 1334
+3 0 1334
+3 0 1334
+4 0 1334
+4 0 1334 0 0 1 0 0 1
+4 0 1334 0 1334
+4 0 1334
+4 0 1334 0 1334
+5 0 1334 0 1334
+5 0 1334
+3 0 1334
+3 0 1334 0 1334
+5 0 1334
+5 0 1334
+3 0 1334 0 1334
+4 0 1334 0 1334
+4 0 1334
+6 0 1334 0 1334
+4 0 1334 0 1334
+5 0 1334 0 0 1 0 0 1
+3 0 1334
+3 0 1334
+3 0 1334
jump=1334 +87 0 
* 0 
+8 0 1009
+3 0 1009
+4 0 1009
+2 0 1009
+2 0 1009
+3 0 1009
+3 0 1009
+3 0 1009
+2 0 1009
+2 0 1009
+5 0 1009
+2 0 1009 1009 0 0 2 0 0 2
+4 0 1009
+3 0 1009
+4 0 1009 0 1009
+4 0 1009 0 1009
+8 0 1009
+7 0 1009 0 1009
+4 0 1009 0 1009
+4 0 1009 0 1009
+4 0 1009 0 0 0 0 0 0 0 0 1009
-38 0 857
+3 0 857
+4 0 857 0 857
+4 0 857 0 857
+8 0 857
+7 0 857 0 857
+4 0 857 0 857
+4 0 857 0 857
+4 0 857 0 0 0 0 0 0 0 0 857
+6 0 3201 3201 0 1 0 0 1
+4 0 3201
+3 0 3201 0 0 0 0 0 0 0 0 3201 246
jcnd=1277/3201 0x3877c79ef0 0 
* 0 
+6 0 1924 1924
+4 0 1924 1924
+4 0 1924
+4 0 1924 0 0 0 0 0 0 0 0 1924
+6 0 1924 1924 0 1 0 0 1
+7 0 1924 0 0 0 0 0 0 0 0 1924
+6 0 1924
+4 0 1924
+7 0 1924 0 0 0 0 0 0 0 0 1924 9
jcnd=639/1924 +11 0 
* 0 
+2 0 1285
+3 0 1285 0 0 0 0 0 0 0 0 1285 599
jcnd=866/1285 0x3877c79e28 0 
* 0 
+6 0 1886
+3 0 1886 0 1886
+4 0 1886 0 1886
+5 0 1886 0 0 0 0 0 0 0 0 1886 12
jcnd=20/1886 0x3877c7a090 0 
* 0 
+6 0 1866
+7 0 1866 0 0 0 0 0 0 0 0 1866 416
jcnd=1009/1866 0x3877c79c50 0 
* 0 
+6 0 857 0 0 1 0 0 1
+3 0 857
+4 0 857
+4 0 857 0 0 0 0 0 0 0 0 857 12
jcnd=384/857 0x3877c79db0 0 
* 0 
+6 0 473
+3 0 473
+4 0 473
+2 0 473
+2 0 473
+3 0 473
+3 0 473
+8 0 473
+3 0 473
+2 0 473
+2 0 473
+4 0 473 473 0 0 2 0 0 2
+4 0 473
+3 0 473 0 0 1 0 0 1 0 0 473 33
jcnd=473/473 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 857 0 857
+4 0 857 0 857
+4 0 857
+3 0 857
jump=857 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 24
jcnd=443/866 0x3877c79ce1 0 
* 0 
+6 0 423 423
+5 0 423 0 0 0 0 0 0 0 0 423 5
jcnd=385/423 0x3877c79ce1 0 
* 0 
+6 0 38 0 0 1 0 0 1
+3 0 38
+3 0 38
+3 0 38
+7 0 38 0 38
+4 0 38 0 38
+4 0 38
+3 0 38 0 38
+4 0 38 0 38 0 0 18 0 0 18
+4 0 38 0 38
+4 0 38 0 0 0 0 0 0 0 0 38 4
jcnd=9/38 +18 0 
* 0 
+2 0 29 0 29 0 0 2 0 0 2
+8 0 29 0 29
+8 0 29
+7 0 29 0 29 1 0 0 1
+4 0 29
+3 0 29
+3 0 29
+3 0 29
+4 0 29
+3 0 29
+4 0 29
+3 0 29
+3 0 29
+4 0 29 0 29
+4 0 29 0 29 0 0 2 0 0 2
+4 0 29
+4 0 29
+3 0 29 0 29
cfn=(104)
calls=29 0x3877c77180 0 
* 0 116 58 0 0 0 0 0 0 0 29
-56 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9 0 0 2 0 0 2
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
+5 0 38
+3 0 38
jump=38 0x3877c79ae3 0 
* 0 
+55 0 1277 0 0 1 0 0 1
+7 0 1277
+3 0 1277 0 0 0 0 0 0 0 0 1277 8
jcnd=432/1277 0x3877c7a0b0 0 
* 0 
+6 0 1277 1277 0 1 0 0 1
+4 0 1277
+3 0 1277
+3 0 1277
+2 0 1277
+4 0 1277
+3 0 1277
+3 0 1277
+2 0 1277
+2 0 1277
+2 0 1277
+2 0 1277 1277 0 0 1 0 0 1
+8 0 1277
+5 0 1277
+5 0 1277
+2 0 1277 0 0 0 0 0 0 0 0 1277
-2 0 650
+2 0 650 0 0 0 0 0 0 0 0 650
+2 0 1927
+2 0 1927 0 0 0 0 0 0 0 0 1927 45
jcnd=1267/1927 +64 0 
* 0 
+2 0 660
+8 0 660
+3 0 660
+3 0 660 0 0 0 0 0 0 0 0 660
-6 0 416
+3 0 416
+3 0 416 0 0 0 0 0 0 0 0 416
+2 0 1076
+2 0 1076 1076 0 0 1 0 0 1
+8 0 1076
+2 0 1076 0 0 0 0 0 0 0 0 1076 24
jcnd=416/1076 -20 0 
* 0 
+2 0 660
+2 0 660
+5 0 660
+3 0 660
+3 0 660
+2 0 660
+2 0 660
+5 0 660 0 0 0 0 0 0 0 0 660
+2 0 660
+2 0 660
+4 0 660
+2 0 660
+2 0 660 0 0 0 0 0 0 0 0 660
jcnd=660/660 -8 0 
* 0 
-8 0 10575
+4 0 10575
+2 0 10575
+2 0 10575 0 0 0 0 0 0 0 0 10575 709
jcnd=8754/10575 -8 0 
* 0 
-2 0 1267 0 0 1 0 0 1
+2 0 1267 0 0 0 0 0 0 0 0 1267 21
jcnd=1161/1267 -8 0 
* 0 
+2 0 1927 1927 0 0 13 0 0 13
+4 0 1927 0 0 1 0 0 1
+3 0 1927 0 0 0 0 0 0 0 0 1927 869
jcnd=1277/1927 0x3877c7a1cf 0 
* 0 
+6 0 650
+2 0 650
+4 0 650
+2 0 650
+2 0 650
+2 0 650 0 650
+8 0 650
jump=650 0x3877c79f30 0 
* 0 
0x3877c7a090 0 20 0 0 1 0 0 1
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 0x3877c79ace 0 
* 0 
+16 0 432 432
+4 0 432
+4 0 432
+2 0 432
+5 0 432 432 0 1 0 0 1
+4 0 432
+3 0 432 0 0 0 0 0 0 0 0 432
jcnd=432/432 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 432 0 0 1 0 0 1
+3 0 432 0 432
+4 0 432
jump=432 0x3877c79b99 0 
* 0 
+36 0 1277 1277 0 1 2 0 1 2
+4 0 1277 1277 0 0 1 0 0 1
+4 0 1277
+3 0 1277 1277
+4 0 1277
+4 0 1277
+3 0 1277
+3 0 1277 1277
+4 0 1277 0 0 0 0 0 0 0 0 1277
+6 0 1277 1277 0 0 1 0 0 1
+4 0 1277 0 0 0 0 0 0 0 0 1277
+6 0 1277 1277 0 1 0 0 1
+8 0 1277 0 1277
+4 0 1277 0 1277
+4 0 1277 0 0 0 0 0 0 0 0 1277 232
jcnd=417/1277 +38 0 
* 0 
+2 0 860 860 0 0 1 0 0 1
+4 0 860
+3 0 860 0 0 0 0 0 0 0 0 860
+2 0 860 860
+5 0 860 0 0 0 0 0 0 0 0 860
+6 0 860 860
+4 0 860 0 860
+4 0 860 860
+4 0 860 0 860
+4 0 860
+4 0 860 0 0 0 0 0 0 0 0 860
-4 0 417
+4 0 417 0 0 0 0 0 0 0 0 417 7
jcnd=20/417 0x3877c7a2e3 0 
* 0 
+6 0 1257 1257
+4 0 1257 1257 0 1 0 0 1
+4 0 1257 0 0 0 0 0 0 0 0 1257
+6 0 1257
+4 0 1257
+7 0 1257 0 1257 0 0 12 0 0 12
+4 0 1257 0 1257
+4 0 1257 0 1257
+4 0 1257 0 1257
+4 0 1257 0 0 0 0 0 0 0 0 1257 7
jcnd=432/1257 +7 0 
* 0 
+2 0 825 0 825
+5 0 825
+7 0 825 0 0 0 0 0 0 0 0 825 4
jcnd=434/825 +18 0 
* 0 
-7 0 432
+7 0 432 0 0 0 0 0 0 0 0 432 4
jcnd=407/432 +18 0 
* 0 
+2 0 416 0 416 0 0 14 0 0 14
+8 0 416 0 416 1 0 0 1
+8 0 416
+7 0 416 0 416 0 0 3 0 0 3
+4 0 416
+3 0 416
+3 0 416
+4 0 416
+3 0 416
+4 0 416
+3 0 416
+3 0 416
+4 0 416 0 416
+4 0 416 0 416
+4 0 416
jump=416 +71 0 
* 0 
-46 0 841
+7 0 841 0 841
+4 0 841
+3 0 841
+3 0 841
+4 0 841
+3 0 841
+4 0 841
+3 0 841
+3 0 841
+4 0 841 0 841
+4 0 841 0 841
+4 0 841
jump=841 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 20
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 +7 0 
* 0 
+7 0 1277
+4 0 1277 0 0 1 0 0 1
+3 0 1277
+3 0 1277 0 1277
cfn=(104)
calls=1277 0x3877c77180 0 
* 0 5108 2554 0 1 0 0 1 0 0 1277 33
+5 0 1277
+3 0 1277
jump=1277 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 1440 0 1440 1 0 0 1
+5 0 1440 0 1440
+5 0 1440
+3 0 1440 0 1440
+5 0 1440
+4 0 1440 1440 0 0 1 0 0 1
+7 0 1440 1440 0 0 1 0 0 1
+3 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440
+6 0 1440 1440 0 0 1 0 0 1
+7 0 1440 1440 0 1 1 0 1 1
+4 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440
+2 0 1440 1440 0 0 1 0 0 1
+3 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440
jcnd=1440/1440 +97 0 
* 0 
+18 0 1440
+3 0 1440
+3 0 1440 0 1440
cfn=(38)
calls=1440 0x3877c79a00 0 
* 0 385186 48469 58214 41 34 54 41 34 54 62238 3389
+5 0 1440
+3 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440
+2 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440
+2 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440 7
+2 0 1440 1440
+7 0 1440 0 0 0 0 0 0 0 0 1440
jcnd=1440/1440 +13 0 
* 0 
+13 0 1440 0 1440
+2 0 1440 0 0 0 0 0 0 0 0 1440 85
+6 0 1440
+3 0 1440 1440
+4 0 1440 1440
+5 0 1440 1440
+5 0 1440
+4 0 1440 1440
+1 0 1440 0 0 1 0 0 1
+5 0 1440 1440 0 0 1 0 0 1
+7 0 1440 0 0 0 0 0 0 0 0 1440
jcnd=1440/1440 +14 0 
* 0 
+14 0 1440 0 1440 1 0 0 1
+3 0 1440 0 0 0 0 0 0 0 0 1440
+6 0 1440
jump=1440 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1440 0 1440 1 0 0 1
+2 0 1440
+3 0 1440
+3 0 1440 0 1440
+2 0 1440
+3 0 1440 0 1440
+1 0 1440
+3 0 1440 0 1440
+1 0 1440
+3 0 1440
+4 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440
+6 0 1440
+4 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440 7
jcnd=10/1440 0x3877c838d1 0 
* 0 
+2 0 1430
+3 0 1430
+3 0 1430
+3 0 1430
+3 0 1430
+3 0 1430 0 0 0 0 0 0 0 0 1430
jcnd=1430/1430 +41 0 
* 0 
+41 0 1430 0 0 1 0 0 1
+3 0 1430 0 0 0 0 0 0 0 0 1430
jcnd=1430/1430 0x3877c839c0 0 
* 0 
+24 0 1430
+3 0 1430
+4 0 1430
+3 0 1430
+3 0 1430
+3 0 1430
+3 0 1430
+3 0 1430 0 0 0 0 0 0 0 0 1430 782
jcnd=722/1430 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 718
+10 0 718 718 0 0 1 0 0 1
+3 0 718
+4 0 718 0 718
+3 0 718
+4 0 718
+4 0 718 0 0 0 0 0 0 0 0 718
jcnd=718/718 -18 0 
* 0 
-18 0 2210 2210
+3 0 2210
+4 0 2210 0 2210
+3 0 2210
+4 0 2210
+4 0 2210 0 0 0 0 0 0 0 0 2210 11
jcnd=1492/2210 -18 0 
* 0 
+2 0 1440
+4 0 1440
+3 0 1440 1440
+1 0 1440 1440
+1 0 1440 1440
+2 0 1440 1440 0 1 0 0 1
+2 0 1440 1440
0x3877c839c0 0 1430 0 0 1 0 0 1
+3 0 1430
+3 0 1430
+3 0 1430
+4 0 1430 0 1430 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1430 0x3877c89b20 0 
* 0 351514 130808 127948 6 1 39 6 1 39 16804 961 1430 176
+5 0 1430
jump=1430 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1440 1440 0 1 1 0 1 1
+7 0 1440 1440 0 0 1 0 0 1
+3 0 1440
+3 0 1440 0 0 1 0 0 1 0 0 1440
+6 0 1440
+3 0 1440 0 0 0 0 0 0 0 0 1440
+6 0 1440 1440
+4 0 1440
+4 0 1440
+2 0 1440 0 0 0 0 0 0 0 0 1440
+2 0 1440
+2 0 1440
+7 0 1440 0 0 0 0 0 0 0 0 1440
jcnd=1440/1440 +14 0 
* 0 
+14 0 1440
+2 0 1440
cfn=(170) _int_free
calls=1440 0x3877c78650 0 
* 0 153377 41695 25325 17 2 0 17 2 0 37453 488

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 7 7
+5 0 7
+3 0 7 7
+5 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+9 0 7 0 7
+4 0 7 0 7
+4 0 7 0 0 0 0 0 0 0 0 7 3
jcnd=7/7 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=16/20 +18 0 
* 0 
+2 0 4 0 4
+8 0 4 0 4
+8 0 4
+3 0 4 0 4
+4 0 4 0 4
+4 0 4
+4 0 4 0 4
+4 0 4 0 4
+4 0 4
+3 0 4
+3 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=2/4 0x3877c75f78 0 
* 0 
-29 0 16
+3 0 16 0 16
+4 0 16 0 16
+4 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 6
jcnd=5/16 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=10/13 +15 0 
* 0 
+2 0 3 3
+4 0 3
+3 0 3 0 0 0 0 0 0 0 0 3
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 9
jcnd=7/20 0x3877c75e68 0 
* 0 
+6 0 13 0 13
+6 0 13
jump=13 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1440 0 1440 1 0 0 1
+2 0 1440 0 1440
+2 0 1440 0 1440
+2 0 1440
+3 0 1440 0 1440
+2 0 1440 0 1440
+1 0 1440 0 1440
+1 0 1440
+3 0 1440
+4 0 1440 1440
+4 0 1440 0 1440
+4 0 1440
+3 0 1440
+4 0 1440
+3 0 1440
+3 0 1440
+3 0 1440 0 0 1 0 0 1 0 0 1440
+6 0 1440
+4 0 1440 0 0 0 0 0 0 0 0 1440
+6 0 1440
+4 0 1440 0 0 0 0 0 0 0 0 1440
+6 0 1440 1440
+7 0 1440 0 0 0 0 0 0 0 0 1440 4
jcnd=1316/1440 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1316
+2 0 1316 0 0 0 0 0 0 0 0 1316
+6 0 1316 1316 0 1 0 0 1
+4 0 1316
+3 0 1316
+2 0 1316 0 0 0 0 0 0 0 0 1316
jcnd=1316/1316 0x3877c78a40 0 
* 0 
+6 0 1316 1316
+4 0 1316
+3 0 1316 0 0 0 0 0 0 0 0 1316
+6 0 1316 1316
+5 0 1316
+4 0 1316 0 0 0 0 0 0 0 0 1316
jcnd=1316/1316 0x3877c7907c 0 
* 0 
+6 0 1316 1316
+5 0 1316
+4 0 1316 0 0 0 0 0 0 0 0 1316
+6 0 1316
+4 0 1316 0 0 1 0 0 1 0 0 1316
+6 0 1316
+4 0 1316 1316
+7 0 1316 0 0 0 0 0 0 0 0 1316
+6 0 1316 1316
+6 0 1316
+2 0 1316 0 0 0 0 0 0 0 0 1316
+6 0 1316 1316
+4 0 1316 0 0 0 0 0 0 0 0 1316 5
jcnd=1312/1316 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1316 1316 0 1 0 0 1
+4 0 1316 0 0 0 0 0 0 0 0 1316
+6 0 1316 1316 0 0 1 0 0 1
+6 0 1316 0 0 1 0 0 1 0 0 1316 60
jcnd=45/1316 0x3877c78a78 0 
* 0 
+6 0 1271 1271
+5 0 1271 1271
+5 0 1271 1271
+4 0 1271 0 0 0 0 0 0 0 0 1271
+6 0 1271 1271
+4 0 1271 0 0 0 0 0 0 0 0 1271
+6 0 1271 1271
+9 0 1271 0 1271
+4 0 1271 0 1271
+4 0 1271 0 0 0 0 0 0 0 0 1271 357
jcnd=839/1271 +16 0 
* 0 
+2 0 432 432
+5 0 432
+3 0 432 0 0 1 0 0 1 0 0 432
+6 0 1271
+3 0 1271
+4 0 1271 1271
+4 0 1271 1271
+4 0 1271 0 0 0 0 0 0 0 0 1271
-12 0 45
+4 0 45 45
+4 0 45 45
+4 0 45 0 0 0 0 0 0 0 0 45
+6 0 1316
+7 0 1316 0 1316
+4 0 1316 0 1316
+4 0 1316 0 0 0 0 0 0 0 0 1316 60
jcnd=441/1316 +18 0 
* 0 
+2 0 875 0 875
+8 0 875 0 875
+8 0 875 0 875
+4 0 875
+3 0 875 0 875 1 0 0 1
+4 0 875
+4 0 875 0 875
+4 0 875 0 875
+4 0 875
+7 0 875 0 0 0 0 0 0 0 0 875
jcnd=875/875 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1316 0 0 1 0 0 1
+5 0 1316 1316
+4 0 1316 1316
+7 0 1316 0 0 0 0 0 0 0 0 1316
jcnd=1316/1316 +16 0 
* 0 
+16 0 1316 0 1316
+5 0 1316 0 0 0 0 0 0 0 0 1316
+6 0 1316
+3 0 1316
jump=1316 0x3877c7878f 0 
* 0 
+10 0 45 0 45
+6 0 45 0 0 1 0 0 1
jump=45 0x3877c78885 0 
* 0 
0x3877c78b20 0 1316 1316 0 1 0 0 1
+4 0 1316
+2 0 1316 0 0 0 0 0 0 0 0 1316
+6 0 1316 1316
+7 0 1316 0 0 0 0 0 0 0 0 1316
jcnd=1316/1316 +15 0 
* 0 
+15 0 1316 0 1316 1 0 0 1
+4 0 1316 0 0 0 0 0 0 0 0 1316
+6 0 1316
+4 0 1316 1316
+1 0 1316 1316
+1 0 1316 1316
+2 0 1316 1316
+2 0 1316 1316
+2 0 1316 1316
+2 0 1316 1316
0x3877c7907c 0 1316 1316 0 1 1 0 1 1
+4 0 1316 0 0 1 0 0 1
+7 0 1316
+4 0 1316
+3 0 1316
+3 0 1316 0 0 0 0 0 0 0 0 1316
jcnd=1316/1316 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1430 0 0 1 0 0 1
+7 0 1430
+3 0 1430
+3 0 1430 1430 0 0 1 0 0 1
+4 0 1430
+4 0 1430 0 0 0 0 0 0 0 0 0 0 1430 176
jump=176 0x3877c89be8 0 
* 0 
jump=186 0x3877c89bd0 0 
* 0 
jump=176 0x3877c89bb8 0 
* 0 
jump=176 +11 0 
* 0 
jump=176 0x3877c89c48 0 
* 0 
jump=178 0x3877c89c30 0 
* 0 
jump=176 0x3877c89c18 0 
* 0 
jump=186 0x3877c89c00 0 
* 0 
+11 0 176 176
+3 0 176
+4 0 176
+4 0 176 176
+4 0 176
+4 0 176 0 176
+4 0 176
+9 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176
+4 0 176
+4 0 176 0 0 0 0 0 0 0 0 176
jcnd=8/176 0x3877c89c60 0 
* 0 
-40 0 15726 15726
+4 0 15726 0 15726 0 0 14 0 0 14
+4 0 15726 15726
+4 0 15726 0 15726 0 0 3 0 0 3
+4 0 15726 15726
+4 0 15726 0 15726 0 0 4 0 0 4
+4 0 15726 15726
+4 0 15726 0 15726 0 0 15 0 0 15
+4 0 15726
+4 0 15726
+4 0 15726 0 0 0 0 0 0 0 0 15726 957
jcnd=1394/15726 0x3877c89c60 0 
* 0 
-32 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178
+4 0 178
+4 0 178 0 0 0 0 0 0 0 0 178
jcnd=10/178 0x3877c89c60 0 
* 0 
-24 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176
+4 0 176
+4 0 176 0 0 0 0 0 0 0 0 176
jcnd=8/176 0x3877c89c60 0 
* 0 
-16 0 186 186 0 1 0 0 1
+4 0 186 0 186
+4 0 186 0 0 1 0 0 1
+4 0 186
+4 0 186 0 0 0 0 0 0 0 0 186 4
jcnd=10/186 0x3877c89c60 0 
* 0 
+6 0 15012
+4 0 15012 15012
+3 0 15012 0 15012
+3 0 15012 15012
+4 0 15012 0 15012 0 0 1 0 0 1
+4 0 15012 15012
+4 0 15012 0 15012 0 0 1 0 0 1
+4 0 15012 15012
+4 0 15012 0 15012
+4 0 15012
jump=15012 -80 0 
* 0 
-30 0 176 176
+3 0 176 0 176
+3 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176 0 0 1 0 0 1
+4 0 176 176
+4 0 176 0 176
+4 0 176
jump=176 -80 0 
* 0 
-24 0 186 186
+4 0 186 0 186
+4 0 186 186
+4 0 186 0 186
+4 0 186 186
+4 0 186 0 186
+4 0 186
jump=186 -80 0 
* 0 
-16 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176
jump=176 -80 0 
* 0 
+8 0 176 176
+3 0 176
+4 0 176 0 0 1 0 0 1
+4 0 176
+4 0 176
jump=176 -39 0 
* 0 
+9 0 186
+3 0 186 0 0 0 0 0 0 0 0 186
+6 0 186 186
+3 0 186
+4 0 186
jump=186 -72 0 
* 0 
+8 0 176
+4 0 176 176
+3 0 176 0 0 0 0 0 0 0 0 176
+2 0 176
+4 0 176
jump=176 -99 0 
* 0 
+11 0 186 186 0 1 0 0 1
+3 0 186
+4 0 186
+4 0 186
+4 0 186
jump=186 0x3877c89b78 0 
* 0 
+9 0 176 176
+3 0 176
+4 0 176
+4 0 176
+4 0 176
jump=176 0x3877c89b70 0 
* 0 
+9 0 178 178
+3 0 178
+4 0 178
+4 0 178
+4 0 178
jump=178 0x3877c89b68 0 
* 0 
+9 0 176 176
+3 0 176
+4 0 176
+4 0 176
+4 0 176
jump=176 0x3877c89b60 0 
* 0 
+9 0 1430 0 1430 1 0 0 1
+3 0 1430 1430

totals: 11884137 4865979 2803456 235 102 124 235 102 124 350767 6821 8630 176
