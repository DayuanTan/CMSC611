version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1572


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2017757171 - 2018455084
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 994 0 0 1 0 0 1
+3 0 994 0 0 0 0 0 0 0 0 994
+2 0 994
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=994 0x3877c7b8b0 0 
* 0 109675 27993 13971 21 4 0 21 4 0 26803 472
* 0 994 994 0 1 1 0 1 1 0 0 0 994

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 994 0 994 1 0 0 1
+1 0 994
+5 0 994
+3 0 994 0 994
+1 0 994
+4 0 994 0 0 1 0 0 1
+3 0 994
+4 0 994
+3 0 994 0 994 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=994 0x3877c7aa50 0 
* 0 264092 37863 37568 46 41 45 46 41 45 44411 1503
* 0 994 994 0 1 1 0 1 1 0 0 0 994
+5 0 994
+3 0 994 0 0 0 0 0 0 0 0 994
jcnd=994/994 +96 0 
* 0 
+96 0 994 0 0 1 0 0 1
+4 0 994 994
+1 0 994 994
+1 0 994 994

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 245 0 245
+1 * 245
+3 * 245
+4 * 245 0 245
+4 * 245 0 245
+4 * 245 0 245
+4 +1 245 245
+4 * 245 245
+4 * 245 245
+4 * 245
+3 * 245
+3 * 245 0 245
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=245 0x403df2 -87 
* * 5880 1960 2205 0 17 3 0 17 3 245
+5 * 245 245
+1 * 245 245

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 490 0 490 1 0 0 1
+1 * 490
+3 * 490 0 490
+4 * 490 490
+4 * 490 490
+1 * 490 490

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 245 0 245
+1 * 245
+3 * 245
+4 * 245 0 245
+4 * 245 0 245
+4 * 245 0 245
+4 +1 245 245
+4 * 245 245
+4 * 245 245
+4 * 245
+3 * 245
+3 * 245 0 245
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=245 0x40406a -87 
* * 5880 1960 2205 0 15 7 0 15 7 245
+5 * 245 245
+1 * 245 245

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 490 0 490
+1 * 490
+3 * 490 0 490
+4 * 490 490
+4 * 490 490
+1 * 490 490

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 560 0 560
+1 * 560
+3 * 560 0 560 0 0 1 0 0 1
+4 +1 560 560
+4 * 560 560
+1 * 560 560

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 980 0 980 1 0 0 1
+1 * 980
+3 * 980
+4 * 980 0 980
+4 +1 980
+4 * 980
+3 * 980 0 980
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=980 0x404ffe 790 
* * 5880 2940 1960 1 0 0 1
+5 * 980 980
+3 * 980 980
+1 * 980 980

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 980 0 980 1 0 0 1
+1 * 980
+3 * 980 0 980
+4 +1 980 980
+4 * 980 980
+1 * 980 980

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 980 0 980 1 0 0 1
+1 * 980
+3 * 980
+4 * 980 0 980
+4 +1 980
+4 * 980
+3 * 980 0 980 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=980 0x40500c 790 
* * 5880 2940 1960 1 0 0 1
+5 * 980 980
+3 * 980 980
+1 * 980 980

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 560 0 560
+1 * 560
+3 * 560 0 560
+4 +1 560 560
+4 * 560 560
+1 * 560 560

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 980 0 980 1 0 0 1
+1 * 980
+3 * 980 0 980
+4 +1 980 980 0 1 0 0 1
+4 * 980 980
+1 * 980 980

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 490 0 490
+1 * 490
+3 * 490 0 490
+4 * 490 0 490
+4 * 490 490
+4 * 490 490
+1 * 490 490

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 497 0 497 1 0 0 1
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 * 497 0 497 1 0 0 1
+4 +2 497 497
+4 * 497
+3 * 497 0 497
cfn=(28)
calls=497 0x404992 +12 
* * 2982 994 994 1 0 0 1
+5 * 497 497
+4 * 497
+3 * 497
+2 * 497 0 0 0 0 0 0 0 0 497
jcnd=497/497 +7 +3 
* * 
+7 +3 497 497
+4 * 497
+4 * 497
+3 * 497 0 497
cob=(5)
cfi=(8)
cfn=(32)
calls=497 0x387e4bd0b0 0 
* * 138822 21130 21404 24 30 14 24 30 14 22411 722 497
* * 497 497 0 1 1 0 1 1 0 0 0 497
+5 +1 497 497
+1 * 497 497

fn=(102)
0x4048de 113 511 0 511 1 0 0 1
+1 * 511
+3 * 511 0 511
+4 +1 511
+10 * 511 511
+1 * 511 511

fn=(266)
0x40406a 129 245 0 245
+1 * 245
+3 * 245
+4 * 245 0 245
+4 * 245 0 245
+4 * 245 0 245
+4 +1 245 245
+4 * 245
+3 * 245
+5 * 245 0 245
cfi=(16)
cfn=(226)
calls=245 0x402d61 -20 
* * 1715 735 735
+5 * 245
+3 * 245 0 0 0 0 0 0 0 0 245
+2 * 245 245
+4 * 245 245 0 0 15 0 0 15
+2 * 245 0 245 0 0 7 0 0 7
+2 * 245 245
+1 * 245 245

fn=(28)
0x404992 113 511 0 511 1 0 0 1
+1 * 511
+3 * 511 0 511
+4 +1 511
+10 * 511 511
+1 * 511 511

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 490 0 490
+1 * 490
+3 * 490 0 490
+4 * 490 490
+1 * 490 490

fn=(224)
0x403df2 129 245 0 245
+1 * 245
+3 * 245
+4 * 245 0 245
+4 * 245 0 245
+4 * 245 0 245
+4 +1 245 245
+4 * 245
+3 * 245
+5 * 245 0 245
cfi=(16)
cfn=(226)
calls=245 0x402d61 -20 
* * 1715 735 735
+5 * 245
+3 * 245 0 0 0 0 0 0 0 0 245
+2 * 245 245
+4 * 245 245 0 0 17 0 0 17
+2 * 245 0 245 0 0 3 0 0 3
+2 * 245 245
+1 * 245 245

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 497 0 497
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 * 497 0 497
+4 +1 497 497
+4 * 497
+3 * 497 0 497
cob=(5)
cfi=(8)
cfn=(164)
calls=497 0x387e4bb2f0 0 
* * 53401 13189 6028 23 4 0 23 4 0 12910 429 497
* * 497 497 0 1 1 0 1 1 0 0 0 497
+5 * 497 497
+1 * 497 497

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 497 0 497
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 * 497 0 497
+4 +1 497 497
+4 * 497
+3 * 497 0 497
cob=(5)
cfi=(8)
cfn=(164)
calls=497 0x387e4bb2f0 0 
* * 60250 15798 7943 0 1 0 0 1 0 14887 43 497
* * 497 497 0 0 0 0 0 0 0 0 0 497
+5 * 497 497
+1 * 497 497

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 497 0 497 1 0 0 1
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 * 497 0 497
+4 +2 497 497
+4 * 497
+3 * 497 0 497
cfn=(102)
calls=497 0x4048de +12 
* * 2982 994 994 1 0 0 1
+5 * 497 497
+4 * 497 0 0 1 0 0 1
+3 * 497
+2 * 497 0 0 0 0 0 0 0 0 497
jcnd=497/497 +7 +3 
* * 
+7 +3 497 497
+4 * 497
+4 * 497
+3 * 497 0 497
cob=(5)
cfi=(8)
cfn=(32)
calls=497 0x387e4bd0b0 0 
* * 141174 20709 19146 26 12 32 26 12 32 22994 781 497
* * 497 497 0 0 0 0 0 0 0 0 0 497
+5 +1 497 497
+1 * 497 497

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 490 0 490 1 0 0 1
+1 * 490
+3 * 490 0 490 0 0 1 0 0 1
+4 * 490 0 490
+4 * 490 490
+1 * 490 490

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 490 0 490 1 0 0 1
+1 * 490
+3 * 490 0 490
+4 * 490 0 490
+4 * 490 490
+1 * 490 490

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 490 0 490
+1 * 490
+3 * 490 0 490
+4 * 490 490
+1 * 490 490

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +2 490 490
+4 * 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=490 0x404484 107 
* * 218356 71434 68498 25 3 4 25 3 4 7996 512 976 122
+5 * 490 490
+1 * 490 490

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +2 490 490 0 1 0 0 1
+4 * 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=490 0x404a36 450 
* * 204636 66534 63598 24 3 4 24 3 4 7996 512 976 122
+5 * 490 490
+1 * 490 490

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +2 490 490
+4 * 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=490 0x40439c 107 
* * 218356 71434 68498 7 1 22 7 1 22 7996 497 976
+5 * 490 490
+1 * 490 490

fn=(116)
0x40439c 107 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +10 490 490
+4 * 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=490 0x4047d7 -26 
* * 211496 68984 66048 7 1 22 7 1 22 7996 497 976
+5 +1 490 490
+1 * 490 490

fn=(118)
0x4047d7 91 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +2 490 490
+4 * 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=490 0x4049e2 450 
* * 204636 66534 63598 7 1 22 7 1 22 7996 497 976
+5 * 490 490
+1 * 490 490

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +10 490 490
+4 * 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(52)
calls=490 0x404829 -26 
* * 211496 68984 66048 25 3 4 25 3 4 7996 512 976 122
+5 +1 490 490
+1 * 490 490

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 497 0 497 1 0 0 1
+1 * 497 0 0 1 0 0 1
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 0 497 497
+5 0 497 0 0 0 0 0 0 0 0 497
+2 0 497 497
+4 0 497 497
+4 0 497
+5 0 497
+3 0 497
+3 0 497 0 497
fi=(6) ???
cfi=(5)
cfn=(100)
calls=497 0x40461a 99 
* 0 154096 24685 23122 29 12 32 29 12 32 23491 781 994
+5 0 497
fi=(6)
jump=497 +7 0 
* 0 
+7 0 497 497
+1 0 497 497

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 91630 0 91630
+1 * 91630
+3 * 91630 0 91630
+4 * 91630 0 91630
+4 +1 91630 91630
+4 * 91630 91630
+3 * 91630 91630
+4 * 91630
+4 * 91630
+3 * 91630 91630
+1 * 91630 91630

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 91630 0 91630
+1 * 91630
+3 * 91630 0 91630 1 0 0 1
+4 * 91630 0 91630
+4 +1 91630 91630
+4 * 91630 91630
+3 * 91630 91630
+4 * 91630
+4 * 91630
+3 * 91630 91630
+1 * 91630 91630

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 490
+4 * 490
+3 * 490 0 490
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(194) std::allocator<int>::~allocator()
calls=490 0x403d7e +42 
* * 6860 2450 2450 1 0 0 1
+5 * 490 490
+1 * 490 490

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 490 0 490 1 0 0 1
+1 * 490
+3 * 490 0 490
+1 * 490
+4 * 490 0 490
+4 +2 490 490
+4 * 490 490
+4 * 490
+3 * 490 490
+4 * 490 490
+3 * 490
+3 * 490
+3 * 490
+4 * 490
+3 * 490 490
+4 * 490 490
+3 -1 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=490 0x403d98 +11 
* * 73216 20508 12748 1 1 0 1 1 0 15206 37 980
+5 +1 490 490
+4 * 490
+3 * 490 0 490
cfn=(192)
calls=490 0x403296 -82 
* * 11270 3920 3920 1 0 0 1
+5 * 490
jump=490 +28 * 
* * 
+28 * 490
+4 * 490 490
+1 * 490 490
+1 * 490 490

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 1988 0 1988 1 0 0 1
+1 * 1988
+3 * 1988 0 1988 0 0 1 0 0 1
+4 +1 1988 1988
+4 * 1988 1988 0 1 1 0 1 1
+4 * 1988
+3 * 1988 1988
+4 * 1988 1988
+3 * 1988
+3 * 1988
+3 * 1988
+4 * 1988 1988
+1 * 1988 1988

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 +2 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=490 0x404236 -14 
* * 156961 27168 26947 21 14 8 21 14 8 22954 662 980
+5 * 490 490
+4 * 490 0 490
+3 +1 490 490
+4 * 490 490 0 1 0 0 1
+3 * 490 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+3 * 490 490
+4 * 490
+4 * 490
+3 * 490 490
+4 * 490 0 490
+4 +1 490 490
+1 * 490 490

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 +2 490 490
+4 * 490 490 0 1 0 0 1
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(96)
calls=490 0x403fbe -14 
* * 159079 26540 24530 18 6 28 18 6 28 23514 724 980
+5 * 490 490
+4 * 490 0 490
+3 +1 490 490
+4 * 490 490
+3 * 490 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+3 * 490 490
+4 * 490
+4 * 490
+3 * 490 490
+4 * 490 0 490
+4 +1 490 490
+1 * 490 490

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 245 0 245
+1 * 245
+3 * 245 0 0 1 0 0 1
+4 * 245 0 245
+4 * 245 0 245
+4 +2 245 245
+4 * 245 245
+4 * 245 245
+4 * 245 245
+4 * 245
+3 * 245 0 0 0 0 0 0 0 0 245
jcnd=7/245 +51 +10 
* * 
+2 +3 238 238
+4 * 238 238
+4 * 238 238
+4 -1 238 238
+4 * 238
+3 * 238
+3 * 238 0 238
cfi=(3)
cfn=(264)
calls=238 0x4036b1 215 
* * 9044 3094 3332 0 15 4 0 15 4 238
+5 +2 238 238
+4 * 238 238
+4 * 238
+4 * 238 238
+4 * 238 0 238
+4 * 238
jump=238 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10745 3167 2749 27 17 12 27 17 12 747 76 41
+5 +2 245 245
+1 * 245 245

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1001 0 1001 1 0 0 1
+1 * 1001
+3 * 1001 0 1001 1 0 0 1
+4 +1 1001 1001
+4 * 1001 1001
+1 * 1001 1001

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+3 * 490 0 490
+4 * 490
+4 * 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=490 0x404380 726 
* * 4900 2450 1960
+5 * 490 490
+4 * 490 490
+1 * 490 490

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 490 0 490
+1 * 490
+3 * 490 0 490
+1 * 490
+4 * 490 0 490 1 0 0 1
+4 +2 490 490
+4 * 490
+3 * 490 0 490
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=490 0x40325e 113 
* * 2940 1470 980
+5 * 490
+3 * 490 490
+4 * 490 490
+4 * 490 490
+4 * 490 490
+3 -1 490
+3 * 490
+3 * 490 0 490
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=490 0x40326c 148 
* * 15190 4900 5880 4 0 0 4
+5 +1 490 490
+4 * 490
+3 * 490 0 490
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=490 0x4031ec 159 
* * 91390 27226 17206 27 5 0 27 5 0 13238 425 980
+5 * 490
jump=490 +28 * 
* * 
+28 * 490 0 0 1 0 0 1
+4 * 490 490
+1 * 490 490
+1 * 490 490

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 497 0 497 1 0 0 1
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 * 497 0 497
+4 +2 497 497
+5 * 497 0 0 0 0 0 0 0 0 497
+2 +1 497 497
+4 * 497 497
+4 * 497 497
+4 * 497
+3 * 497
+3 * 497 0 497
cfi=(5)
cfn=(160)
calls=497 0x4044d6 -65 
* * 59365 15177 8513 24 5 0 24 5 0 12910 429 994
+5 +1 497 497
+1 * 497 497

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 490 0 490
+1 * 490
+3 * 490 0 490
+1 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=490 0x4043ca -45 
* * 17640 6370 6860 4 0 4 4 0 4
+5 +1 490 490 0 1 0 0 1
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(20)
calls=490 0x404412 +43 
* * 169211 33048 30377 22 14 8 22 14 8 22954 662 980
+5 * 490
jump=490 +28 * 
* * 
+28 * 490
+4 * 490 490
+1 * 490 490
+1 * 490 490

fn=(14)
0x4043ca 90 490 0 490 1 0 0 1
+1 * 490
+3 * 490
+4 * 490 0 490 0 0 1 0 0 1
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=490 0x404804 +24 
* * 8820 2940 3430 2 0 1 2 0 1
+5 * 490 490
+4 * 490 0 490 0 0 2 0 0 2
+7 * 490 490
+4 * 490 0 490 1 0 0 1
+8 * 490 490
+4 * 490 0 490
+8 +1 490 490
+1 * 490 490

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 490 0 490 1 0 0 1
+1 * 490
+3 * 490 0 490
+2 * 490 0 490
+2 * 490 0 490
+1 * 490 0 0 1 0 0 1
+4 * 490 0 490
+4 * 490 0 490
+4 +2 490 490
+4 * 490
+3 * 490 0 490
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=490 0x4039fc 117 
* * 2940 1470 980 2 0 0 2
+5 * 490
+3 * 490 0 490
cfi=(3)
cfn=(84)
calls=490 0x4039ed -88 
* * 2940 1470 980
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(2)
calls=490 0x402d74 645 
* * 6370 2940 980
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490
+3 * 490
+3 * 490 0 490 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=490 0x403a0a 134 
* * 199749 42220 38250 25 6 28 25 6 28 23514 724 980
+5 +4 490 490
+4 * 490
+3 * 490 0 490
cfn=(106)
calls=490 0x40325e 113 
* * 2940 1470 980 1 0 0 1
+5 * 490
+3 * 490 490
+4 * 490 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=490 0x403a98 565 
* * 12250 4900 3920 2 0 0 2
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(112)
calls=490 0x403a68 547 
* * 12250 4900 3920
+5 * 490
+3 * 490
+3 * 490
+3 * 490
+3 * 490 0 490
cfi=(11)
cfn=(114)
calls=490 0x403ac9 -60 
* * 225706 73884 71438 7 1 22 7 1 22 7996 497 976
+5 -3 490 490
+4 * 490 0 490
+4 * 490
jump=490 +28 +4 
* * 
+28 +4 490
+4 * 490 490
+1 * 490 490
+2 * 490 490
+2 * 490 490
+1 * 490 490

fn=(188)
0x403d98 171 497 0 497 1 0 0 1
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 * 497 0 497
+4 +2 497 497
+5 * 497 0 0 0 0 0 0 0 0 497 7
+2 +1 497 497
+4 * 497 497
+4 * 497 497
+4 * 497
+3 * 497
+3 * 497 0 497
cfi=(5)
cfn=(190)
calls=497 0x40452a -65 
* * 66214 17786 10428 0 1 0 0 1 0 14887 43 994
+5 +1 497 497
+1 * 497 497

fn=(22)
0x404236 167 497 0 497 1 0 0 1
+1 * 497
+3 * 497
+4 * 497 0 497 1 0 0 1
+4 * 497 0 497
+4 0 497 497
+5 0 497 0 0 0 0 0 0 0 0 497
+2 0 497 497
+4 0 497 497
+4 0 497
+5 0 497
+3 0 497
+3 0 497 0 497
fi=(6)
cfi=(5)
cfn=(26)
calls=497 0x404730 99 
* 0 151744 25106 25380 28 31 14 28 31 14 22908 722 994
+5 0 497
fi=(6)
jump=497 +7 0 
* 0 
+7 0 497 497
+1 0 497 497

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 490 0 490 1 0 0 1
+1 * 490
+3 * 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+4 * 490 0 490
+4 * 490
+4 * 490 0 0 1 0 0 1
+4 * 490
+3 * 490
+3 * 490 0 490
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=490 0x404468 726 
* * 4900 2450 1960 1 0 0 1
+5 * 490 490
+4 * 490 490
+1 * 490 490

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+3 * 490 0 490
+4 * 490
+4 * 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfi=(10)
cfn=(44)
calls=490 0x404468 726 
* * 4900 2450 1960
+5 * 490 490
+4 * 490 490
+1 * 490 490

fn=(86)
0x403a0a 134 490 0 490
+1 * 490
+3 * 490 0 490
+1 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=490 0x4042e2 -45 
* * 17640 6370 6860 5 0 0 5
+5 +1 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490 1 0 0 1
cfn=(94)
calls=490 0x40432a +43 
* * 171329 32420 27960 19 6 28 19 6 28 23514 724 980
+5 * 490
jump=490 +28 * 
* * 
+28 * 490
+4 * 490 490
+1 * 490 490
+1 * 490 490

fn=(88)
0x4042e2 90 490 0 490 1 0 0 1
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=490 0x4047b2 +24 
* * 8820 2940 3430 3 0 0 3
+5 * 490 490
+4 * 490 0 490
+7 * 490 490
+4 * 490 0 490
+8 * 490 490
+4 * 490 0 490
+8 +1 490 490
+1 * 490 490

fn=(156)
0x4031ec 159 490 0 490 1 0 0 1
+1 * 490
+3 * 490 0 490
+1 * 490
+4 * 490 0 490
+4 +2 490 490
+4 * 490 490 0 1 0 0 1
+4 * 490
+3 * 490 490
+4 * 490 490
+3 * 490
+3 * 490
+3 * 490
+4 * 490
+3 * 490 490
+4 * 490 490
+3 -1 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(158)
calls=490 0x403ce6 +11 
* * 66400 17916 10836 24 5 0 24 5 0 13238 425 980
+5 +1 490 490
+4 * 490
+3 * 490 0 490
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=490 0x4031b8 -82 
* * 11270 3920 3920 1 0 0 1
+5 * 490
jump=490 +28 * 
* * 
+28 * 490
+4 * 490 490
+1 * 490 490
+1 * 490 490

fn=(172)
0x4031b8 79 490 0 490 1 0 0 1
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 490
+4 * 490
+3 * 490 0 490
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=490 0x403ccc +42 
* * 6860 2450 2450
+5 * 490 490
+1 * 490 490

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008 0 1008
+4 +1 1008 1008
+4 * 1008 1008 0 0 2 0 0 2
+4 * 1008
+3 * 1008 1008
+4 * 1008 1008
+3 * 1008
+3 * 1008
+3 * 1008
+4 * 1008 1008
+1 * 1008 1008

fn=(106)
0x40325e 113 1001 0 1001 1 0 0 1
+1 * 1001
+3 * 1001 0 1001
+4 +1 1001 1001
+4 * 1001 1001
+1 * 1001 1001

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6)
0x403b08 117 504 0 504 1 0 0 1
+1 * 504
+3 * 504 0 504 0 0 1 0 0 1
+4 +1 504 504
+4 * 504 504
+1 * 504 504

fn=(82)
0x4039fc 117 504 0 504 1 0 0 1
+1 * 504
+3 * 504 0 504 1 0 0 1
+4 +1 504 504
+4 * 504 504
+1 * 504 504

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 245 0 245
+1 * 245
+3 * 245
+4 * 245 0 245
+4 * 245 0 245
+4 +2 245 245
+4 * 245 245
+4 * 245 245
+4 * 245 245
+4 * 245
+3 * 245 0 0 0 0 0 0 0 0 245 8
jcnd=7/245 +51 +10 
* * 
+2 +3 238 238
+4 * 238 238
+4 * 238 238
+4 -1 238 238
+4 * 238
+3 * 238
+3 * 238 0 238
cfi=(3)
cfn=(222)
calls=238 0x403373 215 
* * 9044 3094 3332 0 16 2 0 16 2 238
+5 +2 238 238
+4 * 238 238
+4 * 238
+4 * 238 238
+4 * 238 0 238
+4 * 238
jump=238 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 10946 3357 2905 36 7 8 36 7 8 761 65 41
+5 +2 245 245
+1 * 245 245

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 490 0 490 1 0 0 1
+1 * 490
+3 * 490 0 490
+2 * 490 0 490
+2 * 490 0 490
+1 * 490
+4 * 490 0 490 1 0 0 1
+4 * 490 0 490
+4 +2 490 490
+4 * 490
+3 * 490 0 490
cfn=(6)
calls=490 0x403b08 117 
* * 2940 1470 980 1 0 1 1 0 1
+5 * 490
+3 * 490 0 490
cfi=(3)
cfn=(8)
calls=490 0x403afa -88 
* * 2940 1470 980 1 0 0 1
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(10)
calls=490 0x402f54 645 
* * 6370 2940 980 1 1 0 1 1
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490
+3 * 490
+3 * 490 0 490
cfn=(12)
calls=490 0x403b16 134 
* * 197631 42848 40667 27 14 12 27 14 12 22954 662 980
+5 +4 490 490 0 1 0 0 1
+4 * 490
+3 * 490 0 490
cfn=(40)
calls=490 0x40333c 113 
* * 2940 1470 980 2 0 0 2
+5 * 490
+3 * 490 490
+4 * 490 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(42)
calls=490 0x403ba4 565 
* * 12250 4900 3920 3 0 0 3
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(46)
calls=490 0x403b74 547 
* * 12250 4900 3920
+5 * 490
+3 * 490
+3 * 490
+3 * 490
+3 * 490 0 490 1 0 0 1
cfi=(11)
cfn=(48)
calls=490 0x403bd5 -60 
* * 225706 73884 71438 26 3 4 26 3 4 7996 512 976 122
+5 -3 490 490
+4 * 490 0 490
+4 * 490
jump=490 +28 +4 
* * 
+28 +4 490
+4 * 490 490
+1 * 490 490
+2 * 490 490
+2 * 490 490
+1 * 490 490

fn=(108)
0x403a98 565 490 0 490 1 0 0 1
+1 * 490
+3 * 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+4 * 490 0 490
+4 * 490
+4 * 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfi=(10)
cfn=(110)
calls=490 0x404380 726 
* * 4900 2450 1960 1 0 0 1
+5 * 490 490
+4 * 490 490
+1 * 490 490

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 490 0 490
+1 * 490
+3 * 490 0 490
+1 * 490
+4 * 490 0 490 1 0 0 1
+4 +2 490 490
+4 * 490
+3 * 490 0 490
cfn=(40)
calls=490 0x40333c 113 
* * 2940 1470 980
+5 * 490
+3 * 490 490
+4 * 490 490
+4 * 490 490
+4 * 490 490
+3 -1 490
+3 * 490
+3 * 490 0 490
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=490 0x40334a 148 
* * 15190 4900 5880 2 0 0 2
+5 +1 490 490
+4 * 490
+3 * 490 0 490
cfn=(186)
calls=490 0x4032ca 159 
* * 98206 29818 19118 3 1 0 3 1 0 15206 37 980
+5 * 490
jump=490 +28 * 
* * 
+28 * 490 0 0 1 0 0 1
+4 * 490 490
+1 * 490 490
+1 * 490 490

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fl=(12)
fn=(54)
0x404a36 450 490 0 490
+1 * 490
+3 * 490 0 490
+1 * 490
+4 * 490 0 490 1 0 0 1
+4 * 490 0 490
+4 * 490 0 490
+4 +10 490 490
+4 * 490
+3 * 490 0 490
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=490 0x404c38 288 
* * 7350 2940 2450 3 0 0 3
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(56)
calls=490 0x404c38 288 
* * 7350 2940 2450
+5 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=490 0x404c52 -36 
* * 179156 57714 54778 20 3 4 20 3 4 7996 512 976 122
+5 +1 490
+4 * 490 490
+1 * 490 490
+1 * 490 490

fn=(60)
0x404c52 424 490 0 490
+1 * 490
+3 * 490 0 490
+2 * 490 0 490
+1 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +4 490 490
+4 * 490
+3 * 490 0 490
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=490 0x40492d 277 
* * 7350 2940 2450 2 0 0 2
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=490 0x404d9d 277 
* * 12250 4410 3920 2 0 1 2 0 1
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(66)
calls=490 0x404d9d 277 
* * 12250 4410 3920
+5 * 490
+3 * 490
+3 * 490
+3 * 490 0 490
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=490 0x404db7 -49 
* * 133586 42524 39588 15 3 3 15 3 3 7996 512 976 122
+5 +1 490
+4 * 490 490
+1 * 490 490
+2 * 490 490
+1 * 490 490

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 532 0 532 1 0 0 1
+1 * 532
+3 * 532
+4 * 532 0 532
+4 +1 532 532
+4 * 532
+3 * 532 0 532 1 0 0 1
cfi=(13)
cfn=(64)
calls=532 -33 -66 
* * 3192 1596 1064
+5 * 532 532
+1 * 532 532

fn=(66)
0x404d9d 277 980 0 980
+1 * 980
+3 * 980
+4 * 980 0 980
+4 +1 980 980
+4 * 980
+3 * 980 0 980
cfi=(13)
cfn=(68)
calls=980 0x404f1a -58 
* * 15680 5880 4900 2 0 1 2 0 1
+5 * 980 980
+1 * 980 980

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 490 0 490
+1 * 490
+3 * 490 0 490
+1 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +10 490 490
+4 * 490
+3 * 490 0 490
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=490 0x404bc6 288 
* * 7350 2940 2450 3 0 0 3
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(122)
calls=490 0x404bc6 288 
* * 7350 2940 2450
+5 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=490 0x404be0 -36 
* * 179156 57714 54778 4 1 22 4 1 22 7996 497 976
+5 +1 490
+4 * 490 490
+1 * 490 490
+1 * 490 490

fn=(128)
0x404878 277 532 0 532
+1 * 532
+3 * 532
+4 * 532 0 532 1 0 0 1
+4 +1 532 532
+4 * 532
+3 * 532 0 532
cfi=(13)
cfn=(130)
calls=532 -33 -66 
* * 3192 1596 1064 0 0 1 0 0 1
+5 * 532 532
+1 * 532 532

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 980 0 980
+1 * 980
+3 * 980
+4 * 980 0 980
+4 +1 980 980
+4 * 980
+3 * 980 0 980
cfi=(13)
cfn=(134)
calls=980 0x404e98 -58 
* * 15680 5880 4900 2 0 0 2
+5 * 980 980
+1 * 980 980

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +8 490 0 490
+4 +3 490 490
+4 * 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=490 0x404eb5 -22 
* * 126236 40074 36648 1 1 22 1 1 22 7996 497 976
+5 +1 490 490
+1 * 490 490

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 980 0 980 1 0 0 1
+1 * 980
+3 * 980
+4 * 980 0 980
+4 +1 980 980
+4 * 980
+3 * 980 0 980
cfi=(13)
cfn=(124)
calls=980 0x404d36 -77 
* * 5880 2940 1960 2 0 0 2
+5 * 980 980
+1 * 980 980

fn=(56)
0x404c38 288 980 0 980 1 0 0 1
+1 * 980
+3 * 980
+4 * 980 0 980 1 0 0 1
+4 +1 980 980
+4 * 980
+3 * 980 0 980
cfi=(13)
cfn=(58)
calls=980 0x404d8f -77 
* * 5880 2940 1960 1 0 0 1
+5 * 980 980
+1 * 980 980

fn=(74)
0x404f37 368 504 0 504
+1 * 504
+3 * 504
+4 * 504 0 504 1 0 0 1
+4 * 504 0 504
+4 * 504 0 504
+4 +2 504 504
+4 * 504 504
+4 * 504
+3 * 504
+3 * 504
+4 * 504 0 504
+4 +1 504 504
+5 * 504 0 0 0 0 0 0 0 0 504
jcnd=7/504 +33 +2 
* * 
+2 +1 497 497
+4 * 497
+8 * 497 497
+4 * 497 497
+4 * 497
+3 * 497 0 0 1 0 0 1
+3 * 497 0 497 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=497 0x3877c83840 0 
* * 113248 34865 33876 11 2 5 11 2 5 7568 515 492 122
* * 497 497 0 1 1 0 1 1 0 0 0 497
+5 +1 504 504
+4 * 504
+8 * 504 504
+4 * 504
+3 +1 504 504
+1 * 504 504

fn=(140)
0x404eb5 368 504 0 504
+1 * 504
+3 * 504
+4 * 504 0 504 1 0 0 1
+4 * 504 0 504
+4 * 504 0 504 0 0 1 0 0 1
+4 +2 504 504
+4 * 504 504
+4 * 504
+3 * 504
+3 * 504
+4 * 504 0 504
+4 +1 504 504
+5 * 504 0 0 0 0 0 0 0 0 504
jcnd=7/504 +33 +2 
* * 
+2 +1 497 497
+4 * 497
+8 * 497 497
+4 * 497 497
+4 * 497
+3 * 497
+3 * 497 0 497
cob=(2)
cfi=(9)
cfn=(78)
calls=497 0x3877c83840 0 
* * 113248 34865 33876 0 1 23 0 1 23 7568 501 492
* * 497 497 0 0 0 0 0 0 0 0 0 497
+5 +1 504 504
+4 * 504
+8 * 504 504
+4 * 504
+3 +1 504 504
+1 * 504 504

fn=(72)
0x404db7 379 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490 1 0 0 1
+4 * 490 0 490
+4 * 490 0 490
+4 +8 490 0 490
+4 +3 490 490
+4 * 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfn=(74)
calls=490 0x404f37 -22 
* * 126236 40074 36648 14 3 3 14 3 3 7996 512 976 122
+5 +1 490 490
+1 * 490 490

fn=(126)
0x404be0 424 490 0 490
+1 * 490
+3 * 490 0 490
+2 * 490 0 490
+1 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 * 490 0 490
+4 +4 490 490
+4 * 490
+3 * 490 0 490
cfn=(128)
calls=490 0x404878 277 
* * 7350 2940 2450 1 0 0 1
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(132)
calls=490 0x404d44 277 
* * 12250 4410 3920 2 0 0 2
+5 * 490
+3 * 490 490
+4 * 490
+3 * 490 0 490
cfn=(132)
calls=490 0x404d44 277 
* * 12250 4410 3920
+5 * 490
+3 * 490
+3 * 490
+3 * 490 0 490
cfn=(138)
calls=490 0x404d5e -49 
* * 133586 42524 39588 1 1 22 1 1 22 7996 497 976
+5 +1 490
+4 * 490 490
+1 * 490 490
+2 * 490 490
+1 * 490 490

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 980 0 980 1 0 0 1
+1 * 980
+3 * 980 0 980
+4 +1 980 980
+4 * 980 980
+1 * 980 980

fn=(110)
0x404380 726 980 0 980 1 0 0 1
+1 * 980
+3 * 980 0 980
+4 * 980 0 980
+4 * 980 980
+4 * 980 980
+3 * 980 980
+4 * 980 0 980
+3 * 980 980
+1 * 980 980

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 980 0 980 1 0 0 1
+1 * 980
+3 * 980 0 980
+4 +1 980 980
+4 * 980 980
+1 * 980 980

fn=(44)
0x404468 726 980 0 980
+1 * 980
+3 * 980 0 980
+4 * 980 0 980
+4 * 980 980
+4 * 980 980
+3 * 980 980
+4 * 980 0 980 1 0 0 1
+3 * 980 980
+1 * 980 980

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(262)
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fl=(14)
fn=(150)
0x40326c 148 497 0 497
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 * 497 0 497
+4 +3 497 497 0 1 0 0 1
+4 * 497 497
+4 * 497
+3 * 497
+3 * 497 0 497
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=497 0x403d1a -29 
* * 8946 2982 3479 3 0 0 3
+5 +1 497 497
+1 * 497 497

fn=(180)
0x40334a 148 497 0 497
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 * 497 0 497
+4 +3 497 497
+4 * 497 497
+4 * 497
+3 * 497
+3 * 497 0 497
cfn=(182) void std::_Destroy<int*>(int*, int*)
calls=497 0x403dcc -29 
* * 8946 2982 3479 2 0 0 2
+5 +1 497 497
+1 * 497 497

fn=(152)
0x403d1a 122 497 0 497 1 0 0 1
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 +4 497 497
+4 * 497 497
+4 * 497
+3 * 497
+3 * 497 0 497
cfn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
calls=497 0x4044f8 -14 
* * 2982 994 1491 2 0 0 2
+5 +2 497 497
+1 * 497 497

fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 497 0 497 1 0 0 1
+1 * 497
+3 * 497 0 497
+4 * 497 0 497
+4 * 497 497
+1 * 497 497

fn=(154)
0x4044f8 112 497 0 497 1 0 0 1
+1 * 497
+3 * 497 0 497
+4 * 497 0 497 1 0 0 1
+4 * 497 497
+1 * 497 497

fn=(182)
0x403dcc 122 497 0 497 1 0 0 1
+1 * 497
+3 * 497
+4 * 497 0 497
+4 * 497 0 497
+4 +4 497 497
+4 * 497 497
+4 * 497
+3 * 497
+3 * 497 0 497
cfn=(184)
calls=497 0x40454c -14 
* * 2982 994 1491 1 0 0 1
+5 +2 497 497
+1 * 497 497

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2735 423 421 9 17 6 9 17 6 451 60 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 13 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 2969 630 580 13 6 4 13 6 4 474 57 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 245 0 245 1 0 0 1
+1 * 245
+3 * 245
+4 * 245 0 245
+4 * 245 0 245
+4 +1 245 245
+4 * 245
+3 * 245 0 245
cfi=(2)
cfn=(2)
calls=245 0x402d74 645 
* * 3185 1470 490
+5 * 245
+3 * 245 0 245
+3 +1 245 245
+6 * 245 0 245
+3 * 245 245
+6 * 245 0 245
+3 +1 245 245
+6 * 245 0 245 1 0 0 1
+3 * 245 245
+6 * 245 0 245
+3 +2 245 0 245
+7 * 245
jump=245 +86 * 
* * 
+2 +1 30380 30380
+3 * 30380
+3 * 30380 30380
+4 * 30380
+3 * 30380
+3 * 30380 0 30380
cfi=(2)
cfn=(144)
calls=30380 0x402d9a 770 
* * 334180 151900 91140
+5 * 30380 30380
+4 * 30380 30380
+5 * 30380
+4 * 30380 0 30380
+5 +1 30380 30380
+3 * 30380
+3 * 30380 30380
+4 * 30380
+3 * 30380
+3 * 30380 0 30380
cfi=(2)
cfn=(146)
calls=30380 0x402dba 770 
* * 334180 151900 91140 1 0 0 1
+5 * 30380 30380
+2 * 30380
+4 * 30380 30380
+5 * 30380
+4 * 30380 0 30380
+5 -2 30380 0 30380
+4 * 30380 30380
+3 * 30380
+3 * 30380 30380
+3 * 30380 0 0 0 0 0 0 0 0 30380 246
jcnd=30135/30380 -93 +1 
* * 
-9 * 245 245 0 1 0 0 1
+3 * 245
+3 * 245 245
+3 * 245 0 0 0 0 0 0 0 0 245
jcnd=245/245 -93 +1 
* * 
+2 +4 245 245
+3 * 245
+3 * 245
+4 * 245 245 0 1 0 0 1
+5 * 245
+4 * 245
+3 * 245 0 245
+5 +1 245 245
+3 * 245
+3 * 245
+4 * 245 245
+5 * 245
+4 * 245
+3 * 245 0 245
+5 +1 245 0 245
+7 * 245
jump=245 0x4016ee * 
* * 
+2 +1 30380 30380
+3 * 30380
+3 * 30380 30380
+4 * 30380
+3 * 30380 0 0 1 0 0 1
+3 * 30380 0 30380
cfi=(2)
cfn=(146)
calls=30380 0x402dba 770 
* * 334180 151900 91140
+5 * 30380 30380
+2 * 30380
+4 * 30380 30380
+5 * 30380 0 30380
+5 +1 30380 30380
+3 * 30380
+3 * 30380 30380
+4 * 30380
+3 * 30380
+3 * 30380 0 30380
cfi=(2)
cfn=(144)
calls=30380 0x402d9a 770 
* * 334180 151900 91140
+5 * 30380 30380
+4 * 30380 30380
+5 * 30380 0 30380
+5 +1 30380 30380
+5 * 30380 30380
+5 * 30380 30380
+5 * 30380
+4 * 30380 0 30380
+5 +1 30380 30380
+5 * 30380 30380
+5 * 30380 30380
+5 * 30380
+4 * 30380 0 30380
+5 -4 30380 0 30380
+4 * 30380 30380
+3 * 30380
+3 * 30380 30380
+3 * 30380 0 0 0 0 0 0 0 0 30380 246
jcnd=30135/30380 0x401672 +1 
* * 
-9 * 245 245 0 1 0 0 1
+3 * 245
+3 * 245 245
+3 * 245 0 0 0 0 0 0 0 0 245
jcnd=245/245 0x401672 +1 
* * 
+6 +6 245 245 0 1 0 0 1
+5 * 245 245
+5 * 245 0 245
+5 +2 245 245
+3 +1 245 0 245
+3 * 245 245
+5 * 245 245
+1 * 245 245

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 245
+7 * 245
+7 * 245
+3 * 245
+3 * 245 0 245
cfi=(2)
cfn=(4)
calls=245 0x4030b2 310 
* * 243955 70386 65663 63 17 16 63 17 16 15493 733 978 122
+5 * 245
+7 * 245
+7 * 245
+3 * 245
+3 * 245 0 245
cfi=(2)
cfn=(80)
calls=245 0x402ff4 310 
* * 245260 70083 64471 40 7 48 40 7 48 15822 770 978
+5 * 245 0 0 1 0 0 1
+7 * 245
+7 * 245
+3 * 245
+3 * 245 0 245
cfn=(142)
calls=245 0x401585 -52 
* * 3175445 1403605 733285 8 0 0 8 0 0 61250 492
+5 * 245 0 245
+8 * 245 245
+6 * 245 0 245
+6 * 245
+7 * 245
+3 * 245 0 245
cfi=(2)
cfn=(148)
calls=245 0x402df4 414 
* * 60640 19003 13503 33 5 0 33 5 0 6619 215 490
+5 * 245
+7 * 245
+3 * 245 0 245 1 0 0 1
cfi=(2)
cfn=(178)
calls=245 0x402e74 414 
* * 64048 20299 14459 7 1 0 7 1 0 7603 21 490
+5 +2 245
+7 * 245
+7 * 245
+3 * 245
+3 * 245 0 245
cfi=(2)
cfn=(4)
calls=245 0x4030b2 310 
* * 243572 70356 65552 2 1 1 2 1 1 15457 441 978
+5 * 245
+7 * 245
+7 * 245
+3 * 245
+3 * 245 0 245
cfi=(2)
cfn=(80)
calls=245 0x402ff4 310 
* * 244385 70031 64327 0 0 2 0 0 2 15688 451 978
+5 * 245 245
+6 * 245 0 0 1 0 0 1
+7 * 245
+7 * 245 0 245
+6 * 245 245
+8 * 245
+3 * 245
+3 * 245 0 245
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=245 0x401719 -33 
* * 1472695 612990 337855 4 0 0 4 0 0 30625 246
+5 * 245 0 245
+8 * 245 245
+6 * 245 0 245
+6 * 245
+7 * 245 0 0 1 0 0 1
+3 * 245 0 245
cfi=(2)
cfn=(148)
calls=245 0x402df4 414 
* * 60640 19003 13503 0 0 0 0 0 0 6619 210 490
+5 * 245
+7 * 245
+3 * 245 0 245
cfi=(2)
cfn=(178)
calls=245 0x402e74 414 
* * 64048 20299 14459 0 0 0 0 0 0 7603 16 490
+5 +2 245 245
+7 * 245
+3 * 245 0 245
cfi=(2)
cfn=(2)
calls=245 0x402d74 645 
* * 3185 1470 490
+5 * 245 245
+6 * 245
+3 * 245
+3 * 245
+3 * 245 245
+7 * 245
+3 * 245 0 0 1 0 0 1
+3 * 245 0 245
cfi=(2)
cfn=(144)
calls=245 0x402d9a 770 
* * 2695 1225 735
+5 * 245
+3 * 245
+7 * 245
+3 * 245
+3 * 245 0 245
cfi=(2)
cfn=(200)
calls=245 0x402eda 901 
* * 26493 9671 7511 39 23 10 39 23 10 1244 73 41
+5 +1 245 245
+7 * 245
+3 * 245 0 245
cfi=(2)
cfn=(10)
calls=245 0x402f54 645 
* * 3185 1470 490 0 1 0 0 1
+5 * 245 245
+6 * 245
+3 * 245
+3 * 245
+3 * 245 245
+7 * 245 0 0 1 0 0 1
+3 * 245
+3 * 245 0 245
cfi=(2)
cfn=(146)
calls=245 0x402dba 770 
* * 2695 1225 735
+5 * 245
+3 * 245
+7 * 245
+3 * 245
+3 * 245 0 245
cfi=(2)
cfn=(244)
calls=245 0x402f7a 901 
* * 26292 9481 7355 28 32 16 28 32 16 1230 76 41
+5 +1 245 245
+7 * 245
+3 * 245 0 245
cfi=(2)
cfn=(10)
calls=245 0x402f54 645 
* * 3185 1470 490
+5 * 245 245
+6 * 245
+3 * 245
+3 * 245
+3 * 245 245 0 1 0 0 1
+7 * 245
+3 * 245
+3 * 245 0 245
cfi=(2)
cfn=(146)
calls=245 0x402dba 770 
* * 2695 1225 735
+5 * 245 245
+2 * 245
+4 * 245 245
+8 * 245 245
+8 * 245 0 245
+8 +1 245 245
+7 * 245
+3 * 245 0 245
cfi=(2)
cfn=(2)
calls=245 0x402d74 645 
* * 3185 1470 490
+5 * 245 245 0 1 0 0 1
+6 * 245
+3 * 245
+3 * 245
+3 * 245 245
+7 * 245
+3 * 245
+3 * 245 0 245
cfi=(2)
cfn=(144)
calls=245 0x402d9a 770 
* * 2695 1225 735
+5 * 245 245
+4 * 245 245
+8 * 245
+4 * 245 245
+8 * 245
+3 * 245 0 245
+8 +2 245 0 245
+7 -12 245 245
+8 * 245 245
+7 * 245 0 0 0 0 0 0 0 0 245 2
jcnd=1/245 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 245
+7 * 245
+3 * 245 0 245
cfi=(2)
cfn=(2)
calls=245 0x402d74 645 
* * 3185 1470 490 2 0 1 2 0 1
+5 * 245
+3 * 245 245
+7 * 245
+3 * 245 0 245
cfi=(2)
cfn=(2)
calls=245 0x402d74 645 
* * 3185 1470 490 0 1 0 0 1
+5 * 245
+3 * 245 0 0 0 0 0 0 0 0 245
+2 * 245 0 0 1 0 0 1
+5 * 245
jump=245 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 245
+2 * 245 0 0 0 0 0 0 0 0 245
jcnd=245/245 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 245 0 245
+1 * 245
+3 * 245
+4 * 245 0 245
+4 * 245 0 245
+4 * 245 0 245
+5 +1 245 245
+4 * 245
+3 * 245 0 245
cfi=(2)
cfn=(2)
calls=245 0x402d74 645 
* * 3185 1470 490
+5 * 245
+3 * 245 0 245
+3 +1 245 245 0 1 0 0 1
+6 * 245 0 245
+3 * 245 245
+6 * 245 0 245
+3 +2 245 0 245
+7 * 245
jump=245 +86 * 
* * 
+2 +1 30380 30380
+3 * 30380
+3 * 30380 30380
+4 * 30380
+3 * 30380
+3 * 30380 0 30380
cfi=(2)
cfn=(144)
calls=30380 0x402d9a 770 
* * 334180 151900 91140
+5 * 30380 30380
+4 * 30380 30380
+5 * 30380
+4 * 30380 0 30380
+5 +1 30380 30380
+3 * 30380
+3 * 30380 30380
+4 * 30380
+3 * 30380
+3 * 30380 0 30380
cfi=(2)
cfn=(146)
calls=30380 0x402dba 770 
* * 334180 151900 91140
+5 * 30380 30380
+2 * 30380
+4 * 30380 30380
+5 * 30380
+4 * 30380 0 30380
+5 -2 30380 0 30380
+4 * 30380 30380
+3 * 30380
+3 * 30380 30380
+3 * 30380 0 0 0 0 0 0 0 0 30380 246
jcnd=30135/30380 -93 +1 
* * 
-9 * 245 245 0 1 0 0 1
+3 * 245
+3 * 245 245
+3 * 245 0 0 0 0 0 0 0 0 245
jcnd=245/245 -93 +1 
* * 
+2 +4 245 245
+3 * 245
+3 * 245 0 0 1 0 0 1
+4 * 245 245
+5 * 245
+4 * 245
+3 * 245 0 245
+5 +1 245 245
+3 * 245
+3 * 245
+4 * 245 245
+5 * 245
+4 * 245
+3 * 245 0 245
+5 +1 245 245
+5 * 245 245
+5 * 245 245
+5 * 245 0 0 1 0 0 1
+4 * 245
+3 * 245 0 245
+5 +2 245 245
+3 +1 245 0 245
+3 * 245 245
+5 * 245 245
+1 * 245 245

fl=(4)
fn=(174)
0x403ccc 121 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 490
+4 * 490
+3 * 490 0 490
cfi=(5)
cfn=(176)
calls=490 0x4044cc -35 
* * 2450 980 980
+5 * 490 490
+1 * 490 490

fn=(90)
0x4047b2 115 490 0 490 1 0 0 1
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490 1 0 0 1
+4 +1 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfi=(5)
cfn=(92)
calls=490 0x4049d4 -35 
* * 2940 980 1470 1 0 0 1
+5 * 490 490
+1 * 490 490

fn=(194)
0x403d7e 121 490 0 490 1 0 0 1
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 490
+4 * 490
+3 * 490 0 490
cfi=(5)
cfn=(196)
calls=490 0x404520 -35 
* * 2450 980 980
+5 * 490 490
+1 * 490 490

fn=(16)
0x404804 115 490 0 490 1 0 0 1
+1 * 490
+3 * 490
+4 * 490 0 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+4 * 490
+3 * 490
+3 * 490 0 490
cfi=(5)
cfn=(18)
calls=490 0x404a28 -35 
* * 2940 980 1470 1 0 1 1 0 1
+5 * 490 490
+1 * 490 490

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 994 0 994 1 0 0 1
+5 0 994 0 994
+5 0 994
+3 0 994 0 994
+5 0 994
+4 0 994 994 0 0 1 0 0 1
+7 0 994 994 0 0 1 0 0 1
+3 0 994
+3 0 994 0 0 0 0 0 0 0 0 994
+6 0 994 994 0 0 1 0 0 1
+7 0 994 994 0 1 1 0 1 1
+4 0 994
+3 0 994 0 0 0 0 0 0 0 0 994
+2 0 994 994 0 0 1 0 0 1
+3 0 994
+3 0 994 0 0 0 0 0 0 0 0 994
jcnd=994/994 +97 0 
* 0 
+18 0 994
+3 0 994
+3 0 994 0 994
cfn=(38) _int_malloc
calls=994 0x3877c79a00 0 
* 0 222344 26929 31604 42 35 45 42 35 45 34471 1484
+5 0 994
+3 0 994
+3 0 994 0 0 0 0 0 0 0 0 994
+2 0 994
+3 0 994 0 0 0 0 0 0 0 0 994
+2 0 994
+3 0 994 0 0 0 0 0 0 0 0 994 7
+2 0 994 994
+7 0 994 0 0 0 0 0 0 0 0 994
jcnd=994/994 +13 0 
* 0 
+13 0 994 0 994
+2 0 994 0 0 0 0 0 0 0 0 994 12
+6 0 994
+3 0 994 994
+4 0 994 994
+5 0 994 994
+5 0 994
+4 0 994 994
+1 0 994 0 0 1 0 0 1
+5 0 994 994 0 0 1 0 0 1
+7 0 994 0 0 0 0 0 0 0 0 994
jcnd=994/994 +14 0 
* 0 
+14 0 994 0 994 1 0 0 1
+3 0 994 0 0 0 0 0 0 0 0 994
+6 0 994
jump=994 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 994 0 994 1 0 0 1
+2 0 994
+3 0 994
+3 0 994 0 994
+2 0 994
+3 0 994 0 994
+1 0 994
+3 0 994 0 994
+1 0 994
+3 0 994
+4 0 994
+3 0 994 0 0 0 0 0 0 0 0 994
+6 0 994
+4 0 994
+3 0 994 0 0 0 0 0 0 0 0 994 4
jcnd=10/994 0x3877c838d1 0 
* 0 
+2 0 984
+3 0 984
+3 0 984
+3 0 984
+3 0 984
+3 0 984 0 0 0 0 0 0 0 0 984
jcnd=984/984 +41 0 
* 0 
+41 0 984 0 0 1 0 0 1
+3 0 984 0 0 0 0 0 0 0 0 984
jcnd=984/984 0x3877c839c0 0 
* 0 
+24 0 984
+3 0 984
+4 0 984
+3 0 984
+3 0 984
+3 0 984
+3 0 984
+3 0 984 0 0 0 0 0 0 0 0 984 490
jcnd=500/984 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 494
+10 0 494 494 0 0 2 0 0 2
+3 0 494
+4 0 494 0 494
+3 0 494
+4 0 494
+4 0 494 0 0 0 0 0 0 0 0 494
jcnd=494/494 -18 0 
* 0 
-18 0 1538 1538
+3 0 1538
+4 0 1538 0 1538
+3 0 1538
+4 0 1538
+4 0 1538 0 0 0 0 0 0 0 0 1538 8
jcnd=1044/1538 -18 0 
* 0 
+2 0 994
+4 0 994
+3 0 994 994
+1 0 994 994
+1 0 994 994
+2 0 994 994 0 1 0 0 1
+2 0 994 994
0x3877c839c0 0 984 0 0 1 0 0 1
+3 0 984
+3 0 984
+3 0 984
+4 0 984 0 984 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=984 0x3877c89b20 0 
* 0 170274 62728 60760 6 1 27 6 1 27 8154 514 984 122
+5 0 984
jump=984 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 994 994 0 1 1 0 1 1
+7 0 994 994 0 0 1 0 0 1
+3 0 994
+3 0 994 0 0 1 0 0 1 0 0 994
+6 0 994
+3 0 994 0 0 0 0 0 0 0 0 994
+6 0 994 994
+4 0 994
+4 0 994
+2 0 994 0 0 0 0 0 0 0 0 994
+2 0 994
+2 0 994
+7 0 994 0 0 0 0 0 0 0 0 994
jcnd=994/994 +14 0 
* 0 
+14 0 994
+2 0 994
cfn=(170) _int_free
calls=994 0x3877c78650 0 
* 0 94765 25011 13971 19 2 0 19 2 0 22827 472

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 3 0 0 3
+6 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 994 0 994 1 0 0 1
+2 0 994 0 994
+2 0 994 0 994
+2 0 994
+3 0 994 0 994
+2 0 994 0 994
+1 0 994 0 994
+1 0 994
+3 0 994
+4 0 994 994
+4 0 994 0 994
+4 0 994
+3 0 994
+4 0 994
+3 0 994
+3 0 994
+3 0 994 0 0 1 0 0 1 0 0 994
+6 0 994
+4 0 994 0 0 0 0 0 0 0 0 994
+6 0 994
+4 0 994 0 0 0 0 0 0 0 0 994
+6 0 994 994
+7 0 994 0 0 0 0 0 0 0 0 994 2
jcnd=870/994 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 870
+2 0 870 0 0 0 0 0 0 0 0 870
+6 0 870 870 0 1 0 0 1
+4 0 870
+3 0 870
+2 0 870 0 0 0 0 0 0 0 0 870
jcnd=870/870 0x3877c78a40 0 
* 0 
+6 0 870 870
+4 0 870
+3 0 870 0 0 0 0 0 0 0 0 870
+6 0 870 870
+5 0 870
+4 0 870 0 0 0 0 0 0 0 0 870
jcnd=870/870 0x3877c7907c 0 
* 0 
+6 0 870 870
+5 0 870
+4 0 870 0 0 0 0 0 0 0 0 870
+6 0 870
+4 0 870 0 0 1 0 0 1 0 0 870
+6 0 870
+4 0 870 870
+7 0 870 0 0 0 0 0 0 0 0 870
+6 0 870 870
+6 0 870
+2 0 870 0 0 0 0 0 0 0 0 870
+6 0 870 870
+4 0 870 0 0 0 0 0 0 0 0 870 5
jcnd=866/870 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 870 870 0 1 0 0 1
+4 0 870 0 0 0 0 0 0 0 0 870 346
jcnd=360/870 0x3877c78bf0 0 
* 0 
+6 0 510 510 0 0 1 0 0 1
+6 0 510 0 0 1 0 0 1 0 0 510 46
jcnd=45/510 0x3877c78a78 0 
* 0 
+6 0 465 465
+5 0 465 465
+5 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+9 0 465 0 465
+4 0 465 0 465
+4 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=457/465 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 465
+3 0 465
+4 0 465 465
+4 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
-12 0 45
+4 0 45 45
+4 0 45 45
+4 0 45 0 0 0 0 0 0 0 0 45
+6 0 510
+7 0 510 0 510
+4 0 510 0 510
+4 0 510 0 0 0 0 0 0 0 0 510 65
jcnd=441/510 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 360
+7 0 360 0 0 0 0 0 0 0 0 360
jcnd=360/360 0x3877c78b20 0 
* 0 
0x3877c78a40 0 870 0 0 1 0 0 1
+5 0 870 870
+4 0 870 870
+7 0 870 0 0 0 0 0 0 0 0 870
jcnd=870/870 +16 0 
* 0 
+16 0 870 0 870
+5 0 870 0 0 0 0 0 0 0 0 870
+6 0 870
+3 0 870
jump=870 0x3877c7878f 0 
* 0 
+10 0 45 0 45
+6 0 45 0 0 1 0 0 1
jump=45 0x3877c78885 0 
* 0 
0x3877c78b20 0 870 870 0 1 0 0 1
+4 0 870
+2 0 870 0 0 0 0 0 0 0 0 870
+6 0 870 870
+7 0 870 0 0 0 0 0 0 0 0 870
jcnd=870/870 +15 0 
* 0 
+15 0 870 0 870 1 0 0 1
+4 0 870 0 0 0 0 0 0 0 0 870 2
+6 0 870
+4 0 870 870
+1 0 870 870
+1 0 870 870
+2 0 870 870
+2 0 870 870
+2 0 870 870
+2 0 870 870
0x3877c78bf0 0 360 0 0 1 0 0 1
+3 0 360 0 360
+4 0 360
+3 0 360
+4 0 360 0 360 1 0 0 1
+4 0 360
jump=360 0x3877c788cf 0 
* 0 
0x3877c7907c 0 870 870 0 1 1 0 1 1
+4 0 870 0 0 1 0 0 1
+7 0 870
+4 0 870
+3 0 870
+3 0 870 0 0 0 0 0 0 0 0 870
jcnd=870/870 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 984 0 0 1 0 0 1
+7 0 984
+3 0 984
+3 0 984 984 0 0 1 0 0 1
+4 0 984
+4 0 984 0 0 0 0 0 0 0 0 0 0 984 122
jump=120 0x3877c89be8 0 
* 0 
jump=128 0x3877c89bd0 0 
* 0 
jump=120 0x3877c89bb8 0 
* 0 
jump=120 +11 0 
* 0 
jump=120 0x3877c89c48 0 
* 0 
jump=122 0x3877c89c30 0 
* 0 
jump=124 0x3877c89c18 0 
* 0 
jump=130 0x3877c89c00 0 
* 0 
+11 0 120 120
+3 0 120
+4 0 120
+4 0 120 120
+4 0 120
+4 0 120 0 120
+4 0 120
+9 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-40 0 7410 7410
+4 0 7410 0 7410 0 0 3 0 0 3
+4 0 7410 7410
+4 0 7410 0 7410
+4 0 7410 7410
+4 0 7410 0 7410 0 0 1 0 0 1
+4 0 7410 7410
+4 0 7410 0 7410
+4 0 7410
+4 0 7410
+4 0 7410 0 0 0 0 0 0 0 0 7410 510
jcnd=948/7410 0x3877c89c60 0 
* 0 
-32 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122
jcnd=10/122 0x3877c89c60 0 
* 0 
-24 0 124 124
+4 0 124 0 124
+4 0 124 124
+4 0 124 0 124
+4 0 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
jcnd=8/124 0x3877c89c60 0 
* 0 
-16 0 130 130 0 1 0 0 1
+4 0 130 0 130
+4 0 130 0 0 1 0 0 1
+4 0 130
+4 0 130 0 0 0 0 0 0 0 0 130 4
jcnd=10/130 0x3877c89c60 0 
* 0 
+6 0 6922
+4 0 6922 6922
+3 0 6922 0 6922 0 0 1 0 0 1
+3 0 6922 6922
+4 0 6922 0 6922 0 0 3 0 0 3
+4 0 6922 6922
+4 0 6922 0 6922 0 0 18 0 0 18
+4 0 6922 6922
+4 0 6922 0 6922
+4 0 6922
jump=6922 -80 0 
* 0 
-30 0 120 120
+3 0 120 0 120
+3 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120 0 0 1 0 0 1
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-24 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128
jump=128 -80 0 
* 0 
-16 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
+8 0 120 120
+3 0 120
+4 0 120 0 0 1 0 0 1
+4 0 120
+4 0 120
jump=120 -39 0 
* 0 
+9 0 128
+3 0 128 0 0 0 0 0 0 0 0 128
+6 0 128 128
+3 0 128
+4 0 128
jump=128 -72 0 
* 0 
+8 0 120
+4 0 120 120
+3 0 120 0 0 0 0 0 0 0 0 120
+2 0 120
+4 0 120
jump=120 -99 0 
* 0 
+11 0 130 130 0 1 0 0 1
+3 0 130
+4 0 130
+4 0 130
+4 0 130
jump=130 0x3877c89b78 0 
* 0 
+9 0 124 124
+3 0 124
+4 0 124
+4 0 124
+4 0 124
jump=124 0x3877c89b70 0 
* 0 
+9 0 122 122
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b68 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b60 0 
* 0 
+9 0 984 0 984 1 0 0 1
+3 0 984 984

fn=(104) alloc_perturb
0x3877c77180 0 868 868 0 1 0 0 1
+6 0 868
+2 0 868 0 0 0 0 0 0 0 0 868 1
+2 0 868 868

fn=(38)
0x3877c79a00 0 994 0 994 1 0 0 1
+2 0 994
+3 0 994 0 994
+2 0 994 0 994
+2 0 994 0 994 0 0 1 0 0 1
+2 0 994
+3 0 994 0 994
+1 0 994 0 994
+1 0 994
+4 0 994
+4 0 994 0 0 0 0 0 0 0 0 994
+6 0 994
+4 0 994
+6 0 994
+3 0 994
+4 0 994
+4 0 994
+4 0 994
+3 0 994 0 0 0 0 0 0 0 0 994
+6 0 994 994 0 1 1 0 1 1
+7 0 994 0 0 0 0 0 0 0 0 994 5
jcnd=872/994 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 868
+4 0 868 868
+1 0 868 868
+1 0 868 868
+2 0 868 868
+2 0 868 868
+2 0 868 868
+2 0 868 868
+7 0 889
+7 0 889 0 0 1 0 0 1 0 0 889 5
jcnd=2/889 0x3877c79b70 0 
* 0 
+2 0 887
+3 0 887
+5 0 887
+3 0 887
+4 0 887 0 887
+4 0 887
+2 0 887
+5 0 887 887 0 0 4 0 0 4
+4 0 887
+3 0 887 0 0 0 0 0 0 0 0 887
jcnd=887/887 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 911 244 193 8 3 0 8 3 0 187 26
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 888 0 0 1 0 0 1
+3 0 888
+3 0 888
+3 0 888
+4 0 888
+3 0 888
+4 0 888 0 888
+5 0 888
+3 0 888 0 888
+4 0 888 0 888
+4 0 888 0 888
+5 0 888
+3 0 888
+3 0 888
+3 0 888
+3 0 888
+4 0 888
+4 0 888 0 0 1 0 0 1
+4 0 888 0 888
+4 0 888
+4 0 888 0 888
+5 0 888 0 888
+5 0 888
+3 0 888
+3 0 888 0 888
+5 0 888
+5 0 888
+3 0 888 0 888
+4 0 888 0 888
+4 0 888
+6 0 888 0 888
+4 0 888 0 888
+5 0 888 0 0 1 0 0 1
+3 0 888
+3 0 888
+3 0 888
jump=888 +87 0 
* 0 
+8 0 807
+3 0 807
+4 0 807
+2 0 807
+2 0 807
+3 0 807
+3 0 807
+3 0 807
+2 0 807
+2 0 807
+5 0 807
+2 0 807 807 0 0 1 0 0 1
+4 0 807
+3 0 807
+4 0 807 0 807
+4 0 807 0 807
+8 0 807
+7 0 807 0 807
+4 0 807 0 807
+4 0 807 0 807
+4 0 807 0 0 0 0 0 0 0 0 807
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1764 1764 0 1 0 0 1
+4 0 1764
+3 0 1764 0 0 0 0 0 0 0 0 1764 48
jcnd=848/1764 0x3877c79ef0 0 
* 0 
+6 0 916 916
+4 0 916 916
+4 0 916
+4 0 916 0 0 0 0 0 0 0 0 916
+6 0 916 916 0 1 1 0 1 1
+7 0 916 0 0 0 0 0 0 0 0 916
+6 0 916
+4 0 916
+7 0 916 0 0 0 0 0 0 0 0 916 5
jcnd=6/916 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 896
+3 0 896 0 896
+4 0 896 0 896
+5 0 896 0 0 0 0 0 0 0 0 896 14
jcnd=21/896 0x3877c7a090 0 
* 0 
+6 0 875
+7 0 875 0 0 0 0 0 0 0 0 875 11
jcnd=807/875 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 7
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 333
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 6
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 848 0 0 1 0 0 1
+7 0 848
+3 0 848 0 0 0 0 0 0 0 0 848 3
jcnd=2/848 0x3877c7a0b0 0 
* 0 
+6 0 848 848 0 1 0 0 1
+4 0 848
+3 0 848
+3 0 848
+2 0 848
+4 0 848
+3 0 848
+3 0 848
+2 0 848
+2 0 848
+2 0 848
+2 0 848 848 0 0 1 0 0 1
+8 0 848
+5 0 848
+5 0 848
+2 0 848 0 0 0 0 0 0 0 0 848
-2 0 447
+2 0 447 0 0 0 0 0 0 0 0 447
+2 0 1295
+2 0 1295 0 0 0 0 0 0 0 0 1295 29
jcnd=659/1295 +64 0 
* 0 
+2 0 636
+8 0 636
+3 0 636
+3 0 636 0 0 0 0 0 0 0 0 636 1
jcnd=1/636 0x3877c79fc0 0 
* 0 
-6 0 783
+3 0 783
+3 0 783 0 0 0 0 0 0 0 0 783 7
jcnd=359/783 0x3877c79fc0 0 
* 0 
+2 0 1059
+2 0 1059 1059
+8 0 1059
+2 0 1059 0 0 0 0 0 0 0 0 1059 26
jcnd=783/1059 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276 1
jcnd=1/276 +14 0 
* 0 
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 6669
+4 0 6669
+2 0 6669
+2 0 6669 0 0 0 0 0 0 0 0 6669 424
jcnd=5870/6669 -8 0 
* 0 
-2 0 659 0 0 1 0 0 1
+2 0 659 0 0 0 0 0 0 0 0 659 22
jcnd=586/659 -8 0 
* 0 
+2 0 935 935 0 0 15 0 0 15
+4 0 935 0 0 1 0 0 1
+3 0 935 0 0 0 0 0 0 0 0 935 390
jcnd=488/935 0x3877c7a1cf 0 
* 0 
+6 0 447
+2 0 447
+4 0 447
+2 0 447
+2 0 447
+2 0 447 0 447
+8 0 447
jump=447 0x3877c79f30 0 
* 0 
+37 0 360 360 0 1 0 0 1
+5 0 360 360
+4 0 360
+4 0 360 360
+5 0 360 0 0 0 0 0 0 0 0 360
jcnd=360/360 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 0 0 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 488 488 0 1 1 0 1 1
+4 0 488 488
+4 0 488
+3 0 488 488
+4 0 488
+4 0 488
+3 0 488
+3 0 488 488
+4 0 488 0 0 0 0 0 0 0 0 488
+6 0 488 488
+4 0 488 0 0 0 0 0 0 0 0 488
+6 0 488 488 0 1 0 0 1
+8 0 488 0 488
+4 0 488 0 488
+4 0 488 0 0 0 0 0 0 0 0 488 5
jcnd=418/488 +38 0 
* 0 
+2 0 70 70 0 0 2 0 0 2
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 467 467
+4 0 467 467 0 1 0 0 1
+4 0 467 0 0 0 0 0 0 0 0 467
+6 0 467
+4 0 467
+7 0 467 0 467 0 0 7 0 0 7
+4 0 467 0 467
+4 0 467 0 467
+4 0 467 0 467
+4 0 467 0 0 0 0 0 0 0 0 467 4
jcnd=2/467 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 460
+7 0 460 0 460
+4 0 460
+3 0 460
+3 0 460
+4 0 460
+3 0 460
+4 0 460
+3 0 460
+3 0 460
+4 0 460 0 460
+4 0 460 0 460 0 0 1 0 0 1
+4 0 460
jump=460 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 21
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 +7 0 
* 0 
+7 0 488
+4 0 488 0 0 1 0 0 1
+3 0 488
+3 0 488 0 488
cfn=(104)
calls=488 0x3877c77180 0 
* 0 1952 976 0 0 0 0 0 0 0 488
+5 0 488
+3 0 488
jump=488 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 360 0 0 1 0 0 1
+7 0 360
+2 0 360
+4 0 360
+3 0 360
+3 0 360 0 360
+5 0 360
+3 0 360
+4 0 360
+3 0 360 0 0 1 0 0 1
+4 0 360
+4 0 360
+3 0 360
+4 0 360 0 360
+4 0 360 0 360 0 0 13 0 0 13
+4 0 360
+3 0 360
+3 0 360 0 360
cfn=(104)
calls=360 0x3877c77180 0 
* 0 1440 720 0 0 0 0 0 0 0 360 1
+5 0 360
+3 0 360
jump=360 0x3877c79ae3 0 
* 0 

totals: 5989958 2415055 1415174 238 90 95 238 90 95 185990 3746 5954 122
