version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 698


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 859042222 - 859236440
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 444 0 0 1 0 0 1
+3 0 444 0 0 0 0 0 0 0 0 444
+2 0 444
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=444 0x3877c7b8b0 0 
* 0 49572 12786 6670 19 6 0 19 6 0 11952 59
* 0 444 444 0 1 1 0 1 1 0 0 0 444

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 444 0 444 1 0 0 1
+1 0 444
+5 0 444
+3 0 444 0 444
+1 0 444
+4 0 444 0 0 1 0 0 1
+3 0 444
+4 0 444
+3 0 444 0 444 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=444 0x3877c7aa50 0 
* 0 114933 16754 16594 34 31 37 34 31 37 19838 677
* 0 444 444 0 1 1 0 1 1 0 0 0 444
+5 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
jcnd=444/444 +96 0 
* 0 
+96 0 444 0 0 1 0 0 1
+4 0 444 444
+1 0 444 444
+1 0 444 444

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 276 0 276
+1 * 276
+3 * 276 0 276
+4 +1 276 276
+4 * 276 276
+1 * 276 276

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 432 0 432 1 0 0 1
+1 * 432
+3 * 432 0 432
+4 +1 432 432 0 1 0 0 1
+4 * 432 432
+1 * 432 432

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 276 0 276
+1 * 276
+3 * 276 0 276 0 0 1 0 0 1
+4 +1 276 276
+4 * 276 276
+1 * 276 276

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 432 0 432 1 0 0 1
+1 * 432
+3 * 432
+4 * 432 0 432
+4 +1 432
+4 * 432
+3 * 432 0 432
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=432 0x404ffe 790 
* * 2592 1296 864 1 0 0 1
+5 * 432 432
+3 * 432 432
+1 * 432 432

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 432 0 432 1 0 0 1
+1 * 432
+3 * 432 0 432
+4 +1 432 432
+4 * 432 432
+1 * 432 432

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 432 0 432 1 0 0 1
+1 * 432
+3 * 432
+4 * 432 0 432
+4 +1 432
+4 * 432
+3 * 432 0 432 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=432 0x40500c 790 
* * 2592 1296 864 1 0 0 1
+5 * 432 432
+3 * 432 432
+1 * 432 432

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 216 0 216
+1 * 216
+3 * 216 0 216
+4 * 216 0 216
+4 * 216 216
+4 * 216 216
+1 * 216 216

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 222 0 222 1 0 0 1
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +2 222 222
+4 * 222
+3 * 222 0 222
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=222 0x4048de +12 
* * 1332 444 444 1 0 0 1
+5 * 222 222
+4 * 222 0 0 1 0 0 1
+3 * 222
+2 * 222 0 0 0 0 0 0 0 0 222
jcnd=222/222 +7 +3 
* * 
+7 +3 222 222
+4 * 222
+4 * 222
+3 * 222 0 222
cob=(5)
cfi=(8)
cfn=(32)
calls=222 0x387e4bd0b0 0 
* * 63731 9023 8488 20 6 18 20 6 18 10891 380 222
* * 222 222 0 0 0 0 0 0 0 0 0 222
+5 +1 222 222
+1 * 222 222

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 216 0 216 1 0 0 1
+1 * 216
+3 * 216 0 216 0 0 1 0 0 1
+4 * 216 0 216
+4 * 216 216
+1 * 216 216

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 216 0 216 1 0 0 1
+1 * 216
+3 * 216 0 216
+4 * 216 0 216
+4 * 216 216
+1 * 216 216

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 216 0 216
+1 * 216
+3 * 216 0 216
+4 * 216 216
+1 * 216 216

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 222 0 222 1 0 0 1
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222 1 0 0 1
+4 +2 222 222
+4 * 222
+3 * 222 0 222
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=222 0x404992 +12 
* * 1332 444 444 1 0 0 1
+5 * 222 222
+4 * 222
+3 * 222
+2 * 222 0 0 0 0 0 0 0 0 222
jcnd=222/222 +7 +3 
* * 
+7 +3 222 222
+4 * 222
+4 * 222
+3 * 222 0 222
cob=(5)
cfi=(8)
cfn=(32)
calls=222 0x387e4bd0b0 0 
* * 58306 9507 9438 18 26 20 18 26 20 9391 297 222
* * 222 222 0 1 1 0 1 1 0 0 0 222
+5 +1 222 222
+1 * 222 222

fn=(102)
0x4048de 113 234 0 234 1 0 0 1
+1 * 234
+3 * 234 0 234
+4 +1 234
+10 * 234 234
+1 * 234 234

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 108 0 108
+1 * 108
+3 * 108
+4 * 108 0 108
+4 * 108 0 108
+4 * 108 0 108
+4 +1 108 108
+4 * 108
+3 * 108
+5 * 108 0 108
cfi=(16)
cfn=(226)
calls=108 0x402d61 -20 
* * 756 324 324
+5 * 108
+3 * 108 0 0 0 0 0 0 0 0 108
+2 * 108 108
+4 * 108 108 0 0 7 0 0 7
+2 * 108 0 108 0 0 7 0 0 7
+2 * 108 108
+1 * 108 108

fn=(28)
0x404992 113 234 0 234 1 0 0 1
+1 * 234
+3 * 234 0 234
+4 +1 234
+10 * 234 234
+1 * 234 234

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 216 0 216
+1 * 216
+3 * 216 0 216
+4 * 216 216
+1 * 216 216

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 108 0 108
+1 * 108
+3 * 108
+4 * 108 0 108
+4 * 108 0 108
+4 * 108 0 108
+4 +1 108 108
+4 * 108
+3 * 108
+5 * 108 0 108
cfi=(16)
cfn=(226)
calls=108 0x402d61 -20 
* * 756 324 324
+5 * 108
+3 * 108 0 0 0 0 0 0 0 0 108 1
+2 * 108 108
+4 * 108 108 0 0 8 0 0 8
+2 * 108 0 108 0 0 3 0 0 3
+2 * 108 108
+1 * 108 108

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +1 222 222
+4 * 222
+3 * 222 0 222
cob=(5)
cfi=(8)
cfn=(164)
calls=222 0x387e4bb2f0 0 
* * 25742 6654 3342 21 5 0 21 5 0 6222 22 222
* * 222 222 0 1 1 0 1 1 0 0 0 222
+5 * 222 222
+1 * 222 222

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +1 222 222
+4 * 222
+3 * 222 0 222
cob=(5)
cfi=(8)
cfn=(164)
calls=222 0x387e4bb2f0 0 
* * 25606 6576 3328 0 2 0 0 2 0 6174 37 222
* * 222 222 0 0 0 0 0 0 0 0 0 222
+5 * 222 222
+1 * 222 222

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +10 216 216
+4 * 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=216 0x404829 -26 
* * 73862 23024 21732 25 3 4 25 3 4 2612 132 428 53
+5 +1 216 216
+1 * 216 216

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(234)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +2 216 216
+4 * 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216 1 0 0 1
cfn=(50)
calls=216 0x404484 107 
* * 76886 24104 22812 25 3 4 25 3 4 2612 132 428 53
+5 * 216 216
+1 * 216 216

fn=(230)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(52)
0x404829 91 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +2 216 216 0 1 0 0 1
+4 * 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=216 0x404a36 450 
* * 70838 21944 20652 24 3 4 24 3 4 2612 132 428 53
+5 * 216 216
+1 * 216 216

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +2 216 216
+4 * 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=216 0x40439c 107 
* * 76886 24104 22812 7 0 8 7 0 8 2612 121 428
+5 * 216 216
+1 * 216 216

fn=(116)
0x40439c 107 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +10 216 216
+4 * 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=216 0x4047d7 -26 
* * 73862 23024 21732 7 0 8 7 0 8 2612 121 428
+5 +1 216 216
+1 * 216 216

fn=(118)
0x4047d7 91 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +2 216 216
+4 * 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=216 0x4049e2 450 
* * 70838 21944 20652 7 0 8 7 0 8 2612 121 428
+5 * 216 216
+1 * 216 216

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 216 0 216 1 0 0 1
+1 * 216
+3 * 216 0 216
+1 * 216
+4 * 216 0 216
+4 +2 216 216
+4 * 216 216
+4 * 216
+3 * 216 216
+4 * 216 216
+3 * 216
+3 * 216
+3 * 216
+4 * 216
+3 * 216 216
+4 * 216 216
+3 -1 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=216 0x403d98 +11 
* * 31040 8586 5412 1 1 0 1 1 0 6254 31 432
+5 +1 216 216
+4 * 216
+3 * 216 0 216
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=216 0x403296 -82 
* * 4968 1728 1728 1 0 0 1
+5 * 216
jump=216 +28 * 
* * 
+28 * 216
+4 * 216 216
+1 * 216 216
+1 * 216 216

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888 0 0 1 0 0 1
+4 +1 888 888
+4 * 888 888 0 1 1 0 1 1
+4 * 888
+3 * 888 888
+4 * 888 888
+3 * 888
+3 * 888
+3 * 888
+4 * 888 888
+1 * 888 888

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 +2 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=216 0x404236 -14 
* * 65656 12070 11785 21 24 14 21 24 14 9537 261 432
+5 * 216 216
+4 * 216 0 216
+3 +1 216 216
+4 * 216 216 0 1 0 0 1
+3 * 216 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+3 * 216 216
+4 * 216
+4 * 216
+3 * 216 216
+4 * 216 0 216
+4 +1 216 216
+1 * 216 216

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 +2 216 216
+4 * 216 216 0 1 0 0 1
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=216 0x403fbe -14 
* * 71438 11611 10869 25 5 14 25 5 14 11104 370 432
+5 * 216 216
+4 * 216 0 216
+3 +1 216 216
+4 * 216 216
+3 * 216 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+3 * 216 216
+4 * 216
+4 * 216
+3 * 216 216
+4 * 216 0 216
+4 +1 216 216
+1 * 216 216

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 108 0 108
+1 * 108
+3 * 108 0 0 1 0 0 1
+4 * 108 0 108
+4 * 108 0 108
+4 +2 108 108
+4 * 108 108
+4 * 108 108
+4 * 108 108
+4 * 108
+3 * 108 0 0 0 0 0 0 0 0 108
jcnd=6/108 +51 +10 
* * 
+2 +3 102 102
+4 * 102 102
+4 * 102 102
+4 -1 102 102
+4 * 102
+3 * 102
+3 * 102 0 102
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=102 0x4036b1 215 
* * 3876 1326 1428 0 7 4 0 7 4 102
+5 +2 102 102
+4 * 102 102
+4 * 102
+4 * 102 102
+4 * 102 0 102
+4 * 102
jump=102 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8690 2617 2262 21 4 12 21 4 12 536 50 35
+5 +2 108 108
+1 * 108 108

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 450 0 450 1 0 0 1
+1 * 450
+3 * 450 0 450 1 0 0 1
+4 +1 450 450
+4 * 450 450
+1 * 450 450

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+3 * 216 0 216
+4 * 216
+4 * 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=216 0x404380 726 
* * 2160 1080 864
+5 * 216 216
+4 * 216 216
+1 * 216 216

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 216 0 216
+1 * 216
+3 * 216 0 216
+1 * 216
+4 * 216 0 216 1 0 0 1
+4 +2 216 216
+4 * 216
+3 * 216 0 216
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=216 0x40325e 113 
* * 1296 648 432
+5 * 216
+3 * 216 216
+4 * 216 216
+4 * 216 216
+4 * 216 216
+3 -1 216
+3 * 216
+3 * 216 0 216
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=216 0x40326c 148 
* * 6696 2160 2592 4 0 0 4
+5 +1 216 216
+4 * 216
+3 * 216 0 216
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=216 0x4031ec 159 
* * 42218 12780 8238 25 6 0 25 6 0 6308 20 432
+5 * 216
jump=216 +28 * 
* * 
+28 * 216 0 0 1 0 0 1
+4 * 216 216
+1 * 216 216
+1 * 216 216

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 222 0 222 1 0 0 1
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +2 222 222
+5 * 222 0 0 0 0 0 0 0 0 222
+2 +1 222 222
+4 * 222 222
+4 * 222 222
+4 * 222
+3 * 222
+3 * 222 0 222
cfi=(5)
cfn=(160)
calls=222 0x4044d6 -65 
* * 28406 7542 4452 22 6 0 22 6 0 6222 22 444
+5 +1 222 222
+1 * 222 222

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 216 0 216
+1 * 216
+3 * 216 0 216
+1 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=216 0x4043ca -45 
* * 7776 2808 3024 4 0 4 4 0 4
+5 +1 216 216 0 1 0 0 1
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(20)
calls=216 0x404412 +43 
* * 71056 14662 13297 22 24 14 22 24 14 9537 261 432
+5 * 216
jump=216 +28 * 
* * 
+28 * 216
+4 * 216 216
+1 * 216 216
+1 * 216 216

fn=(14)
0x4043ca 90 216 0 216 1 0 0 1
+1 * 216
+3 * 216
+4 * 216 0 216 0 0 1 0 0 1
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=216 0x404804 +24 
* * 3888 1296 1512 2 0 1 2 0 1
+5 * 216 216
+4 * 216 0 216 0 0 2 0 0 2
+7 * 216 216
+4 * 216 0 216 1 0 0 1
+8 * 216 216
+4 * 216 0 216
+8 +1 216 216
+1 * 216 216

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 216 0 216 1 0 0 1
+1 * 216
+3 * 216 0 216
+2 * 216 0 216
+2 * 216 0 216
+1 * 216 0 0 1 0 0 1
+4 * 216 0 216
+4 * 216 0 216
+4 +2 216 216
+4 * 216
+3 * 216 0 216
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=216 0x4039fc 117 
* * 1296 648 432 2 0 0 2
+5 * 216
+3 * 216 0 216
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=216 0x4039ed -88 
* * 1296 648 432
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(2)
calls=216 0x402d74 645 
* * 2808 1296 432
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216
+3 * 216
+3 * 216 0 216 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=216 0x403a0a 134 
* * 89366 18523 16917 32 5 14 32 5 14 11104 370 432
+5 +4 216 216
+4 * 216
+3 * 216 0 216
cfn=(106)
calls=216 0x40325e 113 
* * 1296 648 432 1 0 0 1
+5 * 216
+3 * 216 216
+4 * 216 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=216 0x403a98 565 
* * 5400 2160 1728 2 0 0 2
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(112)
calls=216 0x403a68 547 
* * 5400 2160 1728
+5 * 216
+3 * 216
+3 * 216
+3 * 216
+3 * 216 0 216
cfi=(11)
cfn=(114)
calls=216 0x403ac9 -60 
* * 80126 25184 24108 7 0 8 7 0 8 2612 121 428
+5 -3 216 216
+4 * 216 0 216
+4 * 216
jump=216 +28 +4 
* * 
+28 +4 216
+4 * 216 216
+1 * 216 216
+2 * 216 216
+2 * 216 216
+1 * 216 216

fn=(188)
0x403d98 171 222 0 222 1 0 0 1
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +2 222 222
+5 * 222 0 0 0 0 0 0 0 0 222 6
+2 +1 222 222
+4 * 222 222
+4 * 222 222
+4 * 222
+3 * 222
+3 * 222 0 222
cfi=(5)
cfn=(190)
calls=222 0x40452a -65 
* * 28270 7464 4438 0 2 0 0 2 0 6174 37 444
+5 +1 222 222
+1 * 222 222

fn=(22)
0x404236 167 222 0 222 1 0 0 1
+1 * 222
+3 * 222
+4 * 222 0 222 1 0 0 1
+4 * 222 0 222
+4 0 222 222
+5 0 222 0 0 0 0 0 0 0 0 222
+2 0 222 222
+4 0 222 222
+4 0 222
+5 0 222
+3 0 222
+3 0 222 0 222
fi=(6) ???
cfi=(5)
cfn=(26)
calls=222 0x404730 99 
* 0 64078 11283 11214 22 27 20 22 27 20 9613 297 444
+5 0 222
fi=(6)
jump=222 +7 0 
* 0 
+7 0 222 222
+1 0 222 222

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 216 0 216 1 0 0 1
+1 * 216
+3 * 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+4 * 216 0 216
+4 * 216
+4 * 216 0 0 1 0 0 1
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=216 0x404468 726 
* * 2160 1080 864 1 0 0 1
+5 * 216 216
+4 * 216 216
+1 * 216 216

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+3 * 216 0 216
+4 * 216
+4 * 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(10)
cfn=(44)
calls=216 0x404468 726 
* * 2160 1080 864
+5 * 216 216
+4 * 216 216
+1 * 216 216

fn=(86)
0x403a0a 134 216 0 216
+1 * 216
+3 * 216 0 216
+1 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=216 0x4042e2 -45 
* * 7776 2808 3024 5 0 0 5
+5 +1 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216 1 0 0 1
cfn=(94)
calls=216 0x40432a +43 
* * 76838 14203 12381 26 5 14 26 5 14 11104 370 432
+5 * 216
jump=216 +28 * 
* * 
+28 * 216
+4 * 216 216
+1 * 216 216
+1 * 216 216

fn=(88)
0x4042e2 90 216 0 216 1 0 0 1
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=216 0x4047b2 +24 
* * 3888 1296 1512 3 0 0 3
+5 * 216 216
+4 * 216 0 216
+7 * 216 216
+4 * 216 0 216
+8 * 216 216
+4 * 216 0 216
+8 +1 216 216
+1 * 216 216

fn=(156)
0x4031ec 159 216 0 216 1 0 0 1
+1 * 216
+3 * 216 0 216
+1 * 216
+4 * 216 0 216
+4 +2 216 216
+4 * 216 216 0 1 0 0 1
+4 * 216
+3 * 216 216
+4 * 216 216
+3 * 216
+3 * 216
+3 * 216
+4 * 216
+3 * 216 216
+4 * 216 216
+3 -1 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(158)
calls=216 0x403ce6 +11 
* * 31202 8676 5430 22 6 0 22 6 0 6308 20 432
+5 +1 216 216
+4 * 216
+3 * 216 0 216
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=216 0x4031b8 -82 
* * 4968 1728 1728 1 0 0 1
+5 * 216
jump=216 +28 * 
* * 
+28 * 216
+4 * 216 216
+1 * 216 216
+1 * 216 216

fn=(172)
0x4031b8 79 216 0 216 1 0 0 1
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 216
+4 * 216
+3 * 216 0 216
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=216 0x403ccc +42 
* * 3024 1080 1080
+5 * 216 216
+1 * 216 216

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246)
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456
+4 +1 456 456
+4 * 456 456 0 0 2 0 0 2
+4 * 456
+3 * 456 456
+4 * 456 456
+3 * 456
+3 * 456
+3 * 456
+4 * 456 456
+1 * 456 456

fn=(106)
0x40325e 113 450 0 450 1 0 0 1
+1 * 450
+3 * 450 0 450
+4 +1 450 450
+4 * 450 450
+1 * 450 450

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 228 0 228 1 0 0 1
+1 * 228
+3 * 228 0 228 0 0 1 0 0 1
+4 +1 228 228
+4 * 228 228
+1 * 228 228

fn=(82)
0x4039fc 117 228 0 228 1 0 0 1
+1 * 228
+3 * 228 0 228 1 0 0 1
+4 +1 228 228
+4 * 228 228
+1 * 228 228

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 108 0 108
+1 * 108
+3 * 108
+4 * 108 0 108
+4 * 108 0 108
+4 +2 108 108
+4 * 108 108
+4 * 108 108
+4 * 108 108
+4 * 108
+3 * 108 0 0 0 0 0 0 0 0 108 6
jcnd=6/108 +51 +10 
* * 
+2 +3 102 102
+4 * 102 102
+4 * 102 102
+4 -1 102 102
+4 * 102
+3 * 102
+3 * 102 0 102
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=102 0x403373 215 
* * 3876 1326 1428 0 7 2 0 7 2 102 1
+5 +2 102 102
+4 * 102 102
+4 * 102
+4 * 102 102
+4 * 102 0 102
+4 * 102
jump=102 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8307 2580 2224 23 2 8 23 2 8 463 16 35
+5 +2 108 108
+1 * 108 108

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 216 0 216 1 0 0 1
+1 * 216
+3 * 216 0 216
+2 * 216 0 216
+2 * 216 0 216
+1 * 216
+4 * 216 0 216 1 0 0 1
+4 * 216 0 216
+4 +2 216 216
+4 * 216
+3 * 216 0 216
cfn=(6)
calls=216 0x403b08 117 
* * 1296 648 432 1 0 1 1 0 1
+5 * 216
+3 * 216 0 216
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=216 0x403afa -88 
* * 1296 648 432 1 0 0 1
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(10)
calls=216 0x402f54 645 
* * 2808 1296 432 1 1 0 1 1
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216
+3 * 216
+3 * 216 0 216
cfn=(12)
calls=216 0x403b16 134 
* * 83584 18982 17833 27 24 18 27 24 18 9537 261 432
+5 +4 216 216 0 1 0 0 1
+4 * 216
+3 * 216 0 216
cfn=(40)
calls=216 0x40333c 113 
* * 1296 648 432 2 0 0 2
+5 * 216
+3 * 216 216
+4 * 216 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(42)
calls=216 0x403ba4 565 
* * 5400 2160 1728 3 0 0 3
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(46)
calls=216 0x403b74 547 
* * 5400 2160 1728
+5 * 216
+3 * 216
+3 * 216
+3 * 216
+3 * 216 0 216 1 0 0 1
cfi=(11)
cfn=(48)
calls=216 0x403bd5 -60 
* * 80126 25184 24108 26 3 4 26 3 4 2612 132 428 53
+5 -3 216 216
+4 * 216 0 216
+4 * 216
jump=216 +28 +4 
* * 
+28 +4 216
+4 * 216 216
+1 * 216 216
+2 * 216 216
+2 * 216 216
+1 * 216 216

fn=(108)
0x403a98 565 216 0 216 1 0 0 1
+1 * 216
+3 * 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+4 * 216 0 216
+4 * 216
+4 * 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(10)
cfn=(110)
calls=216 0x404380 726 
* * 2160 1080 864 1 0 0 1
+5 * 216 216
+4 * 216 216
+1 * 216 216

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 216 0 216
+1 * 216
+3 * 216 0 216
+1 * 216
+4 * 216 0 216 1 0 0 1
+4 +2 216 216
+4 * 216
+3 * 216 0 216
cfn=(40)
calls=216 0x40333c 113 
* * 1296 648 432
+5 * 216
+3 * 216 216
+4 * 216 216
+4 * 216 216
+4 * 216 216
+3 -1 216
+3 * 216
+3 * 216 0 216
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=216 0x40334a 148 
* * 6696 2160 2592 2 0 0 2
+5 +1 216 216
+4 * 216
+3 * 216 0 216
cfn=(186)
calls=216 0x4032ca 159 
* * 42056 12690 8220 3 1 0 3 1 0 6254 31 432
+5 * 216
jump=216 +28 * 
* * 
+28 * 216 0 0 1 0 0 1
+4 * 216 216
+1 * 216 216
+1 * 216 216

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96)
0x403fbe 167 222 0 222 1 0 0 1
+1 * 222 0 0 1 0 0 1
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 0 222 222
+5 0 222 0 0 0 0 0 0 0 0 222
+2 0 222 222
+4 0 222 222
+4 0 222
+5 0 222
+3 0 222
+3 0 222 0 222
fi=(6)
cfi=(5)
cfn=(100)
calls=222 0x40461a 99 
* 0 69503 10799 10264 23 6 18 23 6 18 11113 380 444
+5 0 222
fi=(6)
jump=222 +7 0 
* 0 
+7 0 222 222
+1 0 222 222

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 18198 0 18198
+1 * 18198
+3 * 18198 0 18198
+4 * 18198 0 18198
+4 +1 18198 18198
+4 * 18198 18198
+3 * 18198 18198
+4 * 18198
+4 * 18198
+3 * 18198 18198
+1 * 18198 18198

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 18198 0 18198
+1 * 18198
+3 * 18198 0 18198 1 0 0 1
+4 * 18198 0 18198
+4 +1 18198 18198
+4 * 18198 18198
+3 * 18198 18198
+4 * 18198
+4 * 18198
+3 * 18198 18198
+1 * 18198 18198

fn=(192)
0x403296 79 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 216
+4 * 216
+3 * 216 0 216
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=216 0x403d7e +42 
* * 3024 1080 1080 1 0 0 1
+5 * 216 216
+1 * 216 216

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fl=(12)
fn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404bc6 288 432 0 432 1 0 0 1
+1 * 432
+3 * 432
+4 * 432 0 432
+4 +1 432 432
+4 * 432
+3 * 432 0 432
cfi=(13)
cfn=(124)
calls=432 0x404d36 -77 
* * 2592 1296 864 2 0 0 2
+5 * 432 432
+1 * 432 432

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 432 0 432 1 0 0 1
+1 * 432
+3 * 432
+4 * 432 0 432 1 0 0 1
+4 +1 432 432
+4 * 432
+3 * 432 0 432
cfi=(13)
cfn=(58)
calls=432 0x404d8f -77 
* * 2592 1296 864 1 0 0 1
+5 * 432 432
+1 * 432 432

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228 1 0 0 1
+4 * 228 0 228
+4 * 228 0 228
+4 +2 228 228
+4 * 228 228
+4 * 228
+3 * 228
+3 * 228
+4 * 228 0 228
+4 +1 228 228
+5 * 228 0 0 0 0 0 0 0 0 228
jcnd=6/228 +33 +2 
* * 
+2 +1 222 222
+4 * 222
+8 * 222 222
+4 * 222 222
+4 * 222
+3 * 222 0 0 1 0 0 1
+3 * 222 0 222 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=222 0x3877c83840 0 
* * 30740 8014 7575 11 2 5 11 2 5 2444 134 217 53
* * 222 222 0 1 1 0 1 1 0 0 0 222
+5 +1 228 228
+4 * 228
+8 * 228 228
+4 * 228
+3 +1 228 228
+1 * 228 228

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228 1 0 0 1
+4 * 228 0 228
+4 * 228 0 228 0 0 1 0 0 1
+4 +2 228 228
+4 * 228 228
+4 * 228
+3 * 228
+3 * 228
+4 * 228 0 228
+4 +1 228 228
+5 * 228 0 0 0 0 0 0 0 0 228
jcnd=6/228 +33 +2 
* * 
+2 +1 222 222
+4 * 222
+8 * 222 222
+4 * 222 222
+4 * 222
+3 * 222
+3 * 222 0 222
cob=(2)
cfi=(9)
cfn=(78)
calls=222 0x3877c83840 0 
* * 30740 8014 7575 0 0 9 0 0 9 2444 125 217
* * 222 222 0 0 0 0 0 0 0 0 0 222
+5 +1 228 228
+4 * 228
+8 * 228 228
+4 * 228
+3 +1 228 228
+1 * 228 228

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216 1 0 0 1
+4 * 216 0 216
+4 * 216 0 216
+4 +8 216 0 216
+4 +3 216 216
+4 * 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(74)
calls=216 0x404f37 -22 
* * 36278 10280 8772 14 3 3 14 3 3 2612 132 428 53
+5 +1 216 216
+1 * 216 216

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 216 0 216
+1 * 216
+3 * 216 0 216
+2 * 216 0 216
+1 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +4 216 216
+4 * 216
+3 * 216 0 216
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=216 0x404878 277 
* * 3240 1296 1080 1 0 0 1
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=216 0x404d44 277 
* * 5400 1944 1728 2 0 0 2
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(132)
calls=216 0x404d44 277 
* * 5400 1944 1728
+5 * 216
+3 * 216
+3 * 216
+3 * 216 0 216
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=216 0x404d5e -49 
* * 39518 11360 10068 1 0 8 1 0 8 2612 121 428
+5 +1 216
+4 * 216 216
+1 * 216 216
+2 * 216 216
+1 * 216 216

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 216 0 216
+1 * 216
+3 * 216 0 216
+1 * 216
+4 * 216 0 216 1 0 0 1
+4 * 216 0 216
+4 * 216 0 216
+4 +10 216 216
+4 * 216
+3 * 216 0 216
cfn=(56)
calls=216 0x404c38 288 
* * 3240 1296 1080 3 0 0 3
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(56)
calls=216 0x404c38 288 
* * 3240 1296 1080
+5 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=216 0x404c52 -36 
* * 59606 18056 16764 20 3 4 20 3 4 2612 132 428 53
+5 +1 216
+4 * 216 216
+1 * 216 216
+1 * 216 216

fn=(60)
0x404c52 424 216 0 216
+1 * 216
+3 * 216 0 216
+2 * 216 0 216
+1 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +4 216 216
+4 * 216
+3 * 216 0 216
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=216 0x40492d 277 
* * 3240 1296 1080 2 0 0 2
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=216 0x404d9d 277 
* * 5400 1944 1728 2 0 1 2 0 1
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(66)
calls=216 0x404d9d 277 
* * 5400 1944 1728
+5 * 216
+3 * 216
+3 * 216
+3 * 216 0 216
cfn=(72)
calls=216 0x404db7 -49 
* * 39518 11360 10068 15 3 3 15 3 3 2612 132 428 53
+5 +1 216
+4 * 216 216
+1 * 216 216
+2 * 216 216
+1 * 216 216

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 252 0 252 1 0 0 1
+1 * 252
+3 * 252
+4 * 252 0 252
+4 +1 252 252
+4 * 252
+3 * 252 0 252 1 0 0 1
cfi=(13)
cfn=(64)
calls=252 -33 -66 
* * 1512 756 504
+5 * 252 252
+1 * 252 252

fn=(66)
0x404d9d 277 432 0 432
+1 * 432
+3 * 432
+4 * 432 0 432
+4 +1 432 432
+4 * 432
+3 * 432 0 432
cfi=(13)
cfn=(68)
calls=432 0x404f1a -58 
* * 6912 2592 2160 2 0 1 2 0 1
+5 * 432 432
+1 * 432 432

fn=(240)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 216 0 216
+1 * 216
+3 * 216 0 216
+1 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +10 216 216
+4 * 216
+3 * 216 0 216
cfn=(122)
calls=216 0x404bc6 288 
* * 3240 1296 1080 3 0 0 3
+5 * 216
+3 * 216 216
+4 * 216
+3 * 216 0 216
cfn=(122)
calls=216 0x404bc6 288 
* * 3240 1296 1080
+5 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(126)
calls=216 0x404be0 -36 
* * 59606 18056 16764 4 0 8 4 0 8 2612 121 428
+5 +1 216
+4 * 216 216
+1 * 216 216
+1 * 216 216

fn=(128)
0x404878 277 252 0 252
+1 * 252
+3 * 252
+4 * 252 0 252 1 0 0 1
+4 +1 252 252
+4 * 252
+3 * 252 0 252
cfi=(13)
cfn=(130)
calls=252 -33 -66 
* * 1512 756 504 0 0 1 0 0 1
+5 * 252 252
+1 * 252 252

fn=(132)
0x404d44 277 432 0 432
+1 * 432
+3 * 432
+4 * 432 0 432
+4 +1 432 432
+4 * 432
+3 * 432 0 432
cfi=(13)
cfn=(134)
calls=432 0x404e98 -58 
* * 6912 2592 2160 2 0 0 2
+5 * 432 432
+1 * 432 432

fn=(138)
0x404d5e 379 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 * 216 0 216
+4 +8 216 0 216
+4 +3 216 216
+4 * 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfn=(140)
calls=216 0x404eb5 -22 
* * 36278 10280 8772 1 0 8 1 0 8 2612 121 428
+5 +1 216 216
+1 * 216 216

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fl=(10)
fn=(136)
0x404ffe 790 432 0 432 1 0 0 1
+1 * 432
+3 * 432 0 432
+4 +1 432 432
+4 * 432 432
+1 * 432 432

fn=(44)
0x404468 726 432 0 432
+1 * 432
+3 * 432 0 432
+4 * 432 0 432
+4 * 432 432
+4 * 432 432
+3 * 432 432
+4 * 432 0 432 1 0 0 1
+3 * 432 432
+1 * 432 432

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 432 0 432 1 0 0 1
+1 * 432
+3 * 432 0 432
+4 +1 432 432
+4 * 432 432
+1 * 432 432

fn=(110)
0x404380 726 432 0 432 1 0 0 1
+1 * 432
+3 * 432 0 432
+4 * 432 0 432
+4 * 432 432
+4 * 432 432
+3 * 432 432
+4 * 432 0 432
+3 * 432 432
+1 * 432 432

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 222 0 222 1 0 0 1
+1 * 222
+3 * 222 0 222
+4 * 222 0 222 1 0 0 1
+4 * 222 222
+1 * 222 222

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 222 0 222 1 0 0 1
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 +4 222 222
+4 * 222 222
+4 * 222
+3 * 222
+3 * 222 0 222
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=222 0x40454c -14 
* * 1332 444 666 1 0 0 1
+5 +2 222 222
+1 * 222 222

fn=(150)
0x40326c 148 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +3 222 222 0 1 0 0 1
+4 * 222 222
+4 * 222
+3 * 222
+3 * 222 0 222
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=222 0x403d1a -29 
* * 3996 1332 1554 3 0 0 3
+5 +1 222 222
+1 * 222 222

fn=(180)
0x40334a 148 222 0 222
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 * 222 0 222
+4 +3 222 222
+4 * 222 222
+4 * 222
+3 * 222
+3 * 222 0 222
cfn=(182)
calls=222 0x403dcc -29 
* * 3996 1332 1554 2 0 0 2
+5 +1 222 222
+1 * 222 222

fn=(152)
0x403d1a 122 222 0 222 1 0 0 1
+1 * 222
+3 * 222
+4 * 222 0 222
+4 * 222 0 222
+4 +4 222 222
+4 * 222 222
+4 * 222
+3 * 222
+3 * 222 0 222
cfn=(154)
calls=222 0x4044f8 -14 
* * 1332 444 666 2 0 0 2
+5 +2 222 222
+1 * 222 222

fn=(184)
0x40454c 112 222 0 222 1 0 0 1
+1 * 222
+3 * 222 0 222
+4 * 222 0 222
+4 * 222 222
+1 * 222 222

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1974 323 317 3 3 6 3 3 6 298 36 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 1 0 0 1 0 142 12 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1617 298 283 0 1 4 0 1 4 231 10 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 4 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 108 0 108 1 0 0 1
+1 * 108
+3 * 108
+4 * 108 0 108
+4 * 108 0 108
+4 +1 108 108
+4 * 108
+3 * 108 0 108
cfi=(2)
cfn=(2)
calls=108 0x402d74 645 
* * 1404 648 216
+5 * 108
+3 * 108 0 108
+3 +1 108 108
+6 * 108 0 108
+3 * 108 108
+6 * 108 0 108
+3 +1 108 108
+6 * 108 0 108 1 0 0 1
+3 * 108 108
+6 * 108 0 108
+3 +2 108 0 108
+7 * 108
jump=108 +86 * 
* * 
+2 +1 5994 5994
+3 * 5994
+3 * 5994 5994
+4 * 5994
+3 * 5994
+3 * 5994 0 5994
cfi=(2)
cfn=(144)
calls=5994 0x402d9a 770 
* * 65934 29970 17982
+5 * 5994 5994
+4 * 5994 5994
+5 * 5994
+4 * 5994 0 5994
+5 +1 5994 5994
+3 * 5994
+3 * 5994 5994
+4 * 5994
+3 * 5994
+3 * 5994 0 5994
cfi=(2)
cfn=(146)
calls=5994 0x402dba 770 
* * 65934 29970 17982 1 0 0 1
+5 * 5994 5994
+2 * 5994
+4 * 5994 5994
+5 * 5994
+4 * 5994 0 5994
+5 -2 5994 0 5994
+4 * 5994 5994
+3 * 5994
+3 * 5994 5994
+3 * 5994 0 0 0 0 0 0 0 0 5994 109
jcnd=5886/5994 -93 +1 
* * 
-9 * 108 108 0 1 0 0 1
+3 * 108
+3 * 108 108
+3 * 108 0 0 0 0 0 0 0 0 108
jcnd=108/108 -93 +1 
* * 
+2 +4 108 108
+3 * 108
+3 * 108
+4 * 108 108 0 1 0 0 1
+5 * 108
+4 * 108
+3 * 108 0 108
+5 +1 108 108
+3 * 108
+3 * 108
+4 * 108 108
+5 * 108
+4 * 108
+3 * 108 0 108
+5 +1 108 0 108
+7 * 108
jump=108 0x4016ee * 
* * 
+2 +1 5994 5994
+3 * 5994
+3 * 5994 5994
+4 * 5994
+3 * 5994 0 0 1 0 0 1
+3 * 5994 0 5994
cfi=(2)
cfn=(146)
calls=5994 0x402dba 770 
* * 65934 29970 17982
+5 * 5994 5994
+2 * 5994
+4 * 5994 5994
+5 * 5994 0 5994
+5 +1 5994 5994
+3 * 5994
+3 * 5994 5994
+4 * 5994
+3 * 5994
+3 * 5994 0 5994
cfi=(2)
cfn=(144)
calls=5994 0x402d9a 770 
* * 65934 29970 17982
+5 * 5994 5994
+4 * 5994 5994
+5 * 5994 0 5994
+5 +1 5994 5994
+5 * 5994 5994
+5 * 5994 5994
+5 * 5994
+4 * 5994 0 5994
+5 +1 5994 5994
+5 * 5994 5994
+5 * 5994 5994
+5 * 5994
+4 * 5994 0 5994
+5 -4 5994 0 5994
+4 * 5994 5994
+3 * 5994
+3 * 5994 5994
+3 * 5994 0 0 0 0 0 0 0 0 5994 109
jcnd=5886/5994 0x401672 +1 
* * 
-9 * 108 108 0 1 0 0 1
+3 * 108
+3 * 108 108
+3 * 108 0 0 0 0 0 0 0 0 108
jcnd=108/108 0x401672 +1 
* * 
+6 +6 108 108 0 1 0 0 1
+5 * 108 108
+5 * 108 0 108
+5 +2 108 108
+3 +1 108 0 108
+3 * 108 108
+5 * 108 108
+1 * 108 108

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 108
+7 * 108
+7 * 108
+3 * 108
+3 * 108 0 108
cfi=(2)
cfn=(4)
calls=108 0x4030b2 310 
* * 96364 27401 25253 63 27 21 63 27 21 6125 279 430 53
+5 * 108
+7 * 108
+7 * 108
+3 * 108
+3 * 108 0 108
cfi=(2)
cfn=(80)
calls=108 0x402ff4 310 
* * 99262 27171 24815 47 5 22 47 5 22 6899 326 430
+5 * 108 0 0 1 0 0 1
+7 * 108
+7 * 108
+3 * 108
+3 * 108 0 108
cfn=(142)
calls=108 0x401585 -52 
* * 630396 278424 145692 8 0 0 8 0 0 12204 218
+5 * 108 0 108
+8 * 108 108
+6 * 108 0 108
+6 * 108
+7 * 108
+3 * 108 0 108
cfi=(2)
cfn=(148)
calls=108 0x402df4 414 
* * 27697 8766 6279 31 6 0 31 6 0 3154 12 216
+5 * 108
+7 * 108
+3 * 108 0 108 1 0 0 1
cfi=(2)
cfn=(178)
calls=108 0x402e74 414 
* * 27616 8721 6270 7 1 0 7 1 0 3127 17 216
+5 +2 108
+7 * 108
+7 * 108
+3 * 108
+3 * 108 0 108
cfi=(2)
cfn=(4)
calls=108 0x4030b2 310 
* * 95642 27349 25112 2 1 2 2 1 2 6024 114 430
+5 * 108
+7 * 108
+7 * 108
+3 * 108
+3 * 108 0 108
cfi=(2)
cfn=(80)
calls=108 0x402ff4 310 
* * 98526 27120 24634 0 0 0 0 0 0 6817 165 430
+5 * 108 108
+6 * 108 0 0 1 0 0 1
+7 * 108
+7 * 108 0 108
+6 * 108 108
+8 * 108
+3 * 108
+3 * 108 0 108
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=108 0x401719 -33 
* * 294084 122256 67554 4 0 0 4 0 0 6102 109
+5 * 108 0 108
+8 * 108 108
+6 * 108 0 108
+6 * 108
+7 * 108 0 0 1 0 0 1
+3 * 108 0 108
cfi=(2)
cfn=(148)
calls=108 0x402df4 414 
* * 27697 8766 6279 0 0 0 0 0 0 3154 8 216
+5 * 108
+7 * 108
+3 * 108 0 108
cfi=(2)
cfn=(178)
calls=108 0x402e74 414 
* * 27616 8721 6270 0 0 0 0 0 0 3127 14 216
+5 +2 108 108
+7 * 108
+3 * 108 0 108
cfi=(2)
cfn=(2)
calls=108 0x402d74 645 
* * 1404 648 216
+5 * 108 108
+6 * 108
+3 * 108
+3 * 108
+3 * 108 108
+7 * 108
+3 * 108 0 0 1 0 0 1
+3 * 108 0 108
cfi=(2)
cfn=(144)
calls=108 0x402d9a 770 
* * 1188 540 324
+5 * 108
+3 * 108
+7 * 108
+3 * 108
+3 * 108 0 108
cfi=(2)
cfn=(200)
calls=108 0x402eda 901 
* * 15105 5340 4234 26 9 10 26 9 10 673 23 35
+5 +1 108 108
+7 * 108
+3 * 108 0 108
cfi=(2)
cfn=(10)
calls=108 0x402f54 645 
* * 1404 648 216 0 1 0 0 1
+5 * 108 108
+6 * 108
+3 * 108
+3 * 108
+3 * 108 108
+7 * 108 0 0 1 0 0 1
+3 * 108
+3 * 108 0 108
cfi=(2)
cfn=(146)
calls=108 0x402dba 770 
* * 1188 540 324
+5 * 108
+3 * 108
+7 * 108
+3 * 108
+3 * 108 0 108
cfi=(2)
cfn=(244)
calls=108 0x402f7a 901 
* * 15488 5377 4272 22 11 16 22 11 16 746 50 35
+5 +1 108 108
+7 * 108
+3 * 108 0 108
cfi=(2)
cfn=(10)
calls=108 0x402f54 645 
* * 1404 648 216
+5 * 108 108
+6 * 108
+3 * 108
+3 * 108
+3 * 108 108 0 1 0 0 1
+7 * 108
+3 * 108
+3 * 108 0 108
cfi=(2)
cfn=(146)
calls=108 0x402dba 770 
* * 1188 540 324
+5 * 108 108
+2 * 108
+4 * 108 108
+8 * 108 108
+8 * 108 0 108
+8 +1 108 108
+7 * 108
+3 * 108 0 108
cfi=(2)
cfn=(2)
calls=108 0x402d74 645 
* * 1404 648 216
+5 * 108 108 0 1 0 0 1
+6 * 108
+3 * 108
+3 * 108
+3 * 108 108
+7 * 108
+3 * 108
+3 * 108 0 108
cfi=(2)
cfn=(144)
calls=108 0x402d9a 770 
* * 1188 540 324
+5 * 108 108
+4 * 108 108
+8 * 108
+4 * 108 108
+8 * 108
+3 * 108 0 108
+8 +2 108 0 108
+7 -12 108 108
+8 * 108 108
+7 * 108 0 0 0 0 0 0 0 0 108 1
jcnd=1/108 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 108
+7 * 108
+3 * 108 0 108
cfi=(2)
cfn=(2)
calls=108 0x402d74 645 
* * 1404 648 216 2 0 1 2 0 1
+5 * 108
+3 * 108 108
+7 * 108
+3 * 108 0 108
cfi=(2)
cfn=(2)
calls=108 0x402d74 645 
* * 1404 648 216 0 1 0 0 1
+5 * 108
+3 * 108 0 0 0 0 0 0 0 0 108
+2 * 108 0 0 1 0 0 1
+5 * 108
jump=108 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 108
+2 * 108 0 0 0 0 0 0 0 0 108
jcnd=108/108 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 108 0 108
+1 * 108
+3 * 108
+4 * 108 0 108
+4 * 108 0 108
+4 * 108 0 108
+5 +1 108 108
+4 * 108
+3 * 108 0 108
cfi=(2)
cfn=(2)
calls=108 0x402d74 645 
* * 1404 648 216
+5 * 108
+3 * 108 0 108
+3 +1 108 108 0 1 0 0 1
+6 * 108 0 108
+3 * 108 108
+6 * 108 0 108
+3 +2 108 0 108
+7 * 108
jump=108 +86 * 
* * 
+2 +1 5994 5994
+3 * 5994
+3 * 5994 5994
+4 * 5994
+3 * 5994
+3 * 5994 0 5994
cfi=(2)
cfn=(144)
calls=5994 0x402d9a 770 
* * 65934 29970 17982
+5 * 5994 5994
+4 * 5994 5994
+5 * 5994
+4 * 5994 0 5994
+5 +1 5994 5994
+3 * 5994
+3 * 5994 5994
+4 * 5994
+3 * 5994
+3 * 5994 0 5994
cfi=(2)
cfn=(146)
calls=5994 0x402dba 770 
* * 65934 29970 17982
+5 * 5994 5994
+2 * 5994
+4 * 5994 5994
+5 * 5994
+4 * 5994 0 5994
+5 -2 5994 0 5994
+4 * 5994 5994
+3 * 5994
+3 * 5994 5994
+3 * 5994 0 0 0 0 0 0 0 0 5994 109
jcnd=5886/5994 -93 +1 
* * 
-9 * 108 108 0 1 0 0 1
+3 * 108
+3 * 108 108
+3 * 108 0 0 0 0 0 0 0 0 108
jcnd=108/108 -93 +1 
* * 
+2 +4 108 108
+3 * 108
+3 * 108 0 0 1 0 0 1
+4 * 108 108
+5 * 108
+4 * 108
+3 * 108 0 108
+5 +1 108 108
+3 * 108
+3 * 108
+4 * 108 108
+5 * 108
+4 * 108
+3 * 108 0 108
+5 +1 108 108
+5 * 108 108
+5 * 108 108
+5 * 108 0 0 1 0 0 1
+4 * 108
+3 * 108 0 108
+5 +2 108 108
+3 +1 108 0 108
+3 * 108 108
+5 * 108 108
+1 * 108 108

fl=(4)
fn=(16)
0x404804 115 216 0 216 1 0 0 1
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216
+4 +1 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(5)
cfn=(18)
calls=216 0x404a28 -35 
* * 1296 432 648 1 0 1 1 0 1
+5 * 216 216
+1 * 216 216

fn=(174)
0x403ccc 121 216 0 216
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 216
+4 * 216
+3 * 216 0 216
cfi=(5)
cfn=(176)
calls=216 0x4044cc -35 
* * 1080 432 432
+5 * 216 216
+1 * 216 216

fn=(90)
0x4047b2 115 216 0 216 1 0 0 1
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 0 216 1 0 0 1
+4 +1 216 216
+4 * 216 216
+4 * 216
+3 * 216
+3 * 216 0 216
cfi=(5)
cfn=(92)
calls=216 0x4049d4 -35 
* * 1296 432 648 1 0 0 1
+5 * 216 216
+1 * 216 216

fn=(194)
0x403d7e 121 216 0 216 1 0 0 1
+1 * 216
+3 * 216
+4 * 216 0 216
+4 * 216 216
+4 * 216
+3 * 216 0 216
cfi=(5)
cfn=(196)
calls=216 0x404520 -35 
* * 1080 432 432
+5 * 216 216
+1 * 216 216

fl=(3)
fn=(8)
0x403afa 224 216 0 216 1 0 0 1
+1 * 216
+3 * 216 0 216
+4 * 216 216
+4 * 216 216
+1 * 216 216

fn=(264)
0x4036b1 215 108 0 108
+1 * 108
+3 * 108
+4 * 108 0 108
+4 * 108 0 108
+4 * 108 0 108
+4 +1 108 108
+4 * 108 108
+4 * 108 108
+4 * 108
+3 * 108
+3 * 108 0 108
cfi=(5)
cfn=(266)
calls=108 0x40406a -87 
* * 2592 864 972 0 7 7 0 7 7 108
+5 * 108 108
+1 * 108 108

fn=(212)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102)
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28)
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84)
0x4039ed 224 216 0 216
+1 * 216
+3 * 216 0 216
+4 * 216 216
+4 * 216 216
+1 * 216 216

fn=(222)
0x403373 215 108 0 108
+1 * 108
+3 * 108
+4 * 108 0 108
+4 * 108 0 108
+4 * 108 0 108
+4 +1 108 108
+4 * 108 108
+4 * 108 108
+4 * 108
+3 * 108
+3 * 108 0 108
cfi=(5)
cfn=(224)
calls=108 0x403df2 -87 
* * 2592 864 972 0 8 3 0 8 3 108 1
+5 * 108 108
+1 * 108 108

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 444 0 444 1 0 0 1
+2 0 444 0 444
+2 0 444 0 444
+2 0 444
+3 0 444 0 444
+2 0 444 0 444
+1 0 444 0 444
+1 0 444
+3 0 444
+4 0 444 444
+4 0 444 0 444
+4 0 444
+3 0 444
+4 0 444
+3 0 444
+3 0 444
+3 0 444 0 0 1 0 0 1 0 0 444
+6 0 444
+4 0 444 0 0 0 0 0 0 0 0 444
+6 0 444
+4 0 444 0 0 0 0 0 0 0 0 444
+6 0 444 444
+7 0 444 0 0 0 0 0 0 0 0 444 4
jcnd=320/444 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 320
+2 0 320 0 0 0 0 0 0 0 0 320
+6 0 320 320 0 1 0 0 1
+4 0 320
+3 0 320
+2 0 320 0 0 0 0 0 0 0 0 320
jcnd=320/320 0x3877c78a40 0 
* 0 
+6 0 320 320
+4 0 320
+3 0 320 0 0 0 0 0 0 0 0 320
+6 0 320 320
+5 0 320
+4 0 320 0 0 0 0 0 0 0 0 320
jcnd=320/320 0x3877c7907c 0 
* 0 
+6 0 320 320
+5 0 320
+4 0 320 0 0 0 0 0 0 0 0 320
+6 0 320
+4 0 320 0 0 1 0 0 1 0 0 320
+6 0 320
+4 0 320 320
+7 0 320 0 0 0 0 0 0 0 0 320
+6 0 320 320
+6 0 320
+2 0 320 0 0 0 0 0 0 0 0 320
+6 0 320 320
+4 0 320 0 0 0 0 0 0 0 0 320 2
jcnd=318/320 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 320 320 0 1 0 0 1
+4 0 320 0 0 0 0 0 0 0 0 320
+6 0 320 320 0 0 1 0 0 1
+6 0 320 0 0 1 0 0 1 0 0 320 45
jcnd=30/320 0x3877c78a78 0 
* 0 
+6 0 290 290
+5 0 290 290
+5 0 290 290
+4 0 290 0 0 0 0 0 0 0 0 290
+6 0 290 290
+4 0 290 0 0 0 0 0 0 0 0 290
+6 0 290 290
+9 0 290 0 290
+4 0 290 0 290
+4 0 290 0 0 0 0 0 0 0 0 290 4
jcnd=282/290 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 290
+3 0 290
+4 0 290 290
+4 0 290 290
+4 0 290 0 0 0 0 0 0 0 0 290
-12 0 30
+4 0 30 30
+4 0 30 30
+4 0 30 0 0 0 0 0 0 0 0 30
+6 0 320
+7 0 320 0 320
+4 0 320 0 320
+4 0 320 0 0 0 0 0 0 0 0 320
jcnd=312/320 +18 0 
* 0 
+2 0 8 0 8
+8 0 8 0 8
+8 0 8 0 8
+4 0 8
+3 0 8 0 8 1 0 0 1
+4 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+7 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c78b20 0 
* 0 
-30 0 312 0 312
+4 0 312
+3 0 312 0 312
+4 0 312
+4 0 312 0 312
+4 0 312 0 312
+4 0 312
+7 0 312 0 0 0 0 0 0 0 0 312
jcnd=312/312 0x3877c78b20 0 
* 0 
0x3877c78a40 0 320 0 0 1 0 0 1
+5 0 320 320
+4 0 320 320
+7 0 320 0 0 0 0 0 0 0 0 320
jcnd=320/320 +16 0 
* 0 
+16 0 320 0 320
+5 0 320 0 0 0 0 0 0 0 0 320
+6 0 320
+3 0 320
jump=320 0x3877c7878f 0 
* 0 
+10 0 30 0 30
+6 0 30 0 0 1 0 0 1
jump=30 0x3877c78885 0 
* 0 
0x3877c78b20 0 320 320 0 1 0 0 1
+4 0 320
+2 0 320 0 0 0 0 0 0 0 0 320
+6 0 320 320
+7 0 320 0 0 0 0 0 0 0 0 320
jcnd=320/320 +15 0 
* 0 
+15 0 320 0 320 1 0 0 1
+4 0 320 0 0 0 0 0 0 0 0 320
+6 0 320
+4 0 320 320
+1 0 320 320
+1 0 320 320
+2 0 320 320
+2 0 320 320
+2 0 320 320
+2 0 320 320
0x3877c7907c 0 320 320 0 1 1 0 1 1
+4 0 320 0 0 1 0 0 1
+7 0 320
+4 0 320
+3 0 320
+3 0 320 0 0 0 0 0 0 0 0 320
jcnd=320/320 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 434 0 0 1 0 0 1
+7 0 434
+3 0 434
+3 0 434 434 0 0 1 0 0 1
+4 0 434
+4 0 434 0 0 0 0 0 0 0 0 0 0 434 53
jump=48 0x3877c89be8 0 
* 0 
jump=54 0x3877c89bd0 0 
* 0 
jump=48 0x3877c89bb8 0 
* 0 
jump=56 +11 0 
* 0 
jump=56 0x3877c89c48 0 
* 0 
jump=58 0x3877c89c30 0 
* 0 
jump=56 0x3877c89c18 0 
* 0 
jump=58 0x3877c89c00 0 
* 0 
+11 0 56 56
+3 0 56
+4 0 56
+4 0 56 56
+4 0 56
+4 0 56 0 56
+4 0 56
+9 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56
+4 0 56
+4 0 56 0 0 0 0 0 0 0 0 56
jcnd=8/56 0x3877c89c60 0 
* 0 
-40 0 1414 1414
+4 0 1414 0 1414
+4 0 1414 1414
+4 0 1414 0 1414
+4 0 1414 1414
+4 0 1414 0 1414 0 0 1 0 0 1
+4 0 1414 1414
+4 0 1414 0 1414 0 0 3 0 0 3
+4 0 1414
+4 0 1414
+4 0 1414 0 0 0 0 0 0 0 0 1414 24
jcnd=398/1414 0x3877c89c60 0 
* 0 
-32 0 58 58
+4 0 58 0 58
+4 0 58 58
+4 0 58 0 58
+4 0 58 58
+4 0 58 0 58
+4 0 58
+4 0 58
+4 0 58 0 0 0 0 0 0 0 0 58
jcnd=10/58 0x3877c89c60 0 
* 0 
-24 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56
+4 0 56
+4 0 56 0 0 0 0 0 0 0 0 56
jcnd=8/56 0x3877c89c60 0 
* 0 
-16 0 58 58 0 1 0 0 1
+4 0 58 0 58
+4 0 58 0 0 1 0 0 1
+4 0 58
+4 0 58 0 0 0 0 0 0 0 0 58 4
jcnd=10/58 0x3877c89c60 0 
* 0 
+6 0 1208
+4 0 1208 1208
+3 0 1208 0 1208 0 0 1 0 0 1
+3 0 1208 1208
+4 0 1208 0 1208 0 0 3 0 0 3
+4 0 1208 1208
+4 0 1208 0 1208 0 0 4 0 0 4
+4 0 1208 1208
+4 0 1208 0 1208
+4 0 1208
jump=1208 -80 0 
* 0 
-30 0 48 48
+3 0 48 0 48
+3 0 48 48
+4 0 48 0 48
+4 0 48 48
+4 0 48 0 48 0 0 1 0 0 1
+4 0 48 48
+4 0 48 0 48
+4 0 48
jump=48 -80 0 
* 0 
-24 0 54 54
+4 0 54 0 54
+4 0 54 54
+4 0 54 0 54
+4 0 54 54
+4 0 54 0 54
+4 0 54
jump=54 -80 0 
* 0 
-16 0 48 48
+4 0 48 0 48
+4 0 48 48
+4 0 48 0 48
+4 0 48
jump=48 -80 0 
* 0 
+8 0 48 48
+3 0 48
+4 0 48 0 0 1 0 0 1
+4 0 48
+4 0 48
jump=48 -39 0 
* 0 
+9 0 54
+3 0 54 0 0 0 0 0 0 0 0 54
+6 0 54 54
+3 0 54
+4 0 54
jump=54 -72 0 
* 0 
+8 0 48
+4 0 48 48
+3 0 48 0 0 0 0 0 0 0 0 48
+2 0 48
+4 0 48
jump=48 -99 0 
* 0 
+11 0 58 58 0 1 0 0 1
+3 0 58
+4 0 58
+4 0 58
+4 0 58
jump=58 0x3877c89b78 0 
* 0 
+9 0 56 56
+3 0 56
+4 0 56
+4 0 56
+4 0 56
jump=56 0x3877c89b70 0 
* 0 
+9 0 58 58
+3 0 58
+4 0 58
+4 0 58
+4 0 58
jump=58 0x3877c89b68 0 
* 0 
+9 0 56 56
+3 0 56
+4 0 56
+4 0 56
+4 0 56
jump=56 0x3877c89b60 0 
* 0 
+9 0 434 0 434 1 0 0 1
+3 0 434 434

fn=(104) alloc_perturb
0x3877c77180 0 327 327 0 1 0 0 1
+6 0 327
+2 0 327 0 0 0 0 0 0 0 0 327 1
+2 0 327 327

fn=(38) _int_malloc
0x3877c79a00 0 444 0 444 1 0 0 1
+2 0 444
+3 0 444 0 444
+2 0 444 0 444
+2 0 444 0 444 0 0 1 0 0 1
+2 0 444
+3 0 444 0 444
+1 0 444 0 444
+1 0 444
+4 0 444
+4 0 444 0 0 0 0 0 0 0 0 444
+6 0 444
+4 0 444
+6 0 444
+3 0 444
+4 0 444
+4 0 444
+4 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
+6 0 444 444 0 1 1 0 1 1
+7 0 444 0 0 0 0 0 0 0 0 444 7
jcnd=322/444 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 1
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 117 117
+6 0 117
+4 0 117
+2 0 117 0 0 0 0 0 0 0 0 117
+6 0 117
+3 0 117
+4 0 117 117
+1 0 117 117
+1 0 117 117
+2 0 117 117
+2 0 117 117
+2 0 117 117
+2 0 117 117
-14 0 327
+4 0 327 327
+1 0 327 327
+1 0 327 327
+2 0 327 327
+2 0 327 327
+2 0 327 327
+2 0 327 327
+7 0 339
+7 0 339 0 0 1 0 0 1 0 0 339
+2 0 339
+3 0 339
+5 0 339
+3 0 339
+4 0 339 0 339
+4 0 339
+2 0 339
+5 0 339 339 0 0 4 0 0 4
+4 0 339
+3 0 339 0 0 0 0 0 0 0 0 339
jcnd=339/339 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 339 0 0 1 0 0 1
+3 0 339
+3 0 339
+3 0 339
+4 0 339
+3 0 339
+4 0 339 0 339
+5 0 339
+3 0 339 0 339
+4 0 339 0 339
+4 0 339 0 339
+5 0 339
+3 0 339
+3 0 339
+3 0 339
+3 0 339
+4 0 339
+4 0 339 0 0 1 0 0 1
+4 0 339 0 339
+4 0 339
+4 0 339 0 339
+5 0 339 0 339
+5 0 339
+3 0 339
+3 0 339 0 339
+5 0 339
+5 0 339
+3 0 339 0 339
+4 0 339 0 339
+4 0 339
+6 0 339 0 339
+4 0 339 0 339
+5 0 339 0 0 1 0 0 1
+3 0 339
+3 0 339
+3 0 339
jump=339 +87 0 
* 0 
+8 0 431
+3 0 431
+4 0 431
+2 0 431
+2 0 431
+3 0 431
+3 0 431
+3 0 431
+2 0 431
+2 0 431
+5 0 431
+2 0 431 431 0 0 2 0 0 2
+4 0 431
+3 0 431
+4 0 431 0 431
+4 0 431 0 431
+8 0 431
+7 0 431 0 431
+4 0 431 0 431
+4 0 431 0 431
+4 0 431 0 0 0 0 0 0 0 0 431
-38 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+8 0 5
+7 0 5 0 5
+4 0 5 0 5 0 0 1 0 0 1
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 775 775 0 1 0 0 1
+4 0 775
+3 0 775 0 0 0 0 0 0 0 0 775 23
jcnd=307/775 0x3877c79ef0 0 
* 0 
+6 0 468 468
+4 0 468 468
+4 0 468
+4 0 468 0 0 0 0 0 0 0 0 468
+6 0 468 468 0 1 0 0 1
+7 0 468 0 0 0 0 0 0 0 0 468
+6 0 468
+4 0 468
+7 0 468 0 0 0 0 0 0 0 0 468
+2 0 468
+3 0 468 0 0 0 0 0 0 0 0 468 135
jcnd=316/468 0x3877c79e28 0 
* 0 
+6 0 448
+3 0 448 0 448
+4 0 448 0 448
+5 0 448 0 0 0 0 0 0 0 0 448 8
jcnd=12/448 0x3877c7a090 0 
* 0 
+6 0 436
+7 0 436 0 0 0 0 0 0 0 0 436 5
jcnd=431/436 0x3877c79c50 0 
* 0 
+6 0 5 0 0 1 0 0 1
+3 0 5
+4 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5
+3 0 5
+4 0 5
+2 0 5
+2 0 5
+3 0 5
+3 0 5
+8 0 5
+3 0 5
+2 0 5
+2 0 5
+4 0 5 5 0 0 1 0 0 1
+4 0 5
+3 0 5 0 0 1 0 0 1 0 0 5 1
jcnd=5/5 0x3877c79e15 0 
* 0 
0x3877c79e15 0 5 0 5
+4 0 5 0 5
+4 0 5
+3 0 5
jump=5 0x3877c79c73 0 
* 0 
+8 0 316 316 0 1 0 0 1
+4 0 316
+3 0 316 0 0 0 0 0 0 0 0 316 9
jcnd=161/316 0x3877c79ce1 0 
* 0 
+6 0 155 155
+5 0 155 0 0 0 0 0 0 0 0 155 6
jcnd=135/155 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 15 0 0 15
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 307 0 0 1 0 0 1
+7 0 307
+3 0 307 0 0 0 0 0 0 0 0 307
+6 0 307 307 0 1 0 0 1
+4 0 307
+3 0 307
+3 0 307
+2 0 307
+4 0 307
+3 0 307
+3 0 307
+2 0 307
+2 0 307
+2 0 307
+2 0 307 307 0 0 1 0 0 1
+8 0 307
+5 0 307
+5 0 307
+2 0 307 0 0 0 0 0 0 0 0 307
-2 0 160
+2 0 160 0 0 0 0 0 0 0 0 160
+2 0 467
+2 0 467 0 0 0 0 0 0 0 0 467 19
jcnd=318/467 +64 0 
* 0 
+2 0 149
+8 0 149
+3 0 149
+3 0 149 0 0 0 0 0 0 0 0 149 1
jcnd=1/149 0x3877c79fc0 0 
* 0 
-6 0 6
+3 0 6
+3 0 6 0 0 0 0 0 0 0 0 6
+2 0 154
+2 0 154 154
+8 0 154
+2 0 154 0 0 0 0 0 0 0 0 154
jcnd=6/154 -20 0 
* 0 
+2 0 148
+2 0 148
+5 0 148
+3 0 148
+3 0 148
+2 0 148
+2 0 148
+5 0 148 0 0 0 0 0 0 0 0 148
+2 0 148
+2 0 148
+4 0 148
+2 0 148
+2 0 148 0 0 0 0 0 0 0 0 148 2
jcnd=146/148 -8 0 
* 0 
-8 0 3268
+4 0 3268
+2 0 3268
+2 0 3268 0 0 0 0 0 0 0 0 3268 243
jcnd=2839/3268 -8 0 
* 0 
-2 0 318 0 0 1 0 0 1
+2 0 318 0 0 0 0 0 0 0 0 318 23
jcnd=283/318 -8 0 
* 0 
+2 0 466 466 0 0 8 0 0 8
+4 0 466 0 0 1 0 0 1
+3 0 466 0 0 0 0 0 0 0 0 466 137
jcnd=306/466 0x3877c7a1cf 0 
* 0 
+6 0 160
+2 0 160
+4 0 160
+2 0 160
+2 0 160
+2 0 160 0 160
+8 0 160
jump=160 0x3877c79f30 0 
* 0 
+37 0 1 1 0 1 0 0 1
+5 0 1 1
+4 0 1
+4 0 1 1
+5 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 12 0 0 1 0 0 1
+7 0 12 0 12
+6 0 12
+3 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 306 306 0 1 2 0 1 2
+4 0 306 306 0 0 1 0 0 1
+4 0 306
+3 0 306 306
+4 0 306
+4 0 306
+3 0 306
+3 0 306 306
+4 0 306 0 0 0 0 0 0 0 0 306
+6 0 306 306
+4 0 306 0 0 0 0 0 0 0 0 306
+6 0 306 306 0 1 0 0 1
+8 0 306 0 306
+4 0 306 0 306
+4 0 306 0 0 0 0 0 0 0 0 306 5
jcnd=299/306 +38 0 
* 0 
+2 0 7 7 0 0 1 0 0 1
+4 0 7
+3 0 7 0 0 0 0 0 0 0 0 7
+2 0 7 7
+5 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 7
+4 0 7 7
+4 0 7 0 7
+4 0 7
+4 0 7 0 0 0 0 0 0 0 0 7
-4 0 299
+4 0 299 0 0 0 0 0 0 0 0 299 10
jcnd=14/299 0x3877c7a2e3 0 
* 0 
+6 0 292 292
+4 0 292 292 0 1 0 0 1
+4 0 292 0 0 0 0 0 0 0 0 292
+6 0 292
+4 0 292
+7 0 292 0 292 0 0 10 0 0 10
+4 0 292 0 292
+4 0 292 0 292
+4 0 292 0 292
+4 0 292 0 0 0 0 0 0 0 0 292
+2 0 292 0 292
+5 0 292
+7 0 292 0 0 0 0 0 0 0 0 292 1
jcnd=286/292 +18 0 
* 0 
+2 0 6 0 6 0 0 1 0 0 1
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 286 0 0 1 0 0 1
+7 0 286 0 286 0 0 1 0 0 1
+4 0 286
+3 0 286
+3 0 286
+4 0 286
+3 0 286
+4 0 286
+3 0 286
+3 0 286
+4 0 286 0 286
+4 0 286 0 286 0 0 1 0 0 1
+4 0 286
jump=286 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 14
+7 0 14 0 14
+6 0 14
+3 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +7 0 
* 0 
+7 0 306
+4 0 306 0 0 1 0 0 1
+3 0 306
+3 0 306 0 306
cfn=(104)
calls=306 0x3877c77180 0 
* 0 1224 612 0 1 0 0 1 0 0 306
+5 0 306
+3 0 306
jump=306 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1 0 0 1 0 0 1
+7 0 1
+2 0 1
+4 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+4 0 1 0 1 0 0 1 0 0 1
+4 0 1
+3 0 1
+3 0 1 0 1
cfn=(104)
calls=1 0x3877c77180 0 
* 0 4 2 0 0 0 0 0 0 0 1 1
+5 0 1
+3 0 1
jump=1 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 444 0 444 1 0 0 1
+5 0 444 0 444
+5 0 444
+3 0 444 0 444
+5 0 444
+4 0 444 444 0 0 1 0 0 1
+7 0 444 444 0 0 1 0 0 1
+3 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
+6 0 444 444 0 0 1 0 0 1
+7 0 444 444 0 1 1 0 1 1
+4 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
+2 0 444 444 0 0 1 0 0 1
+3 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
jcnd=444/444 +97 0 
* 0 
+18 0 444
+3 0 444
+3 0 444 0 444
cfn=(38)
calls=444 0x3877c79a00 0 
* 0 96285 11870 13930 30 25 37 30 25 37 15398 666
+5 0 444
+3 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
+2 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
+2 0 444
+3 0 444 0 0 0 0 0 0 0 0 444 1
+2 0 444 444
+7 0 444 0 0 0 0 0 0 0 0 444
jcnd=444/444 +13 0 
* 0 
+13 0 444 0 444
+2 0 444 0 0 0 0 0 0 0 0 444 10
+6 0 444
+3 0 444 444
+4 0 444 444
+5 0 444 444
+5 0 444
+4 0 444 444
+1 0 444 0 0 1 0 0 1
+5 0 444 444 0 0 1 0 0 1
+7 0 444 0 0 0 0 0 0 0 0 444
jcnd=444/444 +14 0 
* 0 
+14 0 444 0 444 1 0 0 1
+3 0 444 0 0 0 0 0 0 0 0 444
+6 0 444
jump=444 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 444 0 444 1 0 0 1
+2 0 444
+3 0 444
+3 0 444 0 444
+2 0 444
+3 0 444 0 444
+1 0 444
+3 0 444 0 444
+1 0 444
+3 0 444
+4 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
+6 0 444
+4 0 444
+3 0 444 0 0 0 0 0 0 0 0 444 7
jcnd=10/444 0x3877c838d1 0 
* 0 
+2 0 434
+3 0 434
+3 0 434
+3 0 434
+3 0 434
+3 0 434 0 0 0 0 0 0 0 0 434
jcnd=434/434 +41 0 
* 0 
+41 0 434 0 0 1 0 0 1
+3 0 434 0 0 0 0 0 0 0 0 434
jcnd=434/434 0x3877c839c0 0 
* 0 
+24 0 434
+3 0 434
+4 0 434
+3 0 434
+3 0 434
+3 0 434
+3 0 434
+3 0 434 0 0 0 0 0 0 0 0 434 213
jcnd=222/434 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 222
+10 0 222 222 0 0 1 0 0 1
+3 0 222
+4 0 222 0 222
+3 0 222
+4 0 222
+4 0 222 0 0 0 0 0 0 0 0 222
jcnd=222/222 -18 0 
* 0 
-18 0 722 722
+3 0 722
+4 0 722 0 722
+3 0 722
+4 0 722
+4 0 722 0 0 0 0 0 0 0 0 722 11
jcnd=500/722 -18 0 
* 0 
+2 0 444
+4 0 444
+3 0 444 444
+1 0 444 444
+1 0 444 444
+2 0 444 444 0 1 0 0 1
+2 0 444 444
0x3877c839c0 0 434 0 0 1 0 0 1
+3 0 434
+3 0 434
+3 0 434
+4 0 434 0 434 0 0 1 0 0 1
cfn=(284)
calls=434 0x3877c89b20 0 
* 0 36258 12864 11996 6 1 13 6 1 13 1744 28 434 53
+5 0 434
jump=434 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 444 444 0 1 1 0 1 1
+7 0 444 444 0 0 1 0 0 1
+3 0 444
+3 0 444 0 0 1 0 0 1 0 0 444
+6 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
+6 0 444 444
+4 0 444
+4 0 444
+2 0 444 0 0 0 0 0 0 0 0 444
+2 0 444
+2 0 444
+7 0 444 0 0 0 0 0 0 0 0 444
jcnd=444/444 +14 0 
* 0 
+14 0 444
+2 0 444
cfn=(170)
calls=444 0x3877c78650 0 
* 0 42912 11454 6670 17 4 0 17 4 0 10176 59

totals: 1483043 564163 352497 224 64 73 224 64 73 58478 1336 2654 53
