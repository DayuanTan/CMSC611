version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 772


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 930784957 - 934600185
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2590 0 0 1 0 0 1
+3 0 2590 0 0 0 0 0 0 0 0 2590
+2 0 2590
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2590 0x3877c7b8b0 0 
* 0 293472 75261 38525 23 6 0 23 6 0 72006 1226
* 0 2590 2590 0 1 1 0 1 1 0 0 0 2590

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2590 0 2590 1 0 0 1
+1 0 2590
+5 0 2590
+3 0 2590 0 2590
+1 0 2590
+4 0 2590 0 0 1 0 0 1
+3 0 2590
+4 0 2590
+3 0 2590 0 2590 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2590 0x3877c7aa50 0 
* 0 704227 102993 104048 51 43 72 51 43 72 114944 3718
* 0 2590 2590 0 1 1 0 1 1 0 0 0 2590
+5 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590
jcnd=2590/2590 +96 0 
* 0 
+96 0 2590 0 0 1 0 0 1
+4 0 2590 2590
+1 0 2590 2590
+1 0 2590 2590

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 643 0 643
+1 * 643
+3 * 643
+4 * 643 0 643
+4 * 643 0 643
+4 * 643 0 643
+4 +1 643 643
+4 * 643 643
+4 * 643 643
+4 * 643
+3 * 643
+3 * 643 0 643
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=643 0x403df2 -87 
* * 15432 5144 5787 0 41 4 0 41 4 643 2
+5 * 643 643
+1 * 643 643

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286 0 1286
+4 * 1286 1286
+4 * 1286 1286
+1 * 1286 1286

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 643 0 643
+1 * 643
+3 * 643
+4 * 643 0 643
+4 * 643 0 643
+4 * 643 0 643
+4 +1 643 643
+4 * 643 643
+4 * 643 643
+4 * 643
+3 * 643
+3 * 643 0 643
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=643 0x40406a -87 
* * 15432 5144 5787 0 40 32 0 40 32 643
+5 * 643 643
+1 * 643 643

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+4 * 1286 1286
+4 * 1286 1286
+1 * 1286 1286

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2572 0 2572 1 0 0 1
+1 * 2572
+3 * 2572 0 2572
+4 +1 2572 2572
+4 * 2572 2572
+1 * 2572 2572

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2572 0 2572 1 0 0 1
+1 * 2572
+3 * 2572
+4 * 2572 0 2572
+4 +1 2572
+4 * 2572
+3 * 2572 0 2572 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2572 0x40500c 790 
* * 15432 7716 5144 1 0 0 1
+5 * 2572 2572
+3 * 2572 2572
+1 * 2572 2572

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1376 0 1376
+1 * 1376
+3 * 1376 0 1376
+4 +1 1376 1376
+4 * 1376 1376
+1 * 1376 1376

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2572 0 2572 1 0 0 1
+1 * 2572
+3 * 2572 0 2572
+4 +1 2572 2572 0 1 0 0 1
+4 * 2572 2572
+1 * 2572 2572

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1376 0 1376
+1 * 1376
+3 * 1376 0 1376 0 0 1 0 0 1
+4 +1 1376 1376
+4 * 1376 1376
+1 * 1376 1376

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2572 0 2572 1 0 0 1
+1 * 2572
+3 * 2572
+4 * 2572 0 2572
+4 +1 2572
+4 * 2572
+3 * 2572 0 2572
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2572 0x404ffe 790 
* * 15432 7716 5144 1 0 0 1
+5 * 2572 2572
+3 * 2572 2572
+1 * 2572 2572

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 1286
+4 * 1286 1286
+1 * 1286 1286

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1295 0 1295 1 0 0 1
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 +2 1295 1295
+4 * 1295
+3 * 1295 0 1295
cfn=(102)
calls=1295 0x4048de +12 
* * 7770 2590 2590 1 0 0 1
+5 * 1295 1295
+4 * 1295 0 0 1 0 0 1
+3 * 1295
+2 * 1295 0 0 0 0 0 0 0 0 1295
jcnd=1295/1295 +7 +3 
* * 
+7 +3 1295 1295
+4 * 1295
+4 * 1295
+3 * 1295 0 1295
cob=(5)
cfi=(8)
cfn=(32)
calls=1295 0x387e4bd0b0 0 
* * 366753 53516 51372 35 15 56 35 15 56 57273 2512 1295
* * 1295 1295 0 0 0 0 0 0 0 0 0 1295
+5 +1 1295 1295
+1 * 1295 1295

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286 0 1286 0 0 1 0 0 1
+4 * 1286 0 1286
+4 * 1286 1286
+1 * 1286 1286

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 1286
+1 * 1286 1286

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+4 * 1286 1286
+1 * 1286 1286

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1295 0 1295 1 0 0 1
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 * 1295 0 1295 1 0 0 1
+4 +2 1295 1295
+4 * 1295
+3 * 1295 0 1295
cfn=(28)
calls=1295 0x404992 +12 
* * 7770 2590 2590 1 0 0 1
+5 * 1295 1295
+4 * 1295
+3 * 1295
+2 * 1295 0 0 0 0 0 0 0 0 1295
jcnd=1295/1295 +7 +3 
* * 
+7 +3 1295 1295
+4 * 1295
+4 * 1295
+3 * 1295 0 1295
cob=(5)
cfi=(8)
cfn=(32)
calls=1295 0x387e4bd0b0 0 
* * 378914 59837 60446 20 29 17 20 29 17 60261 1206 1295
* * 1295 1295 0 1 1 0 1 1 0 0 0 1295
+5 +1 1295 1295
+1 * 1295 1295

fn=(102)
0x4048de 113 1313 0 1313 1 0 0 1
+1 * 1313
+3 * 1313 0 1313
+4 +1 1313
+10 * 1313 1313
+1 * 1313 1313

fn=(266)
0x40406a 129 643 0 643
+1 * 643
+3 * 643
+4 * 643 0 643
+4 * 643 0 643
+4 * 643 0 643
+4 +1 643 643
+4 * 643
+3 * 643
+5 * 643 0 643
cfi=(16)
cfn=(226)
calls=643 0x402d61 -20 
* * 4501 1929 1929
+5 * 643
+3 * 643 0 0 0 0 0 0 0 0 643
+2 * 643 643
+4 * 643 643 0 0 40 0 0 40
+2 * 643 0 643 0 0 32 0 0 32
+2 * 643 643
+1 * 643 643

fn=(28)
0x404992 113 1313 0 1313 1 0 0 1
+1 * 1313
+3 * 1313 0 1313
+4 +1 1313
+10 * 1313 1313
+1 * 1313 1313

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+4 * 1286 1286
+1 * 1286 1286

fn=(224)
0x403df2 129 643 0 643
+1 * 643
+3 * 643
+4 * 643 0 643
+4 * 643 0 643
+4 * 643 0 643
+4 +1 643 643
+4 * 643
+3 * 643
+5 * 643 0 643
cfi=(16)
cfn=(226)
calls=643 0x402d61 -20 
* * 4501 1929 1929
+5 * 643
+3 * 643 0 0 0 0 0 0 0 0 643 2
+2 * 643 643
+4 * 643 643 0 0 41 0 0 41
+2 * 643 0 643 0 0 4 0 0 4
+2 * 643 643
+1 * 643 643

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1295 0 1295
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 +1 1295 1295
+4 * 1295
+3 * 1295 0 1295
cob=(5)
cfi=(8)
cfn=(164)
calls=1295 0x387e4bb2f0 0 
* * 139278 34376 15265 23 5 0 23 5 0 33991 1137 1295
* * 1295 1295 0 1 1 0 1 1 0 0 0 1295
+5 * 1295 1295
+1 * 1295 1295

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1295 0 1295
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 +1 1295 1295
+4 * 1295
+3 * 1295 0 1295
cob=(5)
cfi=(8)
cfn=(164)
calls=1295 0x387e4bb2f0 0 
* * 164554 43475 23260 2 2 0 2 2 0 40605 89 1295
* * 1295 1295 0 0 0 0 0 0 0 0 0 1295
+5 * 1295 1295
+1 * 1295 1295

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +2 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1286 0x404484 107 
* * 908880 315408 307696 25 3 6 25 3 6 36950 1709 2568 320
+5 * 1286 1286
+1 * 1286 1286

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +2 1286 1286 0 1 0 0 1
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1286 0x404a36 450 
* * 872872 302548 294836 24 3 6 24 3 6 36950 1709 2568 320
+5 * 1286 1286
+1 * 1286 1286

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +2 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1286 0x40439c 107 
* * 908880 315408 307696 7 1 99 7 1 99 36950 1693 2568
+5 * 1286 1286
+1 * 1286 1286

fn=(116)
0x40439c 107 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +10 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1286 0x4047d7 -26 
* * 890876 308978 301266 7 1 99 7 1 99 36950 1693 2568
+5 +1 1286 1286
+1 * 1286 1286

fn=(118)
0x4047d7 91 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +2 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1286 0x4049e2 450 
* * 872872 302548 294836 7 1 99 7 1 99 36950 1693 2568
+5 * 1286 1286
+1 * 1286 1286

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(232)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 49 1 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fn=(50)
0x404484 107 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +10 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(52)
calls=1286 0x404829 -26 
* * 890876 308978 301266 25 3 6 25 3 6 36950 1709 2568 320
+5 +1 1286 1286
+1 * 1286 1286

fn=(270)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 49 2 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fn=(234)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 1295 0 1295 1 0 0 1
+1 * 1295
+3 * 1295
+4 * 1295 0 1295 1 0 0 1
+4 * 1295 0 1295
+4 0 1295 1295
+5 0 1295 0 0 0 0 0 0 0 0 1295
+2 0 1295 1295
+4 0 1295 1295
+4 0 1295
+5 0 1295
+3 0 1295
+3 0 1295 0 1295
fi=(6) ???
cfi=(5)
cfn=(26)
calls=1295 0x404730 99 
* 0 412584 70197 70806 24 30 17 24 30 17 61556 1206 2590
+5 0 1295
fi=(6)
jump=1295 +7 0 
* 0 
+7 0 1295 1295
+1 0 1295 1295

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+4 * 1286 0 1286
+4 * 1286
+4 * 1286 0 0 1 0 0 1
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1286 0x404468 726 
* * 12860 6430 5144 1 0 0 1
+5 * 1286 1286
+4 * 1286 1286
+1 * 1286 1286

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+3 * 1286 0 1286
+4 * 1286
+4 * 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(10)
cfn=(44)
calls=1286 0x404468 726 
* * 12860 6430 5144
+5 * 1286 1286
+4 * 1286 1286
+1 * 1286 1286

fn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
0x403a0a 134 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1286 0x4042e2 -45 
* * 46296 16718 18004 5 0 0 5
+5 +1 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=1286 0x40432a +43 
* * 449728 85058 75235 19 8 52 19 8 52 59316 2444 2572
+5 * 1286
jump=1286 +28 * 
* * 
+28 * 1286
+4 * 1286 1286
+1 * 1286 1286
+1 * 1286 1286

fn=(88)
0x4042e2 90 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286 1 0 0 1
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=1286 0x4047b2 +24 
* * 23148 7716 9002 3 0 0 3
+5 * 1286 1286
+4 * 1286 0 1286
+7 * 1286 1286
+4 * 1286 0 1286
+8 * 1286 1286
+4 * 1286 0 1286
+8 +1 1286 1286
+1 * 1286 1286

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286
+4 +2 1286 1286
+4 * 1286 1286 0 1 0 0 1
+4 * 1286
+3 * 1286 1286
+4 * 1286 1286
+3 * 1286
+3 * 1286
+3 * 1286
+4 * 1286
+3 * 1286 1286
+4 * 1286 1286
+3 -1 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=1286 0x403ce6 +11 
* * 174316 47000 27996 24 5 0 24 5 0 35054 1130 2572
+5 +1 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1286 0x4031b8 -82 
* * 29578 10288 10288 1 0 0 1
+5 * 1286
jump=1286 +28 * 
* * 
+28 * 1286
+4 * 1286 1286
+1 * 1286 1286
+1 * 1286 1286

fn=(172)
0x4031b8 79 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=1286 0x403ccc +42 
* * 18004 6430 6430
+5 * 1286 1286
+1 * 1286 1286

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 2608 0 2608 1 0 0 1
+1 * 2608
+3 * 2608 0 2608
+4 +1 2608 2608
+4 * 2608 2608 0 0 2 0 0 2
+4 * 2608
+3 * 2608 2608
+4 * 2608 2608
+3 * 2608
+3 * 2608
+3 * 2608
+4 * 2608 2608
+1 * 2608 2608

fn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
0x40325e 113 2599 0 2599 1 0 0 1
+1 * 2599
+3 * 2599 0 2599
+4 +1 2599 2599
+4 * 2599 2599
+1 * 2599 2599

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 1304 0 1304 1 0 0 1
+1 * 1304
+3 * 1304 0 1304 0 0 1 0 0 1
+4 +1 1304 1304
+4 * 1304 1304
+1 * 1304 1304

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 1304 0 1304 1 0 0 1
+1 * 1304
+3 * 1304 0 1304 1 0 0 1
+4 +1 1304 1304
+4 * 1304 1304
+1 * 1304 1304

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 643 0 643
+1 * 643
+3 * 643
+4 * 643 0 643
+4 * 643 0 643
+4 +2 643 643
+4 * 643 643
+4 * 643 643
+4 * 643 643
+4 * 643
+3 * 643 0 0 0 0 0 0 0 0 643 9
jcnd=9/643 +51 +10 
* * 
+2 +3 634 634
+4 * 634 634
+4 * 634 634
+4 -1 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(3)
cfn=(222)
calls=634 0x403373 215 
* * 24092 8242 8876 0 40 3 0 40 3 634 2
+5 +2 634 634
+4 * 634 634
+4 * 634
+4 * 634 634
+4 * 634 0 634
+4 * 634
jump=634 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202)
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 14771 4591 4025 45 9 8 45 9 8 973 83 53
+5 +2 643 643
+1 * 643 643

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286 0 1286
+2 * 1286 0 1286
+2 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286 1 0 0 1
+4 * 1286 0 1286
+4 +2 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(6)
calls=1286 0x403b08 117 
* * 7716 3858 2572 1 0 1 1 0 1
+5 * 1286
+3 * 1286 0 1286
cfi=(3)
cfn=(8)
calls=1286 0x403afa -88 
* * 7716 3858 2572 1 0 0 1
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(10)
calls=1286 0x402f54 645 
* * 16718 7716 2572 1 1 0 1 1
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=1286 0x403b16 134 
* * 537385 117332 111506 32 29 14 32 29 14 62486 1161 2572
+5 +4 1286 1286 0 1 0 0 1
+4 * 1286
+3 * 1286 0 1286
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=1286 0x40333c 113 
* * 7716 3858 2572 2 0 0 2
+5 * 1286
+3 * 1286 1286
+4 * 1286 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(42)
calls=1286 0x403ba4 565 
* * 32150 12860 10288 3 0 0 3
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(46)
calls=1286 0x403b74 547 
* * 32150 12860 10288
+5 * 1286
+3 * 1286
+3 * 1286
+3 * 1286
+3 * 1286 0 1286 1 0 0 1
cfi=(11)
cfn=(48)
calls=1286 0x403bd5 -60 
* * 928170 321838 315412 26 3 6 26 3 6 36950 1709 2568 320
+5 -3 1286 1286
+4 * 1286 0 1286
+4 * 1286
jump=1286 +28 +4 
* * 
+28 +4 1286
+4 * 1286 1286
+1 * 1286 1286
+2 * 1286 1286
+2 * 1286 1286
+1 * 1286 1286

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+4 * 1286 0 1286
+4 * 1286
+4 * 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1286 0x404380 726 
* * 12860 6430 5144 1 0 0 1
+5 * 1286 1286
+4 * 1286 1286
+1 * 1286 1286

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286 1 0 0 1
+4 +2 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(40)
calls=1286 0x40333c 113 
* * 7716 3858 2572
+5 * 1286
+3 * 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+3 -1 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1286 0x40334a 148 
* * 39866 12860 15432 2 0 0 2
+5 +1 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=1286 0x4032ca 159 
* * 265122 80506 52702 4 2 0 4 2 0 41654 78 2572
+5 * 1286
jump=1286 +28 * 
* * 
+28 * 1286 0 0 1 0 0 1
+4 * 1286 1286
+1 * 1286 1286
+1 * 1286 1286

fn=(210)
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82)
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1295 0 1295 1 0 0 1
+1 * 1295 0 0 1 0 0 1
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 0 1295 1295
+5 0 1295 0 0 0 0 0 0 0 0 1295
+2 0 1295 1295
+4 0 1295 1295
+4 0 1295
+5 0 1295
+3 0 1295
+3 0 1295 0 1295
fi=(6)
cfi=(5)
cfn=(100)
calls=1295 0x40461a 99 
* 0 400423 63876 61732 38 15 56 38 15 56 58568 2512 2590
+5 0 1295
fi=(6)
jump=1295 +7 0 
* 0 
+7 0 1295 1295
+1 0 1295 1295

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 624353 0 624353
+1 * 624353
+3 * 624353 0 624353
+4 * 624353 0 624353
+4 +1 624353 624353
+4 * 624353 624353
+3 * 624353 624353
+4 * 624353
+4 * 624353
+3 * 624353 624353
+1 * 624353 624353

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 624353 0 624353
+1 * 624353
+3 * 624353 0 624353 1 0 0 1
+4 * 624353 0 624353
+4 +1 624353 624353
+4 * 624353 624353
+3 * 624353 624353
+4 * 624353
+4 * 624353
+3 * 624353 624353
+1 * 624353 624353

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=1286 0x403d7e +42 
* * 18004 6430 6430 1 0 0 1
+5 * 1286 1286
+1 * 1286 1286

fn=(254)
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(186)
0x4032ca 159 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286
+4 +2 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286 1286
+4 * 1286 1286
+3 * 1286
+3 * 1286
+3 * 1286
+4 * 1286
+3 * 1286 1286
+4 * 1286 1286
+3 -1 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1286 0x403d98 +11 
* * 199536 56072 35984 2 2 0 2 2 0 41654 78 2572
+5 +1 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(192)
calls=1286 0x403296 -82 
* * 29578 10288 10288 1 0 0 1
+5 * 1286
jump=1286 +28 * 
* * 
+28 * 1286
+4 * 1286 1286
+1 * 1286 1286
+1 * 1286 1286

fn=(2)
0x402d74 645 5180 0 5180 1 0 0 1
+1 * 5180
+3 * 5180 0 5180 0 0 1 0 0 1
+4 +1 5180 5180
+4 * 5180 5180 0 1 1 0 1 1
+4 * 5180
+3 * 5180 5180
+4 * 5180 5180
+3 * 5180
+3 * 5180
+3 * 5180
+4 * 5180 5180
+1 * 5180 5180

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +2 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(22)
calls=1286 0x404236 -14 
* * 430647 76180 75498 26 29 10 26 29 10 62486 1161 2572
+5 * 1286 1286
+4 * 1286 0 1286
+3 +1 1286 1286
+4 * 1286 1286 0 1 0 0 1
+3 * 1286 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+3 * 1286 1286
+4 * 1286
+4 * 1286
+3 * 1286 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+1 * 1286 1286

fn=(94)
0x40432a 179 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +2 1286 1286
+4 * 1286 1286 0 1 0 0 1
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(96)
calls=1286 0x403fbe -14 
* * 417578 69626 66233 18 8 52 18 8 52 59316 2444 2572
+5 * 1286 1286
+4 * 1286 0 1286
+3 +1 1286 1286
+4 * 1286 1286
+3 * 1286 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+3 * 1286 1286
+4 * 1286
+4 * 1286
+3 * 1286 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+1 * 1286 1286

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 643 0 643
+1 * 643
+3 * 643 0 0 1 0 0 1
+4 * 643 0 643
+4 * 643 0 643
+4 +2 643 643
+4 * 643 643
+4 * 643 643
+4 * 643 643
+4 * 643
+3 * 643 0 0 0 0 0 0 0 0 643
jcnd=9/643 +51 +10 
* * 
+2 +3 634 634
+4 * 634 634
+4 * 634 634
+4 -1 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(3)
cfn=(264)
calls=634 0x4036b1 215 
* * 24092 8242 8876 0 40 27 0 40 27 634
+5 +2 634 634
+4 * 634 634
+4 * 634
+4 * 634 634
+4 * 634 0 634
+4 * 634
jump=634 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246)
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 13919 4385 3841 19 1 61 19 1 61 805 71 53
+5 +2 643 643
+1 * 643 643

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40)
0x40333c 113 2599 0 2599 1 0 0 1
+1 * 2599
+3 * 2599 0 2599 1 0 0 1
+4 +1 2599 2599
+4 * 2599 2599
+1 * 2599 2599

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+3 * 1286 0 1286
+4 * 1286
+4 * 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(10)
cfn=(110)
calls=1286 0x404380 726 
* * 12860 6430 5144
+5 * 1286 1286
+4 * 1286 1286
+1 * 1286 1286

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286 1 0 0 1
+4 +2 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(106)
calls=1286 0x40325e 113 
* * 7716 3858 2572
+5 * 1286
+3 * 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+3 -1 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1286 0x40326c 148 
* * 39866 12860 15432 4 0 0 4
+5 +1 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(156)
calls=1286 0x4031ec 159 
* * 239902 71434 44714 27 5 0 27 5 0 35054 1130 2572
+5 * 1286
jump=1286 +28 * 
* * 
+28 * 1286 0 0 1 0 0 1
+4 * 1286 1286
+1 * 1286 1286
+1 * 1286 1286

fn=(158)
0x403ce6 171 1295 0 1295 1 0 0 1
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 +2 1295 1295
+5 * 1295 0 0 0 0 0 0 0 0 1295
+2 +1 1295 1295
+4 * 1295 1295
+4 * 1295 1295
+4 * 1295
+3 * 1295
+3 * 1295 0 1295
cfi=(5)
cfn=(160)
calls=1295 0x4044d6 -65 
* * 154818 39556 21740 24 6 0 24 6 0 33991 1137 2590
+5 +1 1295 1295
+1 * 1295 1295

fn=(12)
0x403b16 134 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1286 0x4043ca -45 
* * 46296 16718 18004 4 0 4 4 0 4
+5 +1 1286 1286 0 1 0 0 1
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(20)
calls=1286 0x404412 +43 
* * 462797 91612 84500 27 29 10 27 29 10 62486 1161 2572
+5 * 1286
jump=1286 +28 * 
* * 
+28 * 1286
+4 * 1286 1286
+1 * 1286 1286
+1 * 1286 1286

fn=(14)
0x4043ca 90 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286
+4 * 1286 0 1286 0 0 1 0 0 1
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=1286 0x404804 +24 
* * 23148 7716 9002 2 0 1 2 0 1
+5 * 1286 1286
+4 * 1286 0 1286 0 0 2 0 0 2
+7 * 1286 1286
+4 * 1286 0 1286 1 0 0 1
+8 * 1286 1286
+4 * 1286 0 1286
+8 +1 1286 1286
+1 * 1286 1286

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286 0 1286
+2 * 1286 0 1286
+2 * 1286 0 1286
+1 * 1286 0 0 1 0 0 1
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +2 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(82)
calls=1286 0x4039fc 117 
* * 7716 3858 2572 2 0 0 2
+5 * 1286
+3 * 1286 0 1286
cfi=(3)
cfn=(84)
calls=1286 0x4039ed -88 
* * 7716 3858 2572
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(2)
calls=1286 0x402d74 645 
* * 16718 7716 2572
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286
+3 * 1286 0 1286 1 0 0 1
cfn=(86)
calls=1286 0x403a0a 134 
* * 524316 110778 102241 25 8 52 25 8 52 59316 2444 2572
+5 +4 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(106)
calls=1286 0x40325e 113 
* * 7716 3858 2572 1 0 0 1
+5 * 1286
+3 * 1286 1286
+4 * 1286 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(108)
calls=1286 0x403a98 565 
* * 32150 12860 10288 2 0 0 2
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(112)
calls=1286 0x403a68 547 
* * 32150 12860 10288
+5 * 1286
+3 * 1286
+3 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(11)
cfn=(114)
calls=1286 0x403ac9 -60 
* * 928170 321838 315412 7 1 99 7 1 99 36950 1693 2568
+5 -3 1286 1286
+4 * 1286 0 1286
+4 * 1286
jump=1286 +28 +4 
* * 
+28 +4 1286
+4 * 1286 1286
+1 * 1286 1286
+2 * 1286 1286
+2 * 1286 1286
+1 * 1286 1286

fn=(188)
0x403d98 171 1295 0 1295 1 0 0 1
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 +2 1295 1295
+5 * 1295 0 0 0 0 0 0 0 0 1295 9
+2 +1 1295 1295
+4 * 1295 1295
+4 * 1295 1295
+4 * 1295
+3 * 1295
+3 * 1295 0 1295
cfi=(5)
cfn=(190)
calls=1295 0x40452a -65 
* * 180094 48655 29735 2 2 0 2 2 0 40605 89 2590
+5 +1 1295 1295
+1 * 1295 1295

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286 1 0 0 1
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +8 1286 0 1286
+4 +3 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=1286 0x404f37 -22 
* * 667112 233104 224106 14 3 5 14 3 5 36950 1709 2568 320
+5 +1 1286 1286
+1 * 1286 1286

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+2 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +4 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=1286 0x404878 277 
* * 19290 7716 6430 1 0 0 1
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1286 0x404d44 277 
* * 32150 11574 10288 2 0 0 2
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(132)
calls=1286 0x404d44 277 
* * 32150 11574 10288
+5 * 1286
+3 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=1286 0x404d5e -49 
* * 686402 239534 231822 1 1 99 1 1 99 36950 1693 2568
+5 +1 1286
+4 * 1286 1286
+1 * 1286 1286
+2 * 1286 1286
+1 * 1286 1286

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(54)
0x404a36 450 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286 1 0 0 1
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +10 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1286 0x404c38 288 
* * 19290 7716 6430 3 0 0 3
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(56)
calls=1286 0x404c38 288 
* * 19290 7716 6430
+5 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1286 0x404c52 -36 
* * 806000 279400 271688 20 3 6 20 3 6 36950 1709 2568 320
+5 +1 1286
+4 * 1286 1286
+1 * 1286 1286
+1 * 1286 1286

fn=(60)
0x404c52 424 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+2 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +4 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1286 0x40492d 277 
* * 19290 7716 6430 2 0 0 2
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1286 0x404d9d 277 
* * 32150 11574 10288 2 0 1 2 0 1
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(66)
calls=1286 0x404d9d 277 
* * 32150 11574 10288
+5 * 1286
+3 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(72)
calls=1286 0x404db7 -49 
* * 686402 239534 231822 15 3 5 15 3 5 36950 1709 2568 320
+5 +1 1286
+4 * 1286 1286
+1 * 1286 1286
+2 * 1286 1286
+1 * 1286 1286

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 49 0 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(62)
0x40492d 277 1340 0 1340 1 0 0 1
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
+4 +1 1340 1340
+4 * 1340
+3 * 1340 0 1340 1 0 0 1
cfi=(13)
cfn=(64)
calls=1340 -33 -66 
* * 8040 4020 2680
+5 * 1340 1340
+1 * 1340 1340

fn=(66)
0x404d9d 277 2572 0 2572
+1 * 2572
+3 * 2572
+4 * 2572 0 2572
+4 +1 2572 2572
+4 * 2572
+3 * 2572 0 2572
cfi=(13)
cfn=(68)
calls=2572 0x404f1a -58 
* * 41152 15432 12860 2 0 1 2 0 1
+5 * 2572 2572
+1 * 2572 2572

fn=(240)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 49 0 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1286 0 1286
+1 * 1286
+3 * 1286 0 1286
+1 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +10 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1286 0x404bc6 288 
* * 19290 7716 6430 3 0 0 3
+5 * 1286
+3 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfn=(122)
calls=1286 0x404bc6 288 
* * 19290 7716 6430
+5 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(126)
calls=1286 0x404be0 -36 
* * 806000 279400 271688 4 1 99 4 1 99 36950 1693 2568
+5 +1 1286
+4 * 1286 1286
+1 * 1286 1286
+1 * 1286 1286

fn=(128)
0x404878 277 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340 1 0 0 1
+4 +1 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfi=(13)
cfn=(130)
calls=1340 -33 -66 
* * 8040 4020 2680 0 0 1 0 0 1
+5 * 1340 1340
+1 * 1340 1340

fn=(132)
0x404d44 277 2572 0 2572
+1 * 2572
+3 * 2572
+4 * 2572 0 2572
+4 +1 2572 2572
+4 * 2572
+3 * 2572 0 2572
cfi=(13)
cfn=(134)
calls=2572 0x404e98 -58 
* * 41152 15432 12860 2 0 0 2
+5 * 2572 2572
+1 * 2572 2572

fn=(138)
0x404d5e 379 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +8 1286 0 1286
+4 +3 1286 1286
+4 * 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1286 0x404eb5 -22 
* * 667112 233104 224106 1 1 99 1 1 99 36950 1693 2568
+5 +1 1286 1286
+1 * 1286 1286

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 49 1 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 2572 0 2572 1 0 0 1
+1 * 2572
+3 * 2572
+4 * 2572 0 2572
+4 +1 2572 2572
+4 * 2572
+3 * 2572 0 2572
cfi=(13)
cfn=(124)
calls=2572 0x404d36 -77 
* * 15432 7716 5144 2 0 0 2
+5 * 2572 2572
+1 * 2572 2572

fn=(56)
0x404c38 288 2572 0 2572 1 0 0 1
+1 * 2572
+3 * 2572
+4 * 2572 0 2572 1 0 0 1
+4 +1 2572 2572
+4 * 2572
+3 * 2572 0 2572
cfi=(13)
cfn=(58)
calls=2572 0x404d8f -77 
* * 15432 7716 5144 1 0 0 1
+5 * 2572 2572
+1 * 2572 2572

fn=(74)
0x404f37 368 1304 0 1304
+1 * 1304
+3 * 1304
+4 * 1304 0 1304 1 0 0 1
+4 * 1304 0 1304
+4 * 1304 0 1304
+4 +2 1304 1304
+4 * 1304 1304
+4 * 1304
+3 * 1304
+3 * 1304
+4 * 1304 0 1304
+4 +1 1304 1304
+5 * 1304 0 0 0 0 0 0 0 0 1304
jcnd=9/1304 +33 +2 
* * 
+2 +1 1295 1295
+4 * 1295
+8 * 1295 1295
+4 * 1295 1295
+4 * 1295
+3 * 1295 0 0 1 0 0 1
+3 * 1295 0 1295 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1295 0x3877c83840 0 
* * 632952 219537 216952 11 2 53 11 2 53 35786 1715 1290 320
* * 1295 1295 0 1 1 0 1 1 0 0 0 1295
+5 +1 1304 1304
+4 * 1304
+8 * 1304 1304
+4 * 1304
+3 +1 1304 1304
+1 * 1304 1304

fn=(140)
0x404eb5 368 1304 0 1304
+1 * 1304
+3 * 1304
+4 * 1304 0 1304 1 0 0 1
+4 * 1304 0 1304
+4 * 1304 0 1304 0 0 1 0 0 1
+4 +2 1304 1304
+4 * 1304 1304
+4 * 1304
+3 * 1304
+3 * 1304
+4 * 1304 0 1304
+4 +1 1304 1304
+5 * 1304 0 0 0 0 0 0 0 0 1304
jcnd=9/1304 +33 +2 
* * 
+2 +1 1295 1295
+4 * 1295
+8 * 1295 1295
+4 * 1295 1295
+4 * 1295
+3 * 1295
+3 * 1295 0 1295
cob=(2)
cfi=(9)
cfn=(78)
calls=1295 0x3877c83840 0 
* * 632952 219537 216952 0 1 100 0 1 100 35786 1701 1290
* * 1295 1295 0 0 0 0 0 0 0 0 0 1295
+5 +1 1304 1304
+4 * 1304
+8 * 1304 1304
+4 * 1304
+3 +1 1304 1304
+1 * 1304 1304

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 2572 0 2572 1 0 0 1
+1 * 2572
+3 * 2572 0 2572
+4 +1 2572 2572
+4 * 2572 2572
+1 * 2572 2572

fn=(110)
0x404380 726 2572 0 2572 1 0 0 1
+1 * 2572
+3 * 2572 0 2572
+4 * 2572 0 2572
+4 * 2572 2572
+4 * 2572 2572
+3 * 2572 2572
+4 * 2572 0 2572
+3 * 2572 2572
+1 * 2572 2572

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 2572 0 2572 1 0 0 1
+1 * 2572
+3 * 2572 0 2572
+4 +1 2572 2572
+4 * 2572 2572
+1 * 2572 2572

fn=(44)
0x404468 726 2572 0 2572
+1 * 2572
+3 * 2572 0 2572
+4 * 2572 0 2572
+4 * 2572 2572
+4 * 2572 2572
+3 * 2572 2572
+4 * 2572 0 2572 1 0 0 1
+3 * 2572 2572
+1 * 2572 2572

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1295 0 1295 1 0 0 1
+1 * 1295
+3 * 1295 0 1295
+4 * 1295 0 1295 1 0 0 1
+4 * 1295 1295
+1 * 1295 1295

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1295 0 1295 1 0 0 1
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 +4 1295 1295
+4 * 1295 1295
+4 * 1295
+3 * 1295
+3 * 1295 0 1295
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1295 0x40454c -14 
* * 7770 2590 3885 1 0 0 1
+5 +2 1295 1295
+1 * 1295 1295

fn=(150)
0x40326c 148 1295 0 1295
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 +3 1295 1295 0 1 0 0 1
+4 * 1295 1295
+4 * 1295
+3 * 1295
+3 * 1295 0 1295
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1295 0x403d1a -29 
* * 23310 7770 9065 3 0 0 3
+5 +1 1295 1295
+1 * 1295 1295

fn=(180)
0x40334a 148 1295 0 1295
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 +3 1295 1295
+4 * 1295 1295
+4 * 1295
+3 * 1295
+3 * 1295 0 1295
cfn=(182)
calls=1295 0x403dcc -29 
* * 23310 7770 9065 2 0 0 2
+5 +1 1295 1295
+1 * 1295 1295

fn=(152)
0x403d1a 122 1295 0 1295 1 0 0 1
+1 * 1295
+3 * 1295
+4 * 1295 0 1295
+4 * 1295 0 1295
+4 +4 1295 1295
+4 * 1295 1295
+4 * 1295
+3 * 1295
+3 * 1295 0 1295
cfn=(154)
calls=1295 0x4044f8 -14 
* * 7770 2590 3885 2 0 0 2
+5 +2 1295 1295
+1 * 1295 1295

fn=(184)
0x40454c 112 1295 0 1295 1 0 0 1
+1 * 1295
+3 * 1295 0 1295
+4 * 1295 0 1295
+4 * 1295 1295
+1 * 1295 1295

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 2657 492 488 0 1 7 0 1 7 365 45 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 0 5 0 0 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 49 3 0 49 131 6 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1278 353 226 1 0 0 1 0 0 246 20 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 3565 725 679 22 7 4 22 7 4 547 68 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 8 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1222 326 219 1 1 0 1 1 0 232 7 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 643 0 643 1 0 0 1
+1 * 643
+3 * 643
+4 * 643 0 643
+4 * 643 0 643
+4 +1 643 643
+4 * 643
+3 * 643 0 643
cfi=(2)
cfn=(2)
calls=643 0x402d74 645 
* * 8359 3858 1286
+5 * 643
+3 * 643 0 643
+3 +1 643 643
+6 * 643 0 643
+3 * 643 643
+6 * 643 0 643
+3 +1 643 643
+6 * 643 0 643 1 0 0 1
+3 * 643 643
+6 * 643 0 643
+3 +2 643 0 643
+7 * 643
jump=643 +86 * 
* * 
+2 +1 207689 207689
+3 * 207689
+3 * 207689 207689
+4 * 207689
+3 * 207689
+3 * 207689 0 207689
cfi=(2)
cfn=(144)
calls=207689 0x402d9a 770 
* * 2284579 1038445 623067
+5 * 207689 207689
+4 * 207689 207689
+5 * 207689
+4 * 207689 0 207689
+5 +1 207689 207689
+3 * 207689
+3 * 207689 207689
+4 * 207689
+3 * 207689
+3 * 207689 0 207689
cfi=(2)
cfn=(146)
calls=207689 0x402dba 770 
* * 2284579 1038445 623067 1 0 0 1
+5 * 207689 207689
+2 * 207689
+4 * 207689 207689
+5 * 207689
+4 * 207689 0 207689
+5 -2 207689 0 207689
+4 * 207689 207689
+3 * 207689
+3 * 207689 207689
+3 * 207689 0 0 0 0 0 0 0 0 207689 644
jcnd=207046/207689 -93 +1 
* * 
-9 * 643 643 0 1 0 0 1
+3 * 643
+3 * 643 643
+3 * 643 0 0 0 0 0 0 0 0 643
jcnd=643/643 -93 +1 
* * 
+2 +4 643 643
+3 * 643
+3 * 643
+4 * 643 643 0 1 0 0 1
+5 * 643
+4 * 643
+3 * 643 0 643
+5 +1 643 643
+3 * 643
+3 * 643
+4 * 643 643
+5 * 643
+4 * 643
+3 * 643 0 643
+5 +1 643 0 643
+7 * 643
jump=643 0x4016ee * 
* * 
+2 +1 207689 207689
+3 * 207689
+3 * 207689 207689
+4 * 207689
+3 * 207689 0 0 1 0 0 1
+3 * 207689 0 207689
cfi=(2)
cfn=(146)
calls=207689 0x402dba 770 
* * 2284579 1038445 623067
+5 * 207689 207689
+2 * 207689
+4 * 207689 207689
+5 * 207689 0 207689
+5 +1 207689 207689
+3 * 207689
+3 * 207689 207689
+4 * 207689
+3 * 207689
+3 * 207689 0 207689
cfi=(2)
cfn=(144)
calls=207689 0x402d9a 770 
* * 2284579 1038445 623067
+5 * 207689 207689
+4 * 207689 207689
+5 * 207689 0 207689
+5 +1 207689 207689
+5 * 207689 207689
+5 * 207689 207689
+5 * 207689
+4 * 207689 0 207689
+5 +1 207689 207689
+5 * 207689 207689
+5 * 207689 207689
+5 * 207689
+4 * 207689 0 207689
+5 -4 207689 0 207689
+4 * 207689 207689
+3 * 207689
+3 * 207689 207689
+3 * 207689 0 0 0 0 0 0 0 0 207689 644
jcnd=207046/207689 0x401672 +1 
* * 
-9 * 643 643 0 1 0 0 1
+3 * 643
+3 * 643 643
+3 * 643 0 0 0 0 0 0 0 0 643
jcnd=643/643 0x401672 +1 
* * 
+6 +6 643 643 0 1 0 0 1
+5 * 643 643
+5 * 643 0 643
+5 +2 643 643
+3 +1 643 0 643
+3 * 643 643
+5 * 643 643
+1 * 643 643

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 643
+7 * 643
+7 * 643
+3 * 643
+3 * 643 0 643
cfi=(2)
cfn=(4)
calls=643 0x4030b2 310 
* * 817653 251135 238623 68 32 20 68 32 20 49844 1798 2570 320
+5 * 643
+7 * 643
+7 * 643
+3 * 643
+3 * 643 0 643
cfi=(2)
cfn=(80)
calls=643 0x402ff4 310 
* * 810970 247847 233988 40 9 151 40 9 151 48210 2445 2570
+5 * 643 0 0 1 0 0 1
+7 * 643
+7 * 643
+3 * 643
+3 * 643 0 643
cfn=(142)
calls=643 0x401585 -52 
* * 21641451 9569769 4995467 8 0 0 8 0 0 416664 1288
+5 * 643 0 643
+8 * 643 643
+6 * 643 0 643
+6 * 643
+7 * 643
+3 * 643 0 643
cfi=(2)
cfn=(148)
calls=643 0x402df4 414 
* * 159174 49863 35217 33 5 0 33 5 0 17527 569 1286
+5 * 643
+7 * 643
+3 * 643 0 643 1 0 0 1
cfi=(2)
cfn=(178)
calls=643 0x402e74 414 
* * 171784 54399 39211 8 2 0 8 2 0 20827 43 1286
+5 +2 643
+7 * 643
+7 * 643
+3 * 643
+3 * 643 0 643
cfi=(2)
cfn=(4)
calls=643 0x4030b2 310 
* * 816368 251049 238449 2 1 1 2 1 1 49592 1072 2570
+5 * 643
+7 * 643
+7 * 643
+3 * 643
+3 * 643 0 643
cfi=(2)
cfn=(80)
calls=643 0x402ff4 310 
* * 809982 247783 233819 0 0 0 0 0 0 48056 1692 2570
+5 * 643 643
+6 * 643 0 0 1 0 0 1
+7 * 643
+7 * 643 0 643
+6 * 643 643
+8 * 643
+3 * 643
+3 * 643 0 643
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=643 0x401719 -33 
* * 10007009 4167926 2294224 4 0 0 4 0 0 208332 644
+5 * 643 0 643
+8 * 643 643
+6 * 643 0 643
+6 * 643
+7 * 643 0 0 1 0 0 1
+3 * 643 0 643
cfi=(2)
cfn=(148)
calls=643 0x402df4 414 
* * 159174 49863 35217 0 0 0 0 0 0 17527 561 1286
+5 * 643
+7 * 643
+3 * 643 0 643
cfi=(2)
cfn=(178)
calls=643 0x402e74 414 
* * 171784 54399 39211 0 0 0 0 0 0 20827 35 1286
+5 +2 643 643
+7 * 643
+3 * 643 0 643
cfi=(2)
cfn=(2)
calls=643 0x402d74 645 
* * 8359 3858 1286
+5 * 643 643
+6 * 643
+3 * 643
+3 * 643
+3 * 643 643
+7 * 643
+3 * 643 0 0 1 0 0 1
+3 * 643 0 643
cfi=(2)
cfn=(144)
calls=643 0x402d9a 770 
* * 7073 3215 1929
+5 * 643
+3 * 643
+7 * 643
+3 * 643
+3 * 643 0 643
cfi=(2)
cfn=(200)
calls=643 0x402eda 901 
* * 55752 21237 16179 48 49 11 48 49 11 2250 94 53
+5 +1 643 643
+7 * 643
+3 * 643 0 643
cfi=(2)
cfn=(10)
calls=643 0x402f54 645 
* * 8359 3858 1286 0 1 0 0 1
+5 * 643 643
+6 * 643
+3 * 643
+3 * 643
+3 * 643 643
+7 * 643 0 0 1 0 0 1
+3 * 643
+3 * 643 0 643
cfi=(2)
cfn=(146)
calls=643 0x402dba 770 
* * 7073 3215 1929
+5 * 643
+3 * 643
+7 * 643
+3 * 643
+3 * 643 0 643
cfi=(2)
cfn=(244)
calls=643 0x402f7a 901 
* * 54900 21031 15995 20 41 88 20 41 88 2082 71 53
+5 +1 643 643
+7 * 643
+3 * 643 0 643
cfi=(2)
cfn=(10)
calls=643 0x402f54 645 
* * 8359 3858 1286
+5 * 643 643
+6 * 643
+3 * 643
+3 * 643
+3 * 643 643 0 1 0 0 1
+7 * 643
+3 * 643
+3 * 643 0 643
cfi=(2)
cfn=(146)
calls=643 0x402dba 770 
* * 7073 3215 1929
+5 * 643 643
+2 * 643
+4 * 643 643
+8 * 643 643
+8 * 643 0 643
+8 +1 643 643
+7 * 643
+3 * 643 0 643
cfi=(2)
cfn=(2)
calls=643 0x402d74 645 
* * 8359 3858 1286
+5 * 643 643 0 1 0 0 1
+6 * 643
+3 * 643
+3 * 643
+3 * 643 643
+7 * 643
+3 * 643
+3 * 643 0 643
cfi=(2)
cfn=(144)
calls=643 0x402d9a 770 
* * 7073 3215 1929
+5 * 643 643
+4 * 643 643
+8 * 643
+4 * 643 643
+8 * 643
+3 * 643 0 643
+8 +2 643 0 643
+7 -12 643 643
+8 * 643 643
+7 * 643 0 0 0 0 0 0 0 0 643 1
jcnd=1/643 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 643
+7 * 643
+3 * 643 0 643
cfi=(2)
cfn=(2)
calls=643 0x402d74 645 
* * 8359 3858 1286 2 0 1 2 0 1
+5 * 643
+3 * 643 643
+7 * 643
+3 * 643 0 643
cfi=(2)
cfn=(2)
calls=643 0x402d74 645 
* * 8359 3858 1286 0 1 0 0 1
+5 * 643
+3 * 643 0 0 0 0 0 0 0 0 643 3
+2 * 643 0 0 1 0 0 1
+5 * 643
jump=643 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 643
+2 * 643 0 0 0 0 0 0 0 0 643
jcnd=643/643 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 643 0 643
+1 * 643
+3 * 643
+4 * 643 0 643
+4 * 643 0 643
+4 * 643 0 643
+5 +1 643 643
+4 * 643
+3 * 643 0 643
cfi=(2)
cfn=(2)
calls=643 0x402d74 645 
* * 8359 3858 1286
+5 * 643
+3 * 643 0 643
+3 +1 643 643 0 1 0 0 1
+6 * 643 0 643
+3 * 643 643
+6 * 643 0 643
+3 +2 643 0 643
+7 * 643
jump=643 +86 * 
* * 
+2 +1 207689 207689
+3 * 207689
+3 * 207689 207689
+4 * 207689
+3 * 207689
+3 * 207689 0 207689
cfi=(2)
cfn=(144)
calls=207689 0x402d9a 770 
* * 2284579 1038445 623067
+5 * 207689 207689
+4 * 207689 207689
+5 * 207689
+4 * 207689 0 207689
+5 +1 207689 207689
+3 * 207689
+3 * 207689 207689
+4 * 207689
+3 * 207689
+3 * 207689 0 207689
cfi=(2)
cfn=(146)
calls=207689 0x402dba 770 
* * 2284579 1038445 623067
+5 * 207689 207689
+2 * 207689
+4 * 207689 207689
+5 * 207689
+4 * 207689 0 207689
+5 -2 207689 0 207689
+4 * 207689 207689
+3 * 207689
+3 * 207689 207689
+3 * 207689 0 0 0 0 0 0 0 0 207689 644
jcnd=207046/207689 -93 +1 
* * 
-9 * 643 643 0 1 0 0 1
+3 * 643
+3 * 643 643
+3 * 643 0 0 0 0 0 0 0 0 643
jcnd=643/643 -93 +1 
* * 
+2 +4 643 643
+3 * 643
+3 * 643 0 0 1 0 0 1
+4 * 643 643
+5 * 643
+4 * 643
+3 * 643 0 643
+5 +1 643 643
+3 * 643
+3 * 643
+4 * 643 643
+5 * 643
+4 * 643
+3 * 643 0 643
+5 +1 643 643
+5 * 643 643
+5 * 643 643
+5 * 643 0 0 1 0 0 1
+4 * 643
+3 * 643 0 643
+5 +2 643 643
+3 +1 643 0 643
+3 * 643 643
+5 * 643 643
+1 * 643 643

fl=(4)
fn=(16)
0x404804 115 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286
+4 +1 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(5)
cfn=(18)
calls=1286 0x404a28 -35 
* * 7716 2572 3858 1 0 1 1 0 1
+5 * 1286 1286
+1 * 1286 1286

fn=(174)
0x403ccc 121 1286 0 1286
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfi=(5)
cfn=(176)
calls=1286 0x4044cc -35 
* * 6430 2572 2572
+5 * 1286 1286
+1 * 1286 1286

fn=(90)
0x4047b2 115 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 0 1286 1 0 0 1
+4 +1 1286 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286
+3 * 1286 0 1286
cfi=(5)
cfn=(92)
calls=1286 0x4049d4 -35 
* * 7716 2572 3858 1 0 0 1
+5 * 1286 1286
+1 * 1286 1286

fn=(194)
0x403d7e 121 1286 0 1286 1 0 0 1
+1 * 1286
+3 * 1286
+4 * 1286 0 1286
+4 * 1286 1286
+4 * 1286
+3 * 1286 0 1286
cfi=(5)
cfn=(196)
calls=1286 0x404520 -35 
* * 6430 2572 2572
+5 * 1286 1286
+1 * 1286 1286

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 2590 0 2590 1 0 0 1
+5 0 2590 0 2590
+5 0 2590
+3 0 2590 0 2590
+5 0 2590
+4 0 2590 2590 0 0 1 0 0 1
+7 0 2590 2590 0 0 1 0 0 1
+3 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590 2
+6 0 2590 2590 0 0 1 0 0 1
+7 0 2590 2590 0 1 1 0 1 1
+4 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590
+2 0 2590 2590 0 0 1 0 0 1
+3 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590
jcnd=2590/2590 +97 0 
* 0 
+18 0 2590
+3 0 2590
+3 0 2590 0 2590
cfn=(38) _int_malloc
calls=2590 0x3877c79a00 0 
* 0 595447 74503 88508 47 37 72 47 37 72 89044 3673
+5 0 2590
+3 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590
+2 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590
+2 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590 31
+2 0 2590 2590
+7 0 2590 0 0 0 0 0 0 0 0 2590
jcnd=2590/2590 +13 0 
* 0 
+13 0 2590 0 2590
+2 0 2590 0 0 0 0 0 0 0 0 2590 12
+6 0 2590
+3 0 2590 2590
+4 0 2590 2590
+5 0 2590 2590
+5 0 2590
+4 0 2590 2590
+1 0 2590 0 0 1 0 0 1
+5 0 2590 2590 0 0 1 0 0 1
+7 0 2590 0 0 0 0 0 0 0 0 2590
jcnd=2590/2590 +14 0 
* 0 
+14 0 2590 0 2590 1 0 0 1
+3 0 2590 0 0 0 0 0 0 0 0 2590
+6 0 2590
jump=2590 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2590 0 2590 1 0 0 1
+2 0 2590
+3 0 2590
+3 0 2590 0 2590
+2 0 2590
+3 0 2590 0 2590
+1 0 2590
+3 0 2590 0 2590
+1 0 2590
+3 0 2590
+4 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590
+6 0 2590
+4 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590 7
jcnd=10/2590 0x3877c838d1 0 
* 0 
+2 0 2580
+3 0 2580
+3 0 2580
+3 0 2580
+3 0 2580
+3 0 2580 0 0 0 0 0 0 0 0 2580
jcnd=2580/2580 +41 0 
* 0 
+41 0 2580 0 0 1 0 0 1
+3 0 2580 0 0 0 0 0 0 0 0 2580
jcnd=2580/2580 0x3877c839c0 0 
* 0 
+24 0 2580
+3 0 2580
+4 0 2580
+3 0 2580
+3 0 2580
+3 0 2580
+3 0 2580
+3 0 2580 0 0 0 0 0 0 0 0 2580 1286
jcnd=1300/2580 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1290
+10 0 1290 1290 0 0 2 0 0 2
+3 0 1290
+4 0 1290 0 1290
+3 0 1290
+4 0 1290
+4 0 1290 0 0 0 0 0 0 0 0 1290
jcnd=1290/1290 -18 0 
* 0 
-18 0 3926 3926
+3 0 3926
+4 0 3926 0 3926
+3 0 3926
+4 0 3926
+4 0 3926 0 0 0 0 0 0 0 0 3926 11
jcnd=2636/3926 -18 0 
* 0 
+2 0 2590
+4 0 2590
+3 0 2590 2590
+1 0 2590 2590
+1 0 2590 2590
+2 0 2590 2590 0 1 0 0 1
+2 0 2590 2590
0x3877c839c0 0 2580 0 0 1 0 0 1
+3 0 2580
+3 0 2580
+3 0 2580
+4 0 2580 0 2580 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=2580 0x3877c89b20 0 
* 0 1119558 420908 415748 6 1 152 6 1 152 53426 2112 2580 320
+5 0 2580
jump=2580 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2590 2590 0 1 1 0 1 1
+7 0 2590 2590 0 0 1 0 0 1
+3 0 2590
+3 0 2590 0 0 1 0 0 1 0 0 2590
+6 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590 2
+6 0 2590 2590 0 0 1 0 0 1
+4 0 2590
+4 0 2590
+2 0 2590 0 0 0 0 0 0 0 0 2590 2
+2 0 2590
+2 0 2590
+7 0 2590 0 0 0 0 0 0 0 0 2590
jcnd=2590/2590 +14 0 
* 0 
+14 0 2590
+2 0 2590
cfn=(170) _int_free
calls=2590 0x3877c78650 0 
* 0 254622 67491 38525 21 3 0 21 3 0 61646 1222

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 19 19 0 1 0 0 1
+4 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 2
jcnd=18/19 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1 1
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=7/18 0x3877c75f78 0 
* 0 
+6 0 19 19 0 1 0 0 1
+4 0 19 19
+4 0 19
+3 0 19 0 0 1 0 0 1
+4 0 19
+4 0 19 19
+5 0 19
+4 0 19
+2 0 19 0 0 0 0 0 0 0 0 19 7
jcnd=8/19 +70 0 
* 0 
+2 0 11 11
+3 0 11
+3 0 11
+3 0 11 11
+4 0 11 11
+4 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+8 0 11 0 11
+4 0 11 0 11
+4 0 11 0 0 0 0 0 0 0 0 11
jcnd=11/11 +15 0 
* 0 
+15 0 19 19 0 1 0 0 1
+4 0 19 0 0 0 0 0 0 0 0 19
+2 0 19 19 0 0 1 0 0 1
+6 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=5/19 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 2590 0 2590 1 0 0 1
+2 0 2590 0 2590
+2 0 2590 0 2590
+2 0 2590
+3 0 2590 0 2590
+2 0 2590 0 2590
+1 0 2590 0 2590
+1 0 2590
+3 0 2590
+4 0 2590 2590
+4 0 2590 0 2590
+4 0 2590
+3 0 2590
+4 0 2590
+3 0 2590
+3 0 2590
+3 0 2590 0 0 1 0 0 1 0 0 2590
+6 0 2590
+4 0 2590 0 0 0 0 0 0 0 0 2590
+6 0 2590
+4 0 2590 0 0 0 0 0 0 0 0 2590
+6 0 2590 2590
+7 0 2590 0 0 0 0 0 0 0 0 2590 4
jcnd=2466/2590 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124 2
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 2466
+2 0 2466 0 0 0 0 0 0 0 0 2466
+6 0 2466 2466 0 1 0 0 1
+4 0 2466
+3 0 2466
+2 0 2466 0 0 0 0 0 0 0 0 2466
jcnd=2466/2466 0x3877c78a40 0 
* 0 
+6 0 2466 2466
+4 0 2466
+3 0 2466 0 0 0 0 0 0 0 0 2466
+6 0 2466 2466
+5 0 2466
+4 0 2466 0 0 0 0 0 0 0 0 2466
jcnd=2466/2466 0x3877c7907c 0 
* 0 
+6 0 2466 2466
+5 0 2466
+4 0 2466 0 0 0 0 0 0 0 0 2466
+6 0 2466
+4 0 2466 0 0 1 0 0 1 0 0 2466
+6 0 2466
+4 0 2466 2466
+7 0 2466 0 0 0 0 0 0 0 0 2466
+6 0 2466 2466
+6 0 2466
+2 0 2466 0 0 0 0 0 0 0 0 2466
+6 0 2466 2466
+4 0 2466 0 0 0 0 0 0 0 0 2466 6
jcnd=2461/2466 +70 0 
* 0 
+2 0 5 5
+3 0 5
+3 0 5
+3 0 5 5
+4 0 5 5
+4 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5 2
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=4/5 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 2466 2466 0 1 0 0 1
+4 0 2466 0 0 0 0 0 0 0 0 2466 1052
jcnd=1140/2466 0x3877c78bf0 0 
* 0 
+6 0 1326 1326 0 0 2 0 0 2
+6 0 1326 0 0 1 0 0 1 0 0 1326 71
jcnd=83/1326 0x3877c78a78 0 
* 0 
+6 0 1243 1243
+5 0 1243 1243
+5 0 1243 1243
+4 0 1243 0 0 0 0 0 0 0 0 1243
+6 0 1243 1243
+4 0 1243 0 0 0 0 0 0 0 0 1243
+6 0 1243 1243
+9 0 1243 0 1243
+4 0 1243 0 1243
+4 0 1243 0 0 0 0 0 0 0 0 1243 4
jcnd=971/1243 +16 0 
* 0 
+2 0 272 272
+5 0 272
+3 0 272 0 0 1 0 0 1 0 0 272 8
jcnd=252/272 0x3877c78ee4 0 
* 0 
+6 0 1243
+3 0 1243
+4 0 1243 1243
+4 0 1243 1243
+4 0 1243 0 0 0 0 0 0 0 0 1243
-12 0 83
+4 0 83 83
+4 0 83 83
+4 0 83 0 0 0 0 0 0 0 0 83
+6 0 1326
+7 0 1326 0 1326
+4 0 1326 0 1326
+4 0 1326 0 0 0 0 0 0 0 0 1326 70
jcnd=441/1326 +18 0 
* 0 
+2 0 885 0 885
+8 0 885 0 885
+8 0 885 0 885
+4 0 885
+3 0 885 0 885 1 0 0 1
+4 0 885
+4 0 885 0 885
+4 0 885 0 885
+4 0 885
+7 0 885 0 0 0 0 0 0 0 0 885
jcnd=885/885 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 1140
+7 0 1140 0 0 0 0 0 0 0 0 1140
jcnd=1140/1140 0x3877c78b20 0 
* 0 
0x3877c78a40 0 2466 0 0 1 0 0 1
+5 0 2466 2466
+4 0 2466 2466
+7 0 2466 0 0 0 0 0 0 0 0 2466
jcnd=2466/2466 +16 0 
* 0 
+16 0 2466 0 2466
+5 0 2466 0 0 0 0 0 0 0 0 2466
+6 0 2466
+3 0 2466
jump=2466 0x3877c7878f 0 
* 0 
+10 0 83 0 83
+6 0 83 0 0 1 0 0 1
jump=83 0x3877c78885 0 
* 0 
0x3877c78b20 0 2466 2466 0 1 0 0 1
+4 0 2466
+2 0 2466 0 0 0 0 0 0 0 0 2466
+6 0 2466 2466
+7 0 2466 0 0 0 0 0 0 0 0 2466
jcnd=2466/2466 +15 0 
* 0 
+15 0 2466 0 2466 1 0 0 1
+4 0 2466 0 0 0 0 0 0 0 0 2466 2
+6 0 2466
+4 0 2466 2466
+1 0 2466 2466
+1 0 2466 2466
+2 0 2466 2466
+2 0 2466 2466
+2 0 2466 2466
+2 0 2466 2466
0x3877c78bf0 0 1140 0 0 1 0 0 1
+3 0 1140 0 1140
+4 0 1140
+3 0 1140
+4 0 1140 0 1140 1 0 0 1
+4 0 1140
jump=1140 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 252 252 0 1 0 0 1
+5 0 252 0 0 0 0 0 0 0 0 252
+6 0 252 252
+5 0 252 0 252
+4 0 252 252
+5 0 252 0 252
+4 0 252
jump=252 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 2466 2466 0 1 1 0 1 1
+4 0 2466 0 0 1 0 0 1
+7 0 2466
+4 0 2466
+3 0 2466
+3 0 2466 0 0 0 0 0 0 0 0 2466
jcnd=2466/2466 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 2580 0 0 1 0 0 1
+7 0 2580
+3 0 2580
+3 0 2580 2580 0 0 1 0 0 1
+4 0 2580
+4 0 2580 0 0 0 0 0 0 0 0 0 0 2580 320
jump=320 0x3877c89be8 0 
* 0 
jump=332 0x3877c89bd0 0 
* 0 
jump=320 0x3877c89bb8 0 
* 0 
jump=320 +11 0 
* 0 
jump=320 0x3877c89c48 0 
* 0 
jump=322 0x3877c89c30 0 
* 0 
jump=320 0x3877c89c18 0 
* 0 
jump=326 0x3877c89c00 0 
* 0 
+11 0 320 320
+3 0 320
+4 0 320
+4 0 320 320
+4 0 320
+4 0 320 0 320
+4 0 320
+9 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320
+4 0 320
+4 0 320 0 0 0 0 0 0 0 0 320
jcnd=8/320 0x3877c89c60 0 
* 0 
-40 0 51486 51486
+4 0 51486 0 51486 0 0 3 0 0 3
+4 0 51486 51486
+4 0 51486 0 51486 0 0 15 0 0 15
+4 0 51486 51486
+4 0 51486 0 51486 0 0 49 0 0 49
+4 0 51486 51486
+4 0 51486 0 51486 0 0 3 0 0 3
+4 0 51486
+4 0 51486
+4 0 51486 0 0 0 0 0 0 0 0 51486 2106
jcnd=2544/51486 0x3877c89c60 0 
* 0 
-32 0 322 322
+4 0 322 0 322
+4 0 322 322
+4 0 322 0 322
+4 0 322 322
+4 0 322 0 322
+4 0 322
+4 0 322
+4 0 322 0 0 0 0 0 0 0 0 322
jcnd=10/322 0x3877c89c60 0 
* 0 
-24 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320
+4 0 320
+4 0 320 0 0 0 0 0 0 0 0 320
jcnd=8/320 0x3877c89c60 0 
* 0 
-16 0 326 326 0 1 0 0 1
+4 0 326 0 326
+4 0 326 0 0 1 0 0 1
+4 0 326
+4 0 326 0 0 0 0 0 0 0 0 326 6
jcnd=10/326 0x3877c89c60 0 
* 0 
+6 0 50194
+4 0 50194 50194
+3 0 50194 0 50194 0 0 4 0 0 4
+3 0 50194 50194
+4 0 50194 0 50194 0 0 31 0 0 31
+4 0 50194 50194
+4 0 50194 0 50194 0 0 45 0 0 45
+4 0 50194 50194
+4 0 50194 0 50194
+4 0 50194
jump=50194 -80 0 
* 0 
-30 0 320 320
+3 0 320 0 320
+3 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320 0 0 2 0 0 2
+4 0 320 320
+4 0 320 0 320
+4 0 320
jump=320 -80 0 
* 0 
-24 0 332 332
+4 0 332 0 332
+4 0 332 332
+4 0 332 0 332
+4 0 332 332
+4 0 332 0 332
+4 0 332
jump=332 -80 0 
* 0 
-16 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320
jump=320 -80 0 
* 0 
+8 0 320 320
+3 0 320
+4 0 320 0 0 1 0 0 1
+4 0 320
+4 0 320
jump=320 -39 0 
* 0 
+9 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
+6 0 332 332
+3 0 332
+4 0 332
jump=332 -72 0 
* 0 
+8 0 320
+4 0 320 320
+3 0 320 0 0 0 0 0 0 0 0 320
+2 0 320
+4 0 320
jump=320 -99 0 
* 0 
+11 0 326 326 0 1 0 0 1
+3 0 326
+4 0 326
+4 0 326
+4 0 326
jump=326 0x3877c89b78 0 
* 0 
+9 0 320 320
+3 0 320
+4 0 320
+4 0 320
+4 0 320
jump=320 0x3877c89b70 0 
* 0 
+9 0 322 322
+3 0 322
+4 0 322
+4 0 322
+4 0 322
jump=322 0x3877c89b68 0 
* 0 
+9 0 320 320
+3 0 320
+4 0 320
+4 0 320
+4 0 320
jump=320 0x3877c89b60 0 
* 0 
+9 0 2580 0 2580 1 0 0 1
+3 0 2580 2580

fn=(104) alloc_perturb
0x3877c77180 0 2443 2443 0 1 0 0 1
+6 0 2443
+2 0 2443 0 0 0 0 0 0 0 0 2443 2
+2 0 2443 2443

fn=(38)
0x3877c79a00 0 2590 0 2590 1 0 0 1
+2 0 2590
+3 0 2590 0 2590
+2 0 2590 0 2590
+2 0 2590 0 2590 0 0 1 0 0 1
+2 0 2590
+3 0 2590 0 2590
+1 0 2590 0 2590
+1 0 2590
+4 0 2590
+4 0 2590 0 0 0 0 0 0 0 0 2590
+6 0 2590
+4 0 2590
+6 0 2590
+3 0 2590
+4 0 2590
+4 0 2590
+4 0 2590
+3 0 2590 0 0 0 0 0 0 0 0 2590
+6 0 2590 2590 0 1 1 0 1 1
+7 0 2590 0 0 0 0 0 0 0 0 2590 7
jcnd=2468/2590 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 23
jcnd=16/122 0x3877c79af8 0 
* 0 
+6 0 106
+4 0 106 106 0 0 1 0 0 1
+4 0 106
+3 0 106
+4 0 106 106 0 0 1 0 0 1
+9 0 106 0 0 0 0 0 0 0 0 106 2
jcnd=106/106 +3 0 
* 0 
+3 0 106 0 106 1 0 0 1
+5 0 106
+3 0 106
+3 0 106 0 0 0 0 0 0 0 0 106
+2 0 106
jump=106 0x3877c7a2db 0 
* 0 
+46 0 106 106
+4 0 106 0 0 1 0 0 1
+3 0 106
+3 0 106
+2 0 106 0 0 0 0 0 0 0 0 106
+6 0 147 147
+6 0 147
+4 0 147
+2 0 147 0 0 0 0 0 0 0 0 147
+6 0 147
+3 0 147
+4 0 147 147
+1 0 147 147
+1 0 147 147
+2 0 147 147
+2 0 147 147
+2 0 147 147
+2 0 147 147
-14 0 2443
+4 0 2443 2443
+1 0 2443 2443
+1 0 2443 2443
+2 0 2443 2443
+2 0 2443 2443
+2 0 2443 2443
+2 0 2443 2443
+7 0 2484
+7 0 2484 0 0 1 0 0 1 0 0 2484 7
jcnd=1582/2484 0x3877c79b70 0 
* 0 
+2 0 902
+3 0 902
+5 0 902
+3 0 902
+4 0 902 0 902
+4 0 902
+2 0 902
+5 0 902 902 0 0 1 0 0 1
+4 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 0x3877c79bc2 0 
* 0 
+78 0 1582 0 0 1 0 0 1
+3 0 1582
+4 0 1582
+4 0 1582 0 0 1 0 0 1 0 0 1582 3
jcnd=1580/1582 0x3877c7a1a4 0 
* 0 
+6 0 2
+3 0 2
+4 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2
+3 0 2 0 2
+4 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +30 0 
* 0 
-11 0 1580 1580
+6 0 1580
+5 0 1580 0 0 0 0 0 0 0 0 1580 1
jcnd=1579/1580 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 847 224 179 8 1 0 8 1 0 175 27
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 2483 0 0 1 0 0 1
+3 0 2483
+3 0 2483
+3 0 2483
+4 0 2483
+3 0 2483
+4 0 2483 0 2483
+5 0 2483
+3 0 2483 0 2483
+4 0 2483 0 2483
+4 0 2483 0 2483
+5 0 2483
+3 0 2483
+3 0 2483
+3 0 2483
+3 0 2483
+4 0 2483
+4 0 2483 0 0 1 0 0 1
+4 0 2483 0 2483
+4 0 2483
+4 0 2483 0 2483
+5 0 2483 0 2483
+5 0 2483
+3 0 2483
+3 0 2483 0 2483
+5 0 2483
+5 0 2483
+3 0 2483 0 2483
+4 0 2483 0 2483
+4 0 2483
+6 0 2483 0 2483
+4 0 2483 0 2483
+5 0 2483 0 0 1 0 0 1
+3 0 2483
+3 0 2483
+3 0 2483
jump=2483 +87 0 
* 0 
+8 0 1270
+3 0 1270
+4 0 1270
+2 0 1270
+2 0 1270
+3 0 1270
+3 0 1270
+3 0 1270
+2 0 1270
+2 0 1270
+5 0 1270
+2 0 1270 1270 0 0 1 0 0 1
+4 0 1270
+3 0 1270
+4 0 1270 0 1270
+4 0 1270 0 1270
+8 0 1270
+7 0 1270 0 1270
+4 0 1270 0 1270
+4 0 1270 0 1270
+4 0 1270 0 0 0 0 0 0 0 0 1270
-38 0 1123
+3 0 1123
+4 0 1123 0 1123
+4 0 1123 0 1123
+8 0 1123
+7 0 1123 0 1123
+4 0 1123 0 1123
+4 0 1123 0 1123
+4 0 1123 0 0 0 0 0 0 0 0 1123
+6 0 4877 4877 0 1 0 0 1
+4 0 4877
+3 0 4877 0 0 0 0 0 0 0 0 4877 140
jcnd=2425/4877 0x3877c79ef0 0 
* 0 
+6 0 2452 2452 0 0 1 0 0 1
+4 0 2452 2452
+4 0 2452
+4 0 2452 0 0 0 0 0 0 0 0 2452
+6 0 2452 2452 0 1 1 0 1 1
+7 0 2452 0 0 0 0 0 0 0 0 2452 2
+6 0 2452
+4 0 2452
+7 0 2452 0 0 0 0 0 0 0 0 2452 6
jcnd=1543/2452 +11 0 
* 0 
+2 0 909
+3 0 909 0 0 0 0 0 0 0 0 909 62
jcnd=833/909 0x3877c79e28 0 
* 0 
+6 0 2434
+3 0 2434 0 2434
+4 0 2434 0 2434
+5 0 2434 0 0 0 0 0 0 0 0 2434 29
jcnd=41/2434 0x3877c7a090 0 
* 0 
+6 0 2393
+7 0 2393 0 0 0 0 0 0 0 0 2393 475
jcnd=1270/2393 0x3877c79c50 0 
* 0 
+6 0 1123 0 0 1 0 0 1
+3 0 1123
+4 0 1123
+4 0 1123 0 0 0 0 0 0 0 0 1123 263
jcnd=264/1123 0x3877c79db0 0 
* 0 
+6 0 859
+3 0 859
+4 0 859
+2 0 859
+2 0 859
+3 0 859
+3 0 859
+8 0 859
+3 0 859
+2 0 859
+2 0 859
+4 0 859 859 0 0 2 0 0 2
+4 0 859
+3 0 859 0 0 1 0 0 1 0 0 859 13
jcnd=827/859 0x3877c79e15 0 
* 0 
-36 0 264
+2 0 264
+2 0 264
+3 0 264
+3 0 264
+8 0 264
+3 0 264
+2 0 264
+2 0 264
+4 0 264 264
+4 0 264
+3 0 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 0x3877c79e15 0 
* 0 
+6 0 32 32
+4 0 32
+4 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=16/32 +38 0 
* 0 
+2 0 16 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
jump=16 0x3877c79c73 0 
* 0 
+13 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c79ee0 0 
* 0 
+6 0 8 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
-4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
+14 0 264 0 0 1 0 0 1
+3 0 264
+4 0 264
+4 0 264 0 0 0 0 0 0 0 0 264
+2 0 264
+3 0 264 0 0 1 0 0 1
+7 0 264
jump=264 0x3877c79d18 0 
* 0 
+78 0 1091 0 1091
+4 0 1091 0 1091
+4 0 1091
+3 0 1091
jump=1091 0x3877c79c73 0 
* 0 
+8 0 833 833 0 1 0 0 1
+4 0 833
+3 0 833 0 0 0 0 0 0 0 0 833 335
jcnd=428/833 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 5
jcnd=387/405 0x3877c79ce1 0 
* 0 
+6 0 18 0 0 1 0 0 1
+3 0 18
+3 0 18
+3 0 18
+7 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18 0 18
+4 0 18 0 18 0 0 15 0 0 15
+4 0 18 0 18
+4 0 18 0 0 0 0 0 0 0 0 18 4
jcnd=10/18 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8 1 0 0 1
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8 0 0 1 0 0 1
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 1 0 0 1
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 18
+3 0 18
jump=18 0x3877c79ae3 0 
* 0 
+39 0 8 8
+4 0 8
jump=8 0x3877c79d9e 0 
* 0 
+12 0 2425 0 0 1 0 0 1
+7 0 2425
+3 0 2425 0 0 0 0 0 0 0 0 2425 14
jcnd=1562/2425 0x3877c7a0b0 0 
* 0 
+6 0 2385 2385 0 1 0 0 1
+4 0 2385
+3 0 2385
+3 0 2385
+2 0 2385
+4 0 2385
+3 0 2385
+3 0 2385
+2 0 2385
+2 0 2385
+2 0 2385
+2 0 2385 2385 0 0 1 0 0 1
+8 0 2385
+5 0 2385
+5 0 2385
+2 0 2385 0 0 0 0 0 0 0 0 2385
-2 0 1162
+2 0 1162 0 0 0 0 0 0 0 0 1162 1
jcnd=1/1162 +14 0 
* 0 
+2 0 3546
+2 0 3546 0 0 0 0 0 0 0 0 3546 47
jcnd=1603/3546 +64 0 
* 0 
+2 0 1943
+8 0 1943
+3 0 1943
+3 0 1943 0 0 0 0 0 0 0 0 1943 4
jcnd=263/1943 0x3877c79fc0 0 
* 0 
-6 0 1306
+3 0 1306
+3 0 1306 0 0 0 0 0 0 0 0 1306 11
jcnd=881/1306 0x3877c79fc0 0 
* 0 
+2 0 2105
+2 0 2105 2105
+8 0 2105
+2 0 2105 0 0 0 0 0 0 0 0 2105 31
jcnd=1305/2105 -20 0 
* 0 
+2 0 800
+2 0 800
+5 0 800
+3 0 800
+3 0 800
+2 0 800
+2 0 800
+5 0 800 0 0 0 0 0 0 0 0 800
jcnd=1/800 +14 0 
* 0 
+2 0 799
+2 0 799
+4 0 799
+2 0 799
+2 0 799 0 0 0 0 0 0 0 0 799 7
jcnd=735/799 -8 0 
* 0 
-8 0 13364
+4 0 13364
+2 0 13364
+2 0 13364 0 0 0 0 0 0 0 0 13364 883
jcnd=11226/13364 -8 0 
* 0 
-2 0 1603 0 0 1 0 0 1
+2 0 1603 0 0 0 0 0 0 0 0 1603 27
jcnd=1403/1603 -8 0 
* 0 
+2 0 2403 2403 0 0 19 0 0 19
+4 0 2403 0 0 1 0 0 1
+3 0 2403 0 0 0 0 0 0 0 0 2403 1148
jcnd=1241/2403 0x3877c7a1cf 0 
* 0 
+6 0 1162
+2 0 1162
+4 0 1162
+2 0 1162
+2 0 1162
+2 0 1162 0 1162
+8 0 1162
jump=1162 0x3877c79f30 0 
* 0 
+37 0 1144 1144 0 1 0 0 1
+5 0 1144 1144
+4 0 1144
+4 0 1144 1144
+5 0 1144 0 0 0 0 0 0 0 0 1144 1
jcnd=1144/1144 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 41 0 0 1 0 0 1
+7 0 41 0 41
+6 0 41
+3 0 41 0 0 0 0 0 0 0 0 41
jcnd=41/41 0x3877c79ace 0 
* 0 
+16 0 1562 1562
+4 0 1562
+4 0 1562
+2 0 1562
+5 0 1562 1562 0 1 2 0 1 2
+4 0 1562
+3 0 1562 0 0 0 0 0 0 0 0 1562 13
jcnd=1498/1562 0x3877c79f00 0 
* 0 
+6 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64 4
jcnd=24/64 0x3877c79f00 0 
* 0 
+6 0 40
+3 0 40 40
+4 0 40 40
+4 0 40
+3 0 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c7a650 0 
* 0 
+26 0 40 0 0 1 0 0 1
+3 0 40 40
+4 0 40
+3 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40 2
+6 0 40 40
+8 0 40 0 40
+4 0 40 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40 0 1 0 0 1
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 26
jcnd=40/40 0x3877c7a659 0 
* 0 
+6 0 40
+4 0 40 0 0 0 0 0 0 0 0 40 8
jcnd=16/40 0x3877c7a2e3 0 
* 0 
+6 0 24 24
+4 0 24
+7 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+4 0 24
+7 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a285 0 
* 0 
+31 0 1580 0 0 1 0 0 1
+3 0 1580 0 1580
+4 0 1580
jump=1580 0x3877c79b99 0 
* 0 
+36 0 1241 1241 0 1 2 0 1 2
+4 0 1241 1241
+4 0 1241
+3 0 1241 1241
+4 0 1241
+4 0 1241
+3 0 1241
+3 0 1241 1241
+4 0 1241 0 0 0 0 0 0 0 0 1241
+6 0 1241 1241
+4 0 1241 0 0 0 0 0 0 0 0 1241
+6 0 1241 1241 0 1 0 0 1
+8 0 1241 0 1241
+4 0 1241 0 1241
+4 0 1241 0 0 0 0 0 0 0 0 1241 10
jcnd=419/1241 +38 0 
* 0 
+2 0 822 822 0 0 2 0 0 2
+4 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
+2 0 822 822
+5 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822
+4 0 822 0 822
+4 0 822 822
+4 0 822 0 822
+4 0 822
+4 0 822 0 0 0 0 0 0 0 0 822
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 8
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 1220 1220
+4 0 1220 1220 0 1 0 0 1
+4 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220
+4 0 1220
+7 0 1220 0 1220 0 0 8 0 0 8
+4 0 1220 0 1220
+4 0 1220 0 1220
+4 0 1220 0 1220
+4 0 1220 0 0 0 0 0 0 0 0 1220 4
jcnd=754/1220 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 754
+7 0 754 0 0 0 0 0 0 0 0 754 4
jcnd=490/754 +18 0 
* 0 
+2 0 271 0 271
+8 0 271 0 271
+8 0 271
+7 0 271 0 271 0 0 2 0 0 2
+4 0 271
+3 0 271
+3 0 271
+4 0 271
+3 0 271
+4 0 271
+3 0 271
+3 0 271
+4 0 271 0 271
+4 0 271 0 271 0 0 1 0 0 1
+4 0 271
jump=271 +71 0 
* 0 
-46 0 973 0 0 1 0 0 1
+7 0 973 0 973
+4 0 973
+3 0 973
+3 0 973
+4 0 973
+3 0 973
+4 0 973
+3 0 973
+3 0 973
+4 0 973 0 973
+4 0 973 0 973
+4 0 973
jump=973 +71 0 
* 0 
+40 0 106 0 0 1 0 0 1
+3 0 106
jump=106 0x3877c79abc 0 
* 0 
+5 0 37
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37 2
jcnd=37/37 +7 0 
* 0 
+7 0 1281
+4 0 1281 0 0 1 0 0 1
+3 0 1281
+3 0 1281 0 1281
cfn=(104)
calls=1281 0x3877c77180 0 
* 0 5124 2562 0 1 0 0 1 0 0 1281
+5 0 1281
+3 0 1281
jump=1281 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1144 0 0 1 0 0 1
+7 0 1144
+2 0 1144
+4 0 1144
+3 0 1144
+3 0 1144 0 1144
+5 0 1144
+3 0 1144
+4 0 1144
+3 0 1144 0 0 1 0 0 1
+4 0 1144
+4 0 1144
+3 0 1144
+4 0 1144 0 1144
+4 0 1144 0 1144 0 0 42 0 0 42
+4 0 1144
+3 0 1144
+3 0 1144 0 1144
cfn=(104)
calls=1144 0x3877c77180 0 
* 0 4576 2288 0 0 0 0 0 0 0 1144 2
+5 0 1144
+3 0 1144
jump=1144 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 40 40 0 1 0 0 1
+4 0 40
jump=40 0x3877c7a10e 0 
* 0 
+5 0 40 40
+5 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 0x3877c7a14b 0 
* 0 

totals: 35839976 15038387 8450323 245 143 273 245 143 273 903669 10316 15530 320
