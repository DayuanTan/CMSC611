version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 461


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 552835185 - 553478122
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 946 0 0 1 0 0 1
+3 0 946 0 0 0 0 0 0 0 0 946
+2 0 946
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=946 0x3877c7b8b0 0 
* 0 104587 26745 13363 21 4 0 21 4 0 25555 445
* 0 946 946 0 1 1 0 1 1 0 0 0 946

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 946 0 946 1 0 0 1
+1 0 946
+5 0 946
+3 0 946 0 946
+1 0 946
+4 0 946 0 0 1 0 0 1
+3 0 946
+4 0 946
+3 0 946 0 946 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=946 0x3877c7aa50 0 
* 0 254336 36351 36089 46 39 44 46 39 44 42923 1534
* 0 946 946 0 1 1 0 1 1 0 0 0 946
+5 0 946
+3 0 946 0 0 0 0 0 0 0 0 946
jcnd=946/946 +96 0 
* 0 
+96 0 946 0 0 1 0 0 1
+4 0 946 946
+1 0 946 946
+1 0 946 946

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 233 0 233 1 0 0 1
+1 * 233
+3 * 233
+4 * 233 0 233
+4 * 233 0 233
+4 +1 233 233
+4 * 233
+3 * 233 0 233
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=233 0x402d74 645 
* * 3029 1398 466
+5 * 233
+3 * 233 0 233
+3 +1 233 233
+6 * 233 0 233
+3 * 233 233
+6 * 233 0 233
+3 +1 233 233
+6 * 233 0 233 1 0 0 1
+3 * 233 233
+6 * 233 0 233
+3 +2 233 0 233
+7 * 233
jump=233 +86 * 
* * 
+2 +1 27494 27494
+3 * 27494
+3 * 27494 27494
+4 * 27494
+3 * 27494
+3 * 27494 0 27494
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=27494 0x402d9a 770 
* * 302434 137470 82482
+5 * 27494 27494
+4 * 27494 27494
+5 * 27494
+4 * 27494 0 27494
+5 +1 27494 27494
+3 * 27494
+3 * 27494 27494
+4 * 27494
+3 * 27494
+3 * 27494 0 27494
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=27494 0x402dba 770 
* * 302434 137470 82482 1 0 0 1
+5 * 27494 27494
+2 * 27494
+4 * 27494 27494
+5 * 27494
+4 * 27494 0 27494
+5 -2 27494 0 27494
+4 * 27494 27494
+3 * 27494
+3 * 27494 27494
+3 * 27494 0 0 0 0 0 0 0 0 27494 234
jcnd=27261/27494 -93 +1 
* * 
-9 * 233 233 0 1 0 0 1
+3 * 233
+3 * 233 233
+3 * 233 0 0 0 0 0 0 0 0 233
jcnd=233/233 -93 +1 
* * 
+2 +4 233 233
+3 * 233
+3 * 233
+4 * 233 233 0 1 0 0 1
+5 * 233
+4 * 233
+3 * 233 0 233
+5 +1 233 233
+3 * 233
+3 * 233
+4 * 233 233
+5 * 233
+4 * 233
+3 * 233 0 233
+5 +1 233 0 233
+7 * 233
jump=233 0x4016ee * 
* * 
+2 +1 27494 27494
+3 * 27494
+3 * 27494 27494
+4 * 27494
+3 * 27494 0 0 1 0 0 1
+3 * 27494 0 27494
cfi=(2)
cfn=(146)
calls=27494 0x402dba 770 
* * 302434 137470 82482
+5 * 27494 27494
+2 * 27494
+4 * 27494 27494
+5 * 27494 0 27494
+5 +1 27494 27494
+3 * 27494
+3 * 27494 27494
+4 * 27494
+3 * 27494
+3 * 27494 0 27494
cfi=(2)
cfn=(144)
calls=27494 0x402d9a 770 
* * 302434 137470 82482
+5 * 27494 27494
+4 * 27494 27494
+5 * 27494 0 27494
+5 +1 27494 27494
+5 * 27494 27494
+5 * 27494 27494
+5 * 27494
+4 * 27494 0 27494
+5 +1 27494 27494
+5 * 27494 27494
+5 * 27494 27494
+5 * 27494
+4 * 27494 0 27494
+5 -4 27494 0 27494
+4 * 27494 27494
+3 * 27494
+3 * 27494 27494
+3 * 27494 0 0 0 0 0 0 0 0 27494 234
jcnd=27261/27494 0x401672 +1 
* * 
-9 * 233 233 0 1 0 0 1
+3 * 233
+3 * 233 233
+3 * 233 0 0 0 0 0 0 0 0 233
jcnd=233/233 0x401672 +1 
* * 
+6 +6 233 233 0 1 0 0 1
+5 * 233 233
+5 * 233 0 233
+5 +2 233 233
+3 +1 233 0 233
+3 * 233 233
+5 * 233 233
+1 * 233 233

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 233
+7 * 233
+7 * 233
+3 * 233
+3 * 233 0 233
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=233 0x4030b2 310 
* * 231040 66320 61852 65 22 16 65 22 16 14821 745 930 116
+5 * 233
+7 * 233
+7 * 233
+3 * 233
+3 * 233 0 233
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=233 0x402ff4 310 
* * 232355 66043 60691 45 11 31 45 11 31 15188 737 930
+5 * 233 0 0 1 0 0 1
+7 * 233
+7 * 233
+3 * 233
+3 * 233 0 233
cfn=(142)
calls=233 0x401585 -52 
* * 2874521 1270549 663817 8 0 0 8 0 0 55454 468
+5 * 233 0 233
+8 * 233 233
+6 * 233 0 233
+6 * 233
+7 * 233
+3 * 233 0 233
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=233 0x402df4 414 
* * 57688 18079 12855 33 6 0 33 6 0 6295 204 466
+5 * 233
+7 * 233
+3 * 233 0 233 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=233 0x402e74 414 
* * 61000 19351 13771 7 0 0 7 0 0 7255 15 466
+5 +2 233
+7 * 233
+7 * 233
+3 * 233
+3 * 233 0 233
cfi=(2)
cfn=(4)
calls=233 0x4030b2 310 
* * 230701 66296 61748 2 0 1 2 0 1 14794 472 930
+5 * 233
+7 * 233
+7 * 233
+3 * 233
+3 * 233 0 233
cfi=(2)
cfn=(80)
calls=233 0x402ff4 310 
* * 231418 65983 60543 0 0 2 0 0 2 15041 427 930
+5 * 233 233
+6 * 233 0 0 1 0 0 1
+7 * 233
+7 * 233 0 233
+6 * 233 233
+8 * 233
+3 * 233
+3 * 233 0 233
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=233 0x401719 -33 
* * 1333459 555006 305929 4 0 0 4 0 0 27727 234
+5 * 233 0 233
+8 * 233 233
+6 * 233 0 233
+6 * 233
+7 * 233 0 0 1 0 0 1
+3 * 233 0 233
cfi=(2)
cfn=(148)
calls=233 0x402df4 414 
* * 57688 18079 12855 0 0 0 0 0 0 6295 202 466
+5 * 233
+7 * 233
+3 * 233 0 233
cfi=(2)
cfn=(178)
calls=233 0x402e74 414 
* * 61000 19351 13771 0 0 0 0 0 0 7255 13 466
+5 +2 233 233
+7 * 233
+3 * 233 0 233
cfi=(2)
cfn=(2)
calls=233 0x402d74 645 
* * 3029 1398 466
+5 * 233 233
+6 * 233
+3 * 233
+3 * 233
+3 * 233 233
+7 * 233
+3 * 233 0 0 1 0 0 1
+3 * 233 0 233
cfi=(2)
cfn=(144)
calls=233 0x402d9a 770 
* * 2563 1165 699
+5 * 233
+3 * 233
+7 * 233
+3 * 233
+3 * 233 0 233
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=233 0x402eda 901 
* * 25751 9358 7288 41 24 11 41 24 11 1224 76 41
+5 +1 233 233
+7 * 233
+3 * 233 0 233
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=233 0x402f54 645 
* * 3029 1398 466 0 1 0 0 1
+5 * 233 233
+6 * 233
+3 * 233
+3 * 233
+3 * 233 233
+7 * 233 0 0 1 0 0 1
+3 * 233
+3 * 233 0 233
cfi=(2)
cfn=(146)
calls=233 0x402dba 770 
* * 2563 1165 699
+5 * 233
+3 * 233
+7 * 233
+3 * 233
+3 * 233 0 233
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=233 0x402f7a 901 
* * 24908 9136 7094 19 20 16 19 20 16 1054 48 41
+5 +1 233 233
+7 * 233
+3 * 233 0 233
cfi=(2)
cfn=(10)
calls=233 0x402f54 645 
* * 3029 1398 466
+5 * 233 233
+6 * 233
+3 * 233
+3 * 233
+3 * 233 233 0 1 0 0 1
+7 * 233
+3 * 233
+3 * 233 0 233
cfi=(2)
cfn=(146)
calls=233 0x402dba 770 
* * 2563 1165 699
+5 * 233 233
+2 * 233
+4 * 233 233
+8 * 233 233
+8 * 233 0 233
+8 +1 233 233
+7 * 233
+3 * 233 0 233
cfi=(2)
cfn=(2)
calls=233 0x402d74 645 
* * 3029 1398 466
+5 * 233 233 0 1 0 0 1
+6 * 233
+3 * 233
+3 * 233
+3 * 233 233
+7 * 233
+3 * 233
+3 * 233 0 233
cfi=(2)
cfn=(144)
calls=233 0x402d9a 770 
* * 2563 1165 699
+5 * 233 233
+4 * 233 233
+8 * 233
+4 * 233 233
+8 * 233
+3 * 233 0 233
+8 +2 233 0 233
+7 -12 233 233
+8 * 233 233
+7 * 233 0 0 0 0 0 0 0 0 233 1
jcnd=1/233 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 233
+7 * 233
+3 * 233 0 233
cfi=(2)
cfn=(2)
calls=233 0x402d74 645 
* * 3029 1398 466 2 0 1 2 0 1
+5 * 233
+3 * 233 233
+7 * 233
+3 * 233 0 233
cfi=(2)
cfn=(2)
calls=233 0x402d74 645 
* * 3029 1398 466 0 1 0 0 1
+5 * 233
+3 * 233 0 0 0 0 0 0 0 0 233
+2 * 233 0 0 1 0 0 1
+5 * 233
jump=233 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 233
+2 * 233 0 0 0 0 0 0 0 0 233
jcnd=233/233 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 233 0 233
+1 * 233
+3 * 233
+4 * 233 0 233
+4 * 233 0 233
+4 * 233 0 233
+5 +1 233 233
+4 * 233
+3 * 233 0 233
cfi=(2)
cfn=(2)
calls=233 0x402d74 645 
* * 3029 1398 466
+5 * 233
+3 * 233 0 233
+3 +1 233 233 0 1 0 0 1
+6 * 233 0 233
+3 * 233 233
+6 * 233 0 233
+3 +2 233 0 233
+7 * 233
jump=233 +86 * 
* * 
+2 +1 27494 27494
+3 * 27494
+3 * 27494 27494
+4 * 27494
+3 * 27494
+3 * 27494 0 27494
cfi=(2)
cfn=(144)
calls=27494 0x402d9a 770 
* * 302434 137470 82482
+5 * 27494 27494
+4 * 27494 27494
+5 * 27494
+4 * 27494 0 27494
+5 +1 27494 27494
+3 * 27494
+3 * 27494 27494
+4 * 27494
+3 * 27494
+3 * 27494 0 27494
cfi=(2)
cfn=(146)
calls=27494 0x402dba 770 
* * 302434 137470 82482
+5 * 27494 27494
+2 * 27494
+4 * 27494 27494
+5 * 27494
+4 * 27494 0 27494
+5 -2 27494 0 27494
+4 * 27494 27494
+3 * 27494
+3 * 27494 27494
+3 * 27494 0 0 0 0 0 0 0 0 27494 234
jcnd=27261/27494 -93 +1 
* * 
-9 * 233 233 0 1 0 0 1
+3 * 233
+3 * 233 233
+3 * 233 0 0 0 0 0 0 0 0 233
jcnd=233/233 -93 +1 
* * 
+2 +4 233 233
+3 * 233
+3 * 233 0 0 1 0 0 1
+4 * 233 233
+5 * 233
+4 * 233
+3 * 233 0 233
+5 +1 233 233
+3 * 233
+3 * 233
+4 * 233 233
+5 * 233
+4 * 233
+3 * 233 0 233
+5 +1 233 233
+5 * 233 233
+5 * 233 233
+5 * 233 0 0 1 0 0 1
+4 * 233
+3 * 233 0 233
+5 +2 233 233
+3 +1 233 0 233
+3 * 233 233
+5 * 233 233
+1 * 233 233

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 466
+4 * 466
+3 * 466 0 466
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=466 0x4044cc -35 
* * 2330 932 932
+5 * 466 466
+1 * 466 466

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 466 0 466 1 0 0 1
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466 1 0 0 1
+4 +1 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=466 0x4049d4 -35 
* * 2796 932 1398 1 0 0 1
+5 * 466 466
+1 * 466 466

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 466 0 466 1 0 0 1
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 466
+4 * 466
+3 * 466 0 466
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=466 0x404520 -35 
* * 2330 932 932
+5 * 466 466
+1 * 466 466

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 466 0 466 1 0 0 1
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=466 0x404a28 -35 
* * 2796 932 1398 1 0 1 1 0 1
+5 * 466 466
+1 * 466 466

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 466 0 466 1 0 0 1
+1 * 466
+3 * 466 0 466
+4 * 466 466
+4 * 466 466
+1 * 466 466

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 233 0 233
+1 * 233
+3 * 233
+4 * 233 0 233
+4 * 233 0 233
+4 * 233 0 233
+4 +1 233 233
+4 * 233 233
+4 * 233 233
+4 * 233
+3 * 233
+3 * 233 0 233
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=233 0x40406a -87 
* * 5592 1864 2097 0 15 7 0 15 7 233
+5 * 233 233
+1 * 233 233

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 466 0 466
+1 * 466
+3 * 466 0 466
+4 * 466 466
+4 * 466 466
+1 * 466 466

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 233 0 233
+1 * 233
+3 * 233
+4 * 233 0 233
+4 * 233 0 233
+4 * 233 0 233
+4 +1 233 233
+4 * 233 233
+4 * 233 233
+4 * 233
+3 * 233
+3 * 233 0 233
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=233 0x403df2 -87 
* * 5592 1864 2097 0 16 3 0 16 3 233
+5 * 233 233
+1 * 233 233

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 932 0 932 1 0 0 1
+1 * 932
+3 * 932 0 932
+4 +1 932 932
+4 * 932 932
+1 * 932 932

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 932 0 932 1 0 0 1
+1 * 932
+3 * 932
+4 * 932 0 932
+4 +1 932
+4 * 932
+3 * 932 0 932 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=932 0x40500c 790 
* * 5592 2796 1864 1 0 0 1
+5 * 932 932
+3 * 932 932
+1 * 932 932

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 536 0 536
+1 * 536
+3 * 536 0 536
+4 +1 536 536
+4 * 536 536
+1 * 536 536

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 932 0 932 1 0 0 1
+1 * 932
+3 * 932 0 932
+4 +1 932 932 0 1 0 0 1
+4 * 932 932
+1 * 932 932

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 536 0 536
+1 * 536
+3 * 536 0 536 0 0 1 0 0 1
+4 +1 536 536
+4 * 536 536
+1 * 536 536

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 932 0 932 1 0 0 1
+1 * 932
+3 * 932
+4 * 932 0 932
+4 +1 932
+4 * 932
+3 * 932 0 932
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=932 0x404ffe 790 
* * 5592 2796 1864 1 0 0 1
+5 * 932 932
+3 * 932 932
+1 * 932 932

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 466 0 466
+1 * 466
+3 * 466 0 466
+4 * 466 0 466
+4 * 466 466
+4 * 466 466
+1 * 466 466

fl=(5)
fn=(28)
0x404992 113 487 0 487 1 0 0 1
+1 * 487
+3 * 487 0 487
+4 +1 487
+10 * 487 487
+1 * 487 487

fn=(176)
0x4044cc 86 466 0 466
+1 * 466
+3 * 466 0 466
+4 * 466 466
+1 * 466 466

fn=(224)
0x403df2 129 233 0 233
+1 * 233
+3 * 233
+4 * 233 0 233
+4 * 233 0 233
+4 * 233 0 233
+4 +1 233 233
+4 * 233
+3 * 233
+5 * 233 0 233
cfi=(16)
cfn=(226)
calls=233 0x402d61 -20 
* * 1631 699 699
+5 * 233
+3 * 233 0 0 0 0 0 0 0 0 233
+2 * 233 233
+4 * 233 233 0 0 16 0 0 16
+2 * 233 0 233 0 0 3 0 0 3
+2 * 233 233
+1 * 233 233

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 473 0 473
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 * 473 0 473
+4 +1 473 473
+4 * 473
+3 * 473 0 473
cob=(5)
cfi=(8)
cfn=(164)
calls=473 0x387e4bb2f0 0 
* * 50857 12565 5764 23 5 0 23 5 0 12286 410 473
* * 473 473 0 1 1 0 1 1 0 0 0 473
+5 * 473 473
+1 * 473 473

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 473 0 473
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 * 473 0 473
+4 +1 473 473
+4 * 473
+3 * 473 0 473
cob=(5)
cfi=(8)
cfn=(164)
calls=473 0x387e4bb2f0 0 
* * 57514 15126 7599 0 0 0 0 0 0 14215 35 473
* * 473 473 0 0 0 0 0 0 0 0 0 473
+5 * 473 473
+1 * 473 473

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 473 0 473 1 0 0 1
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 * 473 0 473
+4 +2 473 473
+4 * 473
+3 * 473 0 473
cfn=(102)
calls=473 0x4048de +12 
* * 2838 946 946 1 0 0 1
+5 * 473 473
+4 * 473 0 0 1 0 0 1
+3 * 473
+2 * 473 0 0 0 0 0 0 0 0 473
jcnd=473/473 +7 +3 
* * 
+7 +3 473 473
+4 * 473
+4 * 473
+3 * 473 0 473
cob=(5)
cfi=(8)
cfn=(32)
calls=473 0x387e4bd0b0 0 
* * 136190 19892 18379 33 18 31 33 18 31 22331 762 473
* * 473 473 0 0 0 0 0 0 0 0 0 473
+5 +1 473 473
+1 * 473 473

fn=(18)
0x404a28 81 466 0 466 1 0 0 1
+1 * 466
+3 * 466 0 466 0 0 1 0 0 1
+4 * 466 0 466
+4 * 466 466
+1 * 466 466

fn=(92)
0x4049d4 81 466 0 466 1 0 0 1
+1 * 466
+3 * 466 0 466
+4 * 466 0 466
+4 * 466 466
+1 * 466 466

fn=(196)
0x404520 86 466 0 466
+1 * 466
+3 * 466 0 466
+4 * 466 466
+1 * 466 466

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 473 0 473 1 0 0 1
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 * 473 0 473 1 0 0 1
+4 +2 473 473
+4 * 473
+3 * 473 0 473
cfn=(28)
calls=473 0x404992 +12 
* * 2838 946 946 1 0 0 1
+5 * 473 473
+4 * 473
+3 * 473
+2 * 473 0 0 0 0 0 0 0 0 473
jcnd=473/473 +7 +3 
* * 
+7 +3 473 473
+4 * 473
+4 * 473
+3 * 473 0 473
cob=(5)
cfi=(8)
cfn=(32)
calls=473 0x387e4bd0b0 0 
* * 133282 20243 20548 17 22 14 17 22 14 21538 772 473
* * 473 473 0 1 1 0 1 1 0 0 0 473
+5 +1 473 473
+1 * 473 473

fn=(102)
0x4048de 113 487 0 487 1 0 0 1
+1 * 487
+3 * 487 0 487
+4 +1 487
+10 * 487 487
+1 * 487 487

fn=(266)
0x40406a 129 233 0 233
+1 * 233
+3 * 233
+4 * 233 0 233
+4 * 233 0 233
+4 * 233 0 233
+4 +1 233 233
+4 * 233
+3 * 233
+5 * 233 0 233
cfi=(16)
cfn=(226)
calls=233 0x402d61 -20 
* * 1631 699 699
+5 * 233
+3 * 233 0 0 0 0 0 0 0 0 233
+2 * 233 233
+4 * 233 233 0 0 15 0 0 15
+2 * 233 0 233 0 0 7 0 0 7
+2 * 233 233
+1 * 233 233

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +2 466 466 0 1 0 0 1
+4 * 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=466 0x404a36 450 
* * 190950 61878 59086 24 3 4 24 3 4 7430 476 928 116
+5 * 466 466
+1 * 466 466

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +2 466 466
+4 * 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=466 0x40439c 107 
* * 203998 66538 63746 7 1 7 7 1 7 7430 461 928
+5 * 466 466
+1 * 466 466

fn=(116)
0x40439c 107 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +10 466 466
+4 * 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=466 0x4047d7 -26 
* * 197474 64208 61416 7 1 7 7 1 7 7430 461 928
+5 +1 466 466
+1 * 466 466

fn=(118)
0x4047d7 91 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +2 466 466
+4 * 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=466 0x4049e2 450 
* * 190950 61878 59086 7 1 7 7 1 7 7430 461 928
+5 * 466 466
+1 * 466 466

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +10 466 466
+4 * 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(52)
calls=466 0x404829 -26 
* * 197474 64208 61416 25 3 4 25 3 4 7430 476 928 116
+5 +1 466 466
+1 * 466 466

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +2 466 466
+4 * 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466 1 0 0 1
cfn=(50)
calls=466 0x404484 107 
* * 203998 66538 63746 25 3 4 25 3 4 7430 476 928 116
+5 * 466 466
+1 * 466 466

fl=(2)
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 466 0 466
+1 * 466
+3 * 466 0 466
+1 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=466 0x4043ca -45 
* * 16776 6058 6524 4 0 4 4 0 4
+5 +1 466 466 0 1 0 0 1
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=466 0x404412 +43 
* * 162679 31594 29098 24 18 8 24 18 8 22185 741 932
+5 * 466
jump=466 +28 * 
* * 
+28 * 466
+4 * 466 466
+1 * 466 466
+1 * 466 466

fn=(14)
0x4043ca 90 466 0 466 1 0 0 1
+1 * 466
+3 * 466
+4 * 466 0 466 0 0 1 0 0 1
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfi=(4)
cfn=(16)
calls=466 0x404804 +24 
* * 8388 2796 3262 2 0 1 2 0 1
+5 * 466 466
+4 * 466 0 466 0 0 2 0 0 2
+7 * 466 466
+4 * 466 0 466 1 0 0 1
+8 * 466 466
+4 * 466 0 466
+8 +1 466 466
+1 * 466 466

fn=(80)
0x402ff4 310 466 0 466 1 0 0 1
+1 * 466
+3 * 466 0 466
+2 * 466 0 466
+2 * 466 0 466
+1 * 466 0 0 1 0 0 1
+4 * 466 0 466
+4 * 466 0 466
+4 +2 466 466
+4 * 466
+3 * 466 0 466
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=466 0x4039fc 117 
* * 2796 1398 932 2 0 0 2
+5 * 466
+3 * 466 0 466
cfi=(3)
cfn=(84)
calls=466 0x4039ed -88 
* * 2796 1398 932
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(2)
calls=466 0x402d74 645 
* * 6058 2796 932
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466
+3 * 466
+3 * 466 0 466 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=466 0x403a0a 134 
* * 191739 40324 36518 30 10 26 30 10 26 22799 703 932
+5 +4 466 466
+4 * 466
+3 * 466 0 466
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=466 0x40325e 113 
* * 2796 1398 932 1 0 0 1
+5 * 466
+3 * 466 466
+4 * 466 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=466 0x403a98 565 
* * 11650 4660 3728 2 0 0 2
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=466 0x403a68 547 
* * 11650 4660 3728
+5 * 466
+3 * 466
+3 * 466
+3 * 466
+3 * 466 0 466
cfi=(11)
cfn=(114)
calls=466 0x403ac9 -60 
* * 210988 68868 66542 7 1 7 7 1 7 7430 461 928
+5 -3 466 466
+4 * 466 0 466
+4 * 466
jump=466 +28 +4 
* * 
+28 +4 466
+4 * 466 466
+1 * 466 466
+2 * 466 466
+2 * 466 466
+1 * 466 466

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 473 0 473 1 0 0 1
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 * 473 0 473
+4 +2 473 473
+5 * 473 0 0 0 0 0 0 0 0 473 7
+2 +1 473 473
+4 * 473 473
+4 * 473 473
+4 * 473
+3 * 473
+3 * 473 0 473
cfi=(5)
cfn=(190)
calls=473 0x40452a -65 
* * 63190 17018 9964 0 0 0 0 0 0 14215 35 946
+5 +1 473 473
+1 * 473 473

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 473 0 473 1 0 0 1
+1 * 473
+3 * 473
+4 * 473 0 473 1 0 0 1
+4 * 473 0 473
+4 0 473 473
+5 0 473 0 0 0 0 0 0 0 0 473
+2 0 473 473
+4 0 473 473
+4 0 473
+5 0 473
+3 0 473
+3 0 473 0 473
fi=(6) ???
cfi=(5)
cfn=(26)
calls=473 0x404730 99 
* 0 145580 24027 24332 21 23 14 21 23 14 22011 772 946
+5 0 473
fi=(6)
jump=473 +7 0 
* 0 
+7 0 473 473
+1 0 473 473

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 466 0 466 1 0 0 1
+1 * 466
+3 * 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+4 * 466 0 466
+4 * 466
+4 * 466 0 0 1 0 0 1
+4 * 466
+3 * 466
+3 * 466 0 466
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=466 0x404468 726 
* * 4660 2330 1864 1 0 0 1
+5 * 466 466
+4 * 466 466
+1 * 466 466

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+3 * 466 0 466
+4 * 466
+4 * 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfi=(10)
cfn=(44)
calls=466 0x404468 726 
* * 4660 2330 1864
+5 * 466 466
+4 * 466 466
+1 * 466 466

fn=(86)
0x403a0a 134 466 0 466
+1 * 466
+3 * 466 0 466
+1 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=466 0x4042e2 -45 
* * 16776 6058 6524 5 0 0 5
+5 +1 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=466 0x40432a +43 
* * 164711 31004 26732 24 10 26 24 10 26 22799 703 932
+5 * 466
jump=466 +28 * 
* * 
+28 * 466
+4 * 466 466
+1 * 466 466
+1 * 466 466

fn=(88)
0x4042e2 90 466 0 466 1 0 0 1
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466 1 0 0 1
cfi=(4)
cfn=(90)
calls=466 0x4047b2 +24 
* * 8388 2796 3262 3 0 0 3
+5 * 466 466
+4 * 466 0 466
+7 * 466 466
+4 * 466 0 466
+8 * 466 466
+4 * 466 0 466
+8 +1 466 466
+1 * 466 466

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 466 0 466 1 0 0 1
+1 * 466
+3 * 466 0 466
+1 * 466
+4 * 466 0 466
+4 +2 466 466
+4 * 466 466 0 1 0 0 1
+4 * 466
+3 * 466 466
+4 * 466 466
+3 * 466
+3 * 466
+3 * 466
+4 * 466
+3 * 466 466
+4 * 466 466
+3 -1 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=466 0x403ce6 +11 
* * 63184 17052 10332 24 6 0 24 6 0 12590 406 932
+5 +1 466 466
+4 * 466
+3 * 466 0 466
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=466 0x4031b8 -82 
* * 10718 3728 3728 1 0 0 1
+5 * 466
jump=466 +28 * 
* * 
+28 * 466
+4 * 466 466
+1 * 466 466
+1 * 466 466

fn=(172)
0x4031b8 79 466 0 466 1 0 0 1
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 466
+4 * 466
+3 * 466 0 466
cfi=(4)
cfn=(174)
calls=466 0x403ccc +42 
* * 6524 2330 2330
+5 * 466 466
+1 * 466 466

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10)
0x402f54 645 960 0 960 1 0 0 1
+1 * 960
+3 * 960 0 960
+4 +1 960 960
+4 * 960 960 0 0 2 0 0 2
+4 * 960
+3 * 960 960
+4 * 960 960
+3 * 960
+3 * 960
+3 * 960
+4 * 960 960
+1 * 960 960

fn=(106)
0x40325e 113 953 0 953 1 0 0 1
+1 * 953
+3 * 953 0 953
+4 +1 953 953
+4 * 953 953
+1 * 953 953

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 480 0 480 1 0 0 1
+1 * 480
+3 * 480 0 480 0 0 1 0 0 1
+4 +1 480 480
+4 * 480 480
+1 * 480 480

fn=(82)
0x4039fc 117 480 0 480 1 0 0 1
+1 * 480
+3 * 480 0 480 1 0 0 1
+4 +1 480 480
+4 * 480 480
+1 * 480 480

fn=(200)
0x402eda 901 233 0 233
+1 * 233
+3 * 233
+4 * 233 0 233
+4 * 233 0 233
+4 +2 233 233
+4 * 233 233
+4 * 233 233
+4 * 233 233
+4 * 233
+3 * 233 0 0 0 0 0 0 0 0 233 9
jcnd=7/233 +51 +10 
* * 
+2 +3 226 226
+4 * 226 226
+4 * 226 226
+4 -1 226 226
+4 * 226
+3 * 226
+3 * 226 0 226
cfi=(3)
cfn=(222)
calls=226 0x403373 215 
* * 8588 2938 3164 0 15 2 0 15 2 226
+5 +2 226 226
+4 * 226 226
+4 * 226
+4 * 226 226
+4 * 226 0 226
+4 * 226
jump=226 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 10972 3356 2910 38 9 9 38 9 9 765 67 41
+5 +2 233 233
+1 * 233 233

fn=(4)
0x4030b2 310 466 0 466 1 0 0 1
+1 * 466
+3 * 466 0 466
+2 * 466 0 466
+2 * 466 0 466
+1 * 466
+4 * 466 0 466 1 0 0 1
+4 * 466 0 466
+4 +2 466 466
+4 * 466
+3 * 466 0 466
cfn=(6)
calls=466 0x403b08 117 
* * 2796 1398 932 1 0 1 1 0 1
+5 * 466
+3 * 466 0 466
cfi=(3)
cfn=(8)
calls=466 0x403afa -88 
* * 2796 1398 932 1 0 0 1
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(10)
calls=466 0x402f54 645 
* * 6058 2796 932 1 1 0 1 1
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466
+3 * 466
+3 * 466 0 466
cfn=(12)
calls=466 0x403b16 134 
* * 189707 40914 38884 29 18 12 29 18 12 22185 741 932
+5 +4 466 466 0 1 0 0 1
+4 * 466
+3 * 466 0 466
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=466 0x40333c 113 
* * 2796 1398 932 2 0 0 2
+5 * 466
+3 * 466 466
+4 * 466 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(42)
calls=466 0x403ba4 565 
* * 11650 4660 3728 3 0 0 3
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(46)
calls=466 0x403b74 547 
* * 11650 4660 3728
+5 * 466
+3 * 466
+3 * 466
+3 * 466
+3 * 466 0 466 1 0 0 1
cfi=(11)
cfn=(48)
calls=466 0x403bd5 -60 
* * 210988 68868 66542 26 3 4 26 3 4 7430 476 928 116
+5 -3 466 466
+4 * 466 0 466
+4 * 466
jump=466 +28 +4 
* * 
+28 +4 466
+4 * 466 466
+1 * 466 466
+2 * 466 466
+2 * 466 466
+1 * 466 466

fn=(108)
0x403a98 565 466 0 466 1 0 0 1
+1 * 466
+3 * 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+4 * 466 0 466
+4 * 466
+4 * 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=466 0x404380 726 
* * 4660 2330 1864 1 0 0 1
+5 * 466 466
+4 * 466 466
+1 * 466 466

fn=(178)
0x402e74 414 466 0 466
+1 * 466
+3 * 466 0 466
+1 * 466
+4 * 466 0 466 1 0 0 1
+4 +2 466 466
+4 * 466
+3 * 466 0 466
cfn=(40)
calls=466 0x40333c 113 
* * 2796 1398 932
+5 * 466
+3 * 466 466
+4 * 466 466
+4 * 466 466
+4 * 466 466
+3 -1 466
+3 * 466
+3 * 466 0 466
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=466 0x40334a 148 
* * 14446 4660 5592 2 0 0 2
+5 +1 466 466
+4 * 466
+3 * 466 0 466
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=466 0x4032ca 159 
* * 93574 28450 18222 3 0 0 3 0 0 14510 28 932
+5 * 466
jump=466 +28 * 
* * 
+28 * 466 0 0 1 0 0 1
+4 * 466 466
+1 * 466 466
+1 * 466 466

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 473 0 473 1 0 0 1
+1 * 473 0 0 1 0 0 1
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 0 473 473
+5 0 473 0 0 0 0 0 0 0 0 473
+2 0 473 473
+4 0 473 473
+4 0 473
+5 0 473
+3 0 473
+3 0 473 0 473
fi=(6)
cfi=(5)
cfn=(100)
calls=473 0x40461a 99 
* 0 148488 23676 22163 36 18 31 36 18 31 22804 762 946
+5 0 473
fi=(6)
jump=473 +7 0 
* 0 
+7 0 473 473
+1 0 473 473

fn=(144)
0x402d9a 770 82948 0 82948
+1 * 82948
+3 * 82948 0 82948
+4 * 82948 0 82948
+4 +1 82948 82948
+4 * 82948 82948
+3 * 82948 82948
+4 * 82948
+4 * 82948
+3 * 82948 82948
+1 * 82948 82948

fn=(146)
0x402dba 770 82948 0 82948
+1 * 82948
+3 * 82948 0 82948 1 0 0 1
+4 * 82948 0 82948
+4 +1 82948 82948
+4 * 82948 82948
+3 * 82948 82948
+4 * 82948
+4 * 82948
+3 * 82948 82948
+1 * 82948 82948

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 466
+4 * 466
+3 * 466 0 466
cfi=(4)
cfn=(194)
calls=466 0x403d7e +42 
* * 6524 2330 2330 1 0 0 1
+5 * 466 466
+1 * 466 466

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 466 0 466 1 0 0 1
+1 * 466
+3 * 466 0 466
+1 * 466
+4 * 466 0 466
+4 +2 466 466
+4 * 466 466
+4 * 466
+3 * 466 466
+4 * 466 466
+3 * 466
+3 * 466
+3 * 466
+4 * 466
+3 * 466 466
+4 * 466 466
+3 -1 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(188)
calls=466 0x403d98 +11 
* * 69808 19596 12164 1 0 0 1 0 0 14510 28 932
+5 +1 466 466
+4 * 466
+3 * 466 0 466
cfn=(192)
calls=466 0x403296 -82 
* * 10718 3728 3728 1 0 0 1
+5 * 466
jump=466 +28 * 
* * 
+28 * 466
+4 * 466 466
+1 * 466 466
+1 * 466 466

fn=(2)
0x402d74 645 1892 0 1892 1 0 0 1
+1 * 1892
+3 * 1892 0 1892 0 0 1 0 0 1
+4 +1 1892 1892
+4 * 1892 1892 0 1 1 0 1 1
+4 * 1892
+3 * 1892 1892
+4 * 1892 1892
+3 * 1892
+3 * 1892
+3 * 1892
+4 * 1892 1892
+1 * 1892 1892

fn=(20)
0x404412 179 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 +2 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(22)
calls=466 0x404236 -14 
* * 151029 26002 25836 23 18 8 23 18 8 22185 741 932
+5 * 466 466
+4 * 466 0 466
+3 +1 466 466
+4 * 466 466 0 1 0 0 1
+3 * 466 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+3 * 466 466
+4 * 466
+4 * 466
+3 * 466 466
+4 * 466 0 466
+4 +1 466 466
+1 * 466 466

fn=(94)
0x40432a 179 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 +2 466 466
+4 * 466 466 0 1 0 0 1
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(96)
calls=466 0x403fbe -14 
* * 153061 25412 23470 23 10 26 23 10 26 22799 703 932
+5 * 466 466
+4 * 466 0 466
+3 +1 466 466
+4 * 466 466
+3 * 466 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+3 * 466 466
+4 * 466
+4 * 466
+3 * 466 466
+4 * 466 0 466
+4 +1 466 466
+1 * 466 466

fn=(244)
0x402f7a 901 233 0 233
+1 * 233
+3 * 233 0 0 1 0 0 1
+4 * 233 0 233
+4 * 233 0 233
+4 +2 233 233
+4 * 233 233
+4 * 233 233
+4 * 233 233
+4 * 233
+3 * 233 0 0 0 0 0 0 0 0 233
jcnd=7/233 +51 +10 
* * 
+2 +3 226 226
+4 * 226 226
+4 * 226 226
+4 -1 226 226
+4 * 226
+3 * 226
+3 * 226 0 226
cfi=(3)
cfn=(264)
calls=226 0x4036b1 215 
* * 8588 2938 3164 0 15 4 0 15 4 226
+5 +2 226 226
+4 * 226 226
+4 * 226
+4 * 226 226
+4 * 226 0 226
+4 * 226
jump=226 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246)
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10129 3134 2716 18 5 12 18 5 12 595 48 41
+5 +2 233 233
+1 * 233 233

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40)
0x40333c 113 953 0 953 1 0 0 1
+1 * 953
+3 * 953 0 953 1 0 0 1
+4 +1 953 953
+4 * 953 953
+1 * 953 953

fn=(112)
0x403a68 547 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 +1 466 466
+4 * 466 466
+3 * 466 0 466
+4 * 466
+4 * 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfi=(10)
cfn=(110)
calls=466 0x404380 726 
* * 4660 2330 1864
+5 * 466 466
+4 * 466 466
+1 * 466 466

fn=(148)
0x402df4 414 466 0 466
+1 * 466
+3 * 466 0 466
+1 * 466
+4 * 466 0 466 1 0 0 1
+4 +2 466 466
+4 * 466
+3 * 466 0 466
cfn=(106)
calls=466 0x40325e 113 
* * 2796 1398 932
+5 * 466
+3 * 466 466
+4 * 466 466
+4 * 466 466
+4 * 466 466
+3 -1 466
+3 * 466
+3 * 466 0 466
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=466 0x40326c 148 
* * 14446 4660 5592 4 0 0 4
+5 +1 466 466
+4 * 466
+3 * 466 0 466
cfn=(156)
calls=466 0x4031ec 159 
* * 86950 25906 16390 27 6 0 27 6 0 12590 406 932
+5 * 466
jump=466 +28 * 
* * 
+28 * 466 0 0 1 0 0 1
+4 * 466 466
+1 * 466 466
+1 * 466 466

fn=(158)
0x403ce6 171 473 0 473 1 0 0 1
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 * 473 0 473
+4 +2 473 473
+5 * 473 0 0 0 0 0 0 0 0 473
+2 +1 473 473
+4 * 473 473
+4 * 473 473
+4 * 473
+3 * 473
+3 * 473 0 473
cfi=(5)
cfn=(160)
calls=473 0x4044d6 -65 
* * 56533 14457 8129 24 6 0 24 6 0 12286 410 946
+5 +1 473 473
+1 * 473 473

fl=(12)
fn=(54)
0x404a36 450 466 0 466
+1 * 466
+3 * 466 0 466
+1 * 466
+4 * 466 0 466 1 0 0 1
+4 * 466 0 466
+4 * 466 0 466
+4 +10 466 466
+4 * 466
+3 * 466 0 466
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=466 0x404c38 288 
* * 6990 2796 2330 3 0 0 3
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(56)
calls=466 0x404c38 288 
* * 6990 2796 2330
+5 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=466 0x404c52 -36 
* * 166718 53490 50698 20 3 4 20 3 4 7430 476 928 116
+5 +1 466
+4 * 466 466
+1 * 466 466
+1 * 466 466

fn=(60)
0x404c52 424 466 0 466
+1 * 466
+3 * 466 0 466
+2 * 466 0 466
+1 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +4 466 466
+4 * 466
+3 * 466 0 466
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=466 0x40492d 277 
* * 6990 2796 2330 2 0 0 2
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=466 0x404d9d 277 
* * 11650 4194 3728 2 0 1 2 0 1
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(66)
calls=466 0x404d9d 277 
* * 11650 4194 3728
+5 * 466
+3 * 466
+3 * 466
+3 * 466 0 466
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=466 0x404db7 -49 
* * 123380 39044 36252 15 3 3 15 3 3 7430 476 928 116
+5 +1 466
+4 * 466 466
+1 * 466 466
+2 * 466 466
+1 * 466 466

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 508 0 508 1 0 0 1
+1 * 508
+3 * 508
+4 * 508 0 508
+4 +1 508 508
+4 * 508
+3 * 508 0 508 1 0 0 1
cfi=(13)
cfn=(64)
calls=508 -33 -66 
* * 3048 1524 1016
+5 * 508 508
+1 * 508 508

fn=(66)
0x404d9d 277 932 0 932
+1 * 932
+3 * 932
+4 * 932 0 932
+4 +1 932 932
+4 * 932
+3 * 932 0 932
cfi=(13)
cfn=(68)
calls=932 0x404f1a -58 
* * 14912 5592 4660 2 0 1 2 0 1
+5 * 932 932
+1 * 932 932

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 466 0 466
+1 * 466
+3 * 466 0 466
+1 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +10 466 466
+4 * 466
+3 * 466 0 466
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=466 0x404bc6 288 
* * 6990 2796 2330 3 0 0 3
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(122)
calls=466 0x404bc6 288 
* * 6990 2796 2330
+5 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=466 0x404be0 -36 
* * 166718 53490 50698 4 1 7 4 1 7 7430 461 928
+5 +1 466
+4 * 466 466
+1 * 466 466
+1 * 466 466

fn=(128)
0x404878 277 508 0 508
+1 * 508
+3 * 508
+4 * 508 0 508 1 0 0 1
+4 +1 508 508
+4 * 508
+3 * 508 0 508
cfi=(13)
cfn=(130)
calls=508 -33 -66 
* * 3048 1524 1016 0 0 1 0 0 1
+5 * 508 508
+1 * 508 508

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 932 0 932
+1 * 932
+3 * 932
+4 * 932 0 932
+4 +1 932 932
+4 * 932
+3 * 932 0 932
cfi=(13)
cfn=(134)
calls=932 0x404e98 -58 
* * 14912 5592 4660 2 0 0 2
+5 * 932 932
+1 * 932 932

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +8 466 0 466
+4 +3 466 466
+4 * 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=466 0x404eb5 -22 
* * 116390 36714 33456 1 1 7 1 1 7 7430 461 928
+5 +1 466 466
+1 * 466 466

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 932 0 932 1 0 0 1
+1 * 932
+3 * 932
+4 * 932 0 932
+4 +1 932 932
+4 * 932
+3 * 932 0 932
cfi=(13)
cfn=(124)
calls=932 0x404d36 -77 
* * 5592 2796 1864 2 0 0 2
+5 * 932 932
+1 * 932 932

fn=(56)
0x404c38 288 932 0 932 1 0 0 1
+1 * 932
+3 * 932
+4 * 932 0 932 1 0 0 1
+4 +1 932 932
+4 * 932
+3 * 932 0 932
cfi=(13)
cfn=(58)
calls=932 0x404d8f -77 
* * 5592 2796 1864 1 0 0 1
+5 * 932 932
+1 * 932 932

fn=(74)
0x404f37 368 480 0 480
+1 * 480
+3 * 480
+4 * 480 0 480 1 0 0 1
+4 * 480 0 480
+4 * 480 0 480
+4 +2 480 480
+4 * 480 480
+4 * 480
+3 * 480
+3 * 480
+4 * 480 0 480
+4 +1 480 480
+5 * 480 0 0 0 0 0 0 0 0 480
jcnd=7/480 +33 +2 
* * 
+2 +1 473 473
+4 * 473
+8 * 473 473
+4 * 473 473
+4 * 473
+3 * 473 0 0 1 0 0 1
+3 * 473 0 473 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=473 0x3877c83840 0 
* * 104074 31769 30828 11 2 5 11 2 5 7026 479 468 116
* * 473 473 0 1 1 0 1 1 0 0 0 473
+5 +1 480 480
+4 * 480
+8 * 480 480
+4 * 480
+3 +1 480 480
+1 * 480 480

fn=(140)
0x404eb5 368 480 0 480
+1 * 480
+3 * 480
+4 * 480 0 480 1 0 0 1
+4 * 480 0 480
+4 * 480 0 480 0 0 1 0 0 1
+4 +2 480 480
+4 * 480 480
+4 * 480
+3 * 480
+3 * 480
+4 * 480 0 480
+4 +1 480 480
+5 * 480 0 0 0 0 0 0 0 0 480
jcnd=7/480 +33 +2 
* * 
+2 +1 473 473
+4 * 473
+8 * 473 473
+4 * 473 473
+4 * 473
+3 * 473
+3 * 473 0 473
cob=(2)
cfi=(9)
cfn=(78)
calls=473 0x3877c83840 0 
* * 104074 31769 30828 0 1 8 0 1 8 7026 465 468
* * 473 473 0 0 0 0 0 0 0 0 0 473
+5 +1 480 480
+4 * 480
+8 * 480 480
+4 * 480
+3 +1 480 480
+1 * 480 480

fn=(72)
0x404db7 379 466 0 466
+1 * 466
+3 * 466
+4 * 466 0 466 1 0 0 1
+4 * 466 0 466
+4 * 466 0 466
+4 +8 466 0 466
+4 +3 466 466
+4 * 466 466
+4 * 466 466
+4 * 466
+3 * 466
+3 * 466 0 466
cfn=(74)
calls=466 0x404f37 -22 
* * 116390 36714 33456 14 3 3 14 3 3 7430 476 928 116
+5 +1 466 466
+1 * 466 466

fn=(126)
0x404be0 424 466 0 466
+1 * 466
+3 * 466 0 466
+2 * 466 0 466
+1 * 466
+4 * 466 0 466
+4 * 466 0 466
+4 * 466 0 466
+4 +4 466 466
+4 * 466
+3 * 466 0 466
cfn=(128)
calls=466 0x404878 277 
* * 6990 2796 2330 1 0 0 1
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(132)
calls=466 0x404d44 277 
* * 11650 4194 3728 2 0 0 2
+5 * 466
+3 * 466 466
+4 * 466
+3 * 466 0 466
cfn=(132)
calls=466 0x404d44 277 
* * 11650 4194 3728
+5 * 466
+3 * 466
+3 * 466
+3 * 466 0 466
cfn=(138)
calls=466 0x404d5e -49 
* * 123380 39044 36252 1 1 7 1 1 7 7430 461 928
+5 +1 466
+4 * 466 466
+1 * 466 466
+2 * 466 466
+1 * 466 466

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 932 0 932 1 0 0 1
+1 * 932
+3 * 932 0 932
+4 +1 932 932
+4 * 932 932
+1 * 932 932

fn=(110)
0x404380 726 932 0 932 1 0 0 1
+1 * 932
+3 * 932 0 932
+4 * 932 0 932
+4 * 932 932
+4 * 932 932
+3 * 932 932
+4 * 932 0 932
+3 * 932 932
+1 * 932 932

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 932 0 932 1 0 0 1
+1 * 932
+3 * 932 0 932
+4 +1 932 932
+4 * 932 932
+1 * 932 932

fn=(44)
0x404468 726 932 0 932
+1 * 932
+3 * 932 0 932
+4 * 932 0 932
+4 * 932 932
+4 * 932 932
+3 * 932 932
+4 * 932 0 932 1 0 0 1
+3 * 932 932
+1 * 932 932

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(150)
0x40326c 148 473 0 473
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 * 473 0 473
+4 +3 473 473 0 1 0 0 1
+4 * 473 473
+4 * 473
+3 * 473
+3 * 473 0 473
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=473 0x403d1a -29 
* * 8514 2838 3311 3 0 0 3
+5 +1 473 473
+1 * 473 473

fn=(180)
0x40334a 148 473 0 473
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 * 473 0 473
+4 +3 473 473
+4 * 473 473
+4 * 473
+3 * 473
+3 * 473 0 473
cfn=(182) void std::_Destroy<int*>(int*, int*)
calls=473 0x403dcc -29 
* * 8514 2838 3311 2 0 0 2
+5 +1 473 473
+1 * 473 473

fn=(152)
0x403d1a 122 473 0 473 1 0 0 1
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 +4 473 473
+4 * 473 473
+4 * 473
+3 * 473
+3 * 473 0 473
cfn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
calls=473 0x4044f8 -14 
* * 2838 946 1419 2 0 0 2
+5 +2 473 473
+1 * 473 473

fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 473 0 473 1 0 0 1
+1 * 473
+3 * 473 0 473
+4 * 473 0 473
+4 * 473 473
+1 * 473 473

fn=(154)
0x4044f8 112 473 0 473 1 0 0 1
+1 * 473
+3 * 473 0 473
+4 * 473 0 473 1 0 0 1
+4 * 473 473
+1 * 473 473

fn=(182)
0x403dcc 122 473 0 473 1 0 0 1
+1 * 473
+3 * 473
+4 * 473 0 473
+4 * 473 0 473
+4 +4 473 473
+4 * 473 473
+4 * 473
+3 * 473
+3 * 473 0 473
cfn=(184)
calls=473 0x40454c -14 
* * 2838 946 1419 1 0 0 1
+5 +2 473 473
+1 * 473 473

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2119 390 388 0 5 6 0 5 6 299 31 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 14 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 2995 629 585 15 8 5 15 8 5 478 59 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 946 0 946 1 0 0 1
+2 0 946 0 946
+2 0 946 0 946
+2 0 946
+3 0 946 0 946
+2 0 946 0 946
+1 0 946 0 946
+1 0 946
+3 0 946
+4 0 946 946
+4 0 946 0 946
+4 0 946
+3 0 946
+4 0 946
+3 0 946
+3 0 946
+3 0 946 0 0 1 0 0 1 0 0 946
+6 0 946
+4 0 946 0 0 0 0 0 0 0 0 946
+6 0 946
+4 0 946 0 0 0 0 0 0 0 0 946
+6 0 946 946
+7 0 946 0 0 0 0 0 0 0 0 946 2
jcnd=822/946 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 822
+2 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822 0 1 0 0 1
+4 0 822
+3 0 822
+2 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 0x3877c78a40 0 
* 0 
+6 0 822 822
+4 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822
+5 0 822
+4 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 0x3877c7907c 0 
* 0 
+6 0 822 822
+5 0 822
+4 0 822 0 0 0 0 0 0 0 0 822
+6 0 822
+4 0 822 0 0 1 0 0 1 0 0 822
+6 0 822
+4 0 822 822
+7 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822
+6 0 822
+2 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822
+4 0 822 0 0 0 0 0 0 0 0 822 5
jcnd=818/822 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 822 822 0 1 0 0 1
+4 0 822 0 0 0 0 0 0 0 0 822 328
jcnd=328/822 0x3877c78bf0 0 
* 0 
+6 0 494 494
+6 0 494 0 0 1 0 0 1 0 0 494 44
jcnd=29/494 0x3877c78a78 0 
* 0 
+6 0 465 465
+5 0 465 465
+5 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+9 0 465 0 465
+4 0 465 0 465
+4 0 465 0 0 0 0 0 0 0 0 465 2
jcnd=457/465 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 465
+3 0 465
+4 0 465 465
+4 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
-12 0 29
+4 0 29 29
+4 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 494
+7 0 494 0 494
+4 0 494 0 494
+4 0 494 0 0 0 0 0 0 0 0 494 62
jcnd=425/494 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 425 0 425
+4 0 425
+3 0 425 0 425
+4 0 425
+4 0 425 0 425
+4 0 425 0 425
+4 0 425
+7 0 425 0 0 0 0 0 0 0 0 425
jcnd=425/425 0x3877c78b20 0 
* 0 
-7 0 328
+7 0 328 0 0 0 0 0 0 0 0 328
jcnd=328/328 0x3877c78b20 0 
* 0 
0x3877c78a40 0 822 0 0 1 0 0 1
+5 0 822 822
+4 0 822 822
+7 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 +16 0 
* 0 
+16 0 822 0 822
+5 0 822 0 0 0 0 0 0 0 0 822
+6 0 822
+3 0 822
jump=822 0x3877c7878f 0 
* 0 
+10 0 29 0 29
+6 0 29 0 0 1 0 0 1
jump=29 0x3877c78885 0 
* 0 
0x3877c78b20 0 822 822 0 1 0 0 1
+4 0 822
+2 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822
+7 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 +15 0 
* 0 
+15 0 822 0 822 1 0 0 1
+4 0 822 0 0 0 0 0 0 0 0 822
+6 0 822
+4 0 822 822
+1 0 822 822
+1 0 822 822
+2 0 822 822
+2 0 822 822
+2 0 822 822
+2 0 822 822
0x3877c78bf0 0 328 0 0 1 0 0 1
+3 0 328 0 328
+4 0 328
+3 0 328
+4 0 328 0 328 1 0 0 1
+4 0 328
jump=328 0x3877c788cf 0 
* 0 
0x3877c7907c 0 822 822 0 1 1 0 1 1
+4 0 822 0 0 1 0 0 1
+7 0 822
+4 0 822
+3 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 936 0 0 1 0 0 1
+7 0 936
+3 0 936
+3 0 936 936 0 0 1 0 0 1
+4 0 936
+4 0 936 0 0 0 0 0 0 0 0 0 0 936 116
jump=112 0x3877c89be8 0 
* 0 
jump=120 0x3877c89bd0 0 
* 0 
jump=112 0x3877c89bb8 0 
* 0 
jump=112 +11 0 
* 0 
jump=116 0x3877c89c48 0 
* 0 
jump=122 0x3877c89c30 0 
* 0 
jump=120 0x3877c89c18 0 
* 0 
jump=122 0x3877c89c00 0 
* 0 
+11 0 112 112
+3 0 112
+4 0 112
+4 0 112 112
+4 0 112
+4 0 112 0 112
+4 0 112
+9 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-40 0 6698 6698
+4 0 6698 0 6698 0 0 3 0 0 3
+4 0 6698 6698
+4 0 6698 0 6698
+4 0 6698 6698
+4 0 6698 0 6698 0 0 1 0 0 1
+4 0 6698 6698
+4 0 6698 0 6698
+4 0 6698
+4 0 6698
+4 0 6698 0 0 0 0 0 0 0 0 6698 462
jcnd=900/6698 0x3877c89c60 0 
* 0 
-32 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122
jcnd=10/122 0x3877c89c60 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-16 0 122 122 0 1 0 0 1
+4 0 122 0 122
+4 0 122 0 0 1 0 0 1
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122 4
jcnd=10/122 0x3877c89c60 0 
* 0 
+6 0 6238
+4 0 6238 6238
+3 0 6238 0 6238 0 0 1 0 0 1
+3 0 6238 6238
+4 0 6238 0 6238 0 0 3 0 0 3
+4 0 6238 6238
+4 0 6238 0 6238 0 0 4 0 0 4
+4 0 6238 6238
+4 0 6238 0 6238
+4 0 6238
jump=6238 -80 0 
* 0 
-30 0 112 112
+3 0 112 0 112
+3 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-16 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
+8 0 112 112
+3 0 112
+4 0 112 0 0 1 0 0 1
+4 0 112
+4 0 112
jump=112 -39 0 
* 0 
+9 0 120
+3 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+3 0 120
+4 0 120
jump=120 -72 0 
* 0 
+8 0 112
+4 0 112 112
+3 0 112 0 0 0 0 0 0 0 0 112
+2 0 112
+4 0 112
jump=112 -99 0 
* 0 
+11 0 122 122 0 1 0 0 1
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b78 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b70 0 
* 0 
+9 0 122 122
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b68 0 
* 0 
+9 0 116 116
+3 0 116
+4 0 116
+4 0 116
+4 0 116
jump=116 0x3877c89b60 0 
* 0 
+9 0 936 0 936 1 0 0 1
+3 0 936 936

fn=(104) alloc_perturb
0x3877c77180 0 828 828 0 1 0 0 1
+6 0 828
+2 0 828 0 0 0 0 0 0 0 0 828 1
+2 0 828 828

fn=(38) _int_malloc
0x3877c79a00 0 946 0 946 1 0 0 1
+2 0 946
+3 0 946 0 946
+2 0 946 0 946
+2 0 946 0 946 0 0 1 0 0 1
+2 0 946
+3 0 946 0 946
+1 0 946 0 946
+1 0 946
+4 0 946
+4 0 946 0 0 0 0 0 0 0 0 946
+6 0 946
+4 0 946
+6 0 946
+3 0 946
+4 0 946
+4 0 946
+4 0 946
+3 0 946 0 0 0 0 0 0 0 0 946
+6 0 946 946 0 1 1 0 1 1
+7 0 946 0 0 0 0 0 0 0 0 946 5
jcnd=824/946 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 828
+4 0 828 828
+1 0 828 828
+1 0 828 828
+2 0 828 828
+2 0 828 828
+2 0 828 828
+2 0 828 828
+7 0 841
+7 0 841 0 0 1 0 0 1 0 0 841 3
jcnd=2/841 0x3877c79b70 0 
* 0 
+2 0 839
+3 0 839
+5 0 839
+3 0 839
+4 0 839 0 839
+4 0 839
+2 0 839
+5 0 839 839 0 0 11 0 0 11
+4 0 839
+3 0 839 0 0 0 0 0 0 0 0 839
jcnd=839/839 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 898 238 191 8 2 0 8 2 0 184 25
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 840 0 0 1 0 0 1
+3 0 840
+3 0 840
+3 0 840
+4 0 840
+3 0 840
+4 0 840 0 840
+5 0 840
+3 0 840 0 840
+4 0 840 0 840
+4 0 840 0 840
+5 0 840
+3 0 840
+3 0 840
+3 0 840
+3 0 840
+4 0 840
+4 0 840 0 0 1 0 0 1
+4 0 840 0 840
+4 0 840
+4 0 840 0 840
+5 0 840 0 840
+5 0 840
+3 0 840
+3 0 840 0 840
+5 0 840
+5 0 840
+3 0 840 0 840
+4 0 840 0 840
+4 0 840
+6 0 840 0 840
+4 0 840 0 840
+5 0 840 0 0 1 0 0 1
+3 0 840
+3 0 840
+3 0 840
jump=840 +87 0 
* 0 
+8 0 799
+3 0 799
+4 0 799
+2 0 799
+2 0 799
+3 0 799
+3 0 799
+3 0 799
+2 0 799
+2 0 799
+5 0 799
+2 0 799 799 0 0 2 0 0 2
+4 0 799
+3 0 799
+4 0 799 0 799
+4 0 799 0 799
+8 0 799
+7 0 799 0 799
+4 0 799 0 799 0 0 1 0 0 1
+4 0 799 0 799
+4 0 799 0 0 0 0 0 0 0 0 799
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1708 1708 0 1 0 0 1
+4 0 1708
+3 0 1708 0 0 0 0 0 0 0 0 1708 27
jcnd=809/1708 0x3877c79ef0 0 
* 0 
+6 0 899 899
+4 0 899 899
+4 0 899
+4 0 899 0 0 0 0 0 0 0 0 899
+6 0 899 899 0 1 0 0 1
+7 0 899 0 0 0 0 0 0 0 0 899
+6 0 899
+4 0 899
+7 0 899 0 0 0 0 0 0 0 0 899 3
jcnd=7/899 +11 0 
* 0 
+2 0 892
+3 0 892 0 0 0 0 0 0 0 0 892 62
jcnd=816/892 0x3877c79e28 0 
* 0 
+6 0 880
+3 0 880 0 880
+4 0 880 0 880
+5 0 880 0 0 0 0 0 0 0 0 880 9
jcnd=13/880 0x3877c7a090 0 
* 0 
+6 0 867
+7 0 867 0 0 0 0 0 0 0 0 867 11
jcnd=799/867 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68 4
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 1 0 0 1
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 5
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 816 816 0 1 0 0 1
+4 0 816
+3 0 816 0 0 0 0 0 0 0 0 816 333
jcnd=411/816 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 4
jcnd=386/405 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 809 0 0 1 0 0 1
+7 0 809
+3 0 809 0 0 0 0 0 0 0 0 809 2
jcnd=2/809 0x3877c7a0b0 0 
* 0 
+6 0 809 809 0 1 0 0 1
+4 0 809
+3 0 809
+3 0 809
+2 0 809
+4 0 809
+3 0 809
+3 0 809
+2 0 809
+2 0 809
+2 0 809
+2 0 809 809 0 0 1 0 0 1
+8 0 809
+5 0 809
+5 0 809
+2 0 809 0 0 0 0 0 0 0 0 809
-2 0 408
+2 0 408 0 0 0 0 0 0 0 0 408
+2 0 1217
+2 0 1217 0 0 0 0 0 0 0 0 1217 26
jcnd=614/1217 +64 0 
* 0 
+2 0 603
+8 0 603
+3 0 603
+3 0 603 0 0 0 0 0 0 0 0 603 1
jcnd=1/603 0x3877c79fc0 0 
* 0 
-6 0 720
+3 0 720
+3 0 720 0 0 0 0 0 0 0 0 720 3
jcnd=327/720 0x3877c79fc0 0 
* 0 
+2 0 995
+2 0 995 995
+8 0 995
+2 0 995 0 0 0 0 0 0 0 0 995 14
jcnd=720/995 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275 1
jcnd=1/275 +14 0 
* 0 
+2 0 274
+2 0 274
+4 0 274
+2 0 274
+2 0 274 0 0 0 0 0 0 0 0 274 4
jcnd=212/274 -8 0 
* 0 
-8 0 6650
+4 0 6650
+2 0 6650
+2 0 6650 0 0 0 0 0 0 0 0 6650 420
jcnd=5851/6650 -8 0 
* 0 
-2 0 614 0 0 1 0 0 1
+2 0 614 0 0 0 0 0 0 0 0 614 18
jcnd=587/614 -8 0 
* 0 
+2 0 889 889 0 0 6 0 0 6
+4 0 889 0 0 1 0 0 1
+3 0 889 0 0 0 0 0 0 0 0 889 486
jcnd=481/889 0x3877c7a1cf 0 
* 0 
+6 0 408
+2 0 408
+4 0 408
+2 0 408
+2 0 408
+2 0 408 0 408
+8 0 408
jump=408 0x3877c79f30 0 
* 0 
+37 0 328 328 0 1 0 0 1
+5 0 328 328
+4 0 328
+4 0 328 328
+5 0 328 0 0 0 0 0 0 0 0 328
jcnd=328/328 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 481 481 0 1 2 0 1 2
+4 0 481 481 0 0 1 0 0 1
+4 0 481
+3 0 481 481
+4 0 481
+4 0 481
+3 0 481
+3 0 481 481
+4 0 481 0 0 0 0 0 0 0 0 481
+6 0 481 481
+4 0 481 0 0 0 0 0 0 0 0 481
+6 0 481 481 0 1 0 0 1
+8 0 481 0 481
+4 0 481 0 481
+4 0 481 0 0 0 0 0 0 0 0 481 9
jcnd=411/481 +38 0 
* 0 
+2 0 70 70 0 0 2 0 0 2
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 411
+4 0 411 0 0 0 0 0 0 0 0 411 8
jcnd=13/411 0x3877c7a2e3 0 
* 0 
+6 0 468 468
+4 0 468 468 0 1 0 0 1
+4 0 468 0 0 0 0 0 0 0 0 468
+6 0 468
+4 0 468
+7 0 468 0 468 0 0 7 0 0 7
+4 0 468 0 468
+4 0 468 0 468
+4 0 468 0 468
+4 0 468 0 0 0 0 0 0 0 0 468 2
jcnd=2/468 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 2
jcnd=459/466 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 461 0 0 1 0 0 1
+7 0 461 0 461 0 0 1 0 0 1
+4 0 461
+3 0 461
+3 0 461
+4 0 461
+3 0 461
+4 0 461
+3 0 461
+3 0 461
+4 0 461 0 461
+4 0 461 0 461 0 0 1 0 0 1
+4 0 461
jump=461 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 13
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +7 0 
* 0 
+7 0 481
+4 0 481 0 0 1 0 0 1
+3 0 481
+3 0 481 0 481
cfn=(104)
calls=481 0x3877c77180 0 
* 0 1924 962 0 1 0 0 1 0 0 481
+5 0 481
+3 0 481
jump=481 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 328 0 0 1 0 0 1
+7 0 328
+2 0 328
+4 0 328
+3 0 328
+3 0 328 0 328
+5 0 328
+3 0 328
+4 0 328
+3 0 328 0 0 1 0 0 1
+4 0 328
+4 0 328
+3 0 328
+4 0 328 0 328
+4 0 328 0 328 0 0 11 0 0 11
+4 0 328
+3 0 328
+3 0 328 0 328
cfn=(104)
calls=328 0x3877c77180 0 
* 0 1312 656 0 0 0 0 0 0 0 328 1
+5 0 328
+3 0 328
jump=328 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 946 0 946 1 0 0 1
+5 0 946 0 946
+5 0 946
+3 0 946 0 946
+5 0 946
+4 0 946 946 0 0 1 0 0 1
+7 0 946 946 0 0 1 0 0 1
+3 0 946
+3 0 946 0 0 0 0 0 0 0 0 946
+6 0 946 946 0 0 1 0 0 1
+7 0 946 946 0 1 1 0 1 1
+4 0 946
+3 0 946 0 0 0 0 0 0 0 0 946
+2 0 946 946 0 0 1 0 0 1
+3 0 946
+3 0 946 0 0 0 0 0 0 0 0 946
jcnd=946/946 +97 0 
* 0 
+18 0 946
+3 0 946
+3 0 946 0 946
cfn=(38)
calls=946 0x3877c79a00 0 
* 0 214604 25945 30413 42 33 44 42 33 44 33463 1519
+5 0 946
+3 0 946
+3 0 946 0 0 0 0 0 0 0 0 946
+2 0 946
+3 0 946 0 0 0 0 0 0 0 0 946
+2 0 946
+3 0 946 0 0 0 0 0 0 0 0 946 3
+2 0 946 946
+7 0 946 0 0 0 0 0 0 0 0 946
jcnd=946/946 +13 0 
* 0 
+13 0 946 0 946
+2 0 946 0 0 0 0 0 0 0 0 946 12
+6 0 946
+3 0 946 946
+4 0 946 946
+5 0 946 946
+5 0 946
+4 0 946 946
+1 0 946 0 0 1 0 0 1
+5 0 946 946 0 0 1 0 0 1
+7 0 946 0 0 0 0 0 0 0 0 946
jcnd=946/946 +14 0 
* 0 
+14 0 946 0 946 1 0 0 1
+3 0 946 0 0 0 0 0 0 0 0 946
+6 0 946
jump=946 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 946 0 946 1 0 0 1
+2 0 946
+3 0 946
+3 0 946 0 946
+2 0 946
+3 0 946 0 946
+1 0 946
+3 0 946 0 946
+1 0 946
+3 0 946
+4 0 946
+3 0 946 0 0 0 0 0 0 0 0 946
+6 0 946
+4 0 946
+3 0 946 0 0 0 0 0 0 0 0 946 4
jcnd=10/946 0x3877c838d1 0 
* 0 
+2 0 936
+3 0 936
+3 0 936
+3 0 936
+3 0 936
+3 0 936 0 0 0 0 0 0 0 0 936
jcnd=936/936 +41 0 
* 0 
+41 0 936 0 0 1 0 0 1
+3 0 936 0 0 0 0 0 0 0 0 936
jcnd=936/936 0x3877c839c0 0 
* 0 
+24 0 936
+3 0 936
+4 0 936
+3 0 936
+3 0 936
+3 0 936
+3 0 936
+3 0 936 0 0 0 0 0 0 0 0 936 466
jcnd=476/936 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 470
+10 0 470 470 0 0 2 0 0 2
+3 0 470
+4 0 470 0 470
+3 0 470
+4 0 470
+4 0 470 0 0 0 0 0 0 0 0 470
jcnd=470/470 -18 0 
* 0 
-18 0 1466 1466
+3 0 1466
+4 0 1466 0 1466
+3 0 1466
+4 0 1466
+4 0 1466 0 0 0 0 0 0 0 0 1466 8
jcnd=996/1466 -18 0 
* 0 
+2 0 946
+4 0 946
+3 0 946 946
+1 0 946 946
+1 0 946 946
+2 0 946 946 0 1 0 0 1
+2 0 946 946
0x3877c839c0 0 936 0 0 1 0 0 1
+3 0 936
+3 0 936
+3 0 936
+4 0 936 0 936 0 0 1 0 0 1
cfn=(284)
calls=936 0x3877c89b20 0 
* 0 154638 56872 55000 6 1 12 6 1 12 7406 466 936 116
+5 0 936
jump=936 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 946 946 0 1 1 0 1 1
+7 0 946 946 0 0 1 0 0 1
+3 0 946
+3 0 946 0 0 1 0 0 1 0 0 946
+6 0 946
+3 0 946 0 0 0 0 0 0 0 0 946
+6 0 946 946
+4 0 946
+4 0 946
+2 0 946 0 0 0 0 0 0 0 0 946
+2 0 946
+2 0 946
+7 0 946 0 0 0 0 0 0 0 0 946
jcnd=946/946 +14 0 
* 0 
+14 0 946
+2 0 946
cfn=(170)
calls=946 0x3877c78650 0 
* 0 90397 23907 13363 19 2 0 19 2 0 21771 445

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 5480954 2202427 1294797 238 87 79 238 87 79 173104 3642 5666 116
