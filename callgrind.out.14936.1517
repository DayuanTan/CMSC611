version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1517


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1967296171 - 1967957223
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 962 0 0 1 0 0 1
+3 0 962 0 0 0 0 0 0 0 0 962
+2 0 962
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=962 0x3877c7b8b0 0 
* 0 106315 27169 13579 21 4 0 21 4 0 25979 457
* 0 962 962 0 1 1 0 1 1 0 0 0 962

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 962 0 962 1 0 0 1
+1 0 962
+5 0 962
+3 0 962 0 962
+1 0 962
+4 0 962 0 0 1 0 0 1
+3 0 962
+4 0 962
+3 0 962 0 962 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=962 0x3877c7aa50 0 
* 0 257811 36909 36623 46 38 46 46 38 46 43461 1451
* 0 962 962 0 1 1 0 1 1 0 0 0 962
+5 0 962
+3 0 962 0 0 0 0 0 0 0 0 962
jcnd=962/962 +96 0 
* 0 
+96 0 962 0 0 1 0 0 1
+4 0 962 962
+1 0 962 962
+1 0 962 962

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 544 0 544
+1 * 544
+3 * 544 0 544
+4 +1 544 544
+4 * 544 544
+1 * 544 544

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 948 0 948 1 0 0 1
+1 * 948
+3 * 948 0 948
+4 +1 948 948 0 1 0 0 1
+4 * 948 948
+1 * 948 948

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 544 0 544
+1 * 544
+3 * 544 0 544 0 0 1 0 0 1
+4 +1 544 544
+4 * 544 544
+1 * 544 544

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 948 0 948 1 0 0 1
+1 * 948
+3 * 948
+4 * 948 0 948
+4 +1 948
+4 * 948
+3 * 948 0 948
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=948 0x404ffe 790 
* * 5688 2844 1896 1 0 0 1
+5 * 948 948
+3 * 948 948
+1 * 948 948

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 948 0 948 1 0 0 1
+1 * 948
+3 * 948 0 948
+4 +1 948 948
+4 * 948 948
+1 * 948 948

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 948 0 948 1 0 0 1
+1 * 948
+3 * 948
+4 * 948 0 948
+4 +1 948
+4 * 948
+3 * 948 0 948 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=948 0x40500c 790 
* * 5688 2844 1896 1 0 0 1
+5 * 948 948
+3 * 948 948
+1 * 948 948

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 474 0 474
+1 * 474
+3 * 474 0 474
+4 * 474 0 474
+4 * 474 474
+4 * 474 474
+1 * 474 474

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 481 0 481 1 0 0 1
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 * 481 0 481 1 0 0 1
+4 +2 481 481
+4 * 481
+3 * 481 0 481
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=481 0x404992 +12 
* * 2886 962 962 1 0 0 1
+5 * 481 481
+4 * 481
+3 * 481
+2 * 481 0 0 0 0 0 0 0 0 481
jcnd=481/481 +7 +3 
* * 
+7 +3 481 481
+4 * 481
+4 * 481
+3 * 481 0 481
cob=(5)
cfi=(8)
cfn=(32)
calls=481 0x387e4bd0b0 0 
* * 135199 20579 20860 17 22 14 17 22 14 21835 681 481
* * 481 481 0 1 1 0 1 1 0 0 0 481
+5 +1 481 481
+1 * 481 481

fn=(102) __gnu_cxx::new_allocator<float>::max_size() const
0x4048de 113 495 0 495 1 0 0 1
+1 * 495
+3 * 495 0 495
+4 +1 495
+10 * 495 495
+1 * 495 495

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 237 0 237
+1 * 237
+3 * 237
+4 * 237 0 237
+4 * 237 0 237
+4 * 237 0 237
+4 +1 237 237
+4 * 237
+3 * 237
+5 * 237 0 237
cfi=(16)
cfn=(226)
calls=237 0x402d61 -20 
* * 1659 711 711
+5 * 237
+3 * 237 0 0 0 0 0 0 0 0 237
+2 * 237 237
+4 * 237 237 0 0 15 0 0 15
+2 * 237 0 237 0 0 7 0 0 7
+2 * 237 237
+1 * 237 237

fn=(28)
0x404992 113 495 0 495 1 0 0 1
+1 * 495
+3 * 495 0 495
+4 +1 495
+10 * 495 495
+1 * 495 495

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 474 0 474
+1 * 474
+3 * 474 0 474
+4 * 474 474
+1 * 474 474

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 237 0 237
+1 * 237
+3 * 237
+4 * 237 0 237
+4 * 237 0 237
+4 * 237 0 237
+4 +1 237 237
+4 * 237
+3 * 237
+5 * 237 0 237
cfi=(16)
cfn=(226)
calls=237 0x402d61 -20 
* * 1659 711 711
+5 * 237
+3 * 237 0 0 0 0 0 0 0 0 237
+2 * 237 237
+4 * 237 237 0 0 16 0 0 16
+2 * 237 0 237 0 0 3 0 0 3
+2 * 237 237
+1 * 237 237

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 481 0 481
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 * 481 0 481
+4 +1 481 481
+4 * 481
+3 * 481 0 481
cob=(5)
cfi=(8)
cfn=(164)
calls=481 0x387e4bb2f0 0 
* * 51705 12773 5852 23 4 0 23 4 0 12494 418 481
* * 481 481 0 1 1 0 1 1 0 0 0 481
+5 * 481 481
+1 * 481 481

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 481 0 481
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 * 481 0 481
+4 +1 481 481
+4 * 481
+3 * 481 0 481
cob=(5)
cfi=(8)
cfn=(164)
calls=481 0x387e4bb2f0 0 
* * 58458 15358 7727 0 1 0 0 1 0 14447 39 481
* * 481 481 0 0 0 0 0 0 0 0 0 481
+5 * 481 481
+1 * 481 481

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 481 0 481 1 0 0 1
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 * 481 0 481
+4 +2 481 481
+4 * 481
+3 * 481 0 481
cfn=(102)
calls=481 0x4048de +12 
* * 2886 962 962 1 0 0 1
+5 * 481 481
+4 * 481 0 0 1 0 0 1
+3 * 481
+2 * 481 0 0 0 0 0 0 0 0 481
jcnd=481/481 +7 +3 
* * 
+7 +3 481 481
+4 * 481
+4 * 481
+3 * 481 0 481
cob=(5)
cfi=(8)
cfn=(32)
calls=481 0x387e4bd0b0 0 
* * 138004 20178 18649 33 17 33 33 17 33 22588 770 481
* * 481 481 0 0 0 0 0 0 0 0 0 481
+5 +1 481 481
+1 * 481 481

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 474 0 474 1 0 0 1
+1 * 474
+3 * 474 0 474 0 0 1 0 0 1
+4 * 474 0 474
+4 * 474 474
+1 * 474 474

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 474 0 474 1 0 0 1
+1 * 474
+3 * 474 0 474
+4 * 474 0 474
+4 * 474 474
+1 * 474 474

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 474 0 474
+1 * 474
+3 * 474 0 474
+4 * 474 474
+1 * 474 474

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +2 474 474
+4 * 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=474 0x404484 107 
* * 208740 68154 65314 25 3 4 25 3 4 7614 486 944 118
+5 * 474 474
+1 * 474 474

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +2 474 474 0 1 0 0 1
+4 * 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=474 0x404a36 450 
* * 195468 63414 60574 24 3 4 24 3 4 7614 486 944 118
+5 * 474 474
+1 * 474 474

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +2 474 474
+4 * 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=474 0x40439c 107 
* * 208740 68154 65314 7 1 7 7 1 7 7614 471 944
+5 * 474 474
+1 * 474 474

fn=(116)
0x40439c 107 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +10 474 474
+4 * 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=474 0x4047d7 -26 
* * 202104 65784 62944 7 1 7 7 1 7 7614 471 944
+5 +1 474 474
+1 * 474 474

fn=(118)
0x4047d7 91 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +2 474 474
+4 * 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=474 0x4049e2 450 
* * 195468 63414 60574 7 1 7 7 1 7 7614 471 944
+5 * 474 474
+1 * 474 474

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +10 474 474
+4 * 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(52)
calls=474 0x404829 -26 
* * 202104 65784 62944 25 3 4 25 3 4 7614 486 944 118
+5 +1 474 474
+1 * 474 474

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 481 0 481 1 0 0 1
+1 * 481 0 0 1 0 0 1
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 0 481 481
+5 0 481 0 0 0 0 0 0 0 0 481
+2 0 481 481
+4 0 481 481
+4 0 481
+5 0 481
+3 0 481
+3 0 481 0 481
fi=(6) ???
cfi=(5)
cfn=(100)
calls=481 0x40461a 99 
* 0 150510 24026 22497 36 17 33 36 17 33 23069 770 962
+5 0 481
fi=(6)
jump=481 +7 0 
* 0 
+7 0 481 481
+1 0 481 481

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 85794 0 85794
+1 * 85794
+3 * 85794 0 85794
+4 * 85794 0 85794
+4 +1 85794 85794
+4 * 85794 85794
+3 * 85794 85794
+4 * 85794
+4 * 85794
+3 * 85794 85794
+1 * 85794 85794

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 85794 0 85794
+1 * 85794
+3 * 85794 0 85794 1 0 0 1
+4 * 85794 0 85794
+4 +1 85794 85794
+4 * 85794 85794
+3 * 85794 85794
+4 * 85794
+4 * 85794
+3 * 85794 85794
+1 * 85794 85794

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 474
+4 * 474
+3 * 474 0 474
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(194) std::allocator<int>::~allocator()
calls=474 0x403d7e +42 
* * 6636 2370 2370 1 0 0 1
+5 * 474 474
+1 * 474 474

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 474 0 474 1 0 0 1
+1 * 474
+3 * 474 0 474
+1 * 474
+4 * 474 0 474
+4 +2 474 474
+4 * 474 474
+4 * 474
+3 * 474 474
+4 * 474 474
+3 * 474
+3 * 474
+3 * 474
+4 * 474
+3 * 474 474
+4 * 474 474
+3 -1 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=474 0x403d98 +11 
* * 70976 19908 12372 1 1 0 1 1 0 14750 33 948
+5 +1 474 474
+4 * 474
+3 * 474 0 474
cfn=(192)
calls=474 0x403296 -82 
* * 10902 3792 3792 1 0 0 1
+5 * 474
jump=474 +28 * 
* * 
+28 * 474
+4 * 474 474
+1 * 474 474
+1 * 474 474

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 1924 0 1924 1 0 0 1
+1 * 1924
+3 * 1924 0 1924 0 0 1 0 0 1
+4 +1 1924 1924
+4 * 1924 1924 0 1 1 0 1 1
+4 * 1924
+3 * 1924 1924
+4 * 1924 1924
+3 * 1924
+3 * 1924
+3 * 1924
+4 * 1924 1924
+1 * 1924 1924

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 +2 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=474 0x404236 -14 
* * 153277 26442 26244 23 19 8 23 19 8 22497 644 948
+5 * 474 474
+4 * 474 0 474
+3 +1 474 474
+4 * 474 474 0 1 0 0 1
+3 * 474 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+3 * 474 474
+4 * 474
+4 * 474
+3 * 474 474
+4 * 474 0 474
+4 +1 474 474
+1 * 474 474

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 +2 474 474
+4 * 474 474 0 1 0 0 1
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(96)
calls=474 0x403fbe -14 
* * 155272 25807 23852 26 9 28 26 9 28 23080 713 948
+5 * 474 474
+4 * 474 0 474
+3 +1 474 474
+4 * 474 474
+3 * 474 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+3 * 474 474
+4 * 474
+4 * 474
+3 * 474 474
+4 * 474 0 474
+4 +1 474 474
+1 * 474 474

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 237 0 237
+1 * 237
+3 * 237 0 0 1 0 0 1
+4 * 237 0 237
+4 * 237 0 237
+4 +2 237 237
+4 * 237 237
+4 * 237 237
+4 * 237 237
+4 * 237
+3 * 237 0 0 0 0 0 0 0 0 237
jcnd=7/237 +51 +10 
* * 
+2 +3 230 230
+4 * 230 230
+4 * 230 230
+4 -1 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(3)
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=230 0x4036b1 215 
* * 8740 2990 3220 0 15 4 0 15 4 230
+5 +2 230 230
+4 * 230 230
+4 * 230
+4 * 230 230
+4 * 230 0 230
+4 * 230
jump=230 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10134 3134 2716 18 4 12 18 4 12 596 53 41
+5 +2 237 237
+1 * 237 237

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 969 0 969 1 0 0 1
+1 * 969
+3 * 969 0 969 1 0 0 1
+4 +1 969 969
+4 * 969 969
+1 * 969 969

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+3 * 474 0 474
+4 * 474
+4 * 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=474 0x404380 726 
* * 4740 2370 1896
+5 * 474 474
+4 * 474 474
+1 * 474 474

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 474 0 474
+1 * 474
+3 * 474 0 474
+1 * 474
+4 * 474 0 474 1 0 0 1
+4 +2 474 474
+4 * 474
+3 * 474 0 474
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=474 0x40325e 113 
* * 2844 1422 948
+5 * 474
+3 * 474 474
+4 * 474 474
+4 * 474 474
+4 * 474 474
+3 -1 474
+3 * 474
+3 * 474 0 474
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=474 0x40326c 148 
* * 14694 4740 5688 4 0 0 4
+5 +1 474 474
+4 * 474
+3 * 474 0 474
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=474 0x4031ec 159 
* * 88430 26346 16662 27 5 0 27 5 0 12806 415 948
+5 * 474
jump=474 +28 * 
* * 
+28 * 474 0 0 1 0 0 1
+4 * 474 474
+1 * 474 474
+1 * 474 474

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 481 0 481 1 0 0 1
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 * 481 0 481
+4 +2 481 481
+5 * 481 0 0 0 0 0 0 0 0 481
+2 +1 481 481
+4 * 481 481
+4 * 481 481
+4 * 481
+3 * 481
+3 * 481 0 481
cfi=(5)
cfn=(160)
calls=481 0x4044d6 -65 
* * 57477 14697 8257 24 5 0 24 5 0 12494 418 962
+5 +1 481 481
+1 * 481 481

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 474 0 474
+1 * 474
+3 * 474 0 474
+1 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=474 0x4043ca -45 
* * 17064 6162 6636 4 0 4 4 0 4
+5 +1 474 474 0 1 0 0 1
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(20)
calls=474 0x404412 +43 
* * 165127 32130 29562 24 19 8 24 19 8 22497 644 948
+5 * 474
jump=474 +28 * 
* * 
+28 * 474
+4 * 474 474
+1 * 474 474
+1 * 474 474

fn=(14)
0x4043ca 90 474 0 474 1 0 0 1
+1 * 474
+3 * 474
+4 * 474 0 474 0 0 1 0 0 1
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=474 0x404804 +24 
* * 8532 2844 3318 2 0 1 2 0 1
+5 * 474 474
+4 * 474 0 474 0 0 2 0 0 2
+7 * 474 474
+4 * 474 0 474 1 0 0 1
+8 * 474 474
+4 * 474 0 474
+8 +1 474 474
+1 * 474 474

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 474 0 474 1 0 0 1
+1 * 474
+3 * 474 0 474
+2 * 474 0 474
+2 * 474 0 474
+1 * 474 0 0 1 0 0 1
+4 * 474 0 474
+4 * 474 0 474
+4 +2 474 474
+4 * 474
+3 * 474 0 474
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=474 0x4039fc 117 
* * 2844 1422 948 2 0 0 2
+5 * 474
+3 * 474 0 474
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=474 0x4039ed -88 
* * 2844 1422 948
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(2)
calls=474 0x402d74 645 
* * 6162 2844 948
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474
+3 * 474
+3 * 474 0 474 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=474 0x403a0a 134 
* * 194614 40975 37124 33 9 28 33 9 28 23080 713 948
+5 +4 474 474
+4 * 474
+3 * 474 0 474
cfn=(106)
calls=474 0x40325e 113 
* * 2844 1422 948 1 0 0 1
+5 * 474
+3 * 474 474
+4 * 474 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=474 0x403a98 565 
* * 11850 4740 3792 2 0 0 2
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(112)
calls=474 0x403a68 547 
* * 11850 4740 3792
+5 * 474
+3 * 474
+3 * 474
+3 * 474
+3 * 474 0 474
cfi=(11)
cfn=(114)
calls=474 0x403ac9 -60 
* * 215850 70524 68158 7 1 7 7 1 7 7614 471 944
+5 -3 474 474
+4 * 474 0 474
+4 * 474
jump=474 +28 +4 
* * 
+28 +4 474
+4 * 474 474
+1 * 474 474
+2 * 474 474
+2 * 474 474
+1 * 474 474

fn=(188)
0x403d98 171 481 0 481 1 0 0 1
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 * 481 0 481
+4 +2 481 481
+5 * 481 0 0 0 0 0 0 0 0 481 7
+2 +1 481 481
+4 * 481 481
+4 * 481 481
+4 * 481
+3 * 481
+3 * 481 0 481
cfi=(5)
cfn=(190)
calls=481 0x40452a -65 
* * 64230 17282 10132 0 1 0 0 1 0 14447 39 962
+5 +1 481 481
+1 * 481 481

fn=(22)
0x404236 167 481 0 481 1 0 0 1
+1 * 481
+3 * 481
+4 * 481 0 481 1 0 0 1
+4 * 481 0 481
+4 0 481 481
+5 0 481 0 0 0 0 0 0 0 0 481
+2 0 481 481
+4 0 481 481
+4 0 481
+5 0 481
+3 0 481
+3 0 481 0 481
fi=(6)
cfi=(5)
cfn=(26)
calls=481 0x404730 99 
* 0 147705 24427 24708 21 23 14 21 23 14 22316 681 962
+5 0 481
fi=(6)
jump=481 +7 0 
* 0 
+7 0 481 481
+1 0 481 481

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 474 0 474 1 0 0 1
+1 * 474
+3 * 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+4 * 474 0 474
+4 * 474
+4 * 474 0 0 1 0 0 1
+4 * 474
+3 * 474
+3 * 474 0 474
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=474 0x404468 726 
* * 4740 2370 1896 1 0 0 1
+5 * 474 474
+4 * 474 474
+1 * 474 474

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+3 * 474 0 474
+4 * 474
+4 * 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfi=(10)
cfn=(44)
calls=474 0x404468 726 
* * 4740 2370 1896
+5 * 474 474
+4 * 474 474
+1 * 474 474

fn=(86)
0x403a0a 134 474 0 474
+1 * 474
+3 * 474 0 474
+1 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=474 0x4042e2 -45 
* * 17064 6162 6636 5 0 0 5
+5 +1 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474 1 0 0 1
cfn=(94)
calls=474 0x40432a +43 
* * 167122 31495 27170 27 9 28 27 9 28 23080 713 948
+5 * 474
jump=474 +28 * 
* * 
+28 * 474
+4 * 474 474
+1 * 474 474
+1 * 474 474

fn=(88)
0x4042e2 90 474 0 474 1 0 0 1
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=474 0x4047b2 +24 
* * 8532 2844 3318 3 0 0 3
+5 * 474 474
+4 * 474 0 474
+7 * 474 474
+4 * 474 0 474
+8 * 474 474
+4 * 474 0 474
+8 +1 474 474
+1 * 474 474

fn=(156)
0x4031ec 159 474 0 474 1 0 0 1
+1 * 474
+3 * 474 0 474
+1 * 474
+4 * 474 0 474
+4 +2 474 474
+4 * 474 474 0 1 0 0 1
+4 * 474
+3 * 474 474
+4 * 474 474
+3 * 474
+3 * 474
+3 * 474
+4 * 474
+3 * 474 474
+4 * 474 474
+3 -1 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(158)
calls=474 0x403ce6 +11 
* * 64256 17340 10500 24 5 0 24 5 0 12806 415 948
+5 +1 474 474
+4 * 474
+3 * 474 0 474
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=474 0x4031b8 -82 
* * 10902 3792 3792 1 0 0 1
+5 * 474
jump=474 +28 * 
* * 
+28 * 474
+4 * 474 474
+1 * 474 474
+1 * 474 474

fn=(172)
0x4031b8 79 474 0 474 1 0 0 1
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 474
+4 * 474
+3 * 474 0 474
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=474 0x403ccc +42 
* * 6636 2370 2370
+5 * 474 474
+1 * 474 474

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 976 0 976 1 0 0 1
+1 * 976
+3 * 976 0 976
+4 +1 976 976
+4 * 976 976 0 0 2 0 0 2
+4 * 976
+3 * 976 976
+4 * 976 976
+3 * 976
+3 * 976
+3 * 976
+4 * 976 976
+1 * 976 976

fn=(106)
0x40325e 113 969 0 969 1 0 0 1
+1 * 969
+3 * 969 0 969
+4 +1 969 969
+4 * 969 969
+1 * 969 969

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6)
0x403b08 117 488 0 488 1 0 0 1
+1 * 488
+3 * 488 0 488 0 0 1 0 0 1
+4 +1 488 488
+4 * 488 488
+1 * 488 488

fn=(82)
0x4039fc 117 488 0 488 1 0 0 1
+1 * 488
+3 * 488 0 488 1 0 0 1
+4 +1 488 488
+4 * 488 488
+1 * 488 488

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 237 0 237
+1 * 237
+3 * 237
+4 * 237 0 237
+4 * 237 0 237
+4 +2 237 237
+4 * 237 237
+4 * 237 237
+4 * 237 237
+4 * 237
+3 * 237 0 0 0 0 0 0 0 0 237 8
jcnd=7/237 +51 +10 
* * 
+2 +3 230 230
+4 * 230 230
+4 * 230 230
+4 -1 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=230 0x403373 215 
* * 8740 2990 3220 0 15 2 0 15 2 230
+5 +2 230 230
+4 * 230 230
+4 * 230
+4 * 230 230
+4 * 230 0 230
+4 * 230
jump=230 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 10911 3351 2894 35 9 9 35 9 9 757 64 41
+5 +2 237 237
+1 * 237 237

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 474 0 474 1 0 0 1
+1 * 474
+3 * 474 0 474
+2 * 474 0 474
+2 * 474 0 474
+1 * 474
+4 * 474 0 474 1 0 0 1
+4 * 474 0 474
+4 +2 474 474
+4 * 474
+3 * 474 0 474
cfn=(6)
calls=474 0x403b08 117 
* * 2844 1422 948 1 0 1 1 0 1
+5 * 474
+3 * 474 0 474
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=474 0x403afa -88 
* * 2844 1422 948 1 0 0 1
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(10)
calls=474 0x402f54 645 
* * 6162 2844 948 1 1 0 1 1
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474
+3 * 474
+3 * 474 0 474
cfn=(12)
calls=474 0x403b16 134 
* * 192619 41610 39516 29 19 12 29 19 12 22497 644 948
+5 +4 474 474 0 1 0 0 1
+4 * 474
+3 * 474 0 474
cfn=(40)
calls=474 0x40333c 113 
* * 2844 1422 948 2 0 0 2
+5 * 474
+3 * 474 474
+4 * 474 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(42)
calls=474 0x403ba4 565 
* * 11850 4740 3792 3 0 0 3
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(46)
calls=474 0x403b74 547 
* * 11850 4740 3792
+5 * 474
+3 * 474
+3 * 474
+3 * 474
+3 * 474 0 474 1 0 0 1
cfi=(11)
cfn=(48)
calls=474 0x403bd5 -60 
* * 215850 70524 68158 26 3 4 26 3 4 7614 486 944 118
+5 -3 474 474
+4 * 474 0 474
+4 * 474
jump=474 +28 +4 
* * 
+28 +4 474
+4 * 474 474
+1 * 474 474
+2 * 474 474
+2 * 474 474
+1 * 474 474

fn=(108)
0x403a98 565 474 0 474 1 0 0 1
+1 * 474
+3 * 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+4 * 474 0 474
+4 * 474
+4 * 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfi=(10)
cfn=(110)
calls=474 0x404380 726 
* * 4740 2370 1896 1 0 0 1
+5 * 474 474
+4 * 474 474
+1 * 474 474

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 474 0 474
+1 * 474
+3 * 474 0 474
+1 * 474
+4 * 474 0 474 1 0 0 1
+4 +2 474 474
+4 * 474
+3 * 474 0 474
cfn=(40)
calls=474 0x40333c 113 
* * 2844 1422 948
+5 * 474
+3 * 474 474
+4 * 474 474
+4 * 474 474
+4 * 474 474
+3 -1 474
+3 * 474
+3 * 474 0 474
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=474 0x40334a 148 
* * 14694 4740 5688 2 0 0 2
+5 +1 474 474
+4 * 474
+3 * 474 0 474
cfn=(186)
calls=474 0x4032ca 159 
* * 95150 28914 18534 3 1 0 3 1 0 14750 33 948
+5 * 474
jump=474 +28 * 
* * 
+28 * 474 0 0 1 0 0 1
+4 * 474 474
+1 * 474 474
+1 * 474 474

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fl=(12)
fn=(54)
0x404a36 450 474 0 474
+1 * 474
+3 * 474 0 474
+1 * 474
+4 * 474 0 474 1 0 0 1
+4 * 474 0 474
+4 * 474 0 474
+4 +10 474 474
+4 * 474
+3 * 474 0 474
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=474 0x404c38 288 
* * 7110 2844 2370 3 0 0 3
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(56)
calls=474 0x404c38 288 
* * 7110 2844 2370
+5 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=474 0x404c52 -36 
* * 170820 54882 52042 20 3 4 20 3 4 7614 486 944 118
+5 +1 474
+4 * 474 474
+1 * 474 474
+1 * 474 474

fn=(60)
0x404c52 424 474 0 474
+1 * 474
+3 * 474 0 474
+2 * 474 0 474
+1 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +4 474 474
+4 * 474
+3 * 474 0 474
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=474 0x40492d 277 
* * 7110 2844 2370 2 0 0 2
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=474 0x404d9d 277 
* * 11850 4266 3792 2 0 1 2 0 1
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(66)
calls=474 0x404d9d 277 
* * 11850 4266 3792
+5 * 474
+3 * 474
+3 * 474
+3 * 474 0 474
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=474 0x404db7 -49 
* * 126738 40188 37348 15 3 3 15 3 3 7614 486 944 118
+5 +1 474
+4 * 474 474
+1 * 474 474
+2 * 474 474
+1 * 474 474

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 516 0 516 1 0 0 1
+1 * 516
+3 * 516
+4 * 516 0 516
+4 +1 516 516
+4 * 516
+3 * 516 0 516 1 0 0 1
cfi=(13)
cfn=(64)
calls=516 -33 -66 
* * 3096 1548 1032
+5 * 516 516
+1 * 516 516

fn=(66)
0x404d9d 277 948 0 948
+1 * 948
+3 * 948
+4 * 948 0 948
+4 +1 948 948
+4 * 948
+3 * 948 0 948
cfi=(13)
cfn=(68)
calls=948 0x404f1a -58 
* * 15168 5688 4740 2 0 1 2 0 1
+5 * 948 948
+1 * 948 948

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 474 0 474
+1 * 474
+3 * 474 0 474
+1 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +10 474 474
+4 * 474
+3 * 474 0 474
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=474 0x404bc6 288 
* * 7110 2844 2370 3 0 0 3
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(122)
calls=474 0x404bc6 288 
* * 7110 2844 2370
+5 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=474 0x404be0 -36 
* * 170820 54882 52042 4 1 7 4 1 7 7614 471 944
+5 +1 474
+4 * 474 474
+1 * 474 474
+1 * 474 474

fn=(128)
0x404878 277 516 0 516
+1 * 516
+3 * 516
+4 * 516 0 516 1 0 0 1
+4 +1 516 516
+4 * 516
+3 * 516 0 516
cfi=(13)
cfn=(130)
calls=516 -33 -66 
* * 3096 1548 1032 0 0 1 0 0 1
+5 * 516 516
+1 * 516 516

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 948 0 948
+1 * 948
+3 * 948
+4 * 948 0 948
+4 +1 948 948
+4 * 948
+3 * 948 0 948
cfi=(13)
cfn=(134)
calls=948 0x404e98 -58 
* * 15168 5688 4740 2 0 0 2
+5 * 948 948
+1 * 948 948

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +8 474 0 474
+4 +3 474 474
+4 * 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=474 0x404eb5 -22 
* * 119628 37818 34504 1 1 7 1 1 7 7614 471 944
+5 +1 474 474
+1 * 474 474

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 948 0 948 1 0 0 1
+1 * 948
+3 * 948
+4 * 948 0 948
+4 +1 948 948
+4 * 948
+3 * 948 0 948
cfi=(13)
cfn=(124)
calls=948 0x404d36 -77 
* * 5688 2844 1896 2 0 0 2
+5 * 948 948
+1 * 948 948

fn=(56)
0x404c38 288 948 0 948 1 0 0 1
+1 * 948
+3 * 948
+4 * 948 0 948 1 0 0 1
+4 +1 948 948
+4 * 948
+3 * 948 0 948
cfi=(13)
cfn=(58)
calls=948 0x404d8f -77 
* * 5688 2844 1896 1 0 0 1
+5 * 948 948
+1 * 948 948

fn=(74)
0x404f37 368 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488 1 0 0 1
+4 * 488 0 488
+4 * 488 0 488
+4 +2 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488
+4 * 488 0 488
+4 +1 488 488
+5 * 488 0 0 0 0 0 0 0 0 488
jcnd=7/488 +33 +2 
* * 
+2 +1 481 481
+4 * 481
+8 * 481 481
+4 * 481 481
+4 * 481
+3 * 481 0 0 1 0 0 1
+3 * 481 0 481 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=481 0x3877c83840 0 
* * 107088 32785 31828 11 2 5 11 2 5 7202 489 476 118
* * 481 481 0 1 1 0 1 1 0 0 0 481
+5 +1 488 488
+4 * 488
+8 * 488 488
+4 * 488
+3 +1 488 488
+1 * 488 488

fn=(140)
0x404eb5 368 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488 1 0 0 1
+4 * 488 0 488
+4 * 488 0 488 0 0 1 0 0 1
+4 +2 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488
+4 * 488 0 488
+4 +1 488 488
+5 * 488 0 0 0 0 0 0 0 0 488
jcnd=7/488 +33 +2 
* * 
+2 +1 481 481
+4 * 481
+8 * 481 481
+4 * 481 481
+4 * 481
+3 * 481
+3 * 481 0 481
cob=(2)
cfi=(9)
cfn=(78)
calls=481 0x3877c83840 0 
* * 107088 32785 31828 0 1 8 0 1 8 7202 475 476
* * 481 481 0 0 0 0 0 0 0 0 0 481
+5 +1 488 488
+4 * 488
+8 * 488 488
+4 * 488
+3 +1 488 488
+1 * 488 488

fn=(72)
0x404db7 379 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474 1 0 0 1
+4 * 474 0 474
+4 * 474 0 474
+4 +8 474 0 474
+4 +3 474 474
+4 * 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfn=(74)
calls=474 0x404f37 -22 
* * 119628 37818 34504 14 3 3 14 3 3 7614 486 944 118
+5 +1 474 474
+1 * 474 474

fn=(126)
0x404be0 424 474 0 474
+1 * 474
+3 * 474 0 474
+2 * 474 0 474
+1 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 * 474 0 474
+4 +4 474 474
+4 * 474
+3 * 474 0 474
cfn=(128)
calls=474 0x404878 277 
* * 7110 2844 2370 1 0 0 1
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(132)
calls=474 0x404d44 277 
* * 11850 4266 3792 2 0 0 2
+5 * 474
+3 * 474 474
+4 * 474
+3 * 474 0 474
cfn=(132)
calls=474 0x404d44 277 
* * 11850 4266 3792
+5 * 474
+3 * 474
+3 * 474
+3 * 474 0 474
cfn=(138)
calls=474 0x404d5e -49 
* * 126738 40188 37348 1 1 7 1 1 7 7614 471 944
+5 +1 474
+4 * 474 474
+1 * 474 474
+2 * 474 474
+1 * 474 474

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 948 0 948 1 0 0 1
+1 * 948
+3 * 948 0 948
+4 +1 948 948
+4 * 948 948
+1 * 948 948

fn=(110)
0x404380 726 948 0 948 1 0 0 1
+1 * 948
+3 * 948 0 948
+4 * 948 0 948
+4 * 948 948
+4 * 948 948
+3 * 948 948
+4 * 948 0 948
+3 * 948 948
+1 * 948 948

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 948 0 948 1 0 0 1
+1 * 948
+3 * 948 0 948
+4 +1 948 948
+4 * 948 948
+1 * 948 948

fn=(44)
0x404468 726 948 0 948
+1 * 948
+3 * 948 0 948
+4 * 948 0 948
+4 * 948 948
+4 * 948 948
+3 * 948 948
+4 * 948 0 948 1 0 0 1
+3 * 948 948
+1 * 948 948

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(262)
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 481 0 481 1 0 0 1
+1 * 481
+3 * 481 0 481
+4 * 481 0 481 1 0 0 1
+4 * 481 481
+1 * 481 481

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 481 0 481 1 0 0 1
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 +4 481 481
+4 * 481 481
+4 * 481
+3 * 481
+3 * 481 0 481
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=481 0x40454c -14 
* * 2886 962 1443 1 0 0 1
+5 +2 481 481
+1 * 481 481

fn=(150)
0x40326c 148 481 0 481
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 * 481 0 481
+4 +3 481 481 0 1 0 0 1
+4 * 481 481
+4 * 481
+3 * 481
+3 * 481 0 481
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=481 0x403d1a -29 
* * 8658 2886 3367 3 0 0 3
+5 +1 481 481
+1 * 481 481

fn=(180)
0x40334a 148 481 0 481
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 * 481 0 481
+4 +3 481 481
+4 * 481 481
+4 * 481
+3 * 481
+3 * 481 0 481
cfn=(182)
calls=481 0x403dcc -29 
* * 8658 2886 3367 2 0 0 2
+5 +1 481 481
+1 * 481 481

fn=(152)
0x403d1a 122 481 0 481 1 0 0 1
+1 * 481
+3 * 481
+4 * 481 0 481
+4 * 481 0 481
+4 +4 481 481
+4 * 481 481
+4 * 481
+3 * 481
+3 * 481 0 481
cfn=(154)
calls=481 0x4044f8 -14 
* * 2886 962 1443 2 0 0 2
+5 +2 481 481
+1 * 481 481

fn=(184)
0x40454c 112 481 0 481 1 0 0 1
+1 * 481
+3 * 481 0 481
+4 * 481 0 481
+4 * 481 481
+1 * 481 481

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2124 390 388 0 4 6 0 4 6 300 37 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 13 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 2934 624 569 12 8 5 12 8 5 470 57 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 3 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 237 0 237 1 0 0 1
+1 * 237
+3 * 237
+4 * 237 0 237
+4 * 237 0 237
+4 +1 237 237
+4 * 237
+3 * 237 0 237
cfi=(2)
cfn=(2)
calls=237 0x402d74 645 
* * 3081 1422 474
+5 * 237
+3 * 237 0 237
+3 +1 237 237
+6 * 237 0 237
+3 * 237 237
+6 * 237 0 237
+3 +1 237 237
+6 * 237 0 237 1 0 0 1
+3 * 237 237
+6 * 237 0 237
+3 +2 237 0 237
+7 * 237
jump=237 +86 * 
* * 
+2 +1 28440 28440
+3 * 28440
+3 * 28440 28440
+4 * 28440
+3 * 28440
+3 * 28440 0 28440
cfi=(2)
cfn=(144)
calls=28440 0x402d9a 770 
* * 312840 142200 85320
+5 * 28440 28440
+4 * 28440 28440
+5 * 28440
+4 * 28440 0 28440
+5 +1 28440 28440
+3 * 28440
+3 * 28440 28440
+4 * 28440
+3 * 28440
+3 * 28440 0 28440
cfi=(2)
cfn=(146)
calls=28440 0x402dba 770 
* * 312840 142200 85320 1 0 0 1
+5 * 28440 28440
+2 * 28440
+4 * 28440 28440
+5 * 28440
+4 * 28440 0 28440
+5 -2 28440 0 28440
+4 * 28440 28440
+3 * 28440
+3 * 28440 28440
+3 * 28440 0 0 0 0 0 0 0 0 28440 238
jcnd=28203/28440 -93 +1 
* * 
-9 * 237 237 0 1 0 0 1
+3 * 237
+3 * 237 237
+3 * 237 0 0 0 0 0 0 0 0 237
jcnd=237/237 -93 +1 
* * 
+2 +4 237 237
+3 * 237
+3 * 237
+4 * 237 237 0 1 0 0 1
+5 * 237
+4 * 237
+3 * 237 0 237
+5 +1 237 237
+3 * 237
+3 * 237
+4 * 237 237
+5 * 237
+4 * 237
+3 * 237 0 237
+5 +1 237 0 237
+7 * 237
jump=237 0x4016ee * 
* * 
+2 +1 28440 28440
+3 * 28440
+3 * 28440 28440
+4 * 28440
+3 * 28440 0 0 1 0 0 1
+3 * 28440 0 28440
cfi=(2)
cfn=(146)
calls=28440 0x402dba 770 
* * 312840 142200 85320
+5 * 28440 28440
+2 * 28440
+4 * 28440 28440
+5 * 28440 0 28440
+5 +1 28440 28440
+3 * 28440
+3 * 28440 28440
+4 * 28440
+3 * 28440
+3 * 28440 0 28440
cfi=(2)
cfn=(144)
calls=28440 0x402d9a 770 
* * 312840 142200 85320
+5 * 28440 28440
+4 * 28440 28440
+5 * 28440 0 28440
+5 +1 28440 28440
+5 * 28440 28440
+5 * 28440 28440
+5 * 28440
+4 * 28440 0 28440
+5 +1 28440 28440
+5 * 28440 28440
+5 * 28440 28440
+5 * 28440
+4 * 28440 0 28440
+5 -4 28440 0 28440
+4 * 28440 28440
+3 * 28440
+3 * 28440 28440
+3 * 28440 0 0 0 0 0 0 0 0 28440 238
jcnd=28203/28440 0x401672 +1 
* * 
-9 * 237 237 0 1 0 0 1
+3 * 237
+3 * 237 237
+3 * 237 0 0 0 0 0 0 0 0 237
jcnd=237/237 0x401672 +1 
* * 
+6 +6 237 237 0 1 0 0 1
+5 * 237 237
+5 * 237 0 237
+5 +2 237 237
+3 +1 237 0 237
+3 * 237 237
+5 * 237 237
+1 * 237 237

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 237
+7 * 237
+7 * 237
+3 * 237
+3 * 237 0 237
cfi=(2)
cfn=(4)
calls=237 0x4030b2 310 
* * 235451 67692 63132 65 23 16 65 23 16 15069 704 946 118
+5 * 237
+7 * 237
+7 * 237
+3 * 237
+3 * 237 0 237
cfi=(2)
cfn=(80)
calls=237 0x402ff4 310 
* * 236797 67398 61969 48 10 33 48 10 33 15429 744 946
+5 * 237 0 0 1 0 0 1
+7 * 237
+7 * 237
+3 * 237
+3 * 237 0 237
cfn=(142)
calls=237 0x401585 -52 
* * 2973165 1314165 686589 8 0 0 8 0 0 57354 476
+5 * 237 0 237
+8 * 237 237
+6 * 237 0 237
+6 * 237
+7 * 237
+3 * 237 0 237
cfi=(2)
cfn=(148)
calls=237 0x402df4 414 
* * 58672 18387 13071 33 5 0 33 5 0 6403 209 474
+5 * 237
+7 * 237
+3 * 237 0 237 1 0 0 1
cfi=(2)
cfn=(178)
calls=237 0x402e74 414 
* * 62032 19671 14007 7 1 0 7 1 0 7375 18 474
+5 +2 237
+7 * 237
+7 * 237
+3 * 237
+3 * 237 0 237
cfi=(2)
cfn=(4)
calls=237 0x4030b2 310 
* * 235112 67668 63028 2 0 1 2 0 1 15042 426 946
+5 * 237
+7 * 237
+7 * 237
+3 * 237
+3 * 237 0 237
cfi=(2)
cfn=(80)
calls=237 0x402ff4 310 
* * 235761 67327 61799 0 0 2 0 0 2 15265 440 946
+5 * 237 237
+6 * 237 0 0 1 0 0 1
+7 * 237
+7 * 237 0 237
+6 * 237 237
+8 * 237
+3 * 237
+3 * 237 0 237
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=237 0x401719 -33 
* * 1379103 574014 316395 4 0 0 4 0 0 28677 238
+5 * 237 0 237
+8 * 237 237
+6 * 237 0 237
+6 * 237
+7 * 237 0 0 1 0 0 1
+3 * 237 0 237
cfi=(2)
cfn=(148)
calls=237 0x402df4 414 
* * 58672 18387 13071 0 0 0 0 0 0 6403 206 474
+5 * 237
+7 * 237
+3 * 237 0 237
cfi=(2)
cfn=(178)
calls=237 0x402e74 414 
* * 62032 19671 14007 0 0 0 0 0 0 7375 15 474
+5 +2 237 237
+7 * 237
+3 * 237 0 237
cfi=(2)
cfn=(2)
calls=237 0x402d74 645 
* * 3081 1422 474
+5 * 237 237
+6 * 237
+3 * 237
+3 * 237
+3 * 237 237
+7 * 237
+3 * 237 0 0 1 0 0 1
+3 * 237 0 237
cfi=(2)
cfn=(144)
calls=237 0x402d9a 770 
* * 2607 1185 711
+5 * 237
+3 * 237
+7 * 237
+3 * 237
+3 * 237 0 237
cfi=(2)
cfn=(200)
calls=237 0x402eda 901 
* * 25946 9457 7348 38 24 11 38 24 11 1224 72 41
+5 +1 237 237
+7 * 237
+3 * 237 0 237
cfi=(2)
cfn=(10)
calls=237 0x402f54 645 
* * 3081 1422 474 0 1 0 0 1
+5 * 237 237
+6 * 237
+3 * 237
+3 * 237
+3 * 237 237
+7 * 237 0 0 1 0 0 1
+3 * 237
+3 * 237 0 237
cfi=(2)
cfn=(146)
calls=237 0x402dba 770 
* * 2607 1185 711
+5 * 237
+3 * 237
+7 * 237
+3 * 237
+3 * 237 0 237
cfi=(2)
cfn=(244)
calls=237 0x402f7a 901 
* * 25169 9240 7170 19 19 16 19 19 16 1063 53 41
+5 +1 237 237
+7 * 237
+3 * 237 0 237
cfi=(2)
cfn=(10)
calls=237 0x402f54 645 
* * 3081 1422 474
+5 * 237 237
+6 * 237
+3 * 237
+3 * 237
+3 * 237 237 0 1 0 0 1
+7 * 237
+3 * 237
+3 * 237 0 237
cfi=(2)
cfn=(146)
calls=237 0x402dba 770 
* * 2607 1185 711
+5 * 237 237
+2 * 237
+4 * 237 237
+8 * 237 237
+8 * 237 0 237
+8 +1 237 237
+7 * 237
+3 * 237 0 237
cfi=(2)
cfn=(2)
calls=237 0x402d74 645 
* * 3081 1422 474
+5 * 237 237 0 1 0 0 1
+6 * 237
+3 * 237
+3 * 237
+3 * 237 237
+7 * 237
+3 * 237
+3 * 237 0 237
cfi=(2)
cfn=(144)
calls=237 0x402d9a 770 
* * 2607 1185 711
+5 * 237 237
+4 * 237 237
+8 * 237
+4 * 237 237
+8 * 237
+3 * 237 0 237
+8 +2 237 0 237
+7 -12 237 237
+8 * 237 237
+7 * 237 0 0 0 0 0 0 0 0 237 3
jcnd=1/237 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 237
+7 * 237
+3 * 237 0 237
cfi=(2)
cfn=(2)
calls=237 0x402d74 645 
* * 3081 1422 474 2 0 1 2 0 1
+5 * 237
+3 * 237 237
+7 * 237
+3 * 237 0 237
cfi=(2)
cfn=(2)
calls=237 0x402d74 645 
* * 3081 1422 474 0 1 0 0 1
+5 * 237
+3 * 237 0 0 0 0 0 0 0 0 237
+2 * 237 0 0 1 0 0 1
+5 * 237
jump=237 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 237
+2 * 237 0 0 0 0 0 0 0 0 237
jcnd=237/237 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 237 0 237
+1 * 237
+3 * 237
+4 * 237 0 237
+4 * 237 0 237
+4 * 237 0 237
+5 +1 237 237
+4 * 237
+3 * 237 0 237
cfi=(2)
cfn=(2)
calls=237 0x402d74 645 
* * 3081 1422 474
+5 * 237
+3 * 237 0 237
+3 +1 237 237 0 1 0 0 1
+6 * 237 0 237
+3 * 237 237
+6 * 237 0 237
+3 +2 237 0 237
+7 * 237
jump=237 +86 * 
* * 
+2 +1 28440 28440
+3 * 28440
+3 * 28440 28440
+4 * 28440
+3 * 28440
+3 * 28440 0 28440
cfi=(2)
cfn=(144)
calls=28440 0x402d9a 770 
* * 312840 142200 85320
+5 * 28440 28440
+4 * 28440 28440
+5 * 28440
+4 * 28440 0 28440
+5 +1 28440 28440
+3 * 28440
+3 * 28440 28440
+4 * 28440
+3 * 28440
+3 * 28440 0 28440
cfi=(2)
cfn=(146)
calls=28440 0x402dba 770 
* * 312840 142200 85320
+5 * 28440 28440
+2 * 28440
+4 * 28440 28440
+5 * 28440
+4 * 28440 0 28440
+5 -2 28440 0 28440
+4 * 28440 28440
+3 * 28440
+3 * 28440 28440
+3 * 28440 0 0 0 0 0 0 0 0 28440 238
jcnd=28203/28440 -93 +1 
* * 
-9 * 237 237 0 1 0 0 1
+3 * 237
+3 * 237 237
+3 * 237 0 0 0 0 0 0 0 0 237
jcnd=237/237 -93 +1 
* * 
+2 +4 237 237
+3 * 237
+3 * 237 0 0 1 0 0 1
+4 * 237 237
+5 * 237
+4 * 237
+3 * 237 0 237
+5 +1 237 237
+3 * 237
+3 * 237
+4 * 237 237
+5 * 237
+4 * 237
+3 * 237 0 237
+5 +1 237 237
+5 * 237 237
+5 * 237 237
+5 * 237 0 0 1 0 0 1
+4 * 237
+3 * 237 0 237
+5 +2 237 237
+3 +1 237 0 237
+3 * 237 237
+5 * 237 237
+1 * 237 237

fl=(4)
fn=(174)
0x403ccc 121 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 474
+4 * 474
+3 * 474 0 474
cfi=(5)
cfn=(176)
calls=474 0x4044cc -35 
* * 2370 948 948
+5 * 474 474
+1 * 474 474

fn=(90)
0x4047b2 115 474 0 474 1 0 0 1
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474 1 0 0 1
+4 +1 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfi=(5)
cfn=(92)
calls=474 0x4049d4 -35 
* * 2844 948 1422 1 0 0 1
+5 * 474 474
+1 * 474 474

fn=(194)
0x403d7e 121 474 0 474 1 0 0 1
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 474
+4 * 474
+3 * 474 0 474
cfi=(5)
cfn=(196)
calls=474 0x404520 -35 
* * 2370 948 948
+5 * 474 474
+1 * 474 474

fn=(16)
0x404804 115 474 0 474 1 0 0 1
+1 * 474
+3 * 474
+4 * 474 0 474
+4 * 474 0 474
+4 +1 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474 0 474
cfi=(5)
cfn=(18)
calls=474 0x404a28 -35 
* * 2844 948 1422 1 0 1 1 0 1
+5 * 474 474
+1 * 474 474

fl=(3)
fn=(256)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28)
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84)
0x4039ed 224 474 0 474
+1 * 474
+3 * 474 0 474
+4 * 474 474
+4 * 474 474
+1 * 474 474

fn=(222)
0x403373 215 237 0 237
+1 * 237
+3 * 237
+4 * 237 0 237
+4 * 237 0 237
+4 * 237 0 237
+4 +1 237 237
+4 * 237 237
+4 * 237 237
+4 * 237
+3 * 237
+3 * 237 0 237
cfi=(5)
cfn=(224)
calls=237 0x403df2 -87 
* * 5688 1896 2133 0 16 3 0 16 3 237
+5 * 237 237
+1 * 237 237

fn=(8)
0x403afa 224 474 0 474 1 0 0 1
+1 * 474
+3 * 474 0 474
+4 * 474 474
+4 * 474 474
+1 * 474 474

fn=(264)
0x4036b1 215 237 0 237
+1 * 237
+3 * 237
+4 * 237 0 237
+4 * 237 0 237
+4 * 237 0 237
+4 +1 237 237
+4 * 237 237
+4 * 237 237
+4 * 237
+3 * 237
+3 * 237 0 237
cfi=(5)
cfn=(266)
calls=237 0x40406a -87 
* * 5688 1896 2133 0 15 7 0 15 7 237
+5 * 237 237
+1 * 237 237

fn=(212)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102)
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 962 0 962 1 0 0 1
+2 0 962 0 962
+2 0 962 0 962
+2 0 962
+3 0 962 0 962
+2 0 962 0 962
+1 0 962 0 962
+1 0 962
+3 0 962
+4 0 962 962
+4 0 962 0 962
+4 0 962
+3 0 962
+4 0 962
+3 0 962
+3 0 962
+3 0 962 0 0 1 0 0 1 0 0 962
+6 0 962
+4 0 962 0 0 0 0 0 0 0 0 962
+6 0 962
+4 0 962 0 0 0 0 0 0 0 0 962
+6 0 962 962
+7 0 962 0 0 0 0 0 0 0 0 962 2
jcnd=838/962 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 838
+2 0 838 0 0 0 0 0 0 0 0 838
+6 0 838 838 0 1 0 0 1
+4 0 838
+3 0 838
+2 0 838 0 0 0 0 0 0 0 0 838
jcnd=838/838 0x3877c78a40 0 
* 0 
+6 0 838 838
+4 0 838
+3 0 838 0 0 0 0 0 0 0 0 838
+6 0 838 838
+5 0 838
+4 0 838 0 0 0 0 0 0 0 0 838
jcnd=838/838 0x3877c7907c 0 
* 0 
+6 0 838 838
+5 0 838
+4 0 838 0 0 0 0 0 0 0 0 838
+6 0 838
+4 0 838 0 0 1 0 0 1 0 0 838
+6 0 838
+4 0 838 838
+7 0 838 0 0 0 0 0 0 0 0 838
+6 0 838 838
+6 0 838
+2 0 838 0 0 0 0 0 0 0 0 838
+6 0 838 838
+4 0 838 0 0 0 0 0 0 0 0 838 5
jcnd=834/838 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 838 838 0 1 0 0 1
+4 0 838 0 0 0 0 0 0 0 0 838 336
jcnd=336/838 0x3877c78bf0 0 
* 0 
+6 0 502 502 0 0 1 0 0 1
+6 0 502 0 0 1 0 0 1 0 0 502 46
jcnd=37/502 0x3877c78a78 0 
* 0 
+6 0 465 465
+5 0 465 465
+5 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+9 0 465 0 465
+4 0 465 0 465
+4 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=457/465 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 465
+3 0 465
+4 0 465 465
+4 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
-12 0 37
+4 0 37 37
+4 0 37 37
+4 0 37 0 0 0 0 0 0 0 0 37
+6 0 502
+7 0 502 0 502
+4 0 502 0 502
+4 0 502 0 0 0 0 0 0 0 0 502 62
jcnd=433/502 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 433 0 433
+4 0 433
+3 0 433 0 433
+4 0 433
+4 0 433 0 433
+4 0 433 0 433
+4 0 433
+7 0 433 0 0 0 0 0 0 0 0 433
jcnd=433/433 0x3877c78b20 0 
* 0 
-7 0 336
+7 0 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 0x3877c78b20 0 
* 0 
0x3877c78a40 0 838 0 0 1 0 0 1
+5 0 838 838
+4 0 838 838
+7 0 838 0 0 0 0 0 0 0 0 838
jcnd=838/838 +16 0 
* 0 
+16 0 838 0 838
+5 0 838 0 0 0 0 0 0 0 0 838
+6 0 838
+3 0 838
jump=838 0x3877c7878f 0 
* 0 
+10 0 37 0 37
+6 0 37 0 0 1 0 0 1
jump=37 0x3877c78885 0 
* 0 
0x3877c78b20 0 838 838 0 1 0 0 1
+4 0 838
+2 0 838 0 0 0 0 0 0 0 0 838
+6 0 838 838
+7 0 838 0 0 0 0 0 0 0 0 838
jcnd=838/838 +15 0 
* 0 
+15 0 838 0 838 1 0 0 1
+4 0 838 0 0 0 0 0 0 0 0 838
+6 0 838
+4 0 838 838
+1 0 838 838
+1 0 838 838
+2 0 838 838
+2 0 838 838
+2 0 838 838
+2 0 838 838
0x3877c78bf0 0 336 0 0 1 0 0 1
+3 0 336 0 336
+4 0 336
+3 0 336
+4 0 336 0 336 1 0 0 1
+4 0 336
jump=336 0x3877c788cf 0 
* 0 
0x3877c7907c 0 838 838 0 1 1 0 1 1
+4 0 838 0 0 1 0 0 1
+7 0 838
+4 0 838
+3 0 838
+3 0 838 0 0 0 0 0 0 0 0 838
jcnd=838/838 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 952 0 0 1 0 0 1
+7 0 952
+3 0 952
+3 0 952 952 0 0 1 0 0 1
+4 0 952
+4 0 952 0 0 0 0 0 0 0 0 0 0 952 118
jump=112 0x3877c89be8 0 
* 0 
jump=120 0x3877c89bd0 0 
* 0 
jump=116 0x3877c89bb8 0 
* 0 
jump=120 +11 0 
* 0 
jump=120 0x3877c89c48 0 
* 0 
jump=122 0x3877c89c30 0 
* 0 
jump=120 0x3877c89c18 0 
* 0 
jump=122 0x3877c89c00 0 
* 0 
+11 0 120 120
+3 0 120
+4 0 120
+4 0 120 120
+4 0 120
+4 0 120 0 120
+4 0 120
+9 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-40 0 6930 6930
+4 0 6930 0 6930 0 0 3 0 0 3
+4 0 6930 6930
+4 0 6930 0 6930
+4 0 6930 6930
+4 0 6930 0 6930 0 0 1 0 0 1
+4 0 6930 6930
+4 0 6930 0 6930
+4 0 6930
+4 0 6930
+4 0 6930 0 0 0 0 0 0 0 0 6930 476
jcnd=916/6930 0x3877c89c60 0 
* 0 
-32 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122
jcnd=10/122 0x3877c89c60 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-16 0 122 122 0 1 0 0 1
+4 0 122 0 122
+4 0 122 0 0 1 0 0 1
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122 4
jcnd=10/122 0x3877c89c60 0 
* 0 
+6 0 6462
+4 0 6462 6462
+3 0 6462 0 6462 0 0 1 0 0 1
+3 0 6462 6462
+4 0 6462 0 6462 0 0 3 0 0 3
+4 0 6462 6462
+4 0 6462 0 6462 0 0 4 0 0 4
+4 0 6462 6462
+4 0 6462 0 6462
+4 0 6462
jump=6462 -80 0 
* 0 
-30 0 112 112
+3 0 112 0 112
+3 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-16 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116
jump=116 -80 0 
* 0 
+8 0 116 116
+3 0 116
+4 0 116 0 0 1 0 0 1
+4 0 116
+4 0 116
jump=116 -39 0 
* 0 
+9 0 120
+3 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+3 0 120
+4 0 120
jump=120 -72 0 
* 0 
+8 0 112
+4 0 112 112
+3 0 112 0 0 0 0 0 0 0 0 112
+2 0 112
+4 0 112
jump=112 -99 0 
* 0 
+11 0 122 122 0 1 0 0 1
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b78 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b70 0 
* 0 
+9 0 122 122
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b68 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b60 0 
* 0 
+9 0 952 0 952 1 0 0 1
+3 0 952 952

fn=(104) alloc_perturb
0x3877c77180 0 844 844 0 1 0 0 1
+6 0 844
+2 0 844 0 0 0 0 0 0 0 0 844 1
+2 0 844 844

fn=(38) _int_malloc
0x3877c79a00 0 962 0 962 1 0 0 1
+2 0 962
+3 0 962 0 962
+2 0 962 0 962
+2 0 962 0 962 0 0 1 0 0 1
+2 0 962
+3 0 962 0 962
+1 0 962 0 962
+1 0 962
+4 0 962
+4 0 962 0 0 0 0 0 0 0 0 962
+6 0 962
+4 0 962
+6 0 962
+3 0 962
+4 0 962
+4 0 962
+4 0 962
+3 0 962 0 0 0 0 0 0 0 0 962
+6 0 962 962 0 1 1 0 1 1
+7 0 962 0 0 0 0 0 0 0 0 962 5
jcnd=840/962 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 844
+4 0 844 844
+1 0 844 844
+1 0 844 844
+2 0 844 844
+2 0 844 844
+2 0 844 844
+2 0 844 844
+7 0 857
+7 0 857 0 0 1 0 0 1 0 0 857 3
jcnd=2/857 0x3877c79b70 0 
* 0 
+2 0 855
+3 0 855
+5 0 855
+3 0 855
+4 0 855 0 855
+4 0 855
+2 0 855
+5 0 855 855 0 0 11 0 0 11
+4 0 855
+3 0 855 0 0 0 0 0 0 0 0 855
jcnd=855/855 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 894 237 190 8 2 0 8 2 0 184 28
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 856 0 0 1 0 0 1
+3 0 856
+3 0 856
+3 0 856
+4 0 856
+3 0 856
+4 0 856 0 856
+5 0 856
+3 0 856 0 856
+4 0 856 0 856
+4 0 856 0 856
+5 0 856
+3 0 856
+3 0 856
+3 0 856
+3 0 856
+4 0 856
+4 0 856 0 0 1 0 0 1
+4 0 856 0 856
+4 0 856
+4 0 856 0 856
+5 0 856 0 856
+5 0 856
+3 0 856
+3 0 856 0 856
+5 0 856
+5 0 856
+3 0 856 0 856
+4 0 856 0 856
+4 0 856
+6 0 856 0 856
+4 0 856 0 856
+5 0 856 0 0 1 0 0 1
+3 0 856
+3 0 856
+3 0 856
jump=856 +87 0 
* 0 
+8 0 808
+3 0 808
+4 0 808
+2 0 808
+2 0 808
+3 0 808
+3 0 808
+3 0 808
+2 0 808
+2 0 808
+5 0 808
+2 0 808 808 0 0 2 0 0 2
+4 0 808
+3 0 808
+4 0 808 0 808
+4 0 808 0 808 0 0 1 0 0 1
+8 0 808
+7 0 808 0 808
+4 0 808 0 808 0 0 2 0 0 2
+4 0 808 0 808
+4 0 808 0 0 0 0 0 0 0 0 808
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1733 1733 0 1 0 0 1
+4 0 1733
+3 0 1733 0 0 0 0 0 0 0 0 1733 35
jcnd=825/1733 0x3877c79ef0 0 
* 0 
+6 0 908 908
+4 0 908 908 0 0 1 0 0 1
+4 0 908
+4 0 908 0 0 0 0 0 0 0 0 908
+6 0 908 908 0 1 1 0 1 1
+7 0 908 0 0 0 0 0 0 0 0 908
+6 0 908
+4 0 908
+7 0 908 0 0 0 0 0 0 0 0 908 3
jcnd=7/908 +11 0 
* 0 
+2 0 901
+3 0 901 0 0 0 0 0 0 0 0 901 62
jcnd=825/901 0x3877c79e28 0 
* 0 
+6 0 889
+3 0 889 0 889
+4 0 889 0 889
+5 0 889 0 0 0 0 0 0 0 0 889 10
jcnd=13/889 0x3877c7a090 0 
* 0 
+6 0 876
+7 0 876 0 0 0 0 0 0 0 0 876 12
jcnd=808/876 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 5
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 825 825 0 1 0 0 1
+4 0 825
+3 0 825 0 0 0 0 0 0 0 0 825 333
jcnd=419/825 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=387/406 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 825 0 0 1 0 0 1
+7 0 825
+3 0 825 0 0 0 0 0 0 0 0 825 1
jcnd=2/825 0x3877c7a0b0 0 
* 0 
+6 0 825 825 0 1 0 0 1
+4 0 825
+3 0 825
+3 0 825
+2 0 825
+4 0 825
+3 0 825
+3 0 825
+2 0 825
+2 0 825
+2 0 825
+2 0 825 825
+8 0 825
+5 0 825
+5 0 825
+2 0 825 0 0 0 0 0 0 0 0 825
-2 0 416
+2 0 416 0 0 0 0 0 0 0 0 416
+2 0 1241
+2 0 1241 0 0 0 0 0 0 0 0 1241 24
jcnd=630/1241 +64 0 
* 0 
+2 0 611
+8 0 611
+3 0 611
+3 0 611 0 0 0 0 0 0 0 0 611 1
jcnd=1/611 0x3877c79fc0 0 
* 0 
-6 0 736
+3 0 736
+3 0 736 0 0 0 0 0 0 0 0 736 3
jcnd=335/736 0x3877c79fc0 0 
* 0 
+2 0 1011
+2 0 1011 1011
+8 0 1011
+2 0 1011 0 0 0 0 0 0 0 0 1011 14
jcnd=736/1011 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 6649
+4 0 6649
+2 0 6649
+2 0 6649 0 0 0 0 0 0 0 0 6649 421
jcnd=5849/6649 -8 0 
* 0 
-2 0 630 0 0 1 0 0 1
+2 0 630 0 0 0 0 0 0 0 0 630 16
jcnd=587/630 -8 0 
* 0 
+2 0 905 905 0 0 6 0 0 6
+4 0 905 0 0 1 0 0 1
+3 0 905 0 0 0 0 0 0 0 0 905 396
jcnd=489/905 0x3877c7a1cf 0 
* 0 
+6 0 416
+2 0 416
+4 0 416
+2 0 416
+2 0 416
+2 0 416 0 416
+8 0 416
jump=416 0x3877c79f30 0 
* 0 
+37 0 336 336 0 1 0 0 1
+5 0 336 336
+4 0 336
+4 0 336 336
+5 0 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 489 489 0 1 1 0 1 1
+4 0 489 489
+4 0 489
+3 0 489 489
+4 0 489
+4 0 489
+3 0 489
+3 0 489 489
+4 0 489 0 0 0 0 0 0 0 0 489
+6 0 489 489
+4 0 489 0 0 0 0 0 0 0 0 489
+6 0 489 489 0 1 0 0 1
+8 0 489 0 489
+4 0 489 0 489
+4 0 489 0 0 0 0 0 0 0 0 489 7
jcnd=419/489 +38 0 
* 0 
+2 0 70 70 0 0 2 0 0 2
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 468 468
+4 0 468 468 0 1 0 0 1
+4 0 468 0 0 0 0 0 0 0 0 468
+6 0 468
+4 0 468
+7 0 468 0 468 0 0 7 0 0 7
+4 0 468 0 468
+4 0 468 0 468
+4 0 468 0 468
+4 0 468 0 0 0 0 0 0 0 0 468 2
jcnd=2/468 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 461 0 0 1 0 0 1
+7 0 461 0 461
+4 0 461
+3 0 461
+3 0 461
+4 0 461
+3 0 461
+4 0 461
+3 0 461
+3 0 461
+4 0 461 0 461
+4 0 461 0 461 0 0 1 0 0 1
+4 0 461
jump=461 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 21
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 +7 0 
* 0 
+7 0 489
+4 0 489 0 0 1 0 0 1
+3 0 489
+3 0 489 0 489
cfn=(104)
calls=489 0x3877c77180 0 
* 0 1956 978 0 1 0 0 1 0 0 489
+5 0 489
+3 0 489
jump=489 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 336 0 0 1 0 0 1
+7 0 336
+2 0 336
+4 0 336
+3 0 336
+3 0 336 0 336
+5 0 336
+3 0 336
+4 0 336
+3 0 336 0 0 1 0 0 1
+4 0 336
+4 0 336
+3 0 336
+4 0 336 0 336
+4 0 336 0 336 0 0 12 0 0 12
+4 0 336
+3 0 336
+3 0 336 0 336
cfn=(104)
calls=336 0x3877c77180 0 
* 0 1344 672 0 0 0 0 0 0 0 336 1
+5 0 336
+3 0 336
jump=336 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 962 0 962 1 0 0 1
+5 0 962 0 962
+5 0 962
+3 0 962 0 962
+5 0 962
+4 0 962 962 0 0 1 0 0 1
+7 0 962 962 0 0 1 0 0 1
+3 0 962
+3 0 962 0 0 0 0 0 0 0 0 962
+6 0 962 962 0 0 1 0 0 1
+7 0 962 962 0 1 1 0 1 1
+4 0 962
+3 0 962 0 0 0 0 0 0 0 0 962
+2 0 962 962 0 0 1 0 0 1
+3 0 962
+3 0 962 0 0 0 0 0 0 0 0 962
jcnd=962/962 +97 0 
* 0 
+18 0 962
+3 0 962
+3 0 962 0 962
cfn=(38)
calls=962 0x3877c79a00 0 
* 0 217407 26327 30851 42 32 46 42 32 46 33841 1434
+5 0 962
+3 0 962
+3 0 962 0 0 0 0 0 0 0 0 962
+2 0 962
+3 0 962 0 0 0 0 0 0 0 0 962
+2 0 962
+3 0 962 0 0 0 0 0 0 0 0 962 5
+2 0 962 962
+7 0 962 0 0 0 0 0 0 0 0 962
jcnd=962/962 +13 0 
* 0 
+13 0 962 0 962
+2 0 962 0 0 0 0 0 0 0 0 962 12
+6 0 962
+3 0 962 962
+4 0 962 962
+5 0 962 962
+5 0 962
+4 0 962 962
+1 0 962 0 0 1 0 0 1
+5 0 962 962 0 0 1 0 0 1
+7 0 962 0 0 0 0 0 0 0 0 962
jcnd=962/962 +14 0 
* 0 
+14 0 962 0 962 1 0 0 1
+3 0 962 0 0 0 0 0 0 0 0 962
+6 0 962
jump=962 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 962 0 962 1 0 0 1
+2 0 962
+3 0 962
+3 0 962 0 962
+2 0 962
+3 0 962 0 962
+1 0 962
+3 0 962 0 962
+1 0 962
+3 0 962
+4 0 962
+3 0 962 0 0 0 0 0 0 0 0 962
+6 0 962
+4 0 962
+3 0 962 0 0 0 0 0 0 0 0 962 4
jcnd=10/962 0x3877c838d1 0 
* 0 
+2 0 952
+3 0 952
+3 0 952
+3 0 952
+3 0 952
+3 0 952 0 0 0 0 0 0 0 0 952
jcnd=952/952 +41 0 
* 0 
+41 0 952 0 0 1 0 0 1
+3 0 952 0 0 0 0 0 0 0 0 952
jcnd=952/952 0x3877c839c0 0 
* 0 
+24 0 952
+3 0 952
+4 0 952
+3 0 952
+3 0 952
+3 0 952
+3 0 952
+3 0 952 0 0 0 0 0 0 0 0 952 472
jcnd=484/952 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 478
+10 0 478 478 0 0 2 0 0 2
+3 0 478
+4 0 478 0 478
+3 0 478
+4 0 478
+4 0 478 0 0 0 0 0 0 0 0 478
jcnd=478/478 -18 0 
* 0 
-18 0 1490 1490
+3 0 1490
+4 0 1490 0 1490
+3 0 1490
+4 0 1490
+4 0 1490 0 0 0 0 0 0 0 0 1490 8
jcnd=1012/1490 -18 0 
* 0 
+2 0 962
+4 0 962
+3 0 962 962
+1 0 962 962
+1 0 962 962
+2 0 962 962 0 1 0 0 1
+2 0 962 962
0x3877c839c0 0 952 0 0 1 0 0 1
+3 0 952
+3 0 952
+3 0 952
+4 0 952 0 952 0 0 1 0 0 1
cfn=(284)
calls=952 0x3877c89b20 0 
* 0 159762 58792 56888 6 1 12 6 1 12 7646 480 952 118
+5 0 952
jump=952 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 962 962 0 1 1 0 1 1
+7 0 962 962 0 0 1 0 0 1
+3 0 962
+3 0 962 0 0 1 0 0 1 0 0 962
+6 0 962
+3 0 962 0 0 0 0 0 0 0 0 962
+6 0 962 962
+4 0 962
+4 0 962
+2 0 962 0 0 0 0 0 0 0 0 962
+2 0 962
+2 0 962
+7 0 962 0 0 0 0 0 0 0 0 962
jcnd=962/962 +14 0 
* 0 
+14 0 962
+2 0 962
cfn=(170)
calls=962 0x3877c78650 0 
* 0 91885 24283 13579 19 2 0 19 2 0 22131 457

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=11/12 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 5648357 2272277 1334385 238 86 81 238 86 81 177392 3604 5762 118
