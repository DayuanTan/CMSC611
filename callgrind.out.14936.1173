version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1173


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1454376399 - 1457336967
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2250 0 0 1 0 0 1
+3 0 2250 0 0 0 0 0 0 0 0 2250
+2 0 2250
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2250 0x3877c7b8b0 0 
* 0 269611 70356 38370 22 5 0 22 5 0 66595 837
* 0 2250 2250 0 1 1 0 1 1 0 0 0 2250

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2250 0 2250 1 0 0 1
+1 0 2250
+5 0 2250
+3 0 2250 0 2250
+1 0 2250
+4 0 2250 0 0 1 0 0 1
+3 0 2250
+4 0 2250
+3 0 2250 0 2250 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2250 0x3877c7aa50 0 
* 0 665708 97962 101073 51 44 66 51 43 66 112252 4809
* 0 2250 2250 0 1 1 0 1 1 0 0 0 2250
+5 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250
jcnd=2250/2250 +96 0 
* 0 
+96 0 2250 0 0 1 0 0 1
+4 0 2250 2250
+1 0 2250 2250
+1 0 2250 2250

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 558 0 558 1 0 0 1
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 +1 558 558
+4 * 558
+3 * 558 0 558
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=558 0x402d74 645 
* * 7254 3348 1116
+5 * 558
+3 * 558 0 558
+3 +1 558 558
+6 * 558 0 558
+3 * 558 558
+6 * 558 0 558
+3 +1 558 558
+6 * 558 0 558 1 0 0 1
+3 * 558 558
+6 * 558 0 558
+3 +2 558 0 558
+7 * 558
jump=558 +86 * 
* * 
+2 +1 156519 156519
+3 * 156519
+3 * 156519 156519
+4 * 156519
+3 * 156519
+3 * 156519 0 156519
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=156519 0x402d9a 770 
* * 1721709 782595 469557
+5 * 156519 156519
+4 * 156519 156519
+5 * 156519
+4 * 156519 0 156519
+5 +1 156519 156519
+3 * 156519
+3 * 156519 156519
+4 * 156519
+3 * 156519
+3 * 156519 0 156519
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=156519 0x402dba 770 
* * 1721709 782595 469557 1 0 0 1
+5 * 156519 156519
+2 * 156519
+4 * 156519 156519
+5 * 156519
+4 * 156519 0 156519
+5 -2 156519 0 156519
+4 * 156519 156519
+3 * 156519
+3 * 156519 156519
+3 * 156519 0 0 0 0 0 0 0 0 156519 559
jcnd=155961/156519 -93 +1 
* * 
-9 * 558 558 0 1 0 0 1
+3 * 558
+3 * 558 558
+3 * 558 0 0 0 0 0 0 0 0 558
jcnd=558/558 -93 +1 
* * 
+2 +4 558 558
+3 * 558
+3 * 558
+4 * 558 558 0 1 0 0 1
+5 * 558
+4 * 558
+3 * 558 0 558
+5 +1 558 558
+3 * 558
+3 * 558
+4 * 558 558
+5 * 558
+4 * 558
+3 * 558 0 558
+5 +1 558 0 558
+7 * 558
jump=558 0x4016ee * 
* * 
+2 +1 156519 156519
+3 * 156519
+3 * 156519 156519
+4 * 156519
+3 * 156519 0 0 1 0 0 1
+3 * 156519 0 156519
cfi=(2)
cfn=(146)
calls=156519 0x402dba 770 
* * 1721709 782595 469557
+5 * 156519 156519
+2 * 156519
+4 * 156519 156519
+5 * 156519 0 156519
+5 +1 156519 156519
+3 * 156519
+3 * 156519 156519
+4 * 156519
+3 * 156519
+3 * 156519 0 156519
cfi=(2)
cfn=(144)
calls=156519 0x402d9a 770 
* * 1721709 782595 469557
+5 * 156519 156519
+4 * 156519 156519
+5 * 156519 0 156519
+5 +1 156519 156519
+5 * 156519 156519
+5 * 156519 156519
+5 * 156519
+4 * 156519 0 156519
+5 +1 156519 156519
+5 * 156519 156519
+5 * 156519 156519
+5 * 156519
+4 * 156519 0 156519
+5 -4 156519 0 156519
+4 * 156519 156519
+3 * 156519
+3 * 156519 156519
+3 * 156519 0 0 0 0 0 0 0 0 156519 559
jcnd=155961/156519 0x401672 +1 
* * 
-9 * 558 558 0 1 0 0 1
+3 * 558
+3 * 558 558
+3 * 558 0 0 0 0 0 0 0 0 558
jcnd=558/558 0x401672 +1 
* * 
+6 +6 558 558 0 1 0 0 1
+5 * 558 558
+5 * 558 0 558
+5 +2 558 558
+3 +1 558 0 558
+3 * 558 558
+5 * 558 558
+1 * 558 558

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 558
+7 * 558
+7 * 558
+3 * 558
+3 * 558 0 558
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=558 0x4030b2 310 
* * 691271 207292 197536 66 19 18 66 19 18 44347 2168 2230 278
+5 * 558
+7 * 558
+7 * 558
+3 * 558
+3 * 558 0 558
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=558 0x402ff4 310 
* * 686058 206196 194179 38 12 122 38 11 122 43792 2156 2230
+5 * 558 0 0 1 0 0 1
+7 * 558
+7 * 558
+3 * 558
+3 * 558 0 558
cfn=(142)
calls=558 0x401585 -52 
* * 16314246 7213824 3765942 8 0 0 8 0 0 314154 1118
+5 * 558 0 558
+8 * 558 558
+6 * 558 0 558
+6 * 558
+7 * 558
+3 * 558 0 558
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=558 0x402df4 414 
* * 146397 46130 33239 33 6 0 33 6 0 17398 163 1116
+5 * 558
+7 * 558
+3 * 558 0 558 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=558 0x402e74 414 
* * 148146 46837 33801 7 1 0 7 1 0 17909 251 1116
+5 +2 558
+7 * 558
+7 * 558
+3 * 558
+3 * 558 0 558
cfi=(2)
cfn=(4)
calls=558 0x4030b2 310 
* * 690950 207269 197408 4 0 1 4 0 1 44338 1620 2230
+5 * 558
+7 * 558
+7 * 558
+3 * 558
+3 * 558 0 558
cfi=(2)
cfn=(80)
calls=558 0x402ff4 310 
* * 684930 206127 194009 0 0 0 0 0 0 43601 1703 2230
+5 * 558 558
+6 * 558 0 0 1 0 0 1
+7 * 558
+7 * 558 0 558
+6 * 558 558
+8 * 558
+3 * 558
+3 * 558 0 558
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=558 0x401719 -33 
* * 7545834 3142656 1730079 4 0 0 4 0 0 157077 559
+5 * 558 0 558
+8 * 558 558
+6 * 558 0 558
+6 * 558
+7 * 558 0 0 1 0 0 1
+3 * 558 0 558
cfi=(2)
cfn=(148)
calls=558 0x402df4 414 
* * 146397 46130 33239 0 0 0 0 0 0 17398 155 1116
+5 * 558
+7 * 558
+3 * 558 0 558
cfi=(2)
cfn=(178)
calls=558 0x402e74 414 
* * 148146 46837 33801 0 0 0 0 0 0 17909 246 1116
+5 +2 558 558
+7 * 558
+3 * 558 0 558
cfi=(2)
cfn=(2)
calls=558 0x402d74 645 
* * 7254 3348 1116
+5 * 558 558
+6 * 558
+3 * 558
+3 * 558
+3 * 558 558
+7 * 558
+3 * 558 0 0 1 0 0 1
+3 * 558 0 558
cfi=(2)
cfn=(144)
calls=558 0x402d9a 770 
* * 6138 2790 1674
+5 * 558
+3 * 558
+7 * 558
+3 * 558
+3 * 558 0 558
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=558 0x402eda 901 
* * 51140 19096 14630 48 52 12 48 52 12 2276 100 53
+5 +1 558 558
+7 * 558
+3 * 558 0 558
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=558 0x402f54 645 
* * 7254 3348 1116 0 1 0 0 1
+5 * 558 558
+6 * 558
+3 * 558
+3 * 558
+3 * 558 558
+7 * 558 0 0 1 0 0 1
+3 * 558
+3 * 558 0 558
cfi=(2)
cfn=(146)
calls=558 0x402dba 770 
* * 6138 2790 1674
+5 * 558
+3 * 558
+7 * 558
+3 * 558
+3 * 558 0 558
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=558 0x402f7a 901 
* * 49578 18828 14399 22 40 84 22 40 84 1939 78 53
+5 +1 558 558
+7 * 558
+3 * 558 0 558
cfi=(2)
cfn=(10)
calls=558 0x402f54 645 
* * 7254 3348 1116
+5 * 558 558
+6 * 558
+3 * 558
+3 * 558
+3 * 558 558 0 1 0 0 1
+7 * 558
+3 * 558
+3 * 558 0 558
cfi=(2)
cfn=(146)
calls=558 0x402dba 770 
* * 6138 2790 1674
+5 * 558 558
+2 * 558
+4 * 558 558
+8 * 558 558
+8 * 558 0 558
+8 +1 558 558
+7 * 558
+3 * 558 0 558
cfi=(2)
cfn=(2)
calls=558 0x402d74 645 
* * 7254 3348 1116
+5 * 558 558 0 1 0 0 1
+6 * 558
+3 * 558
+3 * 558
+3 * 558 558
+7 * 558
+3 * 558
+3 * 558 0 558
cfi=(2)
cfn=(144)
calls=558 0x402d9a 770 
* * 6138 2790 1674
+5 * 558 558
+4 * 558 558
+8 * 558
+4 * 558 558
+8 * 558
+3 * 558 0 558
+8 +2 558 0 558
+7 -12 558 558
+8 * 558 558
+7 * 558 0 0 0 0 0 0 0 0 558 1
jcnd=1/558 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 558
+7 * 558
+3 * 558 0 558
cfi=(2)
cfn=(2)
calls=558 0x402d74 645 
* * 7254 3348 1116 2 0 1 2 0 1
+5 * 558
+3 * 558 558
+7 * 558
+3 * 558 0 558
cfi=(2)
cfn=(2)
calls=558 0x402d74 645 
* * 7254 3348 1116 0 1 0 0 1
+5 * 558
+3 * 558 0 0 0 0 0 0 0 0 558 1
+2 * 558 0 0 1 0 0 1
+5 * 558
jump=558 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 558
+2 * 558 0 0 0 0 0 0 0 0 558
jcnd=558/558 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+5 +1 558 558
+4 * 558
+3 * 558 0 558
cfi=(2)
cfn=(2)
calls=558 0x402d74 645 
* * 7254 3348 1116
+5 * 558
+3 * 558 0 558
+3 +1 558 558 0 1 0 0 1
+6 * 558 0 558
+3 * 558 558
+6 * 558 0 558
+3 +2 558 0 558
+7 * 558
jump=558 +86 * 
* * 
+2 +1 156519 156519
+3 * 156519
+3 * 156519 156519
+4 * 156519
+3 * 156519
+3 * 156519 0 156519
cfi=(2)
cfn=(144)
calls=156519 0x402d9a 770 
* * 1721709 782595 469557
+5 * 156519 156519
+4 * 156519 156519
+5 * 156519
+4 * 156519 0 156519
+5 +1 156519 156519
+3 * 156519
+3 * 156519 156519
+4 * 156519
+3 * 156519
+3 * 156519 0 156519
cfi=(2)
cfn=(146)
calls=156519 0x402dba 770 
* * 1721709 782595 469557
+5 * 156519 156519
+2 * 156519
+4 * 156519 156519
+5 * 156519
+4 * 156519 0 156519
+5 -2 156519 0 156519
+4 * 156519 156519
+3 * 156519
+3 * 156519 156519
+3 * 156519 0 0 0 0 0 0 0 0 156519 559
jcnd=155961/156519 -93 +1 
* * 
-9 * 558 558 0 1 0 0 1
+3 * 558
+3 * 558 558
+3 * 558 0 0 0 0 0 0 0 0 558
jcnd=558/558 -93 +1 
* * 
+2 +4 558 558
+3 * 558
+3 * 558 0 0 1 0 0 1
+4 * 558 558
+5 * 558
+4 * 558
+3 * 558 0 558
+5 +1 558 558
+3 * 558
+3 * 558
+4 * 558 558
+5 * 558
+4 * 558
+3 * 558 0 558
+5 +1 558 558
+5 * 558 558
+5 * 558 558
+5 * 558 0 0 1 0 0 1
+4 * 558
+3 * 558 0 558
+5 +2 558 558
+3 +1 558 0 558
+3 * 558 558
+5 * 558 558
+1 * 558 558

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1116 0x4044cc -35 
* * 5580 2232 2232
+5 * 1116 1116
+1 * 1116 1116

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116 1 0 0 1
+4 +1 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1116 0x4049d4 -35 
* * 6696 2232 3348 1 0 0 1
+5 * 1116 1116
+1 * 1116 1116

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1116 0x404520 -35 
* * 5580 2232 2232
+5 * 1116 1116
+1 * 1116 1116

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1116 0x404a28 -35 
* * 6696 2232 3348 1 0 1 1 0 1
+5 * 1116 1116
+1 * 1116 1116

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +1 558 558
+4 * 558 558
+4 * 558 558
+4 * 558
+3 * 558
+3 * 558 0 558
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=558 0x403df2 -87 
* * 13392 4464 5022 0 36 4 0 36 4 558 2
+5 * 558 558
+1 * 558 558

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116 0 1116
+4 * 1116 1116
+4 * 1116 1116
+1 * 1116 1116

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +1 558 558
+4 * 558 558
+4 * 558 558
+4 * 558
+3 * 558
+3 * 558 0 558
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=558 0x40406a -87 
* * 13392 4464 5022 0 36 27 0 36 27 558
+5 * 558 558
+1 * 558 558

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+4 * 1116 1116
+4 * 1116 1116
+1 * 1116 1116

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1206 0 1206
+1 * 1206
+3 * 1206 0 1206
+4 +1 1206 1206
+4 * 1206 1206
+1 * 1206 1206

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232 0 2232
+4 +1 2232 2232 0 1 0 0 1
+4 * 2232 2232
+1 * 2232 2232

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1206 0 1206
+1 * 1206
+3 * 1206 0 1206 0 0 1 0 0 1
+4 +1 1206 1206
+4 * 1206 1206
+1 * 1206 1206

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232
+4 * 2232 0 2232
+4 +1 2232
+4 * 2232
+3 * 2232 0 2232
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2232 0x404ffe 790 
* * 13392 6696 4464 1 0 0 1
+5 * 2232 2232
+3 * 2232 2232
+1 * 2232 2232

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232 0 2232
+4 +1 2232 2232
+4 * 2232 2232
+1 * 2232 2232

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232
+4 * 2232 0 2232
+4 +1 2232
+4 * 2232
+3 * 2232 0 2232 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2232 0x40500c 790 
* * 13392 6696 4464 1 0 0 1
+5 * 2232 2232
+3 * 2232 2232
+1 * 2232 2232

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 1116
+4 * 1116 1116
+1 * 1116 1116

fl=(5)
fn=(102)
0x4048de 113 1143 0 1143 1 0 0 1
+1 * 1143
+3 * 1143 0 1143
+4 +1 1143
+10 * 1143 1143
+1 * 1143 1143

fn=(266)
0x40406a 129 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +1 558 558
+4 * 558
+3 * 558
+5 * 558 0 558
cfi=(16)
cfn=(226)
calls=558 0x402d61 -20 
* * 3906 1674 1674
+5 * 558
+3 * 558 0 0 0 0 0 0 0 0 558
+2 * 558 558
+4 * 558 558 0 0 36 0 0 36
+2 * 558 0 558 0 0 27 0 0 27
+2 * 558 558
+1 * 558 558

fn=(28)
0x404992 113 1143 0 1143 1 0 0 1
+1 * 1143
+3 * 1143 0 1143
+4 +1 1143
+10 * 1143 1143
+1 * 1143 1143

fn=(176)
0x4044cc 86 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+4 * 1116 1116
+1 * 1116 1116

fn=(224)
0x403df2 129 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 * 558 0 558
+4 +1 558 558
+4 * 558
+3 * 558
+5 * 558 0 558
cfi=(16)
cfn=(226)
calls=558 0x402d61 -20 
* * 3906 1674 1674
+5 * 558
+3 * 558 0 0 0 0 0 0 0 0 558 2
+2 * 558 558
+4 * 558 558 0 0 36 0 0 36
+2 * 558 0 558 0 0 4 0 0 4
+2 * 558 558
+1 * 558 558

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1125 0 1125
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 +1 1125 1125
+4 * 1125
+3 * 1125 0 1125
cob=(5)
cfi=(8)
cfn=(164)
calls=1125 0x387e4bb2f0 0 
* * 137524 35580 18619 23 5 0 23 5 0 33903 325 1125
* * 1125 1125 0 1 1 0 1 1 0 0 0 1125
+5 * 1125 1125
+1 * 1125 1125

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1125 0 1125
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 +1 1125 1125
+4 * 1125
+3 * 1125 0 1125
cob=(5)
cfi=(8)
cfn=(164)
calls=1125 0x387e4bb2f0 0 
* * 141087 37026 19751 1 1 0 1 1 0 34942 512 1125
* * 1125 1125 0 0 0 0 0 0 0 0 0 1125
+5 * 1125 1125
+1 * 1125 1125

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1125 0 1125 1 0 0 1
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 +2 1125 1125
+4 * 1125
+3 * 1125 0 1125
cfn=(102)
calls=1125 0x4048de +12 
* * 6750 2250 2250 1 0 0 1
+5 * 1125 1125
+4 * 1125 0 0 1 0 0 1
+3 * 1125
+2 * 1125 0 0 0 0 0 0 0 0 1125
jcnd=1125/1125 +7 +3 
* * 
+7 +3 1125 1125
+4 * 1125
+4 * 1125
+3 * 1125 0 1125
cob=(5)
cfi=(8)
cfn=(32)
calls=1125 0x387e4bd0b0 0 
* * 346051 52512 50653 33 27 49 33 26 49 56782 2492 1125
* * 1125 1125 0 0 0 0 0 0 0 0 0 1125
+5 +1 1125 1125
+1 * 1125 1125

fn=(18)
0x404a28 81 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116 0 1116 0 0 1 0 0 1
+4 * 1116 0 1116
+4 * 1116 1116
+1 * 1116 1116

fn=(92)
0x4049d4 81 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 1116
+1 * 1116 1116

fn=(196)
0x404520 86 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+4 * 1116 1116
+1 * 1116 1116

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1125 0 1125 1 0 0 1
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 * 1125 0 1125 1 0 0 1
+4 +2 1125 1125
+4 * 1125
+3 * 1125 0 1125
cfn=(28)
calls=1125 0x404992 +12 
* * 6750 2250 2250 1 0 0 1
+5 * 1125 1125
+4 * 1125
+3 * 1125
+2 * 1125 0 0 0 0 0 0 0 0 1125
jcnd=1125/1125 +7 +3 
* * 
+7 +3 1125 1125
+4 * 1125
+4 * 1125
+3 * 1125 0 1125
cob=(5)
cfi=(8)
cfn=(32)
calls=1125 0x387e4bd0b0 0 
* * 355657 54450 57170 22 18 18 22 18 18 57720 2317 1125
* * 1125 1125 0 1 1 0 1 1 0 0 0 1125
+5 +1 1125 1125
+1 * 1125 1125

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 7 17
+5 * 18 18
+1 * 18 18

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +2 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1116 0x404484 107 
* * 726516 250004 243312 25 3 3 25 3 3 29104 1520 2228 278
+5 * 1116 1116
+1 * 1116 1116

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 7 17
+5 * 18 18
+1 * 18 18

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +2 1116 1116 0 1 0 0 1
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1116 0x404a36 450 
* * 695268 238844 232152 24 3 3 24 3 3 29104 1520 2228 278
+5 * 1116 1116
+1 * 1116 1116

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +2 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1116 0x40439c 107 
* * 726516 250004 243312 7 1 78 7 1 78 29104 1442 2228
+5 * 1116 1116
+1 * 1116 1116

fn=(116)
0x40439c 107 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +10 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1116 0x4047d7 -26 
* * 710892 244424 237732 7 1 78 7 1 78 29104 1442 2228
+5 +1 1116 1116
+1 * 1116 1116

fn=(118)
0x4047d7 91 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +2 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1116 0x4049e2 450 
* * 695268 238844 232152 7 1 78 7 1 78 29104 1442 2228
+5 * 1116 1116
+1 * 1116 1116

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 50 2 0 50 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 7 17
+5 +1 18 18
+1 * 18 18

fn=(232)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 7 17
+5 +1 18 18
+1 * 18 18

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 50 2 0 50 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 50 1 0 50 140 5 17
+5 * 18 18
+1 * 18 18

fn=(50)
0x404484 107 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +10 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(52)
calls=1116 0x404829 -26 
* * 710892 244424 237732 25 3 3 25 3 3 29104 1520 2228 278
+5 +1 1116 1116
+1 * 1116 1116

fn=(270)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 50 2 0 50 140 5 17
+5 * 18 18
+1 * 18 18

fl=(2)
fn=(4)
0x4030b2 310 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116 0 1116
+2 * 1116 0 1116
+2 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116 1 0 0 1
+4 * 1116 0 1116
+4 +2 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=1116 0x403b08 117 
* * 6696 3348 2232 1 0 1 1 0 1
+5 * 1116
+3 * 1116 0 1116
cfi=(3)
cfn=(8)
calls=1116 0x403afa -88 
* * 6696 3348 2232 1 0 0 1
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(10)
calls=1116 0x402f54 645 
* * 14508 6696 2232 1 1 0 1 1
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=1116 0x403b16 134 
* * 492769 104293 101412 32 15 15 32 15 15 59581 2268 2232
+5 +4 1116 1116 0 1 0 0 1
+4 * 1116
+3 * 1116 0 1116
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=1116 0x40333c 113 
* * 6696 3348 2232 2 0 0 2
+5 * 1116
+3 * 1116 1116
+4 * 1116 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=1116 0x403ba4 565 
* * 27900 11160 8928 3 0 0 3
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=1116 0x403b74 547 
* * 27900 11160 8928
+5 * 1116
+3 * 1116
+3 * 1116
+3 * 1116
+3 * 1116 0 1116 1 0 0 1
cfi=(11)
cfn=(48)
calls=1116 0x403bd5 -60 
* * 743256 255584 250008 26 3 3 26 3 3 29104 1520 2228 278
+5 -3 1116 1116
+4 * 1116 0 1116
+4 * 1116
jump=1116 +28 +4 
* * 
+28 +4 1116
+4 * 1116 1116
+1 * 1116 1116
+2 * 1116 1116
+2 * 1116 1116
+1 * 1116 1116

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+4 * 1116 0 1116
+4 * 1116
+4 * 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1116 0x404380 726 
* * 11160 5580 4464 1 0 0 1
+5 * 1116 1116
+4 * 1116 1116
+1 * 1116 1116

fn=(178)
0x402e74 414 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116 1 0 0 1
+4 +2 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(40)
calls=1116 0x40333c 113 
* * 6696 3348 2232
+5 * 1116
+3 * 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+3 -1 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1116 0x40334a 148 
* * 34596 11160 13392 2 0 0 2
+5 +1 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=1116 0x4032ca 159 
* * 228216 69122 45282 3 1 0 3 1 0 35818 497 2232
+5 * 1116
jump=1116 +28 * 
* * 
+28 * 1116 0 0 1 0 0 1
+4 * 1116 1116
+1 * 1116 1116
+1 * 1116 1116

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1125 0 1125 1 0 0 1
+1 * 1125 0 0 1 0 0 1
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 0 1125 1125
+5 0 1125 0 0 0 0 0 0 0 0 1125
+2 0 1125 1125
+4 0 1125 1125
+4 0 1125
+5 0 1125
+3 0 1125
+3 0 1125 0 1125
fi=(6) ???
cfi=(5)
cfn=(100)
calls=1125 0x40461a 99 
* 0 375301 61512 59653 36 27 49 36 26 49 57907 2492 2250
+5 0 1125
fi=(6)
jump=1125 +7 0 
* 0 
+7 0 1125 1125
+1 0 1125 1125

fn=(144)
0x402d9a 770 470673 0 470673
+1 * 470673
+3 * 470673 0 470673
+4 * 470673 0 470673
+4 +1 470673 470673
+4 * 470673 470673
+3 * 470673 470673
+4 * 470673
+4 * 470673
+3 * 470673 470673
+1 * 470673 470673

fn=(146)
0x402dba 770 470673 0 470673
+1 * 470673
+3 * 470673 0 470673 1 0 0 1
+4 * 470673 0 470673
+4 +1 470673 470673
+4 * 470673 470673
+3 * 470673 470673
+4 * 470673
+4 * 470673
+3 * 470673 470673
+1 * 470673 470673

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfi=(4)
cfn=(194)
calls=1116 0x403d7e +42 
* * 15624 5580 5580 1 0 0 1
+5 * 1116 1116
+1 * 1116 1116

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(186)
0x4032ca 159 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116
+4 +2 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116 1116
+4 * 1116 1116
+3 * 1116
+3 * 1116
+3 * 1116
+4 * 1116
+3 * 1116 1116
+4 * 1116 1116
+3 -1 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1116 0x403d98 +11 
* * 171300 47918 30774 1 1 0 1 1 0 35818 497 2232
+5 +1 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(192)
calls=1116 0x403296 -82 
* * 25668 8928 8928 1 0 0 1
+5 * 1116
jump=1116 +28 * 
* * 
+28 * 1116
+4 * 1116 1116
+1 * 1116 1116
+1 * 1116 1116

fn=(2)
0x402d74 645 4500 0 4500 1 0 0 1
+1 * 4500
+3 * 4500 0 4500 0 0 1 0 0 1
+4 +1 4500 4500
+4 * 4500 4500 0 1 1 0 1 1
+4 * 4500
+3 * 4500 4500
+4 * 4500 4500
+3 * 4500
+3 * 4500
+3 * 4500
+4 * 4500 4500
+1 * 4500 4500

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +2 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1116 0x404236 -14 
* * 400141 68581 70164 26 15 11 26 15 11 59581 2268 2232
+5 * 1116 1116
+4 * 1116 0 1116
+3 +1 1116 1116
+4 * 1116 1116 0 1 0 0 1
+3 * 1116 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+3 * 1116 1116
+4 * 1116
+4 * 1116
+3 * 1116 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+1 * 1116 1116

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +2 1116 1116
+4 * 1116 1116 0 1 0 0 1
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(96)
calls=1116 0x403fbe -14 
* * 388908 66343 63408 16 11 44 16 10 44 58289 2417 2232
+5 * 1116 1116
+4 * 1116 0 1116
+3 +1 1116 1116
+4 * 1116 1116
+3 * 1116 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+3 * 1116 1116
+4 * 1116
+4 * 1116
+3 * 1116 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+1 * 1116 1116

fn=(244)
0x402f7a 901 558 0 558
+1 * 558
+3 * 558 0 0 1 0 0 1
+4 * 558 0 558
+4 * 558 0 558
+4 +2 558 558
+4 * 558 558
+4 * 558 558
+4 * 558 558
+4 * 558
+3 * 558 0 0 0 0 0 0 0 0 558
jcnd=9/558 +51 +10 
* * 
+2 +3 549 549
+4 * 549 549
+4 * 549 549
+4 -1 549 549
+4 * 549
+3 * 549
+3 * 549 0 549
cfi=(3)
cfn=(264)
calls=549 0x4036b1 215 
* * 20862 7137 7686 0 35 22 0 35 22 549
+5 +2 549 549
+4 * 549 549
+4 * 549
+4 * 549 549
+4 * 549 0 549
+4 * 549
jump=549 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 14037 4392 3860 21 5 62 21 5 62 832 78 53
+5 +2 558 558
+1 * 558 558

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40)
0x40333c 113 2259 0 2259 1 0 0 1
+1 * 2259
+3 * 2259 0 2259 1 0 0 1
+4 +1 2259 2259
+4 * 2259 2259
+1 * 2259 2259

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+3 * 1116 0 1116
+4 * 1116
+4 * 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(10)
cfn=(110)
calls=1116 0x404380 726 
* * 11160 5580 4464
+5 * 1116 1116
+4 * 1116 1116
+1 * 1116 1116

fn=(148)
0x402df4 414 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116 1 0 0 1
+4 +2 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1116 0x40325e 113 
* * 6696 3348 2232
+5 * 1116
+3 * 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+3 -1 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1116 0x40326c 148 
* * 34596 11160 13392 4 0 0 4
+5 +1 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1116 0x4031ec 159 
* * 224718 67708 44158 27 6 0 27 6 0 34796 318 2232
+5 * 1116
jump=1116 +28 * 
* * 
+28 * 1116 0 0 1 0 0 1
+4 * 1116 1116
+1 * 1116 1116
+1 * 1116 1116

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1125 0 1125 1 0 0 1
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 +2 1125 1125
+5 * 1125 0 0 0 0 0 0 0 0 1125
+2 +1 1125 1125
+4 * 1125 1125
+4 * 1125 1125
+4 * 1125
+3 * 1125
+3 * 1125 0 1125
cfi=(5)
cfn=(160)
calls=1125 0x4044d6 -65 
* * 151024 40080 24244 24 6 0 24 6 0 33903 325 2250
+5 +1 1125 1125
+1 * 1125 1125

fn=(12)
0x403b16 134 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1116 0x4043ca -45 
* * 40176 14508 15624 4 0 4 4 0 4
+5 +1 1116 1116 0 1 0 0 1
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(20)
calls=1116 0x404412 +43 
* * 428041 81973 77976 27 15 11 27 15 11 59581 2268 2232
+5 * 1116
jump=1116 +28 * 
* * 
+28 * 1116
+4 * 1116 1116
+1 * 1116 1116
+1 * 1116 1116

fn=(14)
0x4043ca 90 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116
+4 * 1116 0 1116 0 0 1 0 0 1
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(4)
cfn=(16)
calls=1116 0x404804 +24 
* * 20088 6696 7812 2 0 1 2 0 1
+5 * 1116 1116
+4 * 1116 0 1116 0 0 2 0 0 2
+7 * 1116 1116
+4 * 1116 0 1116 1 0 0 1
+8 * 1116 1116
+4 * 1116 0 1116
+8 +1 1116 1116
+1 * 1116 1116

fn=(80)
0x402ff4 310 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116 0 1116
+2 * 1116 0 1116
+2 * 1116 0 1116
+1 * 1116 0 0 1 0 0 1
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +2 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(82)
calls=1116 0x4039fc 117 
* * 6696 3348 2232 2 0 0 2
+5 * 1116
+3 * 1116 0 1116
cfi=(3)
cfn=(84)
calls=1116 0x4039ed -88 
* * 6696 3348 2232
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(2)
calls=1116 0x402d74 645 
* * 14508 6696 2232
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116
+3 * 1116 0 1116 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1116 0x403a0a 134 
* * 481536 102055 94656 23 11 44 23 10 44 58289 2417 2232
+5 +4 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(106)
calls=1116 0x40325e 113 
* * 6696 3348 2232 1 0 0 1
+5 * 1116
+3 * 1116 1116
+4 * 1116 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(108)
calls=1116 0x403a98 565 
* * 27900 11160 8928 2 0 0 2
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(112)
calls=1116 0x403a68 547 
* * 27900 11160 8928
+5 * 1116
+3 * 1116
+3 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(11)
cfn=(114)
calls=1116 0x403ac9 -60 
* * 743256 255584 250008 7 1 78 7 1 78 29104 1442 2228
+5 -3 1116 1116
+4 * 1116 0 1116
+4 * 1116
jump=1116 +28 +4 
* * 
+28 +4 1116
+4 * 1116 1116
+1 * 1116 1116
+2 * 1116 1116
+2 * 1116 1116
+1 * 1116 1116

fn=(188)
0x403d98 171 1125 0 1125 1 0 0 1
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 +2 1125 1125
+5 * 1125 0 0 0 0 0 0 0 0 1125 9
+2 +1 1125 1125
+4 * 1125 1125
+4 * 1125 1125
+4 * 1125
+3 * 1125
+3 * 1125 0 1125
cfi=(5)
cfn=(190)
calls=1125 0x40452a -65 
* * 154587 41526 25376 1 1 0 1 1 0 34942 512 2250
+5 +1 1125 1125
+1 * 1125 1125

fn=(22)
0x404236 167 1125 0 1125 1 0 0 1
+1 * 1125
+3 * 1125
+4 * 1125 0 1125 1 0 0 1
+4 * 1125 0 1125
+4 0 1125 1125
+5 0 1125 0 0 0 0 0 0 0 0 1125
+2 0 1125 1125
+4 0 1125 1125
+4 0 1125
+5 0 1125
+3 0 1125
+3 0 1125 0 1125
fi=(6)
cfi=(5)
cfn=(26)
calls=1125 0x404730 99 
* 0 384907 63450 66170 26 19 18 26 19 18 58845 2317 2250
+5 0 1125
fi=(6)
jump=1125 +7 0 
* 0 
+7 0 1125 1125
+1 0 1125 1125

fn=(42)
0x403ba4 565 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+4 * 1116 0 1116
+4 * 1116
+4 * 1116 0 0 1 0 0 1
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1116 0x404468 726 
* * 11160 5580 4464 1 0 0 1
+5 * 1116 1116
+4 * 1116 1116
+1 * 1116 1116

fn=(46)
0x403b74 547 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+3 * 1116 0 1116
+4 * 1116
+4 * 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfi=(10)
cfn=(44)
calls=1116 0x404468 726 
* * 11160 5580 4464
+5 * 1116 1116
+4 * 1116 1116
+1 * 1116 1116

fn=(86)
0x403a0a 134 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1116 0x4042e2 -45 
* * 40176 14508 15624 5 0 0 5
+5 +1 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116 1 0 0 1
cfn=(94)
calls=1116 0x40432a +43 
* * 416808 79735 71220 17 11 44 17 10 44 58289 2417 2232
+5 * 1116
jump=1116 +28 * 
* * 
+28 * 1116
+4 * 1116 1116
+1 * 1116 1116
+1 * 1116 1116

fn=(88)
0x4042e2 90 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +1 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116 1 0 0 1
cfi=(4)
cfn=(90)
calls=1116 0x4047b2 +24 
* * 20088 6696 7812 3 0 0 3
+5 * 1116 1116
+4 * 1116 0 1116
+7 * 1116 1116
+4 * 1116 0 1116
+8 * 1116 1116
+4 * 1116 0 1116
+8 +1 1116 1116
+1 * 1116 1116

fn=(156)
0x4031ec 159 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116
+4 +2 1116 1116
+4 * 1116 1116 0 1 0 0 1
+4 * 1116
+3 * 1116 1116
+4 * 1116 1116
+3 * 1116
+3 * 1116
+3 * 1116
+4 * 1116
+3 * 1116 1116
+4 * 1116 1116
+3 -1 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(158)
calls=1116 0x403ce6 +11 
* * 167802 46504 29650 24 6 0 24 6 0 34796 318 2232
+5 +1 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1116 0x4031b8 -82 
* * 25668 8928 8928 1 0 0 1
+5 * 1116
jump=1116 +28 * 
* * 
+28 * 1116
+4 * 1116 1116
+1 * 1116 1116
+1 * 1116 1116

fn=(172)
0x4031b8 79 1116 0 1116 1 0 0 1
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfi=(4)
cfn=(174)
calls=1116 0x403ccc +42 
* * 15624 5580 5580
+5 * 1116 1116
+1 * 1116 1116

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246)
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(10)
0x402f54 645 2268 0 2268 1 0 0 1
+1 * 2268
+3 * 2268 0 2268
+4 +1 2268 2268
+4 * 2268 2268 0 0 2 0 0 2
+4 * 2268
+3 * 2268 2268
+4 * 2268 2268
+3 * 2268
+3 * 2268
+3 * 2268
+4 * 2268 2268
+1 * 2268 2268

fn=(106)
0x40325e 113 2259 0 2259 1 0 0 1
+1 * 2259
+3 * 2259 0 2259
+4 +1 2259 2259
+4 * 2259 2259
+1 * 2259 2259

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6)
0x403b08 117 1134 0 1134 1 0 0 1
+1 * 1134
+3 * 1134 0 1134 0 0 1 0 0 1
+4 +1 1134 1134
+4 * 1134 1134
+1 * 1134 1134

fn=(82)
0x4039fc 117 1134 0 1134 1 0 0 1
+1 * 1134
+3 * 1134 0 1134 1 0 0 1
+4 +1 1134 1134
+4 * 1134 1134
+1 * 1134 1134

fn=(200)
0x402eda 901 558 0 558
+1 * 558
+3 * 558
+4 * 558 0 558
+4 * 558 0 558
+4 +2 558 558
+4 * 558 558
+4 * 558 558
+4 * 558 558
+4 * 558
+3 * 558 0 0 0 0 0 0 0 0 558 9
jcnd=9/558 +51 +10 
* * 
+2 +3 549 549
+4 * 549 549
+4 * 549 549
+4 -1 549 549
+4 * 549
+3 * 549
+3 * 549 0 549
cfi=(3)
cfn=(222)
calls=549 0x403373 215 
* * 20862 7137 7686 0 35 3 0 35 3 549 2
+5 +2 549 549
+4 * 549 549
+4 * 549
+4 * 549 549
+4 * 549 0 549
+4 * 549
jump=549 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202)
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 15599 4660 4091 45 17 9 45 17 9 1169 89 53
+5 +2 558 558
+1 * 558 558

fl=(12)
fn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404c52 424 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+2 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +4 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1116 0x40492d 277 
* * 16740 6696 5580 2 0 0 2
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1116 0x404d9d 277 
* * 27900 10044 8928 2 0 1 2 0 1
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(66)
calls=1116 0x404d9d 277 
* * 27900 10044 8928
+5 * 1116
+3 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=1116 0x404db7 -49 
* * 533448 184160 177468 15 3 2 15 3 2 29104 1520 2228 278
+5 +1 1116
+4 * 1116 1116
+1 * 1116 1116
+2 * 1116 1116
+1 * 1116 1116

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 50 0 0 50 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(62)
0x40492d 277 1170 0 1170 1 0 0 1
+1 * 1170
+3 * 1170
+4 * 1170 0 1170
+4 +1 1170 1170
+4 * 1170
+3 * 1170 0 1170 1 0 0 1
cfi=(13)
cfn=(64)
calls=1170 -33 -66 
* * 7020 3510 2340
+5 * 1170 1170
+1 * 1170 1170

fn=(66)
0x404d9d 277 2232 0 2232
+1 * 2232
+3 * 2232
+4 * 2232 0 2232
+4 +1 2232 2232
+4 * 2232
+3 * 2232 0 2232
cfi=(13)
cfn=(68)
calls=2232 0x404f1a -58 
* * 35712 13392 11160 2 0 1 2 0 1
+5 * 2232 2232
+1 * 2232 2232

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 7 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 50 0 0 50 140 5 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +10 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1116 0x404bc6 288 
* * 16740 6696 5580 3 0 0 3
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(122)
calls=1116 0x404bc6 288 
* * 16740 6696 5580
+5 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1116 0x404be0 -36 
* * 637236 218756 212064 4 1 78 4 1 78 29104 1442 2228
+5 +1 1116
+4 * 1116 1116
+1 * 1116 1116
+1 * 1116 1116

fn=(128)
0x404878 277 1170 0 1170
+1 * 1170
+3 * 1170
+4 * 1170 0 1170 1 0 0 1
+4 +1 1170 1170
+4 * 1170
+3 * 1170 0 1170
cfi=(13)
cfn=(130)
calls=1170 -33 -66 
* * 7020 3510 2340 0 0 1 0 0 1
+5 * 1170 1170
+1 * 1170 1170

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 2232 0 2232
+1 * 2232
+3 * 2232
+4 * 2232 0 2232
+4 +1 2232 2232
+4 * 2232
+3 * 2232 0 2232
cfi=(13)
cfn=(134)
calls=2232 0x404e98 -58 
* * 35712 13392 11160 2 0 0 2
+5 * 2232 2232
+1 * 2232 2232

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +8 1116 0 1116
+4 +3 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1116 0x404eb5 -22 
* * 516708 178580 170772 1 1 78 1 1 78 29104 1442 2228
+5 +1 1116 1116
+1 * 1116 1116

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 7 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 50 1 0 50 140 5 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232
+4 * 2232 0 2232
+4 +1 2232 2232
+4 * 2232
+3 * 2232 0 2232
cfi=(13)
cfn=(124)
calls=2232 0x404d36 -77 
* * 13392 6696 4464 2 0 0 2
+5 * 2232 2232
+1 * 2232 2232

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232
+4 * 2232 0 2232 1 0 0 1
+4 +1 2232 2232
+4 * 2232
+3 * 2232 0 2232
cfi=(13)
cfn=(58)
calls=2232 0x404d8f -77 
* * 13392 6696 4464 1 0 0 1
+5 * 2232 2232
+1 * 2232 2232

fn=(74)
0x404f37 368 1134 0 1134
+1 * 1134
+3 * 1134
+4 * 1134 0 1134 1 0 0 1
+4 * 1134 0 1134
+4 * 1134 0 1134
+4 +2 1134 1134
+4 * 1134 1134
+4 * 1134
+3 * 1134
+3 * 1134
+4 * 1134 0 1134
+4 +1 1134 1134
+5 * 1134 0 0 0 0 0 0 0 0 1134
jcnd=9/1134 +33 +2 
* * 
+2 +1 1125 1125
+4 * 1125
+8 * 1125 1125
+4 * 1125 1125
+4 * 1125
+3 * 1125 0 0 1 0 0 1
+3 * 1125 0 1125 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1125 0x3877c83840 0 
* * 487308 166883 164638 11 2 51 11 2 51 28110 1525 1120 278
* * 1125 1125 0 1 1 0 1 1 0 0 0 1125
+5 +1 1134 1134
+4 * 1134
+8 * 1134 1134
+4 * 1134
+3 +1 1134 1134
+1 * 1134 1134

fn=(140)
0x404eb5 368 1134 0 1134
+1 * 1134
+3 * 1134
+4 * 1134 0 1134 1 0 0 1
+4 * 1134 0 1134
+4 * 1134 0 1134 0 0 1 0 0 1
+4 +2 1134 1134
+4 * 1134 1134
+4 * 1134
+3 * 1134
+3 * 1134
+4 * 1134 0 1134
+4 +1 1134 1134
+5 * 1134 0 0 0 0 0 0 0 0 1134
jcnd=9/1134 +33 +2 
* * 
+2 +1 1125 1125
+4 * 1125
+8 * 1125 1125
+4 * 1125 1125
+4 * 1125
+3 * 1125
+3 * 1125 0 1125
cob=(2)
cfi=(9)
cfn=(78)
calls=1125 0x3877c83840 0 
* * 487308 166883 164638 0 1 79 0 1 79 28110 1449 1120
* * 1125 1125 0 0 0 0 0 0 0 0 0 1125
+5 +1 1134 1134
+4 * 1134
+8 * 1134 1134
+4 * 1134
+3 +1 1134 1134
+1 * 1134 1134

fn=(72)
0x404db7 379 1116 0 1116
+1 * 1116
+3 * 1116
+4 * 1116 0 1116 1 0 0 1
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +8 1116 0 1116
+4 +3 1116 1116
+4 * 1116 1116
+4 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(74)
calls=1116 0x404f37 -22 
* * 516708 178580 170772 14 3 2 14 3 2 29104 1520 2228 278
+5 +1 1116 1116
+1 * 1116 1116

fn=(126)
0x404be0 424 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+2 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +4 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(128)
calls=1116 0x404878 277 
* * 16740 6696 5580 1 0 0 1
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(132)
calls=1116 0x404d44 277 
* * 27900 10044 8928 2 0 0 2
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(132)
calls=1116 0x404d44 277 
* * 27900 10044 8928
+5 * 1116
+3 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(138)
calls=1116 0x404d5e -49 
* * 533448 184160 177468 1 1 78 1 1 78 29104 1442 2228
+5 +1 1116
+4 * 1116 1116
+1 * 1116 1116
+2 * 1116 1116
+1 * 1116 1116

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 7 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(54)
0x404a36 450 1116 0 1116
+1 * 1116
+3 * 1116 0 1116
+1 * 1116
+4 * 1116 0 1116 1 0 0 1
+4 * 1116 0 1116
+4 * 1116 0 1116
+4 +10 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(56)
calls=1116 0x404c38 288 
* * 16740 6696 5580 3 0 0 3
+5 * 1116
+3 * 1116 1116
+4 * 1116
+3 * 1116 0 1116
cfn=(56)
calls=1116 0x404c38 288 
* * 16740 6696 5580
+5 * 1116 1116
+4 * 1116
+3 * 1116
+3 * 1116 0 1116
cfn=(60)
calls=1116 0x404c52 -36 
* * 637236 218756 212064 20 3 3 20 3 3 29104 1520 2228 278
+5 +1 1116
+4 * 1116 1116
+1 * 1116 1116
+1 * 1116 1116

fl=(10)
fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232 0 2232
+4 +1 2232 2232
+4 * 2232 2232
+1 * 2232 2232

fn=(110)
0x404380 726 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232 0 2232
+4 * 2232 0 2232
+4 * 2232 2232
+4 * 2232 2232
+3 * 2232 2232
+4 * 2232 0 2232
+3 * 2232 2232
+1 * 2232 2232

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 2232 0 2232 1 0 0 1
+1 * 2232
+3 * 2232 0 2232
+4 +1 2232 2232
+4 * 2232 2232
+1 * 2232 2232

fn=(44)
0x404468 726 2232 0 2232
+1 * 2232
+3 * 2232 0 2232
+4 * 2232 0 2232
+4 * 2232 2232
+4 * 2232 2232
+3 * 2232 2232
+4 * 2232 0 2232 1 0 0 1
+3 * 2232 2232
+1 * 2232 2232

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(262)
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1125 0 1125 1 0 0 1
+1 * 1125
+3 * 1125 0 1125
+4 * 1125 0 1125 1 0 0 1
+4 * 1125 1125
+1 * 1125 1125

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1125 0 1125 1 0 0 1
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 +4 1125 1125
+4 * 1125 1125
+4 * 1125
+3 * 1125
+3 * 1125 0 1125
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1125 0x40454c -14 
* * 6750 2250 3375 1 0 0 1
+5 +2 1125 1125
+1 * 1125 1125

fn=(150)
0x40326c 148 1125 0 1125
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 +3 1125 1125 0 1 0 0 1
+4 * 1125 1125
+4 * 1125
+3 * 1125
+3 * 1125 0 1125
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1125 0x403d1a -29 
* * 20250 6750 7875 3 0 0 3
+5 +1 1125 1125
+1 * 1125 1125

fn=(180)
0x40334a 148 1125 0 1125
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 +3 1125 1125
+4 * 1125 1125
+4 * 1125
+3 * 1125
+3 * 1125 0 1125
cfn=(182)
calls=1125 0x403dcc -29 
* * 20250 6750 7875 2 0 0 2
+5 +1 1125 1125
+1 * 1125 1125

fn=(152)
0x403d1a 122 1125 0 1125 1 0 0 1
+1 * 1125
+3 * 1125
+4 * 1125 0 1125
+4 * 1125 0 1125
+4 +4 1125 1125
+4 * 1125 1125
+4 * 1125
+3 * 1125
+3 * 1125 0 1125
cfn=(154)
calls=1125 0x4044f8 -14 
* * 6750 2250 3375 2 0 0 2
+5 +2 1125 1125
+1 * 1125 1125

fn=(184)
0x40454c 112 1125 0 1125 1 0 0 1
+1 * 1125
+3 * 1125 0 1125
+4 * 1125 0 1125
+4 * 1125 1125
+1 * 1125 1125

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 2766 494 506 2 4 7 2 4 7 389 49 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 1 5 0 1 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 50 3 0 50 131 5 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1287 358 227 1 0 0 1 0 0 249 24 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 4393 794 745 22 16 5 22 16 5 743 75 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 7 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1222 326 219 1 0 0 1 0 0 232 7 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 2250 0 2250 1 0 0 1
+2 0 2250 0 2250
+2 0 2250 0 2250
+2 0 2250
+3 0 2250 0 2250
+2 0 2250 0 2250
+1 0 2250 0 2250
+1 0 2250
+3 0 2250
+4 0 2250 2250
+4 0 2250 0 2250
+4 0 2250
+3 0 2250
+4 0 2250
+3 0 2250
+3 0 2250
+3 0 2250 0 0 1 0 0 1 0 0 2250
+6 0 2250
+4 0 2250 0 0 0 0 0 0 0 0 2250
+6 0 2250
+4 0 2250 0 0 0 0 0 0 0 0 2250
+6 0 2250 2250
+7 0 2250 0 0 0 0 0 0 0 0 2250 4
jcnd=2126/2250 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 2126
+2 0 2126 0 0 0 0 0 0 0 0 2126
+6 0 2126 2126 0 1 0 0 1
+4 0 2126
+3 0 2126
+2 0 2126 0 0 0 0 0 0 0 0 2126
jcnd=2126/2126 0x3877c78a40 0 
* 0 
+6 0 2126 2126
+4 0 2126
+3 0 2126 0 0 0 0 0 0 0 0 2126
+6 0 2126 2126
+5 0 2126
+4 0 2126 0 0 0 0 0 0 0 0 2126
jcnd=2126/2126 0x3877c7907c 0 
* 0 
+6 0 2126 2126
+5 0 2126
+4 0 2126 0 0 0 0 0 0 0 0 2126
+6 0 2126
+4 0 2126 0 0 1 0 0 1 0 0 2126
+6 0 2126
+4 0 2126 2126
+7 0 2126 0 0 0 0 0 0 0 0 2126
+6 0 2126 2126
+6 0 2126
+2 0 2126 0 0 0 0 0 0 0 0 2126
+6 0 2126 2126
+4 0 2126 0 0 0 0 0 0 0 0 2126 6
jcnd=2121/2126 +70 0 
* 0 
+2 0 5 5
+3 0 5
+3 0 5
+3 0 5 5
+4 0 5 5
+4 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5 2
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=4/5 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 2126 2126 0 1 0 0 1
+4 0 2126 0 0 0 0 0 0 0 0 2126 252
jcnd=288/2126 0x3877c78bf0 0 
* 0 
+6 0 1838 1838 0 0 2 0 0 2
+6 0 1838 0 0 1 0 0 1 0 0 1838 58
jcnd=90/1838 0x3877c78a78 0 
* 0 
+6 0 1748 1748
+5 0 1748 1748
+5 0 1748 1748
+4 0 1748 0 0 0 0 0 0 0 0 1748
+6 0 1748 1748
+4 0 1748 0 0 0 0 0 0 0 0 1748
+6 0 1748 1748
+9 0 1748 0 1748
+4 0 1748 0 1748
+4 0 1748 0 0 0 0 0 0 0 0 1748 483
jcnd=1186/1748 +16 0 
* 0 
+2 0 562 562
+5 0 562
+3 0 562 0 0 1 0 0 1 0 0 562
+6 0 1748
+3 0 1748
+4 0 1748 1748
+4 0 1748 1748
+4 0 1748 0 0 0 0 0 0 0 0 1748
-12 0 90
+4 0 90 90
+4 0 90 90
+4 0 90 0 0 0 0 0 0 0 0 90
+6 0 1838
+7 0 1838 0 1838
+4 0 1838 0 1838
+4 0 1838 0 0 0 0 0 0 0 0 1838 30
jcnd=441/1838 +18 0 
* 0 
+2 0 1397 0 1397
+8 0 1397 0 1397
+8 0 1397 0 1397
+4 0 1397
+3 0 1397 0 1397 1 0 0 1
+4 0 1397
+4 0 1397 0 1397
+4 0 1397 0 1397
+4 0 1397
+7 0 1397 0 0 0 0 0 0 0 0 1397
jcnd=1397/1397 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 288
+7 0 288 0 0 0 0 0 0 0 0 288
jcnd=288/288 0x3877c78b20 0 
* 0 
0x3877c78a40 0 2126 0 0 1 0 0 1
+5 0 2126 2126
+4 0 2126 2126
+7 0 2126 0 0 0 0 0 0 0 0 2126
jcnd=2126/2126 +16 0 
* 0 
+16 0 2126 0 2126
+5 0 2126 0 0 0 0 0 0 0 0 2126
+6 0 2126
+3 0 2126
jump=2126 0x3877c7878f 0 
* 0 
+10 0 90 0 90
+6 0 90 0 0 1 0 0 1
jump=90 0x3877c78885 0 
* 0 
0x3877c78b20 0 2126 2126 0 1 0 0 1
+4 0 2126
+2 0 2126 0 0 0 0 0 0 0 0 2126
+6 0 2126 2126
+7 0 2126 0 0 0 0 0 0 0 0 2126
jcnd=2126/2126 +15 0 
* 0 
+15 0 2126 0 2126 1 0 0 1
+4 0 2126 0 0 0 0 0 0 0 0 2126
+6 0 2126
+4 0 2126 2126
+1 0 2126 2126
+1 0 2126 2126
+2 0 2126 2126
+2 0 2126 2126
+2 0 2126 2126
+2 0 2126 2126
0x3877c78bf0 0 288 0 0 1 0 0 1
+3 0 288 0 288
+4 0 288
+3 0 288
+4 0 288 0 288 1 0 0 1
+4 0 288
jump=288 0x3877c788cf 0 
* 0 
0x3877c78f12 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 2126 2126 0 1 1 0 1 1
+4 0 2126 0 0 1 0 0 1
+7 0 2126
+4 0 2126
+3 0 2126
+3 0 2126 0 0 0 0 0 0 0 0 2126
jcnd=2126/2126 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 2240 0 0 1 0 0 1
+7 0 2240
+3 0 2240
+3 0 2240 2240 0 0 1 0 0 1
+4 0 2240
+4 0 2240 0 0 0 0 0 0 0 0 0 0 2240 278
jump=272 0x3877c89be8 0 
* 0 
jump=284 0x3877c89bd0 0 
* 0 
jump=280 0x3877c89bb8 0 
* 0 
jump=280 +11 0 
* 0 
jump=280 0x3877c89c48 0 
* 0 
jump=282 0x3877c89c30 0 
* 0 
jump=280 0x3877c89c18 0 
* 0 
jump=282 0x3877c89c00 0 
* 0 
+11 0 280 280
+3 0 280
+4 0 280
+4 0 280 280
+4 0 280
+4 0 280 0 280
+4 0 280
+9 0 280 280
+4 0 280 0 280
+4 0 280 280
+4 0 280 0 280
+4 0 280 280
+4 0 280 0 280
+4 0 280 280
+4 0 280 0 280
+4 0 280
+4 0 280
+4 0 280 0 0 0 0 0 0 0 0 280
jcnd=8/280 0x3877c89c60 0 
* 0 
-40 0 38766 38766
+4 0 38766 0 38766 0 0 14 0 0 14
+4 0 38766 38766
+4 0 38766 0 38766 0 0 34 0 0 34
+4 0 38766 38766
+4 0 38766 0 38766 0 0 35 0 0 35
+4 0 38766 38766
+4 0 38766 0 38766 0 0 15 0 0 15
+4 0 38766
+4 0 38766
+4 0 38766 0 0 0 0 0 0 0 0 38766 1767
jcnd=2204/38766 0x3877c89c60 0 
* 0 
-32 0 282 282
+4 0 282 0 282
+4 0 282 282
+4 0 282 0 282
+4 0 282 282
+4 0 282 0 282
+4 0 282
+4 0 282
+4 0 282 0 0 0 0 0 0 0 0 282
jcnd=10/282 0x3877c89c60 0 
* 0 
-24 0 280 280
+4 0 280 0 280 0 0 1 0 0 1
+4 0 280 280
+4 0 280 0 280
+4 0 280
+4 0 280
+4 0 280 0 0 0 0 0 0 0 0 280
jcnd=8/280 0x3877c89c60 0 
* 0 
-16 0 282 282 0 1 0 0 1
+4 0 282 0 282
+4 0 282 0 0 1 0 0 1
+4 0 282
+4 0 282 0 0 0 0 0 0 0 0 282 4
jcnd=10/282 0x3877c89c60 0 
* 0 
+6 0 37650
+4 0 37650 37650
+3 0 37650 0 37650
+3 0 37650 37650
+4 0 37650 0 37650 0 0 1 0 0 1
+4 0 37650 37650
+4 0 37650 0 37650 0 0 24 0 0 24
+4 0 37650 37650
+4 0 37650 0 37650 0 0 3 0 0 3
+4 0 37650
jump=37650 -80 0 
* 0 
-30 0 272 272
+3 0 272 0 272
+3 0 272 272
+4 0 272 0 272
+4 0 272 272
+4 0 272 0 272 0 0 1 0 0 1
+4 0 272 272
+4 0 272 0 272
+4 0 272
jump=272 -80 0 
* 0 
-24 0 284 284
+4 0 284 0 284
+4 0 284 284
+4 0 284 0 284
+4 0 284 284
+4 0 284 0 284 0 0 1 0 0 1
+4 0 284
jump=284 -80 0 
* 0 
-16 0 280 280
+4 0 280 0 280
+4 0 280 280
+4 0 280 0 280
+4 0 280
jump=280 -80 0 
* 0 
+8 0 280 280
+3 0 280
+4 0 280 0 0 1 0 0 1
+4 0 280
+4 0 280
jump=280 -39 0 
* 0 
+9 0 284
+3 0 284 0 0 0 0 0 0 0 0 284
+6 0 284 284
+3 0 284
+4 0 284
jump=284 -72 0 
* 0 
+8 0 272
+4 0 272 272
+3 0 272 0 0 0 0 0 0 0 0 272
+2 0 272
+4 0 272
jump=272 -99 0 
* 0 
+11 0 282 282 0 1 0 0 1
+3 0 282
+4 0 282
+4 0 282
+4 0 282
jump=282 0x3877c89b78 0 
* 0 
+9 0 280 280
+3 0 280
+4 0 280
+4 0 280
+4 0 280
jump=280 0x3877c89b70 0 
* 0 
+9 0 282 282
+3 0 282
+4 0 282
+4 0 282
+4 0 282
jump=282 0x3877c89b68 0 
* 0 
+9 0 280 280
+3 0 280
+4 0 280
+4 0 280
+4 0 280
jump=280 0x3877c89b60 0 
* 0 
+9 0 2240 0 2240 1 0 0 1
+3 0 2240 2240

fn=(104) alloc_perturb
0x3877c77180 0 2100 2100 0 1 0 0 1
+6 0 2100
+2 0 2100 0 0 0 0 0 0 0 0 2100 34
+2 0 2100 2100

fn=(38) _int_malloc
0x3877c79a00 0 2250 0 2250 1 0 0 1
+2 0 2250
+3 0 2250 0 2250
+2 0 2250 0 2250
+2 0 2250 0 2250 0 0 1 0 0 1
+2 0 2250
+3 0 2250 0 2250
+1 0 2250 0 2250
+1 0 2250
+4 0 2250
+4 0 2250 0 0 0 0 0 0 0 0 2250
+6 0 2250
+4 0 2250
+6 0 2250
+3 0 2250
+4 0 2250
+4 0 2250
+4 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250
+6 0 2250 2250 0 1 1 0 1 1
+7 0 2250 0 0 0 0 0 0 0 0 2250 7
jcnd=2128/2250 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 150 150
+6 0 150
+4 0 150
+2 0 150 0 0 0 0 0 0 0 0 150
+6 0 150
+3 0 150
+4 0 150 150
+1 0 150 150
+1 0 150 150
+2 0 150 150
+2 0 150 150
+2 0 150 150
+2 0 150 150
-14 0 2100
+4 0 2100 2100
+1 0 2100 2100
+1 0 2100 2100
+2 0 2100 2100
+2 0 2100 2100
+2 0 2100 2100
+2 0 2100 2100
+7 0 2145
+7 0 2145 0 0 1 0 0 1 0 0 2145 7
jcnd=1242/2145 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 6 0 0 6
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 1242 0 0 1 0 0 1
+3 0 1242
+4 0 1242
+4 0 1242 0 0 1 0 0 1 0 0 1242 3
jcnd=1240/1242 0x3877c7a1a4 0 
* 0 
+6 0 2
+3 0 2
+4 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2
+3 0 2 0 2
+4 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +30 0 
* 0 
-11 0 1240 1240
+6 0 1240
+5 0 1240 0 0 0 0 0 0 0 0 1240 1
jcnd=1239/1240 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 931 251 199 8 1 0 8 1 0 193 21
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 2144 0 0 1 0 0 1
+3 0 2144
+3 0 2144
+3 0 2144
+4 0 2144
+3 0 2144
+4 0 2144 0 2144
+5 0 2144
+3 0 2144 0 2144
+4 0 2144 0 2144
+4 0 2144 0 2144
+5 0 2144
+3 0 2144
+3 0 2144
+3 0 2144
+3 0 2144
+4 0 2144
+4 0 2144 0 0 1 0 0 1
+4 0 2144 0 2144
+4 0 2144
+4 0 2144 0 2144
+5 0 2144 0 2144
+5 0 2144
+3 0 2144
+3 0 2144 0 2144
+5 0 2144
+5 0 2144
+3 0 2144 0 2144
+4 0 2144 0 2144
+4 0 2144
+6 0 2144 0 2144
+4 0 2144 0 2144
+5 0 2144 0 0 1 0 0 1
+3 0 2144
+3 0 2144
+3 0 2144
jump=2144 +87 0 
* 0 
+8 0 1260
+3 0 1260
+4 0 1260
+2 0 1260
+2 0 1260
+3 0 1260
+3 0 1260
+3 0 1260
+2 0 1260
+2 0 1260
+5 0 1260
+2 0 1260 1260 0 0 1 0 0 1
+4 0 1260
+3 0 1260
+4 0 1260 0 1260
+4 0 1260 0 1260
+8 0 1260
+7 0 1260 0 1260
+4 0 1260 0 1260
+4 0 1260 0 1260
+4 0 1260 0 0 0 0 0 0 0 0 1260
-38 0 1364
+3 0 1364
+4 0 1364 0 1364
+4 0 1364 0 1364
+8 0 1364
+7 0 1364 0 1364
+4 0 1364 0 1364
+4 0 1364 0 1364
+4 0 1364 0 0 0 0 0 0 0 0 1364
+6 0 4769 4769 0 1 0 0 1
+4 0 4769
+3 0 4769 0 0 0 0 0 0 0 0 4769 317
jcnd=2063/4769 0x3877c79ef0 0 
* 0 
+6 0 2706 2706
+4 0 2706 2706
+4 0 2706
+4 0 2706 0 0 0 0 0 0 0 0 2706
+6 0 2706 2706 0 1 1 0 1 1
+7 0 2706 0 0 0 0 0 0 0 0 2706 2
+6 0 2706
+4 0 2706
+7 0 2706 0 0 0 0 0 0 0 0 2706 9
jcnd=1421/2706 +11 0 
* 0 
+2 0 1285
+3 0 1285 0 0 0 0 0 0 0 0 1285 607
jcnd=866/1285 0x3877c79e28 0 
* 0 
+6 0 2669
+3 0 2669 0 2669
+4 0 2669 0 2669
+5 0 2669 0 0 0 0 0 0 0 0 2669 29
jcnd=45/2669 0x3877c7a090 0 
* 0 
+6 0 2624
+7 0 2624 0 0 0 0 0 0 0 0 2624 703
jcnd=1260/2624 0x3877c79c50 0 
* 0 
+6 0 1364 0 0 1 0 0 1
+3 0 1364
+4 0 1364
+4 0 1364 0 0 0 0 0 0 0 0 1364 106
jcnd=478/1364 0x3877c79db0 0 
* 0 
+6 0 886
+3 0 886
+4 0 886
+2 0 886
+2 0 886
+3 0 886
+3 0 886
+8 0 886
+3 0 886
+2 0 886
+2 0 886
+4 0 886 886 0 0 4 0 0 3
+4 0 886
+3 0 886 0 0 1 0 0 1 0 0 886 68
jcnd=886/886 0x3877c79e15 0 
* 0 
-36 0 478
+2 0 478
+2 0 478
+3 0 478
+3 0 478
+8 0 478
+3 0 478
+2 0 478
+2 0 478
+4 0 478 478
+4 0 478
+3 0 478 0 0 0 0 0 0 0 0 478
jcnd=478/478 0x3877c79e15 0 
* 0 
0x3877c79db0 0 478 0 0 1 0 0 1
+3 0 478
+4 0 478
+4 0 478 0 0 0 0 0 0 0 0 478
+2 0 478
+3 0 478 0 0 1 0 0 1
+7 0 478
jump=478 0x3877c79d18 0 
* 0 
+78 0 1364 0 1364
+4 0 1364 0 1364
+4 0 1364
+3 0 1364
jump=1364 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 30
jcnd=437/866 0x3877c79ce1 0 
* 0 
+6 0 429 429
+5 0 429 0 0 0 0 0 0 0 0 429 6
jcnd=392/429 0x3877c79ce1 0 
* 0 
+6 0 37 0 0 1 0 0 1
+3 0 37
+3 0 37
+3 0 37
+7 0 37 0 37
+4 0 37 0 37
+4 0 37
+3 0 37 0 37
+4 0 37 0 37 0 0 18 0 0 18
+4 0 37 0 37
+4 0 37 0 0 0 0 0 0 0 0 37 4
jcnd=9/37 +18 0 
* 0 
+2 0 28 0 28 0 0 1 0 0 1
+8 0 28 0 28
+8 0 28
+7 0 28 0 28 1 0 0 1
+4 0 28
+3 0 28
+3 0 28
+3 0 28
+4 0 28
+3 0 28
+4 0 28
+3 0 28
+3 0 28
+4 0 28 0 28
+4 0 28 0 28 0 0 2 0 0 2
+4 0 28
+4 0 28
+3 0 28 0 28
cfn=(104)
calls=28 0x3877c77180 0 
* 0 112 56 0 0 0 0 0 0 0 28
-56 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9 0 0 2 0 0 2
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
+5 0 37
+3 0 37
jump=37 0x3877c79ae3 0 
* 0 
+55 0 2063 0 0 1 0 0 1
+7 0 2063
+3 0 2063 0 0 0 0 0 0 0 0 2063 8
jcnd=1226/2063 0x3877c7a0b0 0 
* 0 
+6 0 2023 2023 0 1 0 0 1
+4 0 2023
+3 0 2023
+3 0 2023
+2 0 2023
+4 0 2023
+3 0 2023
+3 0 2023
+2 0 2023
+2 0 2023
+2 0 2023
+2 0 2023 2023 0 0 1 0 0 1
+8 0 2023
+5 0 2023
+5 0 2023
+2 0 2023 0 0 0 0 0 0 0 0 2023
-2 0 978
+2 0 978 0 0 0 0 0 0 0 0 978
+2 0 3001
+2 0 3001 0 0 0 0 0 0 0 0 3001 57
jcnd=1968/3001 +64 0 
* 0 
+2 0 1033
+8 0 1033
+3 0 1033
+3 0 1033 0 0 0 0 0 0 0 0 1033 2
jcnd=3/1033 0x3877c79fc0 0 
* 0 
-6 0 703
+3 0 703
+3 0 703 0 0 0 0 0 0 0 0 703 4
jcnd=287/703 0x3877c79fc0 0 
* 0 
+2 0 1446
+2 0 1446 1446
+8 0 1446
+2 0 1446 0 0 0 0 0 0 0 0 1446 24
jcnd=703/1446 -20 0 
* 0 
+2 0 743
+2 0 743
+5 0 743
+3 0 743
+3 0 743
+2 0 743
+2 0 743
+5 0 743 0 0 0 0 0 0 0 0 743
+2 0 743
+2 0 743
+4 0 743
+2 0 743
+2 0 743 0 0 0 0 0 0 0 0 743
jcnd=743/743 -8 0 
* 0 
-8 0 13817
+4 0 13817
+2 0 13817
+2 0 13817 0 0 0 0 0 0 0 0 13817 892
jcnd=11300/13817 -8 0 
* 0 
-2 0 1968 0 0 1 0 0 1
+2 0 1968 0 0 0 0 0 0 0 0 1968 26
jcnd=1774/1968 -8 0 
* 0 
+2 0 2711 2711 0 0 14 0 0 14
+4 0 2711 0 0 1 0 0 1
+3 0 2711 0 0 0 0 0 0 0 0 2711 1269
jcnd=1733/2711 0x3877c7a1cf 0 
* 0 
+6 0 978
+2 0 978
+4 0 978
+2 0 978
+2 0 978
+2 0 978 0 978
+8 0 978
jump=978 0x3877c79f30 0 
* 0 
+37 0 290 290 0 1 0 0 1
+5 0 290 290
+4 0 290
+4 0 290 290
+5 0 290 0 0 0 0 0 0 0 0 290 1
jcnd=290/290 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 45 0 0 1 0 0 1
+7 0 45 0 45
+6 0 45
+3 0 45 0 0 0 0 0 0 0 0 45
jcnd=45/45 0x3877c79ace 0 
* 0 
+16 0 1226 1226
+4 0 1226
+4 0 1226
+2 0 1226
+5 0 1226 1226 0 1 0 0 1
+4 0 1226
+3 0 1226 0 0 0 0 0 0 0 0 1226 12
jcnd=1170/1226 0x3877c79f00 0 
* 0 
+6 0 56 56
+4 0 56 0 0 0 0 0 0 0 0 56 1
jcnd=16/56 0x3877c79f00 0 
* 0 
+6 0 40
+3 0 40 40
+4 0 40 40
+4 0 40
+3 0 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c7a650 0 
* 0 
+26 0 40 0 0 1 0 0 1
+3 0 40 40
+4 0 40
+3 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40 2
+6 0 40 40
+8 0 40 0 40
+4 0 40 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40 0 1 0 0 1
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 26
jcnd=40/40 0x3877c7a659 0 
* 0 
+6 0 40
+4 0 40 0 0 0 0 0 0 0 0 40 8
jcnd=16/40 0x3877c7a2e3 0 
* 0 
+6 0 24 24
+4 0 24
+7 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+4 0 24
+7 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a285 0 
* 0 
+31 0 1240 0 0 1 0 0 1
+3 0 1240 0 1240
+4 0 1240
jump=1240 0x3877c79b99 0 
* 0 
+36 0 1733 1733 0 1 2 0 1 2
+4 0 1733 1733 0 0 1 0 0 1
+4 0 1733
+3 0 1733 1733
+4 0 1733
+4 0 1733
+3 0 1733
+3 0 1733 1733
+4 0 1733 0 0 0 0 0 0 0 0 1733
+6 0 1733 1733 0 0 1 0 0 1
+4 0 1733 0 0 0 0 0 0 0 0 1733
+6 0 1733 1733 0 1 0 0 1
+8 0 1733 0 1733
+4 0 1733 0 1733
+4 0 1733 0 0 0 0 0 0 0 0 1733 273
jcnd=409/1733 +38 0 
* 0 
+2 0 1324 1324 0 0 2 0 0 2
+4 0 1324
+3 0 1324 0 0 0 0 0 0 0 0 1324
+2 0 1324 1324
+5 0 1324 0 0 0 0 0 0 0 0 1324
+6 0 1324 1324
+4 0 1324 0 1324
+4 0 1324 1324
+4 0 1324 0 1324
+4 0 1324
+4 0 1324 0 0 0 0 0 0 0 0 1324
-4 0 409
+4 0 409 0 0 0 0 0 0 0 0 409 4
jcnd=24/409 0x3877c7a2e3 0 
* 0 
+6 0 1709 1709
+4 0 1709 1709 0 1 0 0 1
+4 0 1709 0 0 0 0 0 0 0 0 1709
+6 0 1709
+4 0 1709
+7 0 1709 0 1709 0 0 14 0 0 14
+4 0 1709 0 1709
+4 0 1709 0 1709
+4 0 1709 0 1709
+4 0 1709 0 0 0 0 0 0 0 0 1709 7
jcnd=896/1709 +7 0 
* 0 
+2 0 813 0 813
+5 0 813
+7 0 813 0 0 0 0 0 0 0 0 813 1
jcnd=386/813 +18 0 
* 0 
-7 0 896
+7 0 896 0 0 0 0 0 0 0 0 896 98
jcnd=777/896 +18 0 
* 0 
+2 0 546 0 546 0 0 14 0 0 14
+8 0 546 0 546 1 0 0 1
+8 0 546
+7 0 546 0 546 0 0 3 0 0 3
+4 0 546
+3 0 546
+3 0 546
+4 0 546
+3 0 546
+4 0 546
+3 0 546
+3 0 546
+4 0 546 0 546
+4 0 546 0 546
+4 0 546
jump=546 +71 0 
* 0 
-46 0 1187
+7 0 1187 0 1187
+4 0 1187
+3 0 1187
+3 0 1187
+4 0 1187
+3 0 1187
+4 0 1187
+3 0 1187
+3 0 1187
+4 0 1187 0 1187
+4 0 1187 0 1187
+4 0 1187
jump=1187 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 40
+7 0 40 0 40
+6 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 2
jcnd=40/40 +7 0 
* 0 
+7 0 1773
+4 0 1773 0 0 1 0 0 1
+3 0 1773
+3 0 1773 0 1773
cfn=(104)
calls=1773 0x3877c77180 0 
* 0 7092 3546 0 1 0 0 1 0 0 1773 33
+5 0 1773
+3 0 1773
jump=1773 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 290 0 0 1 0 0 1
+7 0 290
+2 0 290
+4 0 290
+3 0 290
+3 0 290 0 290
+5 0 290
+3 0 290
+4 0 290
+3 0 290 0 0 1 0 0 1
+4 0 290
+4 0 290
+3 0 290
+4 0 290 0 290
+4 0 290 0 290 0 0 11 0 0 11
+4 0 290
+3 0 290
+3 0 290 0 290
cfn=(104)
calls=290 0x3877c77180 0 
* 0 1160 580 0 0 0 0 0 0 0 290 1
+5 0 290
+3 0 290
jump=290 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 40 40 0 1 0 0 1
+4 0 40
jump=40 0x3877c7a10e 0 
* 0 
+5 0 40 40
+5 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 2250 0 2250 1 0 0 1
+5 0 2250 0 2250
+5 0 2250
+3 0 2250 0 2250
+5 0 2250
+4 0 2250 2250 0 0 1 0 0 1
+7 0 2250 2250 0 0 1 0 0 1
+3 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250 2
+6 0 2250 2250 0 0 1 0 0 1
+7 0 2250 2250 0 1 1 0 1 1
+4 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250
+2 0 2250 2250 0 0 1 0 0 1
+3 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250
jcnd=2250/2250 +97 0 
* 0 
+18 0 2250
+3 0 2250
+3 0 2250 0 2250
cfn=(38)
calls=2250 0x3877c79a00 0 
* 0 571208 73212 87573 47 38 66 47 37 66 89752 4698
+5 0 2250
+3 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250
+2 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250
+2 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250 29
+2 0 2250 2250
+7 0 2250 0 0 0 0 0 0 0 0 2250
jcnd=2250/2250 +13 0 
* 0 
+13 0 2250 0 2250
+2 0 2250 0 0 0 0 0 0 0 0 2250 80
+6 0 2250
+3 0 2250 2250
+4 0 2250 2250
+5 0 2250 2250
+5 0 2250
+4 0 2250 2250
+1 0 2250 0 0 1 0 0 1
+5 0 2250 2250 0 0 1 0 0 1
+7 0 2250 0 0 0 0 0 0 0 0 2250
jcnd=2250/2250 +14 0 
* 0 
+14 0 2250 0 2250 1 0 0 1
+3 0 2250 0 0 0 0 0 0 0 0 2250
+6 0 2250
jump=2250 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2250 0 2250 1 0 0 1
+2 0 2250
+3 0 2250
+3 0 2250 0 2250
+2 0 2250
+3 0 2250 0 2250
+1 0 2250
+3 0 2250 0 2250
+1 0 2250
+3 0 2250
+4 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250
+6 0 2250
+4 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250 7
jcnd=10/2250 0x3877c838d1 0 
* 0 
+2 0 2240
+3 0 2240
+3 0 2240
+3 0 2240
+3 0 2240
+3 0 2240 0 0 0 0 0 0 0 0 2240
jcnd=2240/2240 +41 0 
* 0 
+41 0 2240 0 0 1 0 0 1
+3 0 2240 0 0 0 0 0 0 0 0 2240
jcnd=2240/2240 0x3877c839c0 0 
* 0 
+24 0 2240
+3 0 2240
+4 0 2240
+3 0 2240
+3 0 2240
+3 0 2240
+3 0 2240
+3 0 2240 0 0 0 0 0 0 0 0 2240 1185
jcnd=1128/2240 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1122
+10 0 1122 1122 0 0 2 0 0 2
+3 0 1122
+4 0 1122 0 1122
+3 0 1122
+4 0 1122
+4 0 1122 0 0 0 0 0 0 0 0 1122
jcnd=1122/1122 -18 0 
* 0 
-18 0 3422 3422
+3 0 3422
+4 0 3422 0 3422
+3 0 3422
+4 0 3422
+4 0 3422 0 0 0 0 0 0 0 0 3422 11
jcnd=2300/3422 -18 0 
* 0 
+2 0 2250
+4 0 2250
+3 0 2250 2250
+1 0 2250 2250
+1 0 2250 2250
+2 0 2250 2250 0 1 0 0 1
+2 0 2250 2250
0x3877c839c0 0 2240 0 0 1 0 0 1
+3 0 2240
+3 0 2240
+3 0 2240
+4 0 2240 0 2240 0 0 1 0 0 1
cfn=(284)
calls=2240 0x3877c89b20 0 
* 0 847430 317972 313492 6 1 129 6 1 129 40446 1771 2240 278
+5 0 2240
jump=2240 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2250 2250 0 1 1 0 1 1
+7 0 2250 2250 0 0 1 0 0 1
+3 0 2250
+3 0 2250 0 0 1 0 0 1 0 0 2250
+6 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250
+6 0 2250 2250
+4 0 2250
+4 0 2250
+2 0 2250 0 0 0 0 0 0 0 0 2250
+2 0 2250
+2 0 2250
+7 0 2250 0 0 0 0 0 0 0 0 2250
jcnd=2250/2250 +14 0 
* 0 
+14 0 2250
+2 0 2250
cfn=(170)
calls=2250 0x3877c78650 0 
* 0 235861 63606 38370 20 3 0 20 3 0 57595 837

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=15/20 +18 0 
* 0 
+2 0 5 0 5
+8 0 5 0 5
+8 0 5
+3 0 5 0 5
+4 0 5 0 5
+4 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5
+3 0 5
+3 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=2/5 0x3877c75f78 0 
* 0 
-29 0 15
+3 0 15 0 15
+4 0 15 0 15
+4 0 15
+4 0 15 0 15
+4 0 15 0 15
+4 0 15
+3 0 15
+3 0 15 0 0 0 0 0 0 0 0 15 7
jcnd=5/15 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=9/13 +15 0 
* 0 
+2 0 4 4
+4 0 4
+3 0 4 0 0 0 0 0 0 0 0 4
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 27445393 11452423 6472395 244 134 239 244 133 239 723814 10319 13490 278
