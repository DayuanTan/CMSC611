version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2411


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2792552687 - 2793142269
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 898 0 0 1 0 0 1
+3 0 898 0 0 0 0 0 0 0 0 898
+2 0 898
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=898 0x3877c7b8b0 0 
* 0 99187 25353 12691 21 3 0 21 3 0 24211 426
* 0 898 898 0 1 1 0 1 1 0 0 0 898

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 898 0 898 1 0 0 1
+1 0 898
+5 0 898
+3 0 898 0 898
+1 0 898
+4 0 898 0 0 1 0 0 1
+3 0 898
+4 0 898
+3 0 898 0 898 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=898 0x3877c7aa50 0 
* 0 241964 34473 34164 46 39 44 46 39 44 40945 1394
* 0 898 898 0 1 1 0 1 1 0 0 0 898
+5 0 898
+3 0 898 0 0 0 0 0 0 0 0 898
jcnd=898/898 +96 0 
* 0 
+96 0 898 0 0 1 0 0 1
+4 0 898 898
+1 0 898 898
+1 0 898 898

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 512 0 512
+1 * 512
+3 * 512 0 512 0 0 1 0 0 1
+4 +1 512 512
+4 * 512 512
+1 * 512 512

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 884 0 884 1 0 0 1
+1 * 884
+3 * 884
+4 * 884 0 884
+4 +1 884
+4 * 884
+3 * 884 0 884
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=884 0x404ffe 790 
* * 5304 2652 1768 1 0 0 1
+5 * 884 884
+3 * 884 884
+1 * 884 884

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 884 0 884 1 0 0 1
+1 * 884
+3 * 884 0 884
+4 +1 884 884
+4 * 884 884
+1 * 884 884

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 884 0 884 1 0 0 1
+1 * 884
+3 * 884
+4 * 884 0 884
+4 +1 884
+4 * 884
+3 * 884 0 884 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=884 0x40500c 790 
* * 5304 2652 1768 1 0 0 1
+5 * 884 884
+3 * 884 884
+1 * 884 884

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 512 0 512
+1 * 512
+3 * 512 0 512
+4 +1 512 512
+4 * 512 512
+1 * 512 512

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 884 0 884 1 0 0 1
+1 * 884
+3 * 884 0 884
+4 +1 884 884 0 1 0 0 1
+4 * 884 884
+1 * 884 884

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 442 0 442
+1 * 442
+3 * 442 0 442
+4 * 442 0 442
+4 * 442 442
+4 * 442 442
+1 * 442 442

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(28) __gnu_cxx::new_allocator<int>::max_size() const
0x404992 113 463 0 463 1 0 0 1
+1 * 463
+3 * 463 0 463
+4 +1 463
+10 * 463 463
+1 * 463 463

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 442 0 442
+1 * 442
+3 * 442 0 442
+4 * 442 442
+1 * 442 442

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 221 0 221
+1 * 221
+3 * 221
+4 * 221 0 221
+4 * 221 0 221
+4 * 221 0 221
+4 +1 221 221
+4 * 221
+3 * 221
+5 * 221 0 221
cfi=(16)
cfn=(226)
calls=221 0x402d61 -20 
* * 1547 663 663
+5 * 221
+3 * 221 0 0 0 0 0 0 0 0 221
+2 * 221 221
+4 * 221 221 0 0 15 0 0 15
+2 * 221 0 221 0 0 3 0 0 3
+2 * 221 221
+1 * 221 221

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 449 0 449
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 * 449 0 449
+4 +1 449 449
+4 * 449
+3 * 449 0 449
cob=(5)
cfi=(8)
cfn=(164)
calls=449 0x387e4bb2f0 0 
* * 48313 11941 5500 23 4 0 23 4 0 11662 388 449
* * 449 449 0 1 1 0 1 1 0 0 0 449
+5 * 449 449
+1 * 449 449

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 449 0 449
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 * 449 0 449
+4 +1 449 449
+4 * 449
+3 * 449 0 449
cob=(5)
cfi=(8)
cfn=(164)
calls=449 0x387e4bb2f0 0 
* * 54466 14310 7191 0 0 0 0 0 0 13447 38 449
* * 449 449 0 0 0 0 0 0 0 0 0 449
+5 * 449 449
+1 * 449 449

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 449 0 449 1 0 0 1
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 * 449 0 449
+4 +2 449 449
+4 * 449
+3 * 449 0 449
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=449 0x4048de +12 
* * 2694 898 898 1 0 0 1
+5 * 449 449
+4 * 449 0 0 1 0 0 1
+3 * 449
+2 * 449 0 0 0 0 0 0 0 0 449
jcnd=449/449 +7 +3 
* * 
+7 +3 449 449
+4 * 449
+4 * 449
+3 * 449 0 449
cob=(5)
cfi=(8)
cfn=(32)
calls=449 0x387e4bd0b0 0 
* * 129606 18892 17420 33 19 32 33 19 32 21310 713 449
* * 449 449 0 0 0 0 0 0 0 0 0 449
+5 +1 449 449
+1 * 449 449

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 442 0 442 1 0 0 1
+1 * 442
+3 * 442 0 442 0 0 1 0 0 1
+4 * 442 0 442
+4 * 442 442
+1 * 442 442

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 442 0 442 1 0 0 1
+1 * 442
+3 * 442 0 442
+4 * 442 0 442
+4 * 442 442
+1 * 442 442

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 442 0 442
+1 * 442
+3 * 442 0 442
+4 * 442 442
+1 * 442 442

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 449 0 449 1 0 0 1
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 * 449 0 449 1 0 0 1
+4 +2 449 449
+4 * 449
+3 * 449 0 449
cfn=(28)
calls=449 0x404992 +12 
* * 2694 898 898 1 0 0 1
+5 * 449 449
+4 * 449
+3 * 449
+2 * 449 0 0 0 0 0 0 0 0 449
jcnd=449/449 +7 +3 
* * 
+7 +3 449 449
+4 * 449
+4 * 449
+3 * 449 0 449
cob=(5)
cfi=(8)
cfn=(32)
calls=449 0x387e4bd0b0 0 
* * 126726 19173 19438 17 21 13 17 21 13 20533 681 449
* * 449 449 0 1 1 0 1 1 0 0 0 449
+5 +1 449 449
+1 * 449 449

fn=(102)
0x4048de 113 463 0 463 1 0 0 1
+1 * 463
+3 * 463 0 463
+4 +1 463
+10 * 463 463
+1 * 463 463

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 221 0 221
+1 * 221
+3 * 221
+4 * 221 0 221
+4 * 221 0 221
+4 * 221 0 221
+4 +1 221 221
+4 * 221
+3 * 221
+5 * 221 0 221
cfi=(16)
cfn=(226)
calls=221 0x402d61 -20 
* * 1547 663 663
+5 * 221
+3 * 221 0 0 0 0 0 0 0 0 221
+2 * 221 221
+4 * 221 221 0 0 14 0 0 14
+2 * 221 0 221 0 0 7 0 0 7
+2 * 221 221
+1 * 221 221

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +2 442 442
+4 * 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=442 0x404484 107 
* * 190010 61786 59138 25 3 4 25 3 4 6880 440 880 110
+5 * 442 442
+1 * 442 442

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +2 442 442 0 1 0 0 1
+4 * 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=442 0x404a36 450 
* * 177634 57366 54718 24 3 4 24 3 4 6880 440 880 110
+5 * 442 442
+1 * 442 442

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +2 442 442
+4 * 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=442 0x40439c 107 
* * 190010 61786 59138 7 1 7 7 1 7 6880 425 880
+5 * 442 442
+1 * 442 442

fn=(116)
0x40439c 107 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +10 442 442
+4 * 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=442 0x4047d7 -26 
* * 183822 59576 56928 7 1 7 7 1 7 6880 425 880
+5 +1 442 442
+1 * 442 442

fn=(118)
0x4047d7 91 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +2 442 442
+4 * 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=442 0x4049e2 450 
* * 177634 57366 54718 7 1 7 7 1 7 6880 425 880
+5 * 442 442
+1 * 442 442

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +10 442 442
+4 * 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(52)
calls=442 0x404829 -26 
* * 183822 59576 56928 25 3 4 25 3 4 6880 440 880 110
+5 +1 442 442
+1 * 442 442

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 442 0 442
+1 * 442
+3 * 442 0 442
+1 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=442 0x4043ca -45 
* * 15912 5746 6188 4 0 4 4 0 4
+5 +1 442 442 0 1 0 0 1
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=442 0x404412 +43 
* * 154615 29938 27538 22 20 8 22 20 8 21153 651 884
+5 * 442
jump=442 +28 * 
* * 
+28 * 442
+4 * 442 442
+1 * 442 442
+1 * 442 442

fn=(14)
0x4043ca 90 442 0 442 1 0 0 1
+1 * 442
+3 * 442
+4 * 442 0 442 0 0 1 0 0 1
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=442 0x404804 +24 
* * 7956 2652 3094 2 0 1 2 0 1
+5 * 442 442
+4 * 442 0 442 0 0 2 0 0 2
+7 * 442 442
+4 * 442 0 442 1 0 0 1
+8 * 442 442
+4 * 442 0 442
+8 +1 442 442
+1 * 442 442

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 442 0 442 1 0 0 1
+1 * 442
+3 * 442 0 442
+2 * 442 0 442
+2 * 442 0 442
+1 * 442 0 0 1 0 0 1
+4 * 442 0 442
+4 * 442 0 442
+4 +2 442 442
+4 * 442
+3 * 442 0 442
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=442 0x4039fc 117 
* * 2652 1326 884 2 0 0 2
+5 * 442
+3 * 442 0 442
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=442 0x4039ed -88 
* * 2652 1326 884
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=442 0x402d74 645 
* * 5746 2652 884
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442
+3 * 442
+3 * 442 0 442 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=442 0x403a0a 134 
* * 182033 38227 34588 23 6 25 23 6 25 21707 644 884
+5 +4 442 442
+4 * 442
+3 * 442 0 442
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=442 0x40325e 113 
* * 2652 1326 884 1 0 0 1
+5 * 442
+3 * 442 442
+4 * 442 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=442 0x403a98 565 
* * 11050 4420 3536 2 0 0 2
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=442 0x403a68 547 
* * 11050 4420 3536
+5 * 442
+3 * 442
+3 * 442
+3 * 442
+3 * 442 0 442
cfi=(11)
cfn=(114)
calls=442 0x403ac9 -60 
* * 196640 63996 61790 7 1 7 7 1 7 6880 425 880
+5 -3 442 442
+4 * 442 0 442
+4 * 442
jump=442 +28 +4 
* * 
+28 +4 442
+4 * 442 442
+1 * 442 442
+2 * 442 442
+2 * 442 442
+1 * 442 442

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 449 0 449 1 0 0 1
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 * 449 0 449
+4 +2 449 449
+5 * 449 0 0 0 0 0 0 0 0 449 7
+2 +1 449 449
+4 * 449 449
+4 * 449 449
+4 * 449
+3 * 449
+3 * 449 0 449
cfi=(5)
cfn=(190)
calls=449 0x40452a -65 
* * 59854 16106 9436 0 0 0 0 0 0 13447 38 898
+5 +1 449 449
+1 * 449 449

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 449 0 449 1 0 0 1
+1 * 449
+3 * 449
+4 * 449 0 449 1 0 0 1
+4 * 449 0 449
+4 0 449 449
+5 0 449 0 0 0 0 0 0 0 0 449
+2 0 449 449
+4 0 449 449
+4 0 449
+5 0 449
+3 0 449
+3 0 449 0 449
fi=(6) ???
cfi=(5)
cfn=(26)
calls=449 0x404730 99 
* 0 138400 22765 23030 21 22 13 21 22 13 20982 681 898
+5 0 449
fi=(6)
jump=449 +7 0 
* 0 
+7 0 449 449
+1 0 449 449

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 442 0 442 1 0 0 1
+1 * 442
+3 * 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+4 * 442 0 442
+4 * 442
+4 * 442 0 0 1 0 0 1
+4 * 442
+3 * 442
+3 * 442 0 442
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=442 0x404468 726 
* * 4420 2210 1768 1 0 0 1
+5 * 442 442
+4 * 442 442
+1 * 442 442

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+3 * 442 0 442
+4 * 442
+4 * 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfi=(10)
cfn=(44)
calls=442 0x404468 726 
* * 4420 2210 1768
+5 * 442 442
+4 * 442 442
+1 * 442 442

fn=(86)
0x403a0a 134 442 0 442
+1 * 442
+3 * 442 0 442
+1 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=442 0x4042e2 -45 
* * 15912 5746 6188 5 0 0 5
+5 +1 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=442 0x40432a +43 
* * 156397 29387 25306 17 6 25 17 6 25 21707 644 884
+5 * 442
jump=442 +28 * 
* * 
+28 * 442
+4 * 442 442
+1 * 442 442
+1 * 442 442

fn=(88)
0x4042e2 90 442 0 442 1 0 0 1
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=442 0x4047b2 +24 
* * 7956 2652 3094 3 0 0 3
+5 * 442 442
+4 * 442 0 442
+7 * 442 442
+4 * 442 0 442
+8 * 442 442
+4 * 442 0 442
+8 +1 442 442
+1 * 442 442

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 442 0 442 1 0 0 1
+1 * 442
+3 * 442 0 442
+1 * 442
+4 * 442 0 442
+4 +2 442 442
+4 * 442 442 0 1 0 0 1
+4 * 442
+3 * 442 442
+4 * 442 442
+3 * 442
+3 * 442
+3 * 442
+4 * 442
+3 * 442 442
+4 * 442 442
+3 -1 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=442 0x403ce6 +11 
* * 59968 16188 9828 24 5 0 24 5 0 11942 384 884
+5 +1 442 442
+4 * 442
+3 * 442 0 442
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=442 0x4031b8 -82 
* * 10166 3536 3536 1 0 0 1
+5 * 442
jump=442 +28 * 
* * 
+28 * 442
+4 * 442 442
+1 * 442 442
+1 * 442 442

fn=(172)
0x4031b8 79 442 0 442 1 0 0 1
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 442
+4 * 442
+3 * 442 0 442
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=442 0x403ccc +42 
* * 6188 2210 2210
+5 * 442 442
+1 * 442 442

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 912 0 912 1 0 0 1
+1 * 912
+3 * 912 0 912
+4 +1 912 912
+4 * 912 912 0 0 2 0 0 2
+4 * 912
+3 * 912 912
+4 * 912 912
+3 * 912
+3 * 912
+3 * 912
+4 * 912 912
+1 * 912 912

fn=(106)
0x40325e 113 905 0 905 1 0 0 1
+1 * 905
+3 * 905 0 905
+4 +1 905 905
+4 * 905 905
+1 * 905 905

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456 0 0 1 0 0 1
+4 +1 456 456
+4 * 456 456
+1 * 456 456

fn=(82)
0x4039fc 117 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456 1 0 0 1
+4 +1 456 456
+4 * 456 456
+1 * 456 456

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 221 0 221
+1 * 221
+3 * 221
+4 * 221 0 221
+4 * 221 0 221
+4 +2 221 221
+4 * 221 221
+4 * 221 221
+4 * 221 221
+4 * 221
+3 * 221 0 0 0 0 0 0 0 0 221 9
jcnd=7/221 +51 +10 
* * 
+2 +3 214 214
+4 * 214 214
+4 * 214 214
+4 -1 214 214
+4 * 214
+3 * 214
+3 * 214 0 214
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=214 0x403373 215 
* * 8132 2782 2996 0 14 2 0 14 2 214
+5 +2 214 214
+4 * 214 214
+4 * 214
+4 * 214 214
+4 * 214 0 214
+4 * 214
jump=214 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11094 3373 2921 45 14 11 45 14 11 788 77 41
+5 +2 221 221
+1 * 221 221

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 442 0 442 1 0 0 1
+1 * 442
+3 * 442 0 442
+2 * 442 0 442
+2 * 442 0 442
+1 * 442
+4 * 442 0 442 1 0 0 1
+4 * 442 0 442
+4 +2 442 442
+4 * 442
+3 * 442 0 442
cfn=(6)
calls=442 0x403b08 117 
* * 2652 1326 884 1 0 1 1 0 1
+5 * 442
+3 * 442 0 442
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=442 0x403afa -88 
* * 2652 1326 884 1 0 0 1
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(10)
calls=442 0x402f54 645 
* * 5746 2652 884 1 1 0 1 1
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442
+3 * 442
+3 * 442 0 442
cfn=(12)
calls=442 0x403b16 134 
* * 180251 38778 36820 27 20 12 27 20 12 21153 651 884
+5 +4 442 442 0 1 0 0 1
+4 * 442
+3 * 442 0 442
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=442 0x40333c 113 
* * 2652 1326 884 2 0 0 2
+5 * 442
+3 * 442 442
+4 * 442 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(42)
calls=442 0x403ba4 565 
* * 11050 4420 3536 3 0 0 3
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(46)
calls=442 0x403b74 547 
* * 11050 4420 3536
+5 * 442
+3 * 442
+3 * 442
+3 * 442
+3 * 442 0 442 1 0 0 1
cfi=(11)
cfn=(48)
calls=442 0x403bd5 -60 
* * 196640 63996 61790 26 3 4 26 3 4 6880 440 880 110
+5 -3 442 442
+4 * 442 0 442
+4 * 442
jump=442 +28 +4 
* * 
+28 +4 442
+4 * 442 442
+1 * 442 442
+2 * 442 442
+2 * 442 442
+1 * 442 442

fn=(108)
0x403a98 565 442 0 442 1 0 0 1
+1 * 442
+3 * 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+4 * 442 0 442
+4 * 442
+4 * 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=442 0x404380 726 
* * 4420 2210 1768 1 0 0 1
+5 * 442 442
+4 * 442 442
+1 * 442 442

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 442 0 442
+1 * 442
+3 * 442 0 442
+1 * 442
+4 * 442 0 442 1 0 0 1
+4 +2 442 442
+4 * 442
+3 * 442 0 442
cfn=(40)
calls=442 0x40333c 113 
* * 2652 1326 884
+5 * 442
+3 * 442 442
+4 * 442 442
+4 * 442 442
+4 * 442 442
+3 -1 442
+3 * 442
+3 * 442 0 442
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=442 0x40334a 148 
* * 13702 4420 5304 2 0 0 2
+5 +1 442 442
+4 * 442
+3 * 442 0 442
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=442 0x4032ca 159 
* * 88630 26938 17262 3 0 0 3 0 0 13718 32 884
+5 * 442
jump=442 +28 * 
* * 
+28 * 442 0 0 1 0 0 1
+4 * 442 442
+1 * 442 442
+1 * 442 442

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 449 0 449 1 0 0 1
+1 * 449 0 0 1 0 0 1
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 0 449 449
+5 0 449 0 0 0 0 0 0 0 0 449
+2 0 449 449
+4 0 449 449
+4 0 449
+5 0 449
+3 0 449
+3 0 449 0 449
fi=(6)
cfi=(5)
cfn=(100)
calls=449 0x40461a 99 
* 0 141280 22484 21012 36 19 32 36 19 32 21759 713 898
+5 0 449
fi=(6)
jump=449 +7 0 
* 0 
+7 0 449 449
+1 0 449 449

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 74698 0 74698
+1 * 74698
+3 * 74698 0 74698
+4 * 74698 0 74698
+4 +1 74698 74698
+4 * 74698 74698
+3 * 74698 74698
+4 * 74698
+4 * 74698
+3 * 74698 74698
+1 * 74698 74698

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 74698 0 74698
+1 * 74698
+3 * 74698 0 74698 1 0 0 1
+4 * 74698 0 74698
+4 +1 74698 74698
+4 * 74698 74698
+3 * 74698 74698
+4 * 74698
+4 * 74698
+3 * 74698 74698
+1 * 74698 74698

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 442
+4 * 442
+3 * 442 0 442
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=442 0x403d7e +42 
* * 6188 2210 2210 1 0 0 1
+5 * 442 442
+1 * 442 442

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 442 0 442 1 0 0 1
+1 * 442
+3 * 442 0 442
+1 * 442
+4 * 442 0 442
+4 +2 442 442
+4 * 442 442
+4 * 442
+3 * 442 442
+4 * 442 442
+3 * 442
+3 * 442
+3 * 442
+4 * 442
+3 * 442 442
+4 * 442 442
+3 -1 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(188)
calls=442 0x403d98 +11 
* * 66088 18540 11516 1 0 0 1 0 0 13718 32 884
+5 +1 442 442
+4 * 442
+3 * 442 0 442
cfn=(192)
calls=442 0x403296 -82 
* * 10166 3536 3536 1 0 0 1
+5 * 442
jump=442 +28 * 
* * 
+28 * 442
+4 * 442 442
+1 * 442 442
+1 * 442 442

fn=(2)
0x402d74 645 1796 0 1796 1 0 0 1
+1 * 1796
+3 * 1796 0 1796 0 0 1 0 0 1
+4 +1 1796 1796
+4 * 1796 1796 0 1 1 0 1 1
+4 * 1796
+3 * 1796 1796
+4 * 1796 1796
+3 * 1796
+3 * 1796
+3 * 1796
+4 * 1796 1796
+1 * 1796 1796

fn=(20)
0x404412 179 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 +2 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(22)
calls=442 0x404236 -14 
* * 143565 24634 24444 21 20 8 21 20 8 21153 651 884
+5 * 442 442
+4 * 442 0 442
+3 +1 442 442
+4 * 442 442 0 1 0 0 1
+3 * 442 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+3 * 442 442
+4 * 442
+4 * 442
+3 * 442 442
+4 * 442 0 442
+4 +1 442 442
+1 * 442 442

fn=(94)
0x40432a 179 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 +2 442 442
+4 * 442 442 0 1 0 0 1
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(96)
calls=442 0x403fbe -14 
* * 145347 24083 22212 16 6 25 16 6 25 21707 644 884
+5 * 442 442
+4 * 442 0 442
+3 +1 442 442
+4 * 442 442
+3 * 442 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+3 * 442 442
+4 * 442
+4 * 442
+3 * 442 442
+4 * 442 0 442
+4 +1 442 442
+1 * 442 442

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 221 0 221
+1 * 221
+3 * 221 0 0 1 0 0 1
+4 * 221 0 221
+4 * 221 0 221
+4 +2 221 221
+4 * 221 221
+4 * 221 221
+4 * 221 221
+4 * 221
+3 * 221 0 0 0 0 0 0 0 0 221
jcnd=7/221 +51 +10 
* * 
+2 +3 214 214
+4 * 214 214
+4 * 214 214
+4 -1 214 214
+4 * 214
+3 * 214
+3 * 214 0 214
cfi=(3)
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=214 0x4036b1 215 
* * 8132 2782 2996 0 14 4 0 14 4 214
+5 +2 214 214
+4 * 214 214
+4 * 214
+4 * 214 214
+4 * 214 0 214
+4 * 214
jump=214 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246)
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10029 3120 2710 20 2 11 20 2 11 574 46 41
+5 +2 221 221
+1 * 221 221

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40)
0x40333c 113 905 0 905 1 0 0 1
+1 * 905
+3 * 905 0 905 1 0 0 1
+4 +1 905 905
+4 * 905 905
+1 * 905 905

fn=(112)
0x403a68 547 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+3 * 442 0 442
+4 * 442
+4 * 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfi=(10)
cfn=(110)
calls=442 0x404380 726 
* * 4420 2210 1768
+5 * 442 442
+4 * 442 442
+1 * 442 442

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 442 0 442
+1 * 442
+3 * 442 0 442
+1 * 442
+4 * 442 0 442 1 0 0 1
+4 +2 442 442
+4 * 442
+3 * 442 0 442
cfn=(106)
calls=442 0x40325e 113 
* * 2652 1326 884
+5 * 442
+3 * 442 442
+4 * 442 442
+4 * 442 442
+4 * 442 442
+3 -1 442
+3 * 442
+3 * 442 0 442
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=442 0x40326c 148 
* * 13702 4420 5304 4 0 0 4
+5 +1 442 442
+4 * 442
+3 * 442 0 442
cfn=(156)
calls=442 0x4031ec 159 
* * 82510 24586 15574 27 5 0 27 5 0 11942 384 884
+5 * 442
jump=442 +28 * 
* * 
+28 * 442 0 0 1 0 0 1
+4 * 442 442
+1 * 442 442
+1 * 442 442

fn=(158)
0x403ce6 171 449 0 449 1 0 0 1
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 * 449 0 449
+4 +2 449 449
+5 * 449 0 0 0 0 0 0 0 0 449
+2 +1 449 449
+4 * 449 449
+4 * 449 449
+4 * 449
+3 * 449
+3 * 449 0 449
cfi=(5)
cfn=(160)
calls=449 0x4044d6 -65 
* * 53701 13737 7745 24 5 0 24 5 0 11662 388 898
+5 +1 449 449
+1 * 449 449

fl=(12)
fn=(54)
0x404a36 450 442 0 442
+1 * 442
+3 * 442 0 442
+1 * 442
+4 * 442 0 442 1 0 0 1
+4 * 442 0 442
+4 * 442 0 442
+4 +10 442 442
+4 * 442
+3 * 442 0 442
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=442 0x404c38 288 
* * 6630 2652 2210 3 0 0 3
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(56)
calls=442 0x404c38 288 
* * 6630 2652 2210
+5 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=442 0x404c52 -36 
* * 154650 49410 46762 20 3 4 20 3 4 6880 440 880 110
+5 +1 442
+4 * 442 442
+1 * 442 442
+1 * 442 442

fn=(60)
0x404c52 424 442 0 442
+1 * 442
+3 * 442 0 442
+2 * 442 0 442
+1 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +4 442 442
+4 * 442
+3 * 442 0 442
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=442 0x40492d 277 
* * 6630 2652 2210 2 0 0 2
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=442 0x404d9d 277 
* * 11050 3978 3536 2 0 1 2 0 1
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(66)
calls=442 0x404d9d 277 
* * 11050 3978 3536
+5 * 442
+3 * 442
+3 * 442
+3 * 442 0 442
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=442 0x404db7 -49 
* * 113544 35708 33060 15 3 3 15 3 3 6880 440 880 110
+5 +1 442
+4 * 442 442
+1 * 442 442
+2 * 442 442
+1 * 442 442

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 484 0 484 1 0 0 1
+1 * 484
+3 * 484
+4 * 484 0 484
+4 +1 484 484
+4 * 484
+3 * 484 0 484 1 0 0 1
cfi=(13)
cfn=(64)
calls=484 -33 -66 
* * 2904 1452 968
+5 * 484 484
+1 * 484 484

fn=(66)
0x404d9d 277 884 0 884
+1 * 884
+3 * 884
+4 * 884 0 884
+4 +1 884 884
+4 * 884
+3 * 884 0 884
cfi=(13)
cfn=(68)
calls=884 0x404f1a -58 
* * 14144 5304 4420 2 0 1 2 0 1
+5 * 884 884
+1 * 884 884

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 442 0 442
+1 * 442
+3 * 442 0 442
+1 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +10 442 442
+4 * 442
+3 * 442 0 442
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=442 0x404bc6 288 
* * 6630 2652 2210 3 0 0 3
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(122)
calls=442 0x404bc6 288 
* * 6630 2652 2210
+5 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=442 0x404be0 -36 
* * 154650 49410 46762 4 1 7 4 1 7 6880 425 880
+5 +1 442
+4 * 442 442
+1 * 442 442
+1 * 442 442

fn=(128)
0x404878 277 484 0 484
+1 * 484
+3 * 484
+4 * 484 0 484 1 0 0 1
+4 +1 484 484
+4 * 484
+3 * 484 0 484
cfi=(13)
cfn=(130)
calls=484 -33 -66 
* * 2904 1452 968 0 0 1 0 0 1
+5 * 484 484
+1 * 484 484

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 884 0 884
+1 * 884
+3 * 884
+4 * 884 0 884
+4 +1 884 884
+4 * 884
+3 * 884 0 884
cfi=(13)
cfn=(134)
calls=884 0x404e98 -58 
* * 14144 5304 4420 2 0 0 2
+5 * 884 884
+1 * 884 884

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +8 442 0 442
+4 +3 442 442
+4 * 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=442 0x404eb5 -22 
* * 106914 33498 30408 1 1 7 1 1 7 6880 425 880
+5 +1 442 442
+1 * 442 442

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 884 0 884 1 0 0 1
+1 * 884
+3 * 884
+4 * 884 0 884
+4 +1 884 884
+4 * 884
+3 * 884 0 884
cfi=(13)
cfn=(124)
calls=884 0x404d36 -77 
* * 5304 2652 1768 2 0 0 2
+5 * 884 884
+1 * 884 884

fn=(56)
0x404c38 288 884 0 884 1 0 0 1
+1 * 884
+3 * 884
+4 * 884 0 884 1 0 0 1
+4 +1 884 884
+4 * 884
+3 * 884 0 884
cfi=(13)
cfn=(58)
calls=884 0x404d8f -77 
* * 5304 2652 1768 1 0 0 1
+5 * 884 884
+1 * 884 884

fn=(74)
0x404f37 368 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456 1 0 0 1
+4 * 456 0 456
+4 * 456 0 456
+4 +2 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456
+4 * 456 0 456
+4 +1 456 456
+5 * 456 0 0 0 0 0 0 0 0 456
jcnd=7/456 +33 +2 
* * 
+2 +1 449 449
+4 * 449
+8 * 449 449
+4 * 449 449
+4 * 449
+3 * 449 0 0 1 0 0 1
+3 * 449 0 449 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=449 0x3877c83840 0 
* * 95270 28817 27924 11 2 5 11 2 5 6500 443 444 110
* * 449 449 0 1 1 0 1 1 0 0 0 449
+5 +1 456 456
+4 * 456
+8 * 456 456
+4 * 456
+3 +1 456 456
+1 * 456 456

fn=(140)
0x404eb5 368 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456 1 0 0 1
+4 * 456 0 456
+4 * 456 0 456 0 0 1 0 0 1
+4 +2 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456
+4 * 456 0 456
+4 +1 456 456
+5 * 456 0 0 0 0 0 0 0 0 456
jcnd=7/456 +33 +2 
* * 
+2 +1 449 449
+4 * 449
+8 * 449 449
+4 * 449 449
+4 * 449
+3 * 449
+3 * 449 0 449
cob=(2)
cfi=(9)
cfn=(78)
calls=449 0x3877c83840 0 
* * 95270 28817 27924 0 1 8 0 1 8 6500 429 444
* * 449 449 0 0 0 0 0 0 0 0 0 449
+5 +1 456 456
+4 * 456
+8 * 456 456
+4 * 456
+3 +1 456 456
+1 * 456 456

fn=(72)
0x404db7 379 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442 1 0 0 1
+4 * 442 0 442
+4 * 442 0 442
+4 +8 442 0 442
+4 +3 442 442
+4 * 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfn=(74)
calls=442 0x404f37 -22 
* * 106914 33498 30408 14 3 3 14 3 3 6880 440 880 110
+5 +1 442 442
+1 * 442 442

fn=(126)
0x404be0 424 442 0 442
+1 * 442
+3 * 442 0 442
+2 * 442 0 442
+1 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 * 442 0 442
+4 +4 442 442
+4 * 442
+3 * 442 0 442
cfn=(128)
calls=442 0x404878 277 
* * 6630 2652 2210 1 0 0 1
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(132)
calls=442 0x404d44 277 
* * 11050 3978 3536 2 0 0 2
+5 * 442
+3 * 442 442
+4 * 442
+3 * 442 0 442
cfn=(132)
calls=442 0x404d44 277 
* * 11050 3978 3536
+5 * 442
+3 * 442
+3 * 442
+3 * 442 0 442
cfn=(138)
calls=442 0x404d5e -49 
* * 113544 35708 33060 1 1 7 1 1 7 6880 425 880
+5 +1 442
+4 * 442 442
+1 * 442 442
+2 * 442 442
+1 * 442 442

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 884 0 884 1 0 0 1
+1 * 884
+3 * 884 0 884
+4 +1 884 884
+4 * 884 884
+1 * 884 884

fn=(110)
0x404380 726 884 0 884 1 0 0 1
+1 * 884
+3 * 884 0 884
+4 * 884 0 884
+4 * 884 884
+4 * 884 884
+3 * 884 884
+4 * 884 0 884
+3 * 884 884
+1 * 884 884

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 884 0 884 1 0 0 1
+1 * 884
+3 * 884 0 884
+4 +1 884 884
+4 * 884 884
+1 * 884 884

fn=(44)
0x404468 726 884 0 884
+1 * 884
+3 * 884 0 884
+4 * 884 0 884
+4 * 884 884
+4 * 884 884
+3 * 884 884
+4 * 884 0 884 1 0 0 1
+3 * 884 884
+1 * 884 884

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 449 0 449 1 0 0 1
+1 * 449
+3 * 449 0 449
+4 * 449 0 449
+4 * 449 449
+1 * 449 449

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 449 0 449 1 0 0 1
+1 * 449
+3 * 449 0 449
+4 * 449 0 449 1 0 0 1
+4 * 449 449
+1 * 449 449

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 449 0 449 1 0 0 1
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 +4 449 449
+4 * 449 449
+4 * 449
+3 * 449
+3 * 449 0 449
cfn=(184)
calls=449 0x40454c -14 
* * 2694 898 1347 1 0 0 1
+5 +2 449 449
+1 * 449 449

fn=(150)
0x40326c 148 449 0 449
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 * 449 0 449
+4 +3 449 449 0 1 0 0 1
+4 * 449 449
+4 * 449
+3 * 449
+3 * 449 0 449
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=449 0x403d1a -29 
* * 8082 2694 3143 3 0 0 3
+5 +1 449 449
+1 * 449 449

fn=(180)
0x40334a 148 449 0 449
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 * 449 0 449
+4 +3 449 449
+4 * 449 449
+4 * 449
+3 * 449
+3 * 449 0 449
cfn=(182)
calls=449 0x403dcc -29 
* * 8082 2694 3143 2 0 0 2
+5 +1 449 449
+1 * 449 449

fn=(152)
0x403d1a 122 449 0 449 1 0 0 1
+1 * 449
+3 * 449
+4 * 449 0 449
+4 * 449 0 449
+4 +4 449 449
+4 * 449 449
+4 * 449
+3 * 449
+3 * 449 0 449
cfn=(154)
calls=449 0x4044f8 -14 
* * 2694 898 1347 2 0 0 2
+5 +2 449 449
+1 * 449 449

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2019 376 382 2 2 5 2 2 5 278 30 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 13 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3117 646 596 22 13 7 22 13 7 501 69 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 221 0 221 1 0 0 1
+1 * 221
+3 * 221
+4 * 221 0 221
+4 * 221 0 221
+4 +1 221 221
+4 * 221
+3 * 221 0 221
cfi=(2)
cfn=(2)
calls=221 0x402d74 645 
* * 2873 1326 442
+5 * 221
+3 * 221 0 221
+3 +1 221 221
+6 * 221 0 221
+3 * 221 221
+6 * 221 0 221
+3 +1 221 221
+6 * 221 0 221 1 0 0 1
+3 * 221 221
+6 * 221 0 221
+3 +2 221 0 221
+7 * 221
jump=221 +86 * 
* * 
+2 +1 24752 24752
+3 * 24752
+3 * 24752 24752
+4 * 24752
+3 * 24752
+3 * 24752 0 24752
cfi=(2)
cfn=(144)
calls=24752 0x402d9a 770 
* * 272272 123760 74256
+5 * 24752 24752
+4 * 24752 24752
+5 * 24752
+4 * 24752 0 24752
+5 +1 24752 24752
+3 * 24752
+3 * 24752 24752
+4 * 24752
+3 * 24752
+3 * 24752 0 24752
cfi=(2)
cfn=(146)
calls=24752 0x402dba 770 
* * 272272 123760 74256 1 0 0 1
+5 * 24752 24752
+2 * 24752
+4 * 24752 24752
+5 * 24752
+4 * 24752 0 24752
+5 -2 24752 0 24752
+4 * 24752 24752
+3 * 24752
+3 * 24752 24752
+3 * 24752 0 0 0 0 0 0 0 0 24752 222
jcnd=24531/24752 -93 +1 
* * 
-9 * 221 221 0 1 0 0 1
+3 * 221
+3 * 221 221
+3 * 221 0 0 0 0 0 0 0 0 221
jcnd=221/221 -93 +1 
* * 
+2 +4 221 221
+3 * 221
+3 * 221
+4 * 221 221 0 1 0 0 1
+5 * 221
+4 * 221
+3 * 221 0 221
+5 +1 221 221
+3 * 221
+3 * 221
+4 * 221 221
+5 * 221
+4 * 221
+3 * 221 0 221
+5 +1 221 0 221
+7 * 221
jump=221 0x4016ee * 
* * 
+2 +1 24752 24752
+3 * 24752
+3 * 24752 24752
+4 * 24752
+3 * 24752 0 0 1 0 0 1
+3 * 24752 0 24752
cfi=(2)
cfn=(146)
calls=24752 0x402dba 770 
* * 272272 123760 74256
+5 * 24752 24752
+2 * 24752
+4 * 24752 24752
+5 * 24752 0 24752
+5 +1 24752 24752
+3 * 24752
+3 * 24752 24752
+4 * 24752
+3 * 24752
+3 * 24752 0 24752
cfi=(2)
cfn=(144)
calls=24752 0x402d9a 770 
* * 272272 123760 74256
+5 * 24752 24752
+4 * 24752 24752
+5 * 24752 0 24752
+5 +1 24752 24752
+5 * 24752 24752
+5 * 24752 24752
+5 * 24752
+4 * 24752 0 24752
+5 +1 24752 24752
+5 * 24752 24752
+5 * 24752 24752
+5 * 24752
+4 * 24752 0 24752
+5 -4 24752 0 24752
+4 * 24752 24752
+3 * 24752
+3 * 24752 24752
+3 * 24752 0 0 0 0 0 0 0 0 24752 222
jcnd=24531/24752 0x401672 +1 
* * 
-9 * 221 221 0 1 0 0 1
+3 * 221
+3 * 221 221
+3 * 221 0 0 0 0 0 0 0 0 221
jcnd=221/221 0x401672 +1 
* * 
+6 +6 221 221 0 1 0 0 1
+5 * 221 221
+5 * 221 0 221
+5 +2 221 221
+3 +1 221 0 221
+3 * 221 221
+5 * 221 221
+1 * 221 221

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 221
+7 * 221
+7 * 221
+3 * 221
+3 * 221 0 221
cfi=(2)
cfn=(4)
calls=221 0x4030b2 310 
* * 217566 62228 57976 63 23 16 63 23 16 14030 677 882 110
+5 * 221
+7 * 221
+7 * 221
+3 * 221
+3 * 221 0 221
cfi=(2)
cfn=(80)
calls=221 0x402ff4 310 
* * 218715 61966 56877 38 7 30 38 7 30 14361 677 882
+5 * 221 0 0 1 0 0 1
+7 * 221
+7 * 221
+3 * 221
+3 * 221 0 221
cfn=(142)
calls=221 0x401585 -52 
* * 2588573 1144117 597805 8 0 0 8 0 0 49946 444
+5 * 221 0 221
+8 * 221 221
+6 * 221 0 221
+6 * 221
+7 * 221
+3 * 221 0 221
cfi=(2)
cfn=(148)
calls=221 0x402df4 414 
* * 54736 17155 12207 33 5 0 33 5 0 5971 194 442
+5 * 221
+7 * 221
+3 * 221 0 221 1 0 0 1
cfi=(2)
cfn=(178)
calls=221 0x402e74 414 
* * 57796 18331 13051 7 0 0 7 0 0 6859 18 442
+5 +2 221
+7 * 221
+7 * 221
+3 * 221
+3 * 221 0 221
cfi=(2)
cfn=(4)
calls=221 0x4030b2 310 
* * 217227 62204 57872 2 1 1 2 1 1 14003 414 882
+5 * 221
+7 * 221
+7 * 221
+3 * 221
+3 * 221 0 221
cfi=(2)
cfn=(80)
calls=221 0x402ff4 310 
* * 217860 61915 56739 0 0 2 0 0 2 14226 392 882
+5 * 221 221
+6 * 221 0 0 1 0 0 1
+7 * 221
+7 * 221 0 221
+6 * 221 221
+8 * 221
+3 * 221
+3 * 221 0 221
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=221 0x401719 -33 
* * 1201135 499902 275587 4 0 0 4 0 0 24973 222
+5 * 221 0 221
+8 * 221 221
+6 * 221 0 221
+6 * 221
+7 * 221 0 0 1 0 0 1
+3 * 221 0 221
cfi=(2)
cfn=(148)
calls=221 0x402df4 414 
* * 54736 17155 12207 0 0 0 0 0 0 5971 190 442
+5 * 221
+7 * 221
+3 * 221 0 221
cfi=(2)
cfn=(178)
calls=221 0x402e74 414 
* * 57796 18331 13051 0 0 0 0 0 0 6859 14 442
+5 +2 221 221
+7 * 221
+3 * 221 0 221
cfi=(2)
cfn=(2)
calls=221 0x402d74 645 
* * 2873 1326 442
+5 * 221 221
+6 * 221
+3 * 221
+3 * 221
+3 * 221 221
+7 * 221
+3 * 221 0 0 1 0 0 1
+3 * 221 0 221
cfi=(2)
cfn=(144)
calls=221 0x402d9a 770 
* * 2431 1105 663
+5 * 221
+3 * 221
+7 * 221
+3 * 221
+3 * 221 0 221
cfi=(2)
cfn=(200)
calls=221 0x402eda 901 
* * 25105 9063 7071 48 28 13 48 28 13 1223 86 41
+5 +1 221 221
+7 * 221
+3 * 221 0 221
cfi=(2)
cfn=(10)
calls=221 0x402f54 645 
* * 2873 1326 442 0 1 0 0 1
+5 * 221 221
+6 * 221
+3 * 221
+3 * 221
+3 * 221 221
+7 * 221 0 0 1 0 0 1
+3 * 221
+3 * 221 0 221
cfi=(2)
cfn=(146)
calls=221 0x402dba 770 
* * 2431 1105 663
+5 * 221
+3 * 221
+7 * 221
+3 * 221
+3 * 221 0 221
cfi=(2)
cfn=(244)
calls=221 0x402f7a 901 
* * 24040 8810 6860 21 16 15 21 16 15 1009 46 41
+5 +1 221 221
+7 * 221
+3 * 221 0 221
cfi=(2)
cfn=(10)
calls=221 0x402f54 645 
* * 2873 1326 442
+5 * 221 221
+6 * 221
+3 * 221
+3 * 221
+3 * 221 221 0 1 0 0 1
+7 * 221
+3 * 221
+3 * 221 0 221
cfi=(2)
cfn=(146)
calls=221 0x402dba 770 
* * 2431 1105 663
+5 * 221 221
+2 * 221
+4 * 221 221
+8 * 221 221
+8 * 221 0 221
+8 +1 221 221
+7 * 221
+3 * 221 0 221
cfi=(2)
cfn=(2)
calls=221 0x402d74 645 
* * 2873 1326 442
+5 * 221 221 0 1 0 0 1
+6 * 221
+3 * 221
+3 * 221
+3 * 221 221
+7 * 221
+3 * 221
+3 * 221 0 221
cfi=(2)
cfn=(144)
calls=221 0x402d9a 770 
* * 2431 1105 663
+5 * 221 221
+4 * 221 221
+8 * 221
+4 * 221 221
+8 * 221
+3 * 221 0 221
+8 +2 221 0 221
+7 -12 221 221
+8 * 221 221
+7 * 221 0 0 0 0 0 0 0 0 221 1
jcnd=1/221 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 221
+7 * 221
+3 * 221 0 221
cfi=(2)
cfn=(2)
calls=221 0x402d74 645 
* * 2873 1326 442 2 0 1 2 0 1
+5 * 221
+3 * 221 221
+7 * 221
+3 * 221 0 221
cfi=(2)
cfn=(2)
calls=221 0x402d74 645 
* * 2873 1326 442 0 1 0 0 1
+5 * 221
+3 * 221 0 0 0 0 0 0 0 0 221
+2 * 221 0 0 1 0 0 1
+5 * 221
jump=221 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 221
+2 * 221 0 0 0 0 0 0 0 0 221
jcnd=221/221 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 221 0 221
+1 * 221
+3 * 221
+4 * 221 0 221
+4 * 221 0 221
+4 * 221 0 221
+5 +1 221 221
+4 * 221
+3 * 221 0 221
cfi=(2)
cfn=(2)
calls=221 0x402d74 645 
* * 2873 1326 442
+5 * 221
+3 * 221 0 221
+3 +1 221 221 0 1 0 0 1
+6 * 221 0 221
+3 * 221 221
+6 * 221 0 221
+3 +2 221 0 221
+7 * 221
jump=221 +86 * 
* * 
+2 +1 24752 24752
+3 * 24752
+3 * 24752 24752
+4 * 24752
+3 * 24752
+3 * 24752 0 24752
cfi=(2)
cfn=(144)
calls=24752 0x402d9a 770 
* * 272272 123760 74256
+5 * 24752 24752
+4 * 24752 24752
+5 * 24752
+4 * 24752 0 24752
+5 +1 24752 24752
+3 * 24752
+3 * 24752 24752
+4 * 24752
+3 * 24752
+3 * 24752 0 24752
cfi=(2)
cfn=(146)
calls=24752 0x402dba 770 
* * 272272 123760 74256
+5 * 24752 24752
+2 * 24752
+4 * 24752 24752
+5 * 24752
+4 * 24752 0 24752
+5 -2 24752 0 24752
+4 * 24752 24752
+3 * 24752
+3 * 24752 24752
+3 * 24752 0 0 0 0 0 0 0 0 24752 222
jcnd=24531/24752 -93 +1 
* * 
-9 * 221 221 0 1 0 0 1
+3 * 221
+3 * 221 221
+3 * 221 0 0 0 0 0 0 0 0 221
jcnd=221/221 -93 +1 
* * 
+2 +4 221 221
+3 * 221
+3 * 221 0 0 1 0 0 1
+4 * 221 221
+5 * 221
+4 * 221
+3 * 221 0 221
+5 +1 221 221
+3 * 221
+3 * 221
+4 * 221 221
+5 * 221
+4 * 221
+3 * 221 0 221
+5 +1 221 221
+5 * 221 221
+5 * 221 221
+5 * 221 0 0 1 0 0 1
+4 * 221
+3 * 221 0 221
+5 +2 221 221
+3 +1 221 0 221
+3 * 221 221
+5 * 221 221
+1 * 221 221

fl=(4)
fn=(16)
0x404804 115 442 0 442 1 0 0 1
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442
+4 +1 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfi=(5)
cfn=(18)
calls=442 0x404a28 -35 
* * 2652 884 1326 1 0 1 1 0 1
+5 * 442 442
+1 * 442 442

fn=(174)
0x403ccc 121 442 0 442
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 442
+4 * 442
+3 * 442 0 442
cfi=(5)
cfn=(176)
calls=442 0x4044cc -35 
* * 2210 884 884
+5 * 442 442
+1 * 442 442

fn=(90)
0x4047b2 115 442 0 442 1 0 0 1
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 0 442 1 0 0 1
+4 +1 442 442
+4 * 442 442
+4 * 442
+3 * 442
+3 * 442 0 442
cfi=(5)
cfn=(92)
calls=442 0x4049d4 -35 
* * 2652 884 1326 1 0 0 1
+5 * 442 442
+1 * 442 442

fn=(194)
0x403d7e 121 442 0 442 1 0 0 1
+1 * 442
+3 * 442
+4 * 442 0 442
+4 * 442 442
+4 * 442
+3 * 442 0 442
cfi=(5)
cfn=(196)
calls=442 0x404520 -35 
* * 2210 884 884
+5 * 442 442
+1 * 442 442

fl=(3)
fn=(8)
0x403afa 224 442 0 442 1 0 0 1
+1 * 442
+3 * 442 0 442
+4 * 442 442
+4 * 442 442
+1 * 442 442

fn=(264)
0x4036b1 215 221 0 221
+1 * 221
+3 * 221
+4 * 221 0 221
+4 * 221 0 221
+4 * 221 0 221
+4 +1 221 221
+4 * 221 221
+4 * 221 221
+4 * 221
+3 * 221
+3 * 221 0 221
cfi=(5)
cfn=(266)
calls=221 0x40406a -87 
* * 5304 1768 1989 0 14 7 0 14 7 221
+5 * 221 221
+1 * 221 221

fn=(212)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102)
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28)
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84)
0x4039ed 224 442 0 442
+1 * 442
+3 * 442 0 442
+4 * 442 442
+4 * 442 442
+1 * 442 442

fn=(222)
0x403373 215 221 0 221
+1 * 221
+3 * 221
+4 * 221 0 221
+4 * 221 0 221
+4 * 221 0 221
+4 +1 221 221
+4 * 221 221
+4 * 221 221
+4 * 221
+3 * 221
+3 * 221 0 221
cfi=(5)
cfn=(224)
calls=221 0x403df2 -87 
* * 5304 1768 1989 0 15 3 0 15 3 221
+5 * 221 221
+1 * 221 221

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 898 0 898 1 0 0 1
+2 0 898 0 898
+2 0 898 0 898
+2 0 898
+3 0 898 0 898
+2 0 898 0 898
+1 0 898 0 898
+1 0 898
+3 0 898
+4 0 898 898
+4 0 898 0 898
+4 0 898
+3 0 898
+4 0 898
+3 0 898
+3 0 898
+3 0 898 0 0 1 0 0 1 0 0 898
+6 0 898
+4 0 898 0 0 0 0 0 0 0 0 898
+6 0 898
+4 0 898 0 0 0 0 0 0 0 0 898
+6 0 898 898
+7 0 898 0 0 0 0 0 0 0 0 898 2
jcnd=774/898 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 774
+2 0 774 0 0 0 0 0 0 0 0 774
+6 0 774 774 0 1 0 0 1
+4 0 774
+3 0 774
+2 0 774 0 0 0 0 0 0 0 0 774
jcnd=774/774 0x3877c78a40 0 
* 0 
+6 0 774 774
+4 0 774
+3 0 774 0 0 0 0 0 0 0 0 774
+6 0 774 774
+5 0 774
+4 0 774 0 0 0 0 0 0 0 0 774
jcnd=774/774 0x3877c7907c 0 
* 0 
+6 0 774 774
+5 0 774
+4 0 774 0 0 0 0 0 0 0 0 774
+6 0 774
+4 0 774 0 0 1 0 0 1 0 0 774
+6 0 774
+4 0 774 774
+7 0 774 0 0 0 0 0 0 0 0 774
+6 0 774 774
+6 0 774
+2 0 774 0 0 0 0 0 0 0 0 774
+6 0 774 774
+4 0 774 0 0 0 0 0 0 0 0 774 5
jcnd=770/774 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 774 774 0 1 0 0 1
+4 0 774 0 0 0 0 0 0 0 0 774 304
jcnd=304/774 0x3877c78bf0 0 
* 0 
+6 0 470 470
+6 0 470 0 0 1 0 0 1 0 0 470 44
jcnd=29/470 0x3877c78a78 0 
* 0 
+6 0 441 441
+5 0 441 441
+5 0 441 441
+4 0 441 0 0 0 0 0 0 0 0 441
+6 0 441 441
+4 0 441 0 0 0 0 0 0 0 0 441
+6 0 441 441
+9 0 441 0 441
+4 0 441 0 441
+4 0 441 0 0 0 0 0 0 0 0 441 4
jcnd=433/441 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 441
+3 0 441
+4 0 441 441
+4 0 441 441
+4 0 441 0 0 0 0 0 0 0 0 441
-12 0 29
+4 0 29 29
+4 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 470
+7 0 470 0 470
+4 0 470 0 470
+4 0 470 0 0 0 0 0 0 0 0 470 63
jcnd=401/470 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 401 0 401
+4 0 401
+3 0 401 0 401
+4 0 401
+4 0 401 0 401
+4 0 401 0 401
+4 0 401
+7 0 401 0 0 0 0 0 0 0 0 401
jcnd=401/401 0x3877c78b20 0 
* 0 
-7 0 304
+7 0 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 0x3877c78b20 0 
* 0 
0x3877c78a40 0 774 0 0 1 0 0 1
+5 0 774 774
+4 0 774 774
+7 0 774 0 0 0 0 0 0 0 0 774
jcnd=774/774 +16 0 
* 0 
+16 0 774 0 774
+5 0 774 0 0 0 0 0 0 0 0 774
+6 0 774
+3 0 774
jump=774 0x3877c7878f 0 
* 0 
+10 0 29 0 29
+6 0 29 0 0 1 0 0 1
jump=29 0x3877c78885 0 
* 0 
0x3877c78b20 0 774 774 0 1 0 0 1
+4 0 774
+2 0 774 0 0 0 0 0 0 0 0 774
+6 0 774 774
+7 0 774 0 0 0 0 0 0 0 0 774
jcnd=774/774 +15 0 
* 0 
+15 0 774 0 774 1 0 0 1
+4 0 774 0 0 0 0 0 0 0 0 774 2
+6 0 774
+4 0 774 774
+1 0 774 774
+1 0 774 774
+2 0 774 774
+2 0 774 774
+2 0 774 774
+2 0 774 774
0x3877c78bf0 0 304 0 0 1 0 0 1
+3 0 304 0 304
+4 0 304
+3 0 304
+4 0 304 0 304 1 0 0 1
+4 0 304
jump=304 0x3877c788cf 0 
* 0 
0x3877c7907c 0 774 774 0 1 1 0 1 1
+4 0 774 0 0 1 0 0 1
+7 0 774
+4 0 774
+3 0 774
+3 0 774 0 0 0 0 0 0 0 0 774
jcnd=774/774 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 888 0 0 1 0 0 1
+7 0 888
+3 0 888
+3 0 888 888 0 0 1 0 0 1
+4 0 888
+4 0 888 0 0 0 0 0 0 0 0 0 0 888 110
jump=104 0x3877c89be8 0 
* 0 
jump=112 0x3877c89bd0 0 
* 0 
jump=108 0x3877c89bb8 0 
* 0 
jump=112 +11 0 
* 0 
jump=112 0x3877c89c48 0 
* 0 
jump=114 0x3877c89c30 0 
* 0 
jump=112 0x3877c89c18 0 
* 0 
jump=114 0x3877c89c00 0 
* 0 
+11 0 112 112
+3 0 112
+4 0 112
+4 0 112 112
+4 0 112
+4 0 112 0 112
+4 0 112
+9 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-40 0 6022 6022
+4 0 6022 0 6022 0 0 3 0 0 3
+4 0 6022 6022
+4 0 6022 0 6022
+4 0 6022 6022
+4 0 6022 0 6022 0 0 1 0 0 1
+4 0 6022 6022
+4 0 6022 0 6022
+4 0 6022
+4 0 6022
+4 0 6022 0 0 0 0 0 0 0 0 6022 414
jcnd=852/6022 0x3877c89c60 0 
* 0 
-32 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
jcnd=10/114 0x3877c89c60 0 
* 0 
-24 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-16 0 114 114 0 1 0 0 1
+4 0 114 0 114
+4 0 114 0 0 1 0 0 1
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114 4
jcnd=10/114 0x3877c89c60 0 
* 0 
+6 0 5586
+4 0 5586 5586
+3 0 5586 0 5586 0 0 1 0 0 1
+3 0 5586 5586
+4 0 5586 0 5586 0 0 3 0 0 3
+4 0 5586 5586
+4 0 5586 0 5586 0 0 4 0 0 4
+4 0 5586 5586
+4 0 5586 0 5586
+4 0 5586
jump=5586 -80 0 
* 0 
-30 0 104 104
+3 0 104 0 104
+3 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104
jump=104 -80 0 
* 0 
-24 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
-16 0 108 108
+4 0 108 0 108
+4 0 108 108
+4 0 108 0 108
+4 0 108
jump=108 -80 0 
* 0 
+8 0 108 108
+3 0 108
+4 0 108 0 0 1 0 0 1
+4 0 108
+4 0 108
jump=108 -39 0 
* 0 
+9 0 112
+3 0 112 0 0 0 0 0 0 0 0 112
+6 0 112 112
+3 0 112
+4 0 112
jump=112 -72 0 
* 0 
+8 0 104
+4 0 104 104
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104
+4 0 104
jump=104 -99 0 
* 0 
+11 0 114 114 0 1 0 0 1
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b78 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b70 0 
* 0 
+9 0 114 114
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b68 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b60 0 
* 0 
+9 0 888 0 888 1 0 0 1
+3 0 888 888

fn=(104) alloc_perturb
0x3877c77180 0 780 780 0 1 0 0 1
+6 0 780
+2 0 780 0 0 0 0 0 0 0 0 780 1
+2 0 780 780

fn=(38) _int_malloc
0x3877c79a00 0 898 0 898 1 0 0 1
+2 0 898
+3 0 898 0 898
+2 0 898 0 898
+2 0 898 0 898 0 0 1 0 0 1
+2 0 898
+3 0 898 0 898
+1 0 898 0 898
+1 0 898
+4 0 898
+4 0 898 0 0 0 0 0 0 0 0 898
+6 0 898
+4 0 898
+6 0 898
+3 0 898
+4 0 898
+4 0 898
+4 0 898
+3 0 898 0 0 0 0 0 0 0 0 898
+6 0 898 898 0 1 1 0 1 1
+7 0 898 0 0 0 0 0 0 0 0 898 5
jcnd=776/898 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 780
+4 0 780 780
+1 0 780 780
+1 0 780 780
+2 0 780 780
+2 0 780 780
+2 0 780 780
+2 0 780 780
+7 0 793
+7 0 793 0 0 1 0 0 1 0 0 793 5
jcnd=2/793 0x3877c79b70 0 
* 0 
+2 0 791
+3 0 791
+5 0 791
+3 0 791
+4 0 791 0 791
+4 0 791
+2 0 791
+5 0 791 791 0 0 11 0 0 11
+4 0 791
+3 0 791 0 0 0 0 0 0 0 0 791
jcnd=791/791 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 912 244 194 8 2 0 8 2 0 188 25
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 792 0 0 1 0 0 1
+3 0 792
+3 0 792
+3 0 792
+4 0 792
+3 0 792
+4 0 792 0 792
+5 0 792
+3 0 792 0 792
+4 0 792 0 792
+4 0 792 0 792
+5 0 792
+3 0 792
+3 0 792
+3 0 792
+3 0 792
+4 0 792
+4 0 792 0 0 1 0 0 1
+4 0 792 0 792
+4 0 792
+4 0 792 0 792
+5 0 792 0 792
+5 0 792
+3 0 792
+3 0 792 0 792
+5 0 792
+5 0 792
+3 0 792 0 792
+4 0 792 0 792
+4 0 792
+6 0 792 0 792
+4 0 792 0 792
+5 0 792 0 0 1 0 0 1
+3 0 792
+3 0 792
+3 0 792
jump=792 +87 0 
* 0 
+8 0 750
+3 0 750
+4 0 750
+2 0 750
+2 0 750
+3 0 750
+3 0 750
+3 0 750
+2 0 750
+2 0 750
+5 0 750
+2 0 750 750 0 0 2 0 0 2
+4 0 750
+3 0 750
+4 0 750 0 750
+4 0 750 0 750
+8 0 750
+7 0 750 0 750
+4 0 750 0 750 0 0 1 0 0 1
+4 0 750 0 750
+4 0 750 0 0 0 0 0 0 0 0 750
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1611 1611 0 1 0 0 1
+4 0 1611
+3 0 1611 0 0 0 0 0 0 0 0 1611 30
jcnd=760/1611 0x3877c79ef0 0 
* 0 
+6 0 851 851
+4 0 851 851
+4 0 851
+4 0 851 0 0 0 0 0 0 0 0 851
+6 0 851 851 0 1 1 0 1 1
+7 0 851 0 0 0 0 0 0 0 0 851
+6 0 851
+4 0 851
+7 0 851 0 0 0 0 0 0 0 0 851 5
jcnd=6/851 +11 0 
* 0 
+2 0 845
+3 0 845 0 0 0 0 0 0 0 0 845 62
jcnd=769/845 0x3877c79e28 0 
* 0 
+6 0 831
+3 0 831 0 831
+4 0 831 0 831
+5 0 831 0 0 0 0 0 0 0 0 831 11
jcnd=13/831 0x3877c7a090 0 
* 0 
+6 0 818
+7 0 818 0 0 0 0 0 0 0 0 818 11
jcnd=750/818 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 7
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 769 769 0 1 0 0 1
+4 0 769
+3 0 769 0 0 0 0 0 0 0 0 769 310
jcnd=387/769 0x3877c79ce1 0 
* 0 
+6 0 382 382
+5 0 382 0 0 0 0 0 0 0 0 382 5
jcnd=362/382 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 760 0 0 1 0 0 1
+7 0 760
+3 0 760 0 0 0 0 0 0 0 0 760 3
jcnd=2/760 0x3877c7a0b0 0 
* 0 
+6 0 760 760 0 1 0 0 1
+4 0 760
+3 0 760
+3 0 760
+2 0 760
+4 0 760
+3 0 760
+3 0 760
+2 0 760
+2 0 760
+2 0 760
+2 0 760 760 0 0 1 0 0 1
+8 0 760
+5 0 760
+5 0 760
+2 0 760 0 0 0 0 0 0 0 0 760
-2 0 383
+2 0 383 0 0 0 0 0 0 0 0 383
+2 0 1143
+2 0 1143 0 0 0 0 0 0 0 0 1143 23
jcnd=564/1143 +64 0 
* 0 
+2 0 579
+8 0 579
+3 0 579
+3 0 579 0 0 0 0 0 0 0 0 579 1
jcnd=1/579 0x3877c79fc0 0 
* 0 
-6 0 672
+3 0 672
+3 0 672 0 0 0 0 0 0 0 0 672 5
jcnd=303/672 0x3877c79fc0 0 
* 0 
+2 0 947
+2 0 947 947
+8 0 947
+2 0 947 0 0 0 0 0 0 0 0 947 19
jcnd=672/947 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 6555
+4 0 6555
+2 0 6555
+2 0 6555 0 0 0 0 0 0 0 0 6555 411
jcnd=5806/6555 -8 0 
* 0 
-2 0 564 0 0 1 0 0 1
+2 0 564 0 0 0 0 0 0 0 0 564 13
jcnd=536/564 -8 0 
* 0 
+2 0 839 839 0 0 5 0 0 5
+4 0 839 0 0 1 0 0 1
+3 0 839 0 0 0 0 0 0 0 0 839 363
jcnd=456/839 0x3877c7a1cf 0 
* 0 
+6 0 383
+2 0 383
+4 0 383
+2 0 383
+2 0 383
+2 0 383 0 383
+8 0 383
jump=383 0x3877c79f30 0 
* 0 
+37 0 304 304 0 1 0 0 1
+5 0 304 304
+4 0 304
+4 0 304 304
+5 0 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 456 456 0 1 1 0 1 1
+4 0 456 456 0 0 1 0 0 1
+4 0 456
+3 0 456 456
+4 0 456
+4 0 456
+3 0 456
+3 0 456 456
+4 0 456 0 0 0 0 0 0 0 0 456
+6 0 456 456
+4 0 456 0 0 0 0 0 0 0 0 456
+6 0 456 456 0 1 0 0 1
+8 0 456 0 456
+4 0 456 0 456
+4 0 456 0 0 0 0 0 0 0 0 456 8
jcnd=386/456 +38 0 
* 0 
+2 0 70 70 0 0 1 0 0 1
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 386
+4 0 386 0 0 0 0 0 0 0 0 386 7
jcnd=13/386 0x3877c7a2e3 0 
* 0 
+6 0 443 443
+4 0 443 443 0 1 0 0 1
+4 0 443 0 0 0 0 0 0 0 0 443
+6 0 443
+4 0 443
+7 0 443 0 443 0 0 7 0 0 7
+4 0 443 0 443
+4 0 443 0 443
+4 0 443 0 443
+4 0 443 0 0 0 0 0 0 0 0 443 4
jcnd=2/443 +7 0 
* 0 
+2 0 441 0 441
+5 0 441
+7 0 441 0 0 0 0 0 0 0 0 441 4
jcnd=434/441 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 2 0 0 2
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 436
+7 0 436 0 436
+4 0 436
+3 0 436
+3 0 436
+4 0 436
+3 0 436
+4 0 436
+3 0 436
+3 0 436
+4 0 436 0 436
+4 0 436 0 436 0 0 1 0 0 1
+4 0 436
jump=436 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 13
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +7 0 
* 0 
+7 0 456
+4 0 456 0 0 1 0 0 1
+3 0 456
+3 0 456 0 456
cfn=(104)
calls=456 0x3877c77180 0 
* 0 1824 912 0 1 0 0 1 0 0 456
+5 0 456
+3 0 456
jump=456 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 304 0 0 1 0 0 1
+7 0 304
+2 0 304
+4 0 304
+3 0 304
+3 0 304 0 304
+5 0 304
+3 0 304
+4 0 304
+3 0 304 0 0 1 0 0 1
+4 0 304
+4 0 304
+3 0 304
+4 0 304 0 304
+4 0 304 0 304 0 0 11 0 0 11
+4 0 304
+3 0 304
+3 0 304 0 304
cfn=(104)
calls=304 0x3877c77180 0 
* 0 1216 608 0 0 0 0 0 0 0 304 1
+5 0 304
+3 0 304
jump=304 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 898 0 898 1 0 0 1
+5 0 898 0 898
+5 0 898
+3 0 898 0 898
+5 0 898
+4 0 898 898 0 0 1 0 0 1
+7 0 898 898 0 0 1 0 0 1
+3 0 898
+3 0 898 0 0 0 0 0 0 0 0 898 1
+6 0 898 898 0 0 1 0 0 1
+7 0 898 898 0 1 1 0 1 1
+4 0 898
+3 0 898 0 0 0 0 0 0 0 0 898
+2 0 898 898 0 0 1 0 0 1
+3 0 898
+3 0 898 0 0 0 0 0 0 0 0 898
jcnd=898/898 +97 0 
* 0 
+18 0 898
+3 0 898
+3 0 898 0 898
cfn=(38)
calls=898 0x3877c79a00 0 
* 0 204248 24595 28776 42 33 44 42 33 44 31965 1374
+5 0 898
+3 0 898
+3 0 898 0 0 0 0 0 0 0 0 898
+2 0 898
+3 0 898 0 0 0 0 0 0 0 0 898
+2 0 898
+3 0 898 0 0 0 0 0 0 0 0 898 7
+2 0 898 898
+7 0 898 0 0 0 0 0 0 0 0 898
jcnd=898/898 +13 0 
* 0 
+13 0 898 0 898
+2 0 898 0 0 0 0 0 0 0 0 898 12
+6 0 898
+3 0 898 898
+4 0 898 898
+5 0 898 898
+5 0 898
+4 0 898 898
+1 0 898 0 0 1 0 0 1
+5 0 898 898 0 0 1 0 0 1
+7 0 898 0 0 0 0 0 0 0 0 898
jcnd=898/898 +14 0 
* 0 
+14 0 898 0 898 1 0 0 1
+3 0 898 0 0 0 0 0 0 0 0 898
+6 0 898
jump=898 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 898 0 898 1 0 0 1
+2 0 898
+3 0 898
+3 0 898 0 898
+2 0 898
+3 0 898 0 898
+1 0 898
+3 0 898 0 898
+1 0 898
+3 0 898
+4 0 898
+3 0 898 0 0 0 0 0 0 0 0 898
+6 0 898
+4 0 898
+3 0 898 0 0 0 0 0 0 0 0 898 4
jcnd=10/898 0x3877c838d1 0 
* 0 
+2 0 888
+3 0 888
+3 0 888
+3 0 888
+3 0 888
+3 0 888 0 0 0 0 0 0 0 0 888
jcnd=888/888 +41 0 
* 0 
+41 0 888 0 0 1 0 0 1
+3 0 888 0 0 0 0 0 0 0 0 888
jcnd=888/888 0x3877c839c0 0 
* 0 
+24 0 888
+3 0 888
+4 0 888
+3 0 888
+3 0 888
+3 0 888
+3 0 888
+3 0 888 0 0 0 0 0 0 0 0 888 442
jcnd=452/888 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 446
+10 0 446 446 0 0 2 0 0 2
+3 0 446
+4 0 446 0 446
+3 0 446
+4 0 446
+4 0 446 0 0 0 0 0 0 0 0 446
jcnd=446/446 -18 0 
* 0 
-18 0 1394 1394
+3 0 1394
+4 0 1394 0 1394
+3 0 1394
+4 0 1394
+4 0 1394 0 0 0 0 0 0 0 0 1394 8
jcnd=948/1394 -18 0 
* 0 
+2 0 898
+4 0 898
+3 0 898 898
+1 0 898 898
+1 0 898 898
+2 0 898 898 0 1 0 0 1
+2 0 898 898
0x3877c839c0 0 888 0 0 1 0 0 1
+3 0 888
+3 0 888
+3 0 888
+4 0 888 0 888 0 0 1 0 0 1
cfn=(284)
calls=888 0x3877c89b20 0 
* 0 139742 51304 49528 6 1 12 6 1 12 6690 418 888 110
+5 0 888
jump=888 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 898 898 0 1 1 0 1 1
+7 0 898 898 0 0 1 0 0 1
+3 0 898
+3 0 898 0 0 1 0 0 1 0 0 898
+6 0 898
+3 0 898 0 0 0 0 0 0 0 0 898
+6 0 898 898
+4 0 898
+4 0 898
+2 0 898 0 0 0 0 0 0 0 0 898
+2 0 898
+2 0 898
+7 0 898 0 0 0 0 0 0 0 0 898
jcnd=898/898 +14 0 
* 0 
+14 0 898
+2 0 898
cfn=(170)
calls=898 0x3877c78650 0 
* 0 85717 22659 12691 19 1 0 19 1 0 20619 426

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 8
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 2
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 4991650 1999081 1179238 238 84 79 238 84 79 160096 3375 5378 110
