version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 603


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 780236830 - 781030642
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1072 0 0 1 0 0 1
+3 0 1072 0 0 0 0 0 0 0 0 1072
+2 0 1072
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1072 0x3877c7b8b0 0 
* 0 120074 30866 15520 22 5 0 22 5 0 29457 577
* 0 1072 1072 0 1 1 0 1 1 0 0 0 1072

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1072 0 1072 1 0 0 1
+1 0 1072
+5 0 1072
+3 0 1072 0 1072
+1 0 1072
+4 0 1072 0 0 1 0 0 1
+3 0 1072
+4 0 1072
+3 0 1072 0 1072 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1072 0x3877c7aa50 0 
* 0 292903 40998 41282 46 38 42 46 38 42 49941 1948
* 0 1072 1072 0 1 1 0 1 1 0 0 0 1072
+5 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072
jcnd=1072/1072 +96 0 
* 0 
+96 0 1072 0 0 1 0 0 1
+4 0 1072 1072
+1 0 1072 1072
+1 0 1072 1072

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(12) /usr/include/c++/4.8/bits/stl_algobase.h
fn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404a36 450 528 0 528
+1 * 528
+3 * 528 0 528
+1 * 528
+4 * 528 0 528 1 0 0 1
+4 * 528 0 528
+4 * 528 0 528
+4 +10 528 528
+4 * 528
+3 * 528 0 528
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=528 0x404c38 288 
* * 7920 3168 2640 3 0 0 3
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(56)
calls=528 0x404c38 288 
* * 7920 3168 2640
+5 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=528 0x404c52 -36 
* * 199658 64700 61536 20 3 4 20 3 4 8932 568 1052 131
+5 +1 528
+4 * 528 528
+1 * 528 528
+1 * 528 528

fn=(60)
0x404c52 424 528 0 528
+1 * 528
+3 * 528 0 528
+2 * 528 0 528
+1 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +4 528 528
+4 * 528
+3 * 528 0 528
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=528 0x40492d 277 
* * 7920 3168 2640 2 0 0 2
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=528 0x404d9d 277 
* * 13200 4752 4224 2 0 1 2 0 1
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(66)
calls=528 0x404d9d 277 
* * 13200 4752 4224
+5 * 528
+3 * 528
+3 * 528
+3 * 528 0 528
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=528 0x404db7 -49 
* * 150554 48332 45168 15 3 3 15 3 3 8932 568 1052 131
+5 +1 528
+4 * 528 528
+1 * 528 528
+2 * 528 528
+1 * 528 528

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 576 0 576 1 0 0 1
+1 * 576
+3 * 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576
+3 * 576 0 576 1 0 0 1
cfi=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
cfn=(64) std::_Iter_base<int*, false>::_S_base(int*)
calls=576 -33 -66 
* * 3456 1728 1152
+5 * 576 576
+1 * 576 576

fn=(66)
0x404d9d 277 1056 0 1056
+1 * 1056
+3 * 1056
+4 * 1056 0 1056
+4 +1 1056 1056
+4 * 1056
+3 * 1056 0 1056
cfi=(13)
cfn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1056 0x404f1a -58 
* * 16896 6336 5280 2 0 1 2 0 1
+5 * 1056 1056
+1 * 1056 1056

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130) std::_Iter_base<float*, false>::_S_base(float*)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x4049e2 450 528 0 528
+1 * 528
+3 * 528 0 528
+1 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +10 528 528
+4 * 528
+3 * 528 0 528
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=528 0x404bc6 288 
* * 7920 3168 2640 3 0 0 3
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(122)
calls=528 0x404bc6 288 
* * 7920 3168 2640
+5 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=528 0x404be0 -36 
* * 199658 64700 61536 4 1 28 4 1 28 8932 557 1052
+5 +1 528
+4 * 528 528
+1 * 528 528
+1 * 528 528

fn=(128)
0x404878 277 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576 1 0 0 1
+4 +1 576 576
+4 * 576
+3 * 576 0 576
cfi=(13)
cfn=(130)
calls=576 -33 -66 
* * 3456 1728 1152 0 0 1 0 0 1
+5 * 576 576
+1 * 576 576

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1056 0 1056
+1 * 1056
+3 * 1056
+4 * 1056 0 1056
+4 +1 1056 1056
+4 * 1056
+3 * 1056 0 1056
cfi=(13)
cfn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1056 0x404e98 -58 
* * 16896 6336 5280 2 0 0 2
+5 * 1056 1056
+1 * 1056 1056

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +8 528 0 528
+4 +3 528 528
+4 * 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=528 0x404eb5 -22 
* * 142634 45692 42000 1 1 28 1 1 28 8932 557 1052
+5 +1 528 528
+1 * 528 528

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276) int* std::copy<int*, int*>(int*, int*, int*)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1056 0 1056 1 0 0 1
+1 * 1056
+3 * 1056
+4 * 1056 0 1056
+4 +1 1056 1056
+4 * 1056
+3 * 1056 0 1056
cfi=(13)
cfn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1056 0x404d36 -77 
* * 6336 3168 2112 2 0 0 2
+5 * 1056 1056
+1 * 1056 1056

fn=(56)
0x404c38 288 1056 0 1056 1 0 0 1
+1 * 1056
+3 * 1056
+4 * 1056 0 1056 1 0 0 1
+4 +1 1056 1056
+4 * 1056
+3 * 1056 0 1056
cfi=(13)
cfn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1056 0x404d8f -77 
* * 6336 3168 2112 1 0 0 1
+5 * 1056 1056
+1 * 1056 1056

fn=(74)
0x404f37 368 544 0 544
+1 * 544
+3 * 544
+4 * 544 0 544 1 0 0 1
+4 * 544 0 544
+4 * 544 0 544
+4 +2 544 544
+4 * 544 544
+4 * 544
+3 * 544
+3 * 544
+4 * 544 0 544
+4 +1 544 544
+5 * 544 0 0 0 0 0 0 0 0 544
jcnd=8/544 +33 +2 
* * 
+2 +1 536 536
+4 * 536
+8 * 536 536
+4 * 536 536
+4 * 536
+3 * 536 0 0 1 0 0 1
+3 * 536 0 536 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=536 0x3877c83840 0 
* * 128972 40200 39133 11 2 20 11 2 20 8488 572 531 131
* * 536 536 0 1 1 0 1 1 0 0 0 536
+5 +1 544 544
+4 * 544
+8 * 544 544
+4 * 544
+3 +1 544 544
+1 * 544 544

fn=(140)
0x404eb5 368 544 0 544
+1 * 544
+3 * 544
+4 * 544 0 544 1 0 0 1
+4 * 544 0 544
+4 * 544 0 544 0 0 1 0 0 1
+4 +2 544 544
+4 * 544 544
+4 * 544
+3 * 544
+3 * 544
+4 * 544 0 544
+4 +1 544 544
+5 * 544 0 0 0 0 0 0 0 0 544
jcnd=8/544 +33 +2 
* * 
+2 +1 536 536
+4 * 536
+8 * 536 536
+4 * 536 536
+4 * 536
+3 * 536
+3 * 536 0 536
cob=(2)
cfi=(9)
cfn=(78)
calls=536 0x3877c83840 0 
* * 128972 40200 39133 0 1 29 0 1 29 8488 563 531
* * 536 536 0 0 0 0 0 0 0 0 0 536
+5 +1 544 544
+4 * 544
+8 * 544 544
+4 * 544
+3 +1 544 544
+1 * 544 544

fn=(72)
0x404db7 379 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528 1 0 0 1
+4 * 528 0 528
+4 * 528 0 528
+4 +8 528 0 528
+4 +3 528 528
+4 * 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(74)
calls=528 0x404f37 -22 
* * 142634 45692 42000 14 3 3 14 3 3 8932 568 1052 131
+5 +1 528 528
+1 * 528 528

fn=(126)
0x404be0 424 528 0 528
+1 * 528
+3 * 528 0 528
+2 * 528 0 528
+1 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +4 528 528
+4 * 528
+3 * 528 0 528
cfn=(128)
calls=528 0x404878 277 
* * 7920 3168 2640 1 0 0 1
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(132)
calls=528 0x404d44 277 
* * 13200 4752 4224 2 0 0 2
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(132)
calls=528 0x404d44 277 
* * 13200 4752 4224
+5 * 528
+3 * 528
+3 * 528
+3 * 528 0 528
cfn=(138)
calls=528 0x404d5e -49 
* * 150554 48332 45168 1 1 28 1 1 28 8932 557 1052
+5 +1 528
+4 * 528 528
+1 * 528 528
+2 * 528 528
+1 * 528 528

fn=(236) float* std::copy<float*, float*>(float*, float*, float*)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10) /usr/include/c++/4.8/bits/stl_iterator.h
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
0x40500c 790 1056 0 1056 1 0 0 1
+1 * 1056
+3 * 1056 0 1056
+4 +1 1056 1056
+4 * 1056 1056
+1 * 1056 1056

fn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
0x404380 726 1056 0 1056 1 0 0 1
+1 * 1056
+3 * 1056 0 1056
+4 * 1056 0 1056
+4 * 1056 1056
+4 * 1056 1056
+3 * 1056 1056
+4 * 1056 0 1056
+3 * 1056 1056
+1 * 1056 1056

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
0x404ffe 790 1056 0 1056 1 0 0 1
+1 * 1056
+3 * 1056 0 1056
+4 +1 1056 1056
+4 * 1056 1056
+1 * 1056 1056

fn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
0x404468 726 1056 0 1056
+1 * 1056
+3 * 1056 0 1056
+4 * 1056 0 1056
+4 * 1056 1056
+4 * 1056 1056
+3 * 1056 1056
+4 * 1056 0 1056 1 0 0 1
+3 * 1056 1056
+1 * 1056 1056

fn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14) /usr/include/c++/4.8/bits/stl_construct.h
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 536 0 536 1 0 0 1
+1 * 536
+3 * 536 0 536
+4 * 536 0 536
+4 * 536 536
+1 * 536 536

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 536 0 536 1 0 0 1
+1 * 536
+3 * 536 0 536
+4 * 536 0 536 1 0 0 1
+4 * 536 536
+1 * 536 536

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 536 0 536 1 0 0 1
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 +4 536 536
+4 * 536 536
+4 * 536
+3 * 536
+3 * 536 0 536
cfn=(184)
calls=536 0x40454c -14 
* * 3216 1072 1608 1 0 0 1
+5 +2 536 536
+1 * 536 536

fn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
0x40326c 148 536 0 536
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 * 536 0 536
+4 +3 536 536 0 1 0 0 1
+4 * 536 536
+4 * 536
+3 * 536
+3 * 536 0 536
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=536 0x403d1a -29 
* * 9648 3216 3752 3 0 0 3
+5 +1 536 536
+1 * 536 536

fn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
0x40334a 148 536 0 536
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 * 536 0 536
+4 +3 536 536
+4 * 536 536
+4 * 536
+3 * 536
+3 * 536 0 536
cfn=(182)
calls=536 0x403dcc -29 
* * 9648 3216 3752 2 0 0 2
+5 +1 536 536
+1 * 536 536

fn=(152)
0x403d1a 122 536 0 536 1 0 0 1
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 +4 536 536
+4 * 536 536
+4 * 536
+3 * 536
+3 * 536 0 536
cfn=(154)
calls=536 0x4044f8 -14 
* * 3216 1072 1608 2 0 0 2
+5 +2 536 536
+1 * 536 536

fl=(15) /usr/include/c++/4.8/bits/vector.tcc
fn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258) std::vector<int, std::allocator<int> >::begin()
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=8 0x404236 167 
* * 3282 476 469 3 11 9 3 11 9 546 66 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
cfn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=8 0x403d98 171 
* * 1073 290 186 0 0 0 0 0 0 202 16 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216) std::vector<float, std::allocator<float> >::begin()
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=8 0x403fbe 167 
* * 3428 689 643 22 6 5 22 6 5 546 70 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=8 0x403ce6 171 
* * 1093 296 194 2 1 0 2 1 0 207 9 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 264 0 264 1 0 0 1
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264
+3 * 264 0 264
cfi=(2)
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=264 0x402d74 645 
* * 3432 1584 528
+5 * 264
+3 * 264 0 264
+3 +1 264 264
+6 * 264 0 264
+3 * 264 264
+6 * 264 0 264
+3 +1 264 264
+6 * 264 0 264 1 0 0 1
+3 * 264 264
+6 * 264 0 264
+3 +2 264 0 264
+7 * 264
jump=264 +86 * 
* * 
+2 +1 35244 35244
+3 * 35244
+3 * 35244 35244
+4 * 35244
+3 * 35244
+3 * 35244 0 35244
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=35244 0x402d9a 770 
* * 387684 176220 105732
+5 * 35244 35244
+4 * 35244 35244
+5 * 35244
+4 * 35244 0 35244
+5 +1 35244 35244
+3 * 35244
+3 * 35244 35244
+4 * 35244
+3 * 35244
+3 * 35244 0 35244
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=35244 0x402dba 770 
* * 387684 176220 105732 1 0 0 1
+5 * 35244 35244
+2 * 35244
+4 * 35244 35244
+5 * 35244
+4 * 35244 0 35244
+5 -2 35244 0 35244
+4 * 35244 35244
+3 * 35244
+3 * 35244 35244
+3 * 35244 0 0 0 0 0 0 0 0 35244 265
jcnd=34980/35244 -93 +1 
* * 
-9 * 264 264 0 1 0 0 1
+3 * 264
+3 * 264 264
+3 * 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 -93 +1 
* * 
+2 +4 264 264
+3 * 264
+3 * 264
+4 * 264 264 0 1 0 0 1
+5 * 264
+4 * 264
+3 * 264 0 264
+5 +1 264 264
+3 * 264
+3 * 264
+4 * 264 264
+5 * 264
+4 * 264
+3 * 264 0 264
+5 +1 264 0 264
+7 * 264
jump=264 0x4016ee * 
* * 
+2 +1 35244 35244
+3 * 35244
+3 * 35244 35244
+4 * 35244
+3 * 35244 0 0 1 0 0 1
+3 * 35244 0 35244
cfi=(2)
cfn=(146)
calls=35244 0x402dba 770 
* * 387684 176220 105732
+5 * 35244 35244
+2 * 35244
+4 * 35244 35244
+5 * 35244 0 35244
+5 +1 35244 35244
+3 * 35244
+3 * 35244 35244
+4 * 35244
+3 * 35244
+3 * 35244 0 35244
cfi=(2)
cfn=(144)
calls=35244 0x402d9a 770 
* * 387684 176220 105732
+5 * 35244 35244
+4 * 35244 35244
+5 * 35244 0 35244
+5 +1 35244 35244
+5 * 35244 35244
+5 * 35244 35244
+5 * 35244
+4 * 35244 0 35244
+5 +1 35244 35244
+5 * 35244 35244
+5 * 35244 35244
+5 * 35244
+4 * 35244 0 35244
+5 -4 35244 0 35244
+4 * 35244 35244
+3 * 35244
+3 * 35244 35244
+3 * 35244 0 0 0 0 0 0 0 0 35244 265
jcnd=34980/35244 0x401672 +1 
* * 
-9 * 264 264 0 1 0 0 1
+3 * 264
+3 * 264 264
+3 * 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 0x401672 +1 
* * 
+6 +6 264 264 0 1 0 0 1
+5 * 264 264
+5 * 264 0 264
+5 +2 264 264
+3 +1 264 0 264
+3 * 264 264
+5 * 264 264
+1 * 264 264

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 264
+7 * 264
+7 * 264
+3 * 264
+3 * 264 0 264
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=264 0x4030b2 310 
* * 266749 77235 72209 65 23 20 65 23 20 16981 831 1054 131
+5 * 264
+7 * 264
+7 * 264
+3 * 264
+3 * 264 0 264
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=264 0x402ff4 310 
* * 270803 76720 70919 35 4 44 35 4 44 18045 972 1054
+5 * 264 0 0 1 0 0 1
+7 * 264
+7 * 264
+3 * 264
+3 * 264 0 264
cfn=(142)
calls=264 0x401585 -52 
* * 3682536 1627824 850344 8 0 0 8 0 0 71016 530
+5 * 264 0 264
+8 * 264 264
+6 * 264 0 264
+6 * 264
+7 * 264
+3 * 264 0 264
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=264 0x402df4 414 
* * 66385 20890 14805 33 5 0 33 5 0 7450 142 528
+5 * 264
+7 * 264
+3 * 264 0 264 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=264 0x402e74 414 
* * 68857 21794 15549 7 1 0 7 1 0 8146 143 528
+5 +2 264
+7 * 264
+7 * 264
+3 * 264
+3 * 264 0 264
cfi=(2)
cfn=(4)
calls=264 0x4030b2 310 
* * 266254 77202 72080 2 1 2 2 1 2 16930 501 1054
+5 * 264
+7 * 264
+7 * 264
+3 * 264
+3 * 264 0 264
cfi=(2)
cfn=(80)
calls=264 0x402ff4 310 
* * 270183 76684 70770 0 0 0 0 0 0 17973 633 1054
+5 * 264 264
+6 * 264 0 0 1 0 0 1
+7 * 264
+7 * 264 0 264
+6 * 264 264
+8 * 264
+3 * 264
+3 * 264 0 264
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=264 0x401719 -33 
* * 1707288 710688 391644 4 0 0 4 0 0 35508 265
+5 * 264 0 264
+8 * 264 264
+6 * 264 0 264
+6 * 264
+7 * 264 0 0 1 0 0 1
+3 * 264 0 264
cfi=(2)
cfn=(148)
calls=264 0x402df4 414 
* * 66385 20890 14805 0 0 0 0 0 0 7450 136 528
+5 * 264
+7 * 264
+3 * 264 0 264
cfi=(2)
cfn=(178)
calls=264 0x402e74 414 
* * 68857 21794 15549 0 0 0 0 0 0 8146 139 528
+5 +2 264 264
+7 * 264
+3 * 264 0 264
cfi=(2)
cfn=(2)
calls=264 0x402d74 645 
* * 3432 1584 528
+5 * 264 264
+6 * 264
+3 * 264
+3 * 264
+3 * 264 264
+7 * 264
+3 * 264 0 0 1 0 0 1
+3 * 264 0 264
cfi=(2)
cfn=(144)
calls=264 0x402d9a 770 
* * 2904 1320 792
+5 * 264
+3 * 264
+7 * 264
+3 * 264
+3 * 264 0 264
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=264 0x402eda 901 
* * 29619 10733 8378 49 25 11 49 25 11 1421 95 47
+5 +1 264 264
+7 * 264
+3 * 264 0 264
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=264 0x402f54 645 
* * 3432 1584 528 0 1 0 0 1
+5 * 264 264
+6 * 264
+3 * 264
+3 * 264
+3 * 264 264
+7 * 264 0 0 1 0 0 1
+3 * 264
+3 * 264 0 264
cfi=(2)
cfn=(146)
calls=264 0x402dba 770 
* * 2904 1320 792
+5 * 264
+3 * 264
+7 * 264
+3 * 264
+3 * 264 0 264
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=264 0x402f7a 901 
* * 29453 10514 8196 22 27 36 22 27 36 1416 86 47
+5 +1 264 264
+7 * 264
+3 * 264 0 264
cfi=(2)
cfn=(10)
calls=264 0x402f54 645 
* * 3432 1584 528
+5 * 264 264
+6 * 264
+3 * 264
+3 * 264
+3 * 264 264 0 1 0 0 1
+7 * 264
+3 * 264
+3 * 264 0 264
cfi=(2)
cfn=(146)
calls=264 0x402dba 770 
* * 2904 1320 792
+5 * 264 264
+2 * 264
+4 * 264 264
+8 * 264 264
+8 * 264 0 264
+8 +1 264 264
+7 * 264
+3 * 264 0 264
cfi=(2)
cfn=(2)
calls=264 0x402d74 645 
* * 3432 1584 528
+5 * 264 264 0 1 0 0 1
+6 * 264
+3 * 264
+3 * 264
+3 * 264 264
+7 * 264
+3 * 264
+3 * 264 0 264
cfi=(2)
cfn=(144)
calls=264 0x402d9a 770 
* * 2904 1320 792
+5 * 264 264
+4 * 264 264
+8 * 264
+4 * 264 264
+8 * 264
+3 * 264 0 264
+8 +2 264 0 264
+7 -12 264 264
+8 * 264 264
+7 * 264 0 0 0 0 0 0 0 0 264 1
jcnd=1/264 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 264
+7 * 264
+3 * 264 0 264
cfi=(2)
cfn=(2)
calls=264 0x402d74 645 
* * 3432 1584 528 2 0 1 2 0 1
+5 * 264
+3 * 264 264
+7 * 264
+3 * 264 0 264
cfi=(2)
cfn=(2)
calls=264 0x402d74 645 
* * 3432 1584 528 0 1 0 0 1
+5 * 264
+3 * 264 0 0 0 0 0 0 0 0 264 2
+2 * 264 0 0 1 0 0 1
+5 * 264
jump=264 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 264
+2 * 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+5 +1 264 264
+4 * 264
+3 * 264 0 264
cfi=(2)
cfn=(2)
calls=264 0x402d74 645 
* * 3432 1584 528
+5 * 264
+3 * 264 0 264
+3 +1 264 264 0 1 0 0 1
+6 * 264 0 264
+3 * 264 264
+6 * 264 0 264
+3 +2 264 0 264
+7 * 264
jump=264 +86 * 
* * 
+2 +1 35244 35244
+3 * 35244
+3 * 35244 35244
+4 * 35244
+3 * 35244
+3 * 35244 0 35244
cfi=(2)
cfn=(144)
calls=35244 0x402d9a 770 
* * 387684 176220 105732
+5 * 35244 35244
+4 * 35244 35244
+5 * 35244
+4 * 35244 0 35244
+5 +1 35244 35244
+3 * 35244
+3 * 35244 35244
+4 * 35244
+3 * 35244
+3 * 35244 0 35244
cfi=(2)
cfn=(146)
calls=35244 0x402dba 770 
* * 387684 176220 105732
+5 * 35244 35244
+2 * 35244
+4 * 35244 35244
+5 * 35244
+4 * 35244 0 35244
+5 -2 35244 0 35244
+4 * 35244 35244
+3 * 35244
+3 * 35244 35244
+3 * 35244 0 0 0 0 0 0 0 0 35244 265
jcnd=34980/35244 -93 +1 
* * 
-9 * 264 264 0 1 0 0 1
+3 * 264
+3 * 264 264
+3 * 264 0 0 0 0 0 0 0 0 264
jcnd=264/264 -93 +1 
* * 
+2 +4 264 264
+3 * 264
+3 * 264 0 0 1 0 0 1
+4 * 264 264
+5 * 264
+4 * 264
+3 * 264 0 264
+5 +1 264 264
+3 * 264
+3 * 264
+4 * 264 264
+5 * 264
+4 * 264
+3 * 264 0 264
+5 +1 264 264
+5 * 264 264
+5 * 264 264
+5 * 264 0 0 1 0 0 1
+4 * 264
+3 * 264 0 264
+5 +2 264 264
+3 +1 264 0 264
+3 * 264 264
+5 * 264 264
+1 * 264 264

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 528
+4 * 528
+3 * 528 0 528
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=528 0x4044cc -35 
* * 2640 1056 1056
+5 * 528 528
+1 * 528 528

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528 1 0 0 1
+4 +1 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=528 0x4049d4 -35 
* * 3168 1056 1584 1 0 0 1
+5 * 528 528
+1 * 528 528

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 528
+4 * 528
+3 * 528 0 528
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=528 0x404520 -35 
* * 2640 1056 1056
+5 * 528 528
+1 * 528 528

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=528 0x404a28 -35 
* * 3168 1056 1584 1 0 1 1 0 1
+5 * 528 528
+1 * 528 528

fl=(3)
fn=(222)
0x403373 215 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=264 0x403df2 -87 
* * 6336 2112 2376 0 18 3 0 18 3 264 2
+5 * 264 264
+1 * 264 264

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+4 * 528 528
+4 * 528 528
+1 * 528 528

fn=(264)
0x4036b1 215 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=264 0x40406a -87 
* * 6336 2112 2376 0 16 9 0 16 9 264
+5 * 264 264
+1 * 264 264

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 528 0 528
+1 * 528
+3 * 528 0 528
+4 * 528 528
+4 * 528 528
+1 * 528 528

fl=(13)
fn=(64)
0x40491f 212 608 0 608
+1 * 608
+3 * 608 0 608
+4 +1 608 608
+4 * 608 608
+1 * 608 608

fn=(124)
0x404d36 212 1056 0 1056 1 0 0 1
+1 * 1056
+3 * 1056 0 1056
+4 +1 1056 1056 0 1 0 0 1
+4 * 1056 1056
+1 * 1056 1056

fn=(130)
0x40486a 212 608 0 608
+1 * 608
+3 * 608 0 608 0 0 1 0 0 1
+4 +1 608 608
+4 * 608 608
+1 * 608 608

fn=(134)
0x404e98 220 1056 0 1056 1 0 0 1
+1 * 1056
+3 * 1056
+4 * 1056 0 1056
+4 +1 1056
+4 * 1056
+3 * 1056 0 1056
cfi=(10)
cfn=(136)
calls=1056 0x404ffe 790 
* * 6336 3168 2112 1 0 0 1
+5 * 1056 1056
+3 * 1056 1056
+1 * 1056 1056

fn=(58)
0x404d8f 212 1056 0 1056 1 0 0 1
+1 * 1056
+3 * 1056 0 1056
+4 +1 1056 1056
+4 * 1056 1056
+1 * 1056 1056

fn=(68)
0x404f1a 220 1056 0 1056 1 0 0 1
+1 * 1056
+3 * 1056
+4 * 1056 0 1056
+4 +1 1056
+4 * 1056
+3 * 1056 0 1056 0 0 1 0 0 1
cfi=(10)
cfn=(70)
calls=1056 0x40500c 790 
* * 6336 3168 2112 1 0 0 1
+5 * 1056 1056
+3 * 1056 1056
+1 * 1056 1056

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 528 0 528
+1 * 528
+3 * 528 0 528
+4 * 528 0 528
+4 * 528 528
+4 * 528 528
+1 * 528 528

fl=(5)
fn=(28)
0x404992 113 552 0 552 1 0 0 1
+1 * 552
+3 * 552 0 552
+4 +1 552
+10 * 552 552
+1 * 552 552

fn=(176)
0x4044cc 86 528 0 528
+1 * 528
+3 * 528 0 528
+4 * 528 528
+1 * 528 528

fn=(224)
0x403df2 129 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264
+3 * 264
+5 * 264 0 264
cfi=(16)
cfn=(226)
calls=264 0x402d61 -20 
* * 1848 792 792
+5 * 264
+3 * 264 0 0 0 0 0 0 0 0 264 2
+2 * 264 264
+4 * 264 264 0 0 18 0 0 18
+2 * 264 0 264 0 0 3 0 0 3
+2 * 264 264
+1 * 264 264

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 536 0 536
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 * 536 0 536
+4 +1 536 536
+4 * 536
+3 * 536 0 536
cob=(5)
cfi=(8)
cfn=(164)
calls=536 0x387e4bb2f0 0 
* * 59719 15068 7020 24 5 0 24 5 0 14571 287 536
* * 536 536 0 1 1 0 1 1 0 0 0 536
+5 * 536 536
+1 * 536 536

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 536 0 536
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 * 536 0 536
+4 +1 536 536
+4 * 536
+3 * 536 0 536
cob=(5)
cfi=(8)
cfn=(164)
calls=536 0x387e4bb2f0 0 
* * 64643 16870 8500 0 1 0 0 1 0 15958 290 536
* * 536 536 0 0 0 0 0 0 0 0 0 536
+5 * 536 536
+1 * 536 536

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 536 0 536 1 0 0 1
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 * 536 0 536
+4 +2 536 536
+4 * 536
+3 * 536 0 536
cfn=(102)
calls=536 0x4048de +12 
* * 3216 1072 1072 1 0 0 1
+5 * 536 536
+4 * 536 0 0 1 0 0 1
+3 * 536
+2 * 536 0 0 0 0 0 0 0 0 536
jcnd=536/536 +7 +3 
* * 
+7 +3 536 536
+4 * 536
+4 * 536
+3 * 536 0 536
cob=(5)
cfi=(8)
cfn=(32)
calls=536 0x387e4bd0b0 0 
* * 159092 22233 21036 30 9 21 30 9 21 26560 1118 536
* * 536 536 0 0 0 0 0 0 0 0 0 536
+5 +1 536 536
+1 * 536 536

fn=(18)
0x404a28 81 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528 0 0 1 0 0 1
+4 * 528 0 528
+4 * 528 528
+1 * 528 528

fn=(92)
0x4049d4 81 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+4 * 528 0 528
+4 * 528 528
+1 * 528 528

fn=(196)
0x404520 86 528 0 528
+1 * 528
+3 * 528 0 528
+4 * 528 528
+1 * 528 528

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 536 0 536 1 0 0 1
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 * 536 0 536 1 0 0 1
+4 +2 536 536
+4 * 536
+3 * 536 0 536
cfn=(28)
calls=536 0x404992 +12 
* * 3216 1072 1072 1 0 0 1
+5 * 536 536
+4 * 536
+3 * 536
+2 * 536 0 0 0 0 0 0 0 0 536
jcnd=536/536 +7 +3 
* * 
+7 +3 536 536
+4 * 536
+4 * 536
+3 * 536 0 536
cob=(5)
cfi=(8)
cfn=(32)
calls=536 0x387e4bd0b0 0 
* * 150963 23053 23462 20 30 22 20 30 22 24453 830 536
* * 536 536 0 1 1 0 1 1 0 0 0 536
+5 +1 536 536
+1 * 536 536

fn=(102)
0x4048de 113 552 0 552 1 0 0 1
+1 * 552
+3 * 552 0 552
+4 +1 552
+10 * 552 552
+1 * 552 552

fn=(266)
0x40406a 129 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264
+3 * 264
+5 * 264 0 264
cfi=(16)
cfn=(226)
calls=264 0x402d61 -20 
* * 1848 792 792
+5 * 264
+3 * 264 0 0 0 0 0 0 0 0 264
+2 * 264 264
+4 * 264 264 0 0 16 0 0 16
+2 * 264 0 264 0 0 9 0 0 9
+2 * 264 264
+1 * 264 264

fl=(11)
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +2 528 528
+4 * 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=528 0x404484 107 
* * 241898 79484 76320 25 3 4 25 3 4 8932 568 1052 131
+5 * 528 528
+1 * 528 528

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +2 528 528 0 1 0 0 1
+4 * 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfi=(12)
cfn=(54)
calls=528 0x404a36 450 
* * 227114 74204 71040 24 3 4 24 3 4 8932 568 1052 131
+5 * 528 528
+1 * 528 528

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +2 528 528
+4 * 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=528 0x40439c 107 
* * 241898 79484 76320 7 1 28 7 1 28 8932 557 1052
+5 * 528 528
+1 * 528 528

fn=(116)
0x40439c 107 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +10 528 528
+4 * 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=528 0x4047d7 -26 
* * 234506 76844 73680 7 1 28 7 1 28 8932 557 1052
+5 +1 528 528
+1 * 528 528

fn=(118)
0x4047d7 91 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +2 528 528
+4 * 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfi=(12)
cfn=(120)
calls=528 0x4049e2 450 
* * 227114 74204 71040 7 1 28 7 1 28 8932 557 1052
+5 * 528 528
+1 * 528 528

fn=(268)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +10 528 528
+4 * 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(52)
calls=528 0x404829 -26 
* * 234506 76844 73680 25 3 4 25 3 4 8932 568 1052 131
+5 +1 528 528
+1 * 528 528

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 528 0 528
+1 * 528
+3 * 528 0 528
+1 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=528 0x4043ca -45 
* * 19008 6864 7392 4 0 4 4 0 4
+5 +1 528 528 0 1 0 0 1
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=528 0x404412 +43 
* * 183393 35881 33121 24 20 13 24 20 13 24979 764 1056
+5 * 528
jump=528 +28 * 
* * 
+28 * 528
+4 * 528 528
+1 * 528 528
+1 * 528 528

fn=(14)
0x4043ca 90 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528 0 0 1 0 0 1
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfi=(4)
cfn=(16)
calls=528 0x404804 +24 
* * 9504 3168 3696 2 0 1 2 0 1
+5 * 528 528
+4 * 528 0 528 0 0 2 0 0 2
+7 * 528 528
+4 * 528 0 528 1 0 0 1
+8 * 528 528
+4 * 528 0 528
+8 +1 528 528
+1 * 528 528

fn=(80)
0x402ff4 310 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+2 * 528 0 528
+2 * 528 0 528
+1 * 528 0 0 1 0 0 1
+4 * 528 0 528
+4 * 528 0 528
+4 +2 528 528
+4 * 528
+3 * 528 0 528
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=528 0x4039fc 117 
* * 3168 1584 1056 2 0 0 2
+5 * 528
+3 * 528 0 528
cfi=(3)
cfn=(84)
calls=528 0x4039ed -88 
* * 3168 1584 1056
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(2)
calls=528 0x402d74 645 
* * 6864 3168 1056
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528
+3 * 528
+3 * 528 0 528 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=528 0x403a0a 134 
* * 222000 45408 41609 20 3 16 20 3 16 27086 1048 1056
+5 +4 528 528
+4 * 528
+3 * 528 0 528
cfn=(106)
calls=528 0x40325e 113 
* * 3168 1584 1056 1 0 0 1
+5 * 528
+3 * 528 528
+4 * 528 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=528 0x403a98 565 
* * 13200 5280 4224 2 0 0 2
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=528 0x403a68 547 
* * 13200 5280 4224
+5 * 528
+3 * 528
+3 * 528
+3 * 528
+3 * 528 0 528
cfi=(11)
cfn=(114)
calls=528 0x403ac9 -60 
* * 249818 82124 79488 7 1 28 7 1 28 8932 557 1052
+5 -3 528 528
+4 * 528 0 528
+4 * 528
jump=528 +28 +4 
* * 
+28 +4 528
+4 * 528 528
+1 * 528 528
+2 * 528 528
+2 * 528 528
+1 * 528 528

fn=(188)
0x403d98 171 536 0 536 1 0 0 1
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 * 536 0 536
+4 +2 536 536
+5 * 536 0 0 0 0 0 0 0 0 536 8
+2 +1 536 536
+4 * 536 536
+4 * 536 536
+4 * 536
+3 * 536
+3 * 536 0 536
cfi=(5)
cfn=(190)
calls=536 0x40452a -65 
* * 71075 19014 11180 0 1 0 0 1 0 15958 290 1072
+5 +1 536 536
+1 * 536 536

fn=(22)
0x404236 167 536 0 536 1 0 0 1
+1 * 536
+3 * 536
+4 * 536 0 536 1 0 0 1
+4 * 536 0 536
+4 0 536 536
+5 0 536 0 0 0 0 0 0 0 0 536
+2 0 536 536
+4 0 536 536
+4 0 536
+5 0 536
+3 0 536
+3 0 536 0 536
fi=(6) ???
cfi=(5)
cfn=(26)
calls=536 0x404730 99 
* 0 164899 27341 27750 24 31 22 24 31 22 24989 830 1072
+5 0 536
fi=(6)
jump=536 +7 0 
* 0 
+7 0 536 536
+1 0 536 536

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+4 * 528 0 528
+4 * 528
+4 * 528 0 0 1 0 0 1
+4 * 528
+3 * 528
+3 * 528 0 528
cfi=(10)
cfn=(44)
calls=528 0x404468 726 
* * 5280 2640 2112 1 0 0 1
+5 * 528 528
+4 * 528 528
+1 * 528 528

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+3 * 528 0 528
+4 * 528
+4 * 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfi=(10)
cfn=(44)
calls=528 0x404468 726 
* * 5280 2640 2112
+5 * 528 528
+4 * 528 528
+1 * 528 528

fn=(86)
0x403a0a 134 528 0 528
+1 * 528
+3 * 528 0 528
+1 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=528 0x4042e2 -45 
* * 19008 6864 7392 5 0 0 5
+5 +1 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=528 0x40432a +43 
* * 191376 34848 30521 14 3 16 14 3 16 27086 1048 1056
+5 * 528
jump=528 +28 * 
* * 
+28 * 528
+4 * 528 528
+1 * 528 528
+1 * 528 528

fn=(88)
0x4042e2 90 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528 1 0 0 1
cfi=(4)
cfn=(90)
calls=528 0x4047b2 +24 
* * 9504 3168 3696 3 0 0 3
+5 * 528 528
+4 * 528 0 528
+7 * 528 528
+4 * 528 0 528
+8 * 528 528
+4 * 528 0 528
+8 +1 528 528
+1 * 528 528

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+1 * 528
+4 * 528 0 528
+4 +2 528 528
+4 * 528 528 0 1 0 0 1
+4 * 528
+3 * 528 528
+4 * 528 528
+3 * 528
+3 * 528
+3 * 528
+4 * 528
+3 * 528 528
+4 * 528 528
+3 -1 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(158)
calls=528 0x403ce6 +11 
* * 73634 20132 12186 24 5 0 24 5 0 14900 278 1056
+5 +1 528 528
+4 * 528
+3 * 528 0 528
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=528 0x4031b8 -82 
* * 12144 4224 4224 1 0 0 1
+5 * 528
jump=528 +28 * 
* * 
+28 * 528
+4 * 528 528
+1 * 528 528
+1 * 528 528

fn=(172)
0x4031b8 79 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 528
+4 * 528
+3 * 528 0 528
cfi=(4)
cfn=(174)
calls=528 0x403ccc +42 
* * 7392 2640 2640
+5 * 528 528
+1 * 528 528

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208)
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1088 0 1088 1 0 0 1
+1 * 1088
+3 * 1088 0 1088
+4 +1 1088 1088
+4 * 1088 1088 0 0 2 0 0 2
+4 * 1088
+3 * 1088 1088
+4 * 1088 1088
+3 * 1088
+3 * 1088
+3 * 1088
+4 * 1088 1088
+1 * 1088 1088

fn=(106)
0x40325e 113 1080 0 1080 1 0 0 1
+1 * 1080
+3 * 1080 0 1080
+4 +1 1080 1080
+4 * 1080 1080
+1 * 1080 1080

fn=(216)
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252)
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 544 0 544 1 0 0 1
+1 * 544
+3 * 544 0 544 0 0 1 0 0 1
+4 +1 544 544
+4 * 544 544
+1 * 544 544

fn=(82)
0x4039fc 117 544 0 544 1 0 0 1
+1 * 544
+3 * 544 0 544 1 0 0 1
+4 +1 544 544
+4 * 544 544
+1 * 544 544

fn=(200)
0x402eda 901 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264 0 0 0 0 0 0 0 0 264 8
jcnd=8/264 +51 +10 
* * 
+2 +3 256 256
+4 * 256 256
+4 * 256 256
+4 -1 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(3)
cfn=(222)
calls=256 0x403373 215 
* * 9728 3328 3584 0 17 2 0 17 2 256 2
+5 +2 256 256
+4 * 256 256
+4 * 256
+4 * 256 256
+4 * 256 0 256
+4 * 256
jump=256 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206)
calls=8 0x4033a0 318 
* * 12875 3933 3418 46 8 9 46 8 9 901 85 47
+5 +2 264 264
+1 * 264 264

fn=(4)
0x4030b2 310 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+2 * 528 0 528
+2 * 528 0 528
+1 * 528
+4 * 528 0 528 1 0 0 1
+4 * 528 0 528
+4 +2 528 528
+4 * 528
+3 * 528 0 528
cfn=(6)
calls=528 0x403b08 117 
* * 3168 1584 1056 1 0 1 1 0 1
+5 * 528
+3 * 528 0 528
cfi=(3)
cfn=(8)
calls=528 0x403afa -88 
* * 3168 1584 1056 1 0 0 1
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(10)
calls=528 0x402f54 645 
* * 6864 3168 1056 1 1 0 1 1
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528
+3 * 528
+3 * 528 0 528
cfn=(12)
calls=528 0x403b16 134 
* * 214017 46441 44209 29 20 17 29 20 17 24979 764 1056
+5 +4 528 528 0 1 0 0 1
+4 * 528
+3 * 528 0 528
cfn=(40)
calls=528 0x40333c 113 
* * 3168 1584 1056 2 0 0 2
+5 * 528
+3 * 528 528
+4 * 528 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(42)
calls=528 0x403ba4 565 
* * 13200 5280 4224 3 0 0 3
+5 * 528
+3 * 528 528
+4 * 528
+3 * 528 0 528
cfn=(46)
calls=528 0x403b74 547 
* * 13200 5280 4224
+5 * 528
+3 * 528
+3 * 528
+3 * 528
+3 * 528 0 528 1 0 0 1
cfi=(11)
cfn=(48)
calls=528 0x403bd5 -60 
* * 249818 82124 79488 26 3 4 26 3 4 8932 568 1052 131
+5 -3 528 528
+4 * 528 0 528
+4 * 528
jump=528 +28 +4 
* * 
+28 +4 528
+4 * 528 528
+1 * 528 528
+2 * 528 528
+2 * 528 528
+1 * 528 528

fn=(108)
0x403a98 565 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+4 * 528 0 528
+4 * 528
+4 * 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfi=(10)
cfn=(110)
calls=528 0x404380 726 
* * 5280 2640 2112 1 0 0 1
+5 * 528 528
+4 * 528 528
+1 * 528 528

fn=(178)
0x402e74 414 528 0 528
+1 * 528
+3 * 528 0 528
+1 * 528
+4 * 528 0 528 1 0 0 1
+4 +2 528 528
+4 * 528
+3 * 528 0 528
cfn=(40)
calls=528 0x40333c 113 
* * 3168 1584 1056
+5 * 528
+3 * 528 528
+4 * 528 528
+4 * 528 528
+4 * 528 528
+3 -1 528
+3 * 528
+3 * 528 0 528
cfi=(14)
cfn=(180)
calls=528 0x40334a 148 
* * 16368 5280 6336 2 0 0 2
+5 +1 528 528
+4 * 528
+3 * 528 0 528
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=528 0x4032ca 159 
* * 105506 31972 20538 3 1 0 3 1 0 16292 282 1056
+5 * 528
jump=528 +28 * 
* * 
+28 * 528 0 0 1 0 0 1
+4 * 528 528
+1 * 528 528
+1 * 528 528

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 536 0 536 1 0 0 1
+1 * 536 0 0 1 0 0 1
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 0 536 536
+5 0 536 0 0 0 0 0 0 0 0 536
+2 0 536 536
+4 0 536 536
+4 0 536
+5 0 536
+3 0 536
+3 0 536 0 536
fi=(6)
cfi=(5)
cfn=(100)
calls=536 0x40461a 99 
* 0 173028 26521 25324 33 9 21 33 9 21 27096 1118 1072
+5 0 536
fi=(6)
jump=536 +7 0 
* 0 
+7 0 536 536
+1 0 536 536

fn=(144)
0x402d9a 770 106260 0 106260
+1 * 106260
+3 * 106260 0 106260
+4 * 106260 0 106260
+4 +1 106260 106260
+4 * 106260 106260
+3 * 106260 106260
+4 * 106260
+4 * 106260
+3 * 106260 106260
+1 * 106260 106260

fn=(146)
0x402dba 770 106260 0 106260
+1 * 106260
+3 * 106260 0 106260 1 0 0 1
+4 * 106260 0 106260
+4 +1 106260 106260
+4 * 106260 106260
+3 * 106260 106260
+4 * 106260
+4 * 106260
+3 * 106260 106260
+1 * 106260 106260

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 528
+4 * 528
+3 * 528 0 528
cfi=(4)
cfn=(194)
calls=528 0x403d7e +42 
* * 7392 2640 2640 1 0 0 1
+5 * 528 528
+1 * 528 528

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+1 * 528
+4 * 528 0 528
+4 +2 528 528
+4 * 528 528
+4 * 528
+3 * 528 528
+4 * 528 528
+3 * 528
+3 * 528
+3 * 528
+4 * 528
+3 * 528 528
+4 * 528 528
+3 -1 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(188)
calls=528 0x403d98 +11 
* * 78578 21940 13674 1 1 0 1 1 0 16292 282 1056
+5 +1 528 528
+4 * 528
+3 * 528 0 528
cfn=(192)
calls=528 0x403296 -82 
* * 12144 4224 4224 1 0 0 1
+5 * 528
jump=528 +28 * 
* * 
+28 * 528
+4 * 528 528
+1 * 528 528
+1 * 528 528

fn=(2)
0x402d74 645 2144 0 2144 1 0 0 1
+1 * 2144
+3 * 2144 0 2144 0 0 1 0 0 1
+4 +1 2144 2144
+4 * 2144 2144 0 1 1 0 1 1
+4 * 2144
+3 * 2144 2144
+4 * 2144 2144
+3 * 2144
+3 * 2144
+3 * 2144
+4 * 2144 2144
+1 * 2144 2144

fn=(20)
0x404412 179 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 +2 528 528
+4 * 528 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(22)
calls=528 0x404236 -14 
* * 170193 29545 29425 23 20 13 23 20 13 24979 764 1056
+5 * 528 528
+4 * 528 0 528
+3 +1 528 528
+4 * 528 528 0 1 0 0 1
+3 * 528 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+3 * 528 528
+4 * 528
+4 * 528
+3 * 528 528
+4 * 528 0 528
+4 +1 528 528
+1 * 528 528

fn=(94)
0x40432a 179 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 * 528 0 528
+4 +2 528 528
+4 * 528 528 0 1 0 0 1
+4 * 528
+3 * 528
+3 * 528 0 528
cfn=(96)
calls=528 0x403fbe -14 
* * 178176 28512 26825 13 3 16 13 3 16 27086 1048 1056
+5 * 528 528
+4 * 528 0 528
+3 +1 528 528
+4 * 528 528
+3 * 528 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+3 * 528 528
+4 * 528
+4 * 528
+3 * 528 528
+4 * 528 0 528
+4 +1 528 528
+1 * 528 528

fn=(244)
0x402f7a 901 264 0 264
+1 * 264
+3 * 264 0 0 1 0 0 1
+4 * 264 0 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264 0 0 0 0 0 0 0 0 264
jcnd=8/264 +51 +10 
* * 
+2 +3 256 256
+4 * 256 256
+4 * 256 256
+4 -1 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(3)
cfn=(264)
calls=256 0x4036b1 215 
* * 9728 3328 3584 0 16 5 0 16 5 256
+5 +2 256 256
+4 * 256 256
+4 * 256
+4 * 256 256
+4 * 256 0 256
+4 * 256
jump=256 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250)
calls=8 0x4036de 318 
* * 12709 3714 3236 21 11 31 21 11 31 896 86 47
+5 +2 264 264
+1 * 264 264

fn=(258)
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1080 0 1080 1 0 0 1
+1 * 1080
+3 * 1080 0 1080 1 0 0 1
+4 +1 1080 1080
+4 * 1080 1080
+1 * 1080 1080

fn=(112)
0x403a68 547 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528 528
+3 * 528 0 528
+4 * 528
+4 * 528
+4 * 528
+3 * 528
+3 * 528 0 528
cfi=(10)
cfn=(110)
calls=528 0x404380 726 
* * 5280 2640 2112
+5 * 528 528
+4 * 528 528
+1 * 528 528

fn=(148)
0x402df4 414 528 0 528
+1 * 528
+3 * 528 0 528
+1 * 528
+4 * 528 0 528 1 0 0 1
+4 +2 528 528
+4 * 528
+3 * 528 0 528
cfn=(106)
calls=528 0x40325e 113 
* * 3168 1584 1056
+5 * 528
+3 * 528 528
+4 * 528 528
+4 * 528 528
+4 * 528 528
+3 -1 528
+3 * 528
+3 * 528 0 528
cfi=(14)
cfn=(150)
calls=528 0x40326c 148 
* * 16368 5280 6336 4 0 0 4
+5 +1 528 528
+4 * 528
+3 * 528 0 528
cfn=(156)
calls=528 0x4031ec 159 
* * 100562 30164 19050 27 5 0 27 5 0 14900 278 1056
+5 * 528
jump=528 +28 * 
* * 
+28 * 528 0 0 1 0 0 1
+4 * 528 528
+1 * 528 528
+1 * 528 528

fn=(158)
0x403ce6 171 536 0 536 1 0 0 1
+1 * 536
+3 * 536
+4 * 536 0 536
+4 * 536 0 536
+4 * 536 0 536
+4 +2 536 536
+5 * 536 0 0 0 0 0 0 0 0 536
+2 +1 536 536
+4 * 536 536
+4 * 536 536
+4 * 536
+3 * 536
+3 * 536 0 536
cfi=(5)
cfn=(160)
calls=536 0x4044d6 -65 
* * 66151 17212 9700 25 6 0 25 6 0 14571 287 1072
+5 +1 536 536
+1 * 536 536

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 938 938 0 1 0 0 1
+6 0 938
+2 0 938 0 0 0 0 0 0 0 0 938 1
+2 0 938 938

fn=(38) _int_malloc
0x3877c79a00 0 1072 0 1072 1 0 0 1
+2 0 1072
+3 0 1072 0 1072
+2 0 1072 0 1072
+2 0 1072 0 1072 0 0 1 0 0 1
+2 0 1072
+3 0 1072 0 1072
+1 0 1072 0 1072
+1 0 1072
+4 0 1072
+4 0 1072 0 0 0 0 0 0 0 0 1072
+6 0 1072
+4 0 1072
+6 0 1072
+3 0 1072
+4 0 1072
+4 0 1072
+4 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072
+6 0 1072 1072 0 1 1 0 1 1
+7 0 1072 0 0 0 0 0 0 0 0 1072 7
jcnd=950/1072 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 938
+4 0 938 938
+1 0 938 938
+1 0 938 938
+2 0 938 938
+2 0 938 938
+2 0 938 938
+2 0 938 938
+7 0 967
+7 0 967 0 0 1 0 0 1 0 0 967 7
jcnd=64/967 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 8 0 0 8
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 64 0 0 1 0 0 1
+3 0 64
+4 0 64
+4 0 64 0 0 1 0 0 1 0 0 64
jcnd=64/64 0x3877c7a1a4 0 
* 0 
+30 0 64 64
+6 0 64
+5 0 64 0 0 0 0 0 0 0 0 64 1
jcnd=63/64 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 900 241 191 8 1 0 8 1 0 186 29
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 966 0 0 1 0 0 1
+3 0 966
+3 0 966
+3 0 966
+4 0 966
+3 0 966
+4 0 966 0 966
+5 0 966
+3 0 966 0 966
+4 0 966 0 966
+4 0 966 0 966
+5 0 966
+3 0 966
+3 0 966
+3 0 966
+3 0 966
+4 0 966
+4 0 966 0 0 1 0 0 1
+4 0 966 0 966
+4 0 966
+4 0 966 0 966
+5 0 966 0 966
+5 0 966
+3 0 966
+3 0 966 0 966
+5 0 966
+5 0 966
+3 0 966 0 966
+4 0 966 0 966
+4 0 966
+6 0 966 0 966
+4 0 966 0 966
+5 0 966 0 0 1 0 0 1
+3 0 966
+3 0 966
+3 0 966
jump=966 +87 0 
* 0 
+8 0 951
+3 0 951
+4 0 951
+2 0 951
+2 0 951
+3 0 951
+3 0 951
+3 0 951
+2 0 951
+2 0 951
+5 0 951
+2 0 951 951
+4 0 951
+3 0 951
+4 0 951 0 951
+4 0 951 0 951
+8 0 951
+7 0 951 0 951
+4 0 951 0 951
+4 0 951 0 951
+4 0 951 0 0 0 0 0 0 0 0 951
-38 0 44
+3 0 44
+4 0 44 0 44
+4 0 44 0 44
+8 0 44
+7 0 44 0 44
+4 0 44 0 44 0 0 1 0 0 1
+4 0 44 0 44
+4 0 44 0 0 0 0 0 0 0 0 44
+6 0 1962 1962 0 1 0 0 1
+4 0 1962
+3 0 1962 0 0 0 0 0 0 0 0 1962 81
jcnd=918/1962 0x3877c79ef0 0 
* 0 
+6 0 1044 1044
+4 0 1044 1044 0 0 1 0 0 1
+4 0 1044
+4 0 1044 0 0 0 0 0 0 0 0 1044
+6 0 1044 1044 0 1 1 0 1 1
+7 0 1044 0 0 0 0 0 0 0 0 1044
+6 0 1044
+4 0 1044
+7 0 1044 0 0 0 0 0 0 0 0 1044 6
jcnd=62/1044 +11 0 
* 0 
+2 0 982
+3 0 982 0 0 0 0 0 0 0 0 982 135
jcnd=819/982 0x3877c79e28 0 
* 0 
+6 0 1024
+3 0 1024 0 1024
+4 0 1024 0 1024
+5 0 1024 0 0 0 0 0 0 0 0 1024 17
jcnd=29/1024 0x3877c7a090 0 
* 0 
+6 0 995
+7 0 995 0 0 0 0 0 0 0 0 995 30
jcnd=951/995 0x3877c79c50 0 
* 0 
+6 0 44 0 0 1 0 0 1
+3 0 44
+4 0 44
+4 0 44 0 0 0 0 0 0 0 0 44 1
+6 0 44
+3 0 44
+4 0 44
+2 0 44
+2 0 44
+3 0 44
+3 0 44
+8 0 44
+3 0 44
+2 0 44
+2 0 44
+4 0 44 44 0 0 1 0 0 1
+4 0 44
+3 0 44 0 0 1 0 0 1 0 0 44 7
jcnd=44/44 0x3877c79e15 0 
* 0 
0x3877c79e15 0 44 0 44
+4 0 44 0 44
+4 0 44
+3 0 44
jump=44 0x3877c79c73 0 
* 0 
+8 0 819 819 0 1 0 0 1
+4 0 819
+3 0 819 0 0 0 0 0 0 0 0 819 248
jcnd=428/819 0x3877c79ce1 0 
* 0 
+6 0 391 391
+5 0 391 0 0 0 0 0 0 0 0 391 5
jcnd=371/391 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 15 0 0 15
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 2 0 0 2
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 3 0 0 3
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 918 0 0 1 0 0 1
+7 0 918
+3 0 918 0 0 0 0 0 0 0 0 918 4
jcnd=64/918 0x3877c7a0b0 0 
* 0 
+6 0 918 918 0 1 0 0 1
+4 0 918
+3 0 918
+3 0 918
+2 0 918
+4 0 918
+3 0 918
+3 0 918
+2 0 918
+2 0 918
+2 0 918
+2 0 918 918 0 0 1 0 0 1
+8 0 918
+5 0 918
+5 0 918
+2 0 918 0 0 0 0 0 0 0 0 918
-2 0 447
+2 0 447 0 0 0 0 0 0 0 0 447
+2 0 1365
+2 0 1365 0 0 0 0 0 0 0 0 1365 31
jcnd=875/1365 +64 0 
* 0 
+2 0 490
+8 0 490
+3 0 490
+3 0 490 0 0 0 0 0 0 0 0 490 1
jcnd=1/490 0x3877c79fc0 0 
* 0 
-6 0 591
+3 0 591
+3 0 591 0 0 0 0 0 0 0 0 591 7
jcnd=314/591 0x3877c79fc0 0 
* 0 
+2 0 766
+2 0 766 766
+8 0 766
+2 0 766 0 0 0 0 0 0 0 0 766 22
jcnd=591/766 -20 0 
* 0 
+2 0 175
+2 0 175
+5 0 175
+3 0 175
+3 0 175
+2 0 175
+2 0 175
+5 0 175 0 0 0 0 0 0 0 0 175 1
jcnd=1/175 +14 0 
* 0 
+2 0 174
+2 0 174
+4 0 174
+2 0 174
+2 0 174 0 0 0 0 0 0 0 0 174
jcnd=174/174 -8 0 
* 0 
-8 0 9471
+4 0 9471
+2 0 9471
+2 0 9471 0 0 0 0 0 0 0 0 9471 620
jcnd=8504/9471 -8 0 
* 0 
-2 0 875 0 0 1 0 0 1
+2 0 875 0 0 0 0 0 0 0 0 875 27
jcnd=793/875 -8 0 
* 0 
+2 0 1050 1050 0 0 12 0 0 12
+4 0 1050 0 0 1 0 0 1
+3 0 1050 0 0 0 0 0 0 0 0 1050 584
jcnd=603/1050 0x3877c7a1cf 0 
* 0 
+6 0 447
+2 0 447
+4 0 447
+2 0 447
+2 0 447
+2 0 447 0 447
+8 0 447
jump=447 0x3877c79f30 0 
* 0 
+37 0 315 315 0 1 0 0 1
+5 0 315 315
+4 0 315
+4 0 315 315
+5 0 315 0 0 0 0 0 0 0 0 315
jcnd=315/315 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 64 64
+4 0 64
+4 0 64
+2 0 64
+5 0 64 64 0 1 0 0 1
+4 0 64
+3 0 64 0 0 0 0 0 0 0 0 64 1
jcnd=63/64 0x3877c79f00 0 
* 0 
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 64 0 0 1 0 0 1
+3 0 64 0 64
+4 0 64
jump=64 0x3877c79b99 0 
* 0 
+36 0 603 603 0 1 2 0 1 2
+4 0 603 603
+4 0 603
+3 0 603 603
+4 0 603
+4 0 603
+3 0 603
+3 0 603 603
+4 0 603 0 0 0 0 0 0 0 0 603
+6 0 603 603
+4 0 603 0 0 0 0 0 0 0 0 603
+6 0 603 603 0 1 0 0 1
+8 0 603 0 603
+4 0 603 0 603
+4 0 603 0 0 0 0 0 0 0 0 603 11
jcnd=558/603 +38 0 
* 0 
+2 0 45 45 0 0 1 0 0 1
+4 0 45
+3 0 45 0 0 0 0 0 0 0 0 45
+2 0 45 45
+5 0 45 0 0 0 0 0 0 0 0 45
+6 0 45 45
+4 0 45 0 45
+4 0 45 45
+4 0 45 0 45
+4 0 45
+4 0 45 0 0 0 0 0 0 0 0 45
-4 0 558
+4 0 558 0 0 0 0 0 0 0 0 558 13
jcnd=28/558 0x3877c7a2e3 0 
* 0 
+6 0 575 575
+4 0 575 575 0 1 0 0 1
+4 0 575 0 0 0 0 0 0 0 0 575
+6 0 575
+4 0 575
+7 0 575 0 575 0 0 11 0 0 11
+4 0 575 0 575
+4 0 575 0 575
+4 0 575 0 575
+4 0 575 0 0 0 0 0 0 0 0 575 4
jcnd=38/575 +7 0 
* 0 
+2 0 537 0 537
+5 0 537
+7 0 537 0 0 0 0 0 0 0 0 537 1
jcnd=531/537 +18 0 
* 0 
-7 0 38
+7 0 38 0 0 0 0 0 0 0 0 38
jcnd=38/38 +18 0 
* 0 
+2 0 6 0 6
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 569 0 0 1 0 0 1
+7 0 569 0 569
+4 0 569
+3 0 569
+3 0 569
+4 0 569
+3 0 569
+4 0 569
+3 0 569
+3 0 569
+4 0 569 0 569
+4 0 569 0 569 0 0 1 0 0 1
+4 0 569
jump=569 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 28
+7 0 28 0 28
+6 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
jcnd=28/28 +7 0 
* 0 
+7 0 603
+4 0 603 0 0 1 0 0 1
+3 0 603
+3 0 603 0 603
cfn=(104)
calls=603 0x3877c77180 0 
* 0 2412 1206 0 1 0 0 1 0 0 603
+5 0 603
+3 0 603
jump=603 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 315 0 0 1 0 0 1
+7 0 315
+2 0 315
+4 0 315
+3 0 315
+3 0 315 0 315
+5 0 315
+3 0 315
+4 0 315
+3 0 315 0 0 1 0 0 1
+4 0 315
+4 0 315
+3 0 315
+4 0 315 0 315
+4 0 315 0 315 0 0 6 0 0 6
+4 0 315
+3 0 315
+3 0 315 0 315
cfn=(104)
calls=315 0x3877c77180 0 
* 0 1260 630 0 0 0 0 0 0 0 315 1
+5 0 315
+3 0 315
jump=315 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 1072 0 1072 1 0 0 1
+5 0 1072 0 1072
+5 0 1072
+3 0 1072 0 1072
+5 0 1072
+4 0 1072 1072 0 0 1 0 0 1
+7 0 1072 1072 0 0 1 0 0 1
+3 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072
+6 0 1072 1072 0 0 1 0 0 1
+7 0 1072 1072 0 1 1 0 1 1
+4 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072
+2 0 1072 1072 0 0 1 0 0 1
+3 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072
jcnd=1072/1072 +97 0 
* 0 
+18 0 1072
+3 0 1072
+3 0 1072 0 1072
cfn=(38)
calls=1072 0x3877c79a00 0 
* 0 247879 29206 34850 42 32 42 42 32 42 39221 1934
+5 0 1072
+3 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072
+2 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072
+2 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072 6
+2 0 1072 1072
+7 0 1072 0 0 0 0 0 0 0 0 1072
jcnd=1072/1072 +13 0 
* 0 
+13 0 1072 0 1072
+2 0 1072 0 0 0 0 0 0 0 0 1072 8
+6 0 1072
+3 0 1072 1072
+4 0 1072 1072
+5 0 1072 1072
+5 0 1072
+4 0 1072 1072
+1 0 1072 0 0 1 0 0 1
+5 0 1072 1072 0 0 1 0 0 1
+7 0 1072 0 0 0 0 0 0 0 0 1072
jcnd=1072/1072 +14 0 
* 0 
+14 0 1072 0 1072 1 0 0 1
+3 0 1072 0 0 0 0 0 0 0 0 1072
+6 0 1072
jump=1072 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1072 0 1072 1 0 0 1
+2 0 1072
+3 0 1072
+3 0 1072 0 1072
+2 0 1072
+3 0 1072 0 1072
+1 0 1072
+3 0 1072 0 1072
+1 0 1072
+3 0 1072
+4 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072
+6 0 1072
+4 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072 7
jcnd=10/1072 0x3877c838d1 0 
* 0 
+2 0 1062
+3 0 1062
+3 0 1062
+3 0 1062
+3 0 1062
+3 0 1062 0 0 0 0 0 0 0 0 1062
jcnd=1062/1062 +41 0 
* 0 
+41 0 1062 0 0 1 0 0 1
+3 0 1062 0 0 0 0 0 0 0 0 1062
jcnd=1062/1062 0x3877c839c0 0 
* 0 
+24 0 1062
+3 0 1062
+4 0 1062
+3 0 1062
+3 0 1062
+3 0 1062
+3 0 1062
+3 0 1062 0 0 0 0 0 0 0 0 1062 525
jcnd=538/1062 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 534
+10 0 534 534 0 0 2 0 0 2
+3 0 534
+4 0 534 0 534
+3 0 534
+4 0 534
+4 0 534 0 0 0 0 0 0 0 0 534
jcnd=534/534 -18 0 
* 0 
-18 0 1658 1658
+3 0 1658
+4 0 1658 0 1658
+3 0 1658
+4 0 1658
+4 0 1658 0 0 0 0 0 0 0 0 1658 11
jcnd=1124/1658 -18 0 
* 0 
+2 0 1072
+4 0 1072
+3 0 1072 1072
+1 0 1072 1072
+1 0 1072 1072
+2 0 1072 1072 0 1 0 0 1
+2 0 1072 1072
0x3877c839c0 0 1062 0 0 1 0 0 1
+3 0 1062
+3 0 1062
+3 0 1062
+4 0 1062 0 1062 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1062 0x3877c89b20 0 
* 0 197290 72848 70724 6 1 48 6 1 48 9444 592 1062 131
+5 0 1062
jump=1062 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1072 1072 0 1 1 0 1 1
+7 0 1072 1072 0 0 1 0 0 1
+3 0 1072
+3 0 1072 0 0 1 0 0 1 0 0 1072
+6 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072
+6 0 1072 1072 0 0 1 0 0 1
+4 0 1072
+4 0 1072
+2 0 1072 0 0 0 0 0 0 0 0 1072 2
+2 0 1072
+2 0 1072
+7 0 1072 0 0 0 0 0 0 0 0 1072
jcnd=1072/1072 +14 0 
* 0 
+14 0 1072
+2 0 1072
cfn=(170) _int_free
calls=1072 0x3877c78650 0 
* 0 103994 27650 15520 20 2 0 20 2 0 25169 575

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 6
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 8
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1072 0 1072 1 0 0 1
+2 0 1072 0 1072
+2 0 1072 0 1072
+2 0 1072
+3 0 1072 0 1072
+2 0 1072 0 1072
+1 0 1072 0 1072
+1 0 1072
+3 0 1072
+4 0 1072 1072
+4 0 1072 0 1072
+4 0 1072
+3 0 1072
+4 0 1072
+3 0 1072
+3 0 1072
+3 0 1072 0 0 1 0 0 1 0 0 1072
+6 0 1072
+4 0 1072 0 0 0 0 0 0 0 0 1072
+6 0 1072
+4 0 1072 0 0 0 0 0 0 0 0 1072
+6 0 1072 1072
+7 0 1072 0 0 0 0 0 0 0 0 1072 4
jcnd=948/1072 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 948
+2 0 948 0 0 0 0 0 0 0 0 948
+6 0 948 948 0 1 0 0 1
+4 0 948
+3 0 948
+2 0 948 0 0 0 0 0 0 0 0 948
jcnd=948/948 0x3877c78a40 0 
* 0 
+6 0 948 948
+4 0 948
+3 0 948 0 0 0 0 0 0 0 0 948
+6 0 948 948
+5 0 948
+4 0 948 0 0 0 0 0 0 0 0 948
jcnd=948/948 0x3877c7907c 0 
* 0 
+6 0 948 948
+5 0 948
+4 0 948 0 0 0 0 0 0 0 0 948
+6 0 948
+4 0 948 0 0 1 0 0 1 0 0 948
+6 0 948
+4 0 948 948
+7 0 948 0 0 0 0 0 0 0 0 948
+6 0 948 948
+6 0 948
+2 0 948 0 0 0 0 0 0 0 0 948
+6 0 948 948
+4 0 948 0 0 0 0 0 0 0 0 948 3
jcnd=945/948 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=2/3 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 948 948 0 1 0 0 1
+4 0 948 0 0 0 0 0 0 0 0 948 488
jcnd=313/948 0x3877c78bf0 0 
* 0 
+6 0 635 635 0 0 1 0 0 1
+6 0 635 0 0 1 0 0 1 0 0 635 64
jcnd=60/635 0x3877c78a78 0 
* 0 
+6 0 575 575
+5 0 575 575
+5 0 575 575
+4 0 575 0 0 0 0 0 0 0 0 575
+6 0 575 575
+4 0 575 0 0 0 0 0 0 0 0 575
+6 0 575 575
+9 0 575 0 575
+4 0 575 0 575
+4 0 575 0 0 0 0 0 0 0 0 575 5
jcnd=567/575 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 575
+3 0 575
+4 0 575 575
+4 0 575 575
+4 0 575 0 0 0 0 0 0 0 0 575
-12 0 60
+4 0 60 60
+4 0 60 60
+4 0 60 0 0 0 0 0 0 0 0 60
+6 0 635
+7 0 635 0 635
+4 0 635 0 635
+4 0 635 0 0 0 0 0 0 0 0 635 6
jcnd=588/635 +18 0 
* 0 
+2 0 47 0 47
+8 0 47 0 47
+8 0 47 0 47
+4 0 47
+3 0 47 0 47 1 0 0 1
+4 0 47
+4 0 47 0 47
+4 0 47 0 47
+4 0 47
+7 0 47 0 0 0 0 0 0 0 0 47
jcnd=47/47 0x3877c78b20 0 
* 0 
-30 0 588 0 588
+4 0 588
+3 0 588 0 588
+4 0 588
+4 0 588 0 588
+4 0 588 0 588
+4 0 588
+7 0 588 0 0 0 0 0 0 0 0 588
jcnd=588/588 0x3877c78b20 0 
* 0 
-7 0 313
+7 0 313 0 0 0 0 0 0 0 0 313
jcnd=313/313 0x3877c78b20 0 
* 0 
0x3877c78a40 0 948 0 0 1 0 0 1
+5 0 948 948
+4 0 948 948
+7 0 948 0 0 0 0 0 0 0 0 948
jcnd=948/948 +16 0 
* 0 
+16 0 948 0 948
+5 0 948 0 0 0 0 0 0 0 0 948
+6 0 948
+3 0 948
jump=948 0x3877c7878f 0 
* 0 
+10 0 60 0 60
+6 0 60 0 0 1 0 0 1
jump=60 0x3877c78885 0 
* 0 
0x3877c78b20 0 948 948 0 1 0 0 1
+4 0 948
+2 0 948 0 0 0 0 0 0 0 0 948
+6 0 948 948
+7 0 948 0 0 0 0 0 0 0 0 948
jcnd=948/948 +15 0 
* 0 
+15 0 948 0 948 1 0 0 1
+4 0 948 0 0 0 0 0 0 0 0 948 2
+6 0 948
+4 0 948 948
+1 0 948 948
+1 0 948 948
+2 0 948 948
+2 0 948 948
+2 0 948 948
+2 0 948 948
0x3877c78bf0 0 313 0 0 1 0 0 1
+3 0 313 0 313
+4 0 313
+3 0 313
+4 0 313 0 313 1 0 0 1
+4 0 313
jump=313 0x3877c788cf 0 
* 0 
0x3877c78f12 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 948 948 0 1 1 0 1 1
+4 0 948 0 0 1 0 0 1
+7 0 948
+4 0 948
+3 0 948
+3 0 948 0 0 0 0 0 0 0 0 948
jcnd=948/948 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1062 0 0 1 0 0 1
+7 0 1062
+3 0 1062
+3 0 1062 1062 0 0 1 0 0 1
+4 0 1062
+4 0 1062 0 0 0 0 0 0 0 0 0 0 1062 131
jump=128 0x3877c89be8 0 
* 0 
jump=138 0x3877c89bd0 0 
* 0 
jump=128 0x3877c89bb8 0 
* 0 
jump=128 +11 0 
* 0 
jump=128 0x3877c89c48 0 
* 0 
jump=138 0x3877c89c30 0 
* 0 
jump=136 0x3877c89c18 0 
* 0 
jump=138 0x3877c89c00 0 
* 0 
+11 0 128 128
+3 0 128
+4 0 128
+4 0 128 128
+4 0 128
+4 0 128 0 128
+4 0 128
+9 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128
+4 0 128
+4 0 128 0 0 0 0 0 0 0 0 128
jcnd=8/128 0x3877c89c60 0 
* 0 
-40 0 8638 8638
+4 0 8638 0 8638 0 0 6 0 0 6
+4 0 8638 8638
+4 0 8638 0 8638 0 0 15 0 0 15
+4 0 8638 8638
+4 0 8638 0 8638 0 0 1 0 0 1
+4 0 8638 8638
+4 0 8638 0 8638 0 0 3 0 0 3
+4 0 8638
+4 0 8638
+4 0 8638 0 0 0 0 0 0 0 0 8638 588
jcnd=1026/8638 0x3877c89c60 0 
* 0 
-32 0 138 138
+4 0 138 0 138
+4 0 138 138
+4 0 138 0 138
+4 0 138 138
+4 0 138 0 138
+4 0 138
+4 0 138
+4 0 138 0 0 0 0 0 0 0 0 138
jcnd=10/138 0x3877c89c60 0 
* 0 
-24 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136
+4 0 136
+4 0 136 0 0 0 0 0 0 0 0 136
jcnd=8/136 0x3877c89c60 0 
* 0 
-16 0 138 138 0 1 0 0 1
+4 0 138 0 138
+4 0 138 0 0 1 0 0 1
+4 0 138
+4 0 138 0 0 0 0 0 0 0 0 138 4
jcnd=10/138 0x3877c89c60 0 
* 0 
+6 0 8116
+4 0 8116 8116
+3 0 8116 0 8116 0 0 1 0 0 1
+3 0 8116 8116
+4 0 8116 0 8116 0 0 3 0 0 3
+4 0 8116 8116
+4 0 8116 0 8116 0 0 18 0 0 18
+4 0 8116 8116
+4 0 8116 0 8116
+4 0 8116
jump=8116 -80 0 
* 0 
-30 0 128 128
+3 0 128 0 128
+3 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128 0 0 1 0 0 1
+4 0 128 128
+4 0 128 0 128
+4 0 128
jump=128 -80 0 
* 0 
-24 0 138 138
+4 0 138 0 138
+4 0 138 138
+4 0 138 0 138
+4 0 138 138
+4 0 138 0 138
+4 0 138
jump=138 -80 0 
* 0 
-16 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128
jump=128 -80 0 
* 0 
+8 0 128 128
+3 0 128
+4 0 128 0 0 1 0 0 1
+4 0 128
+4 0 128
jump=128 -39 0 
* 0 
+9 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
+6 0 138 138
+3 0 138
+4 0 138
jump=138 -72 0 
* 0 
+8 0 128
+4 0 128 128
+3 0 128 0 0 0 0 0 0 0 0 128
+2 0 128
+4 0 128
jump=128 -99 0 
* 0 
+11 0 138 138 0 1 0 0 1
+3 0 138
+4 0 138
+4 0 138
+4 0 138
jump=138 0x3877c89b78 0 
* 0 
+9 0 136 136
+3 0 136
+4 0 136
+4 0 136
+4 0 136
jump=136 0x3877c89b70 0 
* 0 
+9 0 138 138
+3 0 138
+4 0 138
+4 0 138
+4 0 138
jump=138 0x3877c89b68 0 
* 0 
+9 0 128 128
+3 0 128
+4 0 128
+4 0 128
+4 0 128
jump=128 0x3877c89b60 0 
* 0 
+9 0 1062 0 1062 1 0 0 1
+3 0 1062 1062

totals: 6860699 2774355 1619505 239 90 115 239 90 115 211276 4476 6422 131
