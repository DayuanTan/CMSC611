version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2403


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2787565039 - 2787623130
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 194 0 0 1 0 0 1
+3 0 194 0 0 0 0 0 0 0 0 194
+2 0 194
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=194 0x3877c7b8b0 0 
* 0 19077 4650 2494 19 4 0 19 4 0 4271 45
* 0 194 194 0 1 1 0 1 1 0 0 0 194

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 194 0 194 1 0 0 1
+1 0 194
+5 0 194
+3 0 194 0 194
+1 0 194
+4 0 194 0 0 1 0 0 1
+3 0 194
+4 0 194
+3 0 194 0 194 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=194 0x3877c7aa50 0 
* 0 35335 6187 5310 31 24 29 31 24 29 6008 187
* 0 194 194 0 1 1 0 1 1 0 0 0 194
+5 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
jcnd=194/194 +96 0 
* 0 
+96 0 194 0 0 1 0 0 1
+4 0 194 194
+1 0 194 194
+1 0 194 194

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 92 0 92 1 0 0 1
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=92 0x404a28 -35 
* * 552 184 276 1 0 1 1 0 1
+5 * 92 92
+1 * 92 92

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 92
+4 * 92
+3 * 92 0 92
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=92 0x4044cc -35 
* * 460 184 184
+5 * 92 92
+1 * 92 92

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 92 0 92 1 0 0 1
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92 1 0 0 1
+4 +1 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=92 0x4049d4 -35 
* * 552 184 276 1 0 0 1
+5 * 92 92
+1 * 92 92

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 92 0 92 1 0 0 1
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 92
+4 * 92
+3 * 92 0 92
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=92 0x404520 -35 
* * 460 184 184
+5 * 92 92
+1 * 92 92

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 46 0 46
+1 * 46
+3 * 46
+4 * 46 0 46
+4 * 46 0 46
+4 * 46 0 46
+4 +1 46 46
+4 * 46 46
+4 * 46 46
+4 * 46
+3 * 46
+3 * 46 0 46
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=46 0x403df2 -87 
* * 1104 368 414 0 4 1 0 4 1 46
+5 * 46 46
+1 * 46 46

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 92 0 92 1 0 0 1
+1 * 92
+3 * 92 0 92
+4 * 92 92
+4 * 92 92
+1 * 92 92

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 46 0 46
+1 * 46
+3 * 46
+4 * 46 0 46
+4 * 46 0 46
+4 * 46 0 46
+4 +1 46 46
+4 * 46 46
+4 * 46 46
+4 * 46
+3 * 46
+3 * 46 0 46
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=46 0x40406a -87 
* * 1104 368 414 0 3 3 0 3 3 46
+5 * 46 46
+1 * 46 46

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=10 +8 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=10 +7 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 92 0 92
+1 * 92
+3 * 92 0 92
+4 * 92 92
+4 * 92 92
+1 * 92 92

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 142 0 142
+1 * 142
+3 * 142 0 142
+4 +1 142 142
+4 * 142 142
+1 * 142 142

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 184 0 184 1 0 0 1
+1 * 184
+3 * 184 0 184
+4 +1 184 184 0 1 0 0 1
+4 * 184 184
+1 * 184 184

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 142 0 142
+1 * 142
+3 * 142 0 142 0 0 1 0 0 1
+4 +1 142 142
+4 * 142 142
+1 * 142 142

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 184 0 184 1 0 0 1
+1 * 184
+3 * 184
+4 * 184 0 184
+4 +1 184
+4 * 184
+3 * 184 0 184
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=184 0x404ffe 790 
* * 1104 552 368 1 0 0 1
+5 * 184 184
+3 * 184 184
+1 * 184 184

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 184 0 184 1 0 0 1
+1 * 184
+3 * 184 0 184
+4 +1 184 184
+4 * 184 184
+1 * 184 184

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 184 0 184 1 0 0 1
+1 * 184
+3 * 184
+4 * 184 0 184
+4 +1 184
+4 * 184
+3 * 184 0 184 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=184 0x40500c 790 
* * 1104 552 368 1 0 0 1
+5 * 184 184
+3 * 184 184
+1 * 184 184

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 92 0 92
+1 * 92
+3 * 92 0 92
+4 * 92 0 92
+4 * 92 92
+4 * 92 92
+1 * 92 92

fl=(5)
fn=(28)
0x404992 113 107 0 107 1 0 0 1
+1 * 107
+3 * 107 0 107
+4 +1 107
+10 * 107 107
+1 * 107 107

fn=(176)
0x4044cc 86 92 0 92
+1 * 92
+3 * 92 0 92
+4 * 92 92
+1 * 92 92

fn=(224)
0x403df2 129 46 0 46
+1 * 46
+3 * 46
+4 * 46 0 46
+4 * 46 0 46
+4 * 46 0 46
+4 +1 46 46
+4 * 46
+3 * 46
+5 * 46 0 46
cfi=(16)
cfn=(226)
calls=46 0x402d61 -20 
* * 322 138 138
+5 * 46
+3 * 46 0 0 0 0 0 0 0 0 46
+2 * 46 46
+4 * 46 46 0 0 4 0 0 4
+2 * 46 0 46 0 0 1 0 0 1
+2 * 46 46
+1 * 46 46

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 97 0 97
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 * 97 0 97
+4 +1 97 97
+4 * 97
+3 * 97 0 97
cob=(5)
cfi=(8)
cfn=(164)
calls=97 0x387e4bb2f0 0 
* * 9928 2409 1270 21 5 0 21 5 0 2225 34 97
* * 97 97 0 1 1 0 1 1 0 0 0 97
+5 * 97 97
+1 * 97 97

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 97 0 97
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 * 97 0 97
+4 +1 97 97
+4 * 97
+3 * 97 0 97
cob=(5)
cfi=(8)
cfn=(164)
calls=97 0x387e4bb2f0 0 
* * 9925 2435 1224 0 0 0 0 0 0 2240 11 97
* * 97 97 0 0 0 0 0 0 0 0 0 97
+5 * 97 97
+1 * 97 97

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 97 0 97 1 0 0 1
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 * 97 0 97
+4 +2 97 97
+4 * 97
+3 * 97 0 97
cfn=(102)
calls=97 0x4048de +12 
* * 582 194 194 1 0 0 1
+5 * 97 97
+4 * 97 0 0 1 0 0 1
+3 * 97
+2 * 97 0 0 0 0 0 0 0 0 97
jcnd=97/97 +7 +3 
* * 
+7 +3 97 97
+4 * 97
+4 * 97
+3 * 97 0 97
cob=(5)
cfi=(8)
cfn=(32)
calls=97 0x387e4bd0b0 0 
* * 18875 3472 2848 18 9 17 18 9 17 3049 78 97
* * 97 97 0 0 0 0 0 0 0 0 0 97
+5 +1 97 97
+1 * 97 97

fn=(18)
0x404a28 81 92 0 92 1 0 0 1
+1 * 92
+3 * 92 0 92 0 0 1 0 0 1
+4 * 92 0 92
+4 * 92 92
+1 * 92 92

fn=(92)
0x4049d4 81 92 0 92 1 0 0 1
+1 * 92
+3 * 92 0 92
+4 * 92 0 92
+4 * 92 92
+1 * 92 92

fn=(196)
0x404520 86 92 0 92
+1 * 92
+3 * 92 0 92
+4 * 92 92
+1 * 92 92

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 97 0 97 1 0 0 1
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 * 97 0 97 1 0 0 1
+4 +2 97 97
+4 * 97
+3 * 97 0 97
cfn=(28)
calls=97 0x404992 +12 
* * 582 194 194 1 0 0 1
+5 * 97 97
+4 * 97
+3 * 97
+2 * 97 0 0 0 0 0 0 0 0 97
jcnd=97/97 +7 +3 
* * 
+7 +3 97 97
+4 * 97
+4 * 97
+3 * 97 0 97
cob=(5)
cfi=(8)
cfn=(32)
calls=97 0x387e4bd0b0 0 
* * 19564 3491 3044 17 16 13 17 16 13 3153 109 97
* * 97 97 0 1 1 0 1 1 0 0 0 97
+5 +1 97 97
+1 * 97 97

fn=(102)
0x4048de 113 107 0 107 1 0 0 1
+1 * 107
+3 * 107 0 107
+4 +1 107
+10 * 107 107
+1 * 107 107

fn=(266)
0x40406a 129 46 0 46
+1 * 46
+3 * 46
+4 * 46 0 46
+4 * 46 0 46
+4 * 46 0 46
+4 +1 46 46
+4 * 46
+3 * 46
+5 * 46 0 46
cfi=(16)
cfn=(226)
calls=46 0x402d61 -20 
* * 322 138 138
+5 * 46
+3 * 46 0 0 0 0 0 0 0 0 46
+2 * 46 46
+4 * 46 46 0 0 3 0 0 3
+2 * 46 0 46 0 0 3 0 0 3
+2 * 46 46
+1 * 46 46

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=10 0x404caa 450 
* * 2012 641 607 2 0 3 2 0 3 48 4 9
+5 * 10 10
+1 * 10 10

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +2 92 92
+4 * 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=92 0x404484 107 
* * 29044 8852 8304 25 3 4 25 3 4 944 57 180 22
+5 * 92 92
+1 * 92 92

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=10 0x4048f2 107 
* * 2292 741 707 4 0 3 4 0 3 48 4 9
+5 * 10 10
+1 * 10 10

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +2 92 92 0 1 0 0 1
+4 * 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=92 0x404a36 450 
* * 26468 7932 7384 24 3 4 24 3 4 944 57 180 22
+5 * 92 92
+1 * 92 92

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +2 92 92
+4 * 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=92 0x40439c 107 
* * 29044 8852 8304 7 0 4 7 0 4 944 54 180
+5 * 92 92
+1 * 92 92

fn=(116)
0x40439c 107 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +10 92 92
+4 * 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=92 0x4047d7 -26 
* * 27756 8392 7844 7 0 4 7 0 4 944 54 180
+5 +1 92 92
+1 * 92 92

fn=(118)
0x4047d7 91 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +2 92 92
+4 * 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=92 0x4049e2 450 
* * 26468 7932 7384 7 0 4 7 0 4 944 54 180
+5 * 92 92
+1 * 92 92

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=10 0x404772 -25 
* * 2442 791 767 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(230)
calls=10 0x40465c -25 
* * 2442 791 767 5 0 3 5 0 3 48 4 9
+5 +1 10 10
+1 * 10 10

fn=(232)
0x4048f2 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(234)
calls=10 0x404af4 -26 
* * 2152 691 657 4 0 3 4 0 3 48 4 9
+5 +1 10 10
+1 * 10 10

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=10 0x404b99 -26 
* * 2152 691 657 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(274)
0x404b99 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=10 0x404cf0 450 
* * 2012 641 607 1 0 0 1 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fn=(50)
0x404484 107 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +10 92 92
+4 * 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(52)
calls=92 0x404829 -26 
* * 27756 8392 7844 25 3 4 25 3 4 944 57 180 22
+5 +1 92 92
+1 * 92 92

fn=(270)
0x404772 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(272)
calls=10 0x4049a6 107 
* * 2292 741 707 2 0 0 2 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 92 0 92 1 0 0 1
+1 * 92
+3 * 92 0 92
+1 * 92
+4 * 92 0 92
+4 +2 92 92
+4 * 92 92
+4 * 92
+3 * 92 92
+4 * 92 92
+3 * 92
+3 * 92
+3 * 92
+4 * 92
+3 * 92 92
+4 * 92 92
+3 -1 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=92 0x403d98 +11 
* * 12018 3240 2086 1 0 0 1 0 0 2228 9 184
+5 +1 92 92
+4 * 92
+3 * 92 0 92
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=92 0x403296 -82 
* * 2116 736 736 1 0 0 1
+5 * 92
jump=92 +28 * 
* * 
+28 * 92
+4 * 92 92
+1 * 92 92
+1 * 92 92

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 388 0 388 1 0 0 1
+1 * 388
+3 * 388 0 388 0 0 1 0 0 1
+4 +1 388 388
+4 * 388 388 0 1 1 0 1 1
+4 * 388
+3 * 388 388
+4 * 388 388
+3 * 388
+3 * 388
+3 * 388
+4 * 388 388
+1 * 388 388

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 +2 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=92 0x404236 -14 
* * 22204 4488 3950 23 13 8 23 13 8 3144 89 184
+5 * 92 92
+4 * 92 0 92
+3 +1 92 92
+4 * 92 92 0 1 0 0 1
+3 * 92 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+3 * 92 92
+4 * 92
+4 * 92
+3 * 92 92
+4 * 92 0 92
+4 +1 92 92
+1 * 92 92

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 +2 92 92
+4 * 92 92 0 1 0 0 1
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=92 0x403fbe -14 
* * 21780 4497 3794 23 7 15 23 7 15 3087 73 184
+5 * 92 92
+4 * 92 0 92
+3 +1 92 92
+4 * 92 92
+3 * 92 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+3 * 92 92
+4 * 92
+4 * 92
+3 * 92 92
+4 * 92 0 92
+4 +1 92 92
+1 * 92 92

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 46 0 46
+1 * 46
+3 * 46 0 0 1 0 0 1
+4 * 46 0 46
+4 * 46 0 46
+4 +2 46 46
+4 * 46 46
+4 * 46 46
+4 * 46 46
+4 * 46
+3 * 46 0 0 0 0 0 0 0 0 46
jcnd=5/46 +51 +10 
* * 
+2 +3 41 41
+4 * 41 41
+4 * 41 41
+4 -1 41 41
+4 * 41
+3 * 41
+3 * 41 0 41
cfi=(3)
cfn=(264)
calls=41 0x4036b1 215 
* * 1558 533 574 0 3 1 0 3 1 41
+5 +2 41 41
+4 * 41 41
+4 * 41
+4 * 41 41
+4 * 41 0 41
+4 * 41
jump=41 +36 +8 
* * 
+2 +6 5 5
+4 * 5
+3 * 5 0 5
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=5 0x4039c4 556 
* * 115 45 35
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=5 0x4036de 318 
* * 6949 2145 1853 18 4 7 18 4 7 390 29 29
+5 +2 46 46
+1 * 46 46

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 199 0 199 1 0 0 1
+1 * 199
+3 * 199 0 199 1 0 0 1
+4 +1 199 199
+4 * 199 199
+1 * 199 199

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+3 * 92 0 92
+4 * 92
+4 * 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=92 0x404380 726 
* * 920 460 368
+5 * 92 92
+4 * 92 92
+1 * 92 92

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 92 0 92
+1 * 92
+3 * 92 0 92
+1 * 92
+4 * 92 0 92 1 0 0 1
+4 +2 92 92
+4 * 92
+3 * 92 0 92
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=92 0x40325e 113 
* * 552 276 184
+5 * 92
+3 * 92 92
+4 * 92 92
+4 * 92 92
+4 * 92 92
+3 -1 92
+3 * 92
+3 * 92 0 92
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=92 0x40326c 148 
* * 2852 920 1104 4 0 0 4
+5 +1 92 92
+4 * 92
+3 * 92 0 92
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=92 0x4031ec 159 
* * 16726 4968 3330 25 5 0 25 5 0 2216 33 184
+5 * 92
jump=92 +28 * 
* * 
+28 * 92 0 0 1 0 0 1
+4 * 92 92
+1 * 92 92
+1 * 92 92

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 97 0 97 1 0 0 1
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 * 97 0 97
+4 +2 97 97
+5 * 97 0 0 0 0 0 0 0 0 97
+2 +1 97 97
+4 * 97 97
+4 * 97 97
+4 * 97
+3 * 97
+3 * 97 0 97
cfi=(5)
cfn=(160)
calls=97 0x4044d6 -65 
* * 11092 2797 1755 22 6 0 22 6 0 2225 34 194
+5 +1 97 97
+1 * 97 97

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 92 0 92
+1 * 92
+3 * 92 0 92
+1 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=92 0x4043ca -45 
* * 3312 1196 1288 4 0 4 4 0 4
+5 +1 92 92 0 1 0 0 1
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(20)
calls=92 0x404412 +43 
* * 24504 5592 4594 24 13 8 24 13 8 3144 89 184
+5 * 92
jump=92 +28 * 
* * 
+28 * 92
+4 * 92 92
+1 * 92 92
+1 * 92 92

fn=(14)
0x4043ca 90 92 0 92 1 0 0 1
+1 * 92
+3 * 92
+4 * 92 0 92 0 0 1 0 0 1
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfi=(4)
cfn=(16)
calls=92 0x404804 +24 
* * 1656 552 644 2 0 1 2 0 1
+5 * 92 92
+4 * 92 0 92 0 0 2 0 0 2
+7 * 92 92
+4 * 92 0 92 1 0 0 1
+8 * 92 92
+4 * 92 0 92
+8 +1 92 92
+1 * 92 92

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 92 0 92 1 0 0 1
+1 * 92
+3 * 92 0 92
+2 * 92 0 92
+2 * 92 0 92
+1 * 92 0 0 1 0 0 1
+4 * 92 0 92
+4 * 92 0 92
+4 +2 92 92
+4 * 92
+3 * 92 0 92
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=92 0x4039fc 117 
* * 552 276 184 2 0 0 2
+5 * 92
+3 * 92 0 92
cfi=(3)
cfn=(84)
calls=92 0x4039ed -88 
* * 552 276 184
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(2)
calls=92 0x402d74 645 
* * 1196 552 184
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92
+3 * 92
+3 * 92 0 92 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=92 0x403a0a 134 
* * 29416 7441 6370 30 7 15 30 7 15 3087 73 184
+5 +4 92 92
+4 * 92
+3 * 92 0 92
cfn=(106)
calls=92 0x40325e 113 
* * 552 276 184 1 0 0 1
+5 * 92
+3 * 92 92
+4 * 92 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=92 0x403a98 565 
* * 2300 920 736 2 0 0 2
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(112)
calls=92 0x403a68 547 
* * 2300 920 736
+5 * 92
+3 * 92
+3 * 92
+3 * 92
+3 * 92 0 92
cfi=(11)
cfn=(114)
calls=92 0x403ac9 -60 
* * 30424 9312 8856 7 0 4 7 0 4 944 54 180
+5 -3 92 92
+4 * 92 0 92
+4 * 92
jump=92 +28 +4 
* * 
+28 +4 92
+4 * 92 92
+1 * 92 92
+2 * 92 92
+2 * 92 92
+1 * 92 92

fn=(188)
0x403d98 171 97 0 97 1 0 0 1
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 * 97 0 97
+4 +2 97 97
+5 * 97 0 0 0 0 0 0 0 0 97 5
+2 +1 97 97
+4 * 97 97
+4 * 97 97
+4 * 97
+3 * 97
+3 * 97 0 97
cfi=(5)
cfn=(190)
calls=97 0x40452a -65 
* * 11089 2823 1709 0 0 0 0 0 0 2240 11 194
+5 +1 97 97
+1 * 97 97

fn=(22)
0x404236 167 97 0 97 1 0 0 1
+1 * 97
+3 * 97
+4 * 97 0 97 1 0 0 1
+4 * 97 0 97
+4 0 97 97
+5 0 97 0 0 0 0 0 0 0 0 97
+2 0 97 97
+4 0 97 97
+4 0 97
+5 0 97
+3 0 97
+3 0 97 0 97
fi=(6) ???
cfi=(5)
cfn=(26)
calls=97 0x404730 99 
* 0 22086 4267 3820 21 17 13 21 17 13 3250 109 194
+5 0 97
fi=(6)
jump=97 +7 0 
* 0 
+7 0 97 97
+1 0 97 97

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 92 0 92 1 0 0 1
+1 * 92
+3 * 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+4 * 92 0 92
+4 * 92
+4 * 92 0 0 1 0 0 1
+4 * 92
+3 * 92
+3 * 92 0 92
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=92 0x404468 726 
* * 920 460 368 1 0 0 1
+5 * 92 92
+4 * 92 92
+1 * 92 92

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+3 * 92 0 92
+4 * 92
+4 * 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfi=(10)
cfn=(44)
calls=92 0x404468 726 
* * 920 460 368
+5 * 92 92
+4 * 92 92
+1 * 92 92

fn=(86)
0x403a0a 134 92 0 92
+1 * 92
+3 * 92 0 92
+1 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=92 0x4042e2 -45 
* * 3312 1196 1288 5 0 0 5
+5 +1 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92 1 0 0 1
cfn=(94)
calls=92 0x40432a +43 
* * 24080 5601 4438 24 7 15 24 7 15 3087 73 184
+5 * 92
jump=92 +28 * 
* * 
+28 * 92
+4 * 92 92
+1 * 92 92
+1 * 92 92

fn=(88)
0x4042e2 90 92 0 92 1 0 0 1
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92 1 0 0 1
cfi=(4)
cfn=(90)
calls=92 0x4047b2 +24 
* * 1656 552 644 3 0 0 3
+5 * 92 92
+4 * 92 0 92
+7 * 92 92
+4 * 92 0 92
+8 * 92 92
+4 * 92 0 92
+8 +1 92 92
+1 * 92 92

fn=(156)
0x4031ec 159 92 0 92 1 0 0 1
+1 * 92
+3 * 92 0 92
+1 * 92
+4 * 92 0 92
+4 +2 92 92
+4 * 92 92 0 1 0 0 1
+4 * 92
+3 * 92 92
+4 * 92 92
+3 * 92
+3 * 92
+3 * 92
+4 * 92
+3 * 92 92
+4 * 92 92
+3 -1 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(158)
calls=92 0x403ce6 +11 
* * 12034 3220 2134 22 5 0 22 5 0 2216 33 184
+5 +1 92 92
+4 * 92
+3 * 92 0 92
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=92 0x4031b8 -82 
* * 2116 736 736 1 0 0 1
+5 * 92
jump=92 +28 * 
* * 
+28 * 92
+4 * 92 92
+1 * 92 92
+1 * 92 92

fn=(172)
0x4031b8 79 92 0 92 1 0 0 1
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 92
+4 * 92
+3 * 92 0 92
cfi=(4)
cfn=(174)
calls=92 0x403ccc +42 
* * 1288 460 460
+5 * 92 92
+1 * 92 92

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=5 0x40404e 726 
* * 50 25 20 1 0 0 1
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=5 0x4045cc 650 
* * 160 55 55 1 0 0 1
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 5
+4 * 5
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(210)
calls=5 0x4045cc 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(246)
0x4039c4 556 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 204 0 204 1 0 0 1
+1 * 204
+3 * 204 0 204
+4 +1 204 204
+4 * 204 204 0 0 2 0 0 2
+4 * 204
+3 * 204 204
+4 * 204 204
+3 * 204
+3 * 204
+3 * 204
+4 * 204 204
+1 * 204 204

fn=(106)
0x40325e 113 199 0 199 1 0 0 1
+1 * 199
+3 * 199 0 199
+4 +1 199 199
+4 * 199 199
+1 * 199 199

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204)
calls=5 0x40404e 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5
+3 * 5 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(12)
cfn=(214)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(254)
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 102 0 102 1 0 0 1
+1 * 102
+3 * 102 0 102 0 0 1 0 0 1
+4 +1 102 102
+4 * 102 102
+1 * 102 102

fn=(82)
0x4039fc 117 102 0 102 1 0 0 1
+1 * 102
+3 * 102 0 102 1 0 0 1
+4 +1 102 102
+4 * 102 102
+1 * 102 102

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 46 0 46
+1 * 46
+3 * 46
+4 * 46 0 46
+4 * 46 0 46
+4 +2 46 46
+4 * 46 46
+4 * 46 46
+4 * 46 46
+4 * 46
+3 * 46 0 0 0 0 0 0 0 0 46 5
jcnd=5/46 +51 +10 
* * 
+2 +3 41 41
+4 * 41 41
+4 * 41 41
+4 -1 41 41
+4 * 41
+3 * 41
+3 * 41 0 41
cfi=(3)
cfn=(222)
calls=41 0x403373 215 
* * 1558 533 574 0 3 0 0 3 0 41
+5 +2 41 41
+4 * 41 41
+4 * 41
+4 * 41 41
+4 * 41 0 41
+4 * 41
jump=41 +36 +8 
* * 
+2 +6 5 5 0 1 0 0 1
+4 * 5
+3 * 5 0 5
cfn=(202)
calls=5 0x403688 556 
* * 115 45 35 2 0 0 2
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=5 0x4033a0 318 
* * 6671 2111 1811 23 4 6 23 4 6 340 10 29
+5 +2 46 46
+1 * 46 46

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 92 0 92 1 0 0 1
+1 * 92
+3 * 92 0 92
+2 * 92 0 92
+2 * 92 0 92
+1 * 92
+4 * 92 0 92 1 0 0 1
+4 * 92 0 92
+4 +2 92 92
+4 * 92
+3 * 92 0 92
cfn=(6)
calls=92 0x403b08 117 
* * 552 276 184 1 0 1 1 0 1
+5 * 92
+3 * 92 0 92
cfi=(3)
cfn=(8)
calls=92 0x403afa -88 
* * 552 276 184 1 0 0 1
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(10)
calls=92 0x402f54 645 
* * 1196 552 184 1 1 0 1 1
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92
+3 * 92
+3 * 92 0 92
cfn=(12)
calls=92 0x403b16 134 
* * 29840 7432 6526 29 13 12 29 13 12 3144 89 184
+5 +4 92 92 0 1 0 0 1
+4 * 92
+3 * 92 0 92
cfn=(40)
calls=92 0x40333c 113 
* * 552 276 184 2 0 0 2
+5 * 92
+3 * 92 92
+4 * 92 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(42)
calls=92 0x403ba4 565 
* * 2300 920 736 3 0 0 3
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(46)
calls=92 0x403b74 547 
* * 2300 920 736
+5 * 92
+3 * 92
+3 * 92
+3 * 92
+3 * 92 0 92 1 0 0 1
cfi=(11)
cfn=(48)
calls=92 0x403bd5 -60 
* * 30424 9312 8856 26 3 4 26 3 4 944 57 180 22
+5 -3 92 92
+4 * 92 0 92
+4 * 92
jump=92 +28 +4 
* * 
+28 +4 92
+4 * 92 92
+1 * 92 92
+2 * 92 92
+2 * 92 92
+1 * 92 92

fn=(108)
0x403a98 565 92 0 92 1 0 0 1
+1 * 92
+3 * 92
+4 * 92 0 92
+4 +1 92 92
+4 * 92 92
+4 * 92 0 92
+4 * 92
+4 * 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfi=(10)
cfn=(110)
calls=92 0x404380 726 
* * 920 460 368 1 0 0 1
+5 * 92 92
+4 * 92 92
+1 * 92 92

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 92 0 92
+1 * 92
+3 * 92 0 92
+1 * 92
+4 * 92 0 92 1 0 0 1
+4 +2 92 92
+4 * 92
+3 * 92 0 92
cfn=(40)
calls=92 0x40333c 113 
* * 552 276 184
+5 * 92
+3 * 92 92
+4 * 92 92
+4 * 92 92
+4 * 92 92
+3 -1 92
+3 * 92
+3 * 92 0 92
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=92 0x40334a 148 
* * 2852 920 1104 2 0 0 2
+5 +1 92 92
+4 * 92
+3 * 92 0 92
cfn=(186)
calls=92 0x4032ca 159 
* * 16710 4988 3282 3 0 0 3 0 0 2228 9 184
+5 * 92
jump=92 +28 * 
* * 
+28 * 92 0 0 1 0 0 1
+4 * 92 92
+1 * 92 92
+1 * 92 92

fn=(210)
0x4045cc 650 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(82)
calls=10 0x4039fc 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(212)
calls=10 0x4048c3 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(96)
0x403fbe 167 97 0 97 1 0 0 1
+1 * 97 0 0 1 0 0 1
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 0 97 97
+5 0 97 0 0 0 0 0 0 0 0 97
+2 0 97 97
+4 0 97 97
+4 0 97
+5 0 97
+3 0 97
+3 0 97 0 97
fi=(6)
cfi=(5)
cfn=(100)
calls=97 0x40461a 99 
* 0 21397 4248 3624 21 9 17 21 9 17 3146 78 194
+5 0 97
fi=(6)
jump=97 +7 0 
* 0 
+7 0 97 97
+1 0 97 97

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 3473 0 3473
+1 * 3473
+3 * 3473 0 3473
+4 * 3473 0 3473
+4 +1 3473 3473
+4 * 3473 3473
+3 * 3473 3473
+4 * 3473
+4 * 3473
+3 * 3473 3473
+1 * 3473 3473

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 3473 0 3473
+1 * 3473
+3 * 3473 0 3473 1 0 0 1
+4 * 3473 0 3473
+4 +1 3473 3473
+4 * 3473 3473
+3 * 3473 3473
+4 * 3473
+4 * 3473
+3 * 3473 3473
+1 * 3473 3473

fn=(192)
0x403296 79 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 92
+4 * 92
+3 * 92 0 92
cfi=(4)
cfn=(194)
calls=92 0x403d7e +42 
* * 1288 460 460 1 0 0 1
+5 * 92 92
+1 * 92 92

fn=(254)
0x40470e 650 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(6)
calls=10 0x403b08 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(256)
calls=10 0x404978 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fl=(12)
fn=(54)
0x404a36 450 92 0 92
+1 * 92
+3 * 92 0 92
+1 * 92
+4 * 92 0 92 1 0 0 1
+4 * 92 0 92
+4 * 92 0 92
+4 +10 92 92
+4 * 92
+3 * 92 0 92
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=92 0x404c38 288 
* * 1380 552 460 3 0 0 3
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(56)
calls=92 0x404c38 288 
* * 1380 552 460
+5 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=92 0x404c52 -36 
* * 21684 6276 5728 20 3 4 20 3 4 944 57 180 22
+5 +1 92
+4 * 92 92
+1 * 92 92
+1 * 92 92

fn=(60)
0x404c52 424 92 0 92
+1 * 92
+3 * 92 0 92
+2 * 92 0 92
+1 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +4 92 92
+4 * 92
+3 * 92 0 92
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=92 0x40492d 277 
* * 1380 552 460 2 0 0 2
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=92 0x404d9d 277 
* * 2300 828 736 2 0 1 2 0 1
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(66)
calls=92 0x404d9d 277 
* * 2300 828 736
+5 * 92
+3 * 92
+3 * 92
+3 * 92 0 92
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=92 0x404db7 -49 
* * 13128 3424 2876 15 3 3 15 3 3 944 57 180 22
+5 +1 92
+4 * 92 92
+1 * 92 92
+2 * 92 92
+1 * 92 92

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=10 0x404f37 -22 
* * 612 161 117 0 0 0 0 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(62)
0x40492d 277 122 0 122 1 0 0 1
+1 * 122
+3 * 122
+4 * 122 0 122
+4 +1 122 122
+4 * 122
+3 * 122 0 122 1 0 0 1
cfi=(13)
cfn=(64)
calls=122 -33 -66 
* * 732 366 244
+5 * 122 122
+1 * 122 122

fn=(66)
0x404d9d 277 184 0 184
+1 * 184
+3 * 184
+4 * 184 0 184
+4 +1 184 184
+4 * 184
+3 * 184 0 184
cfi=(13)
cfn=(68)
calls=184 0x404f1a -58 
* * 2944 1104 920 2 0 1 2 0 1
+5 * 184 184
+1 * 184 184

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 10 0 10
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=10 0x404878 277 
* * 150 60 50 0 0 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=10 0x404f9c -49 
* * 762 211 177 0 0 2 0 0 2 48 4 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(214)
0x4045ee 216 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 +5 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +8 +2 
* * 
+8 +2 10 10
+4 +1 10 10
+1 * 10 10

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(130)
calls=20 0x40486a -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(282)
calls=10 0x404fcd -49 
* * 762 211 177 0 0 0 0 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(120)
0x4049e2 450 92 0 92
+1 * 92
+3 * 92 0 92
+1 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +10 92 92
+4 * 92
+3 * 92 0 92
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=92 0x404bc6 288 
* * 1380 552 460 3 0 0 3
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(122)
calls=92 0x404bc6 288 
* * 1380 552 460
+5 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=92 0x404be0 -36 
* * 21684 6276 5728 4 0 4 4 0 4 944 54 180
+5 +1 92
+4 * 92 92
+1 * 92 92
+1 * 92 92

fn=(128)
0x404878 277 122 0 122
+1 * 122
+3 * 122
+4 * 122 0 122 1 0 0 1
+4 +1 122 122
+4 * 122
+3 * 122 0 122
cfi=(13)
cfn=(130)
calls=122 -33 -66 
* * 732 366 244 0 0 1 0 0 1
+5 * 122 122
+1 * 122 122

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 184 0 184
+1 * 184
+3 * 184
+4 * 184 0 184
+4 +1 184 184
+4 * 184
+3 * 184 0 184
cfi=(13)
cfn=(134)
calls=184 0x404e98 -58 
* * 2944 1104 920 2 0 0 2
+5 * 184 184
+1 * 184 184

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +8 92 0 92
+4 +3 92 92
+4 * 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=92 0x404eb5 -22 
* * 11748 2964 2324 1 0 4 1 0 4 944 54 180
+5 +1 92 92
+1 * 92 92

fn=(242)
0x404f9c 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(140)
calls=10 0x404eb5 -22 
* * 612 161 117 0 0 2 0 0 2 48 4 9
+5 +1 10 10
+1 * 10 10

fn=(276)
0x404cf0 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10
+3 * 10 0 10
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(278)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(280)
calls=10 0x404e40 -36 
* * 1492 461 427 1 0 0 1 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(278)
0x40469c 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(64)
calls=20 0x40491f -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(122)
0x404bc6 288 184 0 184 1 0 0 1
+1 * 184
+3 * 184
+4 * 184 0 184
+4 +1 184 184
+4 * 184
+3 * 184 0 184
cfi=(13)
cfn=(124)
calls=184 0x404d36 -77 
* * 1104 552 368 2 0 0 2
+5 * 184 184
+1 * 184 184

fn=(56)
0x404c38 288 184 0 184 1 0 0 1
+1 * 184
+3 * 184
+4 * 184 0 184 1 0 0 1
+4 +1 184 184
+4 * 184
+3 * 184 0 184
cfi=(13)
cfn=(58)
calls=184 0x404d8f -77 
* * 1104 552 368 1 0 0 1
+5 * 184 184
+1 * 184 184

fn=(74)
0x404f37 368 102 0 102
+1 * 102
+3 * 102
+4 * 102 0 102 1 0 0 1
+4 * 102 0 102
+4 * 102 0 102
+4 +2 102 102
+4 * 102 102
+4 * 102
+3 * 102
+3 * 102
+4 * 102 0 102
+4 +1 102 102
+5 * 102 0 0 0 0 0 0 0 0 102
jcnd=5/102 +33 +2 
* * 
+2 +1 97 97
+4 * 97
+8 * 97 97
+4 * 97 97
+4 * 97
+3 * 97 0 0 1 0 0 1
+3 * 97 0 97 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=97 0x3877c83840 0 
* * 9544 2023 1834 11 2 2 11 2 2 890 59 92 22
* * 97 97 0 1 1 0 1 1 0 0 0 97
+5 +1 102 102
+4 * 102
+8 * 102 102
+4 * 102
+3 +1 102 102
+1 * 102 102

fn=(140)
0x404eb5 368 102 0 102
+1 * 102
+3 * 102
+4 * 102 0 102 1 0 0 1
+4 * 102 0 102
+4 * 102 0 102 0 0 1 0 0 1
+4 +2 102 102
+4 * 102 102
+4 * 102
+3 * 102
+3 * 102
+4 * 102 0 102
+4 +1 102 102
+5 * 102 0 0 0 0 0 0 0 0 102
jcnd=5/102 +33 +2 
* * 
+2 +1 97 97
+4 * 97
+8 * 97 97
+4 * 97 97
+4 * 97
+3 * 97
+3 * 97 0 97
cob=(2)
cfi=(9)
cfn=(78)
calls=97 0x3877c83840 0 
* * 9544 2023 1834 0 0 5 0 0 5 890 58 92
* * 97 97 0 0 0 0 0 0 0 0 0 97
+5 +1 102 102
+4 * 102
+8 * 102 102
+4 * 102
+3 +1 102 102
+1 * 102 102

fn=(72)
0x404db7 379 92 0 92
+1 * 92
+3 * 92
+4 * 92 0 92 1 0 0 1
+4 * 92 0 92
+4 * 92 0 92
+4 +8 92 0 92
+4 +3 92 92
+4 * 92 92
+4 * 92 92
+4 * 92
+3 * 92
+3 * 92 0 92
cfn=(74)
calls=92 0x404f37 -22 
* * 11748 2964 2324 14 3 3 14 3 3 944 57 180 22
+5 +1 92 92
+1 * 92 92

fn=(126)
0x404be0 424 92 0 92
+1 * 92
+3 * 92 0 92
+2 * 92 0 92
+1 * 92
+4 * 92 0 92
+4 * 92 0 92
+4 * 92 0 92
+4 +4 92 92
+4 * 92
+3 * 92 0 92
cfn=(128)
calls=92 0x404878 277 
* * 1380 552 460 1 0 0 1
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(132)
calls=92 0x404d44 277 
* * 2300 828 736 2 0 0 2
+5 * 92
+3 * 92 92
+4 * 92
+3 * 92 0 92
cfn=(132)
calls=92 0x404d44 277 
* * 2300 828 736
+5 * 92
+3 * 92
+3 * 92
+3 * 92 0 92
cfn=(138)
calls=92 0x404d5e -49 
* * 13128 3424 2876 1 0 4 1 0 4 944 54 180
+5 +1 92
+4 * 92 92
+1 * 92 92
+2 * 92 92
+1 * 92 92

fn=(236)
0x404caa 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(240)
calls=10 0x404de8 -36 
* * 1492 461 427 1 0 3 1 0 3 48 4 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fl=(10)
fn=(136)
0x404ffe 790 184 0 184 1 0 0 1
+1 * 184
+3 * 184 0 184
+4 +1 184 184
+4 * 184 184
+1 * 184 184

fn=(44)
0x404468 726 184 0 184
+1 * 184
+3 * 184 0 184
+4 * 184 0 184
+4 * 184 184
+4 * 184 184
+3 * 184 184
+4 * 184 0 184 1 0 0 1
+3 * 184 184
+1 * 184 184

fn=(248)
0x4042c6 726 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(204)
0x40404e 726 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(70)
0x40500c 790 184 0 184 1 0 0 1
+1 * 184
+3 * 184 0 184
+4 +1 184 184
+4 * 184 184
+1 * 184 184

fn=(110)
0x404380 726 184 0 184 1 0 0 1
+1 * 184
+3 * 184 0 184
+4 * 184 0 184
+4 * 184 184
+4 * 184 184
+3 * 184 184
+4 * 184 0 184
+3 * 184 184
+1 * 184 184

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 97 0 97 1 0 0 1
+1 * 97
+3 * 97 0 97
+4 * 97 0 97 1 0 0 1
+4 * 97 97
+1 * 97 97

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 97 0 97 1 0 0 1
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 +4 97 97
+4 * 97 97
+4 * 97
+3 * 97
+3 * 97 0 97
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=97 0x40454c -14 
* * 582 194 291 1 0 0 1
+5 +2 97 97
+1 * 97 97

fn=(150)
0x40326c 148 97 0 97
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 * 97 0 97
+4 +3 97 97 0 1 0 0 1
+4 * 97 97
+4 * 97
+3 * 97
+3 * 97 0 97
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=97 0x403d1a -29 
* * 1746 582 679 3 0 0 3
+5 +1 97 97
+1 * 97 97

fn=(180)
0x40334a 148 97 0 97
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 * 97 0 97
+4 +3 97 97
+4 * 97 97
+4 * 97
+3 * 97
+3 * 97 0 97
cfn=(182)
calls=97 0x403dcc -29 
* * 1746 582 679 2 0 0 2
+5 +1 97 97
+1 * 97 97

fn=(152)
0x403d1a 122 97 0 97 1 0 0 1
+1 * 97
+3 * 97
+4 * 97 0 97
+4 * 97 0 97
+4 +4 97 97
+4 * 97 97
+4 * 97
+3 * 97
+3 * 97 0 97
cfn=(154)
calls=97 0x4044f8 -14 
* * 582 194 291 2 0 0 2
+5 +2 97 97
+1 * 97 97

fn=(184)
0x40454c 112 97 0 97 1 0 0 1
+1 * 97
+3 * 97 0 97
+4 * 97 0 97
+4 * 97 97
+1 * 97 97

fl=(15)
fn=(250)
0x4036de 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x403799 +21 
* * 
0x403799 +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(252)
calls=5 0x404104 1336 
* * 905 335 235 4 0 0 4 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(258)
calls=5 0x4041ce 538 
* * 110 45 35
+5 * 5 0 5 1 0 0 1
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(260)
calls=5 0x4041f3 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(22)
calls=5 0x404236 167 
* * 1434 264 258 0 4 5 0 4 5 203 20 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5
+4 * 5 0 0 1 0 0 1
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(264)
calls=5 0x4036b1 215 
* * 190 65 70 0 0 2 0 0 2 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -88 
* * 1502 471 447 3 0 0 3 0 0 43 2 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 5
+3 -1 5 0 0 1 0 0 1
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(180)
calls=5 0x40334a 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(188)
calls=5 0x403d98 171 
* * 623 165 108 0 0 0 0 0 0 109 7 10
+5 +3 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x4039ba * 
* * 
0x4039ba * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fn=(206)
0x4033a0 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x40345e +21 
* * 
0x40345e +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(208)
calls=5 0x403e8c 1336 
* * 905 335 235 5 0 0 5 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(216)
calls=5 0x403f56 538 
* * 110 45 35
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(218)
calls=5 0x403f7b 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(96)
calls=5 0x403fbe 167 
* * 1169 236 218 0 2 2 0 2 2 156 5 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5 0 1 0 0 1
+4 * 5
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(222)
calls=5 0x403373 215 
* * 190 65 70 0 1 1 0 1 1 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -88 
* * 1502 471 447 6 0 3 6 0 3 43 4 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5
+4 * 5
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+3 -1 5
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(150)
calls=5 0x40326c 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(158)
calls=5 0x403ce6 171 
* * 610 159 106 1 1 0 1 1 0 106 1 10
+5 +3 5 5
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x40367f * 
* * 
0x40367f * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 46 0 46 1 0 0 1
+1 * 46
+3 * 46
+4 * 46 0 46
+4 * 46 0 46
+4 +1 46 46
+4 * 46
+3 * 46 0 46
cfi=(2)
cfn=(2)
calls=46 0x402d74 645 
* * 598 276 92
+5 * 46
+3 * 46 0 46
+3 +1 46 46
+6 * 46 0 46
+3 * 46 46
+6 * 46 0 46
+3 +1 46 46
+6 * 46 0 46 1 0 0 1
+3 * 46 46
+6 * 46 0 46
+3 +2 46 0 46
+7 * 46
jump=46 +86 * 
* * 
+2 +1 1127 1127
+3 * 1127
+3 * 1127 1127
+4 * 1127
+3 * 1127
+3 * 1127 0 1127
cfi=(2)
cfn=(144)
calls=1127 0x402d9a 770 
* * 12397 5635 3381
+5 * 1127 1127
+4 * 1127 1127
+5 * 1127
+4 * 1127 0 1127
+5 +1 1127 1127
+3 * 1127
+3 * 1127 1127
+4 * 1127
+3 * 1127
+3 * 1127 0 1127
cfi=(2)
cfn=(146)
calls=1127 0x402dba 770 
* * 12397 5635 3381 1 0 0 1
+5 * 1127 1127
+2 * 1127
+4 * 1127 1127
+5 * 1127
+4 * 1127 0 1127
+5 -2 1127 0 1127
+4 * 1127 1127
+3 * 1127
+3 * 1127 1127
+3 * 1127 0 0 0 0 0 0 0 0 1127 47
jcnd=1081/1127 -93 +1 
* * 
-9 * 46 46 0 1 0 0 1
+3 * 46
+3 * 46 46
+3 * 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 -93 +1 
* * 
+2 +4 46 46
+3 * 46
+3 * 46
+4 * 46 46 0 1 0 0 1
+5 * 46
+4 * 46
+3 * 46 0 46
+5 +1 46 46
+3 * 46
+3 * 46
+4 * 46 46
+5 * 46
+4 * 46
+3 * 46 0 46
+5 +1 46 0 46
+7 * 46
jump=46 0x4016ee * 
* * 
+2 +1 1127 1127
+3 * 1127
+3 * 1127 1127
+4 * 1127
+3 * 1127 0 0 1 0 0 1
+3 * 1127 0 1127
cfi=(2)
cfn=(146)
calls=1127 0x402dba 770 
* * 12397 5635 3381
+5 * 1127 1127
+2 * 1127
+4 * 1127 1127
+5 * 1127 0 1127
+5 +1 1127 1127
+3 * 1127
+3 * 1127 1127
+4 * 1127
+3 * 1127
+3 * 1127 0 1127
cfi=(2)
cfn=(144)
calls=1127 0x402d9a 770 
* * 12397 5635 3381
+5 * 1127 1127
+4 * 1127 1127
+5 * 1127 0 1127
+5 +1 1127 1127
+5 * 1127 1127
+5 * 1127 1127
+5 * 1127
+4 * 1127 0 1127
+5 +1 1127 1127
+5 * 1127 1127
+5 * 1127 1127
+5 * 1127
+4 * 1127 0 1127
+5 -4 1127 0 1127
+4 * 1127 1127
+3 * 1127
+3 * 1127 1127
+3 * 1127 0 0 0 0 0 0 0 0 1127 47
jcnd=1081/1127 0x401672 +1 
* * 
-9 * 46 46 0 1 0 0 1
+3 * 46
+3 * 46 46
+3 * 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 0x401672 +1 
* * 
+6 +6 46 46 0 1 0 0 1
+5 * 46 46
+5 * 46 0 46
+5 +2 46 46
+3 +1 46 0 46
+3 * 46 46
+5 * 46 46
+1 * 46 46

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 46
+7 * 46
+7 * 46
+3 * 46
+3 * 46 0 46
cfi=(2)
cfn=(4)
calls=46 0x4030b2 310 
* * 36301 10635 9533 65 17 16 65 17 16 2052 104 182 22
+5 * 46
+7 * 46
+7 * 46
+3 * 46
+3 * 46 0 46
cfi=(2)
cfn=(80)
calls=46 0x402ff4 310 
* * 36334 10662 9488 45 7 17 45 7 17 2068 102 182
+5 * 46 0 0 1 0 0 1
+7 * 46
+7 * 46
+3 * 46
+3 * 46 0 46
cfn=(142)
calls=46 0x401585 -52 
* * 120198 52992 27830 8 0 0 8 0 0 2346 94
+5 * 46 0 46
+8 * 46 46
+6 * 46 0 46
+6 * 46
+7 * 46
+3 * 46 0 46
cfi=(2)
cfn=(148)
calls=46 0x402df4 414 
* * 11169 3496 2585 31 5 0 31 5 0 1108 18 92
+5 * 46
+7 * 46
+3 * 46 0 46 1 0 0 1
cfi=(2)
cfn=(178)
calls=46 0x402e74 414 
* * 11161 3506 2561 7 0 0 7 0 0 1114 6 92
+5 +2 46
+7 * 46
+7 * 46
+3 * 46
+3 * 46 0 46
cfi=(2)
cfn=(4)
calls=46 0x4030b2 310 
* * 36015 10617 9437 2 0 1 2 0 1 2036 42 182
+5 * 46
+7 * 46
+7 * 46
+3 * 46
+3 * 46 0 46
cfi=(2)
cfn=(80)
calls=46 0x402ff4 310 
* * 35558 10599 9326 0 0 2 0 0 2 1963 25 182
+5 * 46 46
+6 * 46 0 0 1 0 0 1
+7 * 46
+7 * 46 0 46
+6 * 46 46
+8 * 46
+3 * 46
+3 * 46 0 46
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=46 0x401719 -33 
* * 56810 23552 13087 4 0 0 4 0 0 1173 47
+5 * 46 0 46
+8 * 46 46
+6 * 46 0 46
+6 * 46
+7 * 46 0 0 1 0 0 1
+3 * 46 0 46
cfi=(2)
cfn=(148)
calls=46 0x402df4 414 
* * 11169 3496 2585 0 0 0 0 0 0 1108 15 92
+5 * 46
+7 * 46
+3 * 46 0 46
cfi=(2)
cfn=(178)
calls=46 0x402e74 414 
* * 11161 3506 2561 0 0 0 0 0 0 1114 3 92
+5 +2 46 46
+7 * 46
+3 * 46 0 46
cfi=(2)
cfn=(2)
calls=46 0x402d74 645 
* * 598 276 92
+5 * 46 46
+6 * 46
+3 * 46
+3 * 46
+3 * 46 46
+7 * 46
+3 * 46 0 0 1 0 0 1
+3 * 46 0 46
cfi=(2)
cfn=(144)
calls=46 0x402d9a 770 
* * 506 230 138
+5 * 46
+3 * 46
+7 * 46
+3 * 46
+3 * 46 0 46
cfi=(2)
cfn=(200)
calls=46 0x402eda 901 
* * 9520 3267 2650 26 7 6 26 7 6 427 15 29
+5 +1 46 46
+7 * 46
+3 * 46 0 46
cfi=(2)
cfn=(10)
calls=46 0x402f54 645 
* * 598 276 92 0 1 0 0 1
+5 * 46 46
+6 * 46
+3 * 46
+3 * 46
+3 * 46 46
+7 * 46 0 0 1 0 0 1
+3 * 46
+3 * 46 0 46
cfi=(2)
cfn=(146)
calls=46 0x402dba 770 
* * 506 230 138
+5 * 46
+3 * 46
+7 * 46
+3 * 46
+3 * 46 0 46
cfi=(2)
cfn=(244)
calls=46 0x402f7a 901 
* * 9798 3301 2692 19 7 8 19 7 8 477 29 29
+5 +1 46 46
+7 * 46
+3 * 46 0 46
cfi=(2)
cfn=(10)
calls=46 0x402f54 645 
* * 598 276 92
+5 * 46 46
+6 * 46
+3 * 46
+3 * 46
+3 * 46 46 0 1 0 0 1
+7 * 46
+3 * 46
+3 * 46 0 46
cfi=(2)
cfn=(146)
calls=46 0x402dba 770 
* * 506 230 138
+5 * 46 46
+2 * 46
+4 * 46 46
+8 * 46 46
+8 * 46 0 46
+8 +1 46 46
+7 * 46
+3 * 46 0 46
cfi=(2)
cfn=(2)
calls=46 0x402d74 645 
* * 598 276 92
+5 * 46 46 0 1 0 0 1
+6 * 46
+3 * 46
+3 * 46
+3 * 46 46
+7 * 46
+3 * 46
+3 * 46 0 46
cfi=(2)
cfn=(144)
calls=46 0x402d9a 770 
* * 506 230 138
+5 * 46 46
+4 * 46 46
+8 * 46
+4 * 46 46
+8 * 46
+3 * 46 0 46
+8 +2 46 0 46
+7 -12 46 46
+8 * 46 46
+7 * 46 0 0 0 0 0 0 0 0 46 1
jcnd=1/46 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 46
+7 * 46
+3 * 46 0 46
cfi=(2)
cfn=(2)
calls=46 0x402d74 645 
* * 598 276 92 2 0 1 2 0 1
+5 * 46
+3 * 46 46
+7 * 46
+3 * 46 0 46
cfi=(2)
cfn=(2)
calls=46 0x402d74 645 
* * 598 276 92 0 1 0 0 1
+5 * 46
+3 * 46 0 0 0 0 0 0 0 0 46
+2 * 46 0 0 1 0 0 1
+5 * 46
jump=46 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 46
+2 * 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 46 0 46
+1 * 46
+3 * 46
+4 * 46 0 46
+4 * 46 0 46
+4 * 46 0 46
+5 +1 46 46
+4 * 46
+3 * 46 0 46
cfi=(2)
cfn=(2)
calls=46 0x402d74 645 
* * 598 276 92
+5 * 46
+3 * 46 0 46
+3 +1 46 46 0 1 0 0 1
+6 * 46 0 46
+3 * 46 46
+6 * 46 0 46
+3 +2 46 0 46
+7 * 46
jump=46 +86 * 
* * 
+2 +1 1127 1127
+3 * 1127
+3 * 1127 1127
+4 * 1127
+3 * 1127
+3 * 1127 0 1127
cfi=(2)
cfn=(144)
calls=1127 0x402d9a 770 
* * 12397 5635 3381
+5 * 1127 1127
+4 * 1127 1127
+5 * 1127
+4 * 1127 0 1127
+5 +1 1127 1127
+3 * 1127
+3 * 1127 1127
+4 * 1127
+3 * 1127
+3 * 1127 0 1127
cfi=(2)
cfn=(146)
calls=1127 0x402dba 770 
* * 12397 5635 3381
+5 * 1127 1127
+2 * 1127
+4 * 1127 1127
+5 * 1127
+4 * 1127 0 1127
+5 -2 1127 0 1127
+4 * 1127 1127
+3 * 1127
+3 * 1127 1127
+3 * 1127 0 0 0 0 0 0 0 0 1127 47
jcnd=1081/1127 -93 +1 
* * 
-9 * 46 46 0 1 0 0 1
+3 * 46
+3 * 46 46
+3 * 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 -93 +1 
* * 
+2 +4 46 46
+3 * 46
+3 * 46 0 0 1 0 0 1
+4 * 46 46
+5 * 46
+4 * 46
+3 * 46 0 46
+5 +1 46 46
+3 * 46
+3 * 46
+4 * 46 46
+5 * 46
+4 * 46
+3 * 46 0 46
+5 +1 46 46
+5 * 46 46
+5 * 46 46
+5 * 46 0 0 1 0 0 1
+4 * 46
+3 * 46 0 46
+5 +2 46 46
+3 +1 46 0 46
+3 * 46 46
+5 * 46 46
+1 * 46 46

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 194 0 194 1 0 0 1
+5 0 194 0 194
+5 0 194
+3 0 194 0 194
+5 0 194
+4 0 194 194 0 0 1 0 0 1
+7 0 194 194 0 0 1 0 0 1
+3 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
+6 0 194 194 0 0 1 0 0 1
+7 0 194 194 0 1 1 0 1 1
+4 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
+2 0 194 194 0 0 1 0 0 1
+3 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
jcnd=194/194 +97 0 
* 0 
+18 0 194
+3 0 194
+3 0 194 0 194
cfn=(38) _int_malloc
calls=194 0x3877c79a00 0 
* 0 27187 4053 4146 27 18 29 27 18 29 4068 185
+5 0 194
+3 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
+2 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
+2 0 194
+3 0 194 0 0 0 0 0 0 0 0 194 2
+2 0 194 194
+7 0 194 0 0 0 0 0 0 0 0 194
jcnd=194/194 +13 0 
* 0 
+13 0 194 0 194
+2 0 194 0 0 0 0 0 0 0 0 194
+6 0 194
+3 0 194 194
+4 0 194 194
+5 0 194 194
+5 0 194
+4 0 194 194
+1 0 194 0 0 1 0 0 1
+5 0 194 194 0 0 1 0 0 1
+7 0 194 0 0 0 0 0 0 0 0 194
jcnd=194/194 +14 0 
* 0 
+14 0 194 0 194 1 0 0 1
+3 0 194 0 0 0 0 0 0 0 0 194
+6 0 194
jump=194 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 194 0 194 1 0 0 1
+2 0 194
+3 0 194
+3 0 194 0 194
+2 0 194
+3 0 194 0 194
+1 0 194
+3 0 194 0 194
+1 0 194
+3 0 194
+4 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
+6 0 194
+4 0 194
+3 0 194 0 0 0 0 0 0 0 0 194 7
jcnd=10/194 0x3877c838d1 0 
* 0 
+2 0 184
+3 0 184
+3 0 184
+3 0 184
+3 0 184
+3 0 184 0 0 0 0 0 0 0 0 184
jcnd=184/184 +41 0 
* 0 
+41 0 184 0 0 1 0 0 1
+3 0 184 0 0 0 0 0 0 0 0 184
jcnd=184/184 0x3877c839c0 0 
* 0 
+24 0 184
+3 0 184
+4 0 184
+3 0 184
+3 0 184
+3 0 184
+3 0 184
+3 0 184 0 0 0 0 0 0 0 0 184 88
jcnd=96/184 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 98
+10 0 98 98 0 0 1 0 0 1
+3 0 98
+4 0 98 0 98
+3 0 98
+4 0 98
+4 0 98 0 0 0 0 0 0 0 0 98
jcnd=98/98 -18 0 
* 0 
-18 0 350 350
+3 0 350
+4 0 350 0 350
+3 0 350
+4 0 350
+4 0 350 0 0 0 0 0 0 0 0 350 11
jcnd=252/350 -18 0 
* 0 
+2 0 194
+4 0 194
+3 0 194 194
+1 0 194 194
+1 0 194 194
+2 0 194 194 0 1 0 0 1
+2 0 194 194
0x3877c839c0 0 184 0 0 1 0 0 1
+3 0 184
+3 0 184
+3 0 184
+4 0 184 0 184 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=184 0x3877c89b20 0 
* 0 7966 2628 2260 6 1 6 6 1 6 382 11 184 22
+5 0 184
jump=184 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 194 194 0 1 1 0 1 1
+7 0 194 194 0 0 1 0 0 1
+3 0 194
+3 0 194 0 0 1 0 0 1 0 0 194
+6 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
+6 0 194 194
+4 0 194
+4 0 194
+2 0 194 0 0 0 0 0 0 0 0 194
+2 0 194
+2 0 194
+7 0 194 0 0 0 0 0 0 0 0 194
jcnd=194/194 +14 0 
* 0 
+14 0 194
+2 0 194
cfn=(170) _int_free
calls=194 0x3877c78650 0 
* 0 16167 4068 2494 17 2 0 17 2 0 3495 45

fn=(170)
0x3877c78650 0 194 0 194 1 0 0 1
+2 0 194 0 194
+2 0 194 0 194
+2 0 194
+3 0 194 0 194
+2 0 194 0 194
+1 0 194 0 194
+1 0 194
+3 0 194
+4 0 194 194
+4 0 194 0 194
+4 0 194
+3 0 194
+4 0 194
+3 0 194
+3 0 194
+3 0 194 0 0 1 0 0 1 0 0 194
+6 0 194
+4 0 194 0 0 0 0 0 0 0 0 194
+6 0 194
+4 0 194 0 0 0 0 0 0 0 0 194
+6 0 194 194
+7 0 194 0 0 0 0 0 0 0 0 194 4
jcnd=70/194 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 70
+2 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70 0 1 0 0 1
+4 0 70
+3 0 70
+2 0 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 0x3877c78a40 0 
* 0 
+6 0 70 70
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+5 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 0x3877c7907c 0 
* 0 
+6 0 70 70
+5 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
+6 0 70
+4 0 70 0 0 1 0 0 1 0 0 70
+6 0 70
+4 0 70 70
+7 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+6 0 70
+2 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 0 0 0 0 0 0 0 70 1
jcnd=69/70 +70 0 
* 0 
+2 0 1 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +15 0 
* 0 
+15 0 70 70 0 1 0 0 1
+4 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+6 0 70 0 0 1 0 0 1 0 0 70 9
jcnd=6/70 0x3877c78a78 0 
* 0 
+6 0 64 64
+5 0 64 64
+5 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64
+6 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64
+6 0 64 64
+9 0 64 0 64
+4 0 64 0 64
+4 0 64 0 0 0 0 0 0 0 0 64 4
jcnd=56/64 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 64
+3 0 64
+4 0 64 64
+4 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64
-12 0 6
+4 0 6 6
+4 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 70
+7 0 70 0 70
+4 0 70 0 70
+4 0 70 0 0 0 0 0 0 0 0 70 26
jcnd=36/70 +18 0 
* 0 
+2 0 34 0 34
+8 0 34 0 34
+8 0 34 0 34
+4 0 34
+3 0 34 0 34 1 0 0 1
+4 0 34
+4 0 34 0 34
+4 0 34 0 34
+4 0 34
+7 0 34 0 0 0 0 0 0 0 0 34
jcnd=34/34 0x3877c78b20 0 
* 0 
-30 0 36 0 36
+4 0 36
+3 0 36 0 36
+4 0 36
+4 0 36 0 36
+4 0 36 0 36
+4 0 36
+7 0 36 0 0 0 0 0 0 0 0 36
jcnd=36/36 0x3877c78b20 0 
* 0 
0x3877c78a40 0 70 0 0 1 0 0 1
+5 0 70 70
+4 0 70 70
+7 0 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 +16 0 
* 0 
+16 0 70 0 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70
+3 0 70
jump=70 0x3877c7878f 0 
* 0 
+10 0 6 0 6
+6 0 6 0 0 1 0 0 1
jump=6 0x3877c78885 0 
* 0 
0x3877c78b20 0 70 70 0 1 0 0 1
+4 0 70
+2 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+7 0 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 +15 0 
* 0 
+15 0 70 0 70 1 0 0 1
+4 0 70 0 0 0 0 0 0 0 0 70
+6 0 70
+4 0 70 70
+1 0 70 70
+1 0 70 70
+2 0 70 70
+2 0 70 70
+2 0 70 70
+2 0 70 70
0x3877c7907c 0 70 70 0 1 1 0 1 1
+4 0 70 0 0 1 0 0 1
+7 0 70
+4 0 70
+3 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 184 0 0 1 0 0 1
+7 0 184
+3 0 184
+3 0 184 184 0 0 1 0 0 1
+4 0 184
+4 0 184 0 0 0 0 0 0 0 0 0 0 184 22
jump=16 0x3877c89be8 0 
* 0 
jump=20 0x3877c89bd0 0 
* 0 
jump=24 0x3877c89bb8 0 
* 0 
jump=24 +11 0 
* 0 
jump=24 0x3877c89c48 0 
* 0 
jump=26 0x3877c89c30 0 
* 0 
jump=24 0x3877c89c18 0 
* 0 
jump=26 0x3877c89c00 0 
* 0 
+11 0 24 24
+3 0 24
+4 0 24
+4 0 24 24
+4 0 24
+4 0 24 0 24
+4 0 24
+9 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
+4 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=8/24 0x3877c89c60 0 
* 0 
-40 0 246 246
+4 0 246 0 246
+4 0 246 246
+4 0 246 0 246
+4 0 246 246
+4 0 246 0 246 0 0 1 0 0 1
+4 0 246 246
+4 0 246 0 246
+4 0 246
+4 0 246
+4 0 246 0 0 0 0 0 0 0 0 246 7
jcnd=148/246 0x3877c89c60 0 
* 0 
-32 0 26 26
+4 0 26 0 26
+4 0 26 26
+4 0 26 0 26
+4 0 26 26
+4 0 26 0 26
+4 0 26
+4 0 26
+4 0 26 0 0 0 0 0 0 0 0 26
jcnd=10/26 0x3877c89c60 0 
* 0 
-24 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
+4 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=8/24 0x3877c89c60 0 
* 0 
-16 0 26 26 0 1 0 0 1
+4 0 26 0 26
+4 0 26 0 0 1 0 0 1
+4 0 26
+4 0 26 0 0 0 0 0 0 0 0 26 4
jcnd=10/26 0x3877c89c60 0 
* 0 
+6 0 162
+4 0 162 162
+3 0 162 0 162 0 0 1 0 0 1
+3 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162 0 0 4 0 0 4
+4 0 162 162
+4 0 162 0 162
+4 0 162
jump=162 -80 0 
* 0 
-30 0 16 16
+3 0 16 0 16
+3 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 -80 0 
* 0 
-24 0 20 20
+4 0 20 0 20
+4 0 20 20
+4 0 20 0 20
+4 0 20 20
+4 0 20 0 20
+4 0 20
jump=20 -80 0 
* 0 
-16 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
+8 0 24 24
+3 0 24
+4 0 24 0 0 1 0 0 1
+4 0 24
+4 0 24
jump=24 -39 0 
* 0 
+9 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
+6 0 20 20
+3 0 20
+4 0 20
jump=20 -72 0 
* 0 
+8 0 16
+4 0 16 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+4 0 16
jump=16 -99 0 
* 0 
+11 0 26 26 0 1 0 0 1
+3 0 26
+4 0 26
+4 0 26
+4 0 26
jump=26 0x3877c89b78 0 
* 0 
+9 0 24 24
+3 0 24
+4 0 24
+4 0 24
+4 0 24
jump=24 0x3877c89b70 0 
* 0 
+9 0 26 26
+3 0 26
+4 0 26
+4 0 26
+4 0 26
jump=26 0x3877c89b68 0 
* 0 
+9 0 24 24
+3 0 24
+4 0 24
+4 0 24
+4 0 24
jump=24 0x3877c89b60 0 
* 0 
+9 0 184 0 184 1 0 0 1
+3 0 184 184

fn=(104) alloc_perturb
0x3877c77180 0 84 84 0 1 0 0 1
+6 0 84
+2 0 84 0 0 0 0 0 0 0 0 84
+2 0 84 84

fn=(38)
0x3877c79a00 0 194 0 194 1 0 0 1
+2 0 194
+3 0 194 0 194
+2 0 194 0 194
+2 0 194 0 194 0 0 1 0 0 1
+2 0 194
+3 0 194 0 194
+1 0 194 0 194
+1 0 194
+4 0 194
+4 0 194 0 0 0 0 0 0 0 0 194
+6 0 194
+4 0 194
+6 0 194
+3 0 194
+4 0 194
+4 0 194
+4 0 194
+3 0 194 0 0 0 0 0 0 0 0 194
+6 0 194 194 0 1 1 0 1 1
+7 0 194 0 0 0 0 0 0 0 0 194 7
jcnd=72/194 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 110 110
+6 0 110
+4 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+3 0 110
+4 0 110 110
+1 0 110 110
+1 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
-14 0 84
+4 0 84 84
+1 0 84 84
+1 0 84 84
+2 0 84 84
+2 0 84 84
+2 0 84 84
+2 0 84 84
+7 0 89
+7 0 89 0 0 1 0 0 1 0 0 89
+2 0 89
+3 0 89
+5 0 89
+3 0 89
+4 0 89 0 89
+4 0 89
+2 0 89
+5 0 89 89 0 0 3 0 0 3
+4 0 89
+3 0 89 0 0 0 0 0 0 0 0 89
jcnd=89/89 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 89 0 0 1 0 0 1
+3 0 89
+3 0 89
+3 0 89
+4 0 89
+3 0 89
+4 0 89 0 89
+5 0 89
+3 0 89 0 89
+4 0 89 0 89
+4 0 89 0 89
+5 0 89
+3 0 89
+3 0 89
+3 0 89
+3 0 89
+4 0 89
+4 0 89 0 0 1 0 0 1
+4 0 89 0 89
+4 0 89
+4 0 89 0 89
+5 0 89 0 89
+5 0 89
+3 0 89
+3 0 89 0 89
+5 0 89
+5 0 89
+3 0 89 0 89
+4 0 89 0 89
+4 0 89
+6 0 89 0 89
+4 0 89 0 89
+5 0 89 0 0 1 0 0 1
+3 0 89
+3 0 89
+3 0 89
jump=89 +87 0 
* 0 
+8 0 59
+3 0 59
+4 0 59
+2 0 59
+2 0 59
+3 0 59
+3 0 59
+3 0 59
+2 0 59
+2 0 59
+5 0 59
+2 0 59 59
+4 0 59
+3 0 59
+4 0 59 0 59
+4 0 59 0 59 0 0 1 0 0 1
+8 0 59
+7 0 59 0 59
+4 0 59 0 59 0 0 1 0 0 1
+4 0 59 0 59
+4 0 59 0 0 0 0 0 0 0 0 59
-38 0 31
+3 0 31
+4 0 31 0 31
+4 0 31 0 31
+8 0 31
+7 0 31 0 31
+4 0 31 0 31
+4 0 31 0 31
+4 0 31 0 0 0 0 0 0 0 0 31
+6 0 179 179 0 1 0 0 1
+4 0 179
+3 0 179 0 0 0 0 0 0 0 0 179 2
jcnd=65/179 0x3877c79ef0 0 
* 0 
+6 0 114 114
+4 0 114 114 0 0 1 0 0 1
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
+6 0 114 114 0 1 1 0 1 1
+7 0 114 0 0 0 0 0 0 0 0 114
+6 0 114
+4 0 114
+7 0 114 0 0 0 0 0 0 0 0 114
+2 0 114
+3 0 114 0 0 0 0 0 0 0 0 114 28
jcnd=87/114 0x3877c79e28 0 
* 0 
+6 0 95
+3 0 95 0 95
+4 0 95 0 95
+5 0 95 0 0 0 0 0 0 0 0 95 5
jcnd=5/95 0x3877c7a090 0 
* 0 
+6 0 90
+7 0 90 0 0 0 0 0 0 0 0 90 4
jcnd=59/90 0x3877c79c50 0 
* 0 
+6 0 31 0 0 1 0 0 1
+3 0 31
+4 0 31
+4 0 31 0 0 0 0 0 0 0 0 31
+6 0 31
+3 0 31
+4 0 31
+2 0 31
+2 0 31
+3 0 31
+3 0 31
+8 0 31
+3 0 31
+2 0 31
+2 0 31
+4 0 31 31
+4 0 31
+3 0 31 0 0 1 0 0 1 0 0 31 3
jcnd=31/31 0x3877c79e15 0 
* 0 
0x3877c79e15 0 31 0 31
+4 0 31 0 31
+4 0 31
+3 0 31
jump=31 0x3877c79c73 0 
* 0 
+8 0 87 87 0 1 0 0 1
+4 0 87
+3 0 87 0 0 0 0 0 0 0 0 87 8
jcnd=35/87 0x3877c79ce1 0 
* 0 
+6 0 52 52
+5 0 52 0 0 0 0 0 0 0 0 52 5
jcnd=33/52 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 65 0 0 1 0 0 1
+7 0 65
+3 0 65 0 0 0 0 0 0 0 0 65
+6 0 65 65 0 1 0 0 1
+4 0 65
+3 0 65
+3 0 65
+2 0 65
+4 0 65
+3 0 65
+3 0 65
+2 0 65
+2 0 65
+2 0 65
+2 0 65 65
+8 0 65
+5 0 65
+5 0 65
+2 0 65 0 0 0 0 0 0 0 0 65
-2 0 36
+2 0 36 0 0 0 0 0 0 0 0 36
+2 0 101
+2 0 101 0 0 0 0 0 0 0 0 101 5
jcnd=68/101 +64 0 
* 0 
+2 0 33
+8 0 33
+3 0 33
+3 0 33 0 0 0 0 0 0 0 0 33
-6 0 33
+3 0 33
+3 0 33 0 0 0 0 0 0 0 0 33
+2 0 66
+2 0 66 66
+8 0 66
+2 0 66 0 0 0 0 0 0 0 0 66
jcnd=33/66 -20 0 
* 0 
+2 0 33
+2 0 33
+5 0 33
+3 0 33
+3 0 33
+2 0 33
+2 0 33
+5 0 33 0 0 0 0 0 0 0 0 33
+2 0 33
+2 0 33
+4 0 33
+2 0 33
+2 0 33 0 0 0 0 0 0 0 0 33 4
jcnd=6/33 -8 0 
* 0 
-8 0 389
+4 0 389
+2 0 389
+2 0 389 0 0 0 0 0 0 0 0 389 41
jcnd=322/389 -8 0 
* 0 
-2 0 68 0 0 1 0 0 1
+2 0 68 0 0 0 0 0 0 0 0 68 4
jcnd=61/68 -8 0 
* 0 
+2 0 101 101 0 0 5 0 0 5
+4 0 101 0 0 1 0 0 1
+3 0 101 0 0 0 0 0 0 0 0 101 31
jcnd=65/101 0x3877c7a1cf 0 
* 0 
+6 0 36
+2 0 36
+4 0 36
+2 0 36
+2 0 36
+2 0 36 0 36
+8 0 36
jump=36 0x3877c79f30 0 
* 0 
0x3877c7a090 0 5 0 0 1 0 0 1
+7 0 5 0 5
+6 0 5
+3 0 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 65 65 0 1 1 0 1 1
+4 0 65 65
+4 0 65
+3 0 65 65
+4 0 65
+4 0 65
+3 0 65
+3 0 65 65
+4 0 65 0 0 0 0 0 0 0 0 65
+6 0 65 65
+4 0 65 0 0 0 0 0 0 0 0 65
+6 0 65 65 0 1 0 0 1
+8 0 65 0 65
+4 0 65 0 65
+4 0 65 0 0 0 0 0 0 0 0 65 5
jcnd=32/65 +38 0 
* 0 
+2 0 33 33 0 0 2 0 0 2
+4 0 33
+3 0 33 0 0 0 0 0 0 0 0 33
+2 0 33 33
+5 0 33 0 0 0 0 0 0 0 0 33
+6 0 33 33
+4 0 33 0 33
+4 0 33 33
+4 0 33 0 33
+4 0 33
+4 0 33 0 0 0 0 0 0 0 0 33
-4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32 1
jcnd=1/32 0x3877c7a2e3 0 
* 0 
+6 0 64 64
+4 0 64 64 0 1 0 0 1
+4 0 64 0 0 0 0 0 0 0 0 64
+6 0 64
+4 0 64
+7 0 64 0 64 0 0 4 0 0 4
+4 0 64 0 64
+4 0 64 0 64
+4 0 64 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
+2 0 64 0 64
+5 0 64
+7 0 64 0 0 0 0 0 0 0 0 64 4
jcnd=57/64 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 57 0 0 1 0 0 1
+7 0 57 0 57
+4 0 57
+3 0 57
+3 0 57
+4 0 57
+3 0 57
+4 0 57
+3 0 57
+3 0 57
+4 0 57 0 57
+4 0 57 0 57
+4 0 57
jump=57 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 1
+7 0 1 0 1
+6 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +7 0 
* 0 
+7 0 65
+4 0 65 0 0 1 0 0 1
+3 0 65
+3 0 65 0 65
cfn=(104)
calls=65 0x3877c77180 0 
* 0 260 130 0 1 0 0 1 0 0 65
+5 0 65
+3 0 65
jump=65 0x3877c79ae3 0 
* 0 

totals: 396934 143358 96820 221 47 52 221 47 52 17126 501 1154 22
