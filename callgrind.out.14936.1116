version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1116


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1410372843 - 1410770003
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 706 0 0 1 0 0 1
+3 0 706 0 0 0 0 0 0 0 0 706
+2 0 706
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=706 0x3877c7b8b0 0 
* 0 77587 19785 10003 21 3 0 21 3 0 18835 330
* 0 706 706 0 1 1 0 1 1 0 0 0 706

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 706 0 706 1 0 0 1
+1 0 706
+5 0 706
+3 0 706 0 706
+1 0 706
+4 0 706 0 0 1 0 0 1
+3 0 706
+4 0 706
+3 0 706 0 706 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=706 0x3877c7aa50 0 
* 0 187009 26996 26488 46 36 42 46 36 42 31643 1034
* 0 706 706 0 1 1 0 1 1 0 0 0 706
+5 0 706
+3 0 706 0 0 0 0 0 0 0 0 706
jcnd=706/706 +96 0 
* 0 
+96 0 706 0 0 1 0 0 1
+4 0 706 706
+1 0 706 706
+1 0 706 706

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 173 0 173 1 0 0 1
+1 * 173
+3 * 173
+4 * 173 0 173
+4 * 173 0 173
+4 +1 173 173
+4 * 173
+3 * 173 0 173
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=173 0x402d74 645 
* * 2249 1038 346
+5 * 173
+3 * 173 0 173
+3 +1 173 173
+6 * 173 0 173
+3 * 173 173
+6 * 173 0 173
+3 +1 173 173
+6 * 173 0 173 1 0 0 1
+3 * 173 173
+6 * 173 0 173
+3 +2 173 0 173
+7 * 173
jump=173 +86 * 
* * 
+2 +1 15224 15224
+3 * 15224
+3 * 15224 15224
+4 * 15224
+3 * 15224
+3 * 15224 0 15224
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=15224 0x402d9a 770 
* * 167464 76120 45672
+5 * 15224 15224
+4 * 15224 15224
+5 * 15224
+4 * 15224 0 15224
+5 +1 15224 15224
+3 * 15224
+3 * 15224 15224
+4 * 15224
+3 * 15224
+3 * 15224 0 15224
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=15224 0x402dba 770 
* * 167464 76120 45672 1 0 0 1
+5 * 15224 15224
+2 * 15224
+4 * 15224 15224
+5 * 15224
+4 * 15224 0 15224
+5 -2 15224 0 15224
+4 * 15224 15224
+3 * 15224
+3 * 15224 15224
+3 * 15224 0 0 0 0 0 0 0 0 15224 175
jcnd=15051/15224 -93 +1 
* * 
-9 * 173 173 0 1 0 0 1
+3 * 173
+3 * 173 173
+3 * 173 0 0 0 0 0 0 0 0 173
jcnd=173/173 -93 +1 
* * 
+2 +4 173 173
+3 * 173
+3 * 173
+4 * 173 173 0 1 0 0 1
+5 * 173
+4 * 173
+3 * 173 0 173
+5 +1 173 173
+3 * 173
+3 * 173
+4 * 173 173
+5 * 173
+4 * 173
+3 * 173 0 173
+5 +1 173 0 173
+7 * 173
jump=173 0x4016ee * 
* * 
+2 +1 15224 15224
+3 * 15224
+3 * 15224 15224
+4 * 15224
+3 * 15224 0 0 1 0 0 1
+3 * 15224 0 15224
cfi=(2)
cfn=(146)
calls=15224 0x402dba 770 
* * 167464 76120 45672
+5 * 15224 15224
+2 * 15224
+4 * 15224 15224
+5 * 15224 0 15224
+5 +1 15224 15224
+3 * 15224
+3 * 15224 15224
+4 * 15224
+3 * 15224
+3 * 15224 0 15224
cfi=(2)
cfn=(144)
calls=15224 0x402d9a 770 
* * 167464 76120 45672
+5 * 15224 15224
+4 * 15224 15224
+5 * 15224 0 15224
+5 +1 15224 15224
+5 * 15224 15224
+5 * 15224 15224
+5 * 15224
+4 * 15224 0 15224
+5 +1 15224 15224
+5 * 15224 15224
+5 * 15224 15224
+5 * 15224
+4 * 15224 0 15224
+5 -4 15224 0 15224
+4 * 15224 15224
+3 * 15224
+3 * 15224 15224
+3 * 15224 0 0 0 0 0 0 0 0 15224 175
jcnd=15051/15224 0x401672 +1 
* * 
-9 * 173 173 0 1 0 0 1
+3 * 173
+3 * 173 173
+3 * 173 0 0 0 0 0 0 0 0 173
jcnd=173/173 0x401672 +1 
* * 
+6 +6 173 173 0 1 0 0 1
+5 * 173 173
+5 * 173 0 173
+5 +2 173 173
+3 +1 173 0 173
+3 * 173 173
+5 * 173 173
+1 * 173 173

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 173
+7 * 173
+7 * 173
+3 * 173
+3 * 173 0 173
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=173 0x4030b2 310 
* * 164127 46580 43192 65 21 16 65 21 16 10601 492 690 85
+5 * 173
+7 * 173
+7 * 173
+3 * 173
+3 * 173 0 173
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=173 0x402ff4 310 
* * 165097 46432 42411 48 8 29 48 8 29 10859 496 690
+5 * 173 0 0 1 0 0 1
+7 * 173
+7 * 173
+3 * 173
+3 * 173 0 173
cfn=(142)
calls=173 0x401585 -52 
* * 1594541 704629 368317 8 0 0 8 0 0 30794 350
+5 * 173 0 173
+8 * 173 173
+6 * 173 0 173
+6 * 173
+7 * 173
+3 * 173 0 173
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=173 0x402df4 414 
* * 42928 13459 9615 33 5 0 33 5 0 4675 146 346
+5 * 173
+7 * 173
+3 * 173 0 173 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=173 0x402e74 414 
* * 44980 14251 10171 7 0 0 7 0 0 5275 18 346
+5 +2 173
+7 * 173
+7 * 173
+3 * 173
+3 * 173 0 173
cfi=(2)
cfn=(4)
calls=173 0x4030b2 310 
* * 163788 46556 43088 2 1 1 2 1 1 10574 280 690
+5 * 173
+7 * 173
+7 * 173
+3 * 173
+3 * 173 0 173
cfi=(2)
cfn=(80)
calls=173 0x402ff4 310 
* * 164085 46363 42243 0 0 2 0 0 2 10701 260 690
+5 * 173 173
+6 * 173 0 0 1 0 0 1
+7 * 173
+7 * 173 0 173
+6 * 173 173
+8 * 173
+3 * 173
+3 * 173 0 173
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=173 0x401719 -33 
* * 740959 308286 170059 4 0 0 4 0 0 15397 175
+5 * 173 0 173
+8 * 173 173
+6 * 173 0 173
+6 * 173
+7 * 173 0 0 1 0 0 1
+3 * 173 0 173
cfi=(2)
cfn=(148)
calls=173 0x402df4 414 
* * 42928 13459 9615 0 0 0 0 0 0 4675 142 346
+5 * 173
+7 * 173
+3 * 173 0 173
cfi=(2)
cfn=(178)
calls=173 0x402e74 414 
* * 44980 14251 10171 0 0 0 0 0 0 5275 14 346
+5 +2 173 173
+7 * 173
+3 * 173 0 173
cfi=(2)
cfn=(2)
calls=173 0x402d74 645 
* * 2249 1038 346
+5 * 173 173
+6 * 173
+3 * 173
+3 * 173
+3 * 173 173
+7 * 173
+3 * 173 0 0 1 0 0 1
+3 * 173 0 173
cfi=(2)
cfn=(144)
calls=173 0x402d9a 770 
* * 1903 865 519
+5 * 173
+3 * 173
+7 * 173
+3 * 173
+3 * 173 0 173
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=173 0x402eda 901 
* * 21824 7794 6127 38 20 11 38 20 11 1092 68 41
+5 +1 173 173
+7 * 173
+3 * 173 0 173
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=173 0x402f54 645 
* * 2249 1038 346 0 1 0 0 1
+5 * 173 173
+6 * 173
+3 * 173
+3 * 173
+3 * 173 173
+7 * 173 0 0 1 0 0 1
+3 * 173
+3 * 173 0 173
cfi=(2)
cfn=(146)
calls=173 0x402dba 770 
* * 1903 865 519
+5 * 173
+3 * 173
+7 * 173
+3 * 173
+3 * 173 0 173
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=173 0x402f7a 901 
* * 21073 7576 5954 19 17 16 19 17 16 935 45 41
+5 +1 173 173
+7 * 173
+3 * 173 0 173
cfi=(2)
cfn=(10)
calls=173 0x402f54 645 
* * 2249 1038 346
+5 * 173 173
+6 * 173
+3 * 173
+3 * 173
+3 * 173 173 0 1 0 0 1
+7 * 173
+3 * 173
+3 * 173 0 173
cfi=(2)
cfn=(146)
calls=173 0x402dba 770 
* * 1903 865 519
+5 * 173 173
+2 * 173
+4 * 173 173
+8 * 173 173
+8 * 173 0 173
+8 +1 173 173
+7 * 173
+3 * 173 0 173
cfi=(2)
cfn=(2)
calls=173 0x402d74 645 
* * 2249 1038 346
+5 * 173 173 0 1 0 0 1
+6 * 173
+3 * 173
+3 * 173
+3 * 173 173
+7 * 173
+3 * 173
+3 * 173 0 173
cfi=(2)
cfn=(144)
calls=173 0x402d9a 770 
* * 1903 865 519
+5 * 173 173
+4 * 173 173
+8 * 173
+4 * 173 173
+8 * 173
+3 * 173 0 173
+8 +2 173 0 173
+7 -12 173 173
+8 * 173 173
+7 * 173 0 0 0 0 0 0 0 0 173 2
jcnd=1/173 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 173
+7 * 173
+3 * 173 0 173
cfi=(2)
cfn=(2)
calls=173 0x402d74 645 
* * 2249 1038 346 2 0 1 2 0 1
+5 * 173
+3 * 173 173
+7 * 173
+3 * 173 0 173
cfi=(2)
cfn=(2)
calls=173 0x402d74 645 
* * 2249 1038 346 0 1 0 0 1
+5 * 173
+3 * 173 0 0 0 0 0 0 0 0 173
+2 * 173 0 0 1 0 0 1
+5 * 173
jump=173 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 173
+2 * 173 0 0 0 0 0 0 0 0 173
jcnd=173/173 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 173 0 173
+1 * 173
+3 * 173
+4 * 173 0 173
+4 * 173 0 173
+4 * 173 0 173
+5 +1 173 173
+4 * 173
+3 * 173 0 173
cfi=(2)
cfn=(2)
calls=173 0x402d74 645 
* * 2249 1038 346
+5 * 173
+3 * 173 0 173
+3 +1 173 173 0 1 0 0 1
+6 * 173 0 173
+3 * 173 173
+6 * 173 0 173
+3 +2 173 0 173
+7 * 173
jump=173 +86 * 
* * 
+2 +1 15224 15224
+3 * 15224
+3 * 15224 15224
+4 * 15224
+3 * 15224
+3 * 15224 0 15224
cfi=(2)
cfn=(144)
calls=15224 0x402d9a 770 
* * 167464 76120 45672
+5 * 15224 15224
+4 * 15224 15224
+5 * 15224
+4 * 15224 0 15224
+5 +1 15224 15224
+3 * 15224
+3 * 15224 15224
+4 * 15224
+3 * 15224
+3 * 15224 0 15224
cfi=(2)
cfn=(146)
calls=15224 0x402dba 770 
* * 167464 76120 45672
+5 * 15224 15224
+2 * 15224
+4 * 15224 15224
+5 * 15224
+4 * 15224 0 15224
+5 -2 15224 0 15224
+4 * 15224 15224
+3 * 15224
+3 * 15224 15224
+3 * 15224 0 0 0 0 0 0 0 0 15224 175
jcnd=15051/15224 -93 +1 
* * 
-9 * 173 173 0 1 0 0 1
+3 * 173
+3 * 173 173
+3 * 173 0 0 0 0 0 0 0 0 173
jcnd=173/173 -93 +1 
* * 
+2 +4 173 173
+3 * 173
+3 * 173 0 0 1 0 0 1
+4 * 173 173
+5 * 173
+4 * 173
+3 * 173 0 173
+5 +1 173 173
+3 * 173
+3 * 173
+4 * 173 173
+5 * 173
+4 * 173
+3 * 173 0 173
+5 +1 173 173
+5 * 173 173
+5 * 173 173
+5 * 173 0 0 1 0 0 1
+4 * 173
+3 * 173 0 173
+5 +2 173 173
+3 +1 173 0 173
+3 * 173 173
+5 * 173 173
+1 * 173 173

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 346
+4 * 346
+3 * 346 0 346
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=346 0x4044cc -35 
* * 1730 692 692
+5 * 346 346
+1 * 346 346

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 346 0 346 1 0 0 1
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346 1 0 0 1
+4 +1 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=346 0x4049d4 -35 
* * 2076 692 1038 1 0 0 1
+5 * 346 346
+1 * 346 346

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 346 0 346 1 0 0 1
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 346
+4 * 346
+3 * 346 0 346
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=346 0x404520 -35 
* * 1730 692 692
+5 * 346 346
+1 * 346 346

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 346 0 346 1 0 0 1
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=346 0x404a28 -35 
* * 2076 692 1038 1 0 1 1 0 1
+5 * 346 346
+1 * 346 346

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 173 0 173
+1 * 173
+3 * 173
+4 * 173 0 173
+4 * 173 0 173
+4 * 173 0 173
+4 +1 173 173
+4 * 173 173
+4 * 173 173
+4 * 173
+3 * 173
+3 * 173 0 173
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=173 0x403df2 -87 
* * 4152 1384 1557 0 12 3 0 12 3 173
+5 * 173 173
+1 * 173 173

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 346 0 346 1 0 0 1
+1 * 346
+3 * 346 0 346
+4 * 346 346
+4 * 346 346
+1 * 346 346

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 173 0 173
+1 * 173
+3 * 173
+4 * 173 0 173
+4 * 173 0 173
+4 * 173 0 173
+4 +1 173 173
+4 * 173 173
+4 * 173 173
+4 * 173
+3 * 173
+3 * 173 0 173
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=173 0x40406a -87 
* * 4152 1384 1557 0 12 7 0 12 7 173
+5 * 173 173
+1 * 173 173

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 346 0 346
+1 * 346
+3 * 346 0 346
+4 * 346 346
+4 * 346 346
+1 * 346 346

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 416 0 416
+1 * 416
+3 * 416 0 416
+4 +1 416 416
+4 * 416 416
+1 * 416 416

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 692 0 692 1 0 0 1
+1 * 692
+3 * 692 0 692
+4 +1 692 692 0 1 0 0 1
+4 * 692 692
+1 * 692 692

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 416 0 416
+1 * 416
+3 * 416 0 416 0 0 1 0 0 1
+4 +1 416 416
+4 * 416 416
+1 * 416 416

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 +1 692
+4 * 692
+3 * 692 0 692
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=692 0x404ffe 790 
* * 4152 2076 1384 1 0 0 1
+5 * 692 692
+3 * 692 692
+1 * 692 692

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 692 0 692 1 0 0 1
+1 * 692
+3 * 692 0 692
+4 +1 692 692
+4 * 692 692
+1 * 692 692

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 +1 692
+4 * 692
+3 * 692 0 692 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=692 0x40500c 790 
* * 4152 2076 1384 1 0 0 1
+5 * 692 692
+3 * 692 692
+1 * 692 692

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 346 0 346
+1 * 346
+3 * 346 0 346
+4 * 346 0 346
+4 * 346 346
+4 * 346 346
+1 * 346 346

fl=(5)
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +1 353 353
+4 * 353
+3 * 353 0 353
cob=(5)
cfi=(8)
cfn=(164)
calls=353 0x387e4bb2f0 0 
* * 38137 9445 4444 23 4 0 23 4 0 9166 292 353
* * 353 353 0 1 1 0 1 1 0 0 0 353
+5 * 353 353
+1 * 353 353

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +1 353 353
+4 * 353
+3 * 353 0 353
cob=(5)
cfi=(8)
cfn=(164)
calls=353 0x387e4bb2f0 0 
* * 42274 11046 5559 0 0 0 0 0 0 10375 38 353
* * 353 353 0 0 0 0 0 0 0 0 0 353
+5 * 353 353
+1 * 353 353

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 353 0 353 1 0 0 1
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +2 353 353
+4 * 353
+3 * 353 0 353
cfn=(102)
calls=353 0x4048de +12 
* * 2118 706 706 1 0 0 1
+5 * 353 353
+4 * 353 0 0 1 0 0 1
+3 * 353
+2 * 353 0 0 0 0 0 0 0 0 353
jcnd=353/353 +7 +3 
* * 
+7 +3 353 353
+4 * 353
+4 * 353
+3 * 353 0 353
cob=(5)
cfi=(8)
cfn=(32)
calls=353 0x387e4bd0b0 0 
* * 100178 14857 13578 33 15 29 33 15 29 16450 528 353
* * 353 353 0 0 0 0 0 0 0 0 0 353
+5 +1 353 353
+1 * 353 353

fn=(18)
0x404a28 81 346 0 346 1 0 0 1
+1 * 346
+3 * 346 0 346 0 0 1 0 0 1
+4 * 346 0 346
+4 * 346 346
+1 * 346 346

fn=(92)
0x4049d4 81 346 0 346 1 0 0 1
+1 * 346
+3 * 346 0 346
+4 * 346 0 346
+4 * 346 346
+1 * 346 346

fn=(196)
0x404520 86 346 0 346
+1 * 346
+3 * 346 0 346
+4 * 346 346
+1 * 346 346

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 353 0 353 1 0 0 1
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353 1 0 0 1
+4 +2 353 353
+4 * 353
+3 * 353 0 353
cfn=(28)
calls=353 0x404992 +12 
* * 2118 706 706 1 0 0 1
+5 * 353 353
+4 * 353
+3 * 353
+2 * 353 0 0 0 0 0 0 0 0 353
jcnd=353/353 +7 +3 
* * 
+7 +3 353 353
+4 * 353
+4 * 353
+3 * 353 0 353
cob=(5)
cfi=(8)
cfn=(32)
calls=353 0x387e4bd0b0 0 
* * 98127 14963 15028 17 22 14 17 22 14 15899 506 353
* * 353 353 0 1 1 0 1 1 0 0 0 353
+5 +1 353 353
+1 * 353 353

fn=(102)
0x4048de 113 367 0 367 1 0 0 1
+1 * 367
+3 * 367 0 367
+4 +1 367
+10 * 367 367
+1 * 367 367

fn=(266)
0x40406a 129 173 0 173
+1 * 173
+3 * 173
+4 * 173 0 173
+4 * 173 0 173
+4 * 173 0 173
+4 +1 173 173
+4 * 173
+3 * 173
+5 * 173 0 173
cfi=(16)
cfn=(226)
calls=173 0x402d61 -20 
* * 1211 519 519
+5 * 173
+3 * 173 0 0 0 0 0 0 0 0 173
+2 * 173 173
+4 * 173 173 0 0 12 0 0 12
+2 * 173 0 173 0 0 7 0 0 7
+2 * 173 173
+1 * 173 173

fn=(28)
0x404992 113 367 0 367 1 0 0 1
+1 * 367
+3 * 367 0 367
+4 +1 367
+10 * 367 367
+1 * 367 367

fn=(176)
0x4044cc 86 346 0 346
+1 * 346
+3 * 346 0 346
+4 * 346 346
+1 * 346 346

fn=(224)
0x403df2 129 173 0 173
+1 * 173
+3 * 173
+4 * 173 0 173
+4 * 173 0 173
+4 * 173 0 173
+4 +1 173 173
+4 * 173
+3 * 173
+5 * 173 0 173
cfi=(16)
cfn=(226)
calls=173 0x402d61 -20 
* * 1211 519 519
+5 * 173
+3 * 173 0 0 0 0 0 0 0 0 173
+2 * 173 173
+4 * 173 173 0 0 12 0 0 12
+2 * 173 0 173 0 0 3 0 0 3
+2 * 173 173
+1 * 173 173

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +2 346 346
+4 * 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=346 0x404484 107 
* * 137852 44218 42146 25 3 4 25 3 4 4870 295 688 85
+5 * 346 346
+1 * 346 346

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +2 346 346 0 1 0 0 1
+4 * 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=346 0x404a36 450 
* * 128164 40758 38686 24 3 4 24 3 4 4870 295 688 85
+5 * 346 346
+1 * 346 346

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +2 346 346
+4 * 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=346 0x40439c 107 
* * 137852 44218 42146 7 1 7 7 1 7 4870 280 688
+5 * 346 346
+1 * 346 346

fn=(116)
0x40439c 107 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +10 346 346
+4 * 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=346 0x4047d7 -26 
* * 133008 42488 40416 7 1 7 7 1 7 4870 280 688
+5 +1 346 346
+1 * 346 346

fn=(118)
0x4047d7 91 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +2 346 346
+4 * 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=346 0x4049e2 450 
* * 128164 40758 38686 7 1 7 7 1 7 4870 280 688
+5 * 346 346
+1 * 346 346

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +10 346 346
+4 * 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(52)
calls=346 0x404829 -26 
* * 133008 42488 40416 25 3 4 25 3 4 4870 295 688 85
+5 +1 346 346
+1 * 346 346

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fl=(2)
fn=(2)
0x402d74 645 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412 0 1412 0 0 1 0 0 1
+4 +1 1412 1412
+4 * 1412 1412 0 1 1 0 1 1
+4 * 1412
+3 * 1412 1412
+4 * 1412 1412
+3 * 1412
+3 * 1412
+3 * 1412
+4 * 1412 1412
+1 * 1412 1412

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 +2 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=346 0x404236 -14 
* * 110829 19162 18876 23 18 8 23 18 8 16305 477 692
+5 * 346 346
+4 * 346 0 346
+3 +1 346 346
+4 * 346 346 0 1 0 0 1
+3 * 346 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+3 * 346 346
+4 * 346
+4 * 346
+3 * 346 346
+4 * 346 0 346
+4 +1 346 346
+1 * 346 346

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 +2 346 346
+4 * 346 346 0 1 0 0 1
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=346 0x403fbe -14 
* * 112096 18821 17250 26 7 24 26 7 24 16690 476 692
+5 * 346 346
+4 * 346 0 346
+3 +1 346 346
+4 * 346 346
+3 * 346 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+3 * 346 346
+4 * 346
+4 * 346
+3 * 346 346
+4 * 346 0 346
+4 +1 346 346
+1 * 346 346

fn=(244)
0x402f7a 901 173 0 173
+1 * 173
+3 * 173 0 0 1 0 0 1
+4 * 173 0 173
+4 * 173 0 173
+4 +2 173 173
+4 * 173 173
+4 * 173 173
+4 * 173 173
+4 * 173
+3 * 173 0 0 0 0 0 0 0 0 173
jcnd=7/173 +51 +10 
* * 
+2 +3 166 166
+4 * 166 166
+4 * 166 166
+4 -1 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cfi=(3)
cfn=(264)
calls=166 0x4036b1 215 
* * 6308 2158 2324 0 11 4 0 11 4 166
+5 +2 166 166
+4 * 166 166
+4 * 166
+4 * 166 166
+4 * 166 0 166
+4 * 166
jump=166 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10134 3134 2716 18 6 12 18 6 12 596 45 41
+5 +2 173 173
+1 * 173 173

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 713 0 713 1 0 0 1
+1 * 713
+3 * 713 0 713 1 0 0 1
+4 +1 713 713
+4 * 713 713
+1 * 713 713

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+3 * 346 0 346
+4 * 346
+4 * 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=346 0x404380 726 
* * 3460 1730 1384
+5 * 346 346
+4 * 346 346
+1 * 346 346

fn=(148)
0x402df4 414 346 0 346
+1 * 346
+3 * 346 0 346
+1 * 346
+4 * 346 0 346 1 0 0 1
+4 +2 346 346
+4 * 346
+3 * 346 0 346
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=346 0x40325e 113 
* * 2076 1038 692
+5 * 346
+3 * 346 346
+4 * 346 346
+4 * 346 346
+4 * 346 346
+3 -1 346
+3 * 346
+3 * 346 0 346
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=346 0x40326c 148 
* * 10726 3460 4152 4 0 0 4
+5 +1 346 346
+4 * 346
+3 * 346 0 346
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=346 0x4031ec 159 
* * 64750 19306 12310 27 5 0 27 5 0 9350 288 692
+5 * 346
jump=346 +28 * 
* * 
+28 * 346 0 0 1 0 0 1
+4 * 346 346
+1 * 346 346
+1 * 346 346

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 353 0 353 1 0 0 1
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +2 353 353
+5 * 353 0 0 0 0 0 0 0 0 353
+2 +1 353 353
+4 * 353 353
+4 * 353 353
+4 * 353
+3 * 353
+3 * 353 0 353
cfi=(5)
cfn=(160)
calls=353 0x4044d6 -65 
* * 42373 10857 6209 24 5 0 24 5 0 9166 292 706
+5 +1 353 353
+1 * 353 353

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 346 0 346
+1 * 346
+3 * 346 0 346
+1 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=346 0x4043ca -45 
* * 12456 4498 4844 4 0 4 4 0 4
+5 +1 346 346 0 1 0 0 1
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(20)
calls=346 0x404412 +43 
* * 119479 23314 21298 24 18 8 24 18 8 16305 477 692
+5 * 346
jump=346 +28 * 
* * 
+28 * 346
+4 * 346 346
+1 * 346 346
+1 * 346 346

fn=(14)
0x4043ca 90 346 0 346 1 0 0 1
+1 * 346
+3 * 346
+4 * 346 0 346 0 0 1 0 0 1
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfi=(4)
cfn=(16)
calls=346 0x404804 +24 
* * 6228 2076 2422 2 0 1 2 0 1
+5 * 346 346
+4 * 346 0 346 0 0 2 0 0 2
+7 * 346 346
+4 * 346 0 346 1 0 0 1
+8 * 346 346
+4 * 346 0 346
+8 +1 346 346
+1 * 346 346

fn=(80)
0x402ff4 310 346 0 346 1 0 0 1
+1 * 346
+3 * 346 0 346
+2 * 346 0 346
+2 * 346 0 346
+1 * 346 0 0 1 0 0 1
+4 * 346 0 346
+4 * 346 0 346
+4 +2 346 346
+4 * 346
+3 * 346 0 346
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=346 0x4039fc 117 
* * 2076 1038 692 2 0 0 2
+5 * 346
+3 * 346 0 346
cfi=(3)
cfn=(84)
calls=346 0x4039ed -88 
* * 2076 1038 692
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(2)
calls=346 0x402d74 645 
* * 4498 2076 692
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346
+3 * 346
+3 * 346 0 346 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=346 0x403a0a 134 
* * 140814 29893 26938 33 7 24 33 7 24 16690 476 692
+5 +4 346 346
+4 * 346
+3 * 346 0 346
cfn=(106)
calls=346 0x40325e 113 
* * 2076 1038 692 1 0 0 1
+5 * 346
+3 * 346 346
+4 * 346 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=346 0x403a98 565 
* * 8650 3460 2768 2 0 0 2
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(112)
calls=346 0x403a68 547 
* * 8650 3460 2768
+5 * 346
+3 * 346
+3 * 346
+3 * 346
+3 * 346 0 346
cfi=(11)
cfn=(114)
calls=346 0x403ac9 -60 
* * 143042 45948 44222 7 1 7 7 1 7 4870 280 688
+5 -3 346 346
+4 * 346 0 346
+4 * 346
jump=346 +28 +4 
* * 
+28 +4 346
+4 * 346 346
+1 * 346 346
+2 * 346 346
+2 * 346 346
+1 * 346 346

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 353 0 353 1 0 0 1
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +2 353 353
+5 * 353 0 0 0 0 0 0 0 0 353 7
+2 +1 353 353
+4 * 353 353
+4 * 353 353
+4 * 353
+3 * 353
+3 * 353 0 353
cfi=(5)
cfn=(190)
calls=353 0x40452a -65 
* * 46510 12458 7324 0 0 0 0 0 0 10375 38 706
+5 +1 353 353
+1 * 353 353

fn=(22)
0x404236 167 353 0 353 1 0 0 1
+1 * 353
+3 * 353
+4 * 353 0 353 1 0 0 1
+4 * 353 0 353
+4 0 353 353
+5 0 353 0 0 0 0 0 0 0 0 353
+2 0 353 353
+4 0 353 353
+4 0 353
+5 0 353
+3 0 353
+3 0 353 0 353
fi=(6) ???
cfi=(5)
cfn=(26)
calls=353 0x404730 99 
* 0 107305 17787 17852 21 23 14 21 23 14 16252 506 706
+5 0 353
fi=(6)
jump=353 +7 0 
* 0 
+7 0 353 353
+1 0 353 353

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 346 0 346 1 0 0 1
+1 * 346
+3 * 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+4 * 346 0 346
+4 * 346
+4 * 346 0 0 1 0 0 1
+4 * 346
+3 * 346
+3 * 346 0 346
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=346 0x404468 726 
* * 3460 1730 1384 1 0 0 1
+5 * 346 346
+4 * 346 346
+1 * 346 346

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+3 * 346 0 346
+4 * 346
+4 * 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfi=(10)
cfn=(44)
calls=346 0x404468 726 
* * 3460 1730 1384
+5 * 346 346
+4 * 346 346
+1 * 346 346

fn=(86)
0x403a0a 134 346 0 346
+1 * 346
+3 * 346 0 346
+1 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=346 0x4042e2 -45 
* * 12456 4498 4844 5 0 0 5
+5 +1 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346 1 0 0 1
cfn=(94)
calls=346 0x40432a +43 
* * 120746 22973 19672 27 7 24 27 7 24 16690 476 692
+5 * 346
jump=346 +28 * 
* * 
+28 * 346
+4 * 346 346
+1 * 346 346
+1 * 346 346

fn=(88)
0x4042e2 90 346 0 346 1 0 0 1
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346 1 0 0 1
cfi=(4)
cfn=(90)
calls=346 0x4047b2 +24 
* * 6228 2076 2422 3 0 0 3
+5 * 346 346
+4 * 346 0 346
+7 * 346 346
+4 * 346 0 346
+8 * 346 346
+4 * 346 0 346
+8 +1 346 346
+1 * 346 346

fn=(156)
0x4031ec 159 346 0 346 1 0 0 1
+1 * 346
+3 * 346 0 346
+1 * 346
+4 * 346 0 346
+4 +2 346 346
+4 * 346 346 0 1 0 0 1
+4 * 346
+3 * 346 346
+4 * 346 346
+3 * 346
+3 * 346
+3 * 346
+4 * 346
+3 * 346 346
+4 * 346 346
+3 -1 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(158)
calls=346 0x403ce6 +11 
* * 47104 12732 7812 24 5 0 24 5 0 9350 288 692
+5 +1 346 346
+4 * 346
+3 * 346 0 346
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=346 0x4031b8 -82 
* * 7958 2768 2768 1 0 0 1
+5 * 346
jump=346 +28 * 
* * 
+28 * 346
+4 * 346 346
+1 * 346 346
+1 * 346 346

fn=(172)
0x4031b8 79 346 0 346 1 0 0 1
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 346
+4 * 346
+3 * 346 0 346
cfi=(4)
cfn=(174)
calls=346 0x403ccc +42 
* * 4844 1730 1730
+5 * 346 346
+1 * 346 346

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10)
0x402f54 645 720 0 720 1 0 0 1
+1 * 720
+3 * 720 0 720
+4 +1 720 720
+4 * 720 720 0 0 2 0 0 2
+4 * 720
+3 * 720 720
+4 * 720 720
+3 * 720
+3 * 720
+3 * 720
+4 * 720 720
+1 * 720 720

fn=(106)
0x40325e 113 713 0 713 1 0 0 1
+1 * 713
+3 * 713 0 713
+4 +1 713 713
+4 * 713 713
+1 * 713 713

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 360 0 360 1 0 0 1
+1 * 360
+3 * 360 0 360 0 0 1 0 0 1
+4 +1 360 360
+4 * 360 360
+1 * 360 360

fn=(82)
0x4039fc 117 360 0 360 1 0 0 1
+1 * 360
+3 * 360 0 360 1 0 0 1
+4 +1 360 360
+4 * 360 360
+1 * 360 360

fn=(200)
0x402eda 901 173 0 173
+1 * 173
+3 * 173
+4 * 173 0 173
+4 * 173 0 173
+4 +2 173 173
+4 * 173 173
+4 * 173 173
+4 * 173 173
+4 * 173
+3 * 173 0 0 0 0 0 0 0 0 173 8
jcnd=7/173 +51 +10 
* * 
+2 +3 166 166
+4 * 166 166
+4 * 166 166
+4 -1 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cfi=(3)
cfn=(222)
calls=166 0x403373 215 
* * 6308 2158 2324 0 11 2 0 11 2 166
+5 +2 166 166
+4 * 166 166
+4 * 166
+4 * 166 166
+4 * 166 0 166
+4 * 166
jump=166 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 10885 3352 2889 35 9 9 35 9 9 753 60 41
+5 +2 173 173
+1 * 173 173

fn=(4)
0x4030b2 310 346 0 346 1 0 0 1
+1 * 346
+3 * 346 0 346
+2 * 346 0 346
+2 * 346 0 346
+1 * 346
+4 * 346 0 346 1 0 0 1
+4 * 346 0 346
+4 +2 346 346
+4 * 346
+3 * 346 0 346
cfn=(6)
calls=346 0x403b08 117 
* * 2076 1038 692 1 0 1 1 0 1
+5 * 346
+3 * 346 0 346
cfi=(3)
cfn=(8)
calls=346 0x403afa -88 
* * 2076 1038 692 1 0 0 1
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(10)
calls=346 0x402f54 645 
* * 4498 2076 692 1 1 0 1 1
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346
+3 * 346
+3 * 346 0 346
cfn=(12)
calls=346 0x403b16 134 
* * 139547 30234 28564 29 18 12 29 18 12 16305 477 692
+5 +4 346 346 0 1 0 0 1
+4 * 346
+3 * 346 0 346
cfn=(40)
calls=346 0x40333c 113 
* * 2076 1038 692 2 0 0 2
+5 * 346
+3 * 346 346
+4 * 346 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(42)
calls=346 0x403ba4 565 
* * 8650 3460 2768 3 0 0 3
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(46)
calls=346 0x403b74 547 
* * 8650 3460 2768
+5 * 346
+3 * 346
+3 * 346
+3 * 346
+3 * 346 0 346 1 0 0 1
cfi=(11)
cfn=(48)
calls=346 0x403bd5 -60 
* * 143042 45948 44222 26 3 4 26 3 4 4870 295 688 85
+5 -3 346 346
+4 * 346 0 346
+4 * 346
jump=346 +28 +4 
* * 
+28 +4 346
+4 * 346 346
+1 * 346 346
+2 * 346 346
+2 * 346 346
+1 * 346 346

fn=(108)
0x403a98 565 346 0 346 1 0 0 1
+1 * 346
+3 * 346
+4 * 346 0 346
+4 +1 346 346
+4 * 346 346
+4 * 346 0 346
+4 * 346
+4 * 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfi=(10)
cfn=(110)
calls=346 0x404380 726 
* * 3460 1730 1384 1 0 0 1
+5 * 346 346
+4 * 346 346
+1 * 346 346

fn=(178)
0x402e74 414 346 0 346
+1 * 346
+3 * 346 0 346
+1 * 346
+4 * 346 0 346 1 0 0 1
+4 +2 346 346
+4 * 346
+3 * 346 0 346
cfn=(40)
calls=346 0x40333c 113 
* * 2076 1038 692
+5 * 346
+3 * 346 346
+4 * 346 346
+4 * 346 346
+4 * 346 346
+3 -1 346
+3 * 346
+3 * 346 0 346
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=346 0x40334a 148 
* * 10726 3460 4152 2 0 0 2
+5 +1 346 346
+4 * 346
+3 * 346 0 346
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=346 0x4032ca 159 
* * 68854 20890 13422 3 0 0 3 0 0 10550 32 692
+5 * 346
jump=346 +28 * 
* * 
+28 * 346 0 0 1 0 0 1
+4 * 346 346
+1 * 346 346
+1 * 346 346

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 353 0 353 1 0 0 1
+1 * 353 0 0 1 0 0 1
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 0 353 353
+5 0 353 0 0 0 0 0 0 0 0 353
+2 0 353 353
+4 0 353 353
+4 0 353
+5 0 353
+3 0 353
+3 0 353 0 353
fi=(6)
cfi=(5)
cfn=(100)
calls=353 0x40461a 99 
* 0 109356 17681 16402 36 15 29 36 15 29 16803 528 706
+5 0 353
fi=(6)
jump=353 +7 0 
* 0 
+7 0 353 353
+1 0 353 353

fn=(144)
0x402d9a 770 46018 0 46018
+1 * 46018
+3 * 46018 0 46018
+4 * 46018 0 46018
+4 +1 46018 46018
+4 * 46018 46018
+3 * 46018 46018
+4 * 46018
+4 * 46018
+3 * 46018 46018
+1 * 46018 46018

fn=(146)
0x402dba 770 46018 0 46018
+1 * 46018
+3 * 46018 0 46018 1 0 0 1
+4 * 46018 0 46018
+4 +1 46018 46018
+4 * 46018 46018
+3 * 46018 46018
+4 * 46018
+4 * 46018
+3 * 46018 46018
+1 * 46018 46018

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 346
+4 * 346
+3 * 346 0 346
cfi=(4)
cfn=(194)
calls=346 0x403d7e +42 
* * 4844 1730 1730 1 0 0 1
+5 * 346 346
+1 * 346 346

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 346 0 346 1 0 0 1
+1 * 346
+3 * 346 0 346
+1 * 346
+4 * 346 0 346
+4 +2 346 346
+4 * 346 346
+4 * 346
+3 * 346 346
+4 * 346 346
+3 * 346
+3 * 346
+3 * 346
+4 * 346
+3 * 346 346
+4 * 346 346
+3 -1 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(188)
calls=346 0x403d98 +11 
* * 51208 14316 8924 1 0 0 1 0 0 10550 32 692
+5 +1 346 346
+4 * 346
+3 * 346 0 346
cfn=(192)
calls=346 0x403296 -82 
* * 7958 2768 2768 1 0 0 1
+5 * 346
jump=346 +28 * 
* * 
+28 * 346
+4 * 346 346
+1 * 346 346
+1 * 346 346

fl=(12)
fn=(54)
0x404a36 450 346 0 346
+1 * 346
+3 * 346 0 346
+1 * 346
+4 * 346 0 346 1 0 0 1
+4 * 346 0 346
+4 * 346 0 346
+4 +10 346 346
+4 * 346
+3 * 346 0 346
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=346 0x404c38 288 
* * 5190 2076 1730 3 0 0 3
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(56)
calls=346 0x404c38 288 
* * 5190 2076 1730
+5 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=346 0x404c52 -36 
* * 110172 34530 32458 20 3 4 20 3 4 4870 295 688 85
+5 +1 346
+4 * 346 346
+1 * 346 346
+1 * 346 346

fn=(60)
0x404c52 424 346 0 346
+1 * 346
+3 * 346 0 346
+2 * 346 0 346
+1 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +4 346 346
+4 * 346
+3 * 346 0 346
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=346 0x40492d 277 
* * 5190 2076 1730 2 0 0 2
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=346 0x404d9d 277 
* * 8650 3114 2768 2 0 1 2 0 1
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(66)
calls=346 0x404d9d 277 
* * 8650 3114 2768
+5 * 346
+3 * 346
+3 * 346
+3 * 346 0 346
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=346 0x404db7 -49 
* * 77994 23804 21732 15 3 3 15 3 3 4870 295 688 85
+5 +1 346
+4 * 346 346
+1 * 346 346
+2 * 346 346
+1 * 346 346

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 388 0 388 1 0 0 1
+1 * 388
+3 * 388
+4 * 388 0 388
+4 +1 388 388
+4 * 388
+3 * 388 0 388 1 0 0 1
cfi=(13)
cfn=(64)
calls=388 -33 -66 
* * 2328 1164 776
+5 * 388 388
+1 * 388 388

fn=(66)
0x404d9d 277 692 0 692
+1 * 692
+3 * 692
+4 * 692 0 692
+4 +1 692 692
+4 * 692
+3 * 692 0 692
cfi=(13)
cfn=(68)
calls=692 0x404f1a -58 
* * 11072 4152 3460 2 0 1 2 0 1
+5 * 692 692
+1 * 692 692

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 346 0 346
+1 * 346
+3 * 346 0 346
+1 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +10 346 346
+4 * 346
+3 * 346 0 346
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=346 0x404bc6 288 
* * 5190 2076 1730 3 0 0 3
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(122)
calls=346 0x404bc6 288 
* * 5190 2076 1730
+5 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=346 0x404be0 -36 
* * 110172 34530 32458 4 1 7 4 1 7 4870 280 688
+5 +1 346
+4 * 346 346
+1 * 346 346
+1 * 346 346

fn=(128)
0x404878 277 388 0 388
+1 * 388
+3 * 388
+4 * 388 0 388 1 0 0 1
+4 +1 388 388
+4 * 388
+3 * 388 0 388
cfi=(13)
cfn=(130)
calls=388 -33 -66 
* * 2328 1164 776 0 0 1 0 0 1
+5 * 388 388
+1 * 388 388

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 692 0 692
+1 * 692
+3 * 692
+4 * 692 0 692
+4 +1 692 692
+4 * 692
+3 * 692 0 692
cfi=(13)
cfn=(134)
calls=692 0x404e98 -58 
* * 11072 4152 3460 2 0 0 2
+5 * 692 692
+1 * 692 692

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +8 346 0 346
+4 +3 346 346
+4 * 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=346 0x404eb5 -22 
* * 72804 22074 19656 1 1 7 1 1 7 4870 280 688
+5 +1 346 346
+1 * 346 346

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 +1 692 692
+4 * 692
+3 * 692 0 692
cfi=(13)
cfn=(124)
calls=692 0x404d36 -77 
* * 4152 2076 1384 2 0 0 2
+5 * 692 692
+1 * 692 692

fn=(56)
0x404c38 288 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692 1 0 0 1
+4 +1 692 692
+4 * 692
+3 * 692 0 692
cfi=(13)
cfn=(58)
calls=692 0x404d8f -77 
* * 4152 2076 1384 1 0 0 1
+5 * 692 692
+1 * 692 692

fn=(74)
0x404f37 368 360 0 360
+1 * 360
+3 * 360
+4 * 360 0 360 1 0 0 1
+4 * 360 0 360
+4 * 360 0 360
+4 +2 360 360
+4 * 360 360
+4 * 360
+3 * 360
+3 * 360
+4 * 360 0 360
+4 +1 360 360
+5 * 360 0 0 0 0 0 0 0 0 360
jcnd=7/360 +33 +2 
* * 
+2 +1 353 353
+4 * 353
+8 * 353 353
+4 * 353 353
+4 * 353
+3 * 353 0 0 1 0 0 1
+3 * 353 0 353 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=353 0x3877c83840 0 
* * 63848 18449 17748 11 2 5 11 2 5 4586 298 348 85
* * 353 353 0 1 1 0 1 1 0 0 0 353
+5 +1 360 360
+4 * 360
+8 * 360 360
+4 * 360
+3 +1 360 360
+1 * 360 360

fn=(140)
0x404eb5 368 360 0 360
+1 * 360
+3 * 360
+4 * 360 0 360 1 0 0 1
+4 * 360 0 360
+4 * 360 0 360 0 0 1 0 0 1
+4 +2 360 360
+4 * 360 360
+4 * 360
+3 * 360
+3 * 360
+4 * 360 0 360
+4 +1 360 360
+5 * 360 0 0 0 0 0 0 0 0 360
jcnd=7/360 +33 +2 
* * 
+2 +1 353 353
+4 * 353
+8 * 353 353
+4 * 353 353
+4 * 353
+3 * 353
+3 * 353 0 353
cob=(2)
cfi=(9)
cfn=(78)
calls=353 0x3877c83840 0 
* * 63848 18449 17748 0 1 8 0 1 8 4586 284 348
* * 353 353 0 0 0 0 0 0 0 0 0 353
+5 +1 360 360
+4 * 360
+8 * 360 360
+4 * 360
+3 +1 360 360
+1 * 360 360

fn=(72)
0x404db7 379 346 0 346
+1 * 346
+3 * 346
+4 * 346 0 346 1 0 0 1
+4 * 346 0 346
+4 * 346 0 346
+4 +8 346 0 346
+4 +3 346 346
+4 * 346 346
+4 * 346 346
+4 * 346
+3 * 346
+3 * 346 0 346
cfn=(74)
calls=346 0x404f37 -22 
* * 72804 22074 19656 14 3 3 14 3 3 4870 295 688 85
+5 +1 346 346
+1 * 346 346

fn=(126)
0x404be0 424 346 0 346
+1 * 346
+3 * 346 0 346
+2 * 346 0 346
+1 * 346
+4 * 346 0 346
+4 * 346 0 346
+4 * 346 0 346
+4 +4 346 346
+4 * 346
+3 * 346 0 346
cfn=(128)
calls=346 0x404878 277 
* * 5190 2076 1730 1 0 0 1
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(132)
calls=346 0x404d44 277 
* * 8650 3114 2768 2 0 0 2
+5 * 346
+3 * 346 346
+4 * 346
+3 * 346 0 346
cfn=(132)
calls=346 0x404d44 277 
* * 8650 3114 2768
+5 * 346
+3 * 346
+3 * 346
+3 * 346 0 346
cfn=(138)
calls=346 0x404d5e -49 
* * 77994 23804 21732 1 1 7 1 1 7 4870 280 688
+5 +1 346
+4 * 346 346
+1 * 346 346
+2 * 346 346
+1 * 346 346

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 692 0 692 1 0 0 1
+1 * 692
+3 * 692 0 692
+4 +1 692 692
+4 * 692 692
+1 * 692 692

fn=(110)
0x404380 726 692 0 692 1 0 0 1
+1 * 692
+3 * 692 0 692
+4 * 692 0 692
+4 * 692 692
+4 * 692 692
+3 * 692 692
+4 * 692 0 692
+3 * 692 692
+1 * 692 692

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 692 0 692 1 0 0 1
+1 * 692
+3 * 692 0 692
+4 +1 692 692
+4 * 692 692
+1 * 692 692

fn=(44)
0x404468 726 692 0 692
+1 * 692
+3 * 692 0 692
+4 * 692 0 692
+4 * 692 692
+4 * 692 692
+3 * 692 692
+4 * 692 0 692 1 0 0 1
+3 * 692 692
+1 * 692 692

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 353 0 353 1 0 0 1
+1 * 353
+3 * 353 0 353
+4 * 353 0 353 1 0 0 1
+4 * 353 353
+1 * 353 353

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 353 0 353 1 0 0 1
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 +4 353 353
+4 * 353 353
+4 * 353
+3 * 353
+3 * 353 0 353
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=353 0x40454c -14 
* * 2118 706 1059 1 0 0 1
+5 +2 353 353
+1 * 353 353

fn=(150)
0x40326c 148 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +3 353 353 0 1 0 0 1
+4 * 353 353
+4 * 353
+3 * 353
+3 * 353 0 353
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=353 0x403d1a -29 
* * 6354 2118 2471 3 0 0 3
+5 +1 353 353
+1 * 353 353

fn=(180)
0x40334a 148 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +3 353 353
+4 * 353 353
+4 * 353
+3 * 353
+3 * 353 0 353
cfn=(182)
calls=353 0x403dcc -29 
* * 6354 2118 2471 2 0 0 2
+5 +1 353 353
+1 * 353 353

fn=(152)
0x403d1a 122 353 0 353 1 0 0 1
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 +4 353 353
+4 * 353 353
+4 * 353
+3 * 353
+3 * 353 0 353
cfn=(154)
calls=353 0x4044f8 -14 
* * 2118 706 1059 2 0 0 2
+5 +2 353 353
+1 * 353 353

fn=(184)
0x40454c 112 353 0 353 1 0 0 1
+1 * 353
+3 * 353 0 353
+4 * 353 0 353
+4 * 353 353
+1 * 353 353

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2124 390 388 0 5 6 0 5 6 300 29 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 1 3 0 1 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 13 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 2908 625 564 12 8 5 12 8 5 466 52 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 588 588 0 1 0 0 1
+6 0 588
+2 0 588 0 0 0 0 0 0 0 0 588 1
+2 0 588 588

fn=(38) _int_malloc
0x3877c79a00 0 706 0 706 1 0 0 1
+2 0 706
+3 0 706 0 706
+2 0 706 0 706
+2 0 706 0 706 0 0 1 0 0 1
+2 0 706
+3 0 706 0 706
+1 0 706 0 706
+1 0 706
+4 0 706
+4 0 706 0 0 0 0 0 0 0 0 706
+6 0 706
+4 0 706
+6 0 706
+3 0 706
+4 0 706
+4 0 706
+4 0 706
+3 0 706 0 0 0 0 0 0 0 0 706
+6 0 706 706 0 1 1 0 1 1
+7 0 706 0 0 0 0 0 0 0 0 706 5
jcnd=584/706 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 588
+4 0 588 588
+1 0 588 588
+1 0 588 588
+2 0 588 588
+2 0 588 588
+2 0 588 588
+2 0 588 588
+7 0 601
+7 0 601 0 0 1 0 0 1 0 0 601 5
jcnd=2/601 0x3877c79b70 0 
* 0 
+2 0 599
+3 0 599
+5 0 599
+3 0 599
+4 0 599 0 599
+4 0 599
+2 0 599
+5 0 599 599 0 0 10 0 0 10
+4 0 599
+3 0 599 0 0 0 0 0 0 0 0 599
jcnd=599/599 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 907 243 192 8 2 0 8 2 0 187 23
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 600 0 0 1 0 0 1
+3 0 600
+3 0 600
+3 0 600
+4 0 600
+3 0 600
+4 0 600 0 600
+5 0 600
+3 0 600 0 600
+4 0 600 0 600
+4 0 600 0 600
+5 0 600
+3 0 600
+3 0 600
+3 0 600
+3 0 600
+4 0 600
+4 0 600 0 0 1 0 0 1
+4 0 600 0 600
+4 0 600
+4 0 600 0 600
+5 0 600 0 600
+5 0 600
+3 0 600
+3 0 600 0 600
+5 0 600
+5 0 600
+3 0 600 0 600
+4 0 600 0 600
+4 0 600
+6 0 600 0 600
+4 0 600 0 600
+5 0 600 0 0 1 0 0 1
+3 0 600
+3 0 600
+3 0 600
jump=600 +87 0 
* 0 
+8 0 559
+3 0 559
+4 0 559
+2 0 559
+2 0 559
+3 0 559
+3 0 559
+3 0 559
+2 0 559
+2 0 559
+5 0 559
+2 0 559 559 0 0 2 0 0 2
+4 0 559
+3 0 559
+4 0 559 0 559
+4 0 559 0 559 0 0 1 0 0 1
+8 0 559
+7 0 559 0 559
+4 0 559 0 559 0 0 2 0 0 2
+4 0 559 0 559
+4 0 559 0 0 0 0 0 0 0 0 559
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1228 1228 0 1 0 0 1
+4 0 1228
+3 0 1228 0 0 0 0 0 0 0 0 1228 30
jcnd=569/1228 0x3877c79ef0 0 
* 0 
+6 0 659 659
+4 0 659 659 0 0 1 0 0 1
+4 0 659
+4 0 659 0 0 0 0 0 0 0 0 659
+6 0 659 659 0 1 1 0 1 1
+7 0 659 0 0 0 0 0 0 0 0 659
+6 0 659
+4 0 659
+7 0 659 0 0 0 0 0 0 0 0 659 5
jcnd=6/659 +11 0 
* 0 
+2 0 653
+3 0 653 0 0 0 0 0 0 0 0 653 62
jcnd=577/653 0x3877c79e28 0 
* 0 
+6 0 640
+3 0 640 0 640
+4 0 640 0 640
+5 0 640 0 0 0 0 0 0 0 0 640 11
jcnd=13/640 0x3877c7a090 0 
* 0 
+6 0 627
+7 0 627 0 0 0 0 0 0 0 0 627 11
jcnd=559/627 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 7
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 577 577 0 1 0 0 1
+4 0 577
+3 0 577 0 0 0 0 0 0 0 0 577 213
jcnd=291/577 0x3877c79ce1 0 
* 0 
+6 0 286 286
+5 0 286 0 0 0 0 0 0 0 0 286 5
jcnd=267/286 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 569 0 0 1 0 0 1
+7 0 569
+3 0 569 0 0 0 0 0 0 0 0 569 3
jcnd=2/569 0x3877c7a0b0 0 
* 0 
+6 0 569 569 0 1 0 0 1
+4 0 569
+3 0 569
+3 0 569
+2 0 569
+4 0 569
+3 0 569
+3 0 569
+2 0 569
+2 0 569
+2 0 569
+2 0 569 569
+8 0 569
+5 0 569
+5 0 569
+2 0 569 0 0 0 0 0 0 0 0 569
-2 0 286
+2 0 286 0 0 0 0 0 0 0 0 286
+2 0 855
+2 0 855 0 0 0 0 0 0 0 0 855 21
jcnd=372/855 +64 0 
* 0 
+2 0 483
+8 0 483
+3 0 483
+3 0 483 0 0 0 0 0 0 0 0 483 1
jcnd=1/483 0x3877c79fc0 0 
* 0 
-6 0 480
+3 0 480
+3 0 480 0 0 0 0 0 0 0 0 480 3
jcnd=207/480 0x3877c79fc0 0 
* 0 
+2 0 755
+2 0 755 755
+8 0 755
+2 0 755 0 0 0 0 0 0 0 0 755 17
jcnd=480/755 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 4
jcnd=213/275 -8 0 
* 0 
-8 0 4731
+4 0 4731
+2 0 4731
+2 0 4731 0 0 0 0 0 0 0 0 4731 264
jcnd=4173/4731 -8 0 
* 0 
-2 0 372 0 0 1 0 0 1
+2 0 372 0 0 0 0 0 0 0 0 372 14
jcnd=345/372 -8 0 
* 0 
+2 0 647 647 0 0 4 0 0 4
+4 0 647 0 0 1 0 0 1
+3 0 647 0 0 0 0 0 0 0 0 647 267
jcnd=361/647 0x3877c7a1cf 0 
* 0 
+6 0 286
+2 0 286
+4 0 286
+2 0 286
+2 0 286
+2 0 286 0 286
+8 0 286
jump=286 0x3877c79f30 0 
* 0 
+37 0 208 208 0 1 0 0 1
+5 0 208 208
+4 0 208
+4 0 208 208
+5 0 208 0 0 0 0 0 0 0 0 208
jcnd=208/208 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 361 361 0 1 1 0 1 1
+4 0 361 361
+4 0 361
+3 0 361 361
+4 0 361
+4 0 361
+3 0 361
+3 0 361 361
+4 0 361 0 0 0 0 0 0 0 0 361
+6 0 361 361
+4 0 361 0 0 0 0 0 0 0 0 361
+6 0 361 361 0 1 0 0 1
+8 0 361 0 361
+4 0 361 0 361
+4 0 361 0 0 0 0 0 0 0 0 361 6
jcnd=291/361 +38 0 
* 0 
+2 0 70 70 0 0 2 0 0 2
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 291
+4 0 291 0 0 0 0 0 0 0 0 291 7
jcnd=13/291 0x3877c7a2e3 0 
* 0 
+6 0 348 348
+4 0 348 348 0 1 0 0 1
+4 0 348 0 0 0 0 0 0 0 0 348
+6 0 348
+4 0 348
+7 0 348 0 348 0 0 7 0 0 7
+4 0 348 0 348
+4 0 348 0 348
+4 0 348 0 348
+4 0 348 0 0 0 0 0 0 0 0 348 2
jcnd=2/348 +7 0 
* 0 
+2 0 346 0 346
+5 0 346
+7 0 346 0 0 0 0 0 0 0 0 346 2
jcnd=339/346 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 341 0 0 1 0 0 1
+7 0 341 0 341
+4 0 341
+3 0 341
+3 0 341
+4 0 341
+3 0 341
+4 0 341
+3 0 341
+3 0 341
+4 0 341 0 341
+4 0 341 0 341 0 0 1 0 0 1
+4 0 341
jump=341 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 13
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +7 0 
* 0 
+7 0 361
+4 0 361 0 0 1 0 0 1
+3 0 361
+3 0 361 0 361
cfn=(104)
calls=361 0x3877c77180 0 
* 0 1444 722 0 1 0 0 1 0 0 361
+5 0 361
+3 0 361
jump=361 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 208 0 0 1 0 0 1
+7 0 208
+2 0 208
+4 0 208
+3 0 208
+3 0 208 0 208
+5 0 208
+3 0 208
+4 0 208
+3 0 208 0 0 1 0 0 1
+4 0 208
+4 0 208
+3 0 208
+4 0 208 0 208
+4 0 208 0 208 0 0 8 0 0 8
+4 0 208
+3 0 208
+3 0 208 0 208
cfn=(104)
calls=208 0x3877c77180 0 
* 0 832 416 0 0 0 0 0 0 0 208 1
+5 0 208
+3 0 208
jump=208 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 706 0 706 1 0 0 1
+5 0 706 0 706
+5 0 706
+3 0 706 0 706
+5 0 706
+4 0 706 706 0 0 1 0 0 1
+7 0 706 706 0 0 1 0 0 1
+3 0 706
+3 0 706 0 0 0 0 0 0 0 0 706
+6 0 706 706 0 0 1 0 0 1
+7 0 706 706 0 1 1 0 1 1
+4 0 706
+3 0 706 0 0 0 0 0 0 0 0 706
+2 0 706 706 0 0 1 0 0 1
+3 0 706
+3 0 706 0 0 0 0 0 0 0 0 706
jcnd=706/706 +97 0 
* 0 
+18 0 706
+3 0 706
+3 0 706 0 706
cfn=(38)
calls=706 0x3877c79a00 0 
* 0 157357 19230 22252 42 30 42 42 30 42 24583 1019
+5 0 706
+3 0 706
+3 0 706 0 0 0 0 0 0 0 0 706
+2 0 706
+3 0 706 0 0 0 0 0 0 0 0 706
+2 0 706
+3 0 706 0 0 0 0 0 0 0 0 706 3
+2 0 706 706
+7 0 706 0 0 0 0 0 0 0 0 706
jcnd=706/706 +13 0 
* 0 
+13 0 706 0 706
+2 0 706 0 0 0 0 0 0 0 0 706 12
+6 0 706
+3 0 706 706
+4 0 706 706
+5 0 706 706
+5 0 706
+4 0 706 706
+1 0 706 0 0 1 0 0 1
+5 0 706 706 0 0 1 0 0 1
+7 0 706 0 0 0 0 0 0 0 0 706
jcnd=706/706 +14 0 
* 0 
+14 0 706 0 706 1 0 0 1
+3 0 706 0 0 0 0 0 0 0 0 706
+6 0 706
jump=706 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 706 0 706 1 0 0 1
+2 0 706
+3 0 706
+3 0 706 0 706
+2 0 706
+3 0 706 0 706
+1 0 706
+3 0 706 0 706
+1 0 706
+3 0 706
+4 0 706
+3 0 706 0 0 0 0 0 0 0 0 706
+6 0 706
+4 0 706
+3 0 706 0 0 0 0 0 0 0 0 706 4
jcnd=10/706 0x3877c838d1 0 
* 0 
+2 0 696
+3 0 696
+3 0 696
+3 0 696
+3 0 696
+3 0 696 0 0 0 0 0 0 0 0 696
jcnd=696/696 +41 0 
* 0 
+41 0 696 0 0 1 0 0 1
+3 0 696 0 0 0 0 0 0 0 0 696
jcnd=696/696 0x3877c839c0 0 
* 0 
+24 0 696
+3 0 696
+4 0 696
+3 0 696
+3 0 696
+3 0 696
+3 0 696
+3 0 696 0 0 0 0 0 0 0 0 696 346
jcnd=356/696 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 350
+10 0 350 350 0 0 2 0 0 2
+3 0 350
+4 0 350 0 350
+3 0 350
+4 0 350
+4 0 350 0 0 0 0 0 0 0 0 350
jcnd=350/350 -18 0 
* 0 
-18 0 1106 1106
+3 0 1106
+4 0 1106 0 1106
+3 0 1106
+4 0 1106
+4 0 1106 0 0 0 0 0 0 0 0 1106 8
jcnd=756/1106 -18 0 
* 0 
+2 0 706
+4 0 706
+3 0 706 706
+1 0 706 706
+1 0 706 706
+2 0 706 706 0 1 0 0 1
+2 0 706 706
0x3877c839c0 0 696 0 0 1 0 0 1
+3 0 696
+3 0 696
+3 0 696
+4 0 696 0 696 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=696 0x3877c89b20 0 
* 0 87746 31912 30520 6 1 12 6 1 12 4206 224 696 85
+5 0 696
jump=696 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 706 706 0 1 1 0 1 1
+7 0 706 706 0 0 1 0 0 1
+3 0 706
+3 0 706 0 0 1 0 0 1 0 0 706
+6 0 706
+3 0 706 0 0 0 0 0 0 0 0 706
+6 0 706 706
+4 0 706
+4 0 706
+2 0 706 0 0 0 0 0 0 0 0 706
+2 0 706
+2 0 706
+7 0 706 0 0 0 0 0 0 0 0 706
jcnd=706/706 +14 0 
* 0 
+14 0 706
+2 0 706
cfn=(170) _int_free
calls=706 0x3877c78650 0 
* 0 66997 17667 10003 19 1 0 19 1 0 16011 330

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 9
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 706 0 706 1 0 0 1
+2 0 706 0 706
+2 0 706 0 706
+2 0 706
+3 0 706 0 706
+2 0 706 0 706
+1 0 706 0 706
+1 0 706
+3 0 706
+4 0 706 706
+4 0 706 0 706
+4 0 706
+3 0 706
+4 0 706
+3 0 706
+3 0 706
+3 0 706 0 0 1 0 0 1 0 0 706
+6 0 706
+4 0 706 0 0 0 0 0 0 0 0 706
+6 0 706
+4 0 706 0 0 0 0 0 0 0 0 706
+6 0 706 706
+7 0 706 0 0 0 0 0 0 0 0 706 2
jcnd=582/706 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 582
+2 0 582 0 0 0 0 0 0 0 0 582
+6 0 582 582 0 1 0 0 1
+4 0 582
+3 0 582
+2 0 582 0 0 0 0 0 0 0 0 582
jcnd=582/582 0x3877c78a40 0 
* 0 
+6 0 582 582
+4 0 582
+3 0 582 0 0 0 0 0 0 0 0 582
+6 0 582 582
+5 0 582
+4 0 582 0 0 0 0 0 0 0 0 582
jcnd=582/582 0x3877c7907c 0 
* 0 
+6 0 582 582
+5 0 582
+4 0 582 0 0 0 0 0 0 0 0 582
+6 0 582
+4 0 582 0 0 1 0 0 1 0 0 582
+6 0 582
+4 0 582 582
+7 0 582 0 0 0 0 0 0 0 0 582
+6 0 582 582
+6 0 582
+2 0 582 0 0 0 0 0 0 0 0 582
+6 0 582 582
+4 0 582 0 0 0 0 0 0 0 0 582 5
jcnd=578/582 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 582 582 0 1 0 0 1
+4 0 582 0 0 0 0 0 0 0 0 582 208
jcnd=208/582 0x3877c78bf0 0 
* 0 
+6 0 374 374
+6 0 374 0 0 1 0 0 1 0 0 374 44
jcnd=29/374 0x3877c78a78 0 
* 0 
+6 0 345 345
+5 0 345 345
+5 0 345 345
+4 0 345 0 0 0 0 0 0 0 0 345
+6 0 345 345
+4 0 345 0 0 0 0 0 0 0 0 345
+6 0 345 345
+9 0 345 0 345
+4 0 345 0 345
+4 0 345 0 0 0 0 0 0 0 0 345 4
jcnd=337/345 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 345
+3 0 345
+4 0 345 345
+4 0 345 345
+4 0 345 0 0 0 0 0 0 0 0 345
-12 0 29
+4 0 29 29
+4 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 374
+7 0 374 0 374
+4 0 374 0 374
+4 0 374 0 0 0 0 0 0 0 0 374 63
jcnd=305/374 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 305 0 305
+4 0 305
+3 0 305 0 305
+4 0 305
+4 0 305 0 305
+4 0 305 0 305
+4 0 305
+7 0 305 0 0 0 0 0 0 0 0 305
jcnd=305/305 0x3877c78b20 0 
* 0 
-7 0 208
+7 0 208 0 0 0 0 0 0 0 0 208
jcnd=208/208 0x3877c78b20 0 
* 0 
0x3877c78a40 0 582 0 0 1 0 0 1
+5 0 582 582
+4 0 582 582
+7 0 582 0 0 0 0 0 0 0 0 582
jcnd=582/582 +16 0 
* 0 
+16 0 582 0 582
+5 0 582 0 0 0 0 0 0 0 0 582
+6 0 582
+3 0 582
jump=582 0x3877c7878f 0 
* 0 
+10 0 29 0 29
+6 0 29 0 0 1 0 0 1
jump=29 0x3877c78885 0 
* 0 
0x3877c78b20 0 582 582 0 1 0 0 1
+4 0 582
+2 0 582 0 0 0 0 0 0 0 0 582
+6 0 582 582
+7 0 582 0 0 0 0 0 0 0 0 582
jcnd=582/582 +15 0 
* 0 
+15 0 582 0 582 1 0 0 1
+4 0 582 0 0 0 0 0 0 0 0 582 2
+6 0 582
+4 0 582 582
+1 0 582 582
+1 0 582 582
+2 0 582 582
+2 0 582 582
+2 0 582 582
+2 0 582 582
0x3877c78bf0 0 208 0 0 1 0 0 1
+3 0 208 0 208
+4 0 208
+3 0 208
+4 0 208 0 208 1 0 0 1
+4 0 208
jump=208 0x3877c788cf 0 
* 0 
0x3877c7907c 0 582 582 0 1 1 0 1 1
+4 0 582 0 0 1 0 0 1
+7 0 582
+4 0 582
+3 0 582
+3 0 582 0 0 0 0 0 0 0 0 582
jcnd=582/582 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 696 0 0 1 0 0 1
+7 0 696
+3 0 696
+3 0 696 696 0 0 1 0 0 1
+4 0 696
+4 0 696 0 0 0 0 0 0 0 0 0 0 696 85
jump=80 0x3877c89be8 0 
* 0 
jump=88 0x3877c89bd0 0 
* 0 
jump=84 0x3877c89bb8 0 
* 0 
jump=88 +11 0 
* 0 
jump=88 0x3877c89c48 0 
* 0 
jump=90 0x3877c89c30 0 
* 0 
jump=88 0x3877c89c18 0 
* 0 
jump=90 0x3877c89c00 0 
* 0 
+11 0 88 88
+3 0 88
+4 0 88
+4 0 88 88
+4 0 88
+4 0 88 0 88
+4 0 88
+9 0 88 88
+4 0 88 0 88
+4 0 88 88
+4 0 88 0 88
+4 0 88 88
+4 0 88 0 88
+4 0 88 88
+4 0 88 0 88
+4 0 88
+4 0 88
+4 0 88 0 0 0 0 0 0 0 0 88
jcnd=8/88 0x3877c89c60 0 
* 0 
-40 0 3682 3682
+4 0 3682 0 3682 0 0 3 0 0 3
+4 0 3682 3682
+4 0 3682 0 3682
+4 0 3682 3682
+4 0 3682 0 3682 0 0 1 0 0 1
+4 0 3682 3682
+4 0 3682 0 3682
+4 0 3682
+4 0 3682
+4 0 3682 0 0 0 0 0 0 0 0 3682 222
jcnd=660/3682 0x3877c89c60 0 
* 0 
-32 0 90 90
+4 0 90 0 90
+4 0 90 90
+4 0 90 0 90
+4 0 90 90
+4 0 90 0 90
+4 0 90
+4 0 90
+4 0 90 0 0 0 0 0 0 0 0 90
jcnd=10/90 0x3877c89c60 0 
* 0 
-24 0 88 88
+4 0 88 0 88
+4 0 88 88
+4 0 88 0 88
+4 0 88
+4 0 88
+4 0 88 0 0 0 0 0 0 0 0 88
jcnd=8/88 0x3877c89c60 0 
* 0 
-16 0 90 90 0 1 0 0 1
+4 0 90 0 90
+4 0 90 0 0 1 0 0 1
+4 0 90
+4 0 90 0 0 0 0 0 0 0 0 90 2
jcnd=10/90 0x3877c89c60 0 
* 0 
+6 0 3342
+4 0 3342 3342
+3 0 3342 0 3342 0 0 1 0 0 1
+3 0 3342 3342
+4 0 3342 0 3342 0 0 3 0 0 3
+4 0 3342 3342
+4 0 3342 0 3342 0 0 4 0 0 4
+4 0 3342 3342
+4 0 3342 0 3342
+4 0 3342
jump=3342 -80 0 
* 0 
-30 0 80 80
+3 0 80 0 80
+3 0 80 80
+4 0 80 0 80
+4 0 80 80
+4 0 80 0 80
+4 0 80 80
+4 0 80 0 80
+4 0 80
jump=80 -80 0 
* 0 
-24 0 88 88
+4 0 88 0 88
+4 0 88 88
+4 0 88 0 88
+4 0 88 88
+4 0 88 0 88
+4 0 88
jump=88 -80 0 
* 0 
-16 0 84 84
+4 0 84 0 84
+4 0 84 84
+4 0 84 0 84
+4 0 84
jump=84 -80 0 
* 0 
+8 0 84 84
+3 0 84
+4 0 84 0 0 1 0 0 1
+4 0 84
+4 0 84
jump=84 -39 0 
* 0 
+9 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+6 0 88 88
+3 0 88
+4 0 88
jump=88 -72 0 
* 0 
+8 0 80
+4 0 80 80
+3 0 80 0 0 0 0 0 0 0 0 80
+2 0 80
+4 0 80
jump=80 -99 0 
* 0 
+11 0 90 90 0 1 0 0 1
+3 0 90
+4 0 90
+4 0 90
+4 0 90
jump=90 0x3877c89b78 0 
* 0 
+9 0 88 88
+3 0 88
+4 0 88
+4 0 88
+4 0 88
jump=88 0x3877c89b70 0 
* 0 
+9 0 90 90
+3 0 90
+4 0 90
+4 0 90
+4 0 90
jump=90 0x3877c89b68 0 
* 0 
+9 0 88 88
+3 0 88
+4 0 88
+4 0 88
+4 0 88
jump=88 0x3877c89b60 0 
* 0 
+9 0 696 0 696 1 0 0 1
+3 0 696 696

totals: 3255435 1283652 770306 238 76 77 238 76 77 111374 2488 4226 85
