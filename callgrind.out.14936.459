version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 459


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 552180639 - 552833949
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 954 0 0 1 0 0 1
+3 0 954 0 0 0 0 0 0 0 0 954
+2 0 954
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=954 0x3877c7b8b0 0 
* 0 114521 30020 16264 21 3 0 21 3 0 28187 287
* 0 954 954 0 1 1 0 1 1 0 0 0 954

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 954 0 954 1 0 0 1
+1 0 954
+5 0 954
+3 0 954 0 954
+1 0 954
+4 0 954 0 0 1 0 0 1
+3 0 954
+4 0 954
+3 0 954 0 954 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=954 0x3877c7aa50 0 
* 0 253486 38622 40556 48 36 54 48 36 54 41789 1245
* 0 954 954 0 1 1 0 1 1 0 0 0 954
+5 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +96 0 
* 0 
+96 0 954 0 0 1 0 0 1
+4 0 954 954
+1 0 954 954
+1 0 954 954

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=470 0x404a28 -35 
* * 2820 940 1410 1 0 1 1 0 1
+5 * 470 470
+1 * 470 470

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 470
+4 * 470
+3 * 470 0 470
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=470 0x4044cc -35 
* * 2350 940 940
+5 * 470 470
+1 * 470 470

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470 1 0 0 1
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=470 0x4049d4 -35 
* * 2820 940 1410 1 0 0 1
+5 * 470 470
+1 * 470 470

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 470
+4 * 470
+3 * 470 0 470
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=470 0x404520 -35 
* * 2350 940 940
+5 * 470 470
+1 * 470 470

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235 235
+4 * 235 235
+4 * 235
+3 * 235
+3 * 235 0 235
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=235 0x403df2 -87 
* * 5640 1880 2115 0 15 4 0 15 4 235 2
+5 * 235 235
+1 * 235 235

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+4 * 470 470
+4 * 470 470
+1 * 470 470

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235 235
+4 * 235 235
+4 * 235
+3 * 235
+3 * 235 0 235
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=235 0x40406a -87 
* * 5640 1880 2115 0 15 7 0 15 7 235
+5 * 235 235
+1 * 235 235

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 470 0 470
+1 * 470
+3 * 470 0 470
+4 * 470 470
+4 * 470 470
+1 * 470 470

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 540 0 540
+1 * 540
+3 * 540 0 540
+4 +1 540 540
+4 * 540 540
+1 * 540 540

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 +1 940 940 0 1 0 0 1
+4 * 940 940
+1 * 940 940

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 540 0 540
+1 * 540
+3 * 540 0 540 0 0 1 0 0 1
+4 +1 540 540
+4 * 540 540
+1 * 540 540

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 940 0 940 1 0 0 1
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940
+4 * 940
+3 * 940 0 940
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=940 0x404ffe 790 
* * 5640 2820 1880 1 0 0 1
+5 * 940 940
+3 * 940 940
+1 * 940 940

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 +1 940 940
+4 * 940 940
+1 * 940 940

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 940 0 940 1 0 0 1
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940
+4 * 940
+3 * 940 0 940 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=940 0x40500c 790 
* * 5640 2820 1880 1 0 0 1
+5 * 940 940
+3 * 940 940
+1 * 940 940

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 470 0 470
+1 * 470
+3 * 470 0 470
+4 * 470 0 470
+4 * 470 470
+4 * 470 470
+1 * 470 470

fl=(5)
fn=(102)
0x4048de 113 491 0 491 1 0 0 1
+1 * 491
+3 * 491 0 491
+4 +1 491
+10 * 491 491
+1 * 491 491

fn=(266)
0x40406a 129 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235
+3 * 235
+5 * 235 0 235
cfi=(16)
cfn=(226)
calls=235 0x402d61 -20 
* * 1645 705 705
+5 * 235
+3 * 235 0 0 0 0 0 0 0 0 235
+2 * 235 235
+4 * 235 235 0 0 15 0 0 15
+2 * 235 0 235 0 0 7 0 0 7
+2 * 235 235
+1 * 235 235

fn=(28)
0x404992 113 491 0 491 1 0 0 1
+1 * 491
+3 * 491 0 491
+4 +1 491
+10 * 491 491
+1 * 491 491

fn=(176)
0x4044cc 86 470 0 470
+1 * 470
+3 * 470 0 470
+4 * 470 470
+1 * 470 470

fn=(224)
0x403df2 129 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235
+3 * 235
+5 * 235 0 235
cfi=(16)
cfn=(226)
calls=235 0x402d61 -20 
* * 1645 705 705
+5 * 235
+3 * 235 0 0 0 0 0 0 0 0 235 2
+2 * 235 235
+4 * 235 235 0 0 15 0 0 15
+2 * 235 0 235 0 0 4 0 0 4
+2 * 235 235
+1 * 235 235

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 477 0 477
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +1 477 477
+4 * 477
+3 * 477 0 477
cob=(5)
cfi=(8)
cfn=(164)
calls=477 0x387e4bb2f0 0 
* * 59800 15662 8347 22 4 0 22 4 0 14715 143 477
* * 477 477 0 1 1 0 1 1 0 0 0 477
+5 * 477 477
+1 * 477 477

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 477 0 477
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +1 477 477
+4 * 477
+3 * 477 0 477
cob=(5)
cfi=(8)
cfn=(164)
calls=477 0x387e4bb2f0 0 
* * 58537 15312 7917 1 0 0 1 0 0 14426 144 477
* * 477 477 0 0 0 0 0 0 0 0 0 477
+5 * 477 477
+1 * 477 477

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +2 477 477
+4 * 477
+3 * 477 0 477
cfn=(102)
calls=477 0x4048de +12 
* * 2862 954 954 1 0 0 1
+5 * 477 477
+4 * 477 0 0 1 0 0 1
+3 * 477
+2 * 477 0 0 0 0 0 0 0 0 477
jcnd=477/477 +7 +3 
* * 
+7 +3 477 477
+4 * 477
+4 * 477
+3 * 477 0 477
cob=(5)
cfi=(8)
cfn=(32)
calls=477 0x387e4bd0b0 0 
* * 126840 20311 20330 35 6 32 35 6 32 20034 735 477
* * 477 477 0 0 0 0 0 0 0 0 0 477
+5 +1 477 477
+1 * 477 477

fn=(18)
0x404a28 81 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470 0 0 1 0 0 1
+4 * 470 0 470
+4 * 470 470
+1 * 470 470

fn=(92)
0x4049d4 81 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+4 * 470 0 470
+4 * 470 470
+1 * 470 470

fn=(196)
0x404520 86 470 0 470
+1 * 470
+3 * 470 0 470
+4 * 470 470
+1 * 470 470

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477 1 0 0 1
+4 +2 477 477
+4 * 477
+3 * 477 0 477
cfn=(28)
calls=477 0x404992 +12 
* * 2862 954 954 1 0 0 1
+5 * 477 477
+4 * 477
+3 * 477
+2 * 477 0 0 0 0 0 0 0 0 477
jcnd=477/477 +7 +3 
* * 
+7 +3 477 477
+4 * 477
+4 * 477
+3 * 477 0 477
cob=(5)
cfi=(8)
cfn=(32)
calls=477 0x387e4bd0b0 0 
* * 141910 22127 23088 17 31 23 17 31 23 22709 510 477
* * 477 477 0 1 1 0 1 1 0 0 0 477
+5 +1 477 477
+1 * 477 477

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=470 0x404484 107 
* * 206364 67344 64528 25 3 2 25 3 2 7522 519 936 117
+5 * 470 470
+1 * 470 470

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 6 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470 0 1 0 0 1
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=470 0x404a36 450 
* * 193204 62644 59828 24 3 2 24 3 2 7522 519 936 117
+5 * 470 470
+1 * 470 470

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=470 0x40439c 107 
* * 206364 67344 64528 7 1 9 7 1 9 7522 472 936
+5 * 470 470
+1 * 470 470

fn=(116)
0x40439c 107 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +10 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=470 0x4047d7 -26 
* * 199784 64994 62178 7 1 9 7 1 9 7522 472 936
+5 +1 470 470
+1 * 470 470

fn=(118)
0x4047d7 91 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=470 0x4049e2 450 
* * 193204 62644 59828 7 1 9 7 1 9 7522 472 936
+5 * 470 470
+1 * 470 470

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 4 2 0 4 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 6 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 6 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 4 2 0 4 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 4 1 0 4 76 4 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +10 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(52)
calls=470 0x404829 -26 
* * 199784 64994 62178 25 3 2 25 3 2 7522 519 936 117
+5 +1 470 470
+1 * 470 470

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 4 2 0 4 76 4 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 6 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 477 0 477 1 0 0 1
+1 * 477 0 0 1 0 0 1
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 0 477 477
+5 0 477 0 0 0 0 0 0 0 0 477
+2 0 477 477
+4 0 477 477
+4 0 477
+5 0 477
+3 0 477
+3 0 477 0 477
fi=(6) ???
cfi=(5)
cfn=(100)
calls=477 0x40461a 99 
* 0 139242 24127 24146 38 6 32 38 6 32 20511 735 954
+5 0 477
fi=(6)
jump=477 +7 0 
* 0 
+7 0 477 477
+1 0 477 477

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 84365 0 84365
+1 * 84365
+3 * 84365 0 84365
+4 * 84365 0 84365
+4 +1 84365 84365
+4 * 84365 84365
+3 * 84365 84365
+4 * 84365
+4 * 84365
+3 * 84365 84365
+1 * 84365 84365

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 84365 0 84365
+1 * 84365
+3 * 84365 0 84365 1 0 0 1
+4 * 84365 0 84365
+4 +1 84365 84365
+4 * 84365 84365
+3 * 84365 84365
+4 * 84365
+4 * 84365
+3 * 84365 84365
+1 * 84365 84365

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 470
+4 * 470
+3 * 470 0 470
cfi=(4)
cfn=(194)
calls=470 0x403d7e +42 
* * 6580 2350 2350 1 0 0 1
+5 * 470 470
+1 * 470 470

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470
+3 * 470 470
+4 * 470 470
+3 * 470
+3 * 470
+3 * 470
+4 * 470
+3 * 470 470
+4 * 470 470
+3 -1 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=470 0x403d98 +11 
* * 70944 19824 12520 1 0 0 1 0 0 14726 138 940
+5 +1 470 470
+4 * 470
+3 * 470 0 470
cfn=(192)
calls=470 0x403296 -82 
* * 10810 3760 3760 1 0 0 1
+5 * 470
jump=470 +28 * 
* * 
+28 * 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 1908 0 1908 1 0 0 1
+1 * 1908
+3 * 1908 0 1908 0 0 1 0 0 1
+4 +1 1908 1908
+4 * 1908 1908 0 1 1 0 1 1
+4 * 1908
+3 * 1908 1908
+4 * 1908 1908
+3 * 1908
+3 * 1908
+3 * 1908
+4 * 1908 1908
+1 * 1908 1908

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=470 0x404236 -14 
* * 158990 27902 28391 23 17 17 23 17 17 23162 435 940
+5 * 470 470
+4 * 470 0 470
+3 +1 470 470
+4 * 470 470 0 1 0 0 1
+3 * 470 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+3 * 470 470
+4 * 470
+4 * 470
+3 * 470 470
+4 * 470 0 470
+4 +1 470 470
+1 * 470 470

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470 0 1 0 0 1
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(96)
calls=470 0x403fbe -14 
* * 143768 25859 25452 16 3 28 16 3 28 20489 682 940
+5 * 470 470
+4 * 470 0 470
+3 +1 470 470
+4 * 470 470
+3 * 470 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+3 * 470 470
+4 * 470
+4 * 470
+3 * 470 470
+4 * 470 0 470
+4 +1 470 470
+1 * 470 470

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 235 0 235
+1 * 235
+3 * 235 0 0 1 0 0 1
+4 * 235 0 235
+4 * 235 0 235
+4 +2 235 235
+4 * 235 235
+4 * 235 235
+4 * 235 235
+4 * 235
+3 * 235 0 0 0 0 0 0 0 0 235
jcnd=7/235 +51 +10 
* * 
+2 +3 228 228
+4 * 228 228
+4 * 228 228
+4 -1 228 228
+4 * 228
+3 * 228
+3 * 228 0 228
cfi=(3)
cfn=(264)
calls=228 0x4036b1 215 
* * 8664 2964 3192 0 14 4 0 14 4 228
+5 +2 228 228
+4 * 228 228
+4 * 228
+4 * 228 228
+4 * 228 0 228
+4 * 228
jump=228 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10963 3168 2751 19 16 13 19 16 13 796 92 41
+5 +2 235 235
+1 * 235 235

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 961 0 961 1 0 0 1
+1 * 961
+3 * 961 0 961 1 0 0 1
+4 +1 961 961
+4 * 961 961
+1 * 961 961

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+3 * 470 0 470
+4 * 470
+4 * 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=470 0x404380 726 
* * 4700 2350 1880
+5 * 470 470
+4 * 470 470
+1 * 470 470

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470 1 0 0 1
+4 +2 470 470
+4 * 470
+3 * 470 0 470
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=470 0x40325e 113 
* * 2820 1410 940
+5 * 470
+3 * 470 470
+4 * 470 470
+4 * 470 470
+4 * 470 470
+3 -1 470
+3 * 470
+3 * 470 0 470
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=470 0x40326c 148 
* * 14570 4700 5640 4 0 0 4
+5 +1 470 470
+4 * 470
+3 * 470 0 470
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=470 0x4031ec 159 
* * 96190 29110 19062 25 5 0 25 5 0 15018 137 940
+5 * 470
jump=470 +28 * 
* * 
+28 * 470 0 0 1 0 0 1
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +2 477 477
+5 * 477 0 0 0 0 0 0 0 0 477
+2 +1 477 477
+4 * 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfi=(5)
cfn=(160)
calls=477 0x4044d6 -65 
* * 65524 17570 10732 23 5 0 23 5 0 14715 143 954
+5 +1 477 477
+1 * 477 477

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=470 0x4043ca -45 
* * 16920 6110 6580 4 0 4 4 0 4
+5 +1 470 470 0 1 0 0 1
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(20)
calls=470 0x404412 +43 
* * 170740 33542 31681 24 17 17 24 17 17 23162 435 940
+5 * 470
jump=470 +28 * 
* * 
+28 * 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(14)
0x4043ca 90 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470 0 0 1 0 0 1
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(4)
cfn=(16)
calls=470 0x404804 +24 
* * 8460 2820 3290 2 0 1 2 0 1
+5 * 470 470
+4 * 470 0 470 0 0 2 0 0 2
+7 * 470 470
+4 * 470 0 470 1 0 0 1
+8 * 470 470
+4 * 470 0 470
+8 +1 470 470
+1 * 470 470

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+2 * 470 0 470
+2 * 470 0 470
+1 * 470 0 0 1 0 0 1
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470
+3 * 470 0 470
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=470 0x4039fc 117 
* * 2820 1410 940 2 0 0 2
+5 * 470
+3 * 470 0 470
cfi=(3)
cfn=(84)
calls=470 0x4039ed -88 
* * 2820 1410 940
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(2)
calls=470 0x402d74 645 
* * 6110 2820 940
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=470 0x403a0a 134 
* * 182778 40899 38612 23 3 28 23 3 28 20489 682 940
+5 +4 470 470
+4 * 470
+3 * 470 0 470
cfn=(106)
calls=470 0x40325e 113 
* * 2820 1410 940 1 0 0 1
+5 * 470
+3 * 470 470
+4 * 470 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=470 0x403a98 565 
* * 11750 4700 3760 2 0 0 2
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(112)
calls=470 0x403a68 547 
* * 11750 4700 3760
+5 * 470
+3 * 470
+3 * 470
+3 * 470
+3 * 470 0 470
cfi=(11)
cfn=(114)
calls=470 0x403ac9 -60 
* * 213414 69694 67348 7 1 9 7 1 9 7522 472 936
+5 -3 470 470
+4 * 470 0 470
+4 * 470
jump=470 +28 +4 
* * 
+28 +4 470
+4 * 470 470
+1 * 470 470
+2 * 470 470
+2 * 470 470
+1 * 470 470

fn=(188)
0x403d98 171 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +2 477 477
+5 * 477 0 0 0 0 0 0 0 0 477 7
+2 +1 477 477
+4 * 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfi=(5)
cfn=(190)
calls=477 0x40452a -65 
* * 64261 17220 10302 1 0 0 1 0 0 14426 144 954
+5 +1 477 477
+1 * 477 477

fn=(22)
0x404236 167 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477 1 0 0 1
+4 * 477 0 477
+4 0 477 477
+5 0 477 0 0 0 0 0 0 0 0 477
+2 0 477 477
+4 0 477 477
+4 0 477
+5 0 477
+3 0 477
+3 0 477 0 477
fi=(6)
cfi=(5)
cfn=(26)
calls=477 0x404730 99 
* 0 154312 25943 26904 21 32 23 21 32 23 23186 510 954
+5 0 477
fi=(6)
jump=477 +7 0 
* 0 
+7 0 477 477
+1 0 477 477

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470 0 470
+4 * 470
+4 * 470 0 0 1 0 0 1
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=470 0x404468 726 
* * 4700 2350 1880 1 0 0 1
+5 * 470 470
+4 * 470 470
+1 * 470 470

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+3 * 470 0 470
+4 * 470
+4 * 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(10)
cfn=(44)
calls=470 0x404468 726 
* * 4700 2350 1880
+5 * 470 470
+4 * 470 470
+1 * 470 470

fn=(86)
0x403a0a 134 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=470 0x4042e2 -45 
* * 16920 6110 6580 5 0 0 5
+5 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfn=(94)
calls=470 0x40432a +43 
* * 155518 31499 28742 17 3 28 17 3 28 20489 682 940
+5 * 470
jump=470 +28 * 
* * 
+28 * 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(88)
0x4042e2 90 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfi=(4)
cfn=(90)
calls=470 0x4047b2 +24 
* * 8460 2820 3290 3 0 0 3
+5 * 470 470
+4 * 470 0 470
+7 * 470 470
+4 * 470 0 470
+8 * 470 470
+4 * 470 0 470
+8 +1 470 470
+1 * 470 470

fn=(156)
0x4031ec 159 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470 0 1 0 0 1
+4 * 470
+3 * 470 470
+4 * 470 470
+3 * 470
+3 * 470
+3 * 470
+4 * 470
+3 * 470 470
+4 * 470 470
+3 -1 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(158)
calls=470 0x403ce6 +11 
* * 72220 20180 12952 22 5 0 22 5 0 15018 137 940
+5 +1 470 470
+4 * 470
+3 * 470 0 470
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=470 0x4031b8 -82 
* * 10810 3760 3760 1 0 0 1
+5 * 470
jump=470 +28 * 
* * 
+28 * 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(172)
0x4031b8 79 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 470
+4 * 470
+3 * 470 0 470
cfi=(4)
cfn=(174)
calls=470 0x403ccc +42 
* * 6580 2350 2350
+5 * 470 470
+1 * 470 470

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 968 0 968 1 0 0 1
+1 * 968
+3 * 968 0 968
+4 +1 968 968
+4 * 968 968 0 0 2 0 0 2
+4 * 968
+3 * 968 968
+4 * 968 968
+3 * 968
+3 * 968
+3 * 968
+4 * 968 968
+1 * 968 968

fn=(106)
0x40325e 113 961 0 961 1 0 0 1
+1 * 961
+3 * 961 0 961
+4 +1 961 961
+4 * 961 961
+1 * 961 961

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6)
0x403b08 117 484 0 484 1 0 0 1
+1 * 484
+3 * 484 0 484 0 0 1 0 0 1
+4 +1 484 484
+4 * 484 484
+1 * 484 484

fn=(82)
0x4039fc 117 484 0 484 1 0 0 1
+1 * 484
+3 * 484 0 484 1 0 0 1
+4 +1 484 484
+4 * 484 484
+1 * 484 484

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 +2 235 235
+4 * 235 235
+4 * 235 235
+4 * 235 235
+4 * 235
+3 * 235 0 0 0 0 0 0 0 0 235 7
jcnd=7/235 +51 +10 
* * 
+2 +3 228 228
+4 * 228 228
+4 * 228 228
+4 -1 228 228
+4 * 228
+3 * 228
+3 * 228 0 228
cfi=(3)
cfn=(222)
calls=228 0x403373 215 
* * 8664 2964 3192 0 14 3 0 14 3 228 2
+5 +2 228 228
+4 * 228 228
+4 * 228
+4 * 228 228
+4 * 228 0 228
+4 * 228
jump=228 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11102 3389 2930 48 4 8 48 4 8 791 65 41
+5 +2 235 235
+1 * 235 235

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+2 * 470 0 470
+2 * 470 0 470
+1 * 470
+4 * 470 0 470 1 0 0 1
+4 * 470 0 470
+4 +2 470 470
+4 * 470
+3 * 470 0 470
cfn=(6)
calls=470 0x403b08 117 
* * 2820 1410 940 1 0 1 1 0 1
+5 * 470
+3 * 470 0 470
cfi=(3)
cfn=(8)
calls=470 0x403afa -88 
* * 2820 1410 940 1 0 0 1
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(10)
calls=470 0x402f54 645 
* * 6110 2820 940 1 1 0 1 1
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470
+3 * 470
+3 * 470 0 470
cfn=(12)
calls=470 0x403b16 134 
* * 198000 42942 41551 29 17 21 29 17 21 23162 435 940
+5 +4 470 470 0 1 0 0 1
+4 * 470
+3 * 470 0 470
cfn=(40)
calls=470 0x40333c 113 
* * 2820 1410 940 2 0 0 2
+5 * 470
+3 * 470 470
+4 * 470 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(42)
calls=470 0x403ba4 565 
* * 11750 4700 3760 3 0 0 3
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(46)
calls=470 0x403b74 547 
* * 11750 4700 3760
+5 * 470
+3 * 470
+3 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfi=(11)
cfn=(48)
calls=470 0x403bd5 -60 
* * 213414 69694 67348 26 3 2 26 3 2 7522 519 936 117
+5 -3 470 470
+4 * 470 0 470
+4 * 470
jump=470 +28 +4 
* * 
+28 +4 470
+4 * 470 470
+1 * 470 470
+2 * 470 470
+2 * 470 470
+1 * 470 470

fn=(108)
0x403a98 565 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470 0 470
+4 * 470
+4 * 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(10)
cfn=(110)
calls=470 0x404380 726 
* * 4700 2350 1880 1 0 0 1
+5 * 470 470
+4 * 470 470
+1 * 470 470

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470 1 0 0 1
+4 +2 470 470
+4 * 470
+3 * 470 0 470
cfn=(40)
calls=470 0x40333c 113 
* * 2820 1410 940
+5 * 470
+3 * 470 470
+4 * 470 470
+4 * 470 470
+4 * 470 470
+3 -1 470
+3 * 470
+3 * 470 0 470
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=470 0x40334a 148 
* * 14570 4700 5640 2 0 0 2
+5 +1 470 470
+4 * 470
+3 * 470 0 470
cfn=(186)
calls=470 0x4032ca 159 
* * 94914 28754 18630 3 0 0 3 0 0 14726 138 940
+5 * 470
jump=470 +28 * 
* * 
+28 * 470 0 0 1 0 0 1
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470 1 0 0 1
+4 * 470 0 470
+4 * 470 0 470
+4 +8 470 0 470
+4 +3 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=470 0x404f37 -22 
* * 118004 37264 33978 14 3 1 14 3 1 7522 519 936 117
+5 +1 470 470
+1 * 470 470

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 470 0 470
+1 * 470
+3 * 470 0 470
+2 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +4 470 470
+4 * 470
+3 * 470 0 470
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=470 0x404878 277 
* * 7050 2820 2350 1 0 0 1
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=470 0x404d44 277 
* * 11750 4230 3760 2 0 0 2
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(132)
calls=470 0x404d44 277 
* * 11750 4230 3760
+5 * 470
+3 * 470
+3 * 470
+3 * 470 0 470
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=470 0x404d5e -49 
* * 125054 39614 36798 1 1 9 1 1 9 7522 472 936
+5 +1 470
+4 * 470 470
+1 * 470 470
+2 * 470 470
+1 * 470 470

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 6 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470 1 0 0 1
+4 * 470 0 470
+4 * 470 0 470
+4 +10 470 470
+4 * 470
+3 * 470 0 470
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=470 0x404c38 288 
* * 7050 2820 2350 3 0 0 3
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(56)
calls=470 0x404c38 288 
* * 7050 2820 2350
+5 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=470 0x404c52 -36 
* * 168764 54184 51368 20 3 2 20 3 2 7522 519 936 117
+5 +1 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(60)
0x404c52 424 470 0 470
+1 * 470
+3 * 470 0 470
+2 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +4 470 470
+4 * 470
+3 * 470 0 470
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=470 0x40492d 277 
* * 7050 2820 2350 2 0 0 2
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=470 0x404d9d 277 
* * 11750 4230 3760 2 0 1 2 0 1
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(66)
calls=470 0x404d9d 277 
* * 11750 4230 3760
+5 * 470
+3 * 470
+3 * 470
+3 * 470 0 470
cfn=(72)
calls=470 0x404db7 -49 
* * 125054 39614 36798 15 3 1 15 3 1 7522 519 936 117
+5 +1 470
+4 * 470 470
+1 * 470 470
+2 * 470 470
+1 * 470 470

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 4 0 0 4 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 512 0 512 1 0 0 1
+1 * 512
+3 * 512
+4 * 512 0 512
+4 +1 512 512
+4 * 512
+3 * 512 0 512 1 0 0 1
cfi=(13)
cfn=(64)
calls=512 -33 -66 
* * 3072 1536 1024
+5 * 512 512
+1 * 512 512

fn=(66)
0x404d9d 277 940 0 940
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940 940
+4 * 940
+3 * 940 0 940
cfi=(13)
cfn=(68)
calls=940 0x404f1a -58 
* * 15040 5640 4700 2 0 1 2 0 1
+5 * 940 940
+1 * 940 940

fn=(240)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 6 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 4 0 0 4 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +10 470 470
+4 * 470
+3 * 470 0 470
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=470 0x404bc6 288 
* * 7050 2820 2350 3 0 0 3
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(122)
calls=470 0x404bc6 288 
* * 7050 2820 2350
+5 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(126)
calls=470 0x404be0 -36 
* * 168764 54184 51368 4 1 9 4 1 9 7522 472 936
+5 +1 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(128)
0x404878 277 512 0 512
+1 * 512
+3 * 512
+4 * 512 0 512 1 0 0 1
+4 +1 512 512
+4 * 512
+3 * 512 0 512
cfi=(13)
cfn=(130)
calls=512 -33 -66 
* * 3072 1536 1024 0 0 1 0 0 1
+5 * 512 512
+1 * 512 512

fn=(132)
0x404d44 277 940 0 940
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940 940
+4 * 940
+3 * 940 0 940
cfi=(13)
cfn=(134)
calls=940 0x404e98 -58 
* * 15040 5640 4700 2 0 0 2
+5 * 940 940
+1 * 940 940

fn=(138)
0x404d5e 379 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +8 470 0 470
+4 +3 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=470 0x404eb5 -22 
* * 118004 37264 33978 1 1 9 1 1 9 7522 472 936
+5 +1 470 470
+1 * 470 470

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 6 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 4 1 0 4 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 940 0 940 1 0 0 1
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940 940
+4 * 940
+3 * 940 0 940
cfi=(13)
cfn=(124)
calls=940 0x404d36 -77 
* * 5640 2820 1880 2 0 0 2
+5 * 940 940
+1 * 940 940

fn=(56)
0x404c38 288 940 0 940 1 0 0 1
+1 * 940
+3 * 940
+4 * 940 0 940 1 0 0 1
+4 +1 940 940
+4 * 940
+3 * 940 0 940
cfi=(13)
cfn=(58)
calls=940 0x404d8f -77 
* * 5640 2820 1880 1 0 0 1
+5 * 940 940
+1 * 940 940

fn=(74)
0x404f37 368 484 0 484
+1 * 484
+3 * 484
+4 * 484 0 484 1 0 0 1
+4 * 484 0 484
+4 * 484 0 484
+4 +2 484 484
+4 * 484 484
+4 * 484
+3 * 484
+3 * 484
+4 * 484 0 484
+4 +1 484 484
+5 * 484 0 0 0 0 0 0 0 0 484
jcnd=7/484 +33 +2 
* * 
+2 +1 477 477
+4 * 477
+8 * 477 477
+4 * 477 477
+4 * 477
+3 * 477 0 0 1 0 0 1
+3 * 477 0 477 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=477 0x3877c83840 0 
* * 105576 32275 31326 11 2 4 11 2 4 7114 523 472 117
* * 477 477 0 1 1 0 1 1 0 0 0 477
+5 +1 484 484
+4 * 484
+8 * 484 484
+4 * 484
+3 +1 484 484
+1 * 484 484

fn=(140)
0x404eb5 368 484 0 484
+1 * 484
+3 * 484
+4 * 484 0 484 1 0 0 1
+4 * 484 0 484
+4 * 484 0 484 0 0 1 0 0 1
+4 +2 484 484
+4 * 484 484
+4 * 484
+3 * 484
+3 * 484
+4 * 484 0 484
+4 +1 484 484
+5 * 484 0 0 0 0 0 0 0 0 484
jcnd=7/484 +33 +2 
* * 
+2 +1 477 477
+4 * 477
+8 * 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cob=(2)
cfi=(9)
cfn=(78)
calls=477 0x3877c83840 0 
* * 105576 32275 31326 0 1 10 0 1 10 7114 478 472
* * 477 477 0 0 0 0 0 0 0 0 0 477
+5 +1 484 484
+4 * 484
+8 * 484 484
+4 * 484
+3 +1 484 484
+1 * 484 484

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 +1 940 940
+4 * 940 940
+1 * 940 940

fn=(110)
0x404380 726 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 * 940 0 940
+4 * 940 940
+4 * 940 940
+3 * 940 940
+4 * 940 0 940
+3 * 940 940
+1 * 940 940

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 +1 940 940
+4 * 940 940
+1 * 940 940

fn=(44)
0x404468 726 940 0 940
+1 * 940
+3 * 940 0 940
+4 * 940 0 940
+4 * 940 940
+4 * 940 940
+3 * 940 940
+4 * 940 0 940 1 0 0 1
+3 * 940 940
+1 * 940 940

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 477 0 477 1 0 0 1
+1 * 477
+3 * 477 0 477
+4 * 477 0 477
+4 * 477 477
+1 * 477 477

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 477 0 477 1 0 0 1
+1 * 477
+3 * 477 0 477
+4 * 477 0 477 1 0 0 1
+4 * 477 477
+1 * 477 477

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 +4 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfn=(184)
calls=477 0x40454c -14 
* * 2862 954 1431 1 0 0 1
+5 +2 477 477
+1 * 477 477

fn=(150)
0x40326c 148 477 0 477
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +3 477 477 0 1 0 0 1
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=477 0x403d1a -29 
* * 8586 2862 3339 3 0 0 3
+5 +1 477 477
+1 * 477 477

fn=(180)
0x40334a 148 477 0 477
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +3 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfn=(182)
calls=477 0x403dcc -29 
* * 8586 2862 3339 2 0 0 2
+5 +1 477 477
+1 * 477 477

fn=(152)
0x403d1a 122 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 +4 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfn=(154)
calls=477 0x4044f8 -14 
* * 2862 954 1431 2 0 0 2
+5 +2 477 477
+1 * 477 477

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2954 426 421 0 15 6 0 15 6 501 75 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 1 3 0 1 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 4 3 0 4 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 949 258 167 1 0 0 1 0 0 177 13 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3106 653 602 24 3 4 24 3 4 499 53 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 6 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 936 252 165 2 0 0 2 0 0 174 6 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 235 0 235 1 0 0 1
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470
+5 * 235
+3 * 235 0 235
+3 +1 235 235
+6 * 235 0 235
+3 * 235 235
+6 * 235 0 235
+3 +1 235 235
+6 * 235 0 235 1 0 0 1
+3 * 235 235
+6 * 235 0 235
+3 +2 235 0 235
+7 * 235
jump=235 +86 * 
* * 
+2 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(144)
calls=27965 0x402d9a 770 
* * 307615 139825 83895
+5 * 27965 27965
+4 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(146)
calls=27965 0x402dba 770 
* * 307615 139825 83895 1 0 0 1
+5 * 27965 27965
+2 * 27965
+4 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 -2 27965 0 27965
+4 * 27965 27965
+3 * 27965
+3 * 27965 27965
+3 * 27965 0 0 0 0 0 0 0 0 27965 236
jcnd=27730/27965 -93 +1 
* * 
-9 * 235 235 0 1 0 0 1
+3 * 235
+3 * 235 235
+3 * 235 0 0 0 0 0 0 0 0 235
jcnd=235/235 -93 +1 
* * 
+2 +4 235 235
+3 * 235
+3 * 235
+4 * 235 235 0 1 0 0 1
+5 * 235
+4 * 235
+3 * 235 0 235
+5 +1 235 235
+3 * 235
+3 * 235
+4 * 235 235
+5 * 235
+4 * 235
+3 * 235 0 235
+5 +1 235 0 235
+7 * 235
jump=235 0x4016ee * 
* * 
+2 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965 0 0 1 0 0 1
+3 * 27965 0 27965
cfi=(2)
cfn=(146)
calls=27965 0x402dba 770 
* * 307615 139825 83895
+5 * 27965 27965
+2 * 27965
+4 * 27965 27965
+5 * 27965 0 27965
+5 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(144)
calls=27965 0x402d9a 770 
* * 307615 139825 83895
+5 * 27965 27965
+4 * 27965 27965
+5 * 27965 0 27965
+5 +1 27965 27965
+5 * 27965 27965
+5 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 +1 27965 27965
+5 * 27965 27965
+5 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 -4 27965 0 27965
+4 * 27965 27965
+3 * 27965
+3 * 27965 27965
+3 * 27965 0 0 0 0 0 0 0 0 27965 236
jcnd=27730/27965 0x401672 +1 
* * 
-9 * 235 235 0 1 0 0 1
+3 * 235
+3 * 235 235
+3 * 235 0 0 0 0 0 0 0 0 235
jcnd=235/235 0x401672 +1 
* * 
+6 +6 235 235 0 1 0 0 1
+5 * 235 235
+5 * 235 0 235
+5 +2 235 235
+3 +1 235 0 235
+3 * 235 235
+5 * 235 235
+1 * 235 235

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 235
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(4)
calls=235 0x4030b2 310 
* * 236752 67849 63680 65 21 23 65 21 23 15370 572 938 117
+5 * 235
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(80)
calls=235 0x402ff4 310 
* * 229188 66830 62219 38 4 37 38 4 37 14041 634 938
+5 * 235 0 0 1 0 0 1
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfn=(142)
calls=235 0x401585 -52 
* * 2923635 1292265 675155 8 0 0 8 0 0 56400 472
+5 * 235 0 235
+8 * 235 235
+6 * 235 0 235
+6 * 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(148)
calls=235 0x402df4 414 
* * 62430 19725 14231 31 5 0 31 5 0 7509 70 470
+5 * 235
+7 * 235
+3 * 235 0 235 1 0 0 1
cfi=(2)
cfn=(178)
calls=235 0x402e74 414 
* * 61792 19547 14015 7 0 0 7 0 0 7363 70 470
+5 +2 235
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(4)
calls=235 0x4030b2 310 
* * 236232 67817 63549 2 0 1 2 0 1 15314 382 938
+5 * 235
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(80)
calls=235 0x402ff4 310 
* * 228574 66793 62071 0 0 0 0 0 0 13970 520 938
+5 * 235 235
+6 * 235 0 0 1 0 0 1
+7 * 235
+7 * 235 0 235
+6 * 235 235
+8 * 235
+3 * 235
+3 * 235 0 235
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=235 0x401719 -33 
* * 1356185 564470 311140 4 0 0 4 0 0 28200 236
+5 * 235 0 235
+8 * 235 235
+6 * 235 0 235
+6 * 235
+7 * 235 0 0 1 0 0 1
+3 * 235 0 235
cfi=(2)
cfn=(148)
calls=235 0x402df4 414 
* * 62430 19725 14231 0 0 0 0 0 0 7509 67 470
+5 * 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(178)
calls=235 0x402e74 414 
* * 61792 19547 14015 0 0 0 0 0 0 7363 68 470
+5 +2 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470
+5 * 235 235
+6 * 235
+3 * 235
+3 * 235
+3 * 235 235
+7 * 235
+3 * 235 0 0 1 0 0 1
+3 * 235 0 235
cfi=(2)
cfn=(144)
calls=235 0x402d9a 770 
* * 2585 1175 705
+5 * 235
+3 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(200)
calls=235 0x402eda 901 
* * 26009 9443 7346 51 18 11 51 18 11 1254 74 41
+5 +1 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(10)
calls=235 0x402f54 645 
* * 3055 1410 470 0 1 0 0 1
+5 * 235 235
+6 * 235
+3 * 235
+3 * 235
+3 * 235 235
+7 * 235 0 0 1 0 0 1
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(146)
calls=235 0x402dba 770 
* * 2585 1175 705
+5 * 235
+3 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(244)
calls=235 0x402f7a 901 
* * 25870 9222 7167 20 30 17 20 30 17 1259 92 41
+5 +1 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(10)
calls=235 0x402f54 645 
* * 3055 1410 470
+5 * 235 235
+6 * 235
+3 * 235
+3 * 235
+3 * 235 235 0 1 0 0 1
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(146)
calls=235 0x402dba 770 
* * 2585 1175 705
+5 * 235 235
+2 * 235
+4 * 235 235
+8 * 235 235
+8 * 235 0 235
+8 +1 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470
+5 * 235 235 0 1 0 0 1
+6 * 235
+3 * 235
+3 * 235
+3 * 235 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(144)
calls=235 0x402d9a 770 
* * 2585 1175 705
+5 * 235 235
+4 * 235 235
+8 * 235
+4 * 235 235
+8 * 235
+3 * 235 0 235
+8 +2 235 0 235
+7 -12 235 235
+8 * 235 235
+7 * 235 0 0 0 0 0 0 0 0 235 1
jcnd=1/235 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470 2 0 1 2 0 1
+5 * 235
+3 * 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470 0 1 0 0 1
+5 * 235
+3 * 235 0 0 0 0 0 0 0 0 235 1
+2 * 235 0 0 1 0 0 1
+5 * 235
jump=235 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 235
+2 * 235 0 0 0 0 0 0 0 0 235
jcnd=235/235 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+5 +1 235 235
+4 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470
+5 * 235
+3 * 235 0 235
+3 +1 235 235 0 1 0 0 1
+6 * 235 0 235
+3 * 235 235
+6 * 235 0 235
+3 +2 235 0 235
+7 * 235
jump=235 +86 * 
* * 
+2 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(144)
calls=27965 0x402d9a 770 
* * 307615 139825 83895
+5 * 27965 27965
+4 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(146)
calls=27965 0x402dba 770 
* * 307615 139825 83895
+5 * 27965 27965
+2 * 27965
+4 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 -2 27965 0 27965
+4 * 27965 27965
+3 * 27965
+3 * 27965 27965
+3 * 27965 0 0 0 0 0 0 0 0 27965 236
jcnd=27730/27965 -93 +1 
* * 
-9 * 235 235 0 1 0 0 1
+3 * 235
+3 * 235 235
+3 * 235 0 0 0 0 0 0 0 0 235
jcnd=235/235 -93 +1 
* * 
+2 +4 235 235
+3 * 235
+3 * 235 0 0 1 0 0 1
+4 * 235 235
+5 * 235
+4 * 235
+3 * 235 0 235
+5 +1 235 235
+3 * 235
+3 * 235
+4 * 235 235
+5 * 235
+4 * 235
+3 * 235 0 235
+5 +1 235 235
+5 * 235 235
+5 * 235 235
+5 * 235 0 0 1 0 0 1
+4 * 235
+3 * 235 0 235
+5 +2 235 235
+3 +1 235 0 235
+3 * 235 235
+5 * 235 235
+1 * 235 235

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 828 828 0 1 0 0 1
+6 0 828
+2 0 828 0 0 0 0 0 0 0 0 828 33
+2 0 828 828

fn=(38) _int_malloc
0x3877c79a00 0 954 0 954 1 0 0 1
+2 0 954
+3 0 954 0 954
+2 0 954 0 954
+2 0 954 0 954 0 0 1 0 0 1
+2 0 954
+3 0 954 0 954
+1 0 954 0 954
+1 0 954
+4 0 954
+4 0 954 0 0 0 0 0 0 0 0 954
+6 0 954
+4 0 954
+6 0 954
+3 0 954
+4 0 954
+4 0 954
+4 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+6 0 954 954 0 1 1 0 1 1
+7 0 954 0 0 0 0 0 0 0 0 954 7
jcnd=832/954 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 828
+4 0 828 828
+1 0 828 828
+1 0 828 828
+2 0 828 828
+2 0 828 828
+2 0 828 828
+2 0 828 828
+7 0 849
+7 0 849 0 0 1 0 0 1 0 0 849 5
jcnd=2/849 0x3877c79b70 0 
* 0 
+2 0 847
+3 0 847
+5 0 847
+3 0 847
+4 0 847 0 847
+4 0 847
+2 0 847
+5 0 847 847 0 0 5 0 0 5
+4 0 847
+3 0 847 0 0 0 0 0 0 0 0 847
jcnd=847/847 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 913 247 193 8 1 0 8 1 0 189 23
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 848 0 0 1 0 0 1
+3 0 848
+3 0 848
+3 0 848
+4 0 848
+3 0 848
+4 0 848 0 848
+5 0 848
+3 0 848 0 848
+4 0 848 0 848
+4 0 848 0 848
+5 0 848
+3 0 848
+3 0 848
+3 0 848
+3 0 848
+4 0 848
+4 0 848 0 0 1 0 0 1
+4 0 848 0 848
+4 0 848
+4 0 848 0 848
+5 0 848 0 848
+5 0 848
+3 0 848
+3 0 848 0 848
+5 0 848
+5 0 848
+3 0 848 0 848
+4 0 848 0 848
+4 0 848
+6 0 848 0 848
+4 0 848 0 848
+5 0 848 0 0 1 0 0 1
+3 0 848
+3 0 848
+3 0 848
jump=848 +87 0 
* 0 
+8 0 580
+3 0 580
+4 0 580
+2 0 580
+2 0 580
+3 0 580
+3 0 580
+3 0 580
+2 0 580
+2 0 580
+5 0 580
+2 0 580 580 0 0 1 0 0 1
+4 0 580
+3 0 580
+4 0 580 0 580
+4 0 580 0 580 0 0 1 0 0 1
+8 0 580
+7 0 580 0 580
+4 0 580 0 580 0 0 1 0 0 1
+4 0 580 0 580
+4 0 580 0 0 0 0 0 0 0 0 580
-38 0 340
+3 0 340
+4 0 340 0 340
+4 0 340 0 340
+8 0 340
+7 0 340 0 340
+4 0 340 0 340
+4 0 340 0 340
+4 0 340 0 0 0 0 0 0 0 0 340
+6 0 1769 1769 0 1 0 0 1
+4 0 1769
+3 0 1769 0 0 0 0 0 0 0 0 1769 44
jcnd=676/1769 0x3877c79ef0 0 
* 0 
+6 0 1093 1093
+4 0 1093 1093 0 0 1 0 0 1
+4 0 1093
+4 0 1093 0 0 0 0 0 0 0 0 1093
+6 0 1093 1093 0 1 1 0 1 1
+7 0 1093 0 0 0 0 0 0 0 0 1093
+6 0 1093
+4 0 1093
+7 0 1093 0 0 0 0 0 0 0 0 1093 7
jcnd=7/1093 +11 0 
* 0 
+2 0 1086
+3 0 1086 0 0 0 0 0 0 0 0 1086 242
jcnd=810/1086 0x3877c79e28 0 
* 0 
+6 0 941
+3 0 941 0 941
+4 0 941 0 941
+5 0 941 0 0 0 0 0 0 0 0 941 13
jcnd=21/941 0x3877c7a090 0 
* 0 
+6 0 920
+7 0 920 0 0 0 0 0 0 0 0 920 15
jcnd=580/920 0x3877c79c50 0 
* 0 
+6 0 340 0 0 1 0 0 1
+3 0 340
+4 0 340
+4 0 340 0 0 0 0 0 0 0 0 340 4
jcnd=333/340 0x3877c79db0 0 
* 0 
+6 0 7
+3 0 7
+4 0 7
+2 0 7
+2 0 7
+3 0 7
+3 0 7
+8 0 7
+3 0 7
+2 0 7
+2 0 7
+4 0 7 7
+4 0 7
+3 0 7 0 0 1 0 0 1 0 0 7 4
jcnd=6/7 0x3877c79e15 0 
* 0 
-36 0 333
+2 0 333
+2 0 333
+3 0 333
+3 0 333
+8 0 333
+3 0 333
+2 0 333
+2 0 333
+4 0 333 333
+4 0 333
+3 0 333 0 0 0 0 0 0 0 0 333
jcnd=333/333 0x3877c79e15 0 
* 0 
+6 0 1 1
+4 0 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
jump=1 0x3877c79c73 0 
* 0 
+73 0 333 0 0 1 0 0 1
+3 0 333
+4 0 333
+4 0 333 0 0 0 0 0 0 0 0 333
+2 0 333
+3 0 333 0 0 1 0 0 1
+7 0 333
jump=333 0x3877c79d18 0 
* 0 
+78 0 339 0 339
+4 0 339 0 339
+4 0 339
+3 0 339
jump=339 0x3877c79c73 0 
* 0 
+8 0 810 810 0 1 0 0 1
+4 0 810
+3 0 810 0 0 0 0 0 0 0 0 810 139
jcnd=415/810 0x3877c79ce1 0 
* 0 
+6 0 395 395
+5 0 395 0 0 0 0 0 0 0 0 395 8
jcnd=243/395 0x3877c79ce1 0 
* 0 
+6 0 152 0 0 1 0 0 1
+3 0 152
+3 0 152
+3 0 152
+7 0 152 0 152
+4 0 152 0 152
+4 0 152
+3 0 152 0 152
+4 0 152 0 152 0 0 25 0 0 25
+4 0 152 0 152
+4 0 152 0 0 0 0 0 0 0 0 152 8
jcnd=16/152 +18 0 
* 0 
+2 0 136 0 136 0 0 3 0 0 3
+8 0 136 0 136
+8 0 136
+7 0 136 0 136
+4 0 136
+3 0 136
+3 0 136
+3 0 136
+4 0 136
+3 0 136
+4 0 136
+3 0 136
+3 0 136
+4 0 136 0 136
+4 0 136 0 136 0 0 2 0 0 2
+4 0 136
+4 0 136
+3 0 136 0 136
cfn=(104)
calls=136 0x3877c77180 0 
* 0 544 272 0 0 0 0 0 0 0 136
-56 0 16
+7 0 16 0 16 1 0 1 1 0 1
+4 0 16
+3 0 16
+3 0 16
+3 0 16
+4 0 16
+3 0 16
+4 0 16
+3 0 16
+3 0 16
+4 0 16 0 16
+4 0 16 0 16 0 0 2 0 0 2
+4 0 16
+4 0 16
+3 0 16 0 16
cfn=(104)
calls=16 0x3877c77180 0 
* 0 64 32 0 1 0 0 1 0 0 16
+5 0 152
+3 0 152
jump=152 0x3877c79ae3 0 
* 0 
+55 0 676 0 0 1 0 0 1
+7 0 676
+3 0 676 0 0 0 0 0 0 0 0 676 6
jcnd=2/676 0x3877c7a0b0 0 
* 0 
+6 0 675 675 0 1 0 0 1
+4 0 675
+3 0 675
+3 0 675
+2 0 675
+4 0 675
+3 0 675
+3 0 675
+2 0 675
+2 0 675
+2 0 675
+2 0 675 675
+8 0 675
+5 0 675
+5 0 675
+2 0 675 0 0 0 0 0 0 0 0 675
-2 0 293
+2 0 293 0 0 0 0 0 0 0 0 293 1
jcnd=1/293 +14 0 
* 0 
+2 0 967
+2 0 967 0 0 0 0 0 0 0 0 967 32
jcnd=361/967 +64 0 
* 0 
+2 0 606
+8 0 606
+3 0 606
+3 0 606 0 0 0 0 0 0 0 0 606 2
-6 0 337
+3 0 337
+3 0 337 0 0 0 0 0 0 0 0 337 2
+2 0 943
+2 0 943 943
+8 0 943
+2 0 943 0 0 0 0 0 0 0 0 943 21
jcnd=336/943 -20 0 
* 0 
+2 0 607
+2 0 607
+5 0 607
+3 0 607
+3 0 607
+2 0 607
+2 0 607
+5 0 607 0 0 0 0 0 0 0 0 607 3
jcnd=4/607 +14 0 
* 0 
+2 0 603
+2 0 603
+4 0 603
+2 0 603
+2 0 603 0 0 0 0 0 0 0 0 603 5
jcnd=486/603 -8 0 
* 0 
-8 0 2384
+4 0 2384
+2 0 2384
+2 0 2384 0 0 0 0 0 0 0 0 2384 234
jcnd=1601/2384 -8 0 
* 0 
-2 0 361 0 0 1 0 0 1
+2 0 361 0 0 0 0 0 0 0 0 361 20
jcnd=297/361 -8 0 
* 0 
+2 0 968 968 0 0 12 0 0 12
+4 0 968 0 0 1 0 0 1
+3 0 968 0 0 0 0 0 0 0 0 968 257
jcnd=675/968 0x3877c7a1cf 0 
* 0 
+6 0 293
+2 0 293
+4 0 293
+2 0 293
+2 0 293
+2 0 293 0 293
+8 0 293
jump=293 0x3877c79f30 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 0 0 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c79f00 0 
* 0 
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+3 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 -18 0 
* 0 
-18 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 1 0 1 0 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1
+3 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1 0 1 0 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c7a659 0 
* 0 
+6 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1
+7 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c7a285 0 
* 0 
+31 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 675 675 0 1 2 0 1 2
+4 0 675 675 0 0 1 0 0 1
+4 0 675
+3 0 675 675
+4 0 675
+4 0 675
+3 0 675
+3 0 675 675
+4 0 675 0 0 0 0 0 0 0 0 675
+6 0 675 675 0 0 1 0 0 1
+4 0 675 0 0 0 0 0 0 0 0 675
+6 0 675 675 0 1 0 0 1
+8 0 675 0 675
+4 0 675 0 675
+4 0 675 0 0 0 0 0 0 0 0 675 19
jcnd=335/675 +38 0 
* 0 
+2 0 340 340 0 0 1 0 0 1
+4 0 340
+3 0 340 0 0 0 0 0 0 0 0 340
+2 0 340 340
+5 0 340 0 0 0 0 0 0 0 0 340
+6 0 340 340
+4 0 340 0 340
+4 0 340 340
+4 0 340 0 340
+4 0 340
+4 0 340 0 0 0 0 0 0 0 0 340
-4 0 335
+4 0 335 0 0 0 0 0 0 0 0 335 7
jcnd=20/335 0x3877c7a2e3 0 
* 0 
+6 0 655 655
+4 0 655 655 0 1 0 0 1
+4 0 655 0 0 0 0 0 0 0 0 655
+6 0 655
+4 0 655
+7 0 655 0 655 0 0 10 0 0 10
+4 0 655 0 655
+4 0 655 0 655
+4 0 655 0 655
+4 0 655 0 0 0 0 0 0 0 0 655 3
jcnd=1/655 +7 0 
* 0 
+2 0 654 0 654
+5 0 654
+7 0 654 0 0 0 0 0 0 0 0 654 1
jcnd=316/654 +18 0 
* 0 
-7 0 1
+7 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 +18 0 
* 0 
+2 0 338 0 338 0 0 3 0 0 3
+8 0 338 0 338
+8 0 338
+7 0 338 0 338 0 0 3 0 0 3
+4 0 338
+3 0 338
+3 0 338
+4 0 338
+3 0 338
+4 0 338
+3 0 338
+3 0 338
+4 0 338 0 338
+4 0 338 0 338 0 0 2 0 0 2
+4 0 338
jump=338 +71 0 
* 0 
-46 0 318 0 0 1 0 0 1
+7 0 318 0 318
+4 0 318
+3 0 318
+3 0 318
+4 0 318
+3 0 318
+4 0 318
+3 0 318
+3 0 318
+4 0 318 0 318
+4 0 318 0 318
+4 0 318
jump=318 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 20
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 +7 0 
* 0 
+7 0 676
+4 0 676 0 0 1 0 0 1
+3 0 676
+3 0 676 0 676
cfn=(104)
calls=676 0x3877c77180 0 
* 0 2704 1352 0 0 0 0 0 0 0 676 33
+5 0 676
+3 0 676
jump=676 0x3877c79ae3 0 
* 0 
0x3877c7a659 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 954 0 954 1 0 0 1
+5 0 954 0 954
+5 0 954
+3 0 954 0 954
+5 0 954
+4 0 954 954 0 0 1 0 0 1
+7 0 954 954 0 0 1 0 0 1
+3 0 954
+3 0 954 0 0 0 0 0 0 0 0 954 1
+6 0 954 954 0 0 1 0 0 1
+7 0 954 954 0 1 1 0 1 1
+4 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+2 0 954 954 0 0 1 0 0 1
+3 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +97 0 
* 0 
+18 0 954
+3 0 954
+3 0 954 0 954
cfn=(38)
calls=954 0x3877c79a00 0 
* 0 213418 28128 34832 44 30 54 44 30 54 32249 1194
+5 0 954
+3 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+2 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+2 0 954
+3 0 954 0 0 0 0 0 0 0 0 954 3
+2 0 954 954
+7 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +13 0 
* 0 
+13 0 954 0 954
+2 0 954 0 0 0 0 0 0 0 0 954 47
+6 0 954
+3 0 954 954
+4 0 954 954
+5 0 954 954
+5 0 954
+4 0 954 954
+1 0 954 0 0 1 0 0 1
+5 0 954 954 0 0 1 0 0 1
+7 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +14 0 
* 0 
+14 0 954 0 954 1 0 0 1
+3 0 954 0 0 0 0 0 0 0 0 954
+6 0 954
jump=954 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 954 0 954 1 0 0 1
+2 0 954
+3 0 954
+3 0 954 0 954
+2 0 954
+3 0 954 0 954
+1 0 954
+3 0 954 0 954
+1 0 954
+3 0 954
+4 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+6 0 954
+4 0 954
+3 0 954 0 0 0 0 0 0 0 0 954 7
jcnd=10/954 0x3877c838d1 0 
* 0 
+2 0 944
+3 0 944
+3 0 944
+3 0 944
+3 0 944
+3 0 944 0 0 0 0 0 0 0 0 944
jcnd=944/944 +41 0 
* 0 
+41 0 944 0 0 1 0 0 1
+3 0 944 0 0 0 0 0 0 0 0 944
jcnd=944/944 0x3877c839c0 0 
* 0 
+24 0 944
+3 0 944
+4 0 944
+3 0 944
+3 0 944
+3 0 944
+3 0 944
+3 0 944 0 0 0 0 0 0 0 0 944 506
jcnd=480/944 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 474
+10 0 474 474 0 0 2 0 0 2
+3 0 474
+4 0 474 0 474
+3 0 474
+4 0 474
+4 0 474 0 0 0 0 0 0 0 0 474
jcnd=474/474 -18 0 
* 0 
-18 0 1478 1478
+3 0 1478
+4 0 1478 0 1478
+3 0 1478
+4 0 1478
+4 0 1478 0 0 0 0 0 0 0 0 1478 11
jcnd=1004/1478 -18 0 
* 0 
+2 0 954
+4 0 954
+3 0 954 954
+1 0 954 954
+1 0 954 954
+2 0 954 954 0 1 0 0 1
+2 0 954 954
0x3877c839c0 0 944 0 0 1 0 0 1
+3 0 944
+3 0 944
+3 0 944
+4 0 944 0 944 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=944 0x3877c89b20 0 
* 0 157190 57828 55940 6 1 13 6 1 13 7526 477 944 117
+5 0 944
jump=944 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 954 954 0 1 1 0 1 1
+7 0 954 954 0 0 1 0 0 1
+3 0 954
+3 0 954 0 0 1 0 0 1 0 0 954
+6 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+6 0 954 954
+4 0 954
+4 0 954
+2 0 954 0 0 0 0 0 0 0 0 954 2
+2 0 954
+2 0 954
+7 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +14 0 
* 0 
+14 0 954
+2 0 954
cfn=(170) _int_free
calls=954 0x3877c78650 0 
* 0 100211 27158 16264 19 1 0 19 1 0 24371 285

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 954 0 954 1 0 0 1
+2 0 954 0 954
+2 0 954 0 954
+2 0 954
+3 0 954 0 954
+2 0 954 0 954
+1 0 954 0 954
+1 0 954
+3 0 954
+4 0 954 954
+4 0 954 0 954
+4 0 954
+3 0 954
+4 0 954
+3 0 954
+3 0 954
+3 0 954 0 0 1 0 0 1 0 0 954
+6 0 954
+4 0 954 0 0 0 0 0 0 0 0 954
+6 0 954
+4 0 954 0 0 0 0 0 0 0 0 954
+6 0 954 954
+7 0 954 0 0 0 0 0 0 0 0 954 4
jcnd=830/954 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 830
+2 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830 0 1 0 0 1
+4 0 830
+3 0 830
+2 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 0x3877c78a40 0 
* 0 
+6 0 830 830
+4 0 830
+3 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830
+5 0 830
+4 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 0x3877c7907c 0 
* 0 
+6 0 830 830
+5 0 830
+4 0 830 0 0 0 0 0 0 0 0 830
+6 0 830
+4 0 830 0 0 1 0 0 1 0 0 830
+6 0 830
+4 0 830 830
+7 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830
+6 0 830
+2 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830
+4 0 830 0 0 0 0 0 0 0 0 830 3
jcnd=827/830 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=2/3 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 830 830 0 1 0 0 1
+4 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830
+6 0 830 0 0 1 0 0 1 0 0 830 60
jcnd=44/830 0x3877c78a78 0 
* 0 
+6 0 786 786
+5 0 786 786
+5 0 786 786
+4 0 786 0 0 0 0 0 0 0 0 786
+6 0 786 786
+4 0 786 0 0 0 0 0 0 0 0 786
+6 0 786 786
+9 0 786 0 786
+4 0 786 0 786
+4 0 786 0 0 0 0 0 0 0 0 786 188
jcnd=317/786 +16 0 
* 0 
+2 0 469 469
+5 0 469
+3 0 469 0 0 0 0 0 0 0 0 469 3
jcnd=1/469 0x3877c78ee4 0 
* 0 
+6 0 786 0 0 1 0 0 1
+3 0 786
+4 0 786 786
+4 0 786 786
+4 0 786 0 0 0 0 0 0 0 0 786
-12 0 44
+4 0 44 44
+4 0 44 44
+4 0 44 0 0 0 0 0 0 0 0 44
+6 0 830
+7 0 830 0 830
+4 0 830 0 830
+4 0 830 0 0 0 0 0 0 0 0 830 24
jcnd=356/830 +18 0 
* 0 
+2 0 474 0 474
+8 0 474 0 474
+8 0 474 0 474
+4 0 474
+3 0 474 0 474 1 0 0 1
+4 0 474
+4 0 474 0 474
+4 0 474 0 474
+4 0 474
+7 0 474 0 0 0 0 0 0 0 0 474
jcnd=474/474 0x3877c78b20 0 
* 0 
-30 0 356 0 356
+4 0 356
+3 0 356 0 356
+4 0 356
+4 0 356 0 356
+4 0 356 0 356
+4 0 356
+7 0 356 0 0 0 0 0 0 0 0 356
jcnd=356/356 0x3877c78b20 0 
* 0 
0x3877c78a40 0 830 0 0 1 0 0 1
+5 0 830 830
+4 0 830 830
+7 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 +16 0 
* 0 
+16 0 830 0 830
+5 0 830 0 0 0 0 0 0 0 0 830
+6 0 830
+3 0 830
jump=830 0x3877c7878f 0 
* 0 
+10 0 44 0 44
+6 0 44 0 0 1 0 0 1
jump=44 0x3877c78885 0 
* 0 
0x3877c78b20 0 830 830 0 1 0 0 1
+4 0 830
+2 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830
+7 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 +15 0 
* 0 
+15 0 830 0 830 1 0 0 1
+4 0 830 0 0 0 0 0 0 0 0 830
+6 0 830
+4 0 830 830
+1 0 830 830
+1 0 830 830
+2 0 830 830
+2 0 830 830
+2 0 830 830
+2 0 830 830
0x3877c78ee4 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+5 0 1 0 1
+4 0 1 1
+5 0 1 0 1
+4 0 1
jump=1 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 830 830 0 1 1 0 1 1
+4 0 830 0 0 1 0 0 1
+7 0 830
+4 0 830
+3 0 830
+3 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 944 0 0 1 0 0 1
+7 0 944
+3 0 944
+3 0 944 944 0 0 1 0 0 1
+4 0 944
+4 0 944 0 0 0 0 0 0 0 0 0 0 944 117
jump=112 0x3877c89be8 0 
* 0 
jump=120 0x3877c89bd0 0 
* 0 
jump=112 0x3877c89bb8 0 
* 0 
jump=116 +11 0 
* 0 
jump=120 0x3877c89c48 0 
* 0 
jump=122 0x3877c89c30 0 
* 0 
jump=120 0x3877c89c18 0 
* 0 
jump=122 0x3877c89c00 0 
* 0 
+11 0 116 116
+3 0 116
+4 0 116
+4 0 116 116
+4 0 116
+4 0 116 0 116
+4 0 116
+9 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116
+4 0 116
+4 0 116 0 0 0 0 0 0 0 0 116
jcnd=8/116 0x3877c89c60 0 
* 0 
-40 0 6814 6814
+4 0 6814 0 6814 0 0 7 0 0 7
+4 0 6814 6814
+4 0 6814 0 6814
+4 0 6814 6814
+4 0 6814 0 6814 0 0 1 0 0 1
+4 0 6814 6814
+4 0 6814 0 6814
+4 0 6814
+4 0 6814
+4 0 6814 0 0 0 0 0 0 0 0 6814 471
jcnd=908/6814 0x3877c89c60 0 
* 0 
-32 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122
jcnd=10/122 0x3877c89c60 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-16 0 122 122 0 1 0 0 1
+4 0 122 0 122
+4 0 122 0 0 1 0 0 1
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122 6
jcnd=10/122 0x3877c89c60 0 
* 0 
+6 0 6350
+4 0 6350 6350
+3 0 6350 0 6350
+3 0 6350 6350
+4 0 6350 0 6350 0 0 4 0 0 4
+4 0 6350 6350
+4 0 6350 0 6350 0 0 1 0 0 1
+4 0 6350 6350
+4 0 6350 0 6350
+4 0 6350
jump=6350 -80 0 
* 0 
-30 0 112 112
+3 0 112 0 112
+3 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-16 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
+8 0 112 112
+3 0 112
+4 0 112 0 0 1 0 0 1
+4 0 112
+4 0 112
jump=112 -39 0 
* 0 
+9 0 120
+3 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+3 0 120
+4 0 120
jump=120 -72 0 
* 0 
+8 0 112
+4 0 112 112
+3 0 112 0 0 0 0 0 0 0 0 112
+2 0 112
+4 0 112
jump=112 -99 0 
* 0 
+11 0 122 122 0 1 0 0 1
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b78 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b70 0 
* 0 
+9 0 122 122
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b68 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b60 0 
* 0 
+9 0 944 0 944 1 0 0 1
+3 0 944 944

totals: 5570824 2242271 1321510 240 82 91 240 82 91 176259 3259 5714 117
