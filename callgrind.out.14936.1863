version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1863


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2421878164 - 2423112450
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 680
+4 * 680
+3 * 680 0 680
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=680 0x4044cc -35 
* * 3400 1360 1360
+5 * 680 680
+1 * 680 680

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680 1 0 0 1
+4 +1 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=680 0x4049d4 -35 
* * 4080 1360 2040 1 0 0 1
+5 * 680 680
+1 * 680 680

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 680
+4 * 680
+3 * 680 0 680
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=680 0x404520 -35 
* * 3400 1360 1360
+5 * 680 680
+1 * 680 680

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=680 0x404a28 -35 
* * 4080 1360 2040 1 0 1 1 0 1
+5 * 680 680
+1 * 680 680

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680
+4 * 680 680
+4 * 680 680
+1 * 680 680

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 340 0 340
+1 * 340
+3 * 340
+4 * 340 0 340
+4 * 340 0 340
+4 * 340 0 340
+4 +1 340 340
+4 * 340 340
+4 * 340 340
+4 * 340
+3 * 340
+3 * 340 0 340
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=340 0x40406a -87 
* * 8160 2720 3060 0 22 13 0 22 13 340
+5 * 340 340
+1 * 340 340

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 680 0 680
+1 * 680
+3 * 680 0 680
+4 * 680 680
+4 * 680 680
+1 * 680 680

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 340 0 340
+1 * 340
+3 * 340
+4 * 340 0 340
+4 * 340 0 340
+4 * 340 0 340
+4 +1 340 340
+4 * 340 340
+4 * 340 340
+4 * 340
+3 * 340
+3 * 340 0 340
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=340 0x403df2 -87 
* * 8160 2720 3060 0 22 4 0 22 4 340 2
+5 * 340 340
+1 * 340 340

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 760 0 760
+1 * 760
+3 * 760 0 760 0 0 1 0 0 1
+4 +1 760 760
+4 * 760 760
+1 * 760 760

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360
+4 * 1360 0 1360
+4 +1 1360
+4 * 1360
+3 * 1360 0 1360
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1360 0x404ffe 790 
* * 8160 4080 2720 1 0 0 1
+5 * 1360 1360
+3 * 1360 1360
+1 * 1360 1360

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360 0 1360
+4 +1 1360 1360
+4 * 1360 1360
+1 * 1360 1360

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360
+4 * 1360 0 1360
+4 +1 1360
+4 * 1360
+3 * 1360 0 1360 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1360 0x40500c 790 
* * 8160 4080 2720 1 0 0 1
+5 * 1360 1360
+3 * 1360 1360
+1 * 1360 1360

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 760 0 760
+1 * 760
+3 * 760 0 760
+4 +1 760 760
+4 * 760 760
+1 * 760 760

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360 0 1360
+4 +1 1360 1360 0 1 0 0 1
+4 * 1360 1360
+1 * 1360 1360

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 680 0 680
+1 * 680
+3 * 680 0 680
+4 * 680 0 680
+4 * 680 680
+4 * 680 680
+1 * 680 680

fl=(5)
fn=(28)
0x404992 113 704 0 704 1 0 0 1
+1 * 704
+3 * 704 0 704
+4 +1 704
+10 * 704 704
+1 * 704 704

fn=(176)
0x4044cc 86 680 0 680
+1 * 680
+3 * 680 0 680
+4 * 680 680
+1 * 680 680

fn=(224)
0x403df2 129 340 0 340
+1 * 340
+3 * 340
+4 * 340 0 340
+4 * 340 0 340
+4 * 340 0 340
+4 +1 340 340
+4 * 340
+3 * 340
+5 * 340 0 340
cfi=(16)
cfn=(226)
calls=340 0x402d61 -20 
* * 2380 1020 1020
+5 * 340
+3 * 340 0 0 0 0 0 0 0 0 340 2
+2 * 340 340
+4 * 340 340 0 0 22 0 0 22
+2 * 340 0 340 0 0 4 0 0 4
+2 * 340 340
+1 * 340 340

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688
+3 * 688 0 688
cob=(5) /usr/lib64/libstdc++.so.6.0.13
cfi=(8) ???
cfn=(164) operator delete(void*)
calls=688 0x387e4bb2f0 0 
* * 86818 22719 12297 23 4 0 23 4 0 21398 221 688
* * 688 688 0 1 1 0 1 1 0 0 0 688
+5 * 688 688
+1 * 688 688

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +1 688 688
+4 * 688
+3 * 688 0 688
cob=(5)
cfi=(8)
cfn=(164)
calls=688 0x387e4bb2f0 0 
* * 85013 22304 11620 0 3 0 0 3 0 21027 305 688
* * 688 688 0 0 0 0 0 0 0 0 0 688
+5 * 688 688
+1 * 688 688

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688
+3 * 688 0 688
cfn=(102)
calls=688 0x4048de +12 
* * 4128 1376 1376 1 0 0 1
+5 * 688 688
+4 * 688 0 0 1 0 0 1
+3 * 688
+2 * 688 0 0 0 0 0 0 0 0 688
jcnd=688/688 +7 +3 
* * 
+7 +3 688 688
+4 * 688
+4 * 688
+3 * 688 0 688
cob=(5)
cfi=(8)
cfn=(32) operator new(unsigned long)
calls=688 0x387e4bd0b0 0 
* * 222255 33236 31843 26 13 33 26 13 33 37513 1487 688
* * 688 688 0 0 0 0 0 0 0 0 0 688
+5 +1 688 688
+1 * 688 688

fn=(18)
0x404a28 81 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680 0 0 1 0 0 1
+4 * 680 0 680
+4 * 680 680
+1 * 680 680

fn=(92)
0x4049d4 81 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680
+4 * 680 0 680
+4 * 680 680
+1 * 680 680

fn=(196)
0x404520 86 680 0 680
+1 * 680
+3 * 680 0 680
+4 * 680 680
+1 * 680 680

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688 1 0 0 1
+4 +2 688 688
+4 * 688
+3 * 688 0 688
cfn=(28)
calls=688 0x404992 +12 
* * 4128 1376 1376 1 0 0 1
+5 * 688 688
+4 * 688
+3 * 688
+2 * 688 0 0 0 0 0 0 0 0 688
jcnd=688/688 +7 +3 
* * 
+7 +3 688 688
+4 * 688
+4 * 688
+3 * 688 0 688
cob=(5)
cfi=(8)
cfn=(32)
calls=688 0x387e4bd0b0 0 
* * 220493 32904 35218 29 29 21 29 29 21 36160 1592 688
* * 688 688 0 1 1 0 1 1 0 0 0 688
+5 +1 688 688
+1 * 688 688

fn=(102)
0x4048de 113 704 0 704 1 0 0 1
+1 * 704
+3 * 704 0 704
+4 +1 704
+10 * 704 704
+1 * 704 704

fn=(266)
0x40406a 129 340 0 340
+1 * 340
+3 * 340
+4 * 340 0 340
+4 * 340 0 340
+4 * 340 0 340
+4 +1 340 340
+4 * 340
+3 * 340
+5 * 340 0 340
cfi=(16)
cfn=(226)
calls=340 0x402d61 -20 
* * 2380 1020 1020
+5 * 340
+3 * 340 0 0 0 0 0 0 0 0 340
+2 * 340 340
+4 * 340 340 0 0 22 0 0 22
+2 * 340 0 340 0 0 13 0 0 13
+2 * 340 340
+1 * 340 340

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=680 0x404484 107 
* * 345422 115280 111204 25 3 3 25 3 3 13112 866 1356 169
+5 * 680 680
+1 * 680 680

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680 0 1 0 0 1
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=680 0x404a36 450 
* * 326382 108480 104404 24 3 3 24 3 3 13112 866 1356 169
+5 * 680 680
+1 * 680 680

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=680 0x40439c 107 
* * 345422 115280 111204 7 1 39 7 1 39 13112 784 1356
+5 * 680 680
+1 * 680 680

fn=(116)
0x40439c 107 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +10 680 680
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=680 0x4047d7 -26 
* * 335902 111880 107804 7 1 39 7 1 39 13112 784 1356
+5 +1 680 680
+1 * 680 680

fn=(118)
0x4047d7 91 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=680 0x4049e2 450 
* * 326382 108480 104404 7 1 39 7 1 39 13112 784 1356
+5 * 680 680
+1 * 680 680

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +10 680 680
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(52)
calls=680 0x404829 -26 
* * 335902 111880 107804 25 3 3 25 3 3 13112 866 1356 169
+5 +1 680 680
+1 * 680 680

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 680 0 680
+1 * 680
+3 * 680 0 680
+1 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=680 0x4043ca -45 
* * 24480 8840 9520 4 0 4 4 0 4
+5 +1 680 680 0 1 0 0 1
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=680 0x404412 +43 
* * 263827 49553 47776 27 22 15 27 22 15 37166 1537 1360
+5 * 680
jump=680 +28 * 
* * 
+28 * 680
+4 * 680 680
+1 * 680 680
+1 * 680 680

fn=(14)
0x4043ca 90 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680 0 0 1 0 0 1
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(4)
cfn=(16)
calls=680 0x404804 +24 
* * 12240 4080 4760 2 0 1 2 0 1
+5 * 680 680
+4 * 680 0 680 0 0 2 0 0 2
+7 * 680 680
+4 * 680 0 680 1 0 0 1
+8 * 680 680
+4 * 680 0 680
+8 +1 680 680
+1 * 680 680

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680
+2 * 680 0 680
+2 * 680 0 680
+1 * 680 0 0 1 0 0 1
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680
+3 * 680 0 680
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=680 0x4039fc 117 
* * 4080 2040 1360 2 0 0 2
+5 * 680
+3 * 680 0 680
cfi=(3)
cfn=(84)
calls=680 0x4039ed -88 
* * 4080 2040 1360
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=680 0x402d74 645 
* * 8840 4080 1360
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680
+3 * 680
+3 * 680 0 680 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=680 0x403a0a 134 
* * 304159 63235 58481 25 7 30 25 7 30 38341 1432 1360
+5 +4 680 680
+4 * 680
+3 * 680 0 680
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=680 0x40325e 113 
* * 4080 2040 1360 1 0 0 1
+5 * 680
+3 * 680 680
+4 * 680 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=680 0x403a98 565 
* * 17000 6800 5440 2 0 0 2
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=680 0x403a68 547 
* * 17000 6800 5440
+5 * 680
+3 * 680
+3 * 680
+3 * 680
+3 * 680 0 680
cfi=(11)
cfn=(114)
calls=680 0x403ac9 -60 
* * 355622 118680 115284 7 1 39 7 1 39 13112 784 1356
+5 -3 680 680
+4 * 680 0 680
+4 * 680
jump=680 +28 +4 
* * 
+28 +4 680
+4 * 680 680
+1 * 680 680
+2 * 680 680
+2 * 680 680
+1 * 680 680

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+5 * 688 0 0 0 0 0 0 0 0 688 8
+2 +1 688 688
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(5)
cfn=(190)
calls=688 0x40452a -65 
* * 93269 25056 15060 0 3 0 0 3 0 21027 305 1376
+5 +1 688 688
+1 * 688 688

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688 1 0 0 1
+4 * 688 0 688
+4 0 688 688
+5 0 688 0 0 0 0 0 0 0 0 688
+2 0 688 688
+4 0 688 688
+4 0 688
+5 0 688
+3 0 688
+3 0 688 0 688
fi=(6) ???
cfi=(5)
cfn=(26)
calls=688 0x404730 99 
* 0 238381 38408 40722 33 30 21 33 30 21 36848 1592 1376
+5 0 688
fi=(6)
jump=688 +7 0 
* 0 
+7 0 688 688
+1 0 688 688

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+4 * 680 0 680
+4 * 680
+4 * 680 0 0 1 0 0 1
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=680 0x404468 726 
* * 6800 3400 2720 1 0 0 1
+5 * 680 680
+4 * 680 680
+1 * 680 680

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+3 * 680 0 680
+4 * 680
+4 * 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(10)
cfn=(44)
calls=680 0x404468 726 
* * 6800 3400 2720
+5 * 680 680
+4 * 680 680
+1 * 680 680

fn=(86)
0x403a0a 134 680 0 680
+1 * 680
+3 * 680 0 680
+1 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=680 0x4042e2 -45 
* * 24480 8840 9520 5 0 0 5
+5 +1 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=680 0x40432a +43 
* * 264719 49635 44201 19 7 30 19 7 30 38341 1432 1360
+5 * 680
jump=680 +28 * 
* * 
+28 * 680
+4 * 680 680
+1 * 680 680
+1 * 680 680

fn=(88)
0x4042e2 90 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680 1 0 0 1
cfi=(4)
cfn=(90)
calls=680 0x4047b2 +24 
* * 12240 4080 4760 3 0 0 3
+5 * 680 680
+4 * 680 0 680
+7 * 680 680
+4 * 680 0 680
+8 * 680 680
+4 * 680 0 680
+8 +1 680 680
+1 * 680 680

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680
+1 * 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680 680 0 1 0 0 1
+4 * 680
+3 * 680 680
+4 * 680 680
+3 * 680
+3 * 680
+3 * 680
+4 * 680
+3 * 680 680
+4 * 680 680
+3 -1 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=680 0x403ce6 +11 
* * 105008 29312 18986 24 5 0 24 5 0 21884 216 1360
+5 +1 680 680
+4 * 680
+3 * 680 0 680
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=680 0x4031b8 -82 
* * 15640 5440 5440 1 0 0 1
+5 * 680
jump=680 +28 * 
* * 
+28 * 680
+4 * 680 680
+1 * 680 680
+1 * 680 680

fn=(172)
0x4031b8 79 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 680
+4 * 680
+3 * 680 0 680
cfi=(4)
cfn=(174)
calls=680 0x403ccc +42 
* * 9520 3400 3400
+5 * 680 680
+1 * 680 680

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1392 0 1392 1 0 0 1
+1 * 1392
+3 * 1392 0 1392
+4 +1 1392 1392
+4 * 1392 1392 0 0 2 0 0 2
+4 * 1392
+3 * 1392 1392
+4 * 1392 1392
+3 * 1392
+3 * 1392
+3 * 1392
+4 * 1392 1392
+1 * 1392 1392

fn=(106)
0x40325e 113 1384 0 1384 1 0 0 1
+1 * 1384
+3 * 1384 0 1384
+4 +1 1384 1384
+4 * 1384 1384
+1 * 1384 1384

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 696 0 696 1 0 0 1
+1 * 696
+3 * 696 0 696 0 0 1 0 0 1
+4 +1 696 696
+4 * 696 696
+1 * 696 696

fn=(82)
0x4039fc 117 696 0 696 1 0 0 1
+1 * 696
+3 * 696 0 696 1 0 0 1
+4 +1 696 696
+4 * 696 696
+1 * 696 696

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 340 0 340
+1 * 340
+3 * 340
+4 * 340 0 340
+4 * 340 0 340
+4 +2 340 340
+4 * 340 340
+4 * 340 340
+4 * 340 340
+4 * 340
+3 * 340 0 0 0 0 0 0 0 0 340 9
jcnd=8/340 +51 +10 
* * 
+2 +3 332 332
+4 * 332 332
+4 * 332 332
+4 -1 332 332
+4 * 332
+3 * 332
+3 * 332 0 332
cfi=(3)
cfn=(222)
calls=332 0x403373 215 
* * 12616 4316 4648 0 21 3 0 21 3 332 2
+5 +2 332 332
+4 * 332 332
+4 * 332
+4 * 332 332
+4 * 332 0 332
+4 * 332
jump=332 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12860 3940 3430 36 7 7 36 7 7 898 65 47
+5 +2 340 340
+1 * 340 340

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680
+2 * 680 0 680
+2 * 680 0 680
+1 * 680
+4 * 680 0 680 1 0 0 1
+4 * 680 0 680
+4 +2 680 680
+4 * 680
+3 * 680 0 680
cfn=(6)
calls=680 0x403b08 117 
* * 4080 2040 1360 1 0 1 1 0 1
+5 * 680
+3 * 680 0 680
cfi=(3)
cfn=(8)
calls=680 0x403afa -88 
* * 4080 2040 1360 1 0 0 1
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(10)
calls=680 0x402f54 645 
* * 8840 4080 1360 1 1 0 1 1
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680
+3 * 680
+3 * 680 0 680
cfn=(12)
calls=680 0x403b16 134 
* * 303267 63153 62056 32 22 19 32 22 19 37166 1537 1360
+5 +4 680 680 0 1 0 0 1
+4 * 680
+3 * 680 0 680
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=680 0x40333c 113 
* * 4080 2040 1360 2 0 0 2
+5 * 680
+3 * 680 680
+4 * 680 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(42)
calls=680 0x403ba4 565 
* * 17000 6800 5440 3 0 0 3
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(46)
calls=680 0x403b74 547 
* * 17000 6800 5440
+5 * 680
+3 * 680
+3 * 680
+3 * 680
+3 * 680 0 680 1 0 0 1
cfi=(11)
cfn=(48)
calls=680 0x403bd5 -60 
* * 355622 118680 115284 26 3 3 26 3 3 13112 866 1356 169
+5 -3 680 680
+4 * 680 0 680
+4 * 680
jump=680 +28 +4 
* * 
+28 +4 680
+4 * 680 680
+1 * 680 680
+2 * 680 680
+2 * 680 680
+1 * 680 680

fn=(108)
0x403a98 565 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+4 * 680 0 680
+4 * 680
+4 * 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=680 0x404380 726 
* * 6800 3400 2720 1 0 0 1
+5 * 680 680
+4 * 680 680
+1 * 680 680

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 680 0 680
+1 * 680
+3 * 680 0 680
+1 * 680
+4 * 680 0 680 1 0 0 1
+4 +2 680 680
+4 * 680
+3 * 680 0 680
cfn=(40)
calls=680 0x40333c 113 
* * 4080 2040 1360
+5 * 680
+3 * 680 680
+4 * 680 680
+4 * 680 680
+4 * 680 680
+3 -1 680
+3 * 680
+3 * 680 0 680
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=680 0x40334a 148 
* * 21080 6800 8160 2 0 0 2
+5 +1 680 680
+4 * 680
+3 * 680 0 680
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=680 0x4032ca 159 
* * 137850 41800 27146 3 3 0 3 3 0 21504 296 1360
+5 * 680
jump=680 +28 * 
* * 
+28 * 680 0 0 1 0 0 1
+4 * 680 680
+1 * 680 680
+1 * 680 680

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 688 0 688 1 0 0 1
+1 * 688 0 0 1 0 0 1
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 0 688 688
+5 0 688 0 0 0 0 0 0 0 0 688
+2 0 688 688
+4 0 688 688
+4 0 688
+5 0 688
+3 0 688
+3 0 688 0 688
fi=(6)
cfi=(5)
cfn=(100)
calls=688 0x40461a 99 
* 0 240143 38740 37347 29 13 33 29 13 33 38201 1487 1376
+5 0 688
fi=(6)
jump=688 +7 0 
* 0 
+7 0 688 688
+1 0 688 688

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 175610 0 175610
+1 * 175610
+3 * 175610 0 175610
+4 * 175610 0 175610
+4 +1 175610 175610
+4 * 175610 175610
+3 * 175610 175610
+4 * 175610
+4 * 175610
+3 * 175610 175610
+1 * 175610 175610

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 175610 0 175610
+1 * 175610
+3 * 175610 0 175610 1 0 0 1
+4 * 175610 0 175610
+4 +1 175610 175610
+4 * 175610 175610
+3 * 175610 175610
+4 * 175610
+4 * 175610
+3 * 175610 175610
+1 * 175610 175610

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 680
+4 * 680
+3 * 680 0 680
cfi=(4)
cfn=(194)
calls=680 0x403d7e +42 
* * 9520 3400 3400 1 0 0 1
+5 * 680 680
+1 * 680 680

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680
+1 * 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680 680
+4 * 680
+3 * 680 680
+4 * 680 680
+3 * 680
+3 * 680
+3 * 680
+4 * 680
+3 * 680 680
+4 * 680 680
+3 -1 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(188)
calls=680 0x403d98 +11 
* * 103170 28880 18306 1 3 0 1 3 0 21504 296 1360
+5 +1 680 680
+4 * 680
+3 * 680 0 680
cfn=(192)
calls=680 0x403296 -82 
* * 15640 5440 5440 1 0 0 1
+5 * 680
jump=680 +28 * 
* * 
+28 * 680
+4 * 680 680
+1 * 680 680
+1 * 680 680

fn=(2)
0x402d74 645 2752 0 2752 1 0 0 1
+1 * 2752
+3 * 2752 0 2752 0 0 1 0 0 1
+4 +1 2752 2752
+4 * 2752 2752 0 1 1 0 1 1
+4 * 2752
+3 * 2752 2752
+4 * 2752 2752
+3 * 2752
+3 * 2752
+3 * 2752
+4 * 2752 2752
+1 * 2752 2752

fn=(20)
0x404412 179 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(22)
calls=680 0x404236 -14 
* * 246827 41393 43016 26 22 15 26 22 15 37166 1537 1360
+5 * 680 680
+4 * 680 0 680
+3 +1 680 680
+4 * 680 680 0 1 0 0 1
+3 * 680 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+3 * 680 680
+4 * 680
+4 * 680
+3 * 680 680
+4 * 680 0 680
+4 +1 680 680
+1 * 680 680

fn=(94)
0x40432a 179 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680 680 0 1 0 0 1
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(96)
calls=680 0x403fbe -14 
* * 247719 41475 39441 18 7 30 18 7 30 38341 1432 1360
+5 * 680 680
+4 * 680 0 680
+3 +1 680 680
+4 * 680 680
+3 * 680 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+3 * 680 680
+4 * 680
+4 * 680
+3 * 680 680
+4 * 680 0 680
+4 +1 680 680
+1 * 680 680

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 340 0 340
+1 * 340
+3 * 340 0 0 1 0 0 1
+4 * 340 0 340
+4 * 340 0 340
+4 +2 340 340
+4 * 340 340
+4 * 340 340
+4 * 340 340
+4 * 340
+3 * 340 0 0 0 0 0 0 0 0 340
jcnd=8/340 +51 +10 
* * 
+2 +3 332 332
+4 * 332 332
+4 * 332 332
+4 -1 332 332
+4 * 332
+3 * 332
+3 * 332 0 332
cfi=(3)
cfn=(264)
calls=332 0x4036b1 215 
* * 12616 4316 4648 0 21 9 0 21 9 332
+5 +2 332 332
+4 * 332 332
+4 * 332
+4 * 332 332
+4 * 332 0 332
+4 * 332
jump=332 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12023 3707 3233 27 9 29 27 9 29 729 76 47
+5 +2 340 340
+1 * 340 340

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1384 0 1384 1 0 0 1
+1 * 1384
+3 * 1384 0 1384 1 0 0 1
+4 +1 1384 1384
+4 * 1384 1384
+1 * 1384 1384

fn=(112)
0x403a68 547 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680 680
+3 * 680 0 680
+4 * 680
+4 * 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(10)
cfn=(110)
calls=680 0x404380 726 
* * 6800 3400 2720
+5 * 680 680
+4 * 680 680
+1 * 680 680

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 680 0 680
+1 * 680
+3 * 680 0 680
+1 * 680
+4 * 680 0 680 1 0 0 1
+4 +2 680 680
+4 * 680
+3 * 680 0 680
cfn=(106)
calls=680 0x40325e 113 
* * 4080 2040 1360
+5 * 680
+3 * 680 680
+4 * 680 680
+4 * 680 680
+4 * 680 680
+3 -1 680
+3 * 680
+3 * 680 0 680
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=680 0x40326c 148 
* * 21080 6800 8160 4 0 0 4
+5 +1 680 680
+4 * 680
+3 * 680 0 680
cfn=(156)
calls=680 0x4031ec 159 
* * 139688 42232 27826 27 5 0 27 5 0 21884 216 1360
+5 * 680
jump=680 +28 * 
* * 
+28 * 680 0 0 1 0 0 1
+4 * 680 680
+1 * 680 680
+1 * 680 680

fn=(158)
0x403ce6 171 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+5 * 688 0 0 0 0 0 0 0 0 688
+2 +1 688 688
+4 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfi=(5)
cfn=(160)
calls=688 0x4044d6 -65 
* * 95074 25471 15737 24 5 0 24 5 0 21398 221 1376
+5 +1 688 688
+1 * 688 688

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680 1 0 0 1
+4 * 680 0 680
+4 * 680 0 680
+4 +8 680 0 680
+4 +3 680 680
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=680 0x404f37 -22 
* * 217582 71760 67004 14 3 2 14 3 2 13112 866 1356 169
+5 +1 680 680
+1 * 680 680

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 680 0 680
+1 * 680
+3 * 680 0 680
+2 * 680 0 680
+1 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +4 680 680
+4 * 680
+3 * 680 0 680
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=680 0x404878 277 
* * 10200 4080 3400 1 0 0 1
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=680 0x404d44 277 
* * 17000 6120 5440 2 0 0 2
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(132)
calls=680 0x404d44 277 
* * 17000 6120 5440
+5 * 680
+3 * 680
+3 * 680
+3 * 680 0 680
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=680 0x404d5e -49 
* * 227782 75160 71084 1 1 39 1 1 39 13112 784 1356
+5 +1 680
+4 * 680 680
+1 * 680 680
+2 * 680 680
+1 * 680 680

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 680 0 680
+1 * 680
+3 * 680 0 680
+1 * 680
+4 * 680 0 680 1 0 0 1
+4 * 680 0 680
+4 * 680 0 680
+4 +10 680 680
+4 * 680
+3 * 680 0 680
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=680 0x404c38 288 
* * 10200 4080 3400 3 0 0 3
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(56)
calls=680 0x404c38 288 
* * 10200 4080 3400
+5 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=680 0x404c52 -36 
* * 291022 96240 92164 20 3 3 20 3 3 13112 866 1356 169
+5 +1 680
+4 * 680 680
+1 * 680 680
+1 * 680 680

fn=(60)
0x404c52 424 680 0 680
+1 * 680
+3 * 680 0 680
+2 * 680 0 680
+1 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +4 680 680
+4 * 680
+3 * 680 0 680
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=680 0x40492d 277 
* * 10200 4080 3400 2 0 0 2
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=680 0x404d9d 277 
* * 17000 6120 5440 2 0 1 2 0 1
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(66)
calls=680 0x404d9d 277 
* * 17000 6120 5440
+5 * 680
+3 * 680
+3 * 680
+3 * 680 0 680
cfn=(72)
calls=680 0x404db7 -49 
* * 227782 75160 71084 15 3 2 15 3 2 13112 866 1356 169
+5 +1 680
+4 * 680 680
+1 * 680 680
+2 * 680 680
+1 * 680 680

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 728 0 728 1 0 0 1
+1 * 728
+3 * 728
+4 * 728 0 728
+4 +1 728 728
+4 * 728
+3 * 728 0 728 1 0 0 1
cfi=(13)
cfn=(64)
calls=728 -33 -66 
* * 4368 2184 1456
+5 * 728 728
+1 * 728 728

fn=(66)
0x404d9d 277 1360 0 1360
+1 * 1360
+3 * 1360
+4 * 1360 0 1360
+4 +1 1360 1360
+4 * 1360
+3 * 1360 0 1360
cfi=(13)
cfn=(68)
calls=1360 0x404f1a -58 
* * 21760 8160 6800 2 0 1 2 0 1
+5 * 1360 1360
+1 * 1360 1360

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 680 0 680
+1 * 680
+3 * 680 0 680
+1 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +10 680 680
+4 * 680
+3 * 680 0 680
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=680 0x404bc6 288 
* * 10200 4080 3400 3 0 0 3
+5 * 680
+3 * 680 680
+4 * 680
+3 * 680 0 680
cfn=(122)
calls=680 0x404bc6 288 
* * 10200 4080 3400
+5 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(126)
calls=680 0x404be0 -36 
* * 291022 96240 92164 4 1 39 4 1 39 13112 784 1356
+5 +1 680
+4 * 680 680
+1 * 680 680
+1 * 680 680

fn=(128)
0x404878 277 728 0 728
+1 * 728
+3 * 728
+4 * 728 0 728 1 0 0 1
+4 +1 728 728
+4 * 728
+3 * 728 0 728
cfi=(13)
cfn=(130)
calls=728 -33 -66 
* * 4368 2184 1456 0 0 1 0 0 1
+5 * 728 728
+1 * 728 728

fn=(132)
0x404d44 277 1360 0 1360
+1 * 1360
+3 * 1360
+4 * 1360 0 1360
+4 +1 1360 1360
+4 * 1360
+3 * 1360 0 1360
cfi=(13)
cfn=(134)
calls=1360 0x404e98 -58 
* * 21760 8160 6800 2 0 0 2
+5 * 1360 1360
+1 * 1360 1360

fn=(138)
0x404d5e 379 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +8 680 0 680
+4 +3 680 680
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=680 0x404eb5 -22 
* * 217582 71760 67004 1 1 39 1 1 39 13112 784 1356
+5 +1 680 680
+1 * 680 680

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360
+4 * 1360 0 1360
+4 +1 1360 1360
+4 * 1360
+3 * 1360 0 1360
cfi=(13)
cfn=(124)
calls=1360 0x404d36 -77 
* * 8160 4080 2720 2 0 0 2
+5 * 1360 1360
+1 * 1360 1360

fn=(56)
0x404c38 288 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360
+4 * 1360 0 1360 1 0 0 1
+4 +1 1360 1360
+4 * 1360
+3 * 1360 0 1360
cfi=(13)
cfn=(58)
calls=1360 0x404d8f -77 
* * 8160 4080 2720 1 0 0 1
+5 * 1360 1360
+1 * 1360 1360

fn=(74)
0x404f37 368 696 0 696
+1 * 696
+3 * 696
+4 * 696 0 696 1 0 0 1
+4 * 696 0 696
+4 * 696 0 696
+4 +2 696 696
+4 * 696 696
+4 * 696
+3 * 696
+3 * 696
+4 * 696 0 696
+4 +1 696 696
+5 * 696 0 0 0 0 0 0 0 0 696
jcnd=8/696 +33 +2 
* * 
+2 +1 688 688
+4 * 688
+8 * 688 688
+4 * 688 688
+4 * 688
+3 * 688 0 0 1 0 0 1
+3 * 688 0 688 0 0 1 0 0 1
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(78) memmove
calls=688 0x3877c83840 0 
* * 199664 64596 63225 11 2 20 11 2 20 12516 870 683 169
* * 688 688 0 1 1 0 1 1 0 0 0 688
+5 +1 696 696
+4 * 696
+8 * 696 696
+4 * 696
+3 +1 696 696
+1 * 696 696

fn=(140)
0x404eb5 368 696 0 696
+1 * 696
+3 * 696
+4 * 696 0 696 1 0 0 1
+4 * 696 0 696
+4 * 696 0 696 0 0 1 0 0 1
+4 +2 696 696
+4 * 696 696
+4 * 696
+3 * 696
+3 * 696
+4 * 696 0 696
+4 +1 696 696
+5 * 696 0 0 0 0 0 0 0 0 696
jcnd=8/696 +33 +2 
* * 
+2 +1 688 688
+4 * 688
+8 * 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cob=(2)
cfi=(9)
cfn=(78)
calls=688 0x3877c83840 0 
* * 199664 64596 63225 0 1 40 0 1 40 12516 789 683
* * 688 688 0 0 0 0 0 0 0 0 0 688
+5 +1 696 696
+4 * 696
+8 * 696 696
+4 * 696
+3 +1 696 696
+1 * 696 696

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360 0 1360
+4 +1 1360 1360
+4 * 1360 1360
+1 * 1360 1360

fn=(110)
0x404380 726 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360 0 1360
+4 * 1360 0 1360
+4 * 1360 1360
+4 * 1360 1360
+3 * 1360 1360
+4 * 1360 0 1360
+3 * 1360 1360
+1 * 1360 1360

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360 0 1360
+4 +1 1360 1360
+4 * 1360 1360
+1 * 1360 1360

fn=(44)
0x404468 726 1360 0 1360
+1 * 1360
+3 * 1360 0 1360
+4 * 1360 0 1360
+4 * 1360 1360
+4 * 1360 1360
+3 * 1360 1360
+4 * 1360 0 1360 1 0 0 1
+3 * 1360 1360
+1 * 1360 1360

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+4 * 688 0 688 1 0 0 1
+4 * 688 688
+1 * 688 688

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 +4 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=688 0x40454c -14 
* * 4128 1376 2064 1 0 0 1
+5 +2 688 688
+1 * 688 688

fn=(150)
0x40326c 148 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +3 688 688 0 1 0 0 1
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=688 0x403d1a -29 
* * 12384 4128 4816 3 0 0 3
+5 +1 688 688
+1 * 688 688

fn=(180)
0x40334a 148 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 * 688 0 688
+4 +3 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(182)
calls=688 0x403dcc -29 
* * 12384 4128 4816 2 0 0 2
+5 +1 688 688
+1 * 688 688

fn=(152)
0x403d1a 122 688 0 688 1 0 0 1
+1 * 688
+3 * 688
+4 * 688 0 688
+4 * 688 0 688
+4 +4 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688 0 688
cfn=(154)
calls=688 0x4044f8 -14 
* * 4128 1376 2064 2 0 0 2
+5 +2 688 688
+1 * 688 688

fn=(184)
0x40454c 112 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+4 * 688 0 688
+4 * 688 688
+1 * 688 688

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2562 455 458 9 8 6 9 8 6 370 55 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3432 705 658 13 6 3 13 6 3 548 55 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 5 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 340 0 340 1 0 0 1
+1 * 340
+3 * 340
+4 * 340 0 340
+4 * 340 0 340
+4 +1 340 340
+4 * 340
+3 * 340 0 340
cfi=(2)
cfn=(2)
calls=340 0x402d74 645 
* * 4420 2040 680
+5 * 340
+3 * 340 0 340
+3 +1 340 340
+6 * 340 0 340
+3 * 340 340
+6 * 340 0 340
+3 +1 340 340
+6 * 340 0 340 1 0 0 1
+3 * 340 340
+6 * 340 0 340
+3 +2 340 0 340
+7 * 340
jump=340 +86 * 
* * 
+2 +1 58310 58310
+3 * 58310
+3 * 58310 58310
+4 * 58310
+3 * 58310
+3 * 58310 0 58310
cfi=(2)
cfn=(144)
calls=58310 0x402d9a 770 
* * 641410 291550 174930
+5 * 58310 58310
+4 * 58310 58310
+5 * 58310
+4 * 58310 0 58310
+5 +1 58310 58310
+3 * 58310
+3 * 58310 58310
+4 * 58310
+3 * 58310
+3 * 58310 0 58310
cfi=(2)
cfn=(146)
calls=58310 0x402dba 770 
* * 641410 291550 174930 1 0 0 1
+5 * 58310 58310
+2 * 58310
+4 * 58310 58310
+5 * 58310
+4 * 58310 0 58310
+5 -2 58310 0 58310
+4 * 58310 58310
+3 * 58310
+3 * 58310 58310
+3 * 58310 0 0 0 0 0 0 0 0 58310 341
jcnd=57970/58310 -93 +1 
* * 
-9 * 340 340 0 1 0 0 1
+3 * 340
+3 * 340 340
+3 * 340 0 0 0 0 0 0 0 0 340
jcnd=340/340 -93 +1 
* * 
+2 +4 340 340
+3 * 340
+3 * 340
+4 * 340 340 0 1 0 0 1
+5 * 340
+4 * 340
+3 * 340 0 340
+5 +1 340 340
+3 * 340
+3 * 340
+4 * 340 340
+5 * 340
+4 * 340
+3 * 340 0 340
+5 +1 340 0 340
+7 * 340
jump=340 0x4016ee * 
* * 
+2 +1 58310 58310
+3 * 58310
+3 * 58310 58310
+4 * 58310
+3 * 58310 0 0 1 0 0 1
+3 * 58310 0 58310
cfi=(2)
cfn=(146)
calls=58310 0x402dba 770 
* * 641410 291550 174930
+5 * 58310 58310
+2 * 58310
+4 * 58310 58310
+5 * 58310 0 58310
+5 +1 58310 58310
+3 * 58310
+3 * 58310 58310
+4 * 58310
+3 * 58310
+3 * 58310 0 58310
cfi=(2)
cfn=(144)
calls=58310 0x402d9a 770 
* * 641410 291550 174930
+5 * 58310 58310
+4 * 58310 58310
+5 * 58310 0 58310
+5 +1 58310 58310
+5 * 58310 58310
+5 * 58310 58310
+5 * 58310
+4 * 58310 0 58310
+5 +1 58310 58310
+5 * 58310 58310
+5 * 58310 58310
+5 * 58310
+4 * 58310 0 58310
+5 -4 58310 0 58310
+4 * 58310 58310
+3 * 58310
+3 * 58310 58310
+3 * 58310 0 0 0 0 0 0 0 0 58310 341
jcnd=57970/58310 0x401672 +1 
* * 
-9 * 340 340 0 1 0 0 1
+3 * 340
+3 * 340 340
+3 * 340 0 0 0 0 0 0 0 0 340
jcnd=340/340 0x401672 +1 
* * 
+6 +6 340 340 0 1 0 0 1
+5 * 340 340
+5 * 340 0 340
+5 +2 340 340
+3 +1 340 0 340
+3 * 340 340
+5 * 340 340
+1 * 340 340

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 340
+7 * 340
+7 * 340
+3 * 340
+3 * 340 0 340
cfi=(2)
cfn=(4)
calls=340 0x4030b2 310 
* * 374246 107596 101997 66 25 22 66 25 22 25167 1366 1358 169
+5 * 340
+7 * 340
+7 * 340
+3 * 340
+3 * 340 0 340
cfi=(2)
cfn=(80)
calls=340 0x402ff4 310 
* * 374930 107646 100227 40 8 69 40 8 69 25803 1211 1358
+5 * 340 0 0 1 0 0 1
+7 * 340
+7 * 340
+3 * 340
+3 * 340 0 340
cfn=(142)
calls=340 0x401585 -52 
* * 6086340 2690760 1405220 8 0 0 8 0 0 117300 682
+5 * 340 0 340
+8 * 340 340
+6 * 340 0 340
+6 * 340
+7 * 340
+3 * 340 0 340
cfi=(2)
cfn=(148)
calls=340 0x402df4 414 
* * 90584 28596 20713 33 5 0 33 5 0 10942 110 680
+5 * 340
+7 * 340
+3 * 340 0 340 1 0 0 1
cfi=(2)
cfn=(178)
calls=340 0x402e74 414 
* * 89665 28380 20373 7 3 0 7 3 0 10752 149 680
+5 +2 340
+7 * 340
+7 * 340
+3 * 340
+3 * 340 0 340
cfi=(2)
cfn=(4)
calls=340 0x4030b2 310 
* * 373723 107557 101863 4 1 1 4 1 1 25111 1037 1358
+5 * 340
+7 * 340
+7 * 340
+3 * 340
+3 * 340 0 340
cfi=(2)
cfn=(80)
calls=340 0x402ff4 310 
* * 373931 107589 100058 0 0 0 0 0 0 25650 1005 1358
+5 * 340 340
+6 * 340 0 0 1 0 0 1
+7 * 340
+7 * 340 0 340
+6 * 340 340
+8 * 340
+3 * 340
+3 * 340 0 340
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=340 0x401719 -33 
* * 2818940 1173680 646510 4 0 0 4 0 0 58650 341
+5 * 340 0 340
+8 * 340 340
+6 * 340 0 340
+6 * 340
+7 * 340 0 0 1 0 0 1
+3 * 340 0 340
cfi=(2)
cfn=(148)
calls=340 0x402df4 414 
* * 90584 28596 20713 0 0 0 0 0 0 10942 106 680
+5 * 340
+7 * 340
+3 * 340 0 340
cfi=(2)
cfn=(178)
calls=340 0x402e74 414 
* * 89665 28380 20373 0 0 0 0 0 0 10752 147 680
+5 +2 340 340
+7 * 340
+3 * 340 0 340
cfi=(2)
cfn=(2)
calls=340 0x402d74 645 
* * 4420 2040 680
+5 * 340 340
+6 * 340
+3 * 340
+3 * 340
+3 * 340 340
+7 * 340
+3 * 340 0 0 1 0 0 1
+3 * 340 0 340
cfi=(2)
cfn=(144)
calls=340 0x402d9a 770 
* * 3740 1700 1020
+5 * 340
+3 * 340
+7 * 340
+3 * 340
+3 * 340 0 340
cfi=(2)
cfn=(200)
calls=340 0x402eda 901 
* * 34468 12716 9834 39 28 10 39 28 10 1570 76 47
+5 +1 340 340
+7 * 340
+3 * 340 0 340
cfi=(2)
cfn=(10)
calls=340 0x402f54 645 
* * 4420 2040 680 0 1 0 0 1
+5 * 340 340
+6 * 340
+3 * 340
+3 * 340
+3 * 340 340
+7 * 340 0 0 1 0 0 1
+3 * 340
+3 * 340 0 340
cfi=(2)
cfn=(146)
calls=340 0x402dba 770 
* * 3740 1700 1020
+5 * 340
+3 * 340
+7 * 340
+3 * 340
+3 * 340 0 340
cfi=(2)
cfn=(244)
calls=340 0x402f7a 901 
* * 33631 12483 9637 28 30 38 28 30 38 1401 76 47
+5 +1 340 340
+7 * 340
+3 * 340 0 340
cfi=(2)
cfn=(10)
calls=340 0x402f54 645 
* * 4420 2040 680
+5 * 340 340
+6 * 340
+3 * 340
+3 * 340
+3 * 340 340 0 1 0 0 1
+7 * 340
+3 * 340
+3 * 340 0 340
cfi=(2)
cfn=(146)
calls=340 0x402dba 770 
* * 3740 1700 1020
+5 * 340 340
+2 * 340
+4 * 340 340
+8 * 340 340
+8 * 340 0 340
+8 +1 340 340
+7 * 340
+3 * 340 0 340
cfi=(2)
cfn=(2)
calls=340 0x402d74 645 
* * 4420 2040 680
+5 * 340 340 0 1 0 0 1
+6 * 340
+3 * 340
+3 * 340
+3 * 340 340
+7 * 340
+3 * 340
+3 * 340 0 340
cfi=(2)
cfn=(144)
calls=340 0x402d9a 770 
* * 3740 1700 1020
+5 * 340 340
+4 * 340 340
+8 * 340
+4 * 340 340
+8 * 340
+3 * 340 0 340
+8 +2 340 0 340
+7 -12 340 340
+8 * 340 340
+7 * 340 0 0 0 0 0 0 0 0 340 3
jcnd=1/340 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 340
+7 * 340
+3 * 340 0 340
cfi=(2)
cfn=(2)
calls=340 0x402d74 645 
* * 4420 2040 680 2 0 1 2 0 1
+5 * 340
+3 * 340 340
+7 * 340
+3 * 340 0 340
cfi=(2)
cfn=(2)
calls=340 0x402d74 645 
* * 4420 2040 680 0 1 0 0 1
+5 * 340
+3 * 340 0 0 0 0 0 0 0 0 340 1
+2 * 340 0 0 1 0 0 1
+5 * 340
jump=340 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 340
+2 * 340 0 0 0 0 0 0 0 0 340
jcnd=340/340 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 340 0 340
+1 * 340
+3 * 340
+4 * 340 0 340
+4 * 340 0 340
+4 * 340 0 340
+5 +1 340 340
+4 * 340
+3 * 340 0 340
cfi=(2)
cfn=(2)
calls=340 0x402d74 645 
* * 4420 2040 680
+5 * 340
+3 * 340 0 340
+3 +1 340 340 0 1 0 0 1
+6 * 340 0 340
+3 * 340 340
+6 * 340 0 340
+3 +2 340 0 340
+7 * 340
jump=340 +86 * 
* * 
+2 +1 58310 58310
+3 * 58310
+3 * 58310 58310
+4 * 58310
+3 * 58310
+3 * 58310 0 58310
cfi=(2)
cfn=(144)
calls=58310 0x402d9a 770 
* * 641410 291550 174930
+5 * 58310 58310
+4 * 58310 58310
+5 * 58310
+4 * 58310 0 58310
+5 +1 58310 58310
+3 * 58310
+3 * 58310 58310
+4 * 58310
+3 * 58310
+3 * 58310 0 58310
cfi=(2)
cfn=(146)
calls=58310 0x402dba 770 
* * 641410 291550 174930
+5 * 58310 58310
+2 * 58310
+4 * 58310 58310
+5 * 58310
+4 * 58310 0 58310
+5 -2 58310 0 58310
+4 * 58310 58310
+3 * 58310
+3 * 58310 58310
+3 * 58310 0 0 0 0 0 0 0 0 58310 341
jcnd=57970/58310 -93 +1 
* * 
-9 * 340 340 0 1 0 0 1
+3 * 340
+3 * 340 340
+3 * 340 0 0 0 0 0 0 0 0 340
jcnd=340/340 -93 +1 
* * 
+2 +4 340 340
+3 * 340
+3 * 340 0 0 1 0 0 1
+4 * 340 340
+5 * 340
+4 * 340
+3 * 340 0 340
+5 +1 340 340
+3 * 340
+3 * 340
+4 * 340 340
+5 * 340
+4 * 340
+3 * 340 0 340
+5 +1 340 340
+5 * 340 340
+5 * 340 340
+5 * 340 0 0 1 0 0 1
+4 * 340
+3 * 340 0 340
+5 +2 340 340
+3 +1 340 0 340
+3 * 340 340
+5 * 340 340
+1 * 340 340

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1376 0 1376 1 0 0 1
+2 0 1376 0 1376
+2 0 1376 0 1376
+2 0 1376
+3 0 1376 0 1376
+2 0 1376 0 1376
+1 0 1376 0 1376
+1 0 1376
+3 0 1376
+4 0 1376 1376
+4 0 1376 0 1376
+4 0 1376
+3 0 1376
+4 0 1376
+3 0 1376
+3 0 1376
+3 0 1376 0 0 1 0 0 1 0 0 1376
+6 0 1376
+4 0 1376 0 0 0 0 0 0 0 0 1376
+6 0 1376
+4 0 1376 0 0 0 0 0 0 0 0 1376
+6 0 1376 1376
+7 0 1376 0 0 0 0 0 0 0 0 1376 2
jcnd=1252/1376 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1252
+2 0 1252 0 0 0 0 0 0 0 0 1252
+6 0 1252 1252 0 1 0 0 1
+4 0 1252
+3 0 1252
+2 0 1252 0 0 0 0 0 0 0 0 1252
jcnd=1252/1252 0x3877c78a40 0 
* 0 
+6 0 1252 1252
+4 0 1252
+3 0 1252 0 0 0 0 0 0 0 0 1252
+6 0 1252 1252
+5 0 1252
+4 0 1252 0 0 0 0 0 0 0 0 1252
jcnd=1252/1252 0x3877c7907c 0 
* 0 
+6 0 1252 1252
+5 0 1252
+4 0 1252 0 0 0 0 0 0 0 0 1252
+6 0 1252
+4 0 1252 0 0 1 0 0 1 0 0 1252
+6 0 1252
+4 0 1252 1252
+7 0 1252 0 0 0 0 0 0 0 0 1252
+6 0 1252 1252
+6 0 1252
+2 0 1252 0 0 0 0 0 0 0 0 1252
+6 0 1252 1252
+4 0 1252 0 0 0 0 0 0 0 0 1252 5
jcnd=1248/1252 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1252 1252 0 1 0 0 1
+4 0 1252 0 0 0 0 0 0 0 0 1252 22
jcnd=22/1252 0x3877c78bf0 0 
* 0 
+6 0 1230 1230 0 0 2 0 0 2
+6 0 1230 0 0 1 0 0 1 0 0 1230 76
jcnd=61/1230 0x3877c78a78 0 
* 0 
+6 0 1169 1169
+5 0 1169 1169
+5 0 1169 1169
+4 0 1169 0 0 0 0 0 0 0 0 1169
+6 0 1169 1169
+4 0 1169 0 0 0 0 0 0 0 0 1169
+6 0 1169 1169
+9 0 1169 0 1169
+4 0 1169 0 1169
+4 0 1169 0 0 0 0 0 0 0 0 1169 357
jcnd=737/1169 +16 0 
* 0 
+2 0 432 432
+5 0 432
+3 0 432 0 0 1 0 0 1 0 0 432
+6 0 1169
+3 0 1169
+4 0 1169 1169
+4 0 1169 1169
+4 0 1169 0 0 0 0 0 0 0 0 1169
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 1230
+7 0 1230 0 1230
+4 0 1230 0 1230
+4 0 1230 0 0 0 0 0 0 0 0 1230 62
jcnd=441/1230 +18 0 
* 0 
+2 0 789 0 789
+8 0 789 0 789
+8 0 789 0 789
+4 0 789
+3 0 789 0 789 1 0 0 1
+4 0 789
+4 0 789 0 789
+4 0 789 0 789
+4 0 789
+7 0 789 0 0 0 0 0 0 0 0 789
jcnd=789/789 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 22
+7 0 22 0 0 0 0 0 0 0 0 22
jcnd=22/22 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1252 0 0 1 0 0 1
+5 0 1252 1252
+4 0 1252 1252
+7 0 1252 0 0 0 0 0 0 0 0 1252
jcnd=1252/1252 +16 0 
* 0 
+16 0 1252 0 1252
+5 0 1252 0 0 0 0 0 0 0 0 1252
+6 0 1252
+3 0 1252
jump=1252 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1252 1252 0 1 0 0 1
+4 0 1252
+2 0 1252 0 0 0 0 0 0 0 0 1252
+6 0 1252 1252
+7 0 1252 0 0 0 0 0 0 0 0 1252
jcnd=1252/1252 +15 0 
* 0 
+15 0 1252 0 1252 1 0 0 1
+4 0 1252 0 0 0 0 0 0 0 0 1252
+6 0 1252
+4 0 1252 1252
+1 0 1252 1252
+1 0 1252 1252
+2 0 1252 1252
+2 0 1252 1252
+2 0 1252 1252
+2 0 1252 1252
0x3877c78bf0 0 22 0 0 1 0 0 1
+3 0 22 0 22
+4 0 22
+3 0 22
+4 0 22 0 22 1 0 0 1
+4 0 22
jump=22 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1252 1252 0 1 1 0 1 1
+4 0 1252 0 0 1 0 0 1
+7 0 1252
+4 0 1252
+3 0 1252
+3 0 1252 0 0 0 0 0 0 0 0 1252
jcnd=1252/1252 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1366 0 0 1 0 0 1
+7 0 1366
+3 0 1366
+3 0 1366 1366 0 0 1 0 0 1
+4 0 1366
+4 0 1366 0 0 0 0 0 0 0 0 0 0 1366 169
jump=168 0x3877c89be8 0 
* 0 
jump=178 0x3877c89bd0 0 
* 0 
jump=168 0x3877c89bb8 0 
* 0 
jump=168 +11 0 
* 0 
jump=168 0x3877c89c48 0 
* 0 
jump=170 0x3877c89c30 0 
* 0 
jump=168 0x3877c89c18 0 
* 0 
jump=178 0x3877c89c00 0 
* 0 
+11 0 168 168
+3 0 168
+4 0 168
+4 0 168 168
+4 0 168
+4 0 168 0 168
+4 0 168
+9 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-40 0 14342 14342
+4 0 14342 0 14342 0 0 14 0 0 14
+4 0 14342 14342
+4 0 14342 0 14342 0 0 3 0 0 3
+4 0 14342 14342
+4 0 14342 0 14342 0 0 4 0 0 4
+4 0 14342 14342
+4 0 14342 0 14342 0 0 15 0 0 15
+4 0 14342
+4 0 14342
+4 0 14342 0 0 0 0 0 0 0 0 14342 893
jcnd=1330/14342 0x3877c89c60 0 
* 0 
-32 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
jcnd=10/170 0x3877c89c60 0 
* 0 
-24 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-16 0 178 178 0 1 0 0 1
+4 0 178 0 178
+4 0 178 0 0 1 0 0 1
+4 0 178
+4 0 178 0 0 0 0 0 0 0 0 178 4
jcnd=10/178 0x3877c89c60 0 
* 0 
+6 0 13660
+4 0 13660 13660
+3 0 13660 0 13660
+3 0 13660 13660
+4 0 13660 0 13660 0 0 1 0 0 1
+4 0 13660 13660
+4 0 13660 0 13660 0 0 22 0 0 22
+4 0 13660 13660
+4 0 13660 0 13660
+4 0 13660
jump=13660 -80 0 
* 0 
-30 0 168 168
+3 0 168 0 168
+3 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
-24 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178
jump=178 -80 0 
* 0 
-16 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
+8 0 168 168
+3 0 168
+4 0 168 0 0 1 0 0 1
+4 0 168
+4 0 168
jump=168 -39 0 
* 0 
+9 0 178
+3 0 178 0 0 0 0 0 0 0 0 178
+6 0 178 178
+3 0 178
+4 0 178
jump=178 -72 0 
* 0 
+8 0 168
+4 0 168 168
+3 0 168 0 0 0 0 0 0 0 0 168
+2 0 168
+4 0 168
jump=168 -99 0 
* 0 
+11 0 178 178 0 1 0 0 1
+3 0 178
+4 0 178
+4 0 178
+4 0 178
jump=178 0x3877c89b78 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b70 0 
* 0 
+9 0 170 170
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b68 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b60 0 
* 0 
+9 0 1366 0 1366 1 0 0 1
+3 0 1366 1366

fn=(104) alloc_perturb
0x3877c77180 0 1242 1242 0 1 0 0 1
+6 0 1242
+2 0 1242 0 0 0 0 0 0 0 0 1242 34
+2 0 1242 1242

fn=(38) _int_malloc
0x3877c79a00 0 1376 0 1376 1 0 0 1
+2 0 1376
+3 0 1376 0 1376
+2 0 1376 0 1376
+2 0 1376 0 1376 0 0 1 0 0 1
+2 0 1376
+3 0 1376 0 1376
+1 0 1376 0 1376
+1 0 1376
+4 0 1376
+4 0 1376 0 0 0 0 0 0 0 0 1376
+6 0 1376
+4 0 1376
+6 0 1376
+3 0 1376
+4 0 1376
+4 0 1376
+4 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376
+6 0 1376 1376 0 1 1 0 1 1
+7 0 1376 0 0 0 0 0 0 0 0 1376 5
jcnd=1254/1376 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1242
+4 0 1242 1242
+1 0 1242 1242
+1 0 1242 1242
+2 0 1242 1242
+2 0 1242 1242
+2 0 1242 1242
+2 0 1242 1242
+7 0 1271
+7 0 1271 0 0 1 0 0 1 0 0 1271 7
jcnd=368/1271 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 12 0 0 12
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 368 0 0 1 0 0 1
+3 0 368
+4 0 368
+4 0 368 0 0 1 0 0 1 0 0 368
jcnd=368/368 0x3877c7a1a4 0 
* 0 
+30 0 368 368
+6 0 368
+5 0 368 0 0 0 0 0 0 0 0 368 1
jcnd=367/368 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 925 250 196 8 0 0 8 0 0 191 26
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1270 0 0 1 0 0 1
+3 0 1270
+3 0 1270
+3 0 1270
+4 0 1270
+3 0 1270
+4 0 1270 0 1270
+5 0 1270
+3 0 1270 0 1270
+4 0 1270 0 1270
+4 0 1270 0 1270
+5 0 1270
+3 0 1270
+3 0 1270
+3 0 1270
+3 0 1270
+4 0 1270
+4 0 1270 0 0 1 0 0 1
+4 0 1270 0 1270
+4 0 1270
+4 0 1270 0 1270
+5 0 1270 0 1270
+5 0 1270
+3 0 1270
+3 0 1270 0 1270
+5 0 1270
+5 0 1270
+3 0 1270 0 1270
+4 0 1270 0 1270
+4 0 1270
+6 0 1270 0 1270
+4 0 1270 0 1270
+5 0 1270 0 0 1 0 0 1
+3 0 1270
+3 0 1270
+3 0 1270
jump=1270 +87 0 
* 0 
+8 0 963
+3 0 963
+4 0 963
+2 0 963
+2 0 963
+3 0 963
+3 0 963
+3 0 963
+2 0 963
+2 0 963
+5 0 963
+2 0 963 963 0 0 2 0 0 2
+4 0 963
+3 0 963
+4 0 963 0 963
+4 0 963 0 963
+8 0 963
+7 0 963 0 963
+4 0 963 0 963
+4 0 963 0 963
+4 0 963 0 0 0 0 0 0 0 0 963
-38 0 764
+3 0 764
+4 0 764 0 764
+4 0 764 0 764
+8 0 764
+7 0 764 0 764
+4 0 764 0 764
+4 0 764 0 764
+4 0 764 0 0 0 0 0 0 0 0 764
+6 0 2998 2998 0 1 0 0 1
+4 0 2998
+3 0 2998 0 0 0 0 0 0 0 0 2998 208
jcnd=1206/2998 0x3877c79ef0 0 
* 0 
+6 0 1792 1792
+4 0 1792 1792
+4 0 1792
+4 0 1792 0 0 0 0 0 0 0 0 1792
+6 0 1792 1792 0 1 1 0 1 1
+7 0 1792 0 0 0 0 0 0 0 0 1792
+6 0 1792
+4 0 1792
+7 0 1792 0 0 0 0 0 0 0 0 1792 9
jcnd=507/1792 +11 0 
* 0 
+2 0 1285
+3 0 1285 0 0 0 0 0 0 0 0 1285 599
jcnd=866/1285 0x3877c79e28 0 
* 0 
+6 0 1756
+3 0 1756 0 1756
+4 0 1756 0 1756
+5 0 1756 0 0 0 0 0 0 0 0 1756 16
jcnd=29/1756 0x3877c7a090 0 
* 0 
+6 0 1727
+7 0 1727 0 0 0 0 0 0 0 0 1727 302
jcnd=963/1727 0x3877c79c50 0 
* 0 
+6 0 764 0 0 1 0 0 1
+3 0 764
+4 0 764
+4 0 764 0 0 0 0 0 0 0 0 764 12
jcnd=384/764 0x3877c79db0 0 
* 0 
+6 0 380
+3 0 380
+4 0 380
+2 0 380
+2 0 380
+3 0 380
+3 0 380
+8 0 380
+3 0 380
+2 0 380
+2 0 380
+4 0 380 380 0 0 2 0 0 2
+4 0 380
+3 0 380 0 0 1 0 0 1 0 0 380 33
jcnd=380/380 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 764 0 764
+4 0 764 0 764
+4 0 764
+3 0 764
jump=764 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 24
jcnd=443/866 0x3877c79ce1 0 
* 0 
+6 0 423 423
+5 0 423 0 0 0 0 0 0 0 0 423 8
jcnd=387/423 0x3877c79ce1 0 
* 0 
+6 0 36 0 0 1 0 0 1
+3 0 36
+3 0 36
+3 0 36
+7 0 36 0 36
+4 0 36 0 36
+4 0 36
+3 0 36 0 36
+4 0 36 0 36 0 0 18 0 0 18
+4 0 36 0 36
+4 0 36 0 0 0 0 0 0 0 0 36 6
jcnd=10/36 +18 0 
* 0 
+2 0 26 0 26 0 0 1 0 0 1
+8 0 26 0 26
+8 0 26
+7 0 26 0 26
+4 0 26
+3 0 26
+3 0 26
+3 0 26
+4 0 26
+3 0 26
+4 0 26
+3 0 26
+3 0 26
+4 0 26 0 26
+4 0 26 0 26 0 0 2 0 0 2
+4 0 26
+4 0 26
+3 0 26 0 26
cfn=(104)
calls=26 0x3877c77180 0 
* 0 104 52 0 0 0 0 0 0 0 26
-56 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 1 0 0 1 0 0 10
+5 0 36
+3 0 36
jump=36 0x3877c79ae3 0 
* 0 
+55 0 1206 0 0 1 0 0 1
+7 0 1206
+3 0 1206 0 0 0 0 0 0 0 0 1206 8
jcnd=360/1206 0x3877c7a0b0 0 
* 0 
+6 0 1182 1182 0 1 0 0 1
+4 0 1182
+3 0 1182
+3 0 1182
+2 0 1182
+4 0 1182
+3 0 1182
+3 0 1182
+2 0 1182
+2 0 1182
+2 0 1182
+2 0 1182 1182 0 0 1 0 0 1
+8 0 1182
+5 0 1182
+5 0 1182
+2 0 1182 0 0 0 0 0 0 0 0 1182
-2 0 564
+2 0 564 0 0 0 0 0 0 0 0 564
+2 0 1746
+2 0 1746 0 0 0 0 0 0 0 0 1746 46
jcnd=1064/1746 +64 0 
* 0 
+2 0 682
+8 0 682
+3 0 682
+3 0 682 0 0 0 0 0 0 0 0 682 1
jcnd=1/682 0x3877c79fc0 0 
* 0 
-6 0 438
+3 0 438
+3 0 438 0 0 0 0 0 0 0 0 438 2
jcnd=21/438 0x3877c79fc0 0 
* 0 
+2 0 1098
+2 0 1098 1098
+8 0 1098
+2 0 1098 0 0 0 0 0 0 0 0 1098 23
jcnd=438/1098 -20 0 
* 0 
+2 0 660
+2 0 660
+5 0 660
+3 0 660
+3 0 660
+2 0 660
+2 0 660
+5 0 660 0 0 0 0 0 0 0 0 660
+2 0 660
+2 0 660
+4 0 660
+2 0 660
+2 0 660 0 0 0 0 0 0 0 0 660
jcnd=660/660 -8 0 
* 0 
-8 0 10134
+4 0 10134
+2 0 10134
+2 0 10134 0 0 0 0 0 0 0 0 10134 650
jcnd=8516/10134 -8 0 
* 0 
-2 0 1064 0 0 1 0 0 1
+2 0 1064 0 0 0 0 0 0 0 0 1064 20
jcnd=958/1064 -8 0 
* 0 
+2 0 1724 1724 0 0 5 0 0 5
+4 0 1724 0 0 1 0 0 1
+3 0 1724 0 0 0 0 0 0 0 0 1724 618
jcnd=1160/1724 0x3877c7a1cf 0 
* 0 
+6 0 564
+2 0 564
+4 0 564
+2 0 564
+2 0 564
+2 0 564 0 564
+8 0 564
jump=564 0x3877c79f30 0 
* 0 
+37 0 22 22 0 1 0 0 1
+5 0 22 22
+4 0 22
+4 0 22 22
+5 0 22 0 0 0 0 0 0 0 0 22
jcnd=22/22 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 360 360
+4 0 360
+4 0 360
+2 0 360
+5 0 360 360 0 1 1 0 1 1
+4 0 360
+3 0 360 0 0 0 0 0 0 0 0 360 6
jcnd=336/360 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 368 0 0 1 0 0 1
+3 0 368 0 368
+4 0 368
jump=368 0x3877c79b99 0 
* 0 
+36 0 1160 1160 0 1 2 0 1 2
+4 0 1160 1160 0 0 1 0 0 1
+4 0 1160
+3 0 1160 1160
+4 0 1160
+4 0 1160
+3 0 1160
+3 0 1160 1160
+4 0 1160 0 0 0 0 0 0 0 0 1160
+6 0 1160 1160 0 0 2 0 0 2
+4 0 1160 0 0 0 0 0 0 0 0 1160
+6 0 1160 1160 0 1 0 0 1
+8 0 1160 0 1160
+4 0 1160 0 1160
+4 0 1160 0 0 0 0 0 0 0 0 1160 233
jcnd=418/1160 +38 0 
* 0 
+2 0 742 742 0 0 2 0 0 2
+4 0 742
+3 0 742 0 0 0 0 0 0 0 0 742
+2 0 742 742
+5 0 742 0 0 0 0 0 0 0 0 742
+6 0 742 742
+4 0 742 0 742
+4 0 742 742
+4 0 742 0 742
+4 0 742
+4 0 742 0 0 0 0 0 0 0 0 742
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=20/418 0x3877c7a2e3 0 
* 0 
+6 0 1140 1140
+4 0 1140 1140 0 1 0 0 1
+4 0 1140 0 0 0 0 0 0 0 0 1140
+6 0 1140
+4 0 1140
+7 0 1140 0 1140 0 0 11 0 0 11
+4 0 1140 0 1140
+4 0 1140 0 1140
+4 0 1140 0 1140
+4 0 1140 0 0 0 0 0 0 0 0 1140 7
jcnd=314/1140 +7 0 
* 0 
+2 0 826 0 826
+5 0 826
+7 0 826 0 0 0 0 0 0 0 0 826 4
jcnd=435/826 +18 0 
* 0 
-7 0 314
+7 0 314 0 0 0 0 0 0 0 0 314 4
jcnd=289/314 +18 0 
* 0 
+2 0 416 0 416 0 0 13 0 0 13
+8 0 416 0 416 1 0 0 1
+8 0 416
+7 0 416 0 416 0 0 3 0 0 3
+4 0 416
+3 0 416
+3 0 416
+4 0 416
+3 0 416
+4 0 416
+3 0 416
+3 0 416
+4 0 416 0 416
+4 0 416 0 416
+4 0 416
jump=416 +71 0 
* 0 
-46 0 740
+7 0 740 0 740
+4 0 740
+3 0 740
+3 0 740
+4 0 740
+3 0 740
+4 0 740
+3 0 740
+3 0 740
+4 0 740 0 740
+4 0 740 0 740 0 0 1 0 0 1
+4 0 740
jump=740 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 28
+7 0 28 0 28
+6 0 28
+3 0 28 0 0 0 0 0 0 0 0 28 2
jcnd=28/28 +7 0 
* 0 
+7 0 1184
+4 0 1184 0 0 1 0 0 1
+3 0 1184
+3 0 1184 0 1184
cfn=(104)
calls=1184 0x3877c77180 0 
* 0 4736 2368 0 0 0 0 0 0 0 1184 33
+5 0 1184
+3 0 1184
jump=1184 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 22 0 0 1 0 0 1
+7 0 22
+2 0 22
+4 0 22
+3 0 22
+3 0 22 0 22
+5 0 22
+3 0 22
+4 0 22
+3 0 22 0 0 1 0 0 1
+4 0 22
+4 0 22
+3 0 22
+4 0 22 0 22
+4 0 22 0 22 0 0 1 0 0 1
+4 0 22
+3 0 22
+3 0 22 0 22
cfn=(104)
calls=22 0x3877c77180 0 
* 0 88 44 0 0 0 0 0 0 0 22 1
+5 0 22
+3 0 22
jump=22 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36) malloc
0x3877c7aa50 0 1376 0 1376 1 0 0 1
+5 0 1376 0 1376
+5 0 1376
+3 0 1376 0 1376
+5 0 1376
+4 0 1376 1376 0 0 1 0 0 1
+7 0 1376 1376 0 0 1 0 0 1
+3 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376
+6 0 1376 1376 0 0 1 0 0 1
+7 0 1376 1376 0 1 1 0 1 1
+4 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376
+2 0 1376 1376 0 0 1 0 0 1
+3 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376
jcnd=1376/1376 +97 0 
* 0 
+18 0 1376
+3 0 1376
+3 0 1376 0 1376
cfn=(38)
calls=1376 0x3877c79a00 0 
* 0 362940 45500 54677 47 35 53 47 35 53 58537 2974
+5 0 1376
+3 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376
+2 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376
+2 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376 22
+2 0 1376 1376
+7 0 1376 0 0 0 0 0 0 0 0 1376
jcnd=1376/1376 +13 0 
* 0 
+13 0 1376 0 1376
+2 0 1376 0 0 0 0 0 0 0 0 1376 83
+6 0 1376
+3 0 1376 1376
+4 0 1376 1376
+5 0 1376 1376
+5 0 1376
+4 0 1376 1376
+1 0 1376 0 0 1 0 0 1
+5 0 1376 1376 0 0 1 0 0 1
+7 0 1376 0 0 0 0 0 0 0 0 1376
jcnd=1376/1376 +14 0 
* 0 
+14 0 1376 0 1376 1 0 0 1
+3 0 1376 0 0 0 0 0 0 0 0 1376
+6 0 1376
jump=1376 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1376 0 1376 1 0 0 1
+2 0 1376
+3 0 1376
+3 0 1376 0 1376
+2 0 1376
+3 0 1376 0 1376
+1 0 1376
+3 0 1376 0 1376
+1 0 1376
+3 0 1376
+4 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376
+6 0 1376
+4 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376 4
jcnd=10/1376 0x3877c838d1 0 
* 0 
+2 0 1366
+3 0 1366
+3 0 1366
+3 0 1366
+3 0 1366
+3 0 1366 0 0 0 0 0 0 0 0 1366
jcnd=1366/1366 +41 0 
* 0 
+41 0 1366 0 0 1 0 0 1
+3 0 1366 0 0 0 0 0 0 0 0 1366
jcnd=1366/1366 0x3877c839c0 0 
* 0 
+24 0 1366
+3 0 1366
+4 0 1366
+3 0 1366
+3 0 1366
+3 0 1366
+3 0 1366
+3 0 1366 0 0 0 0 0 0 0 0 1366 750
jcnd=690/1366 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 686
+10 0 686 686 0 0 2 0 0 2
+3 0 686
+4 0 686 0 686
+3 0 686
+4 0 686
+4 0 686 0 0 0 0 0 0 0 0 686
jcnd=686/686 -18 0 
* 0 
-18 0 2114 2114
+3 0 2114
+4 0 2114 0 2114
+3 0 2114
+4 0 2114
+4 0 2114 0 0 0 0 0 0 0 0 2114 8
jcnd=1428/2114 -18 0 
* 0 
+2 0 1376
+4 0 1376
+3 0 1376 1376
+1 0 1376 1376
+1 0 1376 1376
+2 0 1376 1376 0 1 0 0 1
+2 0 1376 1376
0x3877c839c0 0 1366 0 0 1 0 0 1
+3 0 1366
+3 0 1366
+3 0 1366
+4 0 1366 0 1366 0 0 1 0 0 1
cfn=(284)
calls=1366 0x3877c89b20 0 
* 0 321498 119512 116780 6 1 59 6 1 59 15372 897 1366 169
+5 0 1366
jump=1366 0x3877c838be 0 
* 0 

fn=(168) free
0x3877c7b8b0 0 1376 1376 0 1 1 0 1 1
+7 0 1376 1376 0 0 1 0 0 1
+3 0 1376
+3 0 1376 0 0 1 0 0 1 0 0 1376
+6 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376
+6 0 1376 1376
+4 0 1376
+4 0 1376
+2 0 1376 0 0 0 0 0 0 0 0 1376
+2 0 1376
+2 0 1376
+7 0 1376 0 0 0 0 0 0 0 0 1376
jcnd=1376/1376 +14 0 
* 0 
+14 0 1376
+2 0 1376
cfn=(170)
calls=1376 0x3877c78650 0 
* 0 145687 39519 23917 19 4 0 19 4 0 35545 526

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=2/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 9
jcnd=5/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=12/14 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20
+6 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

ob=(5)
fl=(8)
fn=(164)
0x387e4bb2f0 0 1376 0 0 1 0 0 1
+3 0 1376 0 0 0 0 0 0 0 0 1376
+2 0 1376
cob=(2)
cfi=(9)
cfn=(168)
calls=1376 0x3877c7b8b0 0 
* 0 166327 43647 23917 21 6 0 21 6 0 41049 526
* 0 1376 1376 0 1 1 0 1 1 0 0 0 1376

fn=(32)
0x387e4bd0b0 0 1376 0 1376 1 0 0 1
+1 0 1376
+5 0 1376
+3 0 1376 0 1376
+1 0 1376
+4 0 1376 0 0 1 0 0 1
+3 0 1376
+4 0 1376
+3 0 1376 0 1376 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36)
calls=1376 0x3877c7aa50 0 
* 0 420732 60636 62933 51 41 53 51 41 53 72297 3079
* 0 1376 1376 0 1 1 0 1 1 0 0 0 1376
+5 0 1376
+3 0 1376 0 0 0 0 0 0 0 0 1376
jcnd=1376/1376 +96 0 
* 0 
+96 0 1376 0 0 1 0 0 1
+4 0 1376 1376
+1 0 1376 1376
+1 0 1376 1376

totals: 10917417 4461522 2575879 243 104 142 243 104 142 325062 6310 8246 169
