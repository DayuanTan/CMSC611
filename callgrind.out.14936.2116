version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2116


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2626586565 - 2626622399
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 138 0 0 1 0 0 1
+3 0 138 0 0 0 0 0 0 0 0 138
+2 0 138
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=138 0x3877c7b8b0 0 
* 0 12155 2812 1492 19 3 0 19 3 0 2541 14
* 0 138 138 0 1 1 0 1 1 0 0 0 138

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 138 0 138 1 0 0 1
+1 0 138
+5 0 138
+3 0 138 0 138
+1 0 138
+4 0 138 0 0 1 0 0 1
+3 0 138
+4 0 138
+3 0 138 0 138 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=138 0x3877c7aa50 0 
* 0 17986 3648 2636 31 29 27 31 29 27 3048 103
* 0 138 138 0 1 1 0 1 1 0 0 0 138
+5 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
jcnd=138/138 +96 0 
* 0 
+96 0 138 0 0 1 0 0 1
+4 0 138 138
+1 0 138 138
+1 0 138 138

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 114 0 114
+1 * 114
+3 * 114 0 114
+4 +1 114 114
+4 * 114 114
+1 * 114 114

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+4 +1 128 128 0 1 0 0 1
+4 * 128 128
+1 * 128 128

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 114 0 114
+1 * 114
+3 * 114 0 114 0 0 1 0 0 1
+4 +1 114 114
+4 * 114 114
+1 * 114 114

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 +1 128
+4 * 128
+3 * 128 0 128
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=128 0x404ffe 790 
* * 768 384 256 1 0 0 1
+5 * 128 128
+3 * 128 128
+1 * 128 128

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+4 +1 128 128
+4 * 128 128
+1 * 128 128

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 +1 128
+4 * 128
+3 * 128 0 128 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=128 0x40500c 790 
* * 768 384 256 1 0 0 1
+5 * 128 128
+3 * 128 128
+1 * 128 128

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 64 0 64
+1 * 64
+3 * 64 0 64
+4 * 64 0 64
+4 * 64 64
+4 * 64 64
+1 * 64 64

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 69 0 69
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 * 69 0 69
+4 +1 69 69
+4 * 69
+3 * 69 0 69
cob=(5)
cfi=(8)
cfn=(164)
calls=69 0x387e4bb2f0 0 
* * 6338 1467 744 21 4 0 21 4 0 1335 6 69
* * 69 69 0 1 1 0 1 1 0 0 0 69
+5 * 69 69
+1 * 69 69

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 69 0 69
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 * 69 0 69
+4 +1 69 69
+4 * 69
+3 * 69 0 69
cob=(5)
cfi=(8)
cfn=(164)
calls=69 0x387e4bb2f0 0 
* * 6369 1483 748 0 0 0 0 0 0 1344 8 69
* * 69 69 0 0 0 0 0 0 0 0 0 69
+5 * 69 69
+1 * 69 69

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 69 0 69 1 0 0 1
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 * 69 0 69
+4 +2 69 69
+4 * 69
+3 * 69 0 69
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=69 0x4048de +12 
* * 414 138 138 1 0 0 1
+5 * 69 69
+4 * 69 0 0 1 0 0 1
+3 * 69
+2 * 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 +7 +3 
* * 
+7 +3 69 69
+4 * 69
+4 * 69
+3 * 69 0 69
cob=(5)
cfi=(8)
cfn=(32)
calls=69 0x387e4bd0b0 0 
* * 9813 2057 1493 18 16 13 18 16 13 1541 42 69
* * 69 69 0 0 0 0 0 0 0 0 0 69
+5 +1 69 69
+1 * 69 69

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 64 0 64 1 0 0 1
+1 * 64
+3 * 64 0 64 0 0 1 0 0 1
+4 * 64 0 64
+4 * 64 64
+1 * 64 64

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 64 0 64 1 0 0 1
+1 * 64
+3 * 64 0 64
+4 * 64 0 64
+4 * 64 64
+1 * 64 64

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 64 0 64
+1 * 64
+3 * 64 0 64
+4 * 64 64
+1 * 64 64

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 69 0 69 1 0 0 1
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 * 69 0 69 1 0 0 1
+4 +2 69 69
+4 * 69
+3 * 69 0 69
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=69 0x404992 +12 
* * 414 138 138 1 0 0 1
+5 * 69 69
+4 * 69
+3 * 69
+2 * 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 +7 +3 
* * 
+7 +3 69 69
+4 * 69
+4 * 69
+3 * 69 0 69
cob=(5)
cfi=(8)
cfn=(32)
calls=69 0x387e4bd0b0 0 
* * 10381 2143 1557 17 14 15 17 14 15 1645 61 69
* * 69 69 0 1 1 0 1 1 0 0 0 69
+5 +1 69 69
+1 * 69 69

fn=(102)
0x4048de 113 79 0 79 1 0 0 1
+1 * 79
+3 * 79 0 79
+4 +1 79
+10 * 79 79
+1 * 79 79

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 * 32 0 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32
+5 * 32 0 32
cfi=(16)
cfn=(226)
calls=32 0x402d61 -20 
* * 224 96 96
+5 * 32
+3 * 32 0 0 0 0 0 0 0 0 32
+2 * 32 32
+4 * 32 32 0 0 2 0 0 2
+2 * 32 0 32 0 0 2 0 0 2
+2 * 32 32
+1 * 32 32

fn=(28)
0x404992 113 79 0 79 1 0 0 1
+1 * 79
+3 * 79 0 79
+4 +1 79
+10 * 79 79
+1 * 79 79

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 64 0 64
+1 * 64
+3 * 64 0 64
+4 * 64 64
+1 * 64 64

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 * 32 0 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32
+5 * 32 0 32
cfi=(16)
cfn=(226)
calls=32 0x402d61 -20 
* * 224 96 96
+5 * 32
+3 * 32 0 0 0 0 0 0 0 0 32
+2 * 32 32
+4 * 32 32 0 0 3 0 0 3
+2 * 32 0 32 0 0 1 0 0 1
+2 * 32 32
+1 * 32 32

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=10 0x404caa 450 
* * 2012 641 607 2 0 3 2 0 3 48 3 9
+5 * 10 10
+1 * 10 10

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=64 0x404484 107 
* * 19634 5940 5560 25 3 4 25 3 4 636 41 124 15
+5 * 64 64
+1 * 64 64

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=10 0x4048f2 107 
* * 2292 741 707 4 0 3 4 0 3 48 3 9
+5 * 10 10
+1 * 10 10

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +2 64 64 0 1 0 0 1
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=64 0x404a36 450 
* * 17842 5300 4920 24 3 4 24 3 4 636 41 124 15
+5 * 64 64
+1 * 64 64

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=64 0x40439c 107 
* * 19634 5940 5560 7 0 3 7 0 3 636 39 124
+5 * 64 64
+1 * 64 64

fn=(116)
0x40439c 107 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +10 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=64 0x4047d7 -26 
* * 18738 5620 5240 7 0 3 7 0 3 636 39 124
+5 +1 64 64
+1 * 64 64

fn=(118)
0x4047d7 91 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=64 0x4049e2 450 
* * 17842 5300 4920 7 0 3 7 0 3 636 39 124
+5 * 64 64
+1 * 64 64

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=10 0x404772 -25 
* * 2442 791 767 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(230)
calls=10 0x40465c -25 
* * 2442 791 767 5 0 3 5 0 3 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(232)
0x4048f2 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(234)
calls=10 0x404af4 -26 
* * 2152 691 657 4 0 3 4 0 3 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=10 0x404b99 -26 
* * 2152 691 657 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(274)
0x404b99 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=10 0x404cf0 450 
* * 2012 641 607 1 0 0 1 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fn=(50)
0x404484 107 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +10 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(52)
calls=64 0x404829 -26 
* * 18738 5620 5240 25 3 4 25 3 4 636 41 124 15
+5 +1 64 64
+1 * 64 64

fn=(270)
0x404772 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(272)
calls=10 0x4049a6 107 
* * 2292 741 707 2 0 0 2 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 64 0 64 1 0 0 1
+1 * 64
+3 * 64 0 64
+1 * 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64 64
+4 * 64
+3 * 64 64
+4 * 64 64
+3 * 64
+3 * 64
+3 * 64
+4 * 64
+3 * 64 64
+4 * 64 64
+3 -1 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=64 0x403d98 +11 
* * 7678 2008 1330 1 0 0 1 0 0 1304 6 128
+5 +1 64 64
+4 * 64
+3 * 64 0 64
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=64 0x403296 -82 
* * 1472 512 512 1 0 0 1
+5 * 64
jump=64 +28 * 
* * 
+28 * 64
+4 * 64 64
+1 * 64 64
+1 * 64 64

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 276 0 276 1 0 0 1
+1 * 276
+3 * 276 0 276 0 0 1 0 0 1
+4 +1 276 276
+4 * 276 276 0 1 1 0 1 1
+4 * 276
+3 * 276 276
+4 * 276 276
+3 * 276
+3 * 276
+3 * 276
+4 * 276 276
+1 * 276 276

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=64 0x404236 -14 
* * 12022 2794 2141 21 15 10 21 15 10 1619 45 128
+5 * 64 64
+4 * 64 0 64
+3 +1 64 64
+4 * 64 64 0 1 0 0 1
+3 * 64 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+3 * 64 64
+4 * 64
+4 * 64
+3 * 64 64
+4 * 64 0 64
+4 +1 64 64
+1 * 64 64

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64 64 0 1 0 0 1
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=64 0x403fbe -14 
* * 11391 2705 2078 13 11 9 13 11 9 1500 32 128
+5 * 64 64
+4 * 64 0 64
+3 +1 64 64
+4 * 64 64
+3 * 64 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+3 * 64 64
+4 * 64
+4 * 64
+3 * 64 64
+4 * 64 0 64
+4 +1 64 64
+1 * 64 64

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 32 0 32
+1 * 32
+3 * 32 0 0 1 0 0 1
+4 * 32 0 32
+4 * 32 0 32
+4 +2 32 32
+4 * 32 32
+4 * 32 32
+4 * 32 32
+4 * 32
+3 * 32 0 0 0 0 0 0 0 0 32
jcnd=5/32 +51 +10 
* * 
+2 +3 27 27
+4 * 27 27
+4 * 27 27
+4 -1 27 27
+4 * 27
+3 * 27
+3 * 27 0 27
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=27 0x4036b1 215 
* * 1026 351 378 0 2 0 0 2 0 27
+5 +2 27 27
+4 * 27 27
+4 * 27
+4 * 27 27
+4 * 27 0 27
+4 * 27
jump=27 +36 +8 
* * 
+2 +6 5 5
+4 * 5
+3 * 5 0 5
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=5 0x4039c4 556 
* * 115 45 35
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=5 0x4036de 318 
* * 6772 2127 1839 20 0 7 20 0 7 351 25 29
+5 +2 32 32
+1 * 32 32

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 143 0 143 1 0 0 1
+1 * 143
+3 * 143 0 143 1 0 0 1
+4 +1 143 143
+4 * 143 143
+1 * 143 143

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+3 * 64 0 64
+4 * 64
+4 * 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=64 0x404380 726 
* * 640 320 256
+5 * 64 64
+4 * 64 64
+1 * 64 64

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 64 0 64
+1 * 64
+3 * 64 0 64
+1 * 64
+4 * 64 0 64 1 0 0 1
+4 +2 64 64
+4 * 64
+3 * 64 0 64
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=64 0x40325e 113 
* * 384 192 128
+5 * 64
+3 * 64 64
+4 * 64 64
+4 * 64 64
+4 * 64 64
+3 -1 64
+3 * 64
+3 * 64 0 64
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=64 0x40326c 148 
* * 1984 640 768 4 0 0 4
+5 +1 64 64
+4 * 64
+3 * 64 0 64
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=64 0x4031ec 159 
* * 10924 3214 2160 25 5 0 25 5 0 1298 5 128
+5 * 64
jump=64 +28 * 
* * 
+28 * 64 0 0 1 0 0 1
+4 * 64 64
+1 * 64 64
+1 * 64 64

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 69 0 69 1 0 0 1
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 * 69 0 69
+4 +2 69 69
+5 * 69 0 0 0 0 0 0 0 0 69
+2 +1 69 69
+4 * 69 69
+4 * 69 69
+4 * 69
+3 * 69
+3 * 69 0 69
cfi=(5)
cfn=(160)
calls=69 0x4044d6 -65 
* * 7166 1743 1089 22 5 0 22 5 0 1335 6 138
+5 +1 69 69
+1 * 69 69

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 64 0 64
+1 * 64
+3 * 64 0 64
+1 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=64 0x4043ca -45 
* * 2304 832 896 4 0 4 4 0 4
+5 +1 64 64 0 1 0 0 1
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(20)
calls=64 0x404412 +43 
* * 13622 3562 2589 22 15 10 22 15 10 1619 45 128
+5 * 64
jump=64 +28 * 
* * 
+28 * 64
+4 * 64 64
+1 * 64 64
+1 * 64 64

fn=(14)
0x4043ca 90 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64 0 0 1 0 0 1
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=64 0x404804 +24 
* * 1152 384 448 2 0 1 2 0 1
+5 * 64 64
+4 * 64 0 64 0 0 2 0 0 2
+7 * 64 64
+4 * 64 0 64 1 0 0 1
+8 * 64 64
+4 * 64 0 64
+8 +1 64 64
+1 * 64 64

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 64 0 64 1 0 0 1
+1 * 64
+3 * 64 0 64
+2 * 64 0 64
+2 * 64 0 64
+1 * 64 0 0 1 0 0 1
+4 * 64 0 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64
+3 * 64 0 64
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=64 0x4039fc 117 
* * 384 192 128 2 0 0 2
+5 * 64
+3 * 64 0 64
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=64 0x4039ed -88 
* * 384 192 128
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(2)
calls=64 0x402d74 645 
* * 832 384 128
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64
+3 * 64
+3 * 64 0 64 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=64 0x403a0a 134 
* * 16703 4753 3870 20 11 9 20 11 9 1500 32 128
+5 +4 64 64
+4 * 64
+3 * 64 0 64
cfn=(106)
calls=64 0x40325e 113 
* * 384 192 128 1 0 0 1
+5 * 64
+3 * 64 64
+4 * 64 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=64 0x403a98 565 
* * 1600 640 512 2 0 0 2
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(112)
calls=64 0x403a68 547 
* * 1600 640 512
+5 * 64
+3 * 64
+3 * 64
+3 * 64
+3 * 64 0 64
cfi=(11)
cfn=(114)
calls=64 0x403ac9 -60 
* * 20594 6260 5944 7 0 3 7 0 3 636 39 124
+5 -3 64 64
+4 * 64 0 64
+4 * 64
jump=64 +28 +4 
* * 
+28 +4 64
+4 * 64 64
+1 * 64 64
+2 * 64 64
+2 * 64 64
+1 * 64 64

fn=(188)
0x403d98 171 69 0 69 1 0 0 1
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 * 69 0 69
+4 +2 69 69
+5 * 69 0 0 0 0 0 0 0 0 69 5
+2 +1 69 69
+4 * 69 69
+4 * 69 69
+4 * 69
+3 * 69
+3 * 69 0 69
cfi=(5)
cfn=(190)
calls=69 0x40452a -65 
* * 7197 1759 1093 0 0 0 0 0 0 1344 8 138
+5 +1 69 69
+1 * 69 69

fn=(22)
0x404236 167 69 0 69 1 0 0 1
+1 * 69
+3 * 69
+4 * 69 0 69 1 0 0 1
+4 * 69 0 69
+4 0 69 69
+5 0 69 0 0 0 0 0 0 0 0 69
+2 0 69 69
+4 0 69 69
+4 0 69
+5 0 69
+3 0 69
+3 0 69 0 69
fi=(6) ???
cfi=(5)
cfn=(26)
calls=69 0x404730 99 
* 0 12175 2695 2109 21 15 15 21 15 15 1714 61 138
+5 0 69
fi=(6)
jump=69 +7 0 
* 0 
+7 0 69 69
+1 0 69 69

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+4 * 64 0 64
+4 * 64
+4 * 64 0 0 1 0 0 1
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=64 0x404468 726 
* * 640 320 256 1 0 0 1
+5 * 64 64
+4 * 64 64
+1 * 64 64

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+3 * 64 0 64
+4 * 64
+4 * 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(10)
cfn=(44)
calls=64 0x404468 726 
* * 640 320 256
+5 * 64 64
+4 * 64 64
+1 * 64 64

fn=(86)
0x403a0a 134 64 0 64
+1 * 64
+3 * 64 0 64
+1 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=64 0x4042e2 -45 
* * 2304 832 896 5 0 0 5
+5 +1 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64 1 0 0 1
cfn=(94)
calls=64 0x40432a +43 
* * 12991 3473 2526 14 11 9 14 11 9 1500 32 128
+5 * 64
jump=64 +28 * 
* * 
+28 * 64
+4 * 64 64
+1 * 64 64
+1 * 64 64

fn=(88)
0x4042e2 90 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=64 0x4047b2 +24 
* * 1152 384 448 3 0 0 3
+5 * 64 64
+4 * 64 0 64
+7 * 64 64
+4 * 64 0 64
+8 * 64 64
+4 * 64 0 64
+8 +1 64 64
+1 * 64 64

fn=(156)
0x4031ec 159 64 0 64 1 0 0 1
+1 * 64
+3 * 64 0 64
+1 * 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64 64 0 1 0 0 1
+4 * 64
+3 * 64 64
+4 * 64 64
+3 * 64
+3 * 64
+3 * 64
+4 * 64
+3 * 64 64
+4 * 64 64
+3 -1 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(158)
calls=64 0x403ce6 +11 
* * 7660 1998 1328 22 5 0 22 5 0 1298 5 128
+5 +1 64 64
+4 * 64
+3 * 64 0 64
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=64 0x4031b8 -82 
* * 1472 512 512 1 0 0 1
+5 * 64
jump=64 +28 * 
* * 
+28 * 64
+4 * 64 64
+1 * 64 64
+1 * 64 64

fn=(172)
0x4031b8 79 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 64
+4 * 64
+3 * 64 0 64
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=64 0x403ccc +42 
* * 896 320 320
+5 * 64 64
+1 * 64 64

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=5 0x40404e 726 
* * 50 25 20 1 0 0 1
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=5 0x4045cc 650 
* * 160 55 55 1 0 0 1
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 5
+4 * 5
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(210)
calls=5 0x4045cc 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(246)
0x4039c4 556 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 148 0 148 1 0 0 1
+1 * 148
+3 * 148 0 148
+4 +1 148 148
+4 * 148 148 0 0 2 0 0 2
+4 * 148
+3 * 148 148
+4 * 148 148
+3 * 148
+3 * 148
+3 * 148
+4 * 148 148
+1 * 148 148

fn=(106)
0x40325e 113 143 0 143 1 0 0 1
+1 * 143
+3 * 143 0 143
+4 +1 143 143
+4 * 143 143
+1 * 143 143

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204)
calls=5 0x40404e 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5
+3 * 5 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(12)
cfn=(214)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(254)
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 74 0 74 1 0 0 1
+1 * 74
+3 * 74 0 74 0 0 1 0 0 1
+4 +1 74 74
+4 * 74 74
+1 * 74 74

fn=(82)
0x4039fc 117 74 0 74 1 0 0 1
+1 * 74
+3 * 74 0 74 1 0 0 1
+4 +1 74 74
+4 * 74 74
+1 * 74 74

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 * 32 0 32
+4 +2 32 32
+4 * 32 32
+4 * 32 32
+4 * 32 32
+4 * 32
+3 * 32 0 0 0 0 0 0 0 0 32 7
jcnd=5/32 +51 +10 
* * 
+2 +3 27 27
+4 * 27 27
+4 * 27 27
+4 -1 27 27
+4 * 27
+3 * 27
+3 * 27 0 27
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=27 0x403373 215 
* * 1026 351 378 0 2 0 0 2 0 27
+5 +2 27 27
+4 * 27 27
+4 * 27
+4 * 27 27
+4 * 27 0 27
+4 * 27
jump=27 +36 +8 
* * 
+2 +6 5 5 0 1 0 0 1
+4 * 5
+3 * 5 0 5
cfn=(202)
calls=5 0x403688 556 
* * 115 45 35 2 0 0 2
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=5 0x4033a0 318 
* * 6822 2124 1836 33 6 8 33 6 8 363 14 29
+5 +2 32 32
+1 * 32 32

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 64 0 64 1 0 0 1
+1 * 64
+3 * 64 0 64
+2 * 64 0 64
+2 * 64 0 64
+1 * 64
+4 * 64 0 64 1 0 0 1
+4 * 64 0 64
+4 +2 64 64
+4 * 64
+3 * 64 0 64
cfn=(6)
calls=64 0x403b08 117 
* * 384 192 128 1 0 1 1 0 1
+5 * 64
+3 * 64 0 64
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=64 0x403afa -88 
* * 384 192 128 1 0 0 1
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(10)
calls=64 0x402f54 645 
* * 832 384 128 1 1 0 1 1
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64
+3 * 64
+3 * 64 0 64
cfn=(12)
calls=64 0x403b16 134 
* * 17334 4842 3933 27 15 14 27 15 14 1619 45 128
+5 +4 64 64 0 1 0 0 1
+4 * 64
+3 * 64 0 64
cfn=(40)
calls=64 0x40333c 113 
* * 384 192 128 2 0 0 2
+5 * 64
+3 * 64 64
+4 * 64 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(42)
calls=64 0x403ba4 565 
* * 1600 640 512 3 0 0 3
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(46)
calls=64 0x403b74 547 
* * 1600 640 512
+5 * 64
+3 * 64
+3 * 64
+3 * 64
+3 * 64 0 64 1 0 0 1
cfi=(11)
cfn=(48)
calls=64 0x403bd5 -60 
* * 20594 6260 5944 26 3 4 26 3 4 636 41 124 15
+5 -3 64 64
+4 * 64 0 64
+4 * 64
jump=64 +28 +4 
* * 
+28 +4 64
+4 * 64 64
+1 * 64 64
+2 * 64 64
+2 * 64 64
+1 * 64 64

fn=(108)
0x403a98 565 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+4 * 64 0 64
+4 * 64
+4 * 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(10)
cfn=(110)
calls=64 0x404380 726 
* * 640 320 256 1 0 0 1
+5 * 64 64
+4 * 64 64
+1 * 64 64

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 64 0 64
+1 * 64
+3 * 64 0 64
+1 * 64
+4 * 64 0 64 1 0 0 1
+4 +2 64 64
+4 * 64
+3 * 64 0 64
cfn=(40)
calls=64 0x40333c 113 
* * 384 192 128
+5 * 64
+3 * 64 64
+4 * 64 64
+4 * 64 64
+4 * 64 64
+3 -1 64
+3 * 64
+3 * 64 0 64
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=64 0x40334a 148 
* * 1984 640 768 2 0 0 2
+5 +1 64 64
+4 * 64
+3 * 64 0 64
cfn=(186)
calls=64 0x4032ca 159 
* * 10942 3224 2162 3 0 0 3 0 0 1304 6 128
+5 * 64
jump=64 +28 * 
* * 
+28 * 64 0 0 1 0 0 1
+4 * 64 64
+1 * 64 64
+1 * 64 64

fn=(210)
0x4045cc 650 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(82)
calls=10 0x4039fc 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=10 0x4048c3 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(96)
0x403fbe 167 69 0 69 1 0 0 1
+1 * 69 0 0 1 0 0 1
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 0 69 69
+5 0 69 0 0 0 0 0 0 0 0 69
+2 0 69 69
+4 0 69 69
+4 0 69
+5 0 69
+3 0 69
+3 0 69 0 69
fi=(6)
cfi=(5)
cfn=(100)
calls=69 0x40461a 99 
* 0 11607 2609 2045 21 16 13 21 16 13 1610 42 138
+5 0 69
fi=(6)
jump=69 +7 0 
* 0 
+7 0 69 69
+1 0 69 69

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 1744 0 1744
+1 * 1744
+3 * 1744 0 1744
+4 * 1744 0 1744
+4 +1 1744 1744
+4 * 1744 1744
+3 * 1744 1744
+4 * 1744
+4 * 1744
+3 * 1744 1744
+1 * 1744 1744

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 1744 0 1744
+1 * 1744
+3 * 1744 0 1744 1 0 0 1
+4 * 1744 0 1744
+4 +1 1744 1744
+4 * 1744 1744
+3 * 1744 1744
+4 * 1744
+4 * 1744
+3 * 1744 1744
+1 * 1744 1744

fn=(192)
0x403296 79 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 64
+4 * 64
+3 * 64 0 64
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=64 0x403d7e +42 
* * 896 320 320 1 0 0 1
+5 * 64 64
+1 * 64 64

fn=(254)
0x40470e 650 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(6)
calls=10 0x403b08 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=10 0x404978 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fl=(12)
fn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404c52 424 64 0 64
+1 * 64
+3 * 64 0 64
+2 * 64 0 64
+1 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +4 64 64
+4 * 64
+3 * 64 0 64
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=64 0x40492d 277 
* * 960 384 320 2 0 0 2
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=64 0x404d9d 277 
* * 1600 576 512 2 0 1 2 0 1
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(66)
calls=64 0x404d9d 277 
* * 1600 576 512
+5 * 64
+3 * 64
+3 * 64
+3 * 64 0 64
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=64 0x404db7 -49 
* * 8562 2164 1784 15 3 3 15 3 3 636 41 124 15
+5 +1 64
+4 * 64 64
+1 * 64 64
+2 * 64 64
+1 * 64 64

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=10 0x404f37 -22 
* * 612 161 117 0 0 0 0 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(62)
0x40492d 277 94 0 94 1 0 0 1
+1 * 94
+3 * 94
+4 * 94 0 94
+4 +1 94 94
+4 * 94
+3 * 94 0 94 1 0 0 1
cfi=(13)
cfn=(64)
calls=94 -33 -66 
* * 564 282 188
+5 * 94 94
+1 * 94 94

fn=(66)
0x404d9d 277 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128
+3 * 128 0 128
cfi=(13)
cfn=(68)
calls=128 0x404f1a -58 
* * 2048 768 640 2 0 1 2 0 1
+5 * 128 128
+1 * 128 128

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 10 0 10
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=10 0x404878 277 
* * 150 60 50 0 0 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=10 0x404f9c -49 
* * 762 211 177 0 0 2 0 0 2 48 3 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(214)
0x4045ee 216 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 +5 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +8 +2 
* * 
+8 +2 10 10
+4 +1 10 10
+1 * 10 10

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(130)
calls=20 0x40486a -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(282)
calls=10 0x404fcd -49 
* * 762 211 177 0 0 0 0 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(120)
0x4049e2 450 64 0 64
+1 * 64
+3 * 64 0 64
+1 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +10 64 64
+4 * 64
+3 * 64 0 64
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=64 0x404bc6 288 
* * 960 384 320 3 0 0 3
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(122)
calls=64 0x404bc6 288 
* * 960 384 320
+5 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=64 0x404be0 -36 
* * 14514 4148 3768 4 0 3 4 0 3 636 39 124
+5 +1 64
+4 * 64 64
+1 * 64 64
+1 * 64 64

fn=(128)
0x404878 277 94 0 94
+1 * 94
+3 * 94
+4 * 94 0 94 1 0 0 1
+4 +1 94 94
+4 * 94
+3 * 94 0 94
cfi=(13)
cfn=(130)
calls=94 -33 -66 
* * 564 282 188 0 0 1 0 0 1
+5 * 94 94
+1 * 94 94

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128
+3 * 128 0 128
cfi=(13)
cfn=(134)
calls=128 0x404e98 -58 
* * 2048 768 640 2 0 0 2
+5 * 128 128
+1 * 128 128

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +8 64 0 64
+4 +3 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=64 0x404eb5 -22 
* * 7602 1844 1400 1 0 3 1 0 3 636 39 124
+5 +1 64 64
+1 * 64 64

fn=(242)
0x404f9c 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(140)
calls=10 0x404eb5 -22 
* * 612 161 117 0 0 2 0 0 2 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(276)
0x404cf0 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10
+3 * 10 0 10
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(278)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(280)
calls=10 0x404e40 -36 
* * 1492 461 427 1 0 0 1 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(278)
0x40469c 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(64)
calls=20 0x40491f -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(122)
0x404bc6 288 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128
+3 * 128 0 128
cfi=(13)
cfn=(124)
calls=128 0x404d36 -77 
* * 768 384 256 2 0 0 2
+5 * 128 128
+1 * 128 128

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128 1 0 0 1
+4 +1 128 128
+4 * 128
+3 * 128 0 128
cfi=(13)
cfn=(58)
calls=128 0x404d8f -77 
* * 768 384 256 1 0 0 1
+5 * 128 128
+1 * 128 128

fn=(74)
0x404f37 368 74 0 74
+1 * 74
+3 * 74
+4 * 74 0 74 1 0 0 1
+4 * 74 0 74
+4 * 74 0 74
+4 +2 74 74
+4 * 74 74
+4 * 74
+3 * 74
+3 * 74
+4 * 74 0 74
+4 +1 74 74
+5 * 74 0 0 0 0 0 0 0 0 74
jcnd=5/74 +33 +2 
* * 
+2 +1 69 69
+4 * 69
+8 * 69 69
+4 * 69 69
+4 * 69
+3 * 69 0 0 1 0 0 1
+3 * 69 0 69 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=69 0x3877c83840 0 
* * 6182 1211 1078 11 2 2 11 2 2 610 43 64 15
* * 69 69 0 1 1 0 1 1 0 0 0 69
+5 +1 74 74
+4 * 74
+8 * 74 74
+4 * 74
+3 +1 74 74
+1 * 74 74

fn=(140)
0x404eb5 368 74 0 74
+1 * 74
+3 * 74
+4 * 74 0 74 1 0 0 1
+4 * 74 0 74
+4 * 74 0 74 0 0 1 0 0 1
+4 +2 74 74
+4 * 74 74
+4 * 74
+3 * 74
+3 * 74
+4 * 74 0 74
+4 +1 74 74
+5 * 74 0 0 0 0 0 0 0 0 74
jcnd=5/74 +33 +2 
* * 
+2 +1 69 69
+4 * 69
+8 * 69 69
+4 * 69 69
+4 * 69
+3 * 69
+3 * 69 0 69
cob=(2)
cfi=(9)
cfn=(78)
calls=69 0x3877c83840 0 
* * 6182 1211 1078 0 0 4 0 0 4 610 42 64
* * 69 69 0 0 0 0 0 0 0 0 0 69
+5 +1 74 74
+4 * 74
+8 * 74 74
+4 * 74
+3 +1 74 74
+1 * 74 74

fn=(72)
0x404db7 379 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64 1 0 0 1
+4 * 64 0 64
+4 * 64 0 64
+4 +8 64 0 64
+4 +3 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(74)
calls=64 0x404f37 -22 
* * 7602 1844 1400 14 3 3 14 3 3 636 41 124 15
+5 +1 64 64
+1 * 64 64

fn=(126)
0x404be0 424 64 0 64
+1 * 64
+3 * 64 0 64
+2 * 64 0 64
+1 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +4 64 64
+4 * 64
+3 * 64 0 64
cfn=(128)
calls=64 0x404878 277 
* * 960 384 320 1 0 0 1
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(132)
calls=64 0x404d44 277 
* * 1600 576 512 2 0 0 2
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(132)
calls=64 0x404d44 277 
* * 1600 576 512
+5 * 64
+3 * 64
+3 * 64
+3 * 64 0 64
cfn=(138)
calls=64 0x404d5e -49 
* * 8562 2164 1784 1 0 3 1 0 3 636 39 124
+5 +1 64
+4 * 64 64
+1 * 64 64
+2 * 64 64
+1 * 64 64

fn=(236)
0x404caa 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(240)
calls=10 0x404de8 -36 
* * 1492 461 427 1 0 3 1 0 3 48 3 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(54)
0x404a36 450 64 0 64
+1 * 64
+3 * 64 0 64
+1 * 64
+4 * 64 0 64 1 0 0 1
+4 * 64 0 64
+4 * 64 0 64
+4 +10 64 64
+4 * 64
+3 * 64 0 64
cfn=(56)
calls=64 0x404c38 288 
* * 960 384 320 3 0 0 3
+5 * 64
+3 * 64 64
+4 * 64
+3 * 64 0 64
cfn=(56)
calls=64 0x404c38 288 
* * 960 384 320
+5 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfn=(60)
calls=64 0x404c52 -36 
* * 14514 4148 3768 20 3 4 20 3 4 636 41 124 15
+5 +1 64
+4 * 64 64
+1 * 64 64
+1 * 64 64

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(204)
0x40404e 726 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=5 0x403e26 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(70)
0x40500c 790 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+4 +1 128 128
+4 * 128 128
+1 * 128 128

fn=(110)
0x404380 726 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+4 * 128 0 128
+4 * 128 128
+4 * 128 128
+3 * 128 128
+4 * 128 0 128
+3 * 128 128
+1 * 128 128

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(136)
0x404ffe 790 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+4 +1 128 128
+4 * 128 128
+1 * 128 128

fn=(44)
0x404468 726 128 0 128
+1 * 128
+3 * 128 0 128
+4 * 128 0 128
+4 * 128 128
+4 * 128 128
+3 * 128 128
+4 * 128 0 128 1 0 0 1
+3 * 128 128
+1 * 128 128

fn=(248)
0x4042c6 726 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(220)
0x403e26 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fl=(14)
fn=(150)
0x40326c 148 69 0 69
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 * 69 0 69
+4 +3 69 69 0 1 0 0 1
+4 * 69 69
+4 * 69
+3 * 69
+3 * 69 0 69
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=69 0x403d1a -29 
* * 1242 414 483 3 0 0 3
+5 +1 69 69
+1 * 69 69

fn=(180)
0x40334a 148 69 0 69
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 * 69 0 69
+4 +3 69 69
+4 * 69 69
+4 * 69
+3 * 69
+3 * 69 0 69
cfn=(182) void std::_Destroy<int*>(int*, int*)
calls=69 0x403dcc -29 
* * 1242 414 483 2 0 0 2
+5 +1 69 69
+1 * 69 69

fn=(152)
0x403d1a 122 69 0 69 1 0 0 1
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 +4 69 69
+4 * 69 69
+4 * 69
+3 * 69
+3 * 69 0 69
cfn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
calls=69 0x4044f8 -14 
* * 414 138 207 2 0 0 2
+5 +2 69 69
+1 * 69 69

fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 69 0 69 1 0 0 1
+1 * 69
+3 * 69 0 69
+4 * 69 0 69
+4 * 69 69
+1 * 69 69

fn=(154)
0x4044f8 112 69 0 69 1 0 0 1
+1 * 69
+3 * 69 0 69
+4 * 69 0 69 1 0 0 1
+4 * 69 69
+1 * 69 69

fn=(182)
0x403dcc 122 69 0 69 1 0 0 1
+1 * 69
+3 * 69
+4 * 69 0 69
+4 * 69 0 69
+4 +4 69 69
+4 * 69 69
+4 * 69
+3 * 69
+3 * 69 0 69
cfn=(184)
calls=69 0x40454c -14 
* * 414 138 207 1 0 0 1
+5 +2 69 69
+1 * 69 69

fl=(15)
fn=(250)
0x4036de 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x403799 +21 
* * 
0x403799 +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(252)
calls=5 0x404104 1336 
* * 905 335 235 4 0 0 4 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(258)
calls=5 0x4041ce 538 
* * 110 45 35
+5 * 5 0 5 1 0 0 1
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(260)
calls=5 0x4041f3 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(22)
calls=5 0x404236 167 
* * 1257 246 244 2 0 5 2 0 5 164 16 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5
+4 * 5 0 0 1 0 0 1
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(264)
calls=5 0x4036b1 215 
* * 190 65 70 0 0 2 0 0 2 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -88 
* * 1502 471 447 3 0 0 3 0 0 43 2 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 5
+3 -1 5 0 0 1 0 0 1
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(180)
calls=5 0x40334a 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(188)
calls=5 0x403d98 171 
* * 623 165 108 0 0 0 0 0 0 109 7 10
+5 +3 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x4039ba * 
* * 
0x4039ba * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fn=(206)
0x4033a0 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x40345e +21 
* * 
0x40345e +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(208)
calls=5 0x403e8c 1336 
* * 905 335 235 5 0 0 5 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(216)
calls=5 0x403f56 538 
* * 110 45 35
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(218)
calls=5 0x403f7b 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(96)
calls=5 0x403fbe 167 
* * 1320 249 243 10 5 4 10 5 4 179 10 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5 0 1 0 0 1
+4 * 5
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(222)
calls=5 0x403373 215 
* * 190 65 70 0 1 1 0 1 1 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -88 
* * 1502 471 447 6 0 3 6 0 3 43 3 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5
+4 * 5
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+3 -1 5
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(150)
calls=5 0x40326c 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(158)
calls=5 0x403ce6 171 
* * 610 159 106 1 0 0 1 0 0 106 1 10
+5 +3 5 5
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x40367f * 
* * 
0x40367f * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 32 0 32 1 0 0 1
+1 * 32
+3 * 32
+4 * 32 0 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(2)
cfn=(2)
calls=32 0x402d74 645 
* * 416 192 64
+5 * 32
+3 * 32 0 32
+3 +1 32 32
+6 * 32 0 32
+3 * 32 32
+6 * 32 0 32
+3 +1 32 32
+6 * 32 0 32 1 0 0 1
+3 * 32 32
+6 * 32 0 32
+3 +2 32 0 32
+7 * 32
jump=32 +86 * 
* * 
+2 +1 560 560
+3 * 560
+3 * 560 560
+4 * 560
+3 * 560
+3 * 560 0 560
cfi=(2)
cfn=(144)
calls=560 0x402d9a 770 
* * 6160 2800 1680
+5 * 560 560
+4 * 560 560
+5 * 560
+4 * 560 0 560
+5 +1 560 560
+3 * 560
+3 * 560 560
+4 * 560
+3 * 560
+3 * 560 0 560
cfi=(2)
cfn=(146)
calls=560 0x402dba 770 
* * 6160 2800 1680 1 0 0 1
+5 * 560 560
+2 * 560
+4 * 560 560
+5 * 560
+4 * 560 0 560
+5 -2 560 0 560
+4 * 560 560
+3 * 560
+3 * 560 560
+3 * 560 0 0 0 0 0 0 0 0 560 33
jcnd=528/560 -93 +1 
* * 
-9 * 32 32 0 1 0 0 1
+3 * 32
+3 * 32 32
+3 * 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 -93 +1 
* * 
+2 +4 32 32
+3 * 32
+3 * 32
+4 * 32 32 0 1 0 0 1
+5 * 32
+4 * 32
+3 * 32 0 32
+5 +1 32 32
+3 * 32
+3 * 32
+4 * 32 32
+5 * 32
+4 * 32
+3 * 32 0 32
+5 +1 32 0 32
+7 * 32
jump=32 0x4016ee * 
* * 
+2 +1 560 560
+3 * 560
+3 * 560 560
+4 * 560
+3 * 560 0 0 1 0 0 1
+3 * 560 0 560
cfi=(2)
cfn=(146)
calls=560 0x402dba 770 
* * 6160 2800 1680
+5 * 560 560
+2 * 560
+4 * 560 560
+5 * 560 0 560
+5 +1 560 560
+3 * 560
+3 * 560 560
+4 * 560
+3 * 560
+3 * 560 0 560
cfi=(2)
cfn=(144)
calls=560 0x402d9a 770 
* * 6160 2800 1680
+5 * 560 560
+4 * 560 560
+5 * 560 0 560
+5 +1 560 560
+5 * 560 560
+5 * 560 560
+5 * 560
+4 * 560 0 560
+5 +1 560 560
+5 * 560 560
+5 * 560 560
+5 * 560
+4 * 560 0 560
+5 -4 560 0 560
+4 * 560 560
+3 * 560
+3 * 560 560
+3 * 560 0 0 0 0 0 0 0 0 560 33
jcnd=528/560 0x401672 +1 
* * 
-9 * 32 32 0 1 0 0 1
+3 * 32
+3 * 32 32
+3 * 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 0x401672 +1 
* * 
+6 +6 32 32 0 1 0 0 1
+5 * 32 32
+5 * 32 0 32
+5 +2 32 32
+3 +1 32 0 32
+3 * 32 32
+5 * 32 32
+1 * 32 32

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 32
+7 * 32
+7 * 32
+3 * 32
+3 * 32 0 32
cfi=(2)
cfn=(4)
calls=32 0x4030b2 310 
* * 23465 7144 6259 63 18 17 63 18 17 1165 69 126 15
+5 * 32
+7 * 32
+7 * 32
+3 * 32
+3 * 32 0 32
cfi=(2)
cfn=(80)
calls=32 0x402ff4 310 
* * 23254 7104 6237 35 11 12 35 11 12 1127 68 126
+5 * 32 0 0 1 0 0 1
+7 * 32
+7 * 32
+3 * 32
+3 * 32 0 32
cfn=(142)
calls=32 0x401585 -52 
* * 60320 26560 13984 8 0 0 8 0 0 1184 66
+5 * 32 0 32
+8 * 32 32
+6 * 32 0 32
+6 * 32
+7 * 32
+3 * 32 0 32
cfi=(2)
cfn=(148)
calls=32 0x402df4 414 
* * 7414 2311 1720 31 5 0 31 5 0 649 4 64
+5 * 32
+7 * 32
+3 * 32 0 32 1 0 0 1
cfi=(2)
cfn=(178)
calls=32 0x402e74 414 
* * 7423 2316 1721 7 0 0 7 0 0 652 4 64
+5 +2 32
+7 * 32
+7 * 32
+3 * 32
+3 * 32 0 32
cfi=(2)
cfn=(4)
calls=32 0x4030b2 310 
* * 22847 7094 6114 2 1 2 2 1 2 1090 17 126
+5 * 32
+7 * 32
+7 * 32
+3 * 32
+3 * 32 0 32
cfi=(2)
cfn=(80)
calls=32 0x402ff4 310 
* * 22427 7045 6073 0 0 0 0 0 0 1009 3 126
+5 * 32 32
+6 * 32 0 0 1 0 0 1
+7 * 32
+7 * 32 0 32
+6 * 32 32
+8 * 32
+3 * 32
+3 * 32 0 32
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=32 0x401719 -33 
* * 28768 11904 6640 4 0 0 4 0 0 592 33
+5 * 32 0 32
+8 * 32 32
+6 * 32 0 32
+6 * 32
+7 * 32 0 0 1 0 0 1
+3 * 32 0 32
cfi=(2)
cfn=(148)
calls=32 0x402df4 414 
* * 7414 2311 1720 0 0 0 0 0 0 649 1 64
+5 * 32
+7 * 32
+3 * 32 0 32
cfi=(2)
cfn=(178)
calls=32 0x402e74 414 
* * 7423 2316 1721 0 0 0 0 0 0 652 2 64
+5 +2 32 32
+7 * 32
+3 * 32 0 32
cfi=(2)
cfn=(2)
calls=32 0x402d74 645 
* * 416 192 64
+5 * 32 32
+6 * 32
+3 * 32
+3 * 32
+3 * 32 32
+7 * 32
+3 * 32 0 0 1 0 0 1
+3 * 32 0 32
cfi=(2)
cfn=(144)
calls=32 0x402d9a 770 
* * 352 160 96
+5 * 32
+3 * 32
+7 * 32
+3 * 32
+3 * 32 0 32
cfi=(2)
cfn=(200)
calls=32 0x402eda 901 
* * 8775 2916 2409 36 8 8 36 8 8 422 21 29
+5 +1 32 32
+7 * 32
+3 * 32 0 32
cfi=(2)
cfn=(10)
calls=32 0x402f54 645 
* * 416 192 64 0 1 0 0 1
+5 * 32 32
+6 * 32
+3 * 32
+3 * 32
+3 * 32 32
+7 * 32 0 0 1 0 0 1
+3 * 32
+3 * 32 0 32
cfi=(2)
cfn=(146)
calls=32 0x402dba 770 
* * 352 160 96
+5 * 32
+3 * 32
+7 * 32
+3 * 32
+3 * 32 0 32
cfi=(2)
cfn=(244)
calls=32 0x402f7a 901 
* * 8725 2919 2412 21 2 7 21 2 7 410 25 29
+5 +1 32 32
+7 * 32
+3 * 32 0 32
cfi=(2)
cfn=(10)
calls=32 0x402f54 645 
* * 416 192 64
+5 * 32 32
+6 * 32
+3 * 32
+3 * 32
+3 * 32 32 0 1 0 0 1
+7 * 32
+3 * 32
+3 * 32 0 32
cfi=(2)
cfn=(146)
calls=32 0x402dba 770 
* * 352 160 96
+5 * 32 32
+2 * 32
+4 * 32 32
+8 * 32 32
+8 * 32 0 32
+8 +1 32 32
+7 * 32
+3 * 32 0 32
cfi=(2)
cfn=(2)
calls=32 0x402d74 645 
* * 416 192 64
+5 * 32 32 0 1 0 0 1
+6 * 32
+3 * 32
+3 * 32
+3 * 32 32
+7 * 32
+3 * 32
+3 * 32 0 32
cfi=(2)
cfn=(144)
calls=32 0x402d9a 770 
* * 352 160 96
+5 * 32 32
+4 * 32 32
+8 * 32
+4 * 32 32
+8 * 32
+3 * 32 0 32
+8 +2 32 0 32
+7 -12 32 32
+8 * 32 32
+7 * 32 0 0 0 0 0 0 0 0 32 1
jcnd=1/32 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 32
+7 * 32
+3 * 32 0 32
cfi=(2)
cfn=(2)
calls=32 0x402d74 645 
* * 416 192 64 2 0 1 2 0 1
+5 * 32
+3 * 32 32
+7 * 32
+3 * 32 0 32
cfi=(2)
cfn=(2)
calls=32 0x402d74 645 
* * 416 192 64 0 1 0 0 1
+5 * 32
+3 * 32 0 0 0 0 0 0 0 0 32
+2 * 32 0 0 1 0 0 1
+5 * 32
jump=32 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 32
+2 * 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 * 32 0 32
+4 * 32 0 32
+5 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(2)
cfn=(2)
calls=32 0x402d74 645 
* * 416 192 64
+5 * 32
+3 * 32 0 32
+3 +1 32 32 0 1 0 0 1
+6 * 32 0 32
+3 * 32 32
+6 * 32 0 32
+3 +2 32 0 32
+7 * 32
jump=32 +86 * 
* * 
+2 +1 560 560
+3 * 560
+3 * 560 560
+4 * 560
+3 * 560
+3 * 560 0 560
cfi=(2)
cfn=(144)
calls=560 0x402d9a 770 
* * 6160 2800 1680
+5 * 560 560
+4 * 560 560
+5 * 560
+4 * 560 0 560
+5 +1 560 560
+3 * 560
+3 * 560 560
+4 * 560
+3 * 560
+3 * 560 0 560
cfi=(2)
cfn=(146)
calls=560 0x402dba 770 
* * 6160 2800 1680
+5 * 560 560
+2 * 560
+4 * 560 560
+5 * 560
+4 * 560 0 560
+5 -2 560 0 560
+4 * 560 560
+3 * 560
+3 * 560 560
+3 * 560 0 0 0 0 0 0 0 0 560 33
jcnd=528/560 -93 +1 
* * 
-9 * 32 32 0 1 0 0 1
+3 * 32
+3 * 32 32
+3 * 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 -93 +1 
* * 
+2 +4 32 32
+3 * 32
+3 * 32 0 0 1 0 0 1
+4 * 32 32
+5 * 32
+4 * 32
+3 * 32 0 32
+5 +1 32 32
+3 * 32
+3 * 32
+4 * 32 32
+5 * 32
+4 * 32
+3 * 32 0 32
+5 +1 32 32
+5 * 32 32
+5 * 32 32
+5 * 32 0 0 1 0 0 1
+4 * 32
+3 * 32 0 32
+5 +2 32 32
+3 +1 32 0 32
+3 * 32 32
+5 * 32 32
+1 * 32 32

fl=(4)
fn=(174)
0x403ccc 121 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 64
+4 * 64
+3 * 64 0 64
cfi=(5)
cfn=(176)
calls=64 0x4044cc -35 
* * 320 128 128
+5 * 64 64
+1 * 64 64

fn=(90)
0x4047b2 115 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64 1 0 0 1
+4 +1 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(5)
cfn=(92)
calls=64 0x4049d4 -35 
* * 384 128 192 1 0 0 1
+5 * 64 64
+1 * 64 64

fn=(194)
0x403d7e 121 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 64
+4 * 64
+3 * 64 0 64
cfi=(5)
cfn=(196)
calls=64 0x404520 -35 
* * 320 128 128
+5 * 64 64
+1 * 64 64

fn=(16)
0x404804 115 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(5)
cfn=(18)
calls=64 0x404a28 -35 
* * 384 128 192 1 0 1 1 0 1
+5 * 64 64
+1 * 64 64

fl=(3)
fn=(8)
0x403afa 224 64 0 64 1 0 0 1
+1 * 64
+3 * 64 0 64
+4 * 64 64
+4 * 64 64
+1 * 64 64

fn=(264)
0x4036b1 215 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 * 32 0 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32 32
+4 * 32 32
+4 * 32
+3 * 32
+3 * 32 0 32
cfi=(5)
cfn=(266)
calls=32 0x40406a -87 
* * 768 256 288 0 2 2 0 2 2 32
+5 * 32 32
+1 * 32 32

fn=(212)
0x4048c3 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(102)
calls=10 +8 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(256)
0x404978 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(28)
calls=10 +7 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(84)
0x4039ed 224 64 0 64
+1 * 64
+3 * 64 0 64
+4 * 64 64
+4 * 64 64
+1 * 64 64

fn=(222)
0x403373 215 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 * 32 0 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32 32
+4 * 32 32
+4 * 32
+3 * 32
+3 * 32 0 32
cfi=(5)
cfn=(224)
calls=32 0x403df2 -87 
* * 768 256 288 0 3 1 0 3 1 32
+5 * 32 32
+1 * 32 32

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 138 0 138 1 0 0 1
+5 0 138 0 138
+5 0 138
+3 0 138 0 138
+5 0 138
+4 0 138 138 0 0 1 0 0 1
+7 0 138 138 0 0 1 0 0 1
+3 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
+6 0 138 138 0 0 1 0 0 1
+7 0 138 138 0 1 1 0 1 1
+4 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
+2 0 138 138 0 0 1 0 0 1
+3 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
jcnd=138/138 +97 0 
* 0 
+18 0 138
+3 0 138
+3 0 138 0 138
cfn=(38) _int_malloc
calls=138 0x3877c79a00 0 
* 0 12190 2130 1808 27 23 27 27 23 27 1668 101
+5 0 138
+3 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
+2 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
+2 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
+2 0 138 138
+7 0 138 0 0 0 0 0 0 0 0 138
jcnd=138/138 +13 0 
* 0 
+13 0 138 0 138
+2 0 138 0 0 0 0 0 0 0 0 138 2
+6 0 138
+3 0 138 138
+4 0 138 138
+5 0 138 138
+5 0 138
+4 0 138 138
+1 0 138 0 0 1 0 0 1
+5 0 138 138 0 0 1 0 0 1
+7 0 138 0 0 0 0 0 0 0 0 138
jcnd=138/138 +14 0 
* 0 
+14 0 138 0 138 1 0 0 1
+3 0 138 0 0 0 0 0 0 0 0 138
+6 0 138
jump=138 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 138 0 138 1 0 0 1
+2 0 138
+3 0 138
+3 0 138 0 138
+2 0 138
+3 0 138 0 138
+1 0 138
+3 0 138 0 138
+1 0 138
+3 0 138
+4 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
+6 0 138
+4 0 138
+3 0 138 0 0 0 0 0 0 0 0 138 4
jcnd=10/138 0x3877c838d1 0 
* 0 
+2 0 128
+3 0 128
+3 0 128
+3 0 128
+3 0 128
+3 0 128 0 0 0 0 0 0 0 0 128
jcnd=128/128 +41 0 
* 0 
+41 0 128 0 0 1 0 0 1
+3 0 128 0 0 0 0 0 0 0 0 128
jcnd=128/128 0x3877c839c0 0 
* 0 
+24 0 128
+3 0 128
+4 0 128
+3 0 128
+3 0 128
+3 0 128
+3 0 128
+3 0 128 0 0 0 0 0 0 0 0 128 60
jcnd=68/128 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 70
+10 0 70 70 0 0 1 0 0 1
+3 0 70
+4 0 70 0 70
+3 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 -18 0 
* 0 
-18 0 266 266
+3 0 266
+4 0 266 0 266
+3 0 266
+4 0 266
+4 0 266 0 0 0 0 0 0 0 0 266 8
jcnd=196/266 -18 0 
* 0 
+2 0 138
+4 0 138
+3 0 138 138
+1 0 138 138
+1 0 138 138
+2 0 138 138 0 1 0 0 1
+2 0 138 138
0x3877c839c0 0 128 0 0 1 0 0 1
+3 0 128
+3 0 128
+3 0 128
+4 0 128 0 128 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=128 0x3877c89b20 0 
* 0 4406 1396 1140 6 1 5 6 1 5 214 13 128 15
+5 0 128
jump=128 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 138 138 0 1 1 0 1 1
+7 0 138 138 0 0 1 0 0 1
+3 0 138
+3 0 138 0 0 1 0 0 1 0 0 138
+6 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
+6 0 138 138
+4 0 138
+4 0 138
+2 0 138 0 0 0 0 0 0 0 0 138
+2 0 138
+2 0 138
+7 0 138 0 0 0 0 0 0 0 0 138
jcnd=138/138 +14 0 
* 0 
+14 0 138
+2 0 138
cfn=(170) _int_free
calls=138 0x3877c78650 0 
* 0 10085 2398 1492 17 1 0 17 1 0 1989 14

fn=(170)
0x3877c78650 0 138 0 138 1 0 0 1
+2 0 138 0 138
+2 0 138 0 138
+2 0 138
+3 0 138 0 138
+2 0 138 0 138
+1 0 138 0 138
+1 0 138
+3 0 138
+4 0 138 138
+4 0 138 0 138
+4 0 138
+3 0 138
+4 0 138
+3 0 138
+3 0 138
+3 0 138 0 0 1 0 0 1 0 0 138
+6 0 138
+4 0 138 0 0 0 0 0 0 0 0 138
+6 0 138
+4 0 138 0 0 0 0 0 0 0 0 138
+6 0 138 138
+7 0 138 0 0 0 0 0 0 0 0 138 2
jcnd=14/138 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 14
+2 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14 0 1 0 0 1
+4 0 14
+3 0 14
+2 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 0x3877c78a40 0 
* 0 
+6 0 14 14
+4 0 14
+3 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+5 0 14
+4 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 0x3877c7907c 0 
* 0 
+6 0 14 14
+5 0 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14
+4 0 14 0 0 1 0 0 1 0 0 14
+6 0 14
+4 0 14 14
+7 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+6 0 14
+2 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +70 0 
* 0 
+2 0 1 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +15 0 
* 0 
+15 0 14 14 0 1 0 0 1
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+6 0 14 0 0 1 0 0 1 0 0 14 6
jcnd=4/14 0x3877c78a78 0 
* 0 
+6 0 10 10
+5 0 10 10
+5 0 10 10
+4 0 10 0 0 0 0 0 0 0 0 10
+6 0 10 10
+4 0 10 0 0 0 0 0 0 0 0 10
+6 0 10 10
+9 0 10 0 10
+4 0 10 0 10
+4 0 10 0 0 0 0 0 0 0 0 10 4
jcnd=2/10 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 10
+3 0 10
+4 0 10 10
+4 0 10 10
+4 0 10 0 0 0 0 0 0 0 0 10
-12 0 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 14
+7 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14
jcnd=6/14 +18 0 
* 0 
+2 0 8 0 8
+8 0 8 0 8
+8 0 8 0 8
+4 0 8
+3 0 8 0 8 1 0 0 1
+4 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+7 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c78b20 0 
* 0 
-30 0 6 0 6
+4 0 6
+3 0 6 0 6
+4 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
+7 0 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x3877c78b20 0 
* 0 
0x3877c78a40 0 14 0 0 1 0 0 1
+5 0 14 14
+4 0 14 14
+7 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +16 0 
* 0 
+16 0 14 0 14
+5 0 14 0 0 0 0 0 0 0 0 14
+6 0 14
+3 0 14
jump=14 0x3877c7878f 0 
* 0 
+10 0 4 0 4
+6 0 4 0 0 1 0 0 1
jump=4 0x3877c78885 0 
* 0 
0x3877c78b20 0 14 14 0 1 0 0 1
+4 0 14
+2 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+7 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +15 0 
* 0 
+15 0 14 0 14 1 0 0 1
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14
+4 0 14 14
+1 0 14 14
+1 0 14 14
+2 0 14 14
+2 0 14 14
+2 0 14 14
+2 0 14 14
0x3877c7907c 0 14 14 0 1 1 0 1 1
+4 0 14 0 0 1 0 0 1
+7 0 14
+4 0 14
+3 0 14
+3 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 128 0 0 1 0 0 1
+7 0 128
+3 0 128
+3 0 128 128 0 0 1 0 0 1
+4 0 128
+4 0 128 0 0 0 0 0 0 0 0 0 0 128 15
jump=8 0x3877c89be8 0 
* 0 
jump=20 0x3877c89bd0 0 
* 0 
jump=16 0x3877c89bb8 0 
* 0 
jump=16 +11 0 
* 0 
jump=16 0x3877c89c48 0 
* 0 
jump=18 0x3877c89c30 0 
* 0 
jump=16 0x3877c89c18 0 
* 0 
jump=18 0x3877c89c00 0 
* 0 
+11 0 16 16
+3 0 16
+4 0 16
+4 0 16 16
+4 0 16
+4 0 16 0 16
+4 0 16
+9 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
+4 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=8/16 0x3877c89c60 0 
* 0 
-40 0 118 118
+4 0 118 0 118
+4 0 118 118
+4 0 118 0 118
+4 0 118 118
+4 0 118 0 118 0 0 1 0 0 1
+4 0 118 118
+4 0 118 0 118
+4 0 118
+4 0 118
+4 0 118 0 0 0 0 0 0 0 0 118 9
jcnd=92/118 0x3877c89c60 0 
* 0 
-32 0 18 18
+4 0 18 0 18
+4 0 18 18
+4 0 18 0 18
+4 0 18 18
+4 0 18 0 18
+4 0 18
+4 0 18
+4 0 18 0 0 0 0 0 0 0 0 18
jcnd=10/18 0x3877c89c60 0 
* 0 
-24 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
+4 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=8/16 0x3877c89c60 0 
* 0 
-16 0 18 18 0 1 0 0 1
+4 0 18 0 18
+4 0 18 0 0 1 0 0 1
+4 0 18
+4 0 18 0 0 0 0 0 0 0 0 18 4
jcnd=10/18 0x3877c89c60 0 
* 0 
+6 0 58
+4 0 58 58
+3 0 58 0 58 0 0 1 0 0 1
+3 0 58 58
+4 0 58 0 58
+4 0 58 58
+4 0 58 0 58 0 0 3 0 0 3
+4 0 58 58
+4 0 58 0 58
+4 0 58
jump=58 -80 0 
* 0 
-30 0 8 8
+3 0 8 0 8
+3 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
jump=8 -80 0 
* 0 
-24 0 20 20
+4 0 20 0 20
+4 0 20 20
+4 0 20 0 20
+4 0 20 20
+4 0 20 0 20
+4 0 20
jump=20 -80 0 
* 0 
-16 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 -80 0 
* 0 
+8 0 16 16
+3 0 16
+4 0 16 0 0 1 0 0 1
+4 0 16
+4 0 16
jump=16 -39 0 
* 0 
+9 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
+6 0 20 20
+3 0 20
+4 0 20
jump=20 -72 0 
* 0 
+8 0 8
+4 0 8 8
+3 0 8 0 0 0 0 0 0 0 0 8
+2 0 8
+4 0 8
jump=8 -99 0 
* 0 
+11 0 18 18 0 1 0 0 1
+3 0 18
+4 0 18
+4 0 18
+4 0 18
jump=18 0x3877c89b78 0 
* 0 
+9 0 16 16
+3 0 16
+4 0 16
+4 0 16
+4 0 16
jump=16 0x3877c89b70 0 
* 0 
+9 0 18 18
+3 0 18
+4 0 18
+4 0 18
+4 0 18
jump=18 0x3877c89b68 0 
* 0 
+9 0 16 16
+3 0 16
+4 0 16
+4 0 16
+4 0 16
jump=16 0x3877c89b60 0 
* 0 
+9 0 128 0 128 1 0 0 1
+3 0 128 128

fn=(104) alloc_perturb
0x3877c77180 0 30 30 0 1 0 0 1
+6 0 30
+2 0 30 0 0 0 0 0 0 0 0 30
+2 0 30 30

fn=(38)
0x3877c79a00 0 138 0 138 1 0 0 1
+2 0 138
+3 0 138 0 138
+2 0 138 0 138
+2 0 138 0 138 0 0 1 0 0 1
+2 0 138
+3 0 138 0 138
+1 0 138 0 138
+1 0 138
+4 0 138
+4 0 138 0 0 0 0 0 0 0 0 138
+6 0 138
+4 0 138
+6 0 138
+3 0 138
+4 0 138
+4 0 138
+4 0 138
+3 0 138 0 0 0 0 0 0 0 0 138
+6 0 138 138 0 1 1 0 1 1
+7 0 138 0 0 0 0 0 0 0 0 138 5
jcnd=16/138 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 108 108
+6 0 108
+4 0 108
+2 0 108 0 0 0 0 0 0 0 0 108
+6 0 108
+3 0 108
+4 0 108 108
+1 0 108 108
+1 0 108 108
+2 0 108 108
+2 0 108 108
+2 0 108 108
+2 0 108 108
-14 0 30
+4 0 30 30
+1 0 30 30
+1 0 30 30
+2 0 30 30
+2 0 30 30
+2 0 30 30
+2 0 30 30
+7 0 33
+7 0 33 0 0 1 0 0 1 0 0 33
+2 0 33
+3 0 33
+5 0 33
+3 0 33
+4 0 33 0 33
+4 0 33
+2 0 33
+5 0 33 33 0 0 1 0 0 1
+4 0 33
+3 0 33 0 0 0 0 0 0 0 0 33
jcnd=33/33 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 33 0 0 1 0 0 1
+3 0 33
+3 0 33
+3 0 33
+4 0 33
+3 0 33
+4 0 33 0 33
+5 0 33
+3 0 33 0 33
+4 0 33 0 33
+4 0 33 0 33
+5 0 33
+3 0 33
+3 0 33
+3 0 33
+3 0 33
+4 0 33
+4 0 33 0 0 1 0 0 1
+4 0 33 0 33
+4 0 33
+4 0 33 0 33
+5 0 33 0 33
+5 0 33
+3 0 33
+3 0 33 0 33
+5 0 33
+5 0 33
+3 0 33 0 33
+4 0 33 0 33
+4 0 33
+6 0 33 0 33
+4 0 33 0 33
+5 0 33 0 0 1 0 0 1
+3 0 33
+3 0 33
+3 0 33
jump=33 +87 0 
* 0 
+8 0 7
+3 0 7
+4 0 7
+2 0 7
+2 0 7
+3 0 7
+3 0 7
+3 0 7
+2 0 7
+2 0 7
+5 0 7
+2 0 7 7
+4 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+8 0 7
+7 0 7 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7 0 0 0 0 0 0 0 0 7
-38 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+8 0 5
+7 0 5 0 5
+4 0 5 0 5 0 0 1 0 0 1
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 45 45 0 1 0 0 1
+4 0 45
+3 0 45 0 0 0 0 0 0 0 0 45 1
jcnd=11/45 0x3877c79ef0 0 
* 0 
+6 0 34 34 0 0 1 0 0 1
+4 0 34 34
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
+6 0 34 34 0 1 1 0 1 1
+7 0 34 0 0 0 0 0 0 0 0 34
+6 0 34
+4 0 34
+7 0 34 0 0 0 0 0 0 0 0 34
+2 0 34
+3 0 34 0 0 0 0 0 0 0 0 34 5
jcnd=32/34 0x3877c79e28 0 
* 0 
+6 0 15
+3 0 15 0 15
+4 0 15 0 15
+5 0 15 0 0 0 0 0 0 0 0 15 3
jcnd=3/15 0x3877c7a090 0 
* 0 
+6 0 12
+7 0 12 0 0 0 0 0 0 0 0 12 5
jcnd=7/12 0x3877c79c50 0 
* 0 
+6 0 5 0 0 1 0 0 1
+3 0 5
+4 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5
+3 0 5
+4 0 5
+2 0 5
+2 0 5
+3 0 5
+3 0 5
+8 0 5
+3 0 5
+2 0 5
+2 0 5
+4 0 5 5 0 0 1 0 0 1
+4 0 5
+3 0 5 0 0 1 0 0 1 0 0 5 1
jcnd=5/5 0x3877c79e15 0 
* 0 
0x3877c79e15 0 5 0 5
+4 0 5 0 5
+4 0 5
+3 0 5
jump=5 0x3877c79c73 0 
* 0 
+8 0 32 32 0 1 0 0 1
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32 5
jcnd=7/32 0x3877c79ce1 0 
* 0 
+6 0 25 25
+5 0 25 0 0 0 0 0 0 0 0 25 6
jcnd=6/25 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 15 0 0 15
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 11 0 0 1 0 0 1
+7 0 11
+3 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11 0 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+2 0 11
+4 0 11
+3 0 11
+3 0 11
+2 0 11
+2 0 11
+2 0 11
+2 0 11 11 0 0 1 0 0 1
+8 0 11
+5 0 11
+5 0 11
+2 0 11 0 0 0 0 0 0 0 0 11
-2 0 9
+2 0 9 0 0 0 0 0 0 0 0 9
+2 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=12/20 +64 0 
* 0 
+2 0 8
+8 0 8
+3 0 8
+3 0 8 0 0 0 0 0 0 0 0 8
-6 0 6
+3 0 6
+3 0 6 0 0 0 0 0 0 0 0 6
+2 0 14
+2 0 14 14
+8 0 14
+2 0 14 0 0 0 0 0 0 0 0 14
jcnd=6/14 -20 0 
* 0 
+2 0 8
+2 0 8
+5 0 8
+3 0 8
+3 0 8
+2 0 8
+2 0 8
+5 0 8 0 0 0 0 0 0 0 0 8 2
jcnd=2/8 +14 0 
* 0 
+2 0 6
+2 0 6
+4 0 6
+2 0 6
+2 0 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 -8 0 
* 0 
-8 0 88
+4 0 88
+2 0 88
+2 0 88 0 0 0 0 0 0 0 0 88 18
jcnd=71/88 -8 0 
* 0 
-2 0 12 0 0 1 0 0 1
+2 0 12 0 0 0 0 0 0 0 0 12 2
jcnd=11/12 -8 0 
* 0 
+2 0 20 20 0 0 8 0 0 8
+4 0 20 0 0 1 0 0 1
+3 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=11/20 0x3877c7a1cf 0 
* 0 
+6 0 9
+2 0 9
+4 0 9
+2 0 9
+2 0 9
+2 0 9 0 9
+8 0 9
jump=9 0x3877c79f30 0 
* 0 
0x3877c7a090 0 3 0 0 1 0 0 1
+7 0 3 0 3
+6 0 3
+3 0 3 0 0 0 0 0 0 0 0 3
jcnd=3/3 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 11 11 0 1 2 0 1 2
+4 0 11 11
+4 0 11
+3 0 11 11
+4 0 11
+4 0 11
+3 0 11
+3 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11 0 0 1 0 0 1
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11 0 1 0 0 1
+8 0 11 0 11
+4 0 11 0 11
+4 0 11 0 0 0 0 0 0 0 0 11 5
jcnd=4/11 +38 0 
* 0 
+2 0 7 7 0 0 2 0 0 2
+4 0 7
+3 0 7 0 0 0 0 0 0 0 0 7
+2 0 7 7
+5 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 7
+4 0 7 7
+4 0 7 0 7
+4 0 7
+4 0 7 0 0 0 0 0 0 0 0 7
-4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 11 11
+4 0 11 11 0 1 0 0 1
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11
+4 0 11
+7 0 11 0 11 0 0 3 0 0 3
+4 0 11 0 11
+4 0 11 0 11
+4 0 11 0 11
+4 0 11 0 0 0 0 0 0 0 0 11
+2 0 11 0 11
+5 0 11
+7 0 11 0 0 0 0 0 0 0 0 11 1
jcnd=5/11 +18 0 
* 0 
+2 0 6 0 6
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 5 0 0 1 0 0 1
+7 0 5 0 5 0 0 1 0 0 1
+4 0 5
+3 0 5
+3 0 5
+4 0 5
+3 0 5
+4 0 5
+3 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5
jump=5 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+28 0 11
+4 0 11 0 0 1 0 0 1
+3 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 11
+3 0 11
jump=11 0x3877c79ae3 0 
* 0 

totals: 236425 84535 58739 221 49 48 221 49 48 9699 314 818 15
