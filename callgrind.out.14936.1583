version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1583


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2022805210 - 2023064556
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 542 0 0 1 0 0 1
+3 0 542 0 0 0 0 0 0 0 0 542
+2 0 542
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=542 0x3877c7b8b0 0 
* 0 59137 15029 7707 21 3 0 21 3 0 14243 251
* 0 542 542 0 1 1 0 1 1 0 0 0 542

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 542 0 542 1 0 0 1
+1 0 542
+5 0 542
+3 0 542 0 542
+1 0 542
+4 0 542 0 0 1 0 0 1
+3 0 542
+4 0 542
+3 0 542 0 542 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=542 0x3877c7aa50 0 
* 0 132989 20612 19946 46 35 39 46 35 39 21928 711
* 0 542 542 0 1 1 0 1 1 0 0 0 542
+5 0 542
+3 0 542 0 0 0 0 0 0 0 0 542
jcnd=542/542 +96 0 
* 0 
+96 0 542 0 0 1 0 0 1
+4 0 542 542
+1 0 542 542
+1 0 542 542

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(14) /usr/include/c++/4.8/bits/stl_construct.h
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 271 0 271 1 0 0 1
+1 * 271
+3 * 271 0 271
+4 * 271 0 271 1 0 0 1
+4 * 271 271
+1 * 271 271

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 271 0 271 1 0 0 1
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 +4 271 271
+4 * 271 271
+4 * 271
+3 * 271
+3 * 271 0 271
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=271 0x40454c -14 
* * 1626 542 813 1 0 0 1
+5 +2 271 271
+1 * 271 271

fn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
0x40326c 148 271 0 271
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 * 271 0 271
+4 +3 271 271 0 1 0 0 1
+4 * 271 271
+4 * 271
+3 * 271
+3 * 271 0 271
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=271 0x403d1a -29 
* * 4878 1626 1897 3 0 0 3
+5 +1 271 271
+1 * 271 271

fn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
0x40334a 148 271 0 271
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 * 271 0 271
+4 +3 271 271
+4 * 271 271
+4 * 271
+3 * 271
+3 * 271 0 271
cfn=(182)
calls=271 0x403dcc -29 
* * 4878 1626 1897 2 0 0 2
+5 +1 271 271
+1 * 271 271

fn=(152)
0x403d1a 122 271 0 271 1 0 0 1
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 +4 271 271
+4 * 271 271
+4 * 271
+3 * 271
+3 * 271 0 271
cfn=(154)
calls=271 0x4044f8 -14 
* * 1626 542 813 2 0 0 2
+5 +2 271 271
+1 * 271 271

fn=(184)
0x40454c 112 271 0 271 1 0 0 1
+1 * 271
+3 * 271 0 271
+4 * 271 0 271
+4 * 271 271
+1 * 271 271

fl=(15) /usr/include/c++/4.8/bits/vector.tcc
fn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258) std::vector<int, std::allocator<int> >::begin()
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=7 0x404236 167 
* * 2368 403 401 0 10 6 0 10 6 361 52 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
cfn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 14 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216) std::vector<float, std::allocator<float> >::begin()
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=7 0x403fbe 167 
* * 2934 624 569 12 6 5 12 6 5 470 44 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 5 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 132 0 132 1 0 0 1
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 +1 132 132
+4 * 132
+3 * 132 0 132
cfi=(2)
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=132 0x402d74 645 
* * 1716 792 264
+5 * 132
+3 * 132 0 132
+3 +1 132 132
+6 * 132 0 132
+3 * 132 132
+6 * 132 0 132
+3 +1 132 132
+6 * 132 0 132 1 0 0 1
+3 * 132 132
+6 * 132 0 132
+3 +2 132 0 132
+7 * 132
jump=132 +86 * 
* * 
+2 +1 8910 8910
+3 * 8910
+3 * 8910 8910
+4 * 8910
+3 * 8910
+3 * 8910 0 8910
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=8910 0x402d9a 770 
* * 98010 44550 26730
+5 * 8910 8910
+4 * 8910 8910
+5 * 8910
+4 * 8910 0 8910
+5 +1 8910 8910
+3 * 8910
+3 * 8910 8910
+4 * 8910
+3 * 8910
+3 * 8910 0 8910
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=8910 0x402dba 770 
* * 98010 44550 26730 1 0 0 1
+5 * 8910 8910
+2 * 8910
+4 * 8910 8910
+5 * 8910
+4 * 8910 0 8910
+5 -2 8910 0 8910
+4 * 8910 8910
+3 * 8910
+3 * 8910 8910
+3 * 8910 0 0 0 0 0 0 0 0 8910 133
jcnd=8778/8910 -93 +1 
* * 
-9 * 132 132 0 1 0 0 1
+3 * 132
+3 * 132 132
+3 * 132 0 0 0 0 0 0 0 0 132
jcnd=132/132 -93 +1 
* * 
+2 +4 132 132
+3 * 132
+3 * 132
+4 * 132 132 0 1 0 0 1
+5 * 132
+4 * 132
+3 * 132 0 132
+5 +1 132 132
+3 * 132
+3 * 132
+4 * 132 132
+5 * 132
+4 * 132
+3 * 132 0 132
+5 +1 132 0 132
+7 * 132
jump=132 0x4016ee * 
* * 
+2 +1 8910 8910
+3 * 8910
+3 * 8910 8910
+4 * 8910
+3 * 8910 0 0 1 0 0 1
+3 * 8910 0 8910
cfi=(2)
cfn=(146)
calls=8910 0x402dba 770 
* * 98010 44550 26730
+5 * 8910 8910
+2 * 8910
+4 * 8910 8910
+5 * 8910 0 8910
+5 +1 8910 8910
+3 * 8910
+3 * 8910 8910
+4 * 8910
+3 * 8910
+3 * 8910 0 8910
cfi=(2)
cfn=(144)
calls=8910 0x402d9a 770 
* * 98010 44550 26730
+5 * 8910 8910
+4 * 8910 8910
+5 * 8910 0 8910
+5 +1 8910 8910
+5 * 8910 8910
+5 * 8910 8910
+5 * 8910
+4 * 8910 0 8910
+5 +1 8910 8910
+5 * 8910 8910
+5 * 8910 8910
+5 * 8910
+4 * 8910 0 8910
+5 -4 8910 0 8910
+4 * 8910 8910
+3 * 8910
+3 * 8910 8910
+3 * 8910 0 0 0 0 0 0 0 0 8910 133
jcnd=8778/8910 0x401672 +1 
* * 
-9 * 132 132 0 1 0 0 1
+3 * 132
+3 * 132 132
+3 * 132 0 0 0 0 0 0 0 0 132
jcnd=132/132 0x401672 +1 
* * 
+6 +6 132 132 0 1 0 0 1
+5 * 132 132
+5 * 132 0 132
+5 +2 132 132
+3 +1 132 0 132
+3 * 132 132
+5 * 132 132
+1 * 132 132

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 132
+7 * 132
+7 * 132
+3 * 132
+3 * 132 0 132
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=132 0x4030b2 310 
* * 119060 34128 31478 65 17 16 65 17 16 7333 324 526 64
+5 * 132
+7 * 132
+7 * 132
+3 * 132
+3 * 132 0 132
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=132 0x402ff4 310 
* * 119743 34062 30943 48 8 26 48 8 26 7509 335 526
+5 * 132 0 0 1 0 0 1
+7 * 132
+7 * 132
+3 * 132
+3 * 132 0 132
cfn=(142)
calls=132 0x401585 -52 
* * 935220 413160 216084 8 0 0 8 0 0 18084 266
+5 * 132 0 132
+8 * 132 132
+6 * 132 0 132
+6 * 132
+7 * 132
+3 * 132 0 132
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=132 0x402df4 414 
* * 32842 10302 7401 33 5 0 33 5 0 3568 106 264
+5 * 132
+7 * 132
+3 * 132 0 132 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=132 0x402e74 414 
* * 34033 10766 7711 7 0 0 7 0 0 3922 19 264
+5 +2 132
+7 * 132
+7 * 132
+3 * 132
+3 * 132 0 132
cfi=(2)
cfn=(4)
calls=132 0x4030b2 310 
* * 118721 34104 31374 2 1 1 2 1 1 7306 153 526
+5 * 132
+7 * 132
+7 * 132
+3 * 132
+3 * 132 0 132
cfi=(2)
cfn=(80)
calls=132 0x402ff4 310 
* * 118731 33993 30775 0 0 2 0 0 2 7351 136 526
+5 * 132 132
+6 * 132 0 0 1 0 0 1
+7 * 132
+7 * 132 0 132
+6 * 132 132
+8 * 132
+3 * 132
+3 * 132 0 132
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=132 0x401719 -33 
* * 435468 181104 99990 4 0 0 4 0 0 9042 133
+5 * 132 0 132
+8 * 132 132
+6 * 132 0 132
+6 * 132
+7 * 132 0 0 1 0 0 1
+3 * 132 0 132
cfi=(2)
cfn=(148)
calls=132 0x402df4 414 
* * 32842 10302 7401 0 0 0 0 0 0 3568 101 264
+5 * 132
+7 * 132
+3 * 132 0 132
cfi=(2)
cfn=(178)
calls=132 0x402e74 414 
* * 34033 10766 7711 0 0 0 0 0 0 3922 14 264
+5 +2 132 132
+7 * 132
+3 * 132 0 132
cfi=(2)
cfn=(2)
calls=132 0x402d74 645 
* * 1716 792 264
+5 * 132 132
+6 * 132
+3 * 132
+3 * 132
+3 * 132 132
+7 * 132
+3 * 132 0 0 1 0 0 1
+3 * 132 0 132
cfi=(2)
cfn=(144)
calls=132 0x402d9a 770 
* * 1452 660 396
+5 * 132
+3 * 132
+7 * 132
+3 * 132
+3 * 132 0 132
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=132 0x402eda 901 
* * 19226 6727 5353 38 15 11 38 15 11 1014 61 41
+5 +1 132 132
+7 * 132
+3 * 132 0 132
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=132 0x402f54 645 
* * 1716 792 264 0 1 0 0 1
+5 * 132 132
+6 * 132
+3 * 132
+3 * 132
+3 * 132 132
+7 * 132 0 0 1 0 0 1
+3 * 132
+3 * 132 0 132
cfi=(2)
cfn=(146)
calls=132 0x402dba 770 
* * 1452 660 396
+5 * 132
+3 * 132
+7 * 132
+3 * 132
+3 * 132 0 132
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=132 0x402f7a 901 
* * 18693 6523 5188 19 18 16 19 18 16 914 69 41
+5 +1 132 132
+7 * 132
+3 * 132 0 132
cfi=(2)
cfn=(10)
calls=132 0x402f54 645 
* * 1716 792 264
+5 * 132 132
+6 * 132
+3 * 132
+3 * 132
+3 * 132 132 0 1 0 0 1
+7 * 132
+3 * 132
+3 * 132 0 132
cfi=(2)
cfn=(146)
calls=132 0x402dba 770 
* * 1452 660 396
+5 * 132 132
+2 * 132
+4 * 132 132
+8 * 132 132
+8 * 132 0 132
+8 +1 132 132
+7 * 132
+3 * 132 0 132
cfi=(2)
cfn=(2)
calls=132 0x402d74 645 
* * 1716 792 264
+5 * 132 132 0 1 0 0 1
+6 * 132
+3 * 132
+3 * 132
+3 * 132 132
+7 * 132
+3 * 132
+3 * 132 0 132
cfi=(2)
cfn=(144)
calls=132 0x402d9a 770 
* * 1452 660 396
+5 * 132 132
+4 * 132 132
+8 * 132
+4 * 132 132
+8 * 132
+3 * 132 0 132
+8 +2 132 0 132
+7 -12 132 132
+8 * 132 132
+7 * 132 0 0 0 0 0 0 0 0 132 1
jcnd=1/132 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 132
+7 * 132
+3 * 132 0 132
cfi=(2)
cfn=(2)
calls=132 0x402d74 645 
* * 1716 792 264 2 0 1 2 0 1
+5 * 132
+3 * 132 132
+7 * 132
+3 * 132 0 132
cfi=(2)
cfn=(2)
calls=132 0x402d74 645 
* * 1716 792 264 0 1 0 0 1
+5 * 132
+3 * 132 0 0 0 0 0 0 0 0 132 1
+2 * 132 0 0 1 0 0 1
+5 * 132
jump=132 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 132
+2 * 132 0 0 0 0 0 0 0 0 132
jcnd=132/132 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+5 +1 132 132
+4 * 132
+3 * 132 0 132
cfi=(2)
cfn=(2)
calls=132 0x402d74 645 
* * 1716 792 264
+5 * 132
+3 * 132 0 132
+3 +1 132 132 0 1 0 0 1
+6 * 132 0 132
+3 * 132 132
+6 * 132 0 132
+3 +2 132 0 132
+7 * 132
jump=132 +86 * 
* * 
+2 +1 8910 8910
+3 * 8910
+3 * 8910 8910
+4 * 8910
+3 * 8910
+3 * 8910 0 8910
cfi=(2)
cfn=(144)
calls=8910 0x402d9a 770 
* * 98010 44550 26730
+5 * 8910 8910
+4 * 8910 8910
+5 * 8910
+4 * 8910 0 8910
+5 +1 8910 8910
+3 * 8910
+3 * 8910 8910
+4 * 8910
+3 * 8910
+3 * 8910 0 8910
cfi=(2)
cfn=(146)
calls=8910 0x402dba 770 
* * 98010 44550 26730
+5 * 8910 8910
+2 * 8910
+4 * 8910 8910
+5 * 8910
+4 * 8910 0 8910
+5 -2 8910 0 8910
+4 * 8910 8910
+3 * 8910
+3 * 8910 8910
+3 * 8910 0 0 0 0 0 0 0 0 8910 133
jcnd=8778/8910 -93 +1 
* * 
-9 * 132 132 0 1 0 0 1
+3 * 132
+3 * 132 132
+3 * 132 0 0 0 0 0 0 0 0 132
jcnd=132/132 -93 +1 
* * 
+2 +4 132 132
+3 * 132
+3 * 132 0 0 1 0 0 1
+4 * 132 132
+5 * 132
+4 * 132
+3 * 132 0 132
+5 +1 132 132
+3 * 132
+3 * 132
+4 * 132 132
+5 * 132
+4 * 132
+3 * 132 0 132
+5 +1 132 132
+5 * 132 132
+5 * 132 132
+5 * 132 0 0 1 0 0 1
+4 * 132
+3 * 132 0 132
+5 +2 132 132
+3 +1 132 0 132
+3 * 132 132
+5 * 132 132
+1 * 132 132

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 264 0 264 1 0 0 1
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=264 0x404a28 -35 
* * 1584 528 792 1 0 1 1 0 1
+5 * 264 264
+1 * 264 264

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 264
+4 * 264
+3 * 264 0 264
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=264 0x4044cc -35 
* * 1320 528 528
+5 * 264 264
+1 * 264 264

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 264 0 264 1 0 0 1
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264 1 0 0 1
+4 +1 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=264 0x4049d4 -35 
* * 1584 528 792 1 0 0 1
+5 * 264 264
+1 * 264 264

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 264 0 264 1 0 0 1
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 264
+4 * 264
+3 * 264 0 264
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=264 0x404520 -35 
* * 1320 528 528
+5 * 264 264
+1 * 264 264

fl=(3)
fn=(222)
0x403373 215 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +1 132 132
+4 * 132 132
+4 * 132 132
+4 * 132
+3 * 132
+3 * 132 0 132
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=132 0x403df2 -87 
* * 3168 1056 1188 0 9 3 0 9 3 132 1
+5 * 132 132
+1 * 132 132

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 264 0 264 1 0 0 1
+1 * 264
+3 * 264 0 264
+4 * 264 264
+4 * 264 264
+1 * 264 264

fn=(264)
0x4036b1 215 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +1 132 132
+4 * 132 132
+4 * 132 132
+4 * 132
+3 * 132
+3 * 132 0 132
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=132 0x40406a -87 
* * 3168 1056 1188 0 8 7 0 8 7 132
+5 * 132 132
+1 * 132 132

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 264 0 264
+1 * 264
+3 * 264 0 264
+4 * 264 264
+4 * 264 264
+1 * 264 264

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+4 +1 528 528
+4 * 528 528
+1 * 528 528

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 +1 528
+4 * 528
+3 * 528 0 528 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=528 0x40500c 790 
* * 3168 1584 1056 1 0 0 1
+5 * 528 528
+3 * 528 528
+1 * 528 528

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 334 0 334
+1 * 334
+3 * 334 0 334
+4 +1 334 334
+4 * 334 334
+1 * 334 334

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+4 +1 528 528 0 1 0 0 1
+4 * 528 528
+1 * 528 528

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 334 0 334
+1 * 334
+3 * 334 0 334 0 0 1 0 0 1
+4 +1 334 334
+4 * 334 334
+1 * 334 334

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 +1 528
+4 * 528
+3 * 528 0 528
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=528 0x404ffe 790 
* * 3168 1584 1056 1 0 0 1
+5 * 528 528
+3 * 528 528
+1 * 528 528

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 264 0 264
+1 * 264
+3 * 264 0 264
+4 * 264 0 264
+4 * 264 264
+4 * 264 264
+1 * 264 264

fl=(5)
fn=(28)
0x404992 113 285 0 285 1 0 0 1
+1 * 285
+3 * 285 0 285
+4 +1 285
+10 * 285 285
+1 * 285 285

fn=(176)
0x4044cc 86 264 0 264
+1 * 264
+3 * 264 0 264
+4 * 264 264
+1 * 264 264

fn=(224)
0x403df2 129 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +1 132 132
+4 * 132
+3 * 132
+5 * 132 0 132
cfi=(16)
cfn=(226)
calls=132 0x402d61 -20 
* * 924 396 396
+5 * 132
+3 * 132 0 0 0 0 0 0 0 0 132 1
+2 * 132 132
+4 * 132 132 0 0 9 0 0 9
+2 * 132 0 132 0 0 3 0 0 3
+2 * 132 132
+1 * 132 132

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 271 0 271
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 * 271 0 271
+4 +1 271 271
+4 * 271
+3 * 271 0 271
cob=(5)
cfi=(8)
cfn=(164)
calls=271 0x387e4bb2f0 0 
* * 29445 7313 3542 23 4 0 23 4 0 7034 211 271
* * 271 271 0 1 1 0 1 1 0 0 0 271
+5 * 271 271
+1 * 271 271

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 271 0 271
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 * 271 0 271
+4 +1 271 271
+4 * 271
+3 * 271 0 271
cob=(5)
cfi=(8)
cfn=(164)
calls=271 0x387e4bb2f0 0 
* * 31860 8258 4165 0 0 0 0 0 0 7751 40 271
* * 271 271 0 0 0 0 0 0 0 0 0 271
+5 * 271 271
+1 * 271 271

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 271 0 271 1 0 0 1
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 * 271 0 271
+4 +2 271 271
+4 * 271
+3 * 271 0 271
cfn=(102)
calls=271 0x4048de +12 
* * 1626 542 542 1 0 0 1
+5 * 271 271
+4 * 271 0 0 1 0 0 1
+3 * 271
+2 * 271 0 0 0 0 0 0 0 0 271
jcnd=271/271 +7 +3 
* * 
+7 +3 271 271
+4 * 271
+4 * 271
+3 * 271 0 271
cob=(5)
cfi=(8)
cfn=(32)
calls=271 0x387e4bd0b0 0 
* * 71460 11412 10303 33 13 26 33 13 26 11400 356 271
* * 271 271 0 0 0 0 0 0 0 0 0 271
+5 +1 271 271
+1 * 271 271

fn=(18)
0x404a28 81 264 0 264 1 0 0 1
+1 * 264
+3 * 264 0 264 0 0 1 0 0 1
+4 * 264 0 264
+4 * 264 264
+1 * 264 264

fn=(92)
0x4049d4 81 264 0 264 1 0 0 1
+1 * 264
+3 * 264 0 264
+4 * 264 0 264
+4 * 264 264
+1 * 264 264

fn=(196)
0x404520 86 264 0 264
+1 * 264
+3 * 264 0 264
+4 * 264 264
+1 * 264 264

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 271 0 271 1 0 0 1
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 * 271 0 271 1 0 0 1
+4 +2 271 271
+4 * 271
+3 * 271 0 271
cfn=(28)
calls=271 0x404992 +12 
* * 1626 542 542 1 0 0 1
+5 * 271 271
+4 * 271
+3 * 271
+2 * 271 0 0 0 0 0 0 0 0 271
jcnd=271/271 +7 +3 
* * 
+7 +3 271 271
+4 * 271
+4 * 271
+3 * 271 0 271
cob=(5)
cfi=(8)
cfn=(32)
calls=271 0x387e4bd0b0 0 
* * 70201 11368 11269 17 23 14 17 23 14 11070 355 271
* * 271 271 0 1 1 0 1 1 0 0 0 271
+5 +1 271 271
+1 * 271 271

fn=(102)
0x4048de 113 285 0 285 1 0 0 1
+1 * 285
+3 * 285 0 285
+4 +1 285
+10 * 285 285
+1 * 285 285

fn=(266)
0x40406a 129 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 * 132 0 132
+4 +1 132 132
+4 * 132
+3 * 132
+5 * 132 0 132
cfi=(16)
cfn=(226)
calls=132 0x402d61 -20 
* * 924 396 396
+5 * 132
+3 * 132 0 0 0 0 0 0 0 0 132
+2 * 132 132
+4 * 132 132 0 0 8 0 0 8
+2 * 132 0 132 0 0 7 0 0 7
+2 * 132 132
+1 * 132 132

fl=(11)
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=264 0x404484 107 
* * 98110 31040 29460 25 3 4 25 3 4 3388 174 524 64
+5 * 264 264
+1 * 264 264

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +2 264 264 0 1 0 0 1
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=264 0x404a36 450 
* * 90718 28400 26820 24 3 4 24 3 4 3388 174 524 64
+5 * 264 264
+1 * 264 264

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=264 0x40439c 107 
* * 98110 31040 29460 7 1 7 7 1 7 3388 159 524
+5 * 264 264
+1 * 264 264

fn=(116)
0x40439c 107 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +10 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=264 0x4047d7 -26 
* * 94414 29720 28140 7 1 7 7 1 7 3388 159 524
+5 +1 264 264
+1 * 264 264

fn=(118)
0x4047d7 91 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=264 0x4049e2 450 
* * 90718 28400 26820 7 1 7 7 1 7 3388 159 524
+5 * 264 264
+1 * 264 264

fn=(268)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +10 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(52)
calls=264 0x404829 -26 
* * 94414 29720 28140 25 3 4 25 3 4 3388 174 524 64
+5 +1 264 264
+1 * 264 264

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fl=(2)
fn=(2)
0x402d74 645 1084 0 1084 1 0 0 1
+1 * 1084
+3 * 1084 0 1084 0 0 1 0 0 1
+4 +1 1084 1084
+4 * 1084 1084 0 1 1 0 1 1
+4 * 1084
+3 * 1084 1084
+4 * 1084 1084
+3 * 1084
+3 * 1084
+3 * 1084
+4 * 1084 1084
+1 * 1084 1084

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(22)
calls=264 0x404236 -14 
* * 79215 14488 14120 23 14 8 23 14 8 11251 303 528
+5 * 264 264
+4 * 264 0 264
+3 +1 264 264
+4 * 264 264 0 1 0 0 1
+3 * 264 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+3 * 264 264
+4 * 264
+4 * 264
+3 * 264 264
+4 * 264 0 264
+4 +1 264 264
+1 * 264 264

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264 264 0 1 0 0 1
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(96)
calls=264 0x403fbe -14 
* * 79908 14311 12986 26 7 21 26 7 21 11472 312 528
+5 * 264 264
+4 * 264 0 264
+3 +1 264 264
+4 * 264 264
+3 * 264 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+3 * 264 264
+4 * 264
+4 * 264
+3 * 264 264
+4 * 264 0 264
+4 +1 264 264
+1 * 264 264

fn=(244)
0x402f7a 901 132 0 132
+1 * 132
+3 * 132 0 0 1 0 0 1
+4 * 132 0 132
+4 * 132 0 132
+4 +2 132 132
+4 * 132 132
+4 * 132 132
+4 * 132 132
+4 * 132
+3 * 132 0 0 0 0 0 0 0 0 132
jcnd=7/132 +51 +10 
* * 
+2 +3 125 125
+4 * 125 125
+4 * 125 125
+4 -1 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfi=(3)
cfn=(264)
calls=125 0x4036b1 215 
* * 4750 1625 1750 0 8 4 0 8 4 125
+5 +2 125 125
+4 * 125 125
+4 * 125
+4 * 125 125
+4 * 125 0 125
+4 * 125
jump=125 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(250)
calls=7 0x4036de 318 
* * 10378 3147 2729 18 10 12 18 10 12 657 69 41
+5 +2 132 132
+1 * 132 132

fn=(258)
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40)
0x40333c 113 549 0 549 1 0 0 1
+1 * 549
+3 * 549 0 549 1 0 0 1
+4 +1 549 549
+4 * 549 549
+1 * 549 549

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+3 * 264 0 264
+4 * 264
+4 * 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=264 0x404380 726 
* * 2640 1320 1056
+5 * 264 264
+4 * 264 264
+1 * 264 264

fn=(148)
0x402df4 414 264 0 264
+1 * 264
+3 * 264 0 264
+1 * 264
+4 * 264 0 264 1 0 0 1
+4 +2 264 264
+4 * 264
+3 * 264 0 264
cfn=(106)
calls=264 0x40325e 113 
* * 1584 792 528
+5 * 264
+3 * 264 264
+4 * 264 264
+4 * 264 264
+4 * 264 264
+3 -1 264
+3 * 264
+3 * 264 0 264
cfi=(14)
cfn=(150)
calls=264 0x40326c 148 
* * 8184 2640 3168 4 0 0 4
+5 +1 264 264
+4 * 264
+3 * 264 0 264
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=264 0x4031ec 159 
* * 49580 14796 9522 27 5 0 27 5 0 7136 207 528
+5 * 264
jump=264 +28 * 
* * 
+28 * 264 0 0 1 0 0 1
+4 * 264 264
+1 * 264 264
+1 * 264 264

fn=(158)
0x403ce6 171 271 0 271 1 0 0 1
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 * 271 0 271
+4 +2 271 271
+5 * 271 0 0 0 0 0 0 0 0 271
+2 +1 271 271
+4 * 271 271
+4 * 271 271
+4 * 271
+3 * 271
+3 * 271 0 271
cfi=(5)
cfn=(160)
calls=271 0x4044d6 -65 
* * 32697 8397 4897 24 5 0 24 5 0 7034 211 542
+5 +1 271 271
+1 * 271 271

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 264 0 264
+1 * 264
+3 * 264 0 264
+1 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=264 0x4043ca -45 
* * 9504 3432 3696 4 0 4 4 0 4
+5 +1 264 264 0 1 0 0 1
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(20)
calls=264 0x404412 +43 
* * 85815 17656 15968 24 14 8 24 14 8 11251 303 528
+5 * 264
jump=264 +28 * 
* * 
+28 * 264
+4 * 264 264
+1 * 264 264
+1 * 264 264

fn=(14)
0x4043ca 90 264 0 264 1 0 0 1
+1 * 264
+3 * 264
+4 * 264 0 264 0 0 1 0 0 1
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(4)
cfn=(16)
calls=264 0x404804 +24 
* * 4752 1584 1848 2 0 1 2 0 1
+5 * 264 264
+4 * 264 0 264 0 0 2 0 0 2
+7 * 264 264
+4 * 264 0 264 1 0 0 1
+8 * 264 264
+4 * 264 0 264
+8 +1 264 264
+1 * 264 264

fn=(80)
0x402ff4 310 264 0 264 1 0 0 1
+1 * 264
+3 * 264 0 264
+2 * 264 0 264
+2 * 264 0 264
+1 * 264 0 0 1 0 0 1
+4 * 264 0 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264
+3 * 264 0 264
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=264 0x4039fc 117 
* * 1584 792 528 2 0 0 2
+5 * 264
+3 * 264 0 264
cfi=(3)
cfn=(84)
calls=264 0x4039ed -88 
* * 1584 792 528
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(2)
calls=264 0x402d74 645 
* * 3432 1584 528
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264
+3 * 264
+3 * 264 0 264 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=264 0x403a0a 134 
* * 101820 22759 20378 33 7 21 33 7 21 11472 312 528
+5 +4 264 264
+4 * 264
+3 * 264 0 264
cfn=(106)
calls=264 0x40325e 113 
* * 1584 792 528 1 0 0 1
+5 * 264
+3 * 264 264
+4 * 264 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=264 0x403a98 565 
* * 6600 2640 2112 2 0 0 2
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(112)
calls=264 0x403a68 547 
* * 6600 2640 2112
+5 * 264
+3 * 264
+3 * 264
+3 * 264
+3 * 264 0 264
cfi=(11)
cfn=(114)
calls=264 0x403ac9 -60 
* * 102070 32360 31044 7 1 7 7 1 7 3388 159 524
+5 -3 264 264
+4 * 264 0 264
+4 * 264
jump=264 +28 +4 
* * 
+28 +4 264
+4 * 264 264
+1 * 264 264
+2 * 264 264
+2 * 264 264
+1 * 264 264

fn=(188)
0x403d98 171 271 0 271 1 0 0 1
+1 * 271
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 * 271 0 271
+4 +2 271 271
+5 * 271 0 0 0 0 0 0 0 0 271 7
+2 +1 271 271
+4 * 271 271
+4 * 271 271
+4 * 271
+3 * 271
+3 * 271 0 271
cfi=(5)
cfn=(190)
calls=271 0x40452a -65 
* * 35112 9342 5520 0 0 0 0 0 0 7751 40 542
+5 +1 271 271
+1 * 271 271

fn=(22)
0x404236 167 271 0 271 1 0 0 1
+1 * 271
+3 * 271
+4 * 271 0 271 1 0 0 1
+4 * 271 0 271
+4 0 271 271
+5 0 271 0 0 0 0 0 0 0 0 271
+2 0 271 271
+4 0 271 271
+4 0 271
+5 0 271
+3 0 271
+3 0 271 0 271
fi=(6) ???
cfi=(5)
cfn=(26)
calls=271 0x404730 99 
* 0 77247 13536 13437 21 24 14 21 24 14 11341 355 542
+5 0 271
fi=(6)
jump=271 +7 0 
* 0 
+7 0 271 271
+1 0 271 271

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 264 0 264 1 0 0 1
+1 * 264
+3 * 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+4 * 264 0 264
+4 * 264
+4 * 264 0 0 1 0 0 1
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=264 0x404468 726 
* * 2640 1320 1056 1 0 0 1
+5 * 264 264
+4 * 264 264
+1 * 264 264

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+3 * 264 0 264
+4 * 264
+4 * 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(10)
cfn=(44)
calls=264 0x404468 726 
* * 2640 1320 1056
+5 * 264 264
+4 * 264 264
+1 * 264 264

fn=(86)
0x403a0a 134 264 0 264
+1 * 264
+3 * 264 0 264
+1 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=264 0x4042e2 -45 
* * 9504 3432 3696 5 0 0 5
+5 +1 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264 1 0 0 1
cfn=(94)
calls=264 0x40432a +43 
* * 86508 17479 14834 27 7 21 27 7 21 11472 312 528
+5 * 264
jump=264 +28 * 
* * 
+28 * 264
+4 * 264 264
+1 * 264 264
+1 * 264 264

fn=(88)
0x4042e2 90 264 0 264 1 0 0 1
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264 1 0 0 1
cfi=(4)
cfn=(90)
calls=264 0x4047b2 +24 
* * 4752 1584 1848 3 0 0 3
+5 * 264 264
+4 * 264 0 264
+7 * 264 264
+4 * 264 0 264
+8 * 264 264
+4 * 264 0 264
+8 +1 264 264
+1 * 264 264

fn=(156)
0x4031ec 159 264 0 264 1 0 0 1
+1 * 264
+3 * 264 0 264
+1 * 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264 264 0 1 0 0 1
+4 * 264
+3 * 264 264
+4 * 264 264
+3 * 264
+3 * 264
+3 * 264
+4 * 264
+3 * 264 264
+4 * 264 264
+3 -1 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(158)
calls=264 0x403ce6 +11 
* * 36116 9780 6090 24 5 0 24 5 0 7136 207 528
+5 +1 264 264
+4 * 264
+3 * 264 0 264
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=264 0x4031b8 -82 
* * 6072 2112 2112 1 0 0 1
+5 * 264
jump=264 +28 * 
* * 
+28 * 264
+4 * 264 264
+1 * 264 264
+1 * 264 264

fn=(172)
0x4031b8 79 264 0 264 1 0 0 1
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 264
+4 * 264
+3 * 264 0 264
cfi=(4)
cfn=(174)
calls=264 0x403ccc +42 
* * 3696 1320 1320
+5 * 264 264
+1 * 264 264

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208)
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10)
0x402f54 645 556 0 556 1 0 0 1
+1 * 556
+3 * 556 0 556
+4 +1 556 556
+4 * 556 556 0 0 2 0 0 2
+4 * 556
+3 * 556 556
+4 * 556 556
+3 * 556
+3 * 556
+3 * 556
+4 * 556 556
+1 * 556 556

fn=(106)
0x40325e 113 549 0 549 1 0 0 1
+1 * 549
+3 * 549 0 549
+4 +1 549 549
+4 * 549 549
+1 * 549 549

fn=(216)
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252)
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 278 0 278 1 0 0 1
+1 * 278
+3 * 278 0 278 0 0 1 0 0 1
+4 +1 278 278
+4 * 278 278
+1 * 278 278

fn=(82)
0x4039fc 117 278 0 278 1 0 0 1
+1 * 278
+3 * 278 0 278 1 0 0 1
+4 +1 278 278
+4 * 278 278
+1 * 278 278

fn=(200)
0x402eda 901 132 0 132
+1 * 132
+3 * 132
+4 * 132 0 132
+4 * 132 0 132
+4 +2 132 132
+4 * 132 132
+4 * 132 132
+4 * 132 132
+4 * 132
+3 * 132 0 0 0 0 0 0 0 0 132 7
jcnd=7/132 +51 +10 
* * 
+2 +3 125 125
+4 * 125 125
+4 * 125 125
+4 -1 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfi=(3)
cfn=(222)
calls=125 0x403373 215 
* * 4750 1625 1750 0 8 2 0 8 2 125 1
+5 +2 125 125
+4 * 125 125
+4 * 125
+4 * 125 125
+4 * 125 0 125
+4 * 125
jump=125 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206)
calls=7 0x4033a0 318 
* * 10911 3351 2894 35 7 9 35 7 9 757 53 41
+5 +2 132 132
+1 * 132 132

fn=(4)
0x4030b2 310 264 0 264 1 0 0 1
+1 * 264
+3 * 264 0 264
+2 * 264 0 264
+2 * 264 0 264
+1 * 264
+4 * 264 0 264 1 0 0 1
+4 * 264 0 264
+4 +2 264 264
+4 * 264
+3 * 264 0 264
cfn=(6)
calls=264 0x403b08 117 
* * 1584 792 528 1 0 1 1 0 1
+5 * 264
+3 * 264 0 264
cfi=(3)
cfn=(8)
calls=264 0x403afa -88 
* * 1584 792 528 1 0 0 1
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(10)
calls=264 0x402f54 645 
* * 3432 1584 528 1 1 0 1 1
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264
+3 * 264
+3 * 264 0 264
cfn=(12)
calls=264 0x403b16 134 
* * 101127 22936 21512 29 14 12 29 14 12 11251 303 528
+5 +4 264 264 0 1 0 0 1
+4 * 264
+3 * 264 0 264
cfn=(40)
calls=264 0x40333c 113 
* * 1584 792 528 2 0 0 2
+5 * 264
+3 * 264 264
+4 * 264 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(42)
calls=264 0x403ba4 565 
* * 6600 2640 2112 3 0 0 3
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(46)
calls=264 0x403b74 547 
* * 6600 2640 2112
+5 * 264
+3 * 264
+3 * 264
+3 * 264
+3 * 264 0 264 1 0 0 1
cfi=(11)
cfn=(48)
calls=264 0x403bd5 -60 
* * 102070 32360 31044 26 3 4 26 3 4 3388 174 524 64
+5 -3 264 264
+4 * 264 0 264
+4 * 264
jump=264 +28 +4 
* * 
+28 +4 264
+4 * 264 264
+1 * 264 264
+2 * 264 264
+2 * 264 264
+1 * 264 264

fn=(108)
0x403a98 565 264 0 264 1 0 0 1
+1 * 264
+3 * 264
+4 * 264 0 264
+4 +1 264 264
+4 * 264 264
+4 * 264 0 264
+4 * 264
+4 * 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfi=(10)
cfn=(110)
calls=264 0x404380 726 
* * 2640 1320 1056 1 0 0 1
+5 * 264 264
+4 * 264 264
+1 * 264 264

fn=(178)
0x402e74 414 264 0 264
+1 * 264
+3 * 264 0 264
+1 * 264
+4 * 264 0 264 1 0 0 1
+4 +2 264 264
+4 * 264
+3 * 264 0 264
cfn=(40)
calls=264 0x40333c 113 
* * 1584 792 528
+5 * 264
+3 * 264 264
+4 * 264 264
+4 * 264 264
+4 * 264 264
+3 -1 264
+3 * 264
+3 * 264 0 264
cfi=(14)
cfn=(180)
calls=264 0x40334a 148 
* * 8184 2640 3168 2 0 0 2
+5 +1 264 264
+4 * 264
+3 * 264 0 264
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=264 0x4032ca 159 
* * 51962 15724 10142 3 0 0 3 0 0 7844 33 528
+5 * 264
jump=264 +28 * 
* * 
+28 * 264 0 0 1 0 0 1
+4 * 264 264
+1 * 264 264
+1 * 264 264

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 271 0 271 1 0 0 1
+1 * 271 0 0 1 0 0 1
+3 * 271
+4 * 271 0 271
+4 * 271 0 271
+4 0 271 271
+5 0 271 0 0 0 0 0 0 0 0 271
+2 0 271 271
+4 0 271 271
+4 0 271
+5 0 271
+3 0 271
+3 0 271 0 271
fi=(6)
cfi=(5)
cfn=(100)
calls=271 0x40461a 99 
* 0 78506 13580 12471 36 13 26 36 13 26 11671 356 542
+5 0 271
fi=(6)
jump=271 +7 0 
* 0 
+7 0 271 271
+1 0 271 271

fn=(144)
0x402d9a 770 26994 0 26994
+1 * 26994
+3 * 26994 0 26994
+4 * 26994 0 26994
+4 +1 26994 26994
+4 * 26994 26994
+3 * 26994 26994
+4 * 26994
+4 * 26994
+3 * 26994 26994
+1 * 26994 26994

fn=(146)
0x402dba 770 26994 0 26994
+1 * 26994
+3 * 26994 0 26994 1 0 0 1
+4 * 26994 0 26994
+4 +1 26994 26994
+4 * 26994 26994
+3 * 26994 26994
+4 * 26994
+4 * 26994
+3 * 26994 26994
+1 * 26994 26994

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 264
+4 * 264
+3 * 264 0 264
cfi=(4)
cfn=(194)
calls=264 0x403d7e +42 
* * 3696 1320 1320 1 0 0 1
+5 * 264 264
+1 * 264 264

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 264 0 264 1 0 0 1
+1 * 264
+3 * 264 0 264
+1 * 264
+4 * 264 0 264
+4 +2 264 264
+4 * 264 264
+4 * 264
+3 * 264 264
+4 * 264 264
+3 * 264
+3 * 264
+3 * 264
+4 * 264
+3 * 264 264
+4 * 264 264
+3 -1 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(188)
calls=264 0x403d98 +11 
* * 38498 10708 6710 1 0 0 1 0 0 7844 33 528
+5 +1 264 264
+4 * 264
+3 * 264 0 264
cfn=(192)
calls=264 0x403296 -82 
* * 6072 2112 2112 1 0 0 1
+5 * 264
jump=264 +28 * 
* * 
+28 * 264
+4 * 264 264
+1 * 264 264
+1 * 264 264

fl=(12)
fn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404c52 424 264 0 264
+1 * 264
+3 * 264 0 264
+2 * 264 0 264
+1 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +4 264 264
+4 * 264
+3 * 264 0 264
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=264 0x40492d 277 
* * 3960 1584 1320 2 0 0 2
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=264 0x404d9d 277 
* * 6600 2376 2112 2 0 1 2 0 1
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(66)
calls=264 0x404d9d 277 
* * 6600 2376 2112
+5 * 264
+3 * 264
+3 * 264
+3 * 264 0 264
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=264 0x404db7 -49 
* * 52438 15464 13884 15 3 3 15 3 3 3388 174 524 64
+5 +1 264
+4 * 264 264
+1 * 264 264
+2 * 264 264
+1 * 264 264

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 306 0 306 1 0 0 1
+1 * 306
+3 * 306
+4 * 306 0 306
+4 +1 306 306
+4 * 306
+3 * 306 0 306 1 0 0 1
cfi=(13)
cfn=(64)
calls=306 -33 -66 
* * 1836 918 612
+5 * 306 306
+1 * 306 306

fn=(66)
0x404d9d 277 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528
+3 * 528 0 528
cfi=(13)
cfn=(68)
calls=528 0x404f1a -58 
* * 8448 3168 2640 2 0 1 2 0 1
+5 * 528 528
+1 * 528 528

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 264 0 264
+1 * 264
+3 * 264 0 264
+1 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +10 264 264
+4 * 264
+3 * 264 0 264
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=264 0x404bc6 288 
* * 3960 1584 1320 3 0 0 3
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(122)
calls=264 0x404bc6 288 
* * 3960 1584 1320
+5 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=264 0x404be0 -36 
* * 76990 23648 22068 4 1 7 4 1 7 3388 159 524
+5 +1 264
+4 * 264 264
+1 * 264 264
+1 * 264 264

fn=(128)
0x404878 277 306 0 306
+1 * 306
+3 * 306
+4 * 306 0 306 1 0 0 1
+4 +1 306 306
+4 * 306
+3 * 306 0 306
cfi=(13)
cfn=(130)
calls=306 -33 -66 
* * 1836 918 612 0 0 1 0 0 1
+5 * 306 306
+1 * 306 306

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 528 0 528
+1 * 528
+3 * 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528
+3 * 528 0 528
cfi=(13)
cfn=(134)
calls=528 0x404e98 -58 
* * 8448 3168 2640 2 0 0 2
+5 * 528 528
+1 * 528 528

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +8 264 0 264
+4 +3 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=264 0x404eb5 -22 
* * 48478 14144 12300 1 1 7 1 1 7 3388 159 524
+5 +1 264 264
+1 * 264 264

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528
+4 +1 528 528
+4 * 528
+3 * 528 0 528
cfi=(13)
cfn=(124)
calls=528 0x404d36 -77 
* * 3168 1584 1056 2 0 0 2
+5 * 528 528
+1 * 528 528

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 528 0 528 1 0 0 1
+1 * 528
+3 * 528
+4 * 528 0 528 1 0 0 1
+4 +1 528 528
+4 * 528
+3 * 528 0 528
cfi=(13)
cfn=(58)
calls=528 0x404d8f -77 
* * 3168 1584 1056 1 0 0 1
+5 * 528 528
+1 * 528 528

fn=(74)
0x404f37 368 278 0 278
+1 * 278
+3 * 278
+4 * 278 0 278 1 0 0 1
+4 * 278 0 278
+4 * 278 0 278
+4 +2 278 278
+4 * 278 278
+4 * 278
+3 * 278
+3 * 278
+4 * 278 0 278
+4 +1 278 278
+5 * 278 0 0 0 0 0 0 0 0 278
jcnd=7/278 +33 +2 
* * 
+2 +1 271 271
+4 * 271
+8 * 271 271
+4 * 271 271
+4 * 271
+3 * 271 0 0 1 0 0 1
+3 * 271 0 271 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=271 0x3877c83840 0 
* * 41818 11421 10884 11 2 5 11 2 5 3186 177 266 64
* * 271 271 0 1 1 0 1 1 0 0 0 271
+5 +1 278 278
+4 * 278
+8 * 278 278
+4 * 278
+3 +1 278 278
+1 * 278 278

fn=(140)
0x404eb5 368 278 0 278
+1 * 278
+3 * 278
+4 * 278 0 278 1 0 0 1
+4 * 278 0 278
+4 * 278 0 278 0 0 1 0 0 1
+4 +2 278 278
+4 * 278 278
+4 * 278
+3 * 278
+3 * 278
+4 * 278 0 278
+4 +1 278 278
+5 * 278 0 0 0 0 0 0 0 0 278
jcnd=7/278 +33 +2 
* * 
+2 +1 271 271
+4 * 271
+8 * 271 271
+4 * 271 271
+4 * 271
+3 * 271
+3 * 271 0 271
cob=(2)
cfi=(9)
cfn=(78)
calls=271 0x3877c83840 0 
* * 41818 11421 10884 0 1 8 0 1 8 3186 164 266
* * 271 271 0 0 0 0 0 0 0 0 0 271
+5 +1 278 278
+4 * 278
+8 * 278 278
+4 * 278
+3 +1 278 278
+1 * 278 278

fn=(72)
0x404db7 379 264 0 264
+1 * 264
+3 * 264
+4 * 264 0 264 1 0 0 1
+4 * 264 0 264
+4 * 264 0 264
+4 +8 264 0 264
+4 +3 264 264
+4 * 264 264
+4 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(74)
calls=264 0x404f37 -22 
* * 48478 14144 12300 14 3 3 14 3 3 3388 174 524 64
+5 +1 264 264
+1 * 264 264

fn=(126)
0x404be0 424 264 0 264
+1 * 264
+3 * 264 0 264
+2 * 264 0 264
+1 * 264
+4 * 264 0 264
+4 * 264 0 264
+4 * 264 0 264
+4 +4 264 264
+4 * 264
+3 * 264 0 264
cfn=(128)
calls=264 0x404878 277 
* * 3960 1584 1320 1 0 0 1
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(132)
calls=264 0x404d44 277 
* * 6600 2376 2112 2 0 0 2
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(132)
calls=264 0x404d44 277 
* * 6600 2376 2112
+5 * 264
+3 * 264
+3 * 264
+3 * 264 0 264
cfn=(138)
calls=264 0x404d5e -49 
* * 52438 15464 13884 1 1 7 1 1 7 3388 159 524
+5 +1 264
+4 * 264 264
+1 * 264 264
+2 * 264 264
+1 * 264 264

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 264 0 264
+1 * 264
+3 * 264 0 264
+1 * 264
+4 * 264 0 264 1 0 0 1
+4 * 264 0 264
+4 * 264 0 264
+4 +10 264 264
+4 * 264
+3 * 264 0 264
cfn=(56)
calls=264 0x404c38 288 
* * 3960 1584 1320 3 0 0 3
+5 * 264
+3 * 264 264
+4 * 264
+3 * 264 0 264
cfn=(56)
calls=264 0x404c38 288 
* * 3960 1584 1320
+5 * 264 264
+4 * 264
+3 * 264
+3 * 264 0 264
cfn=(60)
calls=264 0x404c52 -36 
* * 76990 23648 22068 20 3 4 20 3 4 3388 174 524 64
+5 +1 264
+4 * 264 264
+1 * 264 264
+1 * 264 264

fl=(10)
fn=(218)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+4 +1 528 528
+4 * 528 528
+1 * 528 528

fn=(110)
0x404380 726 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+4 * 528 0 528
+4 * 528 528
+4 * 528 528
+3 * 528 528
+4 * 528 0 528
+3 * 528 528
+1 * 528 528

fn=(260)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 528 0 528 1 0 0 1
+1 * 528
+3 * 528 0 528
+4 +1 528 528
+4 * 528 528
+1 * 528 528

fn=(44)
0x404468 726 528 0 528
+1 * 528
+3 * 528 0 528
+4 * 528 0 528
+4 * 528 528
+4 * 528 528
+3 * 528 528
+4 * 528 0 528 1 0 0 1
+3 * 528 528
+1 * 528 528

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(262)
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 542 0 542 1 0 0 1
+2 0 542 0 542
+2 0 542 0 542
+2 0 542
+3 0 542 0 542
+2 0 542 0 542
+1 0 542 0 542
+1 0 542
+3 0 542
+4 0 542 542
+4 0 542 0 542
+4 0 542
+3 0 542
+4 0 542
+3 0 542
+3 0 542
+3 0 542 0 0 1 0 0 1 0 0 542
+6 0 542
+4 0 542 0 0 0 0 0 0 0 0 542
+6 0 542
+4 0 542 0 0 0 0 0 0 0 0 542
+6 0 542 542
+7 0 542 0 0 0 0 0 0 0 0 542 4
jcnd=418/542 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 418
+2 0 418 0 0 0 0 0 0 0 0 418
+6 0 418 418 0 1 0 0 1
+4 0 418
+3 0 418
+2 0 418 0 0 0 0 0 0 0 0 418
jcnd=418/418 0x3877c78a40 0 
* 0 
+6 0 418 418
+4 0 418
+3 0 418 0 0 0 0 0 0 0 0 418
+6 0 418 418
+5 0 418
+4 0 418 0 0 0 0 0 0 0 0 418
jcnd=418/418 0x3877c7907c 0 
* 0 
+6 0 418 418
+5 0 418
+4 0 418 0 0 0 0 0 0 0 0 418
+6 0 418
+4 0 418 0 0 1 0 0 1 0 0 418
+6 0 418
+4 0 418 418
+7 0 418 0 0 0 0 0 0 0 0 418
+6 0 418 418
+6 0 418
+2 0 418 0 0 0 0 0 0 0 0 418
+6 0 418 418
+4 0 418 0 0 0 0 0 0 0 0 418 5
jcnd=414/418 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 418 418 0 1 0 0 1
+4 0 418 0 0 0 0 0 0 0 0 418 126
jcnd=126/418 0x3877c78bf0 0 
* 0 
+6 0 292 292
+6 0 292 0 0 1 0 0 1 0 0 292 44
jcnd=29/292 0x3877c78a78 0 
* 0 
+6 0 263 263
+5 0 263 263
+5 0 263 263
+4 0 263 0 0 0 0 0 0 0 0 263
+6 0 263 263
+4 0 263 0 0 0 0 0 0 0 0 263
+6 0 263 263
+9 0 263 0 263
+4 0 263 0 263
+4 0 263 0 0 0 0 0 0 0 0 263 4
jcnd=255/263 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 263
+3 0 263
+4 0 263 263
+4 0 263 263
+4 0 263 0 0 0 0 0 0 0 0 263
-12 0 29
+4 0 29 29
+4 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 292
+7 0 292 0 292
+4 0 292 0 292
+4 0 292 0 0 0 0 0 0 0 0 292 62
jcnd=223/292 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 223 0 223
+4 0 223
+3 0 223 0 223
+4 0 223
+4 0 223 0 223
+4 0 223 0 223
+4 0 223
+7 0 223 0 0 0 0 0 0 0 0 223
jcnd=223/223 0x3877c78b20 0 
* 0 
-7 0 126
+7 0 126 0 0 0 0 0 0 0 0 126
jcnd=126/126 0x3877c78b20 0 
* 0 
0x3877c78a40 0 418 0 0 1 0 0 1
+5 0 418 418
+4 0 418 418
+7 0 418 0 0 0 0 0 0 0 0 418
jcnd=418/418 +16 0 
* 0 
+16 0 418 0 418
+5 0 418 0 0 0 0 0 0 0 0 418
+6 0 418
+3 0 418
jump=418 0x3877c7878f 0 
* 0 
+10 0 29 0 29
+6 0 29 0 0 1 0 0 1
jump=29 0x3877c78885 0 
* 0 
0x3877c78b20 0 418 418 0 1 0 0 1
+4 0 418
+2 0 418 0 0 0 0 0 0 0 0 418
+6 0 418 418
+7 0 418 0 0 0 0 0 0 0 0 418
jcnd=418/418 +15 0 
* 0 
+15 0 418 0 418 1 0 0 1
+4 0 418 0 0 0 0 0 0 0 0 418 2
+6 0 418
+4 0 418 418
+1 0 418 418
+1 0 418 418
+2 0 418 418
+2 0 418 418
+2 0 418 418
+2 0 418 418
0x3877c78bf0 0 126 0 0 1 0 0 1
+3 0 126 0 126
+4 0 126
+3 0 126
+4 0 126 0 126 1 0 0 1
+4 0 126
jump=126 0x3877c788cf 0 
* 0 
0x3877c7907c 0 418 418 0 1 1 0 1 1
+4 0 418 0 0 1 0 0 1
+7 0 418
+4 0 418
+3 0 418
+3 0 418 0 0 0 0 0 0 0 0 418
jcnd=418/418 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 532 0 0 1 0 0 1
+7 0 532
+3 0 532
+3 0 532 532 0 0 1 0 0 1
+4 0 532
+4 0 532 0 0 0 0 0 0 0 0 0 0 532 64
jump=64 0x3877c89be8 0 
* 0 
jump=72 0x3877c89bd0 0 
* 0 
jump=64 0x3877c89bb8 0 
* 0 
jump=64 +11 0 
* 0 
jump=64 0x3877c89c48 0 
* 0 
jump=66 0x3877c89c30 0 
* 0 
jump=64 0x3877c89c18 0 
* 0 
jump=74 0x3877c89c00 0 
* 0 
+11 0 64 64
+3 0 64
+4 0 64
+4 0 64 64
+4 0 64
+4 0 64 0 64
+4 0 64
+9 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
+4 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
jcnd=8/64 0x3877c89c60 0 
* 0 
-40 0 2142 2142
+4 0 2142 0 2142 0 0 3 0 0 3
+4 0 2142 2142
+4 0 2142 0 2142
+4 0 2142 2142
+4 0 2142 0 2142 0 0 1 0 0 1
+4 0 2142 2142
+4 0 2142 0 2142
+4 0 2142
+4 0 2142
+4 0 2142 0 0 0 0 0 0 0 0 2142 55
jcnd=496/2142 0x3877c89c60 0 
* 0 
-32 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
jcnd=10/66 0x3877c89c60 0 
* 0 
-24 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
+4 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
jcnd=8/64 0x3877c89c60 0 
* 0 
-16 0 74 74 0 1 0 0 1
+4 0 74 0 74
+4 0 74 0 0 1 0 0 1
+4 0 74
+4 0 74 0 0 0 0 0 0 0 0 74 4
jcnd=10/74 0x3877c89c60 0 
* 0 
+6 0 1878
+4 0 1878 1878
+3 0 1878 0 1878 0 0 1 0 0 1
+3 0 1878 1878
+4 0 1878 0 1878 0 0 3 0 0 3
+4 0 1878 1878
+4 0 1878 0 1878 0 0 4 0 0 4
+4 0 1878 1878
+4 0 1878 0 1878
+4 0 1878
jump=1878 -80 0 
* 0 
-30 0 64 64
+3 0 64 0 64
+3 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
jump=64 -80 0 
* 0 
-24 0 72 72
+4 0 72 0 72
+4 0 72 72
+4 0 72 0 72
+4 0 72 72
+4 0 72 0 72
+4 0 72
jump=72 -80 0 
* 0 
-16 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
jump=64 -80 0 
* 0 
+8 0 64 64
+3 0 64
+4 0 64 0 0 1 0 0 1
+4 0 64
+4 0 64
jump=64 -39 0 
* 0 
+9 0 72
+3 0 72 0 0 0 0 0 0 0 0 72
+6 0 72 72
+3 0 72
+4 0 72
jump=72 -72 0 
* 0 
+8 0 64
+4 0 64 64
+3 0 64 0 0 0 0 0 0 0 0 64
+2 0 64
+4 0 64
jump=64 -99 0 
* 0 
+11 0 74 74 0 1 0 0 1
+3 0 74
+4 0 74
+4 0 74
+4 0 74
jump=74 0x3877c89b78 0 
* 0 
+9 0 64 64
+3 0 64
+4 0 64
+4 0 64
+4 0 64
jump=64 0x3877c89b70 0 
* 0 
+9 0 66 66
+3 0 66
+4 0 66
+4 0 66
+4 0 66
jump=66 0x3877c89b68 0 
* 0 
+9 0 64 64
+3 0 64
+4 0 64
+4 0 64
+4 0 64
jump=64 0x3877c89b60 0 
* 0 
+9 0 532 0 532 1 0 0 1
+3 0 532 532

fn=(104) alloc_perturb
0x3877c77180 0 424 424 0 1 0 0 1
+6 0 424
+2 0 424 0 0 0 0 0 0 0 0 424 3
+2 0 424 424

fn=(38) _int_malloc
0x3877c79a00 0 542 0 542 1 0 0 1
+2 0 542
+3 0 542 0 542
+2 0 542 0 542
+2 0 542 0 542 0 0 1 0 0 1
+2 0 542
+3 0 542 0 542
+1 0 542 0 542
+1 0 542
+4 0 542
+4 0 542 0 0 0 0 0 0 0 0 542
+6 0 542
+4 0 542
+6 0 542
+3 0 542
+4 0 542
+4 0 542
+4 0 542
+3 0 542 0 0 0 0 0 0 0 0 542
+6 0 542 542 0 1 1 0 1 1
+7 0 542 0 0 0 0 0 0 0 0 542 7
jcnd=420/542 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 424
+4 0 424 424
+1 0 424 424
+1 0 424 424
+2 0 424 424
+2 0 424 424
+2 0 424 424
+2 0 424 424
+7 0 437
+7 0 437 0 0 1 0 0 1 0 0 437 3
jcnd=2/437 0x3877c79b70 0 
* 0 
+2 0 435
+3 0 435
+5 0 435
+3 0 435
+4 0 435 0 435
+4 0 435
+2 0 435
+5 0 435 435 0 0 3 0 0 3
+4 0 435
+3 0 435 0 0 0 0 0 0 0 0 435
jcnd=435/435 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 894 237 190 8 2 0 8 2 0 184 20
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 436 0 0 1 0 0 1
+3 0 436
+3 0 436
+3 0 436
+4 0 436
+3 0 436
+4 0 436 0 436
+5 0 436
+3 0 436 0 436
+4 0 436 0 436
+4 0 436 0 436
+5 0 436
+3 0 436
+3 0 436
+3 0 436
+3 0 436
+4 0 436
+4 0 436 0 0 1 0 0 1
+4 0 436 0 436
+4 0 436
+4 0 436 0 436
+5 0 436 0 436
+5 0 436
+3 0 436
+3 0 436 0 436
+5 0 436
+5 0 436
+3 0 436 0 436
+4 0 436 0 436
+4 0 436
+6 0 436 0 436
+4 0 436 0 436
+5 0 436 0 0 1 0 0 1
+3 0 436
+3 0 436
+3 0 436
jump=436 +87 0 
* 0 
+8 0 396
+3 0 396
+4 0 396
+2 0 396
+2 0 396
+3 0 396
+3 0 396
+3 0 396
+2 0 396
+2 0 396
+5 0 396
+2 0 396 396 0 0 2 0 0 2
+4 0 396
+3 0 396
+4 0 396 0 396
+4 0 396 0 396 0 0 1 0 0 1
+8 0 396
+7 0 396 0 396
+4 0 396 0 396 0 0 2 0 0 2
+4 0 396 0 396
+4 0 396 0 0 0 0 0 0 0 0 396
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 901 901 0 1 0 0 1
+4 0 901
+3 0 901 0 0 0 0 0 0 0 0 901 26
jcnd=405/901 0x3877c79ef0 0 
* 0 
+6 0 496 496
+4 0 496 496 0 0 1 0 0 1
+4 0 496
+4 0 496 0 0 0 0 0 0 0 0 496
+6 0 496 496 0 1 1 0 1 1
+7 0 496 0 0 0 0 0 0 0 0 496
+6 0 496
+4 0 496
+7 0 496 0 0 0 0 0 0 0 0 496 3
jcnd=7/496 +11 0 
* 0 
+2 0 489
+3 0 489 0 0 0 0 0 0 0 0 489 62
jcnd=413/489 0x3877c79e28 0 
* 0 
+6 0 477
+3 0 477 0 477
+4 0 477 0 477
+5 0 477 0 0 0 0 0 0 0 0 477 9
jcnd=13/477 0x3877c7a090 0 
* 0 
+6 0 464
+7 0 464 0 0 0 0 0 0 0 0 464 11
jcnd=396/464 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 7
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 413 413 0 1 0 0 1
+4 0 413
+3 0 413 0 0 0 0 0 0 0 0 413 132
jcnd=209/413 0x3877c79ce1 0 
* 0 
+6 0 204 204
+5 0 204 0 0 0 0 0 0 0 0 204 5
jcnd=185/204 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 405 0 0 1 0 0 1
+7 0 405
+3 0 405 0 0 0 0 0 0 0 0 405 1
jcnd=2/405 0x3877c7a0b0 0 
* 0 
+6 0 405 405 0 1 0 0 1
+4 0 405
+3 0 405
+3 0 405
+2 0 405
+4 0 405
+3 0 405
+3 0 405
+2 0 405
+2 0 405
+2 0 405
+2 0 405 405
+8 0 405
+5 0 405
+5 0 405
+2 0 405 0 0 0 0 0 0 0 0 405
-2 0 217
+2 0 217 0 0 0 0 0 0 0 0 217
+2 0 622
+2 0 622 0 0 0 0 0 0 0 0 622 25
jcnd=221/622 +64 0 
* 0 
+2 0 401
+8 0 401
+3 0 401
+3 0 401 0 0 0 0 0 0 0 0 401 1
jcnd=1/401 0x3877c79fc0 0 
* 0 
-6 0 316
+3 0 316
+3 0 316 0 0 0 0 0 0 0 0 316 3
jcnd=125/316 0x3877c79fc0 0 
* 0 
+2 0 591
+2 0 591 591
+8 0 591
+2 0 591 0 0 0 0 0 0 0 0 591 16
jcnd=316/591 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 1356
+4 0 1356
+2 0 1356
+2 0 1356 0 0 0 0 0 0 0 0 1356 93
jcnd=960/1356 -8 0 
* 0 
-2 0 221 0 0 1 0 0 1
+2 0 221 0 0 0 0 0 0 0 0 221 20
jcnd=183/221 -8 0 
* 0 
+2 0 496 496 0 0 9 0 0 9
+4 0 496 0 0 1 0 0 1
+3 0 496 0 0 0 0 0 0 0 0 496 187
jcnd=279/496 0x3877c7a1cf 0 
* 0 
+6 0 217
+2 0 217
+4 0 217
+2 0 217
+2 0 217
+2 0 217 0 217
+8 0 217
jump=217 0x3877c79f30 0 
* 0 
+37 0 126 126 0 1 0 0 1
+5 0 126 126
+4 0 126
+4 0 126 126
+5 0 126 0 0 0 0 0 0 0 0 126
jcnd=126/126 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 279 279 0 1 1 0 1 1
+4 0 279 279
+4 0 279
+3 0 279 279
+4 0 279
+4 0 279
+3 0 279
+3 0 279 279
+4 0 279 0 0 0 0 0 0 0 0 279
+6 0 279 279
+4 0 279 0 0 0 0 0 0 0 0 279
+6 0 279 279 0 1 0 0 1
+8 0 279 0 279
+4 0 279 0 279
+4 0 279 0 0 0 0 0 0 0 0 279 7
jcnd=209/279 +38 0 
* 0 
+2 0 70 70 0 0 2 0 0 2
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 209
+4 0 209 0 0 0 0 0 0 0 0 209 7
jcnd=13/209 0x3877c7a2e3 0 
* 0 
+6 0 266 266
+4 0 266 266 0 1 0 0 1
+4 0 266 0 0 0 0 0 0 0 0 266
+6 0 266
+4 0 266
+7 0 266 0 266 0 0 7 0 0 7
+4 0 266 0 266
+4 0 266 0 266
+4 0 266 0 266
+4 0 266 0 0 0 0 0 0 0 0 266 3
jcnd=2/266 +7 0 
* 0 
+2 0 264 0 264
+5 0 264
+7 0 264 0 0 0 0 0 0 0 0 264 4
jcnd=257/264 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 259 0 0 1 0 0 1
+7 0 259 0 259
+4 0 259
+3 0 259
+3 0 259
+4 0 259
+3 0 259
+4 0 259
+3 0 259
+3 0 259
+4 0 259 0 259
+4 0 259 0 259 0 0 1 0 0 1
+4 0 259
jump=259 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 13
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +7 0 
* 0 
+7 0 279
+4 0 279 0 0 1 0 0 1
+3 0 279
+3 0 279 0 279
cfn=(104)
calls=279 0x3877c77180 0 
* 0 1116 558 0 1 0 0 1 0 0 279 2
+5 0 279
+3 0 279
jump=279 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 126 0 0 1 0 0 1
+7 0 126
+2 0 126
+4 0 126
+3 0 126
+3 0 126 0 126
+5 0 126
+3 0 126
+4 0 126
+3 0 126 0 0 1 0 0 1
+4 0 126
+4 0 126
+3 0 126
+4 0 126 0 126
+4 0 126 0 126 0 0 5 0 0 5
+4 0 126
+3 0 126
+3 0 126 0 126
cfn=(104)
calls=126 0x3877c77180 0 
* 0 504 252 0 0 0 0 0 0 0 126 1
+5 0 126
+3 0 126
jump=126 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 542 0 542 1 0 0 1
+5 0 542 0 542
+5 0 542
+3 0 542 0 542
+5 0 542
+4 0 542 542 0 0 1 0 0 1
+7 0 542 542 0 0 1 0 0 1
+3 0 542
+3 0 542 0 0 0 0 0 0 0 0 542
+6 0 542 542 0 0 1 0 0 1
+7 0 542 542 0 1 1 0 1 1
+4 0 542
+3 0 542 0 0 0 0 0 0 0 0 542
+2 0 542 542 0 0 1 0 0 1
+3 0 542
+3 0 542 0 0 0 0 0 0 0 0 542
jcnd=542/542 +97 0 
* 0 
+18 0 542
+3 0 542
+3 0 542 0 542
cfn=(38)
calls=542 0x3877c79a00 0 
* 0 110225 14650 16694 42 29 39 42 29 39 16508 692
+5 0 542
+3 0 542
+3 0 542 0 0 0 0 0 0 0 0 542
+2 0 542
+3 0 542 0 0 0 0 0 0 0 0 542
+2 0 542
+3 0 542 0 0 0 0 0 0 0 0 542 5
+2 0 542 542
+7 0 542 0 0 0 0 0 0 0 0 542
jcnd=542/542 +13 0 
* 0 
+13 0 542 0 542
+2 0 542 0 0 0 0 0 0 0 0 542 14
+6 0 542
+3 0 542 542
+4 0 542 542
+5 0 542 542
+5 0 542
+4 0 542 542
+1 0 542 0 0 1 0 0 1
+5 0 542 542 0 0 1 0 0 1
+7 0 542 0 0 0 0 0 0 0 0 542
jcnd=542/542 +14 0 
* 0 
+14 0 542 0 542 1 0 0 1
+3 0 542 0 0 0 0 0 0 0 0 542
+6 0 542
jump=542 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 542 0 542 1 0 0 1
+2 0 542
+3 0 542
+3 0 542 0 542
+2 0 542
+3 0 542 0 542
+1 0 542
+3 0 542 0 542
+1 0 542
+3 0 542
+4 0 542
+3 0 542 0 0 0 0 0 0 0 0 542
+6 0 542
+4 0 542
+3 0 542 0 0 0 0 0 0 0 0 542 7
jcnd=10/542 0x3877c838d1 0 
* 0 
+2 0 532
+3 0 532
+3 0 532
+3 0 532
+3 0 532
+3 0 532 0 0 0 0 0 0 0 0 532
jcnd=532/532 +41 0 
* 0 
+41 0 532 0 0 1 0 0 1
+3 0 532 0 0 0 0 0 0 0 0 532
jcnd=532/532 0x3877c839c0 0 
* 0 
+24 0 532
+3 0 532
+4 0 532
+3 0 532
+3 0 532
+3 0 532
+3 0 532
+3 0 532 0 0 0 0 0 0 0 0 532 264
jcnd=272/532 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 270
+10 0 270 270 0 0 2 0 0 2
+3 0 270
+4 0 270 0 270
+3 0 270
+4 0 270
+4 0 270 0 0 0 0 0 0 0 0 270
jcnd=270/270 -18 0 
* 0 
-18 0 866 866
+3 0 866
+4 0 866 0 866
+3 0 866
+4 0 866
+4 0 866 0 0 0 0 0 0 0 0 866 11
jcnd=596/866 -18 0 
* 0 
+2 0 542
+4 0 542
+3 0 542 542
+1 0 542 542
+1 0 542 542
+2 0 542 542 0 1 0 0 1
+2 0 542 542
0x3877c839c0 0 532 0 0 1 0 0 1
+3 0 532
+3 0 532
+3 0 532
+4 0 532 0 532 0 0 1 0 0 1
cfn=(284)
calls=532 0x3877c89b20 0 
* 0 52902 18996 17932 6 1 12 6 1 12 2546 59 532 64
+5 0 532
jump=532 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 542 542 0 1 1 0 1 1
+7 0 542 542 0 0 1 0 0 1
+3 0 542
+3 0 542 0 0 1 0 0 1 0 0 542
+6 0 542
+3 0 542 0 0 0 0 0 0 0 0 542
+6 0 542 542
+4 0 542
+4 0 542
+2 0 542 0 0 0 0 0 0 0 0 542 2
+2 0 542
+2 0 542
+7 0 542 0 0 0 0 0 0 0 0 542
jcnd=542/542 +14 0 
* 0 
+14 0 542
+2 0 542
cfn=(170)
calls=542 0x3877c78650 0 
* 0 51007 13403 7707 19 1 0 19 1 0 12075 249

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=11/12 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 2052282 796632 488538 238 68 74 238 68 74 73931 1719 3242 64
