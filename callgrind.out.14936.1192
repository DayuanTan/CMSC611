version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1192


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1514361122 - 1514718062
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 654 0 0 1 0 0 1
+3 0 654 0 0 0 0 0 0 0 0 654
+2 0 654
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=654 0x3877c7b8b0 0 
* 0 76541 19915 10719 19 4 0 19 4 0 18677 280
* 0 654 654 0 1 1 0 1 1 0 0 0 654

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 654 0 654 1 0 0 1
+1 0 654
+5 0 654
+3 0 654 0 654
+1 0 654
+4 0 654 0 0 1 0 0 1
+3 0 654
+4 0 654
+3 0 654 0 654 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=654 0x3877c7aa50 0 
* 0 191751 27566 28028 45 39 40 45 39 40 33215 1284
* 0 654 654 0 1 1 0 1 1 0 0 0 654
+5 0 654
+3 0 654 0 0 0 0 0 0 0 0 654
jcnd=654/654 +96 0 
* 0 
+96 0 654 0 0 1 0 0 1
+4 0 654 654
+1 0 654 654
+1 0 654 654

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 160 0 160 1 0 0 1
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160
+3 * 160 0 160
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=160 0x402d74 645 
* * 2080 960 320
+5 * 160
+3 * 160 0 160
+3 +1 160 160
+6 * 160 0 160
+3 * 160 160
+6 * 160 0 160
+3 +1 160 160
+6 * 160 0 160 1 0 0 1
+3 * 160 160
+6 * 160 0 160
+3 +2 160 0 160
+7 * 160
jump=160 +86 * 
* * 
+2 +1 13040 13040
+3 * 13040
+3 * 13040 13040
+4 * 13040
+3 * 13040
+3 * 13040 0 13040
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=13040 0x402d9a 770 
* * 143440 65200 39120
+5 * 13040 13040
+4 * 13040 13040
+5 * 13040
+4 * 13040 0 13040
+5 +1 13040 13040
+3 * 13040
+3 * 13040 13040
+4 * 13040
+3 * 13040
+3 * 13040 0 13040
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=13040 0x402dba 770 
* * 143440 65200 39120 1 0 0 1
+5 * 13040 13040
+2 * 13040
+4 * 13040 13040
+5 * 13040
+4 * 13040 0 13040
+5 -2 13040 0 13040
+4 * 13040 13040
+3 * 13040
+3 * 13040 13040
+3 * 13040 0 0 0 0 0 0 0 0 13040 161
jcnd=12880/13040 -93 +1 
* * 
-9 * 160 160 0 1 0 0 1
+3 * 160
+3 * 160 160
+3 * 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 -93 +1 
* * 
+2 +4 160 160
+3 * 160
+3 * 160
+4 * 160 160 0 1 0 0 1
+5 * 160
+4 * 160
+3 * 160 0 160
+5 +1 160 160
+3 * 160
+3 * 160
+4 * 160 160
+5 * 160
+4 * 160
+3 * 160 0 160
+5 +1 160 0 160
+7 * 160
jump=160 0x4016ee * 
* * 
+2 +1 13040 13040
+3 * 13040
+3 * 13040 13040
+4 * 13040
+3 * 13040 0 0 1 0 0 1
+3 * 13040 0 13040
cfi=(2)
cfn=(146)
calls=13040 0x402dba 770 
* * 143440 65200 39120
+5 * 13040 13040
+2 * 13040
+4 * 13040 13040
+5 * 13040 0 13040
+5 +1 13040 13040
+3 * 13040
+3 * 13040 13040
+4 * 13040
+3 * 13040
+3 * 13040 0 13040
cfi=(2)
cfn=(144)
calls=13040 0x402d9a 770 
* * 143440 65200 39120
+5 * 13040 13040
+4 * 13040 13040
+5 * 13040 0 13040
+5 +1 13040 13040
+5 * 13040 13040
+5 * 13040 13040
+5 * 13040
+4 * 13040 0 13040
+5 +1 13040 13040
+5 * 13040 13040
+5 * 13040 13040
+5 * 13040
+4 * 13040 0 13040
+5 -4 13040 0 13040
+4 * 13040 13040
+3 * 13040
+3 * 13040 13040
+3 * 13040 0 0 0 0 0 0 0 0 13040 161
jcnd=12880/13040 0x401672 +1 
* * 
-9 * 160 160 0 1 0 0 1
+3 * 160
+3 * 160 160
+3 * 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 0x401672 +1 
* * 
+6 +6 160 160 0 1 0 0 1
+5 * 160 160
+5 * 160 0 160
+5 +2 160 160
+3 +1 160 0 160
+3 * 160 160
+5 * 160 160
+1 * 160 160

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 160
+7 * 160
+7 * 160
+3 * 160
+3 * 160 0 160
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=160 0x4030b2 310 
* * 154635 42959 40182 63 20 18 63 20 18 10542 513 638 79
+5 * 160
+7 * 160
+7 * 160
+3 * 160
+3 * 160 0 160
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=160 0x402ff4 310 
* * 156332 43292 39688 35 12 30 35 12 30 11120 498 638
+5 * 160 0 0 1 0 0 1
+7 * 160
+7 * 160
+3 * 160
+3 * 160 0 160
cfn=(142)
calls=160 0x401585 -52 
* * 1366560 603840 315680 8 0 0 8 0 0 26400 322
+5 * 160 0 160
+8 * 160 160
+6 * 160 0 160
+6 * 160
+7 * 160
+3 * 160 0 160
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=160 0x402df4 414 
* * 42132 13277 9635 31 6 0 31 6 0 4973 35 320
+5 * 160
+7 * 160
+3 * 160 0 160 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=160 0x402e74 414 
* * 41509 13146 9391 7 0 0 7 0 0 4846 102 320
+5 +2 160
+7 * 160
+7 * 160
+3 * 160
+3 * 160 0 160
cfi=(2)
cfn=(4)
calls=160 0x4030b2 310 
* * 154391 42949 40075 4 0 1 4 0 1 10544 342 638
+5 * 160
+7 * 160
+7 * 160
+3 * 160
+3 * 160 0 160
cfi=(2)
cfn=(80)
calls=160 0x402ff4 310 
* * 155152 43212 39507 0 0 0 0 0 0 10914 357 638
+5 * 160 160
+6 * 160 0 0 1 0 0 1
+7 * 160
+7 * 160 0 160
+6 * 160 160
+8 * 160
+3 * 160
+3 * 160 0 160
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=160 0x401719 -33 
* * 635360 264320 145840 4 0 0 4 0 0 13200 161
+5 * 160 0 160
+8 * 160 160
+6 * 160 0 160
+6 * 160
+7 * 160 0 0 1 0 0 1
+3 * 160 0 160
cfi=(2)
cfn=(148)
calls=160 0x402df4 414 
* * 42132 13277 9635 0 0 0 0 0 0 4973 31 320
+5 * 160
+7 * 160
+3 * 160 0 160
cfi=(2)
cfn=(178)
calls=160 0x402e74 414 
* * 41509 13146 9391 0 0 0 0 0 0 4846 99 320
+5 +2 160 160
+7 * 160
+3 * 160 0 160
cfi=(2)
cfn=(2)
calls=160 0x402d74 645 
* * 2080 960 320
+5 * 160 160
+6 * 160
+3 * 160
+3 * 160
+3 * 160 160
+7 * 160
+3 * 160 0 0 1 0 0 1
+3 * 160 0 160
cfi=(2)
cfn=(144)
calls=160 0x402d9a 770 
* * 1760 800 480
+5 * 160
+3 * 160
+7 * 160
+3 * 160
+3 * 160 0 160
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=160 0x402eda 901 
* * 21324 7488 5927 48 23 12 48 23 12 1128 85 41
+5 +1 160 160
+7 * 160
+3 * 160 0 160
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=160 0x402f54 645 
* * 2080 960 320 0 1 0 0 1
+5 * 160 160
+6 * 160
+3 * 160
+3 * 160
+3 * 160 160
+7 * 160 0 0 1 0 0 1
+3 * 160
+3 * 160 0 160
cfi=(2)
cfn=(146)
calls=160 0x402dba 770 
* * 1760 800 480
+5 * 160
+3 * 160
+7 * 160
+3 * 160
+3 * 160 0 160
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=160 0x402f7a 901 
* * 20182 7223 5702 21 13 16 21 13 16 898 56 41
+5 +1 160 160
+7 * 160
+3 * 160 0 160
cfi=(2)
cfn=(10)
calls=160 0x402f54 645 
* * 2080 960 320
+5 * 160 160
+6 * 160
+3 * 160
+3 * 160
+3 * 160 160 0 1 0 0 1
+7 * 160
+3 * 160
+3 * 160 0 160
cfi=(2)
cfn=(146)
calls=160 0x402dba 770 
* * 1760 800 480
+5 * 160 160
+2 * 160
+4 * 160 160
+8 * 160 160
+8 * 160 0 160
+8 +1 160 160
+7 * 160
+3 * 160 0 160
cfi=(2)
cfn=(2)
calls=160 0x402d74 645 
* * 2080 960 320
+5 * 160 160 0 1 0 0 1
+6 * 160
+3 * 160
+3 * 160
+3 * 160 160
+7 * 160
+3 * 160
+3 * 160 0 160
cfi=(2)
cfn=(144)
calls=160 0x402d9a 770 
* * 1760 800 480
+5 * 160 160
+4 * 160 160
+8 * 160
+4 * 160 160
+8 * 160
+3 * 160 0 160
+8 +2 160 0 160
+7 -12 160 160
+8 * 160 160
+7 * 160 0 0 0 0 0 0 0 0 160 2
jcnd=1/160 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 160
+7 * 160
+3 * 160 0 160
cfi=(2)
cfn=(2)
calls=160 0x402d74 645 
* * 2080 960 320 2 0 1 2 0 1
+5 * 160
+3 * 160 160
+7 * 160
+3 * 160 0 160
cfi=(2)
cfn=(2)
calls=160 0x402d74 645 
* * 2080 960 320 0 1 0 0 1
+5 * 160
+3 * 160 0 0 0 0 0 0 0 0 160
+2 * 160 0 0 1 0 0 1
+5 * 160
jump=160 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 160
+2 * 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+5 +1 160 160
+4 * 160
+3 * 160 0 160
cfi=(2)
cfn=(2)
calls=160 0x402d74 645 
* * 2080 960 320
+5 * 160
+3 * 160 0 160
+3 +1 160 160 0 1 0 0 1
+6 * 160 0 160
+3 * 160 160
+6 * 160 0 160
+3 +2 160 0 160
+7 * 160
jump=160 +86 * 
* * 
+2 +1 13040 13040
+3 * 13040
+3 * 13040 13040
+4 * 13040
+3 * 13040
+3 * 13040 0 13040
cfi=(2)
cfn=(144)
calls=13040 0x402d9a 770 
* * 143440 65200 39120
+5 * 13040 13040
+4 * 13040 13040
+5 * 13040
+4 * 13040 0 13040
+5 +1 13040 13040
+3 * 13040
+3 * 13040 13040
+4 * 13040
+3 * 13040
+3 * 13040 0 13040
cfi=(2)
cfn=(146)
calls=13040 0x402dba 770 
* * 143440 65200 39120
+5 * 13040 13040
+2 * 13040
+4 * 13040 13040
+5 * 13040
+4 * 13040 0 13040
+5 -2 13040 0 13040
+4 * 13040 13040
+3 * 13040
+3 * 13040 13040
+3 * 13040 0 0 0 0 0 0 0 0 13040 161
jcnd=12880/13040 -93 +1 
* * 
-9 * 160 160 0 1 0 0 1
+3 * 160
+3 * 160 160
+3 * 160 0 0 0 0 0 0 0 0 160
jcnd=160/160 -93 +1 
* * 
+2 +4 160 160
+3 * 160
+3 * 160 0 0 1 0 0 1
+4 * 160 160
+5 * 160
+4 * 160
+3 * 160 0 160
+5 +1 160 160
+3 * 160
+3 * 160
+4 * 160 160
+5 * 160
+4 * 160
+3 * 160 0 160
+5 +1 160 160
+5 * 160 160
+5 * 160 160
+5 * 160 0 0 1 0 0 1
+4 * 160
+3 * 160 0 160
+5 +2 160 160
+3 +1 160 0 160
+3 * 160 160
+5 * 160 160
+1 * 160 160

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 320
+4 * 320
+3 * 320 0 320
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=320 0x4044cc -35 
* * 1600 640 640
+5 * 320 320
+1 * 320 320

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320 1 0 0 1
+4 +1 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=320 0x4049d4 -35 
* * 1920 640 960 1 0 0 1
+5 * 320 320
+1 * 320 320

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 320
+4 * 320
+3 * 320 0 320
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=320 0x404520 -35 
* * 1600 640 640
+5 * 320 320
+1 * 320 320

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=320 0x404a28 -35 
* * 1920 640 960 1 0 1 1 0 1
+5 * 320 320
+1 * 320 320

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=160 0x403df2 -87 
* * 3840 1280 1440 0 11 4 0 11 4 160
+5 * 160 160
+1 * 160 160

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+4 * 320 320
+4 * 320 320
+1 * 320 320

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=160 0x40406a -87 
* * 3840 1280 1440 0 11 7 0 11 7 160
+5 * 160 160
+1 * 160 160

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 320 0 320
+1 * 320
+3 * 320 0 320
+4 * 320 320
+4 * 320 320
+1 * 320 320

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 390 0 390
+1 * 390
+3 * 390 0 390
+4 +1 390 390
+4 * 390 390
+1 * 390 390

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 640 0 640 1 0 0 1
+1 * 640
+3 * 640 0 640
+4 +1 640 640 0 1 0 0 1
+4 * 640 640
+1 * 640 640

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 390 0 390
+1 * 390
+3 * 390 0 390 0 0 1 0 0 1
+4 +1 390 390
+4 * 390 390
+1 * 390 390

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 640 0 640 1 0 0 1
+1 * 640
+3 * 640
+4 * 640 0 640
+4 +1 640
+4 * 640
+3 * 640 0 640
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=640 0x404ffe 790 
* * 3840 1920 1280 1 0 0 1
+5 * 640 640
+3 * 640 640
+1 * 640 640

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 640 0 640 1 0 0 1
+1 * 640
+3 * 640 0 640
+4 +1 640 640
+4 * 640 640
+1 * 640 640

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 640 0 640 1 0 0 1
+1 * 640
+3 * 640
+4 * 640 0 640
+4 +1 640
+4 * 640
+3 * 640 0 640 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=640 0x40500c 790 
* * 3840 1920 1280 1 0 0 1
+5 * 640 640
+3 * 640 640
+1 * 640 640

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 320 0 320
+1 * 320
+3 * 320 0 320
+4 * 320 0 320
+4 * 320 320
+4 * 320 320
+1 * 320 320

fl=(5)
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 327 0 327
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 * 327 0 327
+4 +1 327 327
+4 * 327
+3 * 327 0 327
cob=(5)
cfi=(8)
cfn=(164)
calls=327 0x387e4bb2f0 0 
* * 40185 10407 5602 21 5 0 21 5 0 9788 70 327
* * 327 327 0 1 1 0 1 1 0 0 0 327
+5 * 327 327
+1 * 327 327

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 327 0 327
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 * 327 0 327
+4 +1 327 327
+4 * 327
+3 * 327 0 327
cob=(5)
cfi=(8)
cfn=(164)
calls=327 0x387e4bb2f0 0 
* * 38972 10162 5117 0 0 0 0 0 0 9543 210 327
* * 327 327 0 0 0 0 0 0 0 0 0 327
+5 * 327 327
+1 * 327 327

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 327 0 327 1 0 0 1
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 * 327 0 327
+4 +2 327 327
+4 * 327
+3 * 327 0 327
cfn=(102)
calls=327 0x4048de +12 
* * 1962 654 654 1 0 0 1
+5 * 327 327
+4 * 327 0 0 1 0 0 1
+3 * 327
+2 * 327 0 0 0 0 0 0 0 0 327
jcnd=327/327 +7 +3 
* * 
+7 +3 327 327
+4 * 327
+4 * 327
+3 * 327 0 327
cob=(5)
cfi=(8)
cfn=(32)
calls=327 0x387e4bd0b0 0 
* * 102924 15530 14578 30 23 25 30 23 25 17528 677 327
* * 327 327 0 0 0 0 0 0 0 0 0 327
+5 +1 327 327
+1 * 327 327

fn=(18)
0x404a28 81 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320 0 0 1 0 0 1
+4 * 320 0 320
+4 * 320 320
+1 * 320 320

fn=(92)
0x4049d4 81 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+4 * 320 0 320
+4 * 320 320
+1 * 320 320

fn=(196)
0x404520 86 320 0 320
+1 * 320
+3 * 320 0 320
+4 * 320 320
+1 * 320 320

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 327 0 327 1 0 0 1
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 * 327 0 327 1 0 0 1
+4 +2 327 327
+4 * 327
+3 * 327 0 327
cfn=(28)
calls=327 0x404992 +12 
* * 1962 654 654 1 0 0 1
+5 * 327 327
+4 * 327
+3 * 327
+2 * 327 0 0 0 0 0 0 0 0 327
jcnd=327/327 +7 +3 
* * 
+7 +3 327 327
+4 * 327
+4 * 327
+3 * 327 0 327
cob=(5)
cfi=(8)
cfn=(32)
calls=327 0x387e4bd0b0 0 
* * 99291 14652 15412 19 17 16 19 17 16 16341 607 327
* * 327 327 0 1 1 0 1 1 0 0 0 327
+5 +1 327 327
+1 * 327 327

fn=(102)
0x4048de 113 341 0 341 1 0 0 1
+1 * 341
+3 * 341 0 341
+4 +1 341
+10 * 341 341
+1 * 341 341

fn=(266)
0x40406a 129 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160
+3 * 160
+5 * 160 0 160
cfi=(16)
cfn=(226)
calls=160 0x402d61 -20 
* * 1120 480 480
+5 * 160
+3 * 160 0 0 0 0 0 0 0 0 160
+2 * 160 160
+4 * 160 160 0 0 11 0 0 11
+2 * 160 0 160 0 0 7 0 0 7
+2 * 160 160
+1 * 160 160

fn=(28)
0x404992 113 341 0 341 1 0 0 1
+1 * 341
+3 * 341 0 341
+4 +1 341
+10 * 341 341
+1 * 341 341

fn=(176)
0x4044cc 86 320 0 320
+1 * 320
+3 * 320 0 320
+4 * 320 320
+1 * 320 320

fn=(224)
0x403df2 129 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 * 160 0 160
+4 +1 160 160
+4 * 160
+3 * 160
+5 * 160 0 160
cfi=(16)
cfn=(226)
calls=160 0x402d61 -20 
* * 1120 480 480
+5 * 160
+3 * 160 0 0 0 0 0 0 0 0 160
+2 * 160 160
+4 * 160 160 0 0 11 0 0 11
+2 * 160 0 160 0 0 4 0 0 4
+2 * 160 160
+1 * 160 160

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +2 320 320 0 1 0 0 1
+4 * 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=320 0x404a36 450 
* * 115826 36660 34744 24 3 3 24 3 3 4380 283 636 79
+5 * 320 320
+1 * 320 320

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +2 320 320
+4 * 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=320 0x40439c 107 
* * 124786 39860 37944 7 1 10 7 1 10 4380 246 636
+5 * 320 320
+1 * 320 320

fn=(116)
0x40439c 107 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +10 320 320
+4 * 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=320 0x4047d7 -26 
* * 120306 38260 36344 7 1 10 7 1 10 4380 246 636
+5 +1 320 320
+1 * 320 320

fn=(118)
0x4047d7 91 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +2 320 320
+4 * 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=320 0x4049e2 450 
* * 115826 36660 34744 7 1 10 7 1 10 4380 246 636
+5 * 320 320
+1 * 320 320

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 4 2 0 4 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 4 2 0 4 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 4 1 0 4 76 4 13
+5 * 14 14
+1 * 14 14

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +10 320 320
+4 * 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(52)
calls=320 0x404829 -26 
* * 120306 38260 36344 25 3 3 25 3 3 4380 283 636 79
+5 +1 320 320
+1 * 320 320

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 4 2 0 4 76 4 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +2 320 320
+4 * 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320 1 0 0 1
cfn=(50)
calls=320 0x404484 107 
* * 124786 39860 37944 25 3 3 25 3 3 4380 283 636 79
+5 * 320 320
+1 * 320 320

fl=(2)
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+1 * 320
+4 * 320 0 320
+4 +2 320 320
+4 * 320 320
+4 * 320
+3 * 320 320
+4 * 320 320
+3 * 320
+3 * 320
+3 * 320
+4 * 320
+3 * 320 320
+4 * 320 320
+3 -1 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=320 0x403d98 +11 
* * 47178 13172 8222 1 0 0 1 0 0 9692 201 640
+5 +1 320 320
+4 * 320
+3 * 320 0 320
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=320 0x403296 -82 
* * 7360 2560 2560 1 0 0 1
+5 * 320
jump=320 +28 * 
* * 
+28 * 320
+4 * 320 320
+1 * 320 320
+1 * 320 320

fn=(2)
0x402d74 645 1308 0 1308 1 0 0 1
+1 * 1308
+3 * 1308 0 1308 0 0 1 0 0 1
+4 +1 1308 1308
+4 * 1308 1308 0 1 1 0 1 1
+4 * 1308
+3 * 1308 1308
+4 * 1308 1308
+3 * 1308
+3 * 1308
+3 * 1308
+4 * 1308 1308
+1 * 1308 1308

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 +2 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=320 0x404236 -14 
* * 110960 18528 18953 23 16 11 23 16 11 16706 572 640
+5 * 320 320
+4 * 320 0 320
+3 +1 320 320
+4 * 320 320 0 1 0 0 1
+3 * 320 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+3 * 320 320
+4 * 320
+4 * 320
+3 * 320 320
+4 * 320 0 320
+4 +1 320 320
+1 * 320 320

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 +2 320 320
+4 * 320 320 0 1 0 0 1
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=320 0x403fbe -14 
* * 113418 19124 17891 13 11 20 13 11 20 17654 609 640
+5 * 320 320
+4 * 320 0 320
+3 +1 320 320
+4 * 320 320
+3 * 320 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+3 * 320 320
+4 * 320
+4 * 320
+3 * 320 320
+4 * 320 0 320
+4 +1 320 320
+1 * 320 320

fn=(244)
0x402f7a 901 160 0 160
+1 * 160
+3 * 160 0 0 1 0 0 1
+4 * 160 0 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160 0 0 0 0 0 0 0 0 160
jcnd=7/160 +51 +10 
* * 
+2 +3 153 153
+4 * 153 153
+4 * 153 153
+4 -1 153 153
+4 * 153
+3 * 153
+3 * 153 0 153
cfi=(3)
cfn=(264)
calls=153 0x4036b1 215 
* * 5814 1989 2142 0 10 4 0 10 4 153
+5 +2 153 153
+4 * 153 153
+4 * 153
+4 * 153 153
+4 * 153 0 153
+4 * 153
jump=153 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10075 3119 2711 20 3 12 20 3 12 585 56 41
+5 +2 160 160
+1 * 160 160

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 661 0 661 1 0 0 1
+1 * 661
+3 * 661 0 661 1 0 0 1
+4 +1 661 661
+4 * 661 661
+1 * 661 661

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+3 * 320 0 320
+4 * 320
+4 * 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=320 0x404380 726 
* * 3200 1600 1280
+5 * 320 320
+4 * 320 320
+1 * 320 320

fn=(148)
0x402df4 414 320 0 320
+1 * 320
+3 * 320 0 320
+1 * 320
+4 * 320 0 320 1 0 0 1
+4 +2 320 320
+4 * 320
+3 * 320 0 320
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=320 0x40325e 113 
* * 1920 960 640
+5 * 320
+3 * 320 320
+4 * 320 320
+4 * 320 320
+4 * 320 320
+3 -1 320
+3 * 320
+3 * 320 0 320
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=320 0x40326c 148 
* * 9920 3200 3840 4 0 0 4
+5 +1 320 320
+4 * 320
+3 * 320 0 320
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=320 0x4031ec 159 
* * 64744 19514 12870 25 6 0 25 6 0 9946 66 640
+5 * 320
jump=320 +28 * 
* * 
+28 * 320 0 0 1 0 0 1
+4 * 320 320
+1 * 320 320
+1 * 320 320

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 327 0 327 1 0 0 1
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 * 327 0 327
+4 +2 327 327
+5 * 327 0 0 0 0 0 0 0 0 327
+2 +1 327 327
+4 * 327 327
+4 * 327 327
+4 * 327
+3 * 327
+3 * 327 0 327
cfi=(5)
cfn=(160)
calls=327 0x4044d6 -65 
* * 44109 11715 7237 22 6 0 22 6 0 9788 70 654
+5 +1 327 327
+1 * 327 327

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 320 0 320
+1 * 320
+3 * 320 0 320
+1 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=320 0x4043ca -45 
* * 11520 4160 4480 4 0 4 4 0 4
+5 +1 320 320 0 1 0 0 1
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(20)
calls=320 0x404412 +43 
* * 118960 22368 21193 24 16 11 24 16 11 16706 572 640
+5 * 320
jump=320 +28 * 
* * 
+28 * 320
+4 * 320 320
+1 * 320 320
+1 * 320 320

fn=(14)
0x4043ca 90 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320 0 0 1 0 0 1
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfi=(4)
cfn=(16)
calls=320 0x404804 +24 
* * 5760 1920 2240 2 0 1 2 0 1
+5 * 320 320
+4 * 320 0 320 0 0 2 0 0 2
+7 * 320 320
+4 * 320 0 320 1 0 0 1
+8 * 320 320
+4 * 320 0 320
+8 +1 320 320
+1 * 320 320

fn=(80)
0x402ff4 310 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+2 * 320 0 320
+2 * 320 0 320
+1 * 320 0 0 1 0 0 1
+4 * 320 0 320
+4 * 320 0 320
+4 +2 320 320
+4 * 320
+3 * 320 0 320
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=320 0x4039fc 117 
* * 1920 960 640 2 0 0 2
+5 * 320
+3 * 320 0 320
cfi=(3)
cfn=(84)
calls=320 0x4039ed -88 
* * 1920 960 640
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(2)
calls=320 0x402d74 645 
* * 4160 1920 640
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320
+3 * 320
+3 * 320 0 320 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=320 0x403a0a 134 
* * 139978 29364 26851 20 11 20 20 11 20 17654 609 640
+5 +4 320 320
+4 * 320
+3 * 320 0 320
cfn=(106)
calls=320 0x40325e 113 
* * 1920 960 640 1 0 0 1
+5 * 320
+3 * 320 320
+4 * 320 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=320 0x403a98 565 
* * 8000 3200 2560 2 0 0 2
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(112)
calls=320 0x403a68 547 
* * 8000 3200 2560
+5 * 320
+3 * 320
+3 * 320
+3 * 320
+3 * 320 0 320
cfi=(11)
cfn=(114)
calls=320 0x403ac9 -60 
* * 129586 41460 39864 7 1 10 7 1 10 4380 246 636
+5 -3 320 320
+4 * 320 0 320
+4 * 320
jump=320 +28 +4 
* * 
+28 +4 320
+4 * 320 320
+1 * 320 320
+2 * 320 320
+2 * 320 320
+1 * 320 320

fn=(188)
0x403d98 171 327 0 327 1 0 0 1
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 * 327 0 327
+4 +2 327 327
+5 * 327 0 0 0 0 0 0 0 0 327 7
+2 +1 327 327
+4 * 327 327
+4 * 327 327
+4 * 327
+3 * 327
+3 * 327 0 327
cfi=(5)
cfn=(190)
calls=327 0x40452a -65 
* * 42896 11470 6752 0 0 0 0 0 0 9543 210 654
+5 +1 327 327
+1 * 327 327

fn=(22)
0x404236 167 327 0 327 1 0 0 1
+1 * 327
+3 * 327
+4 * 327 0 327 1 0 0 1
+4 * 327 0 327
+4 0 327 327
+5 0 327 0 0 0 0 0 0 0 0 327
+2 0 327 327
+4 0 327 327
+4 0 327
+5 0 327
+3 0 327
+3 0 327 0 327
fi=(6) ???
cfi=(5)
cfn=(26)
calls=327 0x404730 99 
* 0 107793 17268 18028 23 18 16 23 18 16 16668 607 654
+5 0 327
fi=(6)
jump=327 +7 0 
* 0 
+7 0 327 327
+1 0 327 327

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+4 * 320 0 320
+4 * 320
+4 * 320 0 0 1 0 0 1
+4 * 320
+3 * 320
+3 * 320 0 320
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=320 0x404468 726 
* * 3200 1600 1280 1 0 0 1
+5 * 320 320
+4 * 320 320
+1 * 320 320

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+3 * 320 0 320
+4 * 320
+4 * 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfi=(10)
cfn=(44)
calls=320 0x404468 726 
* * 3200 1600 1280
+5 * 320 320
+4 * 320 320
+1 * 320 320

fn=(86)
0x403a0a 134 320 0 320
+1 * 320
+3 * 320 0 320
+1 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=320 0x4042e2 -45 
* * 11520 4160 4480 5 0 0 5
+5 +1 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320 1 0 0 1
cfn=(94)
calls=320 0x40432a +43 
* * 121418 22964 20131 14 11 20 14 11 20 17654 609 640
+5 * 320
jump=320 +28 * 
* * 
+28 * 320
+4 * 320 320
+1 * 320 320
+1 * 320 320

fn=(88)
0x4042e2 90 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320 1 0 0 1
cfi=(4)
cfn=(90)
calls=320 0x4047b2 +24 
* * 5760 1920 2240 3 0 0 3
+5 * 320 320
+4 * 320 0 320
+7 * 320 320
+4 * 320 0 320
+8 * 320 320
+4 * 320 0 320
+8 +1 320 320
+1 * 320 320

fn=(156)
0x4031ec 159 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+1 * 320
+4 * 320 0 320
+4 +2 320 320
+4 * 320 320 0 1 0 0 1
+4 * 320
+3 * 320 320
+4 * 320 320
+3 * 320
+3 * 320
+3 * 320
+4 * 320
+3 * 320 320
+4 * 320 320
+3 -1 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(158)
calls=320 0x403ce6 +11 
* * 48424 13434 8710 22 6 0 22 6 0 9946 66 640
+5 +1 320 320
+4 * 320
+3 * 320 0 320
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=320 0x4031b8 -82 
* * 7360 2560 2560 1 0 0 1
+5 * 320
jump=320 +28 * 
* * 
+28 * 320
+4 * 320 320
+1 * 320 320
+1 * 320 320

fn=(172)
0x4031b8 79 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 320
+4 * 320
+3 * 320 0 320
cfi=(4)
cfn=(174)
calls=320 0x403ccc +42 
* * 4480 1600 1600
+5 * 320 320
+1 * 320 320

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10)
0x402f54 645 668 0 668 1 0 0 1
+1 * 668
+3 * 668 0 668
+4 +1 668 668
+4 * 668 668 0 0 2 0 0 2
+4 * 668
+3 * 668 668
+4 * 668 668
+3 * 668
+3 * 668
+3 * 668
+4 * 668 668
+1 * 668 668

fn=(106)
0x40325e 113 661 0 661 1 0 0 1
+1 * 661
+3 * 661 0 661
+4 +1 661 661
+4 * 661 661
+1 * 661 661

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7 1
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 334 0 334 1 0 0 1
+1 * 334
+3 * 334 0 334 0 0 1 0 0 1
+4 +1 334 334
+4 * 334 334
+1 * 334 334

fn=(82)
0x4039fc 117 334 0 334 1 0 0 1
+1 * 334
+3 * 334 0 334 1 0 0 1
+4 +1 334 334
+4 * 334 334
+1 * 334 334

fn=(200)
0x402eda 901 160 0 160
+1 * 160
+3 * 160
+4 * 160 0 160
+4 * 160 0 160
+4 +2 160 160
+4 * 160 160
+4 * 160 160
+4 * 160 160
+4 * 160
+3 * 160 0 0 0 0 0 0 0 0 160 8
jcnd=7/160 +51 +10 
* * 
+2 +3 153 153
+4 * 153 153
+4 * 153 153
+4 -1 153 153
+4 * 153
+3 * 153
+3 * 153 0 153
cfi=(3)
cfn=(222)
calls=153 0x403373 215 
* * 5814 1989 2142 0 10 3 0 10 3 153
+5 +2 153 153
+4 * 153 153
+4 * 153
+4 * 153 153
+4 * 153 0 153
+4 * 153
jump=153 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11217 3384 2936 45 13 9 45 13 9 815 77 41
+5 +2 160 160
+1 * 160 160

fn=(4)
0x4030b2 310 320 0 320 1 0 0 1
+1 * 320
+3 * 320 0 320
+2 * 320 0 320
+2 * 320 0 320
+1 * 320
+4 * 320 0 320 1 0 0 1
+4 * 320 0 320
+4 +2 320 320
+4 * 320
+3 * 320 0 320
cfn=(6)
calls=320 0x403b08 117 
* * 1920 960 640 1 0 1 1 0 1
+5 * 320
+3 * 320 0 320
cfi=(3)
cfn=(8)
calls=320 0x403afa -88 
* * 1920 960 640 1 0 0 1
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(10)
calls=320 0x402f54 645 
* * 4160 1920 640 1 1 0 1 1
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320
+3 * 320
+3 * 320 0 320
cfn=(12)
calls=320 0x403b16 134 
* * 137520 28768 27913 29 16 15 29 16 15 16706 572 640
+5 +4 320 320 0 1 0 0 1
+4 * 320
+3 * 320 0 320
cfn=(40)
calls=320 0x40333c 113 
* * 1920 960 640 2 0 0 2
+5 * 320
+3 * 320 320
+4 * 320 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(42)
calls=320 0x403ba4 565 
* * 8000 3200 2560 3 0 0 3
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(46)
calls=320 0x403b74 547 
* * 8000 3200 2560
+5 * 320
+3 * 320
+3 * 320
+3 * 320
+3 * 320 0 320 1 0 0 1
cfi=(11)
cfn=(48)
calls=320 0x403bd5 -60 
* * 129586 41460 39864 26 3 3 26 3 3 4380 283 636 79
+5 -3 320 320
+4 * 320 0 320
+4 * 320
jump=320 +28 +4 
* * 
+28 +4 320
+4 * 320 320
+1 * 320 320
+2 * 320 320
+2 * 320 320
+1 * 320 320

fn=(108)
0x403a98 565 320 0 320 1 0 0 1
+1 * 320
+3 * 320
+4 * 320 0 320
+4 +1 320 320
+4 * 320 320
+4 * 320 0 320
+4 * 320
+4 * 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfi=(10)
cfn=(110)
calls=320 0x404380 726 
* * 3200 1600 1280 1 0 0 1
+5 * 320 320
+4 * 320 320
+1 * 320 320

fn=(178)
0x402e74 414 320 0 320
+1 * 320
+3 * 320 0 320
+1 * 320
+4 * 320 0 320 1 0 0 1
+4 +2 320 320
+4 * 320
+3 * 320 0 320
cfn=(40)
calls=320 0x40333c 113 
* * 1920 960 640
+5 * 320
+3 * 320 320
+4 * 320 320
+4 * 320 320
+4 * 320 320
+3 -1 320
+3 * 320
+3 * 320 0 320
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=320 0x40334a 148 
* * 9920 3200 3840 2 0 0 2
+5 +1 320 320
+4 * 320
+3 * 320 0 320
cfn=(186)
calls=320 0x4032ca 159 
* * 63498 19252 12382 3 0 0 3 0 0 9692 201 640
+5 * 320
jump=320 +28 * 
* * 
+28 * 320 0 0 1 0 0 1
+4 * 320 320
+1 * 320 320
+1 * 320 320

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 327 0 327 1 0 0 1
+1 * 327 0 0 1 0 0 1
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 0 327 327
+5 0 327 0 0 0 0 0 0 0 0 327
+2 0 327 327
+4 0 327 327
+4 0 327
+5 0 327
+3 0 327
+3 0 327 0 327
fi=(6)
cfi=(5)
cfn=(100)
calls=327 0x40461a 99 
* 0 111426 18146 17194 33 23 25 33 23 25 17855 677 654
+5 0 327
fi=(6)
jump=327 +7 0 
* 0 
+7 0 327 327
+1 0 327 327

fn=(144)
0x402d9a 770 39440 0 39440
+1 * 39440
+3 * 39440 0 39440
+4 * 39440 0 39440
+4 +1 39440 39440
+4 * 39440 39440
+3 * 39440 39440
+4 * 39440
+4 * 39440
+3 * 39440 39440
+1 * 39440 39440

fn=(146)
0x402dba 770 39440 0 39440
+1 * 39440
+3 * 39440 0 39440 1 0 0 1
+4 * 39440 0 39440
+4 +1 39440 39440
+4 * 39440 39440
+3 * 39440 39440
+4 * 39440
+4 * 39440
+3 * 39440 39440
+1 * 39440 39440

fn=(192)
0x403296 79 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 320
+4 * 320
+3 * 320 0 320
cfi=(4)
cfn=(194)
calls=320 0x403d7e +42 
* * 4480 1600 1600 1 0 0 1
+5 * 320 320
+1 * 320 320

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fl=(12)
fn=(120)
0x4049e2 450 320 0 320
+1 * 320
+3 * 320 0 320
+1 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +10 320 320
+4 * 320
+3 * 320 0 320
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=320 0x404bc6 288 
* * 4800 1920 1600 3 0 0 3
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(122)
calls=320 0x404bc6 288 
* * 4800 1920 1600
+5 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=320 0x404be0 -36 
* * 99186 30900 28984 4 1 10 4 1 10 4380 246 636
+5 +1 320
+4 * 320 320
+1 * 320 320
+1 * 320 320

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 362 0 362
+1 * 362
+3 * 362
+4 * 362 0 362 1 0 0 1
+4 +1 362 362
+4 * 362
+3 * 362 0 362
cfi=(13)
cfn=(130)
calls=362 -33 -66 
* * 2172 1086 724 0 0 1 0 0 1
+5 * 362 362
+1 * 362 362

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640
+4 +1 640 640
+4 * 640
+3 * 640 0 640
cfi=(13)
cfn=(134)
calls=640 0x404e98 -58 
* * 10240 3840 3200 2 0 0 2
+5 * 640 640
+1 * 640 640

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +8 320 0 320
+4 +3 320 320
+4 * 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=320 0x404eb5 -22 
* * 64626 19380 17144 1 1 10 1 1 10 4380 246 636
+5 +1 320 320
+1 * 320 320

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 4 1 0 4 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 640 0 640 1 0 0 1
+1 * 640
+3 * 640
+4 * 640 0 640
+4 +1 640 640
+4 * 640
+3 * 640 0 640
cfi=(13)
cfn=(124)
calls=640 0x404d36 -77 
* * 3840 1920 1280 2 0 0 2
+5 * 640 640
+1 * 640 640

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 640 0 640 1 0 0 1
+1 * 640
+3 * 640
+4 * 640 0 640 1 0 0 1
+4 +1 640 640
+4 * 640
+3 * 640 0 640
cfi=(13)
cfn=(58)
calls=640 0x404d8f -77 
* * 3840 1920 1280 1 0 0 1
+5 * 640 640
+1 * 640 640

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 334 0 334
+1 * 334
+3 * 334
+4 * 334 0 334 1 0 0 1
+4 * 334 0 334
+4 * 334 0 334
+4 +2 334 334
+4 * 334 334
+4 * 334
+3 * 334
+3 * 334
+4 * 334 0 334
+4 +1 334 334
+5 * 334 0 0 0 0 0 0 0 0 334
jcnd=7/334 +33 +2 
* * 
+2 +1 327 327
+4 * 327
+8 * 327 327
+4 * 327 327
+4 * 327
+3 * 327 0 0 1 0 0 1
+3 * 327 0 327 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=327 0x3877c83840 0 
* * 56398 16041 15392 11 2 5 11 2 5 4122 287 322 79
* * 327 327 0 1 1 0 1 1 0 0 0 327
+5 +1 334 334
+4 * 334
+8 * 334 334
+4 * 334
+3 +1 334 334
+1 * 334 334

fn=(140)
0x404eb5 368 334 0 334
+1 * 334
+3 * 334
+4 * 334 0 334 1 0 0 1
+4 * 334 0 334
+4 * 334 0 334 0 0 1 0 0 1
+4 +2 334 334
+4 * 334 334
+4 * 334
+3 * 334
+3 * 334
+4 * 334 0 334
+4 +1 334 334
+5 * 334 0 0 0 0 0 0 0 0 334
jcnd=7/334 +33 +2 
* * 
+2 +1 327 327
+4 * 327
+8 * 327 327
+4 * 327 327
+4 * 327
+3 * 327
+3 * 327 0 327
cob=(2)
cfi=(9)
cfn=(78)
calls=327 0x3877c83840 0 
* * 56398 16041 15392 0 1 11 0 1 11 4122 251 322
* * 327 327 0 0 0 0 0 0 0 0 0 327
+5 +1 334 334
+4 * 334
+8 * 334 334
+4 * 334
+3 +1 334 334
+1 * 334 334

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 320 0 320
+1 * 320
+3 * 320
+4 * 320 0 320 1 0 0 1
+4 * 320 0 320
+4 * 320 0 320
+4 +8 320 0 320
+4 +3 320 320
+4 * 320 320
+4 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(74)
calls=320 0x404f37 -22 
* * 64626 19380 17144 14 3 2 14 3 2 4380 283 636 79
+5 +1 320 320
+1 * 320 320

fn=(126)
0x404be0 424 320 0 320
+1 * 320
+3 * 320 0 320
+2 * 320 0 320
+1 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +4 320 320
+4 * 320
+3 * 320 0 320
cfn=(128)
calls=320 0x404878 277 
* * 4800 1920 1600 1 0 0 1
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(132)
calls=320 0x404d44 277 
* * 8000 2880 2560 2 0 0 2
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(132)
calls=320 0x404d44 277 
* * 8000 2880 2560
+5 * 320
+3 * 320
+3 * 320
+3 * 320 0 320
cfn=(138)
calls=320 0x404d5e -49 
* * 69426 20980 19064 1 1 10 1 1 10 4380 246 636
+5 +1 320
+4 * 320 320
+1 * 320 320
+2 * 320 320
+1 * 320 320

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 320 0 320
+1 * 320
+3 * 320 0 320
+1 * 320
+4 * 320 0 320 1 0 0 1
+4 * 320 0 320
+4 * 320 0 320
+4 +10 320 320
+4 * 320
+3 * 320 0 320
cfn=(56)
calls=320 0x404c38 288 
* * 4800 1920 1600 3 0 0 3
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(56)
calls=320 0x404c38 288 
* * 4800 1920 1600
+5 * 320 320
+4 * 320
+3 * 320
+3 * 320 0 320
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=320 0x404c52 -36 
* * 99186 30900 28984 20 3 3 20 3 3 4380 283 636 79
+5 +1 320
+4 * 320 320
+1 * 320 320
+1 * 320 320

fn=(60)
0x404c52 424 320 0 320
+1 * 320
+3 * 320 0 320
+2 * 320 0 320
+1 * 320
+4 * 320 0 320
+4 * 320 0 320
+4 * 320 0 320
+4 +4 320 320
+4 * 320
+3 * 320 0 320
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=320 0x40492d 277 
* * 4800 1920 1600 2 0 0 2
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=320 0x404d9d 277 
* * 8000 2880 2560 2 0 1 2 0 1
+5 * 320
+3 * 320 320
+4 * 320
+3 * 320 0 320
cfn=(66)
calls=320 0x404d9d 277 
* * 8000 2880 2560
+5 * 320
+3 * 320
+3 * 320
+3 * 320 0 320
cfn=(72)
calls=320 0x404db7 -49 
* * 69426 20980 19064 15 3 2 15 3 2 4380 283 636 79
+5 +1 320
+4 * 320 320
+1 * 320 320
+2 * 320 320
+1 * 320 320

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 4 0 0 4 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 362 0 362 1 0 0 1
+1 * 362
+3 * 362
+4 * 362 0 362
+4 +1 362 362
+4 * 362
+3 * 362 0 362 1 0 0 1
cfi=(13)
cfn=(64)
calls=362 -33 -66 
* * 2172 1086 724
+5 * 362 362
+1 * 362 362

fn=(66)
0x404d9d 277 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640
+4 +1 640 640
+4 * 640
+3 * 640 0 640
cfi=(13)
cfn=(68)
calls=640 0x404f1a -58 
* * 10240 3840 3200 2 0 1 2 0 1
+5 * 640 640
+1 * 640 640

fn=(240)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 4 0 0 4 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 640 0 640 1 0 0 1
+1 * 640
+3 * 640 0 640
+4 +1 640 640
+4 * 640 640
+1 * 640 640

fn=(110)
0x404380 726 640 0 640 1 0 0 1
+1 * 640
+3 * 640 0 640
+4 * 640 0 640
+4 * 640 640
+4 * 640 640
+3 * 640 640
+4 * 640 0 640
+3 * 640 640
+1 * 640 640

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 640 0 640 1 0 0 1
+1 * 640
+3 * 640 0 640
+4 +1 640 640
+4 * 640 640
+1 * 640 640

fn=(44)
0x404468 726 640 0 640
+1 * 640
+3 * 640 0 640
+4 * 640 0 640
+4 * 640 640
+4 * 640 640
+3 * 640 640
+4 * 640 0 640 1 0 0 1
+3 * 640 640
+1 * 640 640

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(262)
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 327 0 327 1 0 0 1
+1 * 327
+3 * 327 0 327
+4 * 327 0 327
+4 * 327 327
+1 * 327 327

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 327 0 327 1 0 0 1
+1 * 327
+3 * 327 0 327
+4 * 327 0 327 1 0 0 1
+4 * 327 327
+1 * 327 327

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 327 0 327 1 0 0 1
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 +4 327 327
+4 * 327 327
+4 * 327
+3 * 327
+3 * 327 0 327
cfn=(184)
calls=327 0x40454c -14 
* * 1962 654 981 1 0 0 1
+5 +2 327 327
+1 * 327 327

fn=(150)
0x40326c 148 327 0 327
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 * 327 0 327
+4 +3 327 327 0 1 0 0 1
+4 * 327 327
+4 * 327
+3 * 327
+3 * 327 0 327
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=327 0x403d1a -29 
* * 5886 1962 2289 3 0 0 3
+5 +1 327 327
+1 * 327 327

fn=(180)
0x40334a 148 327 0 327
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 * 327 0 327
+4 +3 327 327
+4 * 327 327
+4 * 327
+3 * 327
+3 * 327 0 327
cfn=(182)
calls=327 0x403dcc -29 
* * 5886 1962 2289 2 0 0 2
+5 +1 327 327
+1 * 327 327

fn=(152)
0x403d1a 122 327 0 327 1 0 0 1
+1 * 327
+3 * 327
+4 * 327 0 327
+4 * 327 0 327
+4 +4 327 327
+4 * 327 327
+4 * 327
+3 * 327
+3 * 327 0 327
cfn=(154)
calls=327 0x4044f8 -14 
* * 1962 654 981 2 0 0 2
+5 +2 327 327
+1 * 327 327

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2065 375 383 2 2 5 2 2 5 289 35 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 1 3 0 1 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 4 3 0 4 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 16 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3240 657 611 22 12 5 22 12 5 528 68 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 5 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 528 528 0 1 0 0 1
+6 0 528
+2 0 528 0 0 0 0 0 0 0 0 528 33
+2 0 528 528

fn=(38) _int_malloc
0x3877c79a00 0 654 0 654 1 0 0 1
+2 0 654
+3 0 654 0 654
+2 0 654 0 654
+2 0 654 0 654 0 0 1 0 0 1
+2 0 654
+3 0 654 0 654
+1 0 654 0 654
+1 0 654
+4 0 654
+4 0 654 0 0 0 0 0 0 0 0 654
+6 0 654
+4 0 654
+6 0 654
+3 0 654
+4 0 654
+4 0 654
+4 0 654
+3 0 654 0 0 0 0 0 0 0 0 654
+6 0 654 654 0 1 1 0 1 1
+7 0 654 0 0 0 0 0 0 0 0 654 5
jcnd=532/654 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 528
+4 0 528 528
+1 0 528 528
+1 0 528 528
+2 0 528 528
+2 0 528 528
+2 0 528 528
+2 0 528 528
+7 0 549
+7 0 549 0 0 1 0 0 1 0 0 549 5
jcnd=2/549 0x3877c79b70 0 
* 0 
+2 0 547
+3 0 547
+5 0 547
+3 0 547
+4 0 547 0 547
+4 0 547
+2 0 547
+5 0 547 547 0 0 9 0 0 9
+4 0 547
+3 0 547 0 0 0 0 0 0 0 0 547
jcnd=547/547 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 931 251 199 8 1 0 8 1 0 193 28
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 548 0 0 1 0 0 1
+3 0 548
+3 0 548
+3 0 548
+4 0 548
+3 0 548
+4 0 548 0 548
+5 0 548
+3 0 548 0 548
+4 0 548 0 548
+4 0 548 0 548
+5 0 548
+3 0 548
+3 0 548
+3 0 548
+3 0 548
+4 0 548
+4 0 548 0 0 1 0 0 1
+4 0 548 0 548
+4 0 548
+4 0 548 0 548
+5 0 548 0 548
+5 0 548
+3 0 548
+3 0 548 0 548
+5 0 548
+5 0 548
+3 0 548 0 548
+4 0 548 0 548
+4 0 548
+6 0 548 0 548
+4 0 548 0 548
+5 0 548 0 0 1 0 0 1
+3 0 548
+3 0 548
+3 0 548
jump=548 +87 0 
* 0 
+8 0 498
+3 0 498
+4 0 498
+2 0 498
+2 0 498
+3 0 498
+3 0 498
+3 0 498
+2 0 498
+2 0 498
+5 0 498
+2 0 498 498 0 0 2 0 0 2
+4 0 498
+3 0 498
+4 0 498 0 498
+4 0 498 0 498
+8 0 498
+7 0 498 0 498
+4 0 498 0 498
+4 0 498 0 498
+4 0 498 0 0 0 0 0 0 0 0 498
-38 0 249
+3 0 249
+4 0 249 0 249
+4 0 249 0 249
+8 0 249
+7 0 249 0 249
+4 0 249 0 249
+4 0 249 0 249
+4 0 249 0 0 0 0 0 0 0 0 249
+6 0 1296 1296 0 1 0 0 1
+4 0 1296
+3 0 1296 0 0 0 0 0 0 0 0 1296 20
jcnd=507/1296 0x3877c79ef0 0 
* 0 
+6 0 789 789
+4 0 789 789
+4 0 789
+4 0 789 0 0 0 0 0 0 0 0 789
+6 0 789 789 0 1 1 0 1 1
+7 0 789 0 0 0 0 0 0 0 0 789 2
+6 0 789
+4 0 789
+7 0 789 0 0 0 0 0 0 0 0 789 7
jcnd=7/789 +11 0 
* 0 
+2 0 782
+3 0 782 0 0 0 0 0 0 0 0 782 312
jcnd=526/782 0x3877c79e28 0 
* 0 
+6 0 768
+3 0 768 0 768
+4 0 768 0 768
+5 0 768 0 0 0 0 0 0 0 0 768 18
jcnd=21/768 0x3877c7a090 0 
* 0 
+6 0 747
+7 0 747 0 0 0 0 0 0 0 0 747 12
jcnd=498/747 0x3877c79c50 0 
* 0 
+6 0 249 0 0 1 0 0 1
+3 0 249
+4 0 249
+4 0 249 0 0 0 0 0 0 0 0 249 8
jcnd=181/249 0x3877c79db0 0 
* 0 
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 1 0 0 1
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 66
jcnd=68/68 0x3877c79e15 0 
* 0 
-36 0 181
+2 0 181
+2 0 181
+3 0 181
+3 0 181
+8 0 181
+3 0 181
+2 0 181
+2 0 181
+4 0 181 181
+4 0 181
+3 0 181 0 0 0 0 0 0 0 0 181
jcnd=181/181 0x3877c79e15 0 
* 0 
0x3877c79db0 0 181 0 0 1 0 0 1
+3 0 181
+4 0 181
+4 0 181 0 0 0 0 0 0 0 0 181
+2 0 181
+3 0 181 0 0 1 0 0 1
+7 0 181
jump=181 0x3877c79d18 0 
* 0 
+78 0 249 0 249
+4 0 249 0 249
+4 0 249
+3 0 249
jump=249 0x3877c79c73 0 
* 0 
+8 0 526 526 0 1 0 0 1
+4 0 526
+3 0 526 0 0 0 0 0 0 0 0 526 15
jcnd=259/526 0x3877c79ce1 0 
* 0 
+6 0 267 267
+5 0 267 0 0 0 0 0 0 0 0 267 5
jcnd=246/267 0x3877c79ce1 0 
* 0 
+6 0 21 0 0 1 0 0 1
+3 0 21
+3 0 21
+3 0 21
+7 0 21 0 21
+4 0 21 0 21
+4 0 21
+3 0 21 0 21
+4 0 21 0 21 0 0 17 0 0 17
+4 0 21 0 21
+4 0 21 0 0 0 0 0 0 0 0 21 4
jcnd=9/21 +18 0 
* 0 
+2 0 12 0 12 0 0 1 0 0 1
+8 0 12 0 12
+8 0 12
+7 0 12 0 12 1 0 0 1
+4 0 12
+3 0 12
+3 0 12
+3 0 12
+4 0 12
+3 0 12
+4 0 12
+3 0 12
+3 0 12
+4 0 12 0 12
+4 0 12 0 12 0 0 1 0 0 1
+4 0 12
+4 0 12
+3 0 12 0 12
cfn=(104)
calls=12 0x3877c77180 0 
* 0 48 24 0 0 0 0 0 0 0 12
-56 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9 0 0 2 0 0 2
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
+5 0 21
+3 0 21
jump=21 0x3877c79ae3 0 
* 0 
+55 0 507 0 0 1 0 0 1
+7 0 507
+3 0 507 0 0 0 0 0 0 0 0 507 3
jcnd=2/507 0x3877c7a0b0 0 
* 0 
+6 0 507 507 0 1 0 0 1
+4 0 507
+3 0 507
+3 0 507
+2 0 507
+4 0 507
+3 0 507
+3 0 507
+2 0 507
+2 0 507
+2 0 507
+2 0 507 507 0 0 1 0 0 1
+8 0 507
+5 0 507
+5 0 507
+2 0 507 0 0 0 0 0 0 0 0 507
-2 0 268
+2 0 268 0 0 0 0 0 0 0 0 268
+2 0 775
+2 0 775 0 0 0 0 0 0 0 0 775 21
jcnd=331/775 +64 0 
* 0 
+2 0 444
+8 0 444
+3 0 444
+3 0 444 0 0 0 0 0 0 0 0 444
-6 0 247
+3 0 247
+3 0 247 0 0 0 0 0 0 0 0 247 2
+2 0 691
+2 0 691 691
+8 0 691
+2 0 691 0 0 0 0 0 0 0 0 691 11
jcnd=247/691 -20 0 
* 0 
+2 0 444
+2 0 444
+5 0 444
+3 0 444
+3 0 444
+2 0 444
+2 0 444
+5 0 444 0 0 0 0 0 0 0 0 444
+2 0 444
+2 0 444
+4 0 444
+2 0 444
+2 0 444 0 0 0 0 0 0 0 0 444 1
jcnd=443/444 -8 0 
* 0 
-8 0 4652
+4 0 4652
+2 0 4652
+2 0 4652 0 0 0 0 0 0 0 0 4652 229
jcnd=3918/4652 -8 0 
* 0 
-2 0 331 0 0 1 0 0 1
+2 0 331 0 0 0 0 0 0 0 0 331 17
jcnd=291/331 -8 0 
* 0 
+2 0 775 775 0 0 8 0 0 8
+4 0 775 0 0 1 0 0 1
+3 0 775 0 0 0 0 0 0 0 0 775 249
jcnd=507/775 0x3877c7a1cf 0 
* 0 
+6 0 268
+2 0 268
+4 0 268
+2 0 268
+2 0 268
+2 0 268 0 268
+8 0 268
jump=268 0x3877c79f30 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 507 507 0 1 2 0 1 2
+4 0 507 507 0 0 1 0 0 1
+4 0 507
+3 0 507 507
+4 0 507
+4 0 507
+3 0 507
+3 0 507 507
+4 0 507 0 0 0 0 0 0 0 0 507
+6 0 507 507
+4 0 507 0 0 0 0 0 0 0 0 507
+6 0 507 507 0 1 0 0 1
+8 0 507 0 507
+4 0 507 0 507
+4 0 507 0 0 0 0 0 0 0 0 507 131
jcnd=255/507 +38 0 
* 0 
+2 0 252 252 0 0 2 0 0 2
+4 0 252
+3 0 252 0 0 0 0 0 0 0 0 252
+2 0 252 252
+5 0 252 0 0 0 0 0 0 0 0 252
+6 0 252 252
+4 0 252 0 252
+4 0 252 252
+4 0 252 0 252
+4 0 252
+4 0 252 0 0 0 0 0 0 0 0 252
-4 0 255
+4 0 255 0 0 0 0 0 0 0 0 255 4
jcnd=16/255 0x3877c7a2e3 0 
* 0 
+6 0 491 491
+4 0 491 491 0 1 0 0 1
+4 0 491 0 0 0 0 0 0 0 0 491
+6 0 491
+4 0 491
+7 0 491 0 491 0 0 6 0 0 6
+4 0 491 0 491
+4 0 491 0 491
+4 0 491 0 491
+4 0 491 0 0 0 0 0 0 0 0 491 5
jcnd=2/491 +7 0 
* 0 
+2 0 489 0 489
+5 0 489
+7 0 489 0 0 0 0 0 0 0 0 489 1
jcnd=240/489 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2 2
jcnd=2/2 +18 0 
* 0 
+2 0 249 0 249 0 0 9 0 0 9
+8 0 249 0 249 1 0 0 1
+8 0 249
+7 0 249 0 249 0 0 3 0 0 3
+4 0 249
+3 0 249
+3 0 249
+4 0 249
+3 0 249
+4 0 249
+3 0 249
+3 0 249
+4 0 249 0 249
+4 0 249 0 249
+4 0 249
jump=249 +71 0 
* 0 
-46 0 242
+7 0 242 0 242
+4 0 242
+3 0 242
+3 0 242
+4 0 242
+3 0 242
+4 0 242
+3 0 242
+3 0 242
+4 0 242 0 242
+4 0 242 0 242
+4 0 242
jump=242 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 16
+7 0 16 0 16
+6 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +7 0 
* 0 
+7 0 507
+4 0 507 0 0 1 0 0 1
+3 0 507
+3 0 507 0 507
cfn=(104)
calls=507 0x3877c77180 0 
* 0 2028 1014 0 1 0 0 1 0 0 507 33
+5 0 507
+3 0 507
jump=507 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 654 0 654 1 0 0 1
+5 0 654 0 654
+5 0 654
+3 0 654 0 654
+5 0 654
+4 0 654 654 0 0 1 0 0 1
+7 0 654 654 0 0 1 0 0 1
+3 0 654
+3 0 654 0 0 0 0 0 0 0 0 654
+6 0 654 654 0 0 1 0 0 1
+7 0 654 654 0 1 1 0 1 1
+4 0 654
+3 0 654 0 0 0 0 0 0 0 0 654
+2 0 654 654 0 0 1 0 0 1
+3 0 654
+3 0 654 0 0 0 0 0 0 0 0 654
jcnd=654/654 +97 0 
* 0 
+18 0 654
+3 0 654
+3 0 654 0 654
cfn=(38)
calls=654 0x3877c79a00 0 
* 0 164283 20372 24104 41 33 40 41 33 40 26675 1245
+5 0 654
+3 0 654
+3 0 654 0 0 0 0 0 0 0 0 654
+2 0 654
+3 0 654 0 0 0 0 0 0 0 0 654
+2 0 654
+3 0 654 0 0 0 0 0 0 0 0 654 3
+2 0 654 654
+7 0 654 0 0 0 0 0 0 0 0 654
jcnd=654/654 +13 0 
* 0 
+13 0 654 0 654
+2 0 654 0 0 0 0 0 0 0 0 654 36
+6 0 654
+3 0 654 654
+4 0 654 654
+5 0 654 654
+5 0 654
+4 0 654 654
+1 0 654 0 0 1 0 0 1
+5 0 654 654 0 0 1 0 0 1
+7 0 654 0 0 0 0 0 0 0 0 654
jcnd=654/654 +14 0 
* 0 
+14 0 654 0 654 1 0 0 1
+3 0 654 0 0 0 0 0 0 0 0 654
+6 0 654
jump=654 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 654 0 654 1 0 0 1
+2 0 654
+3 0 654
+3 0 654 0 654
+2 0 654
+3 0 654 0 654
+1 0 654
+3 0 654 0 654
+1 0 654
+3 0 654
+4 0 654
+3 0 654 0 0 0 0 0 0 0 0 654
+6 0 654
+4 0 654
+3 0 654 0 0 0 0 0 0 0 0 654 4
jcnd=10/654 0x3877c838d1 0 
* 0 
+2 0 644
+3 0 644
+3 0 644
+3 0 644
+3 0 644
+3 0 644 0 0 0 0 0 0 0 0 644
jcnd=644/644 +41 0 
* 0 
+41 0 644 0 0 1 0 0 1
+3 0 644 0 0 0 0 0 0 0 0 644
jcnd=644/644 0x3877c839c0 0 
* 0 
+24 0 644
+3 0 644
+4 0 644
+3 0 644
+3 0 644
+3 0 644
+3 0 644
+3 0 644 0 0 0 0 0 0 0 0 644 349
jcnd=328/644 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 326
+10 0 326 326 0 0 2 0 0 2
+3 0 326
+4 0 326 0 326
+3 0 326
+4 0 326
+4 0 326 0 0 0 0 0 0 0 0 326
jcnd=326/326 -18 0 
* 0 
-18 0 1034 1034
+3 0 1034
+4 0 1034 0 1034
+3 0 1034
+4 0 1034
+4 0 1034 0 0 0 0 0 0 0 0 1034 8
jcnd=708/1034 -18 0 
* 0 
+2 0 654
+4 0 654
+3 0 654 654
+1 0 654 654
+1 0 654 654
+2 0 654 654 0 1 0 0 1
+2 0 654 654
0x3877c839c0 0 644 0 0 1 0 0 1
+3 0 644
+3 0 644
+3 0 644
+4 0 644 0 644 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=644 0x3877c89b20 0 
* 0 75734 27452 26164 6 1 15 6 1 15 3634 177 644 79
+5 0 644
jump=644 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 654 654 0 1 1 0 1 1
+7 0 654 654 0 0 1 0 0 1
+3 0 654
+3 0 654 0 0 1 0 0 1 0 0 654
+6 0 654
+3 0 654 0 0 0 0 0 0 0 0 654
+6 0 654 654
+4 0 654
+4 0 654
+2 0 654 0 0 0 0 0 0 0 0 654
+2 0 654
+2 0 654
+7 0 654 0 0 0 0 0 0 0 0 654
jcnd=654/654 +14 0 
* 0 
+14 0 654
+2 0 654
cfn=(170) _int_free
calls=654 0x3877c78650 0 
* 0 66731 17953 10719 17 2 0 17 2 0 16061 280

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=15/20 +18 0 
* 0 
+2 0 5 0 5
+8 0 5 0 5
+8 0 5
+3 0 5 0 5
+4 0 5 0 5
+4 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5
+3 0 5
+3 0 5 0 0 0 0 0 0 0 0 5 2
jcnd=2/5 0x3877c75f78 0 
* 0 
-29 0 15
+3 0 15 0 15
+4 0 15 0 15
+4 0 15
+4 0 15 0 15
+4 0 15 0 15
+4 0 15
+3 0 15
+3 0 15 0 0 0 0 0 0 0 0 15 7
jcnd=5/15 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=9/13 +15 0 
* 0 
+2 0 4 4
+4 0 4
+3 0 4 0 0 0 0 0 0 0 0 4
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 654 0 654 1 0 0 1
+2 0 654 0 654
+2 0 654 0 654
+2 0 654
+3 0 654 0 654
+2 0 654 0 654
+1 0 654 0 654
+1 0 654
+3 0 654
+4 0 654 654
+4 0 654 0 654
+4 0 654
+3 0 654
+4 0 654
+3 0 654
+3 0 654
+3 0 654 0 0 1 0 0 1 0 0 654
+6 0 654
+4 0 654 0 0 0 0 0 0 0 0 654
+6 0 654
+4 0 654 0 0 0 0 0 0 0 0 654
+6 0 654 654
+7 0 654 0 0 0 0 0 0 0 0 654 2
jcnd=530/654 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 530
+2 0 530 0 0 0 0 0 0 0 0 530
+6 0 530 530 0 1 0 0 1
+4 0 530
+3 0 530
+2 0 530 0 0 0 0 0 0 0 0 530
jcnd=530/530 0x3877c78a40 0 
* 0 
+6 0 530 530
+4 0 530
+3 0 530 0 0 0 0 0 0 0 0 530
+6 0 530 530
+5 0 530
+4 0 530 0 0 0 0 0 0 0 0 530
jcnd=530/530 0x3877c7907c 0 
* 0 
+6 0 530 530
+5 0 530
+4 0 530 0 0 0 0 0 0 0 0 530
+6 0 530
+4 0 530 0 0 1 0 0 1 0 0 530
+6 0 530
+4 0 530 530
+7 0 530 0 0 0 0 0 0 0 0 530
+6 0 530 530
+6 0 530
+2 0 530 0 0 0 0 0 0 0 0 530
+6 0 530 530
+4 0 530 0 0 0 0 0 0 0 0 530 5
jcnd=526/530 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=4/4 +15 0 
* 0 
+15 0 530 530 0 1 0 0 1
+4 0 530 0 0 0 0 0 0 0 0 530
+6 0 530 530 0 0 1 0 0 1
+6 0 530 0 0 1 0 0 1 0 0 530 21
jcnd=41/530 0x3877c78a78 0 
* 0 
+6 0 489 489
+5 0 489 489
+5 0 489 489
+4 0 489 0 0 0 0 0 0 0 0 489
+6 0 489 489
+4 0 489 0 0 0 0 0 0 0 0 489
+6 0 489 489
+9 0 489 0 489
+4 0 489 0 489
+4 0 489 0 0 0 0 0 0 0 0 489 239
jcnd=239/489 +16 0 
* 0 
+2 0 250 250
+5 0 250
+3 0 250 0 0 1 0 0 1 0 0 250 2
+6 0 489
+3 0 489
+4 0 489 489
+4 0 489 489
+4 0 489 0 0 0 0 0 0 0 0 489
-12 0 41
+4 0 41 41
+4 0 41 41
+4 0 41 0 0 0 0 0 0 0 0 41
+6 0 530
+7 0 530 0 530
+4 0 530 0 530
+4 0 530 0 0 0 0 0 0 0 0 530 8
jcnd=279/530 +18 0 
* 0 
+2 0 251 0 251
+8 0 251 0 251
+8 0 251 0 251
+4 0 251
+3 0 251 0 251 1 0 0 1
+4 0 251
+4 0 251 0 251
+4 0 251 0 251
+4 0 251
+7 0 251 0 0 0 0 0 0 0 0 251
jcnd=251/251 0x3877c78b20 0 
* 0 
-30 0 279 0 279
+4 0 279
+3 0 279 0 279
+4 0 279
+4 0 279 0 279
+4 0 279 0 279
+4 0 279
+7 0 279 0 0 0 0 0 0 0 0 279
jcnd=279/279 0x3877c78b20 0 
* 0 
0x3877c78a40 0 530 0 0 1 0 0 1
+5 0 530 530
+4 0 530 530
+7 0 530 0 0 0 0 0 0 0 0 530
jcnd=530/530 +16 0 
* 0 
+16 0 530 0 530
+5 0 530 0 0 0 0 0 0 0 0 530
+6 0 530
+3 0 530
jump=530 0x3877c7878f 0 
* 0 
+10 0 41 0 41
+6 0 41 0 0 1 0 0 1
jump=41 0x3877c78885 0 
* 0 
0x3877c78b20 0 530 530 0 1 0 0 1
+4 0 530
+2 0 530 0 0 0 0 0 0 0 0 530
+6 0 530 530
+7 0 530 0 0 0 0 0 0 0 0 530
jcnd=530/530 +15 0 
* 0 
+15 0 530 0 530 1 0 0 1
+4 0 530 0 0 0 0 0 0 0 0 530
+6 0 530
+4 0 530 530
+1 0 530 530
+1 0 530 530
+2 0 530 530
+2 0 530 530
+2 0 530 530
+2 0 530 530
0x3877c7907c 0 530 530 0 1 1 0 1 1
+4 0 530 0 0 1 0 0 1
+7 0 530
+4 0 530
+3 0 530
+3 0 530 0 0 0 0 0 0 0 0 530
jcnd=530/530 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 644 0 0 1 0 0 1
+7 0 644
+3 0 644
+3 0 644 644 0 0 1 0 0 1
+4 0 644
+4 0 644 0 0 0 0 0 0 0 0 0 0 644 79
jump=72 0x3877c89be8 0 
* 0 
jump=88 0x3877c89bd0 0 
* 0 
jump=80 0x3877c89bb8 0 
* 0 
jump=80 +11 0 
* 0 
jump=80 0x3877c89c48 0 
* 0 
jump=82 0x3877c89c30 0 
* 0 
jump=80 0x3877c89c18 0 
* 0 
jump=82 0x3877c89c00 0 
* 0 
+11 0 80 80
+3 0 80
+4 0 80
+4 0 80 80
+4 0 80
+4 0 80 0 80
+4 0 80
+9 0 80 80
+4 0 80 0 80
+4 0 80 80
+4 0 80 0 80
+4 0 80 80
+4 0 80 0 80
+4 0 80 80
+4 0 80 0 80
+4 0 80
+4 0 80
+4 0 80 0 0 0 0 0 0 0 0 80
jcnd=8/80 0x3877c89c60 0 
* 0 
-40 0 3150 3150
+4 0 3150 0 3150
+4 0 3150 3150
+4 0 3150 0 3150 0 0 3 0 0 3
+4 0 3150 3150
+4 0 3150 0 3150 0 0 5 0 0 5
+4 0 3150 3150
+4 0 3150 0 3150
+4 0 3150
+4 0 3150
+4 0 3150 0 0 0 0 0 0 0 0 3150 171
jcnd=608/3150 0x3877c89c60 0 
* 0 
-32 0 82 82
+4 0 82 0 82
+4 0 82 82
+4 0 82 0 82
+4 0 82 82
+4 0 82 0 82
+4 0 82
+4 0 82
+4 0 82 0 0 0 0 0 0 0 0 82
jcnd=10/82 0x3877c89c60 0 
* 0 
-24 0 80 80
+4 0 80 0 80
+4 0 80 80
+4 0 80 0 80
+4 0 80
+4 0 80
+4 0 80 0 0 0 0 0 0 0 0 80
jcnd=8/80 0x3877c89c60 0 
* 0 
-16 0 82 82 0 1 0 0 1
+4 0 82 0 82
+4 0 82 0 0 1 0 0 1
+4 0 82
+4 0 82 0 0 0 0 0 0 0 0 82 6
jcnd=10/82 0x3877c89c60 0 
* 0 
+6 0 2830
+4 0 2830 2830
+3 0 2830 0 2830
+3 0 2830 2830
+4 0 2830 0 2830 0 0 1 0 0 1
+4 0 2830 2830
+4 0 2830 0 2830 0 0 1 0 0 1
+4 0 2830 2830
+4 0 2830 0 2830 0 0 3 0 0 3
+4 0 2830
jump=2830 -80 0 
* 0 
-30 0 72 72
+3 0 72 0 72
+3 0 72 72
+4 0 72 0 72
+4 0 72 72
+4 0 72 0 72 0 0 1 0 0 1
+4 0 72 72
+4 0 72 0 72
+4 0 72
jump=72 -80 0 
* 0 
-24 0 88 88
+4 0 88 0 88
+4 0 88 88
+4 0 88 0 88
+4 0 88 88
+4 0 88 0 88 0 0 1 0 0 1
+4 0 88
jump=88 -80 0 
* 0 
-16 0 80 80
+4 0 80 0 80
+4 0 80 80
+4 0 80 0 80
+4 0 80
jump=80 -80 0 
* 0 
+8 0 80 80
+3 0 80
+4 0 80 0 0 1 0 0 1
+4 0 80
+4 0 80
jump=80 -39 0 
* 0 
+9 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+6 0 88 88
+3 0 88
+4 0 88
jump=88 -72 0 
* 0 
+8 0 72
+4 0 72 72
+3 0 72 0 0 0 0 0 0 0 0 72
+2 0 72
+4 0 72
jump=72 -99 0 
* 0 
+11 0 82 82 0 1 0 0 1
+3 0 82
+4 0 82
+4 0 82
+4 0 82
jump=82 0x3877c89b78 0 
* 0 
+9 0 80 80
+3 0 80
+4 0 80
+4 0 80
+4 0 80
jump=80 0x3877c89b70 0 
* 0 
+9 0 82 82
+3 0 82
+4 0 82
+4 0 82
+4 0 82
jump=82 0x3877c89b68 0 
* 0 
+9 0 80 80
+3 0 80
+4 0 80
+4 0 80
+4 0 80
jump=80 0x3877c89b60 0 
* 0 
+9 0 644 0 644 1 0 0 1
+3 0 644 644

totals: 2872028 1121092 679294 235 78 79 235 78 79 104866 2603 3914 79
