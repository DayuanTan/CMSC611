version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 108


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 137539842 - 137661980
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 79 0 79 1 0 0 1
+1 * 79
+3 * 79
+4 * 79 0 79
+4 * 79 0 79
+4 +1 79 79
+4 * 79
+3 * 79 0 79
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=79 0x402d74 645 
* * 1027 474 158
+5 * 79
+3 * 79 0 79
+3 +1 79 79
+6 * 79 0 79
+3 * 79 79
+6 * 79 0 79
+3 +1 79 79
+6 * 79 0 79 1 0 0 1
+3 * 79 79
+6 * 79 0 79
+3 +2 79 0 79
+7 * 79
jump=79 +86 * 
* * 
+2 +1 3239 3239
+3 * 3239
+3 * 3239 3239
+4 * 3239
+3 * 3239
+3 * 3239 0 3239
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=3239 0x402d9a 770 
* * 35629 16195 9717
+5 * 3239 3239
+4 * 3239 3239
+5 * 3239
+4 * 3239 0 3239
+5 +1 3239 3239
+3 * 3239
+3 * 3239 3239
+4 * 3239
+3 * 3239
+3 * 3239 0 3239
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=3239 0x402dba 770 
* * 35629 16195 9717 1 0 0 1
+5 * 3239 3239
+2 * 3239
+4 * 3239 3239
+5 * 3239
+4 * 3239 0 3239
+5 -2 3239 0 3239
+4 * 3239 3239
+3 * 3239
+3 * 3239 3239
+3 * 3239 0 0 0 0 0 0 0 0 3239 80
jcnd=3160/3239 -93 +1 
* * 
-9 * 79 79 0 1 0 0 1
+3 * 79
+3 * 79 79
+3 * 79 0 0 0 0 0 0 0 0 79
jcnd=79/79 -93 +1 
* * 
+2 +4 79 79
+3 * 79
+3 * 79
+4 * 79 79 0 1 0 0 1
+5 * 79
+4 * 79
+3 * 79 0 79
+5 +1 79 79
+3 * 79
+3 * 79
+4 * 79 79
+5 * 79
+4 * 79
+3 * 79 0 79
+5 +1 79 0 79
+7 * 79
jump=79 0x4016ee * 
* * 
+2 +1 3239 3239
+3 * 3239
+3 * 3239 3239
+4 * 3239
+3 * 3239 0 0 1 0 0 1
+3 * 3239 0 3239
cfi=(2)
cfn=(146)
calls=3239 0x402dba 770 
* * 35629 16195 9717
+5 * 3239 3239
+2 * 3239
+4 * 3239 3239
+5 * 3239 0 3239
+5 +1 3239 3239
+3 * 3239
+3 * 3239 3239
+4 * 3239
+3 * 3239
+3 * 3239 0 3239
cfi=(2)
cfn=(144)
calls=3239 0x402d9a 770 
* * 35629 16195 9717
+5 * 3239 3239
+4 * 3239 3239
+5 * 3239 0 3239
+5 +1 3239 3239
+5 * 3239 3239
+5 * 3239 3239
+5 * 3239
+4 * 3239 0 3239
+5 +1 3239 3239
+5 * 3239 3239
+5 * 3239 3239
+5 * 3239
+4 * 3239 0 3239
+5 -4 3239 0 3239
+4 * 3239 3239
+3 * 3239
+3 * 3239 3239
+3 * 3239 0 0 0 0 0 0 0 0 3239 80
jcnd=3160/3239 0x401672 +1 
* * 
-9 * 79 79 0 1 0 0 1
+3 * 79
+3 * 79 79
+3 * 79 0 0 0 0 0 0 0 0 79
jcnd=79/79 0x401672 +1 
* * 
+6 +6 79 79 0 1 0 0 1
+5 * 79 79
+5 * 79 0 79
+5 +2 79 79
+3 +1 79 0 79
+3 * 79 79
+5 * 79 79
+1 * 79 79

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 79
+7 * 79
+7 * 79
+3 * 79
+3 * 79 0 79
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=79 0x4030b2 310 
* * 67072 19245 17591 63 18 17 63 18 17 4070 206 314 39
+5 * 79
+7 * 79
+7 * 79
+3 * 79
+3 * 79 0 79
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=79 0x402ff4 310 
* * 67586 19295 17367 45 14 22 45 14 22 4205 210 314
+5 * 79 0 0 1 0 0 1
+7 * 79
+7 * 79
+3 * 79
+3 * 79 0 79
cfn=(142)
calls=79 0x401585 -52 
* * 341991 150969 79079 8 0 0 8 0 0 6636 160
+5 * 79 0 79
+8 * 79 79
+6 * 79 0 79
+6 * 79
+7 * 79
+3 * 79 0 79
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=79 0x402df4 414 
* * 19804 6221 4539 33 6 0 33 6 0 2137 53 158
+5 * 79
+7 * 79
+3 * 79 0 79 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=79 0x402e74 414 
* * 19900 6271 4533 7 0 0 7 0 0 2179 18 158
+5 +2 79
+7 * 79
+7 * 79
+3 * 79
+3 * 79 0 79
cfi=(2)
cfn=(4)
calls=79 0x4030b2 310 
* * 66677 19215 17487 2 0 1 2 0 1 4031 101 314
+5 * 79
+7 * 79
+7 * 79
+3 * 79
+3 * 79 0 79
cfi=(2)
cfn=(80)
calls=79 0x402ff4 310 
* * 66364 19220 17206 0 0 2 0 0 2 3986 73 314
+5 * 79 79
+6 * 79 0 0 1 0 0 1
+7 * 79
+7 * 79 0 79
+6 * 79 79
+8 * 79
+3 * 79
+3 * 79 0 79
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=79 0x401719 -33 
* * 160133 66518 36814 4 0 0 4 0 0 3318 80
+5 * 79 0 79
+8 * 79 79
+6 * 79 0 79
+6 * 79
+7 * 79 0 0 1 0 0 1
+3 * 79 0 79
cfi=(2)
cfn=(148)
calls=79 0x402df4 414 
* * 19804 6221 4539 0 0 0 0 0 0 2137 48 158
+5 * 79
+7 * 79
+3 * 79 0 79
cfi=(2)
cfn=(178)
calls=79 0x402e74 414 
* * 19900 6271 4533 0 0 0 0 0 0 2179 12 158
+5 +2 79 79
+7 * 79
+3 * 79 0 79
cfi=(2)
cfn=(2)
calls=79 0x402d74 645 
* * 1027 474 158
+5 * 79 79
+6 * 79
+3 * 79
+3 * 79
+3 * 79 79
+7 * 79
+3 * 79 0 0 1 0 0 1
+3 * 79 0 79
cfi=(2)
cfn=(144)
calls=79 0x402d9a 770 
* * 869 395 237
+5 * 79
+3 * 79
+7 * 79
+3 * 79
+3 * 79 0 79
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=79 0x402eda 901 
* * 13240 4595 3702 30 9 7 30 9 7 604 30 35
+5 +1 79 79
+7 * 79
+3 * 79 0 79
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=79 0x402f54 645 
* * 1027 474 158 0 1 0 0 1
+5 * 79 79
+6 * 79
+3 * 79
+3 * 79
+3 * 79 79
+7 * 79 0 0 1 0 0 1
+3 * 79
+3 * 79 0 79
cfi=(2)
cfn=(146)
calls=79 0x402dba 770 
* * 869 395 237
+5 * 79
+3 * 79
+7 * 79
+3 * 79
+3 * 79 0 79
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=79 0x402f7a 901 
* * 13458 4615 3712 20 8 14 20 8 14 654 51 35
+5 +1 79 79
+7 * 79
+3 * 79 0 79
cfi=(2)
cfn=(10)
calls=79 0x402f54 645 
* * 1027 474 158
+5 * 79 79
+6 * 79
+3 * 79
+3 * 79
+3 * 79 79 0 1 0 0 1
+7 * 79
+3 * 79
+3 * 79 0 79
cfi=(2)
cfn=(146)
calls=79 0x402dba 770 
* * 869 395 237
+5 * 79 79
+2 * 79
+4 * 79 79
+8 * 79 79
+8 * 79 0 79
+8 +1 79 79
+7 * 79
+3 * 79 0 79
cfi=(2)
cfn=(2)
calls=79 0x402d74 645 
* * 1027 474 158
+5 * 79 79 0 1 0 0 1
+6 * 79
+3 * 79
+3 * 79
+3 * 79 79
+7 * 79
+3 * 79
+3 * 79 0 79
cfi=(2)
cfn=(144)
calls=79 0x402d9a 770 
* * 869 395 237
+5 * 79 79
+4 * 79 79
+8 * 79
+4 * 79 79
+8 * 79
+3 * 79 0 79
+8 +2 79 0 79
+7 -12 79 79
+8 * 79 79
+7 * 79 0 0 0 0 0 0 0 0 79 3
jcnd=1/79 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 79
+7 * 79
+3 * 79 0 79
cfi=(2)
cfn=(2)
calls=79 0x402d74 645 
* * 1027 474 158 2 0 1 2 0 1
+5 * 79
+3 * 79 79
+7 * 79
+3 * 79 0 79
cfi=(2)
cfn=(2)
calls=79 0x402d74 645 
* * 1027 474 158 0 1 0 0 1
+5 * 79
+3 * 79 0 0 0 0 0 0 0 0 79
+2 * 79 0 0 1 0 0 1
+5 * 79
jump=79 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 79
+2 * 79 0 0 0 0 0 0 0 0 79
jcnd=79/79 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 79 0 79
+1 * 79
+3 * 79
+4 * 79 0 79
+4 * 79 0 79
+4 * 79 0 79
+5 +1 79 79
+4 * 79
+3 * 79 0 79
cfi=(2)
cfn=(2)
calls=79 0x402d74 645 
* * 1027 474 158
+5 * 79
+3 * 79 0 79
+3 +1 79 79 0 1 0 0 1
+6 * 79 0 79
+3 * 79 79
+6 * 79 0 79
+3 +2 79 0 79
+7 * 79
jump=79 +86 * 
* * 
+2 +1 3239 3239
+3 * 3239
+3 * 3239 3239
+4 * 3239
+3 * 3239
+3 * 3239 0 3239
cfi=(2)
cfn=(144)
calls=3239 0x402d9a 770 
* * 35629 16195 9717
+5 * 3239 3239
+4 * 3239 3239
+5 * 3239
+4 * 3239 0 3239
+5 +1 3239 3239
+3 * 3239
+3 * 3239 3239
+4 * 3239
+3 * 3239
+3 * 3239 0 3239
cfi=(2)
cfn=(146)
calls=3239 0x402dba 770 
* * 35629 16195 9717
+5 * 3239 3239
+2 * 3239
+4 * 3239 3239
+5 * 3239
+4 * 3239 0 3239
+5 -2 3239 0 3239
+4 * 3239 3239
+3 * 3239
+3 * 3239 3239
+3 * 3239 0 0 0 0 0 0 0 0 3239 80
jcnd=3160/3239 -93 +1 
* * 
-9 * 79 79 0 1 0 0 1
+3 * 79
+3 * 79 79
+3 * 79 0 0 0 0 0 0 0 0 79
jcnd=79/79 -93 +1 
* * 
+2 +4 79 79
+3 * 79
+3 * 79 0 0 1 0 0 1
+4 * 79 79
+5 * 79
+4 * 79
+3 * 79 0 79
+5 +1 79 79
+3 * 79
+3 * 79
+4 * 79 79
+5 * 79
+4 * 79
+3 * 79 0 79
+5 +1 79 79
+5 * 79 79
+5 * 79 79
+5 * 79 0 0 1 0 0 1
+4 * 79
+3 * 79 0 79
+5 +2 79 79
+3 +1 79 0 79
+3 * 79 79
+5 * 79 79
+1 * 79 79

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 158 0 158 1 0 0 1
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=158 0x404a28 -35 
* * 948 316 474 1 0 1 1 0 1
+5 * 158 158
+1 * 158 158

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 158
+4 * 158
+3 * 158 0 158
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=158 0x4044cc -35 
* * 790 316 316
+5 * 158 158
+1 * 158 158

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 158 0 158 1 0 0 1
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158 1 0 0 1
+4 +1 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=158 0x4049d4 -35 
* * 948 316 474 1 0 0 1
+5 * 158 158
+1 * 158 158

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 158 0 158 1 0 0 1
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 158
+4 * 158
+3 * 158 0 158
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=158 0x404520 -35 
* * 790 316 316
+5 * 158 158
+1 * 158 158

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158
+4 * 158 158
+4 * 158 158
+1 * 158 158

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 79 0 79
+1 * 79
+3 * 79
+4 * 79 0 79
+4 * 79 0 79
+4 * 79 0 79
+4 +1 79 79
+4 * 79 79
+4 * 79 79
+4 * 79
+3 * 79
+3 * 79 0 79
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=79 0x40406a -87 
* * 1896 632 711 0 5 5 0 5 5 79
+5 * 79 79
+1 * 79 79

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 158 0 158
+1 * 158
+3 * 158 0 158
+4 * 158 158
+4 * 158 158
+1 * 158 158

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 79 0 79
+1 * 79
+3 * 79
+4 * 79 0 79
+4 * 79 0 79
+4 * 79 0 79
+4 +1 79 79
+4 * 79 79
+4 * 79 79
+4 * 79
+3 * 79
+3 * 79 0 79
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=79 0x403df2 -87 
* * 1896 632 711 0 6 1 0 6 1 79
+5 * 79 79
+1 * 79 79

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 218 0 218
+1 * 218
+3 * 218 0 218
+4 +1 218 218
+4 * 218 218
+1 * 218 218

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 316 0 316 1 0 0 1
+1 * 316
+3 * 316 0 316
+4 +1 316 316 0 1 0 0 1
+4 * 316 316
+1 * 316 316

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 218 0 218
+1 * 218
+3 * 218 0 218 0 0 1 0 0 1
+4 +1 218 218
+4 * 218 218
+1 * 218 218

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 316 0 316 1 0 0 1
+1 * 316
+3 * 316
+4 * 316 0 316
+4 +1 316
+4 * 316
+3 * 316 0 316
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=316 0x404ffe 790 
* * 1896 948 632 1 0 0 1
+5 * 316 316
+3 * 316 316
+1 * 316 316

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 316 0 316 1 0 0 1
+1 * 316
+3 * 316 0 316
+4 +1 316 316
+4 * 316 316
+1 * 316 316

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 316 0 316 1 0 0 1
+1 * 316
+3 * 316
+4 * 316 0 316
+4 +1 316
+4 * 316
+3 * 316 0 316 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=316 0x40500c 790 
* * 1896 948 632 1 0 0 1
+5 * 316 316
+3 * 316 316
+1 * 316 316

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 158 0 158
+1 * 158
+3 * 158 0 158
+4 * 158 0 158
+4 * 158 158
+4 * 158 158
+1 * 158 158

fl=(5)
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164
+3 * 164 0 164
cob=(5) /usr/lib64/libstdc++.so.6.0.13
cfi=(8) ???
cfn=(164) operator delete(void*)
calls=164 0x387e4bb2f0 0 
* * 18076 4522 2356 23 5 0 23 5 0 4246 104 164
* * 164 164 0 1 1 0 1 1 0 0 0 164
+5 * 164 164
+1 * 164 164

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164
+3 * 164 0 164
cob=(5)
cfi=(8)
cfn=(164)
calls=164 0x387e4bb2f0 0 
* * 18294 4634 2348 0 0 0 0 0 0 4336 36 164
* * 164 164 0 0 0 0 0 0 0 0 0 164
+5 * 164 164
+1 * 164 164

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164
+4 * 164
+3 * 164 0 164
cfn=(102)
calls=164 0x4048de +12 
* * 984 328 328 1 0 0 1
+5 * 164 164
+4 * 164 0 0 1 0 0 1
+3 * 164
+2 * 164 0 0 0 0 0 0 0 0 164
jcnd=164/164 +7 +3 
* * 
+7 +3 164 164
+4 * 164
+4 * 164
+3 * 164 0 164
cob=(5)
cfi=(8)
cfn=(32) operator new(unsigned long)
calls=164 0x387e4bd0b0 0 
* * 39262 6614 5829 22 17 20 22 17 20 6315 211 164
* * 164 164 0 0 0 0 0 0 0 0 0 164
+5 +1 164 164
+1 * 164 164

fn=(18)
0x404a28 81 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158 0 0 1 0 0 1
+4 * 158 0 158
+4 * 158 158
+1 * 158 158

fn=(92)
0x4049d4 81 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158
+4 * 158 0 158
+4 * 158 158
+1 * 158 158

fn=(196)
0x404520 86 158 0 158
+1 * 158
+3 * 158 0 158
+4 * 158 158
+1 * 158 158

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164 1 0 0 1
+4 +2 164 164
+4 * 164
+3 * 164 0 164
cfn=(28)
calls=164 0x404992 +12 
* * 984 328 328 1 0 0 1
+5 * 164 164
+4 * 164
+3 * 164
+2 * 164 0 0 0 0 0 0 0 0 164
jcnd=164/164 +7 +3 
* * 
+7 +3 164 164
+4 * 164
+4 * 164
+3 * 164 0 164
cob=(5)
cfi=(8)
cfn=(32)
calls=164 0x387e4bd0b0 0 
* * 39253 6567 6340 16 16 15 16 16 15 6269 241 164
* * 164 164 0 1 1 0 1 1 0 0 0 164
+5 +1 164 164
+1 * 164 164

fn=(102)
0x4048de 113 176 0 176 1 0 0 1
+1 * 176
+3 * 176 0 176
+4 +1 176
+10 * 176 176
+1 * 176 176

fn=(266)
0x40406a 129 79 0 79
+1 * 79
+3 * 79
+4 * 79 0 79
+4 * 79 0 79
+4 * 79 0 79
+4 +1 79 79
+4 * 79
+3 * 79
+5 * 79 0 79
cfi=(16)
cfn=(226)
calls=79 0x402d61 -20 
* * 553 237 237
+5 * 79
+3 * 79 0 0 0 0 0 0 0 0 79
+2 * 79 79
+4 * 79 79 0 0 5 0 0 5
+2 * 79 0 79 0 0 5 0 0 5
+2 * 79 79
+1 * 79 79

fn=(28)
0x404992 113 176 0 176 1 0 0 1
+1 * 176
+3 * 176 0 176
+4 +1 176
+10 * 176 176
+1 * 176 176

fn=(176)
0x4044cc 86 158 0 158
+1 * 158
+3 * 158 0 158
+4 * 158 158
+1 * 158 158

fn=(224)
0x403df2 129 79 0 79
+1 * 79
+3 * 79
+4 * 79 0 79
+4 * 79 0 79
+4 * 79 0 79
+4 +1 79 79
+4 * 79
+3 * 79
+5 * 79 0 79
cfi=(16)
cfn=(226)
calls=79 0x402d61 -20 
* * 553 237 237
+5 * 79
+3 * 79 0 0 0 0 0 0 0 0 79
+2 * 79 79
+4 * 79 79 0 0 6 0 0 6
+2 * 79 0 79 0 0 1 0 0 1
+2 * 79 79
+1 * 79 79

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +10 158 158
+4 * 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=158 0x404829 -26 
* * 51014 15698 14754 25 3 4 25 3 4 1768 102 312 39
+5 +1 158 158
+1 * 158 158

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +2 158 158
+4 * 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158 1 0 0 1
cfn=(50)
calls=158 0x404484 107 
* * 53226 16488 15544 25 3 4 25 3 4 1768 102 312 39
+5 * 158 158
+1 * 158 158

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(52)
0x404829 91 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +2 158 158 0 1 0 0 1
+4 * 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=158 0x404a36 450 
* * 48802 14908 13964 24 3 4 24 3 4 1768 102 312 39
+5 * 158 158
+1 * 158 158

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +2 158 158
+4 * 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=158 0x40439c 107 
* * 53226 16488 15544 7 0 7 7 0 7 1768 88 312
+5 * 158 158
+1 * 158 158

fn=(116)
0x40439c 107 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +10 158 158
+4 * 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=158 0x4047d7 -26 
* * 51014 15698 14754 7 0 7 7 0 7 1768 88 312
+5 +1 158 158
+1 * 158 158

fn=(118)
0x4047d7 91 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +2 158 158
+4 * 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=158 0x4049e2 450 
* * 48802 14908 13964 7 0 7 7 0 7 1768 88 312
+5 * 158 158
+1 * 158 158

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(272)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fl=(2)
fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 334 0 334 1 0 0 1
+1 * 334
+3 * 334 0 334 1 0 0 1
+4 +1 334 334
+4 * 334 334
+1 * 334 334

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+3 * 158 0 158
+4 * 158
+4 * 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=158 0x404380 726 
* * 1580 790 632
+5 * 158 158
+4 * 158 158
+1 * 158 158

fn=(148)
0x402df4 414 158 0 158
+1 * 158
+3 * 158 0 158
+1 * 158
+4 * 158 0 158 1 0 0 1
+4 +2 158 158
+4 * 158
+3 * 158 0 158
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=158 0x40325e 113 
* * 948 474 316
+5 * 158
+3 * 158 158
+4 * 158 158
+4 * 158 158
+4 * 158 158
+3 -1 158
+3 * 158
+3 * 158 0 158
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=158 0x40326c 148 
* * 4898 1580 1896 4 0 0 4
+5 +1 158 158
+4 * 158
+3 * 158 0 158
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=158 0x4031ec 159 
* * 29970 8966 5918 27 6 0 27 6 0 4274 101 316
+5 * 158
jump=158 +28 * 
* * 
+28 * 158 0 0 1 0 0 1
+4 * 158 158
+1 * 158 158
+1 * 158 158

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164
+5 * 164 0 0 0 0 0 0 0 0 164
+2 +1 164 164
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(5)
cfn=(160)
calls=164 0x4044d6 -65 
* * 20044 5178 3176 24 6 0 24 6 0 4246 104 328
+5 +1 164 164
+1 * 164 164

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 158 0 158
+1 * 158
+3 * 158 0 158
+1 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=158 0x4043ca -45 
* * 5688 2054 2212 4 0 4 4 0 4
+5 +1 158 158 0 1 0 0 1
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=158 0x404412 +43 
* * 48291 10280 9106 22 14 9 22 14 9 6333 205 316
+5 * 158
jump=158 +28 * 
* * 
+28 * 158
+4 * 158 158
+1 * 158 158
+1 * 158 158

fn=(14)
0x4043ca 90 158 0 158 1 0 0 1
+1 * 158
+3 * 158
+4 * 158 0 158 0 0 1 0 0 1
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfi=(4)
cfn=(16)
calls=158 0x404804 +24 
* * 2844 948 1106 2 0 1 2 0 1
+5 * 158 158
+4 * 158 0 158 0 0 2 0 0 2
+7 * 158 158
+4 * 158 0 158 1 0 0 1
+8 * 158 158
+4 * 158 0 158
+8 +1 158 158
+1 * 158 158

fn=(80)
0x402ff4 310 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158
+2 * 158 0 158
+2 * 158 0 158
+1 * 158 0 0 1 0 0 1
+4 * 158 0 158
+4 * 158 0 158
+4 +2 158 158
+4 * 158
+3 * 158 0 158
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=158 0x4039fc 117 
* * 948 474 316 2 0 0 2
+5 * 158
+3 * 158 0 158
cfi=(3)
cfn=(84)
calls=158 0x4039ed -88 
* * 948 474 316
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(2)
calls=158 0x402d74 645 
* * 2054 948 316
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158
+3 * 158
+3 * 158 0 158 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=158 0x403a0a 134 
* * 57656 13495 11919 30 14 17 30 14 17 6423 195 316
+5 +4 158 158
+4 * 158
+3 * 158 0 158
cfn=(106)
calls=158 0x40325e 113 
* * 948 474 316 1 0 0 1
+5 * 158
+3 * 158 158
+4 * 158 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=158 0x403a98 565 
* * 3950 1580 1264 2 0 0 2
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(112)
calls=158 0x403a68 547 
* * 3950 1580 1264
+5 * 158
+3 * 158
+3 * 158
+3 * 158
+3 * 158 0 158
cfi=(11)
cfn=(114)
calls=158 0x403ac9 -60 
* * 55596 17278 16492 7 0 7 7 0 7 1768 88 312
+5 -3 158 158
+4 * 158 0 158
+4 * 158
jump=158 +28 +4 
* * 
+28 +4 158
+4 * 158 158
+1 * 158 158
+2 * 158 158
+2 * 158 158
+1 * 158 158

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +2 164 164
+5 * 164 0 0 0 0 0 0 0 0 164 6
+2 +1 164 164
+4 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfi=(5)
cfn=(190)
calls=164 0x40452a -65 
* * 20262 5290 3168 0 0 0 0 0 0 4336 36 328
+5 +1 164 164
+1 * 164 164

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164 1 0 0 1
+4 * 164 0 164
+4 0 164 164
+5 0 164 0 0 0 0 0 0 0 0 164
+2 0 164 164
+4 0 164 164
+4 0 164
+5 0 164
+3 0 164
+3 0 164 0 164
fi=(6) ???
cfi=(5)
cfn=(26)
calls=164 0x404730 99 
* 0 43517 7879 7652 20 17 15 20 17 15 6433 241 328
+5 0 164
fi=(6)
jump=164 +7 0 
* 0 
+7 0 164 164
+1 0 164 164

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 158 0 158 1 0 0 1
+1 * 158
+3 * 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+4 * 158 0 158
+4 * 158
+4 * 158 0 0 1 0 0 1
+4 * 158
+3 * 158
+3 * 158 0 158
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=158 0x404468 726 
* * 1580 790 632 1 0 0 1
+5 * 158 158
+4 * 158 158
+1 * 158 158

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+3 * 158 0 158
+4 * 158
+4 * 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfi=(10)
cfn=(44)
calls=158 0x404468 726 
* * 1580 790 632
+5 * 158 158
+4 * 158 158
+1 * 158 158

fn=(86)
0x403a0a 134 158 0 158
+1 * 158
+3 * 158 0 158
+1 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=158 0x4042e2 -45 
* * 5688 2054 2212 5 0 0 5
+5 +1 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=158 0x40432a +43 
* * 48492 10335 8601 24 14 17 24 14 17 6423 195 316
+5 * 158
jump=158 +28 * 
* * 
+28 * 158
+4 * 158 158
+1 * 158 158
+1 * 158 158

fn=(88)
0x4042e2 90 158 0 158 1 0 0 1
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158 1 0 0 1
cfi=(4)
cfn=(90)
calls=158 0x4047b2 +24 
* * 2844 948 1106 3 0 0 3
+5 * 158 158
+4 * 158 0 158
+7 * 158 158
+4 * 158 0 158
+8 * 158 158
+4 * 158 0 158
+8 +1 158 158
+1 * 158 158

fn=(156)
0x4031ec 159 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158
+1 * 158
+4 * 158 0 158
+4 +2 158 158
+4 * 158 158 0 1 0 0 1
+4 * 158
+3 * 158 158
+4 * 158 158
+3 * 158
+3 * 158
+3 * 158
+4 * 158
+3 * 158 158
+4 * 158 158
+3 -1 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(158)
calls=158 0x403ce6 +11 
* * 21912 5964 3864 24 6 0 24 6 0 4274 101 316
+5 +1 158 158
+4 * 158
+3 * 158 0 158
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=158 0x4031b8 -82 
* * 3634 1264 1264 1 0 0 1
+5 * 158
jump=158 +28 * 
* * 
+28 * 158
+4 * 158 158
+1 * 158 158
+1 * 158 158

fn=(172)
0x4031b8 79 158 0 158 1 0 0 1
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 158
+4 * 158
+3 * 158 0 158
cfi=(4)
cfn=(174)
calls=158 0x403ccc +42 
* * 2212 790 790
+5 * 158 158
+1 * 158 158

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10)
0x402f54 645 340 0 340 1 0 0 1
+1 * 340
+3 * 340 0 340
+4 +1 340 340
+4 * 340 340 0 0 2 0 0 2
+4 * 340
+3 * 340 340
+4 * 340 340
+3 * 340
+3 * 340
+3 * 340
+4 * 340 340
+1 * 340 340

fn=(106)
0x40325e 113 334 0 334 1 0 0 1
+1 * 334
+3 * 334 0 334
+4 +1 334 334
+4 * 334 334
+1 * 334 334

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 170 0 170 1 0 0 1
+1 * 170
+3 * 170 0 170 0 0 1 0 0 1
+4 +1 170 170
+4 * 170 170
+1 * 170 170

fn=(82)
0x4039fc 117 170 0 170 1 0 0 1
+1 * 170
+3 * 170 0 170 1 0 0 1
+4 +1 170 170
+4 * 170 170
+1 * 170 170

fn=(200)
0x402eda 901 79 0 79
+1 * 79
+3 * 79
+4 * 79 0 79
+4 * 79 0 79
+4 +2 79 79
+4 * 79 79
+4 * 79 79
+4 * 79 79
+4 * 79
+3 * 79 0 0 0 0 0 0 0 0 79 7
jcnd=6/79 +51 +10 
* * 
+2 +3 73 73
+4 * 73 73
+4 * 73 73
+4 -1 73 73
+4 * 73
+3 * 73
+3 * 73 0 73
cfi=(3)
cfn=(222)
calls=73 0x403373 215 
* * 2774 949 1022 0 5 0 0 5 0 73
+5 +2 73 73
+4 * 73 73
+4 * 73
+4 * 73 73
+4 * 73 0 73
+4 * 73
jump=73 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8298 2589 2243 27 4 7 27 4 7 452 23 35
+5 +2 79 79
+1 * 79 79

fn=(4)
0x4030b2 310 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158
+2 * 158 0 158
+2 * 158 0 158
+1 * 158
+4 * 158 0 158 1 0 0 1
+4 * 158 0 158
+4 +2 158 158
+4 * 158
+3 * 158 0 158
cfn=(6)
calls=158 0x403b08 117 
* * 948 474 316 1 0 1 1 0 1
+5 * 158
+3 * 158 0 158
cfi=(3)
cfn=(8)
calls=158 0x403afa -88 
* * 948 474 316 1 0 0 1
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(10)
calls=158 0x402f54 645 
* * 2054 948 316 1 1 0 1 1
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158
+3 * 158
+3 * 158 0 158
cfn=(12)
calls=158 0x403b16 134 
* * 57455 13440 12424 27 14 13 27 14 13 6333 205 316
+5 +4 158 158 0 1 0 0 1
+4 * 158
+3 * 158 0 158
cfn=(40)
calls=158 0x40333c 113 
* * 948 474 316 2 0 0 2
+5 * 158
+3 * 158 158
+4 * 158 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(42)
calls=158 0x403ba4 565 
* * 3950 1580 1264 3 0 0 3
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(46)
calls=158 0x403b74 547 
* * 3950 1580 1264
+5 * 158
+3 * 158
+3 * 158
+3 * 158
+3 * 158 0 158 1 0 0 1
cfi=(11)
cfn=(48)
calls=158 0x403bd5 -60 
* * 55596 17278 16492 26 3 4 26 3 4 1768 102 312 39
+5 -3 158 158
+4 * 158 0 158
+4 * 158
jump=158 +28 +4 
* * 
+28 +4 158
+4 * 158 158
+1 * 158 158
+2 * 158 158
+2 * 158 158
+1 * 158 158

fn=(108)
0x403a98 565 158 0 158 1 0 0 1
+1 * 158
+3 * 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+4 * 158 0 158
+4 * 158
+4 * 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfi=(10)
cfn=(110)
calls=158 0x404380 726 
* * 1580 790 632 1 0 0 1
+5 * 158 158
+4 * 158 158
+1 * 158 158

fn=(178)
0x402e74 414 158 0 158
+1 * 158
+3 * 158 0 158
+1 * 158
+4 * 158 0 158 1 0 0 1
+4 +2 158 158
+4 * 158
+3 * 158 0 158
cfn=(40)
calls=158 0x40333c 113 
* * 948 474 316
+5 * 158
+3 * 158 158
+4 * 158 158
+4 * 158 158
+4 * 158 158
+3 -1 158
+3 * 158
+3 * 158 0 158
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=158 0x40334a 148 
* * 4898 1580 1896 2 0 0 2
+5 +1 158 158
+4 * 158
+3 * 158 0 158
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=158 0x4032ca 159 
* * 30162 9066 5906 3 0 0 3 0 0 4358 30 316
+5 * 158
jump=158 +28 * 
* * 
+28 * 158 0 0 1 0 0 1
+4 * 158 158
+1 * 158 158
+1 * 158 158

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 164 0 164 1 0 0 1
+1 * 164 0 0 1 0 0 1
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 0 164 164
+5 0 164 0 0 0 0 0 0 0 0 164
+2 0 164 164
+4 0 164 164
+4 0 164
+5 0 164
+3 0 164
+3 0 164 0 164
fi=(6)
cfi=(5)
cfn=(100)
calls=164 0x40461a 99 
* 0 43526 7926 7141 25 17 20 25 17 20 6479 211 328
+5 0 164
fi=(6)
jump=164 +7 0 
* 0 
+7 0 164 164
+1 0 164 164

fn=(144)
0x402d9a 770 9875 0 9875
+1 * 9875
+3 * 9875 0 9875
+4 * 9875 0 9875
+4 +1 9875 9875
+4 * 9875 9875
+3 * 9875 9875
+4 * 9875
+4 * 9875
+3 * 9875 9875
+1 * 9875 9875

fn=(146)
0x402dba 770 9875 0 9875
+1 * 9875
+3 * 9875 0 9875 1 0 0 1
+4 * 9875 0 9875
+4 +1 9875 9875
+4 * 9875 9875
+3 * 9875 9875
+4 * 9875
+4 * 9875
+3 * 9875 9875
+1 * 9875 9875

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 158
+4 * 158
+3 * 158 0 158
cfi=(4)
cfn=(194)
calls=158 0x403d7e +42 
* * 2212 790 790 1 0 0 1
+5 * 158 158
+1 * 158 158

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186)
0x4032ca 159 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158
+1 * 158
+4 * 158 0 158
+4 +2 158 158
+4 * 158 158
+4 * 158
+3 * 158 158
+4 * 158 158
+3 * 158
+3 * 158
+3 * 158
+4 * 158
+3 * 158 158
+4 * 158 158
+3 -1 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(188)
calls=158 0x403d98 +11 
* * 22104 6064 3852 1 0 0 1 0 0 4358 30 316
+5 +1 158 158
+4 * 158
+3 * 158 0 158
cfn=(192)
calls=158 0x403296 -82 
* * 3634 1264 1264 1 0 0 1
+5 * 158
jump=158 +28 * 
* * 
+28 * 158
+4 * 158 158
+1 * 158 158
+1 * 158 158

fn=(2)
0x402d74 645 656 0 656 1 0 0 1
+1 * 656
+3 * 656 0 656 0 0 1 0 0 1
+4 +1 656 656
+4 * 656 656 0 1 1 0 1 1
+4 * 656
+3 * 656 656
+4 * 656 656
+3 * 656
+3 * 656
+3 * 656
+4 * 656 656
+1 * 656 656

fn=(20)
0x404412 179 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 +2 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(22)
calls=158 0x404236 -14 
* * 44341 8384 8000 21 14 9 21 14 9 6333 205 316
+5 * 158 158
+4 * 158 0 158
+3 +1 158 158
+4 * 158 158 0 1 0 0 1
+3 * 158 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+3 * 158 158
+4 * 158
+4 * 158
+3 * 158 158
+4 * 158 0 158
+4 +1 158 158
+1 * 158 158

fn=(94)
0x40432a 179 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 +2 158 158
+4 * 158 158 0 1 0 0 1
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(96)
calls=158 0x403fbe -14 
* * 44542 8439 7495 23 14 17 23 14 17 6423 195 316
+5 * 158 158
+4 * 158 0 158
+3 +1 158 158
+4 * 158 158
+3 * 158 158
+4 * 158 0 158
+4 +1 158 158
+4 * 158 158
+3 * 158 158
+4 * 158
+4 * 158
+3 * 158 158
+4 * 158 0 158
+4 +1 158 158
+1 * 158 158

fn=(244)
0x402f7a 901 79 0 79
+1 * 79
+3 * 79 0 0 1 0 0 1
+4 * 79 0 79
+4 * 79 0 79
+4 +2 79 79
+4 * 79 79
+4 * 79 79
+4 * 79 79
+4 * 79
+3 * 79 0 0 0 0 0 0 0 0 79
jcnd=6/79 +51 +10 
* * 
+2 +3 73 73
+4 * 73 73
+4 * 73 73
+4 -1 73 73
+4 * 73
+3 * 73
+3 * 73 0 73
cfi=(3)
cfn=(264)
calls=73 0x4036b1 215 
* * 2774 949 1022 0 5 2 0 5 2 73
+5 +2 73 73
+4 * 73 73
+4 * 73
+4 * 73 73
+4 * 73 0 73
+4 * 73
jump=73 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246)
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8516 2609 2253 19 3 12 19 3 12 502 51 35
+5 +2 79 79
+1 * 79 79

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fl=(12)
fn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404c52 424 158 0 158
+1 * 158
+3 * 158 0 158
+2 * 158 0 158
+1 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +4 158 158
+4 * 158
+3 * 158 0 158
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=158 0x40492d 277 
* * 2370 948 790 2 0 0 2
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=158 0x404d9d 277 
* * 3950 1422 1264 2 0 1 2 0 1
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(66)
calls=158 0x404d9d 277 
* * 3950 1422 1264
+5 * 158
+3 * 158
+3 * 158
+3 * 158 0 158
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=158 0x404db7 -49 
* * 25892 7166 6222 15 3 3 15 3 3 1768 102 312 39
+5 +1 158
+4 * 158 158
+1 * 158 158
+2 * 158 158
+1 * 158 158

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 194 0 194 1 0 0 1
+1 * 194
+3 * 194
+4 * 194 0 194
+4 +1 194 194
+4 * 194
+3 * 194 0 194 1 0 0 1
cfi=(13)
cfn=(64)
calls=194 -33 -66 
* * 1164 582 388
+5 * 194 194
+1 * 194 194

fn=(66)
0x404d9d 277 316 0 316
+1 * 316
+3 * 316
+4 * 316 0 316
+4 +1 316 316
+4 * 316
+3 * 316 0 316
cfi=(13)
cfn=(68)
calls=316 0x404f1a -58 
* * 5056 1896 1580 2 0 1 2 0 1
+5 * 316 316
+1 * 316 316

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 158 0 158
+1 * 158
+3 * 158 0 158
+1 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +10 158 158
+4 * 158
+3 * 158 0 158
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=158 0x404bc6 288 
* * 2370 948 790 3 0 0 3
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(122)
calls=158 0x404bc6 288 
* * 2370 948 790
+5 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=158 0x404be0 -36 
* * 40586 12064 11120 4 0 7 4 0 7 1768 88 312
+5 +1 158
+4 * 158 158
+1 * 158 158
+1 * 158 158

fn=(128)
0x404878 277 194 0 194
+1 * 194
+3 * 194
+4 * 194 0 194 1 0 0 1
+4 +1 194 194
+4 * 194
+3 * 194 0 194
cfi=(13)
cfn=(130)
calls=194 -33 -66 
* * 1164 582 388 0 0 1 0 0 1
+5 * 194 194
+1 * 194 194

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 316 0 316
+1 * 316
+3 * 316
+4 * 316 0 316
+4 +1 316 316
+4 * 316
+3 * 316 0 316
cfi=(13)
cfn=(134)
calls=316 0x404e98 -58 
* * 5056 1896 1580 2 0 0 2
+5 * 316 316
+1 * 316 316

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +8 158 0 158
+4 +3 158 158
+4 * 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=158 0x404eb5 -22 
* * 23522 6376 5274 1 0 7 1 0 7 1768 88 312
+5 +1 158 158
+1 * 158 158

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 316 0 316 1 0 0 1
+1 * 316
+3 * 316
+4 * 316 0 316
+4 +1 316 316
+4 * 316
+3 * 316 0 316
cfi=(13)
cfn=(124)
calls=316 0x404d36 -77 
* * 1896 948 632 2 0 0 2
+5 * 316 316
+1 * 316 316

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 316 0 316 1 0 0 1
+1 * 316
+3 * 316
+4 * 316 0 316 1 0 0 1
+4 +1 316 316
+4 * 316
+3 * 316 0 316
cfi=(13)
cfn=(58)
calls=316 0x404d8f -77 
* * 1896 948 632 1 0 0 1
+5 * 316 316
+1 * 316 316

fn=(74)
0x404f37 368 170 0 170
+1 * 170
+3 * 170
+4 * 170 0 170 1 0 0 1
+4 * 170 0 170
+4 * 170 0 170
+4 +2 170 170
+4 * 170 170
+4 * 170
+3 * 170
+3 * 170
+4 * 170 0 170
+4 +1 170 170
+5 * 170 0 0 0 0 0 0 0 0 170
jcnd=6/170 +33 +2 
* * 
+2 +1 164 164
+4 * 164
+8 * 164 164
+4 * 164 164
+4 * 164
+3 * 164 0 0 1 0 0 1
+3 * 164 0 164 0 0 1 0 0 1
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(78) memmove
calls=164 0x3877c83840 0 
* * 19608 4748 4425 11 2 5 11 2 5 1658 105 159 39
* * 164 164 0 1 1 0 1 1 0 0 0 164
+5 +1 170 170
+4 * 170
+8 * 170 170
+4 * 170
+3 +1 170 170
+1 * 170 170

fn=(140)
0x404eb5 368 170 0 170
+1 * 170
+3 * 170
+4 * 170 0 170 1 0 0 1
+4 * 170 0 170
+4 * 170 0 170 0 0 1 0 0 1
+4 +2 170 170
+4 * 170 170
+4 * 170
+3 * 170
+3 * 170
+4 * 170 0 170
+4 +1 170 170
+5 * 170 0 0 0 0 0 0 0 0 170
jcnd=6/170 +33 +2 
* * 
+2 +1 164 164
+4 * 164
+8 * 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cob=(2)
cfi=(9)
cfn=(78)
calls=164 0x3877c83840 0 
* * 19608 4748 4425 0 0 8 0 0 8 1658 92 159
* * 164 164 0 0 0 0 0 0 0 0 0 164
+5 +1 170 170
+4 * 170
+8 * 170 170
+4 * 170
+3 +1 170 170
+1 * 170 170

fn=(72)
0x404db7 379 158 0 158
+1 * 158
+3 * 158
+4 * 158 0 158 1 0 0 1
+4 * 158 0 158
+4 * 158 0 158
+4 +8 158 0 158
+4 +3 158 158
+4 * 158 158
+4 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(74)
calls=158 0x404f37 -22 
* * 23522 6376 5274 14 3 3 14 3 3 1768 102 312 39
+5 +1 158 158
+1 * 158 158

fn=(126)
0x404be0 424 158 0 158
+1 * 158
+3 * 158 0 158
+2 * 158 0 158
+1 * 158
+4 * 158 0 158
+4 * 158 0 158
+4 * 158 0 158
+4 +4 158 158
+4 * 158
+3 * 158 0 158
cfn=(128)
calls=158 0x404878 277 
* * 2370 948 790 1 0 0 1
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(132)
calls=158 0x404d44 277 
* * 3950 1422 1264 2 0 0 2
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(132)
calls=158 0x404d44 277 
* * 3950 1422 1264
+5 * 158
+3 * 158
+3 * 158
+3 * 158 0 158
cfn=(138)
calls=158 0x404d5e -49 
* * 25892 7166 6222 1 0 7 1 0 7 1768 88 312
+5 +1 158
+4 * 158 158
+1 * 158 158
+2 * 158 158
+1 * 158 158

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 158 0 158
+1 * 158
+3 * 158 0 158
+1 * 158
+4 * 158 0 158 1 0 0 1
+4 * 158 0 158
+4 * 158 0 158
+4 +10 158 158
+4 * 158
+3 * 158 0 158
cfn=(56)
calls=158 0x404c38 288 
* * 2370 948 790 3 0 0 3
+5 * 158
+3 * 158 158
+4 * 158
+3 * 158 0 158
cfn=(56)
calls=158 0x404c38 288 
* * 2370 948 790
+5 * 158 158
+4 * 158
+3 * 158
+3 * 158 0 158
cfn=(60)
calls=158 0x404c52 -36 
* * 40586 12064 11120 20 3 4 20 3 4 1768 102 312 39
+5 +1 158
+4 * 158 158
+1 * 158 158
+1 * 158 158

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 316 0 316 1 0 0 1
+1 * 316
+3 * 316 0 316
+4 +1 316 316
+4 * 316 316
+1 * 316 316

fn=(110)
0x404380 726 316 0 316 1 0 0 1
+1 * 316
+3 * 316 0 316
+4 * 316 0 316
+4 * 316 316
+4 * 316 316
+3 * 316 316
+4 * 316 0 316
+3 * 316 316
+1 * 316 316

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 316 0 316 1 0 0 1
+1 * 316
+3 * 316 0 316
+4 +1 316 316
+4 * 316 316
+1 * 316 316

fn=(44)
0x404468 726 316 0 316
+1 * 316
+3 * 316 0 316
+4 * 316 0 316
+4 * 316 316
+4 * 316 316
+3 * 316 316
+4 * 316 0 316 1 0 0 1
+3 * 316 316
+1 * 316 316

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262)
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+4 * 164 0 164 1 0 0 1
+4 * 164 164
+1 * 164 164

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 +4 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=164 0x40454c -14 
* * 984 328 492 1 0 0 1
+5 +2 164 164
+1 * 164 164

fn=(150)
0x40326c 148 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +3 164 164 0 1 0 0 1
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=164 0x403d1a -29 
* * 2952 984 1148 3 0 0 3
+5 +1 164 164
+1 * 164 164

fn=(180)
0x40334a 148 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 * 164 0 164
+4 +3 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(182)
calls=164 0x403dcc -29 
* * 2952 984 1148 2 0 0 2
+5 +1 164 164
+1 * 164 164

fn=(152)
0x403d1a 122 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 * 164 0 164
+4 +4 164 164
+4 * 164 164
+4 * 164
+3 * 164
+3 * 164 0 164
cfn=(154)
calls=164 0x4044f8 -14 
* * 984 328 492 2 0 0 2
+5 +2 164 164
+1 * 164 164

fn=(184)
0x40454c 112 164 0 164 1 0 0 1
+1 * 164
+3 * 164 0 164
+4 * 164 0 164
+4 * 164 164
+1 * 164 164

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1800 315 308 1 3 6 1 3 6 264 36 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 12 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1608 307 302 4 3 3 4 3 3 220 16 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 4 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 3 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

ob=(2)
fl=(9)
fn=(36) malloc
0x3877c7aa50 0 328 0 328 1 0 0 1
+5 0 328 0 328
+5 0 328
+3 0 328 0 328
+5 0 328
+4 0 328 328 0 0 1 0 0 1
+7 0 328 328 0 0 1 0 0 1
+3 0 328
+3 0 328 0 0 0 0 0 0 0 0 328
+6 0 328 328 0 0 1 0 0 1
+7 0 328 328 0 1 1 0 1 1
+4 0 328
+3 0 328 0 0 0 0 0 0 0 0 328
+2 0 328 328 0 0 1 0 0 1
+3 0 328
+3 0 328 0 0 0 0 0 0 0 0 328
jcnd=328/328 +97 0 
* 0 
+18 0 328
+3 0 328
+3 0 328 0 328
cfn=(38) _int_malloc
calls=328 0x3877c79a00 0 
* 0 59491 8261 9217 30 26 34 30 26 34 8976 439
+5 0 328
+3 0 328
+3 0 328 0 0 0 0 0 0 0 0 328
+2 0 328
+3 0 328 0 0 0 0 0 0 0 0 328
+2 0 328
+3 0 328 0 0 0 0 0 0 0 0 328 1
+2 0 328 328
+7 0 328 0 0 0 0 0 0 0 0 328
jcnd=328/328 +13 0 
* 0 
+13 0 328 0 328
+2 0 328 0 0 0 0 0 0 0 0 328 12
+6 0 328
+3 0 328 328
+4 0 328 328
+5 0 328 328
+5 0 328
+4 0 328 328
+1 0 328 0 0 1 0 0 1
+5 0 328 328 0 0 1 0 0 1
+7 0 328 0 0 0 0 0 0 0 0 328
jcnd=328/328 +14 0 
* 0 
+14 0 328 0 328 1 0 0 1
+3 0 328 0 0 0 0 0 0 0 0 328
+6 0 328
jump=328 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 328 0 328 1 0 0 1
+2 0 328
+3 0 328
+3 0 328 0 328
+2 0 328
+3 0 328 0 328
+1 0 328
+3 0 328 0 328
+1 0 328
+3 0 328
+4 0 328
+3 0 328 0 0 0 0 0 0 0 0 328
+6 0 328
+4 0 328
+3 0 328 0 0 0 0 0 0 0 0 328 4
jcnd=10/328 0x3877c838d1 0 
* 0 
+2 0 318
+3 0 318
+3 0 318
+3 0 318
+3 0 318
+3 0 318 0 0 0 0 0 0 0 0 318
jcnd=318/318 +41 0 
* 0 
+41 0 318 0 0 1 0 0 1
+3 0 318 0 0 0 0 0 0 0 0 318
jcnd=318/318 0x3877c839c0 0 
* 0 
+24 0 318
+3 0 318
+4 0 318
+3 0 318
+3 0 318
+3 0 318
+3 0 318
+3 0 318 0 0 0 0 0 0 0 0 318 158
jcnd=166/318 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 162
+10 0 162 162 0 0 1 0 0 1
+3 0 162
+4 0 162 0 162
+3 0 162
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162
jcnd=162/162 -18 0 
* 0 
-18 0 542 542
+3 0 542
+4 0 542 0 542
+3 0 542
+4 0 542
+4 0 542 0 0 0 0 0 0 0 0 542 8
jcnd=380/542 -18 0 
* 0 
+2 0 328
+4 0 328
+3 0 328 328
+1 0 328 328
+1 0 328 328
+2 0 328 328 0 1 0 0 1
+2 0 328 328
0x3877c839c0 0 318 0 0 1 0 0 1
+3 0 318
+3 0 318
+3 0 318
+4 0 318 0 318 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=318 0x3877c89b20 0 
* 0 20598 7152 6516 6 1 12 6 1 12 992 27 318 39
+5 0 318
jump=318 0x3877c838be 0 
* 0 

fn=(168) free
0x3877c7b8b0 0 328 328 0 1 1 0 1 1
+7 0 328 328 0 0 1 0 0 1
+3 0 328
+3 0 328 0 0 1 0 0 1 0 0 328
+6 0 328
+3 0 328 0 0 0 0 0 0 0 0 328
+6 0 328 328
+4 0 328
+4 0 328
+2 0 328 0 0 0 0 0 0 0 0 328
+2 0 328
+2 0 328
+7 0 328 0 0 0 0 0 0 0 0 328
jcnd=328/328 +14 0 
* 0 
+14 0 328
+2 0 328
cfn=(170) _int_free
calls=328 0x3877c78650 0 
* 0 30138 7844 4704 19 2 0 19 2 0 6942 140

fn=(170)
0x3877c78650 0 328 0 328 1 0 0 1
+2 0 328 0 328
+2 0 328 0 328
+2 0 328
+3 0 328 0 328
+2 0 328 0 328
+1 0 328 0 328
+1 0 328
+3 0 328
+4 0 328 328
+4 0 328 0 328
+4 0 328
+3 0 328
+4 0 328
+3 0 328
+3 0 328
+3 0 328 0 0 1 0 0 1 0 0 328
+6 0 328
+4 0 328 0 0 0 0 0 0 0 0 328
+6 0 328
+4 0 328 0 0 0 0 0 0 0 0 328
+6 0 328 328
+7 0 328 0 0 0 0 0 0 0 0 328 2
jcnd=204/328 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 204
+2 0 204 0 0 0 0 0 0 0 0 204
+6 0 204 204 0 1 0 0 1
+4 0 204
+3 0 204
+2 0 204 0 0 0 0 0 0 0 0 204
jcnd=204/204 0x3877c78a40 0 
* 0 
+6 0 204 204
+4 0 204
+3 0 204 0 0 0 0 0 0 0 0 204
+6 0 204 204
+5 0 204
+4 0 204 0 0 0 0 0 0 0 0 204
jcnd=204/204 0x3877c7907c 0 
* 0 
+6 0 204 204
+5 0 204
+4 0 204 0 0 0 0 0 0 0 0 204
+6 0 204
+4 0 204 0 0 1 0 0 1 0 0 204
+6 0 204
+4 0 204 204
+7 0 204 0 0 0 0 0 0 0 0 204
+6 0 204 204
+6 0 204
+2 0 204 0 0 0 0 0 0 0 0 204
+6 0 204 204
+4 0 204 0 0 0 0 0 0 0 0 204 2
jcnd=202/204 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=2/2 +15 0 
* 0 
+15 0 204 204 0 1 0 0 1
+4 0 204 0 0 0 0 0 0 0 0 204 22
jcnd=20/204 0x3877c78bf0 0 
* 0 
+6 0 184 184
+6 0 184 0 0 1 0 0 1 0 0 184 41
jcnd=24/184 0x3877c78a78 0 
* 0 
+6 0 160 160
+5 0 160 160
+5 0 160 160
+4 0 160 0 0 0 0 0 0 0 0 160
+6 0 160 160
+4 0 160 0 0 0 0 0 0 0 0 160
+6 0 160 160
+9 0 160 0 160
+4 0 160 0 160
+4 0 160 0 0 0 0 0 0 0 0 160 4
jcnd=152/160 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8 2
+6 0 160
+3 0 160
+4 0 160 160
+4 0 160 160
+4 0 160 0 0 0 0 0 0 0 0 160
-12 0 24
+4 0 24 24
+4 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 184
+7 0 184 0 184
+4 0 184 0 184
+4 0 184 0 0 0 0 0 0 0 0 184 64
jcnd=116/184 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 116 0 116
+4 0 116
+3 0 116 0 116
+4 0 116
+4 0 116 0 116
+4 0 116 0 116
+4 0 116
+7 0 116 0 0 0 0 0 0 0 0 116
jcnd=116/116 0x3877c78b20 0 
* 0 
-7 0 20
+7 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 0x3877c78b20 0 
* 0 
0x3877c78a40 0 204 0 0 1 0 0 1
+5 0 204 204
+4 0 204 204
+7 0 204 0 0 0 0 0 0 0 0 204
jcnd=204/204 +16 0 
* 0 
+16 0 204 0 204
+5 0 204 0 0 0 0 0 0 0 0 204
+6 0 204
+3 0 204
jump=204 0x3877c7878f 0 
* 0 
+10 0 24 0 24
+6 0 24 0 0 1 0 0 1
jump=24 0x3877c78885 0 
* 0 
0x3877c78b20 0 204 204 0 1 0 0 1
+4 0 204
+2 0 204 0 0 0 0 0 0 0 0 204
+6 0 204 204
+7 0 204 0 0 0 0 0 0 0 0 204
jcnd=204/204 +15 0 
* 0 
+15 0 204 0 204 1 0 0 1
+4 0 204 0 0 0 0 0 0 0 0 204
+6 0 204
+4 0 204 204
+1 0 204 204
+1 0 204 204
+2 0 204 204
+2 0 204 204
+2 0 204 204
+2 0 204 204
0x3877c78bf0 0 20 0 0 1 0 0 1
+3 0 20 0 20
+4 0 20
+3 0 20
+4 0 20 0 20 1 0 0 1
+4 0 20
jump=20 0x3877c788cf 0 
* 0 
0x3877c7907c 0 204 204 0 1 1 0 1 1
+4 0 204 0 0 1 0 0 1
+7 0 204
+4 0 204
+3 0 204
+3 0 204 0 0 0 0 0 0 0 0 204
jcnd=204/204 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 318 0 0 1 0 0 1
+7 0 318
+3 0 318
+3 0 318 318 0 0 1 0 0 1
+4 0 318
+4 0 318 0 0 0 0 0 0 0 0 0 0 318 39
jump=32 0x3877c89be8 0 
* 0 
jump=42 0x3877c89bd0 0 
* 0 
jump=40 0x3877c89bb8 0 
* 0 
jump=40 +11 0 
* 0 
jump=40 0x3877c89c48 0 
* 0 
jump=42 0x3877c89c30 0 
* 0 
jump=40 0x3877c89c18 0 
* 0 
jump=42 0x3877c89c00 0 
* 0 
+11 0 40 40
+3 0 40
+4 0 40
+4 0 40 40
+4 0 40
+4 0 40 0 40
+4 0 40
+9 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-40 0 754 754
+4 0 754 0 754 0 0 3 0 0 3
+4 0 754 754
+4 0 754 0 754
+4 0 754 754
+4 0 754 0 754 0 0 1 0 0 1
+4 0 754 754
+4 0 754 0 754
+4 0 754
+4 0 754
+4 0 754 0 0 0 0 0 0 0 0 754 21
jcnd=282/754 0x3877c89c60 0 
* 0 
-32 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42
jcnd=10/42 0x3877c89c60 0 
* 0 
-24 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-16 0 42 42 0 1 0 0 1
+4 0 42 0 42
+4 0 42 0 0 1 0 0 1
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42 6
jcnd=10/42 0x3877c89c60 0 
* 0 
+6 0 600
+4 0 600 600
+3 0 600 0 600 0 0 1 0 0 1
+3 0 600 600
+4 0 600 0 600 0 0 3 0 0 3
+4 0 600 600
+4 0 600 0 600 0 0 4 0 0 4
+4 0 600 600
+4 0 600 0 600
+4 0 600
jump=600 -80 0 
* 0 
-30 0 32 32
+3 0 32 0 32
+3 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
-24 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42
jump=42 -80 0 
* 0 
-16 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 -80 0 
* 0 
+8 0 40 40
+3 0 40
+4 0 40 0 0 1 0 0 1
+4 0 40
+4 0 40
jump=40 -39 0 
* 0 
+9 0 42
+3 0 42 0 0 0 0 0 0 0 0 42
+6 0 42 42
+3 0 42
+4 0 42
jump=42 -72 0 
* 0 
+8 0 32
+4 0 32 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32
+4 0 32
jump=32 -99 0 
* 0 
+11 0 42 42 0 1 0 0 1
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b78 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b70 0 
* 0 
+9 0 42 42
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b68 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b60 0 
* 0 
+9 0 318 0 318 1 0 0 1
+3 0 318 318

fn=(104) alloc_perturb
0x3877c77180 0 209 209 0 1 0 0 1
+6 0 209
+2 0 209 0 0 0 0 0 0 0 0 209 1
+2 0 209 209

fn=(38)
0x3877c79a00 0 328 0 328 1 0 0 1
+2 0 328
+3 0 328 0 328
+2 0 328 0 328
+2 0 328 0 328 0 0 1 0 0 1
+2 0 328
+3 0 328 0 328
+1 0 328 0 328
+1 0 328
+4 0 328
+4 0 328 0 0 0 0 0 0 0 0 328
+6 0 328
+4 0 328
+6 0 328
+3 0 328
+4 0 328
+4 0 328
+4 0 328
+3 0 328 0 0 0 0 0 0 0 0 328
+6 0 328 328 0 1 1 0 1 1
+7 0 328 0 0 0 0 0 0 0 0 328 5
jcnd=206/328 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 119 119
+6 0 119
+4 0 119
+2 0 119 0 0 0 0 0 0 0 0 119
+6 0 119
+3 0 119
+4 0 119 119
+1 0 119 119
+1 0 119 119
+2 0 119 119
+2 0 119 119
+2 0 119 119
+2 0 119 119
-14 0 209
+4 0 209 209
+1 0 209 209
+1 0 209 209
+2 0 209 209
+2 0 209 209
+2 0 209 209
+2 0 209 209
+7 0 223
+7 0 223 0 0 1 0 0 1 0 0 223 2
+2 0 223
+3 0 223
+5 0 223
+3 0 223
+4 0 223 0 223
+4 0 223
+2 0 223
+5 0 223 223 0 0 5 0 0 5
+4 0 223
+3 0 223 0 0 0 0 0 0 0 0 223
jcnd=223/223 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 223 0 0 1 0 0 1
+3 0 223
+3 0 223
+3 0 223
+4 0 223
+3 0 223
+4 0 223 0 223
+5 0 223
+3 0 223 0 223
+4 0 223 0 223
+4 0 223 0 223
+5 0 223
+3 0 223
+3 0 223
+3 0 223
+3 0 223
+4 0 223
+4 0 223 0 0 1 0 0 1
+4 0 223 0 223
+4 0 223
+4 0 223 0 223
+5 0 223 0 223
+5 0 223
+3 0 223
+3 0 223 0 223
+5 0 223
+5 0 223
+3 0 223 0 223
+4 0 223 0 223
+4 0 223
+6 0 223 0 223
+4 0 223 0 223
+5 0 223 0 0 1 0 0 1
+3 0 223
+3 0 223
+3 0 223
jump=223 +87 0 
* 0 
+8 0 182
+3 0 182
+4 0 182
+2 0 182
+2 0 182
+3 0 182
+3 0 182
+3 0 182
+2 0 182
+2 0 182
+5 0 182
+2 0 182 182 0 0 1 0 0 1
+4 0 182
+3 0 182
+4 0 182 0 182
+4 0 182 0 182
+8 0 182
+7 0 182 0 182
+4 0 182 0 182
+4 0 182 0 182
+4 0 182 0 0 0 0 0 0 0 0 182
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 471 471 0 1 0 0 1
+4 0 471
+3 0 471 0 0 0 0 0 0 0 0 471 26
jcnd=192/471 0x3877c79ef0 0 
* 0 
+6 0 279 279
+4 0 279 279
+4 0 279
+4 0 279 0 0 0 0 0 0 0 0 279
+6 0 279 279 0 1 0 0 1
+7 0 279 0 0 0 0 0 0 0 0 279 2
+6 0 279
+4 0 279
+7 0 279 0 0 0 0 0 0 0 0 279 2
+2 0 279
+3 0 279 0 0 0 0 0 0 0 0 279 62
jcnd=203/279 0x3877c79e28 0 
* 0 
+6 0 262
+3 0 262 0 262
+4 0 262 0 262
+5 0 262 0 0 0 0 0 0 0 0 262 11
jcnd=14/262 0x3877c7a090 0 
* 0 
+6 0 248
+7 0 248 0 0 0 0 0 0 0 0 248 8
jcnd=182/248 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 5
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 203 203 0 1 0 0 1
+4 0 203
+3 0 203 0 0 0 0 0 0 0 0 203 28
jcnd=103/203 0x3877c79ce1 0 
* 0 
+6 0 100 100
+5 0 100 0 0 0 0 0 0 0 0 100 7
jcnd=83/100 0x3877c79ce1 0 
* 0 
+6 0 17 0 0 1 0 0 1
+3 0 17
+3 0 17
+3 0 17
+7 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17 0 17
+4 0 17 0 17 0 0 13 0 0 13
+4 0 17 0 17
+4 0 17 0 0 0 0 0 0 0 0 17 4
jcnd=10/17 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7
+4 0 7
+3 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
+4 0 7
+3 0 7 0 7
cfn=(104)
calls=7 0x3877c77180 0 
* 0 28 14 0 0 0 0 0 0 0 7
-56 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 17
+3 0 17
jump=17 0x3877c79ae3 0 
* 0 
+55 0 192 0 0 1 0 0 1
+7 0 192
+3 0 192 0 0 0 0 0 0 0 0 192 2
+6 0 192 192 0 1 0 0 1
+4 0 192
+3 0 192
+3 0 192
+2 0 192
+4 0 192
+3 0 192
+3 0 192
+2 0 192
+2 0 192
+2 0 192
+2 0 192 192 0 0 1 0 0 1
+8 0 192
+5 0 192
+5 0 192
+2 0 192 0 0 0 0 0 0 0 0 192
-2 0 113
+2 0 113 0 0 0 0 0 0 0 0 113
+2 0 305
+2 0 305 0 0 0 0 0 0 0 0 305 18
jcnd=162/305 +64 0 
* 0 
+2 0 143
+8 0 143
+3 0 143
+3 0 143 0 0 0 0 0 0 0 0 143 1
jcnd=1/143 0x3877c79fc0 0 
* 0 
-6 0 103
+3 0 103
+3 0 103 0 0 0 0 0 0 0 0 103 4
jcnd=19/103 0x3877c79fc0 0 
* 0 
+2 0 226
+2 0 226 226
+8 0 226
+2 0 226 0 0 0 0 0 0 0 0 226 20
jcnd=103/226 -20 0 
* 0 
+2 0 123
+2 0 123
+5 0 123
+3 0 123
+3 0 123
+2 0 123
+2 0 123
+5 0 123 0 0 0 0 0 0 0 0 123 1
jcnd=1/123 +14 0 
* 0 
+2 0 122
+2 0 122
+4 0 122
+2 0 122
+2 0 122 0 0 0 0 0 0 0 0 122 4
jcnd=60/122 -8 0 
* 0 
-8 0 664
+4 0 664
+2 0 664
+2 0 664 0 0 0 0 0 0 0 0 664 70
jcnd=476/664 -8 0 
* 0 
-2 0 162 0 0 1 0 0 1
+2 0 162 0 0 0 0 0 0 0 0 162 13
jcnd=128/162 -8 0 
* 0 
+2 0 285 285 0 0 10 0 0 10
+4 0 285 0 0 1 0 0 1
+3 0 285 0 0 0 0 0 0 0 0 285 103
jcnd=172/285 0x3877c7a1cf 0 
* 0 
+6 0 113
+2 0 113
+4 0 113
+2 0 113
+2 0 113
+2 0 113 0 113
+8 0 113
jump=113 0x3877c79f30 0 
* 0 
+37 0 20 20 0 1 0 0 1
+5 0 20 20
+4 0 20
+4 0 20 20
+5 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 14 0 0 1 0 0 1
+7 0 14 0 14
+6 0 14
+3 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 172 172 0 1 3 0 1 3
+4 0 172 172 0 0 1 0 0 1
+4 0 172
+3 0 172 172
+4 0 172
+4 0 172
+3 0 172
+3 0 172 172
+4 0 172 0 0 0 0 0 0 0 0 172
+6 0 172 172
+4 0 172 0 0 0 0 0 0 0 0 172
+6 0 172 172 0 1 0 0 1
+8 0 172 0 172
+4 0 172 0 172
+4 0 172 0 0 0 0 0 0 0 0 172 6
jcnd=105/172 +38 0 
* 0 
+2 0 67 67 0 0 1 0 0 1
+4 0 67
+3 0 67 0 0 0 0 0 0 0 0 67
+2 0 67 67
+5 0 67 0 0 0 0 0 0 0 0 67
+6 0 67 67
+4 0 67 0 67
+4 0 67 67
+4 0 67 0 67
+4 0 67
+4 0 67 0 0 0 0 0 0 0 0 67
-4 0 105
+4 0 105 0 0 0 0 0 0 0 0 105 5
jcnd=9/105 0x3877c7a2e3 0 
* 0 
+6 0 163 163
+4 0 163 163 0 1 0 0 1
+4 0 163 0 0 0 0 0 0 0 0 163
+6 0 163
+4 0 163
+7 0 163 0 163 0 0 9 0 0 9
+4 0 163 0 163
+4 0 163 0 163
+4 0 163 0 163
+4 0 163 0 0 0 0 0 0 0 0 163 2
+2 0 163 0 163
+5 0 163
+7 0 163 0 0 0 0 0 0 0 0 163 2
jcnd=157/163 +18 0 
* 0 
+2 0 6 0 6 0 0 1 0 0 1
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 1 0 0 1
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 157 0 0 1 0 0 1
+7 0 157 0 157 0 0 3 0 0 3
+4 0 157
+3 0 157
+3 0 157
+4 0 157
+3 0 157
+4 0 157
+3 0 157
+3 0 157
+4 0 157 0 157
+4 0 157 0 157 0 0 1 0 0 1
+4 0 157
jump=157 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 9
+7 0 9 0 9
+6 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +7 0 
* 0 
+7 0 172
+4 0 172 0 0 1 0 0 1
+3 0 172
+3 0 172 0 172
cfn=(104)
calls=172 0x3877c77180 0 
* 0 688 344 0 1 0 0 1 0 0 172
+5 0 172
+3 0 172
jump=172 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 20 0 0 1 0 0 1
+7 0 20
+2 0 20
+4 0 20
+3 0 20
+3 0 20 0 20
+5 0 20
+3 0 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20
+3 0 20
+4 0 20 0 20
+4 0 20 0 20 0 0 2 0 0 2
+4 0 20
+3 0 20
+3 0 20 0 20
cfn=(104)
calls=20 0x3877c77180 0 
* 0 80 40 0 0 0 0 0 0 0 20 1
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 

ob=(5)
fl=(8)
fn=(164)
0x387e4bb2f0 0 328 0 0 1 0 0 1
+3 0 328 0 0 0 0 0 0 0 0 328
+2 0 328
cob=(2)
cfi=(9)
cfn=(168)
calls=328 0x3877c7b8b0 0 
* 0 35058 8828 4704 21 4 0 21 4 0 8254 140
* 0 328 328 0 1 1 0 1 1 0 0 0 328

fn=(32)
0x387e4bd0b0 0 328 0 328 1 0 0 1
+1 0 328
+5 0 328
+3 0 328 0 328
+1 0 328
+4 0 328 0 0 1 0 0 1
+3 0 328
+4 0 328
+3 0 328 0 328 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36)
calls=328 0x3877c7aa50 0 
* 0 73267 11869 11185 34 32 34 34 32 34 12256 452
* 0 328 328 0 1 1 0 1 1 0 0 0 328
+5 0 328
+3 0 328 0 0 0 0 0 0 0 0 328
jcnd=328/328 +96 0 
* 0 
+96 0 328 0 0 1 0 0 1
+4 0 328 328
+1 0 328 328
+1 0 328 328

totals: 896084 335058 215369 226 59 65 226 59 65 36375 1045 1958 39
