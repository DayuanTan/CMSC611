version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 551


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 703186474 - 706788919
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 623 0 623 1 0 0 1
+1 * 623
+3 * 623
+4 * 623 0 623
+4 * 623 0 623
+4 +1 623 623
+4 * 623
+3 * 623 0 623
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=623 0x402d74 645 
* * 8099 3738 1246
+5 * 623
+3 * 623 0 623
+3 +1 623 623
+6 * 623 0 623
+3 * 623 623
+6 * 623 0 623
+3 +1 623 623
+6 * 623 0 623 1 0 0 1
+3 * 623 623
+6 * 623 0 623
+3 +2 623 0 623
+7 * 623
jump=623 +86 * 
* * 
+2 +1 194999 194999
+3 * 194999
+3 * 194999 194999
+4 * 194999
+3 * 194999
+3 * 194999 0 194999
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=194999 0x402d9a 770 
* * 2144989 974995 584997
+5 * 194999 194999
+4 * 194999 194999
+5 * 194999
+4 * 194999 0 194999
+5 +1 194999 194999
+3 * 194999
+3 * 194999 194999
+4 * 194999
+3 * 194999
+3 * 194999 0 194999
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=194999 0x402dba 770 
* * 2144989 974995 584997 1 0 0 1
+5 * 194999 194999
+2 * 194999
+4 * 194999 194999
+5 * 194999
+4 * 194999 0 194999
+5 -2 194999 0 194999
+4 * 194999 194999
+3 * 194999
+3 * 194999 194999
+3 * 194999 0 0 0 0 0 0 0 0 194999 626
jcnd=194376/194999 -93 +1 
* * 
-9 * 623 623 0 1 0 0 1
+3 * 623
+3 * 623 623
+3 * 623 0 0 0 0 0 0 0 0 623
jcnd=623/623 -93 +1 
* * 
+2 +4 623 623
+3 * 623
+3 * 623
+4 * 623 623 0 1 0 0 1
+5 * 623
+4 * 623
+3 * 623 0 623
+5 +1 623 623
+3 * 623
+3 * 623
+4 * 623 623
+5 * 623
+4 * 623
+3 * 623 0 623
+5 +1 623 0 623
+7 * 623
jump=623 0x4016ee * 
* * 
+2 +1 194999 194999
+3 * 194999
+3 * 194999 194999
+4 * 194999
+3 * 194999 0 0 1 0 0 1
+3 * 194999 0 194999
cfi=(2)
cfn=(146)
calls=194999 0x402dba 770 
* * 2144989 974995 584997
+5 * 194999 194999
+2 * 194999
+4 * 194999 194999
+5 * 194999 0 194999
+5 +1 194999 194999
+3 * 194999
+3 * 194999 194999
+4 * 194999
+3 * 194999
+3 * 194999 0 194999
cfi=(2)
cfn=(144)
calls=194999 0x402d9a 770 
* * 2144989 974995 584997
+5 * 194999 194999
+4 * 194999 194999
+5 * 194999 0 194999
+5 +1 194999 194999
+5 * 194999 194999
+5 * 194999 194999
+5 * 194999
+4 * 194999 0 194999
+5 +1 194999 194999
+5 * 194999 194999
+5 * 194999 194999
+5 * 194999
+4 * 194999 0 194999
+5 -4 194999 0 194999
+4 * 194999 194999
+3 * 194999
+3 * 194999 194999
+3 * 194999 0 0 0 0 0 0 0 0 194999 624
jcnd=194376/194999 0x401672 +1 
* * 
-9 * 623 623 0 1 0 0 1
+3 * 623
+3 * 623 623
+3 * 623 0 0 0 0 0 0 0 0 623
jcnd=623/623 0x401672 +1 
* * 
+6 +6 623 623 0 1 0 0 1
+5 * 623 623
+5 * 623 0 623
+5 +2 623 623
+3 +1 623 0 623
+3 * 623 623
+5 * 623 623
+1 * 623 623

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 623
+7 * 623
+7 * 623
+3 * 623
+3 * 623 0 623
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=623 0x4030b2 310 
* * 783879 240138 228000 65 25 19 65 25 19 48001 1726 2490 311
+5 * 623
+7 * 623
+7 * 623
+3 * 623
+3 * 623 0 623
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=623 0x402ff4 310 
* * 781391 236873 223639 43 16 150 43 16 150 47357 2523 2490
+5 * 623 0 0 1 0 0 1
+7 * 623
+7 * 623
+3 * 623
+3 * 623 0 623
cfn=(142)
calls=623 0x401585 -52 
* * 20320391 8985529 4690567 8 0 0 8 0 0 391244 1250
+5 * 623 0 623
+8 * 623 623
+6 * 623 0 623
+6 * 623
+7 * 623
+3 * 623 0 623
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=623 0x402df4 414 
* * 154750 48547 34213 33 6 0 33 6 0 17155 488 1246
+5 * 623
+7 * 623
+3 * 623 0 623 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=623 0x402e74 414 
* * 166132 52579 37923 8 2 0 8 2 0 20103 160 1246
+5 +2 623
+7 * 623
+7 * 623
+3 * 623
+3 * 623 0 623
cfi=(2)
cfn=(4)
calls=623 0x4030b2 310 
* * 783197 240081 227845 2 1 1 2 1 1 47913 1022 2490
+5 * 623
+7 * 623
+7 * 623
+3 * 623
+3 * 623 0 623
cfi=(2)
cfn=(80)
calls=623 0x402ff4 310 
* * 780027 236785 223445 0 0 0 0 0 0 47115 1786 2490
+5 * 623 623
+6 * 623 0 0 1 0 0 1
+7 * 623
+7 * 623 0 623
+6 * 623 623
+8 * 623
+3 * 623
+3 * 623 0 623
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=623 0x401719 -33 
* * 9396709 3913686 2154334 4 0 0 4 0 0 195622 626
+5 * 623 0 623
+8 * 623 623
+6 * 623 0 623
+6 * 623
+7 * 623 0 0 1 0 0 1
+3 * 623 0 623
cfi=(2)
cfn=(148)
calls=623 0x402df4 414 
* * 154750 48547 34213 0 0 0 0 0 0 17155 482 1246
+5 * 623
+7 * 623
+3 * 623 0 623
cfi=(2)
cfn=(178)
calls=623 0x402e74 414 
* * 166132 52579 37923 0 0 0 0 0 0 20103 156 1246
+5 +2 623 623
+7 * 623
+3 * 623 0 623
cfi=(2)
cfn=(2)
calls=623 0x402d74 645 
* * 8099 3738 1246
+5 * 623 623
+6 * 623
+3 * 623
+3 * 623
+3 * 623 623
+7 * 623
+3 * 623 0 0 1 0 0 1
+3 * 623 0 623
cfi=(2)
cfn=(144)
calls=623 0x402d9a 770 
* * 6853 3115 1869
+5 * 623
+3 * 623
+7 * 623
+3 * 623
+3 * 623 0 623
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=623 0x402eda 901 
* * 54489 20735 15797 46 43 11 46 43 11 2224 89 53
+5 +1 623 623
+7 * 623
+3 * 623 0 623
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=623 0x402f54 645 
* * 8099 3738 1246 0 1 0 0 1
+5 * 623 623
+6 * 623
+3 * 623
+3 * 623
+3 * 623 623
+7 * 623 0 0 1 0 0 1
+3 * 623
+3 * 623 0 623
cfi=(2)
cfn=(146)
calls=623 0x402dba 770 
* * 6853 3115 1869
+5 * 623
+3 * 623
+7 * 623
+3 * 623
+3 * 623 0 623
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=623 0x402f7a 901 
* * 53943 20492 15606 22 43 90 22 43 90 2119 93 53
+5 +1 623 623
+7 * 623
+3 * 623 0 623
cfi=(2)
cfn=(10)
calls=623 0x402f54 645 
* * 8099 3738 1246
+5 * 623 623
+6 * 623
+3 * 623
+3 * 623
+3 * 623 623 0 1 0 0 1
+7 * 623
+3 * 623
+3 * 623 0 623
cfi=(2)
cfn=(146)
calls=623 0x402dba 770 
* * 6853 3115 1869
+5 * 623 623
+2 * 623
+4 * 623 623
+8 * 623 623
+8 * 623 0 623
+8 +1 623 623
+7 * 623
+3 * 623 0 623
cfi=(2)
cfn=(2)
calls=623 0x402d74 645 
* * 8099 3738 1246
+5 * 623 623 0 1 0 0 1
+6 * 623
+3 * 623
+3 * 623
+3 * 623 623
+7 * 623
+3 * 623
+3 * 623 0 623
cfi=(2)
cfn=(144)
calls=623 0x402d9a 770 
* * 6853 3115 1869
+5 * 623 623
+4 * 623 623
+8 * 623
+4 * 623 623
+8 * 623
+3 * 623 0 623
+8 +2 623 0 623
+7 -12 623 623
+8 * 623 623
+7 * 623 0 0 0 0 0 0 0 0 623 3
jcnd=1/623 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 623
+7 * 623
+3 * 623 0 623
cfi=(2)
cfn=(2)
calls=623 0x402d74 645 
* * 8099 3738 1246 2 0 1 2 0 1
+5 * 623
+3 * 623 623
+7 * 623
+3 * 623 0 623
cfi=(2)
cfn=(2)
calls=623 0x402d74 645 
* * 8099 3738 1246 0 1 0 0 1
+5 * 623
+3 * 623 0 0 0 0 0 0 0 0 623
+2 * 623 0 0 1 0 0 1
+5 * 623
jump=623 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 623
+2 * 623 0 0 0 0 0 0 0 0 623
jcnd=623/623 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 623 0 623
+1 * 623
+3 * 623
+4 * 623 0 623
+4 * 623 0 623
+4 * 623 0 623
+5 +1 623 623
+4 * 623
+3 * 623 0 623
cfi=(2)
cfn=(2)
calls=623 0x402d74 645 
* * 8099 3738 1246
+5 * 623
+3 * 623 0 623
+3 +1 623 623 0 1 0 0 1
+6 * 623 0 623
+3 * 623 623
+6 * 623 0 623
+3 +2 623 0 623
+7 * 623
jump=623 +86 * 
* * 
+2 +1 194999 194999
+3 * 194999
+3 * 194999 194999
+4 * 194999
+3 * 194999
+3 * 194999 0 194999
cfi=(2)
cfn=(144)
calls=194999 0x402d9a 770 
* * 2144989 974995 584997
+5 * 194999 194999
+4 * 194999 194999
+5 * 194999
+4 * 194999 0 194999
+5 +1 194999 194999
+3 * 194999
+3 * 194999 194999
+4 * 194999
+3 * 194999
+3 * 194999 0 194999
cfi=(2)
cfn=(146)
calls=194999 0x402dba 770 
* * 2144989 974995 584997
+5 * 194999 194999
+2 * 194999
+4 * 194999 194999
+5 * 194999
+4 * 194999 0 194999
+5 -2 194999 0 194999
+4 * 194999 194999
+3 * 194999
+3 * 194999 194999
+3 * 194999 0 0 0 0 0 0 0 0 194999 626
jcnd=194376/194999 -93 +1 
* * 
-9 * 623 623 0 1 0 0 1
+3 * 623
+3 * 623 623
+3 * 623 0 0 0 0 0 0 0 0 623
jcnd=623/623 -93 +1 
* * 
+2 +4 623 623
+3 * 623
+3 * 623 0 0 1 0 0 1
+4 * 623 623
+5 * 623
+4 * 623
+3 * 623 0 623
+5 +1 623 623
+3 * 623
+3 * 623
+4 * 623 623
+5 * 623
+4 * 623
+3 * 623 0 623
+5 +1 623 623
+5 * 623 623
+5 * 623 623
+5 * 623 0 0 1 0 0 1
+4 * 623
+3 * 623 0 623
+5 +2 623 623
+3 +1 623 0 623
+3 * 623 623
+5 * 623 623
+1 * 623 623

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246 1 0 0 1
+4 +1 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1246 0x4049d4 -35 
* * 7476 2492 3738 1 0 0 1
+5 * 1246 1246
+1 * 1246 1246

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1246 0x404520 -35 
* * 6230 2492 2492
+5 * 1246 1246
+1 * 1246 1246

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1246 0x404a28 -35 
* * 7476 2492 3738 1 0 1 1 0 1
+5 * 1246 1246
+1 * 1246 1246

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1246 0x4044cc -35 
* * 6230 2492 2492
+5 * 1246 1246
+1 * 1246 1246

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 623 0 623
+1 * 623
+3 * 623
+4 * 623 0 623
+4 * 623 0 623
+4 * 623 0 623
+4 +1 623 623
+4 * 623 623
+4 * 623 623
+4 * 623
+3 * 623
+3 * 623 0 623
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=623 0x403df2 -87 
* * 14952 4984 5607 0 40 3 0 40 3 623 2
+5 * 623 623
+1 * 623 623

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246 0 1246
+4 * 1246 1246
+4 * 1246 1246
+1 * 1246 1246

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 623 0 623
+1 * 623
+3 * 623
+4 * 623 0 623
+4 * 623 0 623
+4 * 623 0 623
+4 +1 623 623
+4 * 623 623
+4 * 623 623
+4 * 623
+3 * 623
+3 * 623 0 623
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=623 0x40406a -87 
* * 14952 4984 5607 0 39 31 0 39 31 623
+5 * 623 623
+1 * 623 623

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+4 * 1246 1246
+4 * 1246 1246
+1 * 1246 1246

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1336 0 1336
+1 * 1336
+3 * 1336 0 1336
+4 +1 1336 1336
+4 * 1336 1336
+1 * 1336 1336

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2492 0 2492 1 0 0 1
+1 * 2492
+3 * 2492 0 2492
+4 +1 2492 2492 0 1 0 0 1
+4 * 2492 2492
+1 * 2492 2492

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1336 0 1336
+1 * 1336
+3 * 1336 0 1336 0 0 1 0 0 1
+4 +1 1336 1336
+4 * 1336 1336
+1 * 1336 1336

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2492 0 2492 1 0 0 1
+1 * 2492
+3 * 2492
+4 * 2492 0 2492
+4 +1 2492
+4 * 2492
+3 * 2492 0 2492
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2492 0x404ffe 790 
* * 14952 7476 4984 1 0 0 1
+5 * 2492 2492
+3 * 2492 2492
+1 * 2492 2492

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2492 0 2492 1 0 0 1
+1 * 2492
+3 * 2492 0 2492
+4 +1 2492 2492
+4 * 2492 2492
+1 * 2492 2492

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2492 0 2492 1 0 0 1
+1 * 2492
+3 * 2492
+4 * 2492 0 2492
+4 +1 2492
+4 * 2492
+3 * 2492 0 2492 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2492 0x40500c 790 
* * 14952 7476 4984 1 0 0 1
+5 * 2492 2492
+3 * 2492 2492
+1 * 2492 2492

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 1246
+4 * 1246 1246
+1 * 1246 1246

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1255 0 1255 1 0 0 1
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 +2 1255 1255
+4 * 1255
+3 * 1255 0 1255
cfn=(102)
calls=1255 0x4048de +12 
* * 7530 2510 2510 1 0 0 1
+5 * 1255 1255
+4 * 1255 0 0 1 0 0 1
+3 * 1255
+2 * 1255 0 0 0 0 0 0 0 0 1255
jcnd=1255/1255 +7 +3 
* * 
+7 +3 1255 1255
+4 * 1255
+4 * 1255
+3 * 1255 0 1255
cob=(5) /usr/lib64/libstdc++.so.6.0.13
cfi=(8) ???
cfn=(32) operator new(unsigned long)
calls=1255 0x387e4bd0b0 0 
* * 362675 51553 49844 35 19 49 35 19 49 57498 2739 1255
* * 1255 1255 0 0 0 0 0 0 0 0 0 1255
+5 +1 1255 1255
+1 * 1255 1255

fn=(18)
0x404a28 81 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246 0 1246 0 0 1 0 0 1
+4 * 1246 0 1246
+4 * 1246 1246
+1 * 1246 1246

fn=(92)
0x4049d4 81 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 1246
+1 * 1246 1246

fn=(196)
0x404520 86 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+4 * 1246 1246
+1 * 1246 1246

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1255 0 1255 1 0 0 1
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 * 1255 0 1255 1 0 0 1
+4 +2 1255 1255
+4 * 1255
+3 * 1255 0 1255
cfn=(28)
calls=1255 0x404992 +12 
* * 7530 2510 2510 1 0 0 1
+5 * 1255 1255
+4 * 1255
+3 * 1255
+2 * 1255 0 0 0 0 0 0 0 0 1255
jcnd=1255/1255 +7 +3 
* * 
+7 +3 1255 1255
+4 * 1255
+4 * 1255
+3 * 1255 0 1255
cob=(5)
cfi=(8)
cfn=(32)
calls=1255 0x387e4bd0b0 0 
* * 367784 57867 58418 20 25 21 20 25 21 58835 1174 1255
* * 1255 1255 0 1 1 0 1 1 0 0 0 1255
+5 +1 1255 1255
+1 * 1255 1255

fn=(102)
0x4048de 113 1273 0 1273 1 0 0 1
+1 * 1273
+3 * 1273 0 1273
+4 +1 1273
+10 * 1273 1273
+1 * 1273 1273

fn=(266)
0x40406a 129 623 0 623
+1 * 623
+3 * 623
+4 * 623 0 623
+4 * 623 0 623
+4 * 623 0 623
+4 +1 623 623
+4 * 623
+3 * 623
+5 * 623 0 623
cfi=(16)
cfn=(226)
calls=623 0x402d61 -20 
* * 4361 1869 1869
+5 * 623
+3 * 623 0 0 0 0 0 0 0 0 623
+2 * 623 623
+4 * 623 623 0 0 39 0 0 39
+2 * 623 0 623 0 0 31 0 0 31
+2 * 623 623
+1 * 623 623

fn=(28)
0x404992 113 1273 0 1273 1 0 0 1
+1 * 1273
+3 * 1273 0 1273
+4 +1 1273
+10 * 1273 1273
+1 * 1273 1273

fn=(176)
0x4044cc 86 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+4 * 1246 1246
+1 * 1246 1246

fn=(224)
0x403df2 129 623 0 623
+1 * 623
+3 * 623
+4 * 623 0 623
+4 * 623 0 623
+4 * 623 0 623
+4 +1 623 623
+4 * 623
+3 * 623
+5 * 623 0 623
cfi=(16)
cfn=(226)
calls=623 0x402d61 -20 
* * 4361 1869 1869
+5 * 623
+3 * 623 0 0 0 0 0 0 0 0 623 2
+2 * 623 623
+4 * 623 623 0 0 40 0 0 40
+2 * 623 0 623 0 0 3 0 0 3
+2 * 623 623
+1 * 623 623

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1255 0 1255
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 +1 1255 1255
+4 * 1255
+3 * 1255 0 1255
cob=(5)
cfi=(8)
cfn=(164) operator delete(void*)
calls=1255 0x387e4bb2f0 0 
* * 136049 33793 14980 24 5 0 24 5 0 33292 980 1255
* * 1255 1255 0 1 1 0 1 1 0 0 0 1255
+5 * 1255 1255
+1 * 1255 1255

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1255 0 1255
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 +1 1255 1255
+4 * 1255
+3 * 1255 0 1255
cob=(5)
cfi=(8)
cfn=(164)
calls=1255 0x387e4bb2f0 0 
* * 158816 41861 22396 1 2 0 1 2 0 39188 328 1255
* * 1255 1255 0 0 0 0 0 0 0 0 0 1255
+5 * 1255 1255
+1 * 1255 1255

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 6 17
+5 * 18 18
+1 * 18 18

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +2 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1246 0x404484 107 
* * 864262 299368 291896 25 3 4 25 3 4 35020 1641 2488 311
+5 * 1246 1246
+1 * 1246 1246

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 6 17
+5 * 18 18
+1 * 18 18

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +2 1246 1246 0 1 0 0 1
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1246 0x404a36 450 
* * 829374 286908 279436 24 3 4 24 3 4 35020 1641 2488 311
+5 * 1246 1246
+1 * 1246 1246

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +2 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1246 0x40439c 107 
* * 864262 299368 291896 7 0 106 7 0 106 35020 1631 2488
+5 * 1246 1246
+1 * 1246 1246

fn=(116)
0x40439c 107 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +10 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1246 0x4047d7 -26 
* * 846818 293138 285666 7 0 106 7 0 106 35020 1631 2488
+5 +1 1246 1246
+1 * 1246 1246

fn=(118)
0x4047d7 91 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +2 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1246 0x4049e2 450 
* * 829374 286908 279436 7 0 106 7 0 106 35020 1631 2488
+5 * 1246 1246
+1 * 1246 1246

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 49 2 0 49 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(232)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 49 2 0 49 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 49 1 0 49 140 5 17
+5 * 18 18
+1 * 18 18

fn=(50)
0x404484 107 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +10 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(52)
calls=1246 0x404829 -26 
* * 846818 293138 285666 25 3 4 25 3 4 35020 1641 2488 311
+5 +1 1246 1246
+1 * 1246 1246

fn=(270)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 49 2 0 49 140 5 17
+5 * 18 18
+1 * 18 18

fl=(2)
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246
+4 +2 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246 1246
+4 * 1246 1246
+3 * 1246
+3 * 1246
+3 * 1246
+4 * 1246
+3 * 1246 1246
+4 * 1246 1246
+3 -1 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1246 0x403d98 +11 
* * 192712 54072 34728 2 2 0 2 2 0 40206 316 2492
+5 +1 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=1246 0x403296 -82 
* * 28658 9968 9968 1 0 0 1
+5 * 1246
jump=1246 +28 * 
* * 
+28 * 1246
+4 * 1246 1246
+1 * 1246 1246
+1 * 1246 1246

fn=(2)
0x402d74 645 5020 0 5020 1 0 0 1
+1 * 5020
+3 * 5020 0 5020 0 0 1 0 0 1
+4 +1 5020 5020
+4 * 5020 5020 0 1 1 0 1 1
+4 * 5020
+3 * 5020 5020
+4 * 5020 5020
+3 * 5020
+3 * 5020
+3 * 5020
+4 * 5020 5020
+1 * 5020 5020

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +2 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1246 0x404236 -14 
* * 417480 73695 72991 23 22 11 23 22 11 60894 1107 2492
+5 * 1246 1246
+4 * 1246 0 1246
+3 +1 1246 1246
+4 * 1246 1246 0 1 0 0 1
+3 * 1246 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+3 * 1246 1246
+4 * 1246
+4 * 1246
+3 * 1246 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+1 * 1246 1246

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +2 1246 1246
+4 * 1246 1246 0 1 0 0 1
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=1246 0x403fbe -14 
* * 411822 67134 64230 21 16 44 21 16 44 59452 2678 2492
+5 * 1246 1246
+4 * 1246 0 1246
+3 +1 1246 1246
+4 * 1246 1246
+3 * 1246 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+3 * 1246 1246
+4 * 1246
+4 * 1246
+3 * 1246 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+1 * 1246 1246

fn=(244)
0x402f7a 901 623 0 623
+1 * 623
+3 * 623 0 0 1 0 0 1
+4 * 623 0 623
+4 * 623 0 623
+4 +2 623 623
+4 * 623 623
+4 * 623 623
+4 * 623 623
+4 * 623
+3 * 623 0 0 0 0 0 0 0 0 623
jcnd=9/623 +51 +10 
* * 
+2 +3 614 614
+4 * 614 614
+4 * 614 614
+4 -1 614 614
+4 * 614
+3 * 614
+3 * 614 0 614
cfi=(3)
cfn=(264)
calls=614 0x4036b1 215 
* * 23332 7982 8596 0 39 26 0 39 26 614
+5 +2 614 614
+4 * 614 614
+4 * 614
+4 * 614 614
+4 * 614 0 614
+4 * 614
jump=614 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 14242 4366 3832 21 4 64 21 4 64 882 93 53
+5 +2 623 623
+1 * 623 623

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 2519 0 2519 1 0 0 1
+1 * 2519
+3 * 2519 0 2519 1 0 0 1
+4 +1 2519 2519
+4 * 2519 2519
+1 * 2519 2519

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+3 * 1246 0 1246
+4 * 1246
+4 * 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1246 0x404380 726 
* * 12460 6230 4984
+5 * 1246 1246
+4 * 1246 1246
+1 * 1246 1246

fn=(148)
0x402df4 414 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246 1 0 0 1
+4 +2 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1246 0x40325e 113 
* * 7476 3738 2492
+5 * 1246
+3 * 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+3 -1 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1246 0x40326c 148 
* * 38626 12460 14952 4 0 0 4
+5 +1 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1246 0x4031ec 159 
* * 233494 69682 43506 27 6 0 27 6 0 34310 970 2492
+5 * 1246
jump=1246 +28 * 
* * 
+28 * 1246 0 0 1 0 0 1
+4 * 1246 1246
+1 * 1246 1246
+1 * 1246 1246

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1255 0 1255 1 0 0 1
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 +2 1255 1255
+5 * 1255 0 0 0 0 0 0 0 0 1255
+2 +1 1255 1255
+4 * 1255 1255
+4 * 1255 1255
+4 * 1255
+3 * 1255
+3 * 1255 0 1255
cfi=(5)
cfn=(160)
calls=1255 0x4044d6 -65 
* * 151109 38813 21255 25 6 0 25 6 0 33292 980 2510
+5 +1 1255 1255
+1 * 1255 1255

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1246 0x4043ca -45 
* * 44856 16198 17444 4 0 4 4 0 4
+5 +1 1246 1246 0 1 0 0 1
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(20)
calls=1246 0x404412 +43 
* * 448630 88647 81713 24 22 11 24 22 11 60894 1107 2492
+5 * 1246
jump=1246 +28 * 
* * 
+28 * 1246
+4 * 1246 1246
+1 * 1246 1246
+1 * 1246 1246

fn=(14)
0x4043ca 90 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246
+4 * 1246 0 1246 0 0 1 0 0 1
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(4)
cfn=(16)
calls=1246 0x404804 +24 
* * 22428 7476 8722 2 0 1 2 0 1
+5 * 1246 1246
+4 * 1246 0 1246 0 0 2 0 0 2
+7 * 1246 1246
+4 * 1246 0 1246 1 0 0 1
+8 * 1246 1246
+4 * 1246 0 1246
+8 +1 1246 1246
+1 * 1246 1246

fn=(80)
0x402ff4 310 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246 0 1246
+2 * 1246 0 1246
+2 * 1246 0 1246
+1 * 1246 0 0 1 0 0 1
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +2 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=1246 0x4039fc 117 
* * 7476 3738 2492 2 0 0 2
+5 * 1246
+3 * 1246 0 1246
cfi=(3)
cfn=(84)
calls=1246 0x4039ed -88 
* * 7476 3738 2492
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(2)
calls=1246 0x402d74 645 
* * 16198 7476 2492
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246
+3 * 1246 0 1246 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1246 0x403a0a 134 
* * 515240 107006 99118 28 16 44 28 16 44 59452 2678 2492
+5 +4 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(106)
calls=1246 0x40325e 113 
* * 7476 3738 2492 1 0 0 1
+5 * 1246
+3 * 1246 1246
+4 * 1246 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=1246 0x403a98 565 
* * 31150 12460 9968 2 0 0 2
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(112)
calls=1246 0x403a68 547 
* * 31150 12460 9968
+5 * 1246
+3 * 1246
+3 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(11)
cfn=(114)
calls=1246 0x403ac9 -60 
* * 882952 305598 299372 7 0 106 7 0 106 35020 1631 2488
+5 -3 1246 1246
+4 * 1246 0 1246
+4 * 1246
jump=1246 +28 +4 
* * 
+28 +4 1246
+4 * 1246 1246
+1 * 1246 1246
+2 * 1246 1246
+2 * 1246 1246
+1 * 1246 1246

fn=(188)
0x403d98 171 1255 0 1255 1 0 0 1
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 +2 1255 1255
+5 * 1255 0 0 0 0 0 0 0 0 1255 9
+2 +1 1255 1255
+4 * 1255 1255
+4 * 1255 1255
+4 * 1255
+3 * 1255
+3 * 1255 0 1255
cfi=(5)
cfn=(190)
calls=1255 0x40452a -65 
* * 173876 46881 28671 1 2 0 1 2 0 39188 328 2510
+5 +1 1255 1255
+1 * 1255 1255

fn=(22)
0x404236 167 1255 0 1255 1 0 0 1
+1 * 1255
+3 * 1255
+4 * 1255 0 1255 1 0 0 1
+4 * 1255 0 1255
+4 0 1255 1255
+5 0 1255 0 0 0 0 0 0 0 0 1255
+2 0 1255 1255
+4 0 1255 1255
+4 0 1255
+5 0 1255
+3 0 1255
+3 0 1255 0 1255
fi=(6) ???
cfi=(5)
cfn=(26)
calls=1255 0x404730 99 
* 0 400414 67907 68458 24 26 21 24 26 21 60090 1174 2510
+5 0 1255
fi=(6)
jump=1255 +7 0 
* 0 
+7 0 1255 1255
+1 0 1255 1255

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+4 * 1246 0 1246
+4 * 1246
+4 * 1246 0 0 1 0 0 1
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1246 0x404468 726 
* * 12460 6230 4984 1 0 0 1
+5 * 1246 1246
+4 * 1246 1246
+1 * 1246 1246

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+3 * 1246 0 1246
+4 * 1246
+4 * 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(10)
cfn=(44)
calls=1246 0x404468 726 
* * 12460 6230 4984
+5 * 1246 1246
+4 * 1246 1246
+1 * 1246 1246

fn=(86)
0x403a0a 134 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1246 0x4042e2 -45 
* * 44856 16198 17444 5 0 0 5
+5 +1 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246 1 0 0 1
cfn=(94)
calls=1246 0x40432a +43 
* * 442972 82086 72952 22 16 44 22 16 44 59452 2678 2492
+5 * 1246
jump=1246 +28 * 
* * 
+28 * 1246
+4 * 1246 1246
+1 * 1246 1246
+1 * 1246 1246

fn=(88)
0x4042e2 90 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246 1 0 0 1
cfi=(4)
cfn=(90)
calls=1246 0x4047b2 +24 
* * 22428 7476 8722 3 0 0 3
+5 * 1246 1246
+4 * 1246 0 1246
+7 * 1246 1246
+4 * 1246 0 1246
+8 * 1246 1246
+4 * 1246 0 1246
+8 +1 1246 1246
+1 * 1246 1246

fn=(156)
0x4031ec 159 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246
+4 +2 1246 1246
+4 * 1246 1246 0 1 0 0 1
+4 * 1246
+3 * 1246 1246
+4 * 1246 1246
+3 * 1246
+3 * 1246
+3 * 1246
+4 * 1246
+3 * 1246 1246
+4 * 1246 1246
+3 -1 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(158)
calls=1246 0x403ce6 +11 
* * 169948 46008 27308 24 6 0 24 6 0 34310 970 2492
+5 +1 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1246 0x4031b8 -82 
* * 28658 9968 9968 1 0 0 1
+5 * 1246
jump=1246 +28 * 
* * 
+28 * 1246
+4 * 1246 1246
+1 * 1246 1246
+1 * 1246 1246

fn=(172)
0x4031b8 79 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfi=(4)
cfn=(174)
calls=1246 0x403ccc +42 
* * 17444 6230 6230
+5 * 1246 1246
+1 * 1246 1246

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246)
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(10)
0x402f54 645 2528 0 2528 1 0 0 1
+1 * 2528
+3 * 2528 0 2528
+4 +1 2528 2528
+4 * 2528 2528 0 0 2 0 0 2
+4 * 2528
+3 * 2528 2528
+4 * 2528 2528
+3 * 2528
+3 * 2528
+3 * 2528
+4 * 2528 2528
+1 * 2528 2528

fn=(106)
0x40325e 113 2519 0 2519 1 0 0 1
+1 * 2519
+3 * 2519 0 2519
+4 +1 2519 2519
+4 * 2519 2519
+1 * 2519 2519

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 1264 0 1264 1 0 0 1
+1 * 1264
+3 * 1264 0 1264 0 0 1 0 0 1
+4 +1 1264 1264
+4 * 1264 1264
+1 * 1264 1264

fn=(82)
0x4039fc 117 1264 0 1264 1 0 0 1
+1 * 1264
+3 * 1264 0 1264 1 0 0 1
+4 +1 1264 1264
+4 * 1264 1264
+1 * 1264 1264

fn=(200)
0x402eda 901 623 0 623
+1 * 623
+3 * 623
+4 * 623 0 623
+4 * 623 0 623
+4 +2 623 623
+4 * 623 623
+4 * 623 623
+4 * 623 623
+4 * 623
+3 * 623 0 0 0 0 0 0 0 0 623 10
jcnd=9/623 +51 +10 
* * 
+2 +3 614 614
+4 * 614 614
+4 * 614 614
+4 -1 614 614
+4 * 614
+3 * 614
+3 * 614 0 614
cfi=(3)
cfn=(222)
calls=614 0x403373 215 
* * 23332 7982 8596 0 39 2 0 39 2 614 2
+5 +2 614 614
+4 * 614 614
+4 * 614
+4 * 614 614
+4 * 614 0 614
+4 * 614
jump=614 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202)
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 14788 4609 4023 43 4 9 43 4 9 987 77 53
+5 +2 623 623
+1 * 623 623

fn=(4)
0x4030b2 310 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246 0 1246
+2 * 1246 0 1246
+2 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246 1 0 0 1
+4 * 1246 0 1246
+4 +2 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(6)
calls=1246 0x403b08 117 
* * 7476 3738 2492 1 0 1 1 0 1
+5 * 1246
+3 * 1246 0 1246
cfi=(3)
cfn=(8)
calls=1246 0x403afa -88 
* * 7476 3738 2492 1 0 0 1
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(10)
calls=1246 0x402f54 645 
* * 16198 7476 2492 1 1 0 1 1
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(12)
calls=1246 0x403b16 134 
* * 520898 113567 107879 29 22 15 29 22 15 60894 1107 2492
+5 +4 1246 1246 0 1 0 0 1
+4 * 1246
+3 * 1246 0 1246
cfn=(40)
calls=1246 0x40333c 113 
* * 7476 3738 2492 2 0 0 2
+5 * 1246
+3 * 1246 1246
+4 * 1246 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(42)
calls=1246 0x403ba4 565 
* * 31150 12460 9968 3 0 0 3
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(46)
calls=1246 0x403b74 547 
* * 31150 12460 9968
+5 * 1246
+3 * 1246
+3 * 1246
+3 * 1246
+3 * 1246 0 1246 1 0 0 1
cfi=(11)
cfn=(48)
calls=1246 0x403bd5 -60 
* * 882952 305598 299372 26 3 4 26 3 4 35020 1641 2488 311
+5 -3 1246 1246
+4 * 1246 0 1246
+4 * 1246
jump=1246 +28 +4 
* * 
+28 +4 1246
+4 * 1246 1246
+1 * 1246 1246
+2 * 1246 1246
+2 * 1246 1246
+1 * 1246 1246

fn=(108)
0x403a98 565 1246 0 1246 1 0 0 1
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 +1 1246 1246
+4 * 1246 1246
+4 * 1246 0 1246
+4 * 1246
+4 * 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(10)
cfn=(110)
calls=1246 0x404380 726 
* * 12460 6230 4984 1 0 0 1
+5 * 1246 1246
+4 * 1246 1246
+1 * 1246 1246

fn=(178)
0x402e74 414 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246 1 0 0 1
+4 +2 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(40)
calls=1246 0x40333c 113 
* * 7476 3738 2492
+5 * 1246
+3 * 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+3 -1 1246
+3 * 1246
+3 * 1246 0 1246
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1246 0x40334a 148 
* * 38626 12460 14952 2 0 0 2
+5 +1 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(186)
calls=1246 0x4032ca 159 
* * 256258 77746 50926 4 2 0 4 2 0 40206 316 2492
+5 * 1246
jump=1246 +28 * 
* * 
+28 * 1246 0 0 1 0 0 1
+4 * 1246 1246
+1 * 1246 1246
+1 * 1246 1246

fn=(210)
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82)
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96)
0x403fbe 167 1255 0 1255 1 0 0 1
+1 * 1255 0 0 1 0 0 1
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 0 1255 1255
+5 0 1255 0 0 0 0 0 0 0 0 1255
+2 0 1255 1255
+4 0 1255 1255
+4 0 1255
+5 0 1255
+3 0 1255
+3 0 1255 0 1255
fi=(6)
cfi=(5)
cfn=(100)
calls=1255 0x40461a 99 
* 0 395305 61593 59884 38 19 49 38 19 49 58753 2739 2510
+5 0 1255
fi=(6)
jump=1255 +7 0 
* 0 
+7 0 1255 1255
+1 0 1255 1255

fn=(144)
0x402d9a 770 586243 0 586243
+1 * 586243
+3 * 586243 0 586243
+4 * 586243 0 586243
+4 +1 586243 586243
+4 * 586243 586243
+3 * 586243 586243
+4 * 586243
+4 * 586243
+3 * 586243 586243
+1 * 586243 586243

fn=(146)
0x402dba 770 586243 0 586243
+1 * 586243
+3 * 586243 0 586243 1 0 0 1
+4 * 586243 0 586243
+4 +1 586243 586243
+4 * 586243 586243
+3 * 586243 586243
+4 * 586243
+4 * 586243
+3 * 586243 586243
+1 * 586243 586243

fn=(192)
0x403296 79 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfi=(4)
cfn=(194)
calls=1246 0x403d7e +42 
* * 17444 6230 6230 1 0 0 1
+5 * 1246 1246
+1 * 1246 1246

fn=(254)
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246 1 0 0 1
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +8 1246 0 1246
+4 +3 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=1246 0x404f37 -22 
* * 630014 219624 210906 14 3 3 14 3 3 35020 1641 2488 311
+5 +1 1246 1246
+1 * 1246 1246

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+2 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +4 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=1246 0x404878 277 
* * 18690 7476 6230 1 0 0 1
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1246 0x404d44 277 
* * 31150 11214 9968 2 0 0 2
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(132)
calls=1246 0x404d44 277 
* * 31150 11214 9968
+5 * 1246
+3 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=1246 0x404d5e -49 
* * 648704 225854 218382 1 0 106 1 0 106 35020 1631 2488
+5 +1 1246
+4 * 1246 1246
+1 * 1246 1246
+2 * 1246 1246
+1 * 1246 1246

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(54)
0x404a36 450 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246 1 0 0 1
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +10 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1246 0x404c38 288 
* * 18690 7476 6230 3 0 0 3
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(56)
calls=1246 0x404c38 288 
* * 18690 7476 6230
+5 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1246 0x404c52 -36 
* * 764582 264480 257008 20 3 4 20 3 4 35020 1641 2488 311
+5 +1 1246
+4 * 1246 1246
+1 * 1246 1246
+1 * 1246 1246

fn=(60)
0x404c52 424 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+2 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +4 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1246 0x40492d 277 
* * 18690 7476 6230 2 0 0 2
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1246 0x404d9d 277 
* * 31150 11214 9968 2 0 1 2 0 1
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(66)
calls=1246 0x404d9d 277 
* * 31150 11214 9968
+5 * 1246
+3 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(72)
calls=1246 0x404db7 -49 
* * 648704 225854 218382 15 3 3 15 3 3 35020 1641 2488 311
+5 +1 1246
+4 * 1246 1246
+1 * 1246 1246
+2 * 1246 1246
+1 * 1246 1246

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 49 0 0 49 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(62)
0x40492d 277 1300 0 1300 1 0 0 1
+1 * 1300
+3 * 1300
+4 * 1300 0 1300
+4 +1 1300 1300
+4 * 1300
+3 * 1300 0 1300 1 0 0 1
cfi=(13)
cfn=(64)
calls=1300 -33 -66 
* * 7800 3900 2600
+5 * 1300 1300
+1 * 1300 1300

fn=(66)
0x404d9d 277 2492 0 2492
+1 * 2492
+3 * 2492
+4 * 2492 0 2492
+4 +1 2492 2492
+4 * 2492
+3 * 2492 0 2492
cfi=(13)
cfn=(68)
calls=2492 0x404f1a -58 
* * 39872 14952 12460 2 0 1 2 0 1
+5 * 2492 2492
+1 * 2492 2492

fn=(240)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 49 0 0 49 140 5 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1246 0 1246
+1 * 1246
+3 * 1246 0 1246
+1 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +10 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1246 0x404bc6 288 
* * 18690 7476 6230 3 0 0 3
+5 * 1246
+3 * 1246 1246
+4 * 1246
+3 * 1246 0 1246
cfn=(122)
calls=1246 0x404bc6 288 
* * 18690 7476 6230
+5 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(126)
calls=1246 0x404be0 -36 
* * 764582 264480 257008 4 0 106 4 0 106 35020 1631 2488
+5 +1 1246
+4 * 1246 1246
+1 * 1246 1246
+1 * 1246 1246

fn=(128)
0x404878 277 1300 0 1300
+1 * 1300
+3 * 1300
+4 * 1300 0 1300 1 0 0 1
+4 +1 1300 1300
+4 * 1300
+3 * 1300 0 1300
cfi=(13)
cfn=(130)
calls=1300 -33 -66 
* * 7800 3900 2600 0 0 1 0 0 1
+5 * 1300 1300
+1 * 1300 1300

fn=(132)
0x404d44 277 2492 0 2492
+1 * 2492
+3 * 2492
+4 * 2492 0 2492
+4 +1 2492 2492
+4 * 2492
+3 * 2492 0 2492
cfi=(13)
cfn=(134)
calls=2492 0x404e98 -58 
* * 39872 14952 12460 2 0 0 2
+5 * 2492 2492
+1 * 2492 2492

fn=(138)
0x404d5e 379 1246 0 1246
+1 * 1246
+3 * 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 * 1246 0 1246
+4 +8 1246 0 1246
+4 +3 1246 1246
+4 * 1246 1246
+4 * 1246 1246
+4 * 1246
+3 * 1246
+3 * 1246 0 1246
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1246 0x404eb5 -22 
* * 630014 219624 210906 1 0 106 1 0 106 35020 1631 2488
+5 +1 1246 1246
+1 * 1246 1246

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 49 1 0 49 140 5 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 2492 0 2492 1 0 0 1
+1 * 2492
+3 * 2492
+4 * 2492 0 2492
+4 +1 2492 2492
+4 * 2492
+3 * 2492 0 2492
cfi=(13)
cfn=(124)
calls=2492 0x404d36 -77 
* * 14952 7476 4984 2 0 0 2
+5 * 2492 2492
+1 * 2492 2492

fn=(56)
0x404c38 288 2492 0 2492 1 0 0 1
+1 * 2492
+3 * 2492
+4 * 2492 0 2492 1 0 0 1
+4 +1 2492 2492
+4 * 2492
+3 * 2492 0 2492
cfi=(13)
cfn=(58)
calls=2492 0x404d8f -77 
* * 14952 7476 4984 1 0 0 1
+5 * 2492 2492
+1 * 2492 2492

fn=(74)
0x404f37 368 1264 0 1264
+1 * 1264
+3 * 1264
+4 * 1264 0 1264 1 0 0 1
+4 * 1264 0 1264
+4 * 1264 0 1264
+4 +2 1264 1264
+4 * 1264 1264
+4 * 1264
+3 * 1264
+3 * 1264
+4 * 1264 0 1264
+4 +1 1264 1264
+5 * 1264 0 0 0 0 0 0 0 0 1264
jcnd=9/1264 +33 +2 
* * 
+2 +1 1255 1255
+4 * 1255
+8 * 1255 1255
+4 * 1255 1255
+4 * 1255
+3 * 1255 0 0 1 0 0 1
+3 * 1255 0 1255 0 0 1 0 0 1
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(78) memmove
calls=1255 0x3877c83840 0 
* * 596974 206497 203992 11 2 51 11 2 51 33896 1646 1250 311
* * 1255 1255 0 1 1 0 1 1 0 0 0 1255
+5 +1 1264 1264
+4 * 1264
+8 * 1264 1264
+4 * 1264
+3 +1 1264 1264
+1 * 1264 1264

fn=(140)
0x404eb5 368 1264 0 1264
+1 * 1264
+3 * 1264
+4 * 1264 0 1264 1 0 0 1
+4 * 1264 0 1264
+4 * 1264 0 1264 0 0 1 0 0 1
+4 +2 1264 1264
+4 * 1264 1264
+4 * 1264
+3 * 1264
+3 * 1264
+4 * 1264 0 1264
+4 +1 1264 1264
+5 * 1264 0 0 0 0 0 0 0 0 1264
jcnd=9/1264 +33 +2 
* * 
+2 +1 1255 1255
+4 * 1255
+8 * 1255 1255
+4 * 1255 1255
+4 * 1255
+3 * 1255
+3 * 1255 0 1255
cob=(2)
cfi=(9)
cfn=(78)
calls=1255 0x3877c83840 0 
* * 596974 206497 203992 0 0 107 0 0 107 33896 1637 1250
* * 1255 1255 0 0 0 0 0 0 0 0 0 1255
+5 +1 1264 1264
+4 * 1264
+8 * 1264 1264
+4 * 1264
+3 +1 1264 1264
+1 * 1264 1264

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 2492 0 2492 1 0 0 1
+1 * 2492
+3 * 2492 0 2492
+4 +1 2492 2492
+4 * 2492 2492
+1 * 2492 2492

fn=(110)
0x404380 726 2492 0 2492 1 0 0 1
+1 * 2492
+3 * 2492 0 2492
+4 * 2492 0 2492
+4 * 2492 2492
+4 * 2492 2492
+3 * 2492 2492
+4 * 2492 0 2492
+3 * 2492 2492
+1 * 2492 2492

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 2492 0 2492 1 0 0 1
+1 * 2492
+3 * 2492 0 2492
+4 +1 2492 2492
+4 * 2492 2492
+1 * 2492 2492

fn=(44)
0x404468 726 2492 0 2492
+1 * 2492
+3 * 2492 0 2492
+4 * 2492 0 2492
+4 * 2492 2492
+4 * 2492 2492
+3 * 2492 2492
+4 * 2492 0 2492 1 0 0 1
+3 * 2492 2492
+1 * 2492 2492

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1255 0 1255 1 0 0 1
+1 * 1255
+3 * 1255 0 1255
+4 * 1255 0 1255 1 0 0 1
+4 * 1255 1255
+1 * 1255 1255

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1255 0 1255 1 0 0 1
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 +4 1255 1255
+4 * 1255 1255
+4 * 1255
+3 * 1255
+3 * 1255 0 1255
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1255 0x40454c -14 
* * 7530 2510 3765 1 0 0 1
+5 +2 1255 1255
+1 * 1255 1255

fn=(150)
0x40326c 148 1255 0 1255
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 +3 1255 1255 0 1 0 0 1
+4 * 1255 1255
+4 * 1255
+3 * 1255
+3 * 1255 0 1255
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1255 0x403d1a -29 
* * 22590 7530 8785 3 0 0 3
+5 +1 1255 1255
+1 * 1255 1255

fn=(180)
0x40334a 148 1255 0 1255
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 +3 1255 1255
+4 * 1255 1255
+4 * 1255
+3 * 1255
+3 * 1255 0 1255
cfn=(182)
calls=1255 0x403dcc -29 
* * 22590 7530 8785 2 0 0 2
+5 +1 1255 1255
+1 * 1255 1255

fn=(152)
0x403d1a 122 1255 0 1255 1 0 0 1
+1 * 1255
+3 * 1255
+4 * 1255 0 1255
+4 * 1255 0 1255
+4 +4 1255 1255
+4 * 1255 1255
+4 * 1255
+3 * 1255
+3 * 1255 0 1255
cfn=(154)
calls=1255 0x4044f8 -14 
* * 7530 2510 3765 2 0 0 2
+5 +2 1255 1255
+1 * 1255 1255

fn=(184)
0x40454c 112 1255 0 1255 1 0 0 1
+1 * 1255
+3 * 1255 0 1255
+4 * 1255 0 1255
+4 * 1255 1255
+1 * 1255 1255

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 3014 487 487 3 4 10 3 4 10 451 67 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 0 5 0 0 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 49 3 0 49 131 5 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1244 339 218 0 0 0 0 0 0 237 21 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 3563 734 674 19 3 5 19 3 5 556 61 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 6 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1241 335 222 2 0 0 2 0 0 237 10 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

ob=(2)
fl=(9)
fn=(36) malloc
0x3877c7aa50 0 2510 0 2510 1 0 0 1
+5 0 2510 0 2510
+5 0 2510
+3 0 2510 0 2510
+5 0 2510
+4 0 2510 2510 0 0 1 0 0 1
+7 0 2510 2510 0 0 1 0 0 1
+3 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510 1
+6 0 2510 2510 0 0 1 0 0 1
+7 0 2510 2510 0 1 1 0 1 1
+4 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510
+2 0 2510 2510 0 0 1 0 0 1
+3 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510
jcnd=2510/2510 +97 0 
* 0 
+18 0 2510
+3 0 2510
+3 0 2510 0 2510
cfn=(38) _int_malloc
calls=2510 0x3877c79a00 0 
* 0 584879 71770 85672 47 37 69 47 37 69 88723 3888
+5 0 2510
+3 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510
+2 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510
+2 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510 16
+2 0 2510 2510
+7 0 2510 0 0 0 0 0 0 0 0 2510
jcnd=2510/2510 +13 0 
* 0 
+13 0 2510 0 2510
+2 0 2510 0 0 0 0 0 0 0 0 2510 8
+6 0 2510
+3 0 2510 2510
+4 0 2510 2510
+5 0 2510 2510
+5 0 2510
+4 0 2510 2510
+1 0 2510 0 0 1 0 0 1
+5 0 2510 2510 0 0 1 0 0 1
+7 0 2510 0 0 0 0 0 0 0 0 2510
jcnd=2510/2510 +14 0 
* 0 
+14 0 2510 0 2510 1 0 0 1
+3 0 2510 0 0 0 0 0 0 0 0 2510
+6 0 2510
jump=2510 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2510 0 2510 1 0 0 1
+2 0 2510
+3 0 2510
+3 0 2510 0 2510
+2 0 2510
+3 0 2510 0 2510
+1 0 2510
+3 0 2510 0 2510
+1 0 2510
+3 0 2510
+4 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510
+6 0 2510
+4 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510 4
jcnd=10/2510 0x3877c838d1 0 
* 0 
+2 0 2500
+3 0 2500
+3 0 2500
+3 0 2500
+3 0 2500
+3 0 2500 0 0 0 0 0 0 0 0 2500
jcnd=2500/2500 +41 0 
* 0 
+41 0 2500 0 0 1 0 0 1
+3 0 2500 0 0 0 0 0 0 0 0 2500
jcnd=2500/2500 0x3877c839c0 0 
* 0 
+24 0 2500
+3 0 2500
+4 0 2500
+3 0 2500
+3 0 2500
+3 0 2500
+3 0 2500
+3 0 2500 0 0 0 0 0 0 0 0 2500 1243
jcnd=1260/2500 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1250
+10 0 1250 1250 0 0 1 0 0 1
+3 0 1250
+4 0 1250 0 1250
+3 0 1250
+4 0 1250
+4 0 1250 0 0 0 0 0 0 0 0 1250
jcnd=1250/1250 -18 0 
* 0 
-18 0 3806 3806
+3 0 3806
+4 0 3806 0 3806
+3 0 3806
+4 0 3806
+4 0 3806 0 0 0 0 0 0 0 0 3806 8
jcnd=2556/3806 -18 0 
* 0 
+2 0 2510
+4 0 2510
+3 0 2510 2510
+1 0 2510 2510
+1 0 2510 2510
+2 0 2510 2510 0 1 0 0 1
+2 0 2510 2510
0x3877c839c0 0 2500 0 0 1 0 0 1
+3 0 2500
+3 0 2500
+3 0 2500
+4 0 2500 0 2500 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=2500 0x3877c89b20 0 
* 0 1052122 395388 390388 6 1 157 6 1 157 50206 2028 2500 311
+5 0 2500
jump=2500 0x3877c838be 0 
* 0 

fn=(168) free
0x3877c7b8b0 0 2510 2510 0 1 1 0 1 1
+7 0 2510 2510 0 0 1 0 0 1
+3 0 2510
+3 0 2510 0 0 1 0 0 1 0 0 2510
+6 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510
+6 0 2510 2510
+4 0 2510
+4 0 2510
+2 0 2510 0 0 0 0 0 0 0 0 2510
+2 0 2510
+2 0 2510
+7 0 2510 0 0 0 0 0 0 0 0 2510
jcnd=2510/2510 +14 0 
* 0 
+14 0 2510
+2 0 2510
cfn=(170) _int_free
calls=2510 0x3877c78650 0 
* 0 247175 65614 37376 21 4 0 21 4 0 59930 1308

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 8 8
+5 0 8
+3 0 8 8
+5 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8 8
+9 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8 3
jcnd=8/8 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 4
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 9
jcnd=8/20 0x3877c75e68 0 
* 0 
+6 0 12 0 12
+6 0 12
jump=12 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 2510 0 2510 1 0 0 1
+2 0 2510 0 2510
+2 0 2510 0 2510
+2 0 2510
+3 0 2510 0 2510
+2 0 2510 0 2510
+1 0 2510 0 2510
+1 0 2510
+3 0 2510
+4 0 2510 2510
+4 0 2510 0 2510
+4 0 2510
+3 0 2510
+4 0 2510
+3 0 2510
+3 0 2510
+3 0 2510 0 0 1 0 0 1 0 0 2510
+6 0 2510
+4 0 2510 0 0 0 0 0 0 0 0 2510
+6 0 2510
+4 0 2510 0 0 0 0 0 0 0 0 2510
+6 0 2510 2510
+7 0 2510 0 0 0 0 0 0 0 0 2510 2
jcnd=2386/2510 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 2386
+2 0 2386 0 0 0 0 0 0 0 0 2386
+6 0 2386 2386 0 1 0 0 1
+4 0 2386
+3 0 2386
+2 0 2386 0 0 0 0 0 0 0 0 2386
jcnd=2386/2386 0x3877c78a40 0 
* 0 
+6 0 2386 2386
+4 0 2386
+3 0 2386 0 0 0 0 0 0 0 0 2386
+6 0 2386 2386
+5 0 2386
+4 0 2386 0 0 0 0 0 0 0 0 2386
jcnd=2386/2386 0x3877c7907c 0 
* 0 
+6 0 2386 2386
+5 0 2386
+4 0 2386 0 0 0 0 0 0 0 0 2386
+6 0 2386
+4 0 2386 0 0 1 0 0 1 0 0 2386
+6 0 2386
+4 0 2386 2386
+7 0 2386 0 0 0 0 0 0 0 0 2386
+6 0 2386 2386
+6 0 2386
+2 0 2386 0 0 0 0 0 0 0 0 2386
+6 0 2386 2386
+4 0 2386 0 0 0 0 0 0 0 0 2386 4
jcnd=2382/2386 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=2/4 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c78f12 0 
* 0 
+6 0 2386 2386 0 1 0 0 1
+4 0 2386 0 0 0 0 0 0 0 0 2386 1184
jcnd=1045/2386 0x3877c78bf0 0 
* 0 
+6 0 1341 1341 0 0 2 0 0 2
+6 0 1341 0 0 1 0 0 1 0 0 1341 87
jcnd=98/1341 0x3877c78a78 0 
* 0 
+6 0 1243 1243
+5 0 1243 1243
+5 0 1243 1243
+4 0 1243 0 0 0 0 0 0 0 0 1243
+6 0 1243 1243
+4 0 1243 0 0 0 0 0 0 0 0 1243
+6 0 1243 1243
+9 0 1243 0 1243
+4 0 1243 0 1243
+4 0 1243 0 0 0 0 0 0 0 0 1243 4
jcnd=1011/1243 +16 0 
* 0 
+2 0 232 232
+5 0 232
+3 0 232 0 0 1 0 0 1 0 0 232 8
jcnd=212/232 0x3877c78ee4 0 
* 0 
+6 0 1243
+3 0 1243
+4 0 1243 1243
+4 0 1243 1243
+4 0 1243 0 0 0 0 0 0 0 0 1243
-12 0 98
+4 0 98 98
+4 0 98 98
+4 0 98 0 0 0 0 0 0 0 0 98
+6 0 1341
+7 0 1341 0 1341
+4 0 1341 0 1341
+4 0 1341 0 0 0 0 0 0 0 0 1341 12
jcnd=588/1341 +18 0 
* 0 
+2 0 753 0 753
+8 0 753 0 753
+8 0 753 0 753
+4 0 753
+3 0 753 0 753 1 0 0 1
+4 0 753
+4 0 753 0 753
+4 0 753 0 753
+4 0 753
+7 0 753 0 0 0 0 0 0 0 0 753
jcnd=753/753 0x3877c78b20 0 
* 0 
-30 0 588 0 588
+4 0 588
+3 0 588 0 588
+4 0 588
+4 0 588 0 588
+4 0 588 0 588
+4 0 588
+7 0 588 0 0 0 0 0 0 0 0 588
jcnd=588/588 0x3877c78b20 0 
* 0 
-7 0 1045
+7 0 1045 0 0 0 0 0 0 0 0 1045
jcnd=1045/1045 0x3877c78b20 0 
* 0 
0x3877c78a40 0 2386 0 0 1 0 0 1
+5 0 2386 2386
+4 0 2386 2386
+7 0 2386 0 0 0 0 0 0 0 0 2386
jcnd=2386/2386 +16 0 
* 0 
+16 0 2386 0 2386
+5 0 2386 0 0 0 0 0 0 0 0 2386
+6 0 2386
+3 0 2386
jump=2386 0x3877c7878f 0 
* 0 
+10 0 98 0 98
+6 0 98 0 0 1 0 0 1
jump=98 0x3877c78885 0 
* 0 
0x3877c78b20 0 2386 2386 0 1 0 0 1
+4 0 2386
+2 0 2386 0 0 0 0 0 0 0 0 2386
+6 0 2386 2386
+7 0 2386 0 0 0 0 0 0 0 0 2386
jcnd=2386/2386 +15 0 
* 0 
+15 0 2386 0 2386 1 0 0 1
+4 0 2386 0 0 0 0 0 0 0 0 2386 2
+6 0 2386
+4 0 2386 2386
+1 0 2386 2386
+1 0 2386 2386
+2 0 2386 2386
+2 0 2386 2386
+2 0 2386 2386
+2 0 2386 2386
0x3877c78bf0 0 1045 0 0 1 0 0 1
+3 0 1045 0 1045
+4 0 1045
+3 0 1045
+4 0 1045 0 1045 1 0 0 1
+4 0 1045
jump=1045 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 212 212 0 1 0 0 1
+5 0 212 0 0 0 0 0 0 0 0 212
+6 0 212 212
+5 0 212 0 212
+4 0 212 212
+5 0 212 0 212
+4 0 212
jump=212 0x3877c78882 0 
* 0 
+17 0 2 2 0 1 0 0 1
+5 0 2 0 0 0 0 0 0 0 0 2
+2 0 2 2
+4 0 2 0 2
+4 0 2 2
+4 0 2 0 2
+4 0 2
jump=2 0x3877c7882d 0 
* 0 
0x3877c7907c 0 2386 2386 0 1 1 0 1 1
+4 0 2386 0 0 1 0 0 1
+7 0 2386
+4 0 2386
+3 0 2386
+3 0 2386 0 0 0 0 0 0 0 0 2386
jcnd=2386/2386 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 2500 0 0 1 0 0 1
+7 0 2500
+3 0 2500
+3 0 2500 2500 0 0 1 0 0 1
+4 0 2500
+4 0 2500 0 0 0 0 0 0 0 0 0 0 2500 311
jump=304 0x3877c89be8 0 
* 0 
jump=320 0x3877c89bd0 0 
* 0 
jump=312 0x3877c89bb8 0 
* 0 
jump=312 +11 0 
* 0 
jump=312 0x3877c89c48 0 
* 0 
jump=314 0x3877c89c30 0 
* 0 
jump=312 0x3877c89c18 0 
* 0 
jump=314 0x3877c89c00 0 
* 0 
+11 0 312 312
+3 0 312
+4 0 312
+4 0 312 312
+4 0 312
+4 0 312 0 312
+4 0 312
+9 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312
+4 0 312
+4 0 312 0 0 0 0 0 0 0 0 312
jcnd=8/312 0x3877c89c60 0 
* 0 
-40 0 48330 48330
+4 0 48330 0 48330 0 0 6 0 0 6
+4 0 48330 48330
+4 0 48330 0 48330 0 0 15 0 0 15
+4 0 48330 48330
+4 0 48330 0 48330 0 0 48 0 0 48
+4 0 48330 48330
+4 0 48330 0 48330 0 0 3 0 0 3
+4 0 48330
+4 0 48330
+4 0 48330 0 0 0 0 0 0 0 0 48330 2026
jcnd=2464/48330 0x3877c89c60 0 
* 0 
-32 0 314 314
+4 0 314 0 314
+4 0 314 314
+4 0 314 0 314
+4 0 314 314
+4 0 314 0 314
+4 0 314
+4 0 314
+4 0 314 0 0 0 0 0 0 0 0 314
jcnd=10/314 0x3877c89c60 0 
* 0 
-24 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312
+4 0 312
+4 0 312 0 0 0 0 0 0 0 0 312
jcnd=8/312 0x3877c89c60 0 
* 0 
-16 0 314 314 0 1 0 0 1
+4 0 314 0 314
+4 0 314 0 0 1 0 0 1
+4 0 314
+4 0 314 0 0 0 0 0 0 0 0 314 2
jcnd=10/314 0x3877c89c60 0 
* 0 
+6 0 47082
+4 0 47082 47082
+3 0 47082 0 47082 0 0 1 0 0 1
+3 0 47082 47082
+4 0 47082 0 47082 0 0 34 0 0 34
+4 0 47082 47082
+4 0 47082 0 47082 0 0 49 0 0 49
+4 0 47082 47082
+4 0 47082 0 47082
+4 0 47082
jump=47082 -80 0 
* 0 
-30 0 304 304
+3 0 304 0 304
+3 0 304 304
+4 0 304 0 304
+4 0 304 304
+4 0 304 0 304 0 0 1 0 0 1
+4 0 304 304
+4 0 304 0 304
+4 0 304
jump=304 -80 0 
* 0 
-24 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320
jump=320 -80 0 
* 0 
-16 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312
+4 0 312
jump=312 -80 0 
* 0 
+8 0 312 312
+3 0 312
+4 0 312 0 0 1 0 0 1
+4 0 312
+4 0 312
jump=312 -39 0 
* 0 
+9 0 320
+3 0 320 0 0 0 0 0 0 0 0 320
+6 0 320 320
+3 0 320
+4 0 320
jump=320 -72 0 
* 0 
+8 0 304
+4 0 304 304
+3 0 304 0 0 0 0 0 0 0 0 304
+2 0 304
+4 0 304
jump=304 -99 0 
* 0 
+11 0 314 314 0 1 0 0 1
+3 0 314
+4 0 314
+4 0 314
+4 0 314
jump=314 0x3877c89b78 0 
* 0 
+9 0 312 312
+3 0 312
+4 0 312
+4 0 312
+4 0 312
jump=312 0x3877c89b70 0 
* 0 
+9 0 314 314
+3 0 314
+4 0 314
+4 0 314
+4 0 314
jump=314 0x3877c89b68 0 
* 0 
+9 0 312 312
+3 0 312
+4 0 312
+4 0 312
+4 0 312
jump=312 0x3877c89b60 0 
* 0 
+9 0 2500 0 2500 1 0 0 1
+3 0 2500 2500

fn=(104) alloc_perturb
0x3877c77180 0 2357 2357 0 1 0 0 1
+6 0 2357
+2 0 2357 0 0 0 0 0 0 0 0 2357 2
+2 0 2357 2357

fn=(38)
0x3877c79a00 0 2510 0 2510 1 0 0 1
+2 0 2510
+3 0 2510 0 2510
+2 0 2510 0 2510
+2 0 2510 0 2510 0 0 1 0 0 1
+2 0 2510
+3 0 2510 0 2510
+1 0 2510 0 2510
+1 0 2510
+4 0 2510
+4 0 2510 0 0 0 0 0 0 0 0 2510
+6 0 2510
+4 0 2510
+6 0 2510
+3 0 2510
+4 0 2510
+4 0 2510
+4 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510
+6 0 2510 2510 0 1 1 0 1 1
+7 0 2510 0 0 0 0 0 0 0 0 2510 5
jcnd=2388/2510 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 153 153
+6 0 153
+4 0 153
+2 0 153 0 0 0 0 0 0 0 0 153
+6 0 153
+3 0 153
+4 0 153 153
+1 0 153 153
+1 0 153 153
+2 0 153 153
+2 0 153 153
+2 0 153 153
+2 0 153 153
-14 0 2357
+4 0 2357 2357
+1 0 2357 2357
+1 0 2357 2357
+2 0 2357 2357
+2 0 2357 2357
+2 0 2357 2357
+2 0 2357 2357
+7 0 2405
+7 0 2405 0 0 1 0 0 1 0 0 2405 7
jcnd=1502/2405 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 7 0 0 7
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 1502 0 0 1 0 0 1
+3 0 1502
+4 0 1502
+4 0 1502 0 0 1 0 0 1 0 0 1502 5
jcnd=1500/1502 0x3877c7a1a4 0 
* 0 
+6 0 2
+3 0 2
+4 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2
+3 0 2 0 2
+4 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +30 0 
* 0 
-11 0 1500 1500
+6 0 1500
+5 0 1500 0 0 0 0 0 0 0 0 1500 1
jcnd=1499/1500 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 918 251 193 8 1 0 8 1 0 192 30
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 2404 0 0 1 0 0 1
+3 0 2404
+3 0 2404
+3 0 2404
+4 0 2404
+3 0 2404
+4 0 2404 0 2404
+5 0 2404
+3 0 2404 0 2404
+4 0 2404 0 2404
+4 0 2404 0 2404
+5 0 2404
+3 0 2404
+3 0 2404
+3 0 2404
+3 0 2404
+4 0 2404
+4 0 2404 0 0 1 0 0 1
+4 0 2404 0 2404
+4 0 2404
+4 0 2404 0 2404
+5 0 2404 0 2404
+5 0 2404
+3 0 2404
+3 0 2404 0 2404
+5 0 2404
+5 0 2404
+3 0 2404 0 2404
+4 0 2404 0 2404
+4 0 2404
+6 0 2404 0 2404
+4 0 2404 0 2404
+5 0 2404 0 0 1 0 0 1
+3 0 2404
+3 0 2404
+3 0 2404
jump=2404 +87 0 
* 0 
+8 0 1392
+3 0 1392
+4 0 1392
+2 0 1392
+2 0 1392
+3 0 1392
+3 0 1392
+3 0 1392
+2 0 1392
+2 0 1392
+5 0 1392
+2 0 1392 1392
+4 0 1392
+3 0 1392
+4 0 1392 0 1392
+4 0 1392 0 1392
+8 0 1392
+7 0 1392 0 1392
+4 0 1392 0 1392
+4 0 1392 0 1392
+4 0 1392 0 0 0 0 0 0 0 0 1392
-38 0 951
+3 0 951
+4 0 951 0 951
+4 0 951 0 951
+8 0 951
+7 0 951 0 951
+4 0 951 0 951 0 0 1 0 0 1
+4 0 951 0 951
+4 0 951 0 0 0 0 0 0 0 0 951
+6 0 4748 4748 0 1 0 0 1
+4 0 4748
+3 0 4748 0 0 0 0 0 0 0 0 4748 121
jcnd=2337/4748 0x3877c79ef0 0 
* 0 
+6 0 2411 2411
+4 0 2411 2411
+4 0 2411
+4 0 2411 0 0 0 0 0 0 0 0 2411
+6 0 2411 2411 0 1 0 0 1
+7 0 2411 0 0 0 0 0 0 0 0 2411 2
+6 0 2411
+4 0 2411
+7 0 2411 0 0 0 0 0 0 0 0 2411 6
jcnd=1429/2411 +11 0 
* 0 
+2 0 982
+3 0 982 0 0 0 0 0 0 0 0 982 135
jcnd=819/982 0x3877c79e28 0 
* 0 
+6 0 2391
+3 0 2391 0 2391
+4 0 2391 0 2391
+5 0 2391 0 0 0 0 0 0 0 0 2391 31
jcnd=48/2391 0x3877c7a090 0 
* 0 
+6 0 2343
+7 0 2343 0 0 0 0 0 0 0 0 2343 467
jcnd=1392/2343 0x3877c79c50 0 
* 0 
+6 0 951 0 0 1 0 0 1
+3 0 951
+4 0 951
+4 0 951 0 0 0 0 0 0 0 0 951 223
jcnd=224/951 0x3877c79db0 0 
* 0 
+6 0 727
+3 0 727
+4 0 727
+2 0 727
+2 0 727
+3 0 727
+3 0 727
+8 0 727
+3 0 727
+2 0 727
+2 0 727
+4 0 727 727 0 0 1 0 0 1
+4 0 727
+3 0 727 0 0 1 0 0 1 0 0 727 12
jcnd=694/727 0x3877c79e15 0 
* 0 
-36 0 224
+2 0 224
+2 0 224
+3 0 224
+3 0 224
+8 0 224
+3 0 224
+2 0 224
+2 0 224
+4 0 224 224
+4 0 224
+3 0 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 0x3877c79e15 0 
* 0 
+6 0 33 33
+4 0 33
+4 0 33 33
+4 0 33 0 0 0 0 0 0 0 0 33 3
jcnd=16/33 +38 0 
* 0 
+2 0 17 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
jump=17 0x3877c79c73 0 
* 0 
+13 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c79ee0 0 
* 0 
+6 0 8 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
-4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
+14 0 224 0 0 1 0 0 1
+3 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
+2 0 224
+3 0 224 0 0 1 0 0 1
+7 0 224
jump=224 0x3877c79d18 0 
* 0 
+78 0 918 0 918
+4 0 918 0 918
+4 0 918
+3 0 918
jump=918 0x3877c79c73 0 
* 0 
+8 0 819 819 0 1 0 0 1
+4 0 819
+3 0 819 0 0 0 0 0 0 0 0 819 246
jcnd=428/819 0x3877c79ce1 0 
* 0 
+6 0 391 391
+5 0 391 0 0 0 0 0 0 0 0 391 8
jcnd=371/391 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=12/20 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 12
+7 0 12 0 12 1 0 0 1
+4 0 12
+3 0 12
+3 0 12
+3 0 12
+4 0 12
+3 0 12
+4 0 12
+3 0 12
+3 0 12
+4 0 12 0 12
+4 0 12 0 12 0 0 3 0 0 3
+4 0 12
+4 0 12
+3 0 12 0 12
cfn=(104)
calls=12 0x3877c77180 0 
* 0 48 24 0 0 0 0 0 0 0 12
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+39 0 8 8
+4 0 8
jump=8 0x3877c79d9e 0 
* 0 
+12 0 2337 0 0 1 0 0 1
+7 0 2337
+3 0 2337 0 0 0 0 0 0 0 0 2337 14
jcnd=1482/2337 0x3877c7a0b0 0 
* 0 
+6 0 2308 2308 0 1 0 0 1
+4 0 2308
+3 0 2308
+3 0 2308
+2 0 2308
+4 0 2308
+3 0 2308
+3 0 2308
+2 0 2308
+2 0 2308
+2 0 2308
+2 0 2308 2308 0 0 1 0 0 1
+8 0 2308
+5 0 2308
+5 0 2308
+2 0 2308 0 0 0 0 0 0 0 0 2308
-2 0 1101
+2 0 1101 0 0 0 0 0 0 0 0 1101 1
jcnd=1/1101 +14 0 
* 0 
+2 0 3408
+2 0 3408 0 0 0 0 0 0 0 0 3408 45
jcnd=1741/3408 +64 0 
* 0 
+2 0 1667
+8 0 1667
+3 0 1667
+3 0 1667 0 0 0 0 0 0 0 0 1667 4
jcnd=223/1667 0x3877c79fc0 0 
* 0 
-6 0 1104
+3 0 1104
+3 0 1104 0 0 0 0 0 0 0 0 1104 13
jcnd=826/1104 0x3877c79fc0 0 
* 0 
+2 0 1722
+2 0 1722 1722
+8 0 1722
+2 0 1722 0 0 0 0 0 0 0 0 1722 22
jcnd=1103/1722 -20 0 
* 0 
+2 0 619
+2 0 619
+5 0 619
+3 0 619
+3 0 619
+2 0 619
+2 0 619
+5 0 619 0 0 0 0 0 0 0 0 619 7
jcnd=4/619 +14 0 
* 0 
+2 0 615
+2 0 615
+4 0 615
+2 0 615
+2 0 615 0 0 0 0 0 0 0 0 615
jcnd=615/615 -8 0 
* 0 
-8 0 16232
+4 0 16232
+2 0 16232
+2 0 16232 0 0 0 0 0 0 0 0 16232 1085
jcnd=14019/16232 -8 0 
* 0 
-2 0 1741 0 0 1 0 0 1
+2 0 1741 0 0 0 0 0 0 0 0 1741 36
jcnd=1598/1741 -8 0 
* 0 
+2 0 2360 2360 0 0 16 0 0 16
+4 0 2360 0 0 1 0 0 1
+3 0 2360 0 0 0 0 0 0 0 0 2360 1251
jcnd=1259/2360 0x3877c7a1cf 0 
* 0 
+6 0 1101
+2 0 1101
+4 0 1101
+2 0 1101
+2 0 1101
+2 0 1101 0 1101
+8 0 1101
jump=1101 0x3877c79f30 0 
* 0 
+37 0 1049 1049 0 1 0 0 1
+5 0 1049 1049
+4 0 1049
+4 0 1049 1049
+5 0 1049 0 0 0 0 0 0 0 0 1049
jcnd=1049/1049 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 48 0 0 1 0 0 1
+7 0 48 0 48
+6 0 48
+3 0 48 0 0 0 0 0 0 0 0 48
jcnd=48/48 0x3877c79ace 0 
* 0 
+16 0 1482 1482
+4 0 1482
+4 0 1482
+2 0 1482
+5 0 1482 1482 0 1 2 0 1 2
+4 0 1482
+3 0 1482 0 0 0 0 0 0 0 0 1482 14
jcnd=1429/1482 0x3877c79f00 0 
* 0 
+6 0 53 53
+4 0 53 0 0 0 0 0 0 0 0 53 4
jcnd=24/53 0x3877c79f00 0 
* 0 
+6 0 29
+3 0 29 29
+4 0 29 29
+4 0 29
+3 0 29
+4 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=1/29 -18 0 
* 0 
-18 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+2 0 29 29
+4 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=28/29 0x3877c7a650 0 
* 0 
+6 0 1 1
+4 0 1 1 0 1 0 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1
+3 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
-14 0 28
+3 0 28 28
+4 0 28
+3 0 28 28
+4 0 28 0 0 0 0 0 0 0 0 28
+6 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29 2
+6 0 29 29
+8 0 29 0 29
+4 0 29 0 29
+4 0 29 0 0 0 0 0 0 0 0 29
+2 0 29 29 0 1 0 0 1
+4 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 14
jcnd=29/29 0x3877c7a659 0 
* 0 
+6 0 29
+4 0 29 0 0 0 0 0 0 0 0 29 6
jcnd=16/29 0x3877c7a2e3 0 
* 0 
+6 0 13 13
+4 0 13
+7 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13
+4 0 13
+7 0 13 0 13
+4 0 13 0 13
+4 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c7a285 0 
* 0 
+31 0 1500 0 0 1 0 0 1
+3 0 1500 0 1500
+4 0 1500
jump=1500 0x3877c79b99 0 
* 0 
+36 0 1259 1259 0 1 2 0 1 2
+4 0 1259 1259 0 0 1 0 0 1
+4 0 1259
+3 0 1259 1259
+4 0 1259
+4 0 1259
+3 0 1259
+3 0 1259 1259
+4 0 1259 0 0 0 0 0 0 0 0 1259
+6 0 1259 1259
+4 0 1259 0 0 0 0 0 0 0 0 1259
+6 0 1259 1259 0 1 0 0 1
+8 0 1259 0 1259
+4 0 1259 0 1259
+4 0 1259 0 0 0 0 0 0 0 0 1259 10
jcnd=559/1259 +38 0 
* 0 
+2 0 700 700 0 0 2 0 0 2
+4 0 700
+3 0 700 0 0 0 0 0 0 0 0 700
+2 0 700 700
+5 0 700 0 0 0 0 0 0 0 0 700
+6 0 700 700
+4 0 700 0 700
+4 0 700 700
+4 0 700 0 700
+4 0 700
+4 0 700 0 0 0 0 0 0 0 0 700
-4 0 559
+4 0 559 0 0 0 0 0 0 0 0 559 12
jcnd=28/559 0x3877c7a2e3 0 
* 0 
+6 0 1231 1231
+4 0 1231 1231 0 1 0 0 1
+4 0 1231 0 0 0 0 0 0 0 0 1231
+6 0 1231
+4 0 1231
+7 0 1231 0 1231 0 0 9 0 0 9
+4 0 1231 0 1231
+4 0 1231 0 1231
+4 0 1231 0 1231
+4 0 1231 0 0 0 0 0 0 0 0 1231 4
jcnd=693/1231 +7 0 
* 0 
+2 0 538 0 538
+5 0 538
+7 0 538 0 0 0 0 0 0 0 0 538 3
jcnd=532/538 +18 0 
* 0 
-7 0 693
+7 0 693 0 0 0 0 0 0 0 0 693 4
jcnd=469/693 +18 0 
* 0 
+2 0 230 0 230
+8 0 230 0 230
+8 0 230
+7 0 230 0 230 0 0 2 0 0 2
+4 0 230
+3 0 230
+3 0 230
+4 0 230
+3 0 230
+4 0 230
+3 0 230
+3 0 230
+4 0 230 0 230
+4 0 230 0 230
+4 0 230
jump=230 +71 0 
* 0 
-46 0 1014 0 0 1 0 0 1
+7 0 1014 0 1014 0 0 1 0 0 1
+4 0 1014
+3 0 1014
+3 0 1014
+4 0 1014
+3 0 1014
+4 0 1014
+3 0 1014
+3 0 1014
+4 0 1014 0 1014
+4 0 1014 0 1014 0 0 1 0 0 1
+4 0 1014
jump=1014 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 44
+7 0 44 0 44
+6 0 44
+3 0 44 0 0 0 0 0 0 0 0 44 2
jcnd=44/44 +7 0 
* 0 
+7 0 1288
+4 0 1288 0 0 1 0 0 1
+3 0 1288
+3 0 1288 0 1288
cfn=(104)
calls=1288 0x3877c77180 0 
* 0 5152 2576 0 1 0 0 1 0 0 1288
+5 0 1288
+3 0 1288
jump=1288 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1049 0 0 1 0 0 1
+7 0 1049
+2 0 1049
+4 0 1049
+3 0 1049
+3 0 1049 0 1049
+5 0 1049
+3 0 1049
+4 0 1049
+3 0 1049 0 0 1 0 0 1
+4 0 1049
+4 0 1049
+3 0 1049
+4 0 1049 0 1049
+4 0 1049 0 1049 0 0 33 0 0 33
+4 0 1049
+3 0 1049
+3 0 1049 0 1049
cfn=(104)
calls=1049 0x3877c77180 0 
* 0 4196 2098 0 0 0 0 0 0 0 1049 2
+5 0 1049
+3 0 1049
jump=1049 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 28 28
+4 0 28
jump=28 0x3877c7a10e 0 
* 0 
+5 0 29 29 0 1 0 0 1
+5 0 29 0 0 0 0 0 0 0 0 29
+2 0 29 29
+4 0 29 0 29
+4 0 29 29
+4 0 29 0 29
+4 0 29
jump=29 0x3877c7a14b 0 
* 0 

ob=(5)
fl=(8)
fn=(164)
0x387e4bb2f0 0 2510 0 0 1 0 0 1
+3 0 2510 0 0 0 0 0 0 0 0 2510
+2 0 2510
cob=(2)
cfi=(9)
cfn=(168)
calls=2510 0x3877c7b8b0 0 
* 0 284825 73144 37376 23 6 0 23 6 0 69970 1308
* 0 2510 2510 0 1 1 0 1 1 0 0 0 2510

fn=(32)
0x387e4bd0b0 0 2510 0 2510 1 0 0 1
+1 0 2510
+5 0 2510
+3 0 2510 0 2510
+1 0 2510
+4 0 2510 0 0 1 0 0 1
+3 0 2510
+4 0 2510
+3 0 2510 0 2510 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36)
calls=2510 0x3877c7aa50 0 
* 0 690299 99380 100732 51 43 69 51 43 69 113823 3913
* 0 2510 2510 0 1 1 0 1 1 0 0 0 2510
+5 0 2510
+3 0 2510 0 0 0 0 0 0 0 0 2510
jcnd=2510/2510 +96 0 
* 0 
+96 0 2510 0 0 1 0 0 1
+4 0 2510 2510
+1 0 2510 2510
+1 0 2510 2510

totals: 33754665 14147037 7957148 245 140 273 245 140 273 857982 10404 15050 311
