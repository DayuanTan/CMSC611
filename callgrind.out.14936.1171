version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1171


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1449255942 - 1451406207
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 467 0 467 1 0 0 1
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 +1 467 467
+4 * 467
+3 * 467 0 467
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=467 0x402d74 645 
* * 6071 2802 934
+5 * 467
+3 * 467 0 467
+3 +1 467 467
+6 * 467 0 467
+3 * 467 467
+6 * 467 0 467
+3 +1 467 467
+6 * 467 0 467 1 0 0 1
+3 * 467 467
+6 * 467 0 467
+3 +2 467 0 467
+7 * 467
jump=467 +86 * 
* * 
+2 +1 109745 109745
+3 * 109745
+3 * 109745 109745
+4 * 109745
+3 * 109745
+3 * 109745 0 109745
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=109745 0x402d9a 770 
* * 1207195 548725 329235
+5 * 109745 109745
+4 * 109745 109745
+5 * 109745
+4 * 109745 0 109745
+5 +1 109745 109745
+3 * 109745
+3 * 109745 109745
+4 * 109745
+3 * 109745
+3 * 109745 0 109745
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=109745 0x402dba 770 
* * 1207195 548725 329235 1 0 0 1
+5 * 109745 109745
+2 * 109745
+4 * 109745 109745
+5 * 109745
+4 * 109745 0 109745
+5 -2 109745 0 109745
+4 * 109745 109745
+3 * 109745
+3 * 109745 109745
+3 * 109745 0 0 0 0 0 0 0 0 109745 468
jcnd=109278/109745 -93 +1 
* * 
-9 * 467 467 0 1 0 0 1
+3 * 467
+3 * 467 467
+3 * 467 0 0 0 0 0 0 0 0 467
jcnd=467/467 -93 +1 
* * 
+2 +4 467 467
+3 * 467
+3 * 467
+4 * 467 467 0 1 0 0 1
+5 * 467
+4 * 467
+3 * 467 0 467
+5 +1 467 467
+3 * 467
+3 * 467
+4 * 467 467
+5 * 467
+4 * 467
+3 * 467 0 467
+5 +1 467 0 467
+7 * 467
jump=467 0x4016ee * 
* * 
+2 +1 109745 109745
+3 * 109745
+3 * 109745 109745
+4 * 109745
+3 * 109745 0 0 1 0 0 1
+3 * 109745 0 109745
cfi=(2)
cfn=(146)
calls=109745 0x402dba 770 
* * 1207195 548725 329235
+5 * 109745 109745
+2 * 109745
+4 * 109745 109745
+5 * 109745 0 109745
+5 +1 109745 109745
+3 * 109745
+3 * 109745 109745
+4 * 109745
+3 * 109745
+3 * 109745 0 109745
cfi=(2)
cfn=(144)
calls=109745 0x402d9a 770 
* * 1207195 548725 329235
+5 * 109745 109745
+4 * 109745 109745
+5 * 109745 0 109745
+5 +1 109745 109745
+5 * 109745 109745
+5 * 109745 109745
+5 * 109745
+4 * 109745 0 109745
+5 +1 109745 109745
+5 * 109745 109745
+5 * 109745 109745
+5 * 109745
+4 * 109745 0 109745
+5 -4 109745 0 109745
+4 * 109745 109745
+3 * 109745
+3 * 109745 109745
+3 * 109745 0 0 0 0 0 0 0 0 109745 468
jcnd=109278/109745 0x401672 +1 
* * 
-9 * 467 467 0 1 0 0 1
+3 * 467
+3 * 467 467
+3 * 467 0 0 0 0 0 0 0 0 467
jcnd=467/467 0x401672 +1 
* * 
+6 +6 467 467 0 1 0 0 1
+5 * 467 467
+5 * 467 0 467
+5 +2 467 467
+3 +1 467 0 467
+3 * 467 467
+5 * 467 467
+1 * 467 467

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 467
+7 * 467
+7 * 467
+3 * 467
+3 * 467 0 467
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=467 0x4030b2 310 
* * 551551 162940 154995 66 23 18 66 23 18 35985 1699 1866 233
+5 * 467
+7 * 467
+7 * 467
+3 * 467
+3 * 467 0 467
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=467 0x402ff4 310 
* * 549357 162177 152064 38 10 81 38 10 81 36113 1856 1866
+5 * 467 0 0 1 0 0 1
+7 * 467
+7 * 467
+3 * 467
+3 * 467 0 467
cfn=(142)
calls=467 0x401585 -52 
* * 11443835 5059945 2641819 8 0 0 8 0 0 220424 936
+5 * 467 0 467
+8 * 467 467
+6 * 467 0 467
+6 * 467
+7 * 467
+3 * 467 0 467
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=467 0x402df4 414 
* * 122930 38747 27949 33 6 0 33 6 0 14659 125 934
+5 * 467
+7 * 467
+3 * 467 0 467 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=467 0x402e74 414 
* * 123828 39175 28247 7 1 0 7 1 0 14943 200 934
+5 +2 467
+7 * 467
+7 * 467
+3 * 467
+3 * 467 0 467
cfi=(2)
cfn=(4)
calls=467 0x4030b2 310 
* * 551239 162921 154875 4 0 1 4 0 1 35975 1243 1866
+5 * 467
+7 * 467
+7 * 467
+3 * 467
+3 * 467 0 467
cfi=(2)
cfn=(80)
calls=467 0x402ff4 310 
* * 548273 162109 151895 0 0 0 0 0 0 35933 1521 1866
+5 * 467 467
+6 * 467 0 0 1 0 0 1
+7 * 467
+7 * 467 0 467
+6 * 467 467
+8 * 467
+3 * 467
+3 * 467 0 467
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=467 0x401719 -33 
* * 5295313 2205174 1214200 4 0 0 4 0 0 110212 468
+5 * 467 0 467
+8 * 467 467
+6 * 467 0 467
+6 * 467
+7 * 467 0 0 1 0 0 1
+3 * 467 0 467
cfi=(2)
cfn=(148)
calls=467 0x402df4 414 
* * 122930 38747 27949 0 0 0 0 0 0 14659 121 934
+5 * 467
+7 * 467
+3 * 467 0 467
cfi=(2)
cfn=(178)
calls=467 0x402e74 414 
* * 123828 39175 28247 0 0 0 0 0 0 14943 197 934
+5 +2 467 467
+7 * 467
+3 * 467 0 467
cfi=(2)
cfn=(2)
calls=467 0x402d74 645 
* * 6071 2802 934
+5 * 467 467
+6 * 467
+3 * 467
+3 * 467
+3 * 467 467
+7 * 467
+3 * 467 0 0 1 0 0 1
+3 * 467 0 467
cfi=(2)
cfn=(144)
calls=467 0x402d9a 770 
* * 5137 2335 1401
+5 * 467
+3 * 467
+7 * 467
+3 * 467
+3 * 467 0 467
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=467 0x402eda 901 
* * 42777 16034 12264 48 42 12 48 42 12 1859 90 47
+5 +1 467 467
+7 * 467
+3 * 467 0 467
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=467 0x402f54 645 
* * 6071 2802 934 0 1 0 0 1
+5 * 467 467
+6 * 467
+3 * 467
+3 * 467
+3 * 467 467
+7 * 467 0 0 1 0 0 1
+3 * 467
+3 * 467 0 467
cfi=(2)
cfn=(146)
calls=467 0x402dba 770 
* * 5137 2335 1401
+5 * 467
+3 * 467
+7 * 467
+3 * 467
+3 * 467 0 467
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=467 0x402f7a 901 
* * 41670 15772 12045 21 33 46 21 33 46 1637 67 47
+5 +1 467 467
+7 * 467
+3 * 467 0 467
cfi=(2)
cfn=(10)
calls=467 0x402f54 645 
* * 6071 2802 934
+5 * 467 467
+6 * 467
+3 * 467
+3 * 467
+3 * 467 467 0 1 0 0 1
+7 * 467
+3 * 467
+3 * 467 0 467
cfi=(2)
cfn=(146)
calls=467 0x402dba 770 
* * 5137 2335 1401
+5 * 467 467
+2 * 467
+4 * 467 467
+8 * 467 467
+8 * 467 0 467
+8 +1 467 467
+7 * 467
+3 * 467 0 467
cfi=(2)
cfn=(2)
calls=467 0x402d74 645 
* * 6071 2802 934
+5 * 467 467 0 1 0 0 1
+6 * 467
+3 * 467
+3 * 467
+3 * 467 467
+7 * 467
+3 * 467
+3 * 467 0 467
cfi=(2)
cfn=(144)
calls=467 0x402d9a 770 
* * 5137 2335 1401
+5 * 467 467
+4 * 467 467
+8 * 467
+4 * 467 467
+8 * 467
+3 * 467 0 467
+8 +2 467 0 467
+7 -12 467 467
+8 * 467 467
+7 * 467 0 0 0 0 0 0 0 0 467 1
jcnd=1/467 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 467
+7 * 467
+3 * 467 0 467
cfi=(2)
cfn=(2)
calls=467 0x402d74 645 
* * 6071 2802 934 2 0 1 2 0 1
+5 * 467
+3 * 467 467
+7 * 467
+3 * 467 0 467
cfi=(2)
cfn=(2)
calls=467 0x402d74 645 
* * 6071 2802 934 0 1 0 0 1
+5 * 467
+3 * 467 0 0 0 0 0 0 0 0 467
+2 * 467 0 0 1 0 0 1
+5 * 467
jump=467 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 467
+2 * 467 0 0 0 0 0 0 0 0 467
jcnd=467/467 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+5 +1 467 467
+4 * 467
+3 * 467 0 467
cfi=(2)
cfn=(2)
calls=467 0x402d74 645 
* * 6071 2802 934
+5 * 467
+3 * 467 0 467
+3 +1 467 467 0 1 0 0 1
+6 * 467 0 467
+3 * 467 467
+6 * 467 0 467
+3 +2 467 0 467
+7 * 467
jump=467 +86 * 
* * 
+2 +1 109745 109745
+3 * 109745
+3 * 109745 109745
+4 * 109745
+3 * 109745
+3 * 109745 0 109745
cfi=(2)
cfn=(144)
calls=109745 0x402d9a 770 
* * 1207195 548725 329235
+5 * 109745 109745
+4 * 109745 109745
+5 * 109745
+4 * 109745 0 109745
+5 +1 109745 109745
+3 * 109745
+3 * 109745 109745
+4 * 109745
+3 * 109745
+3 * 109745 0 109745
cfi=(2)
cfn=(146)
calls=109745 0x402dba 770 
* * 1207195 548725 329235
+5 * 109745 109745
+2 * 109745
+4 * 109745 109745
+5 * 109745
+4 * 109745 0 109745
+5 -2 109745 0 109745
+4 * 109745 109745
+3 * 109745
+3 * 109745 109745
+3 * 109745 0 0 0 0 0 0 0 0 109745 468
jcnd=109278/109745 -93 +1 
* * 
-9 * 467 467 0 1 0 0 1
+3 * 467
+3 * 467 467
+3 * 467 0 0 0 0 0 0 0 0 467
jcnd=467/467 -93 +1 
* * 
+2 +4 467 467
+3 * 467
+3 * 467 0 0 1 0 0 1
+4 * 467 467
+5 * 467
+4 * 467
+3 * 467 0 467
+5 +1 467 467
+3 * 467
+3 * 467
+4 * 467 467
+5 * 467
+4 * 467
+3 * 467 0 467
+5 +1 467 467
+5 * 467 467
+5 * 467 467
+5 * 467 0 0 1 0 0 1
+4 * 467
+3 * 467 0 467
+5 +2 467 467
+3 +1 467 0 467
+3 * 467 467
+5 * 467 467
+1 * 467 467

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 934
+4 * 934
+3 * 934 0 934
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=934 0x4044cc -35 
* * 4670 1868 1868
+5 * 934 934
+1 * 934 934

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 934 0 934 1 0 0 1
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934 1 0 0 1
+4 +1 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=934 0x4049d4 -35 
* * 5604 1868 2802 1 0 0 1
+5 * 934 934
+1 * 934 934

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 934 0 934 1 0 0 1
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 934
+4 * 934
+3 * 934 0 934
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=934 0x404520 -35 
* * 4670 1868 1868
+5 * 934 934
+1 * 934 934

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 934 0 934 1 0 0 1
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=934 0x404a28 -35 
* * 5604 1868 2802 1 0 1 1 0 1
+5 * 934 934
+1 * 934 934

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 934 0 934 1 0 0 1
+1 * 934
+3 * 934 0 934
+4 * 934 934
+4 * 934 934
+1 * 934 934

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +1 467 467
+4 * 467 467
+4 * 467 467
+4 * 467
+3 * 467
+3 * 467 0 467
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=467 0x40406a -87 
* * 11208 3736 4203 0 30 21 0 30 21 467
+5 * 467 467
+1 * 467 467

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 934 0 934
+1 * 934
+3 * 934 0 934
+4 * 934 934
+4 * 934 934
+1 * 934 934

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +1 467 467
+4 * 467 467
+4 * 467 467
+4 * 467
+3 * 467
+3 * 467 0 467
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=467 0x403df2 -87 
* * 11208 3736 4203 0 30 4 0 30 4 467 2
+5 * 467 467
+1 * 467 467

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1014 0 1014
+1 * 1014
+3 * 1014 0 1014 0 0 1 0 0 1
+4 +1 1014 1014
+4 * 1014 1014
+1 * 1014 1014

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868
+4 * 1868 0 1868
+4 +1 1868
+4 * 1868
+3 * 1868 0 1868
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1868 0x404ffe 790 
* * 11208 5604 3736 1 0 0 1
+5 * 1868 1868
+3 * 1868 1868
+1 * 1868 1868

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868 0 1868
+4 +1 1868 1868
+4 * 1868 1868
+1 * 1868 1868

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868
+4 * 1868 0 1868
+4 +1 1868
+4 * 1868
+3 * 1868 0 1868 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1868 0x40500c 790 
* * 11208 5604 3736 1 0 0 1
+5 * 1868 1868
+3 * 1868 1868
+1 * 1868 1868

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1014 0 1014
+1 * 1014
+3 * 1014 0 1014
+4 +1 1014 1014
+4 * 1014 1014
+1 * 1014 1014

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868 0 1868
+4 +1 1868 1868 0 1 0 0 1
+4 * 1868 1868
+1 * 1868 1868

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 934 0 934
+1 * 934
+3 * 934 0 934
+4 * 934 0 934
+4 * 934 934
+4 * 934 934
+1 * 934 934

fl=(5)
fn=(102)
0x4048de 113 958 0 958 1 0 0 1
+1 * 958
+3 * 958 0 958
+4 +1 958
+10 * 958 958
+1 * 958 958

fn=(266)
0x40406a 129 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +1 467 467
+4 * 467
+3 * 467
+5 * 467 0 467
cfi=(16)
cfn=(226)
calls=467 0x402d61 -20 
* * 3269 1401 1401
+5 * 467
+3 * 467 0 0 0 0 0 0 0 0 467
+2 * 467 467
+4 * 467 467 0 0 30 0 0 30
+2 * 467 0 467 0 0 21 0 0 21
+2 * 467 467
+1 * 467 467

fn=(28)
0x404992 113 958 0 958 1 0 0 1
+1 * 958
+3 * 958 0 958
+4 +1 958
+10 * 958 958
+1 * 958 958

fn=(176)
0x4044cc 86 934 0 934
+1 * 934
+3 * 934 0 934
+4 * 934 934
+1 * 934 934

fn=(224)
0x403df2 129 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +1 467 467
+4 * 467
+3 * 467
+5 * 467 0 467
cfi=(16)
cfn=(226)
calls=467 0x402d61 -20 
* * 3269 1401 1401
+5 * 467
+3 * 467 0 0 0 0 0 0 0 0 467 2
+2 * 467 467
+4 * 467 467 0 0 30 0 0 30
+2 * 467 0 467 0 0 4 0 0 4
+2 * 467 467
+1 * 467 467

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 942 0 942
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 * 942 0 942
+4 +1 942 942
+4 * 942
+3 * 942 0 942
cob=(5) /usr/lib64/libstdc++.so.6.0.13
cfi=(8) ???
cfn=(164) operator delete(void*)
calls=942 0x387e4bb2f0 0 
* * 115950 30067 15847 23 5 0 23 5 0 28578 251 942
* * 942 942 0 1 1 0 1 1 0 0 0 942
+5 * 942 942
+1 * 942 942

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 942 0 942
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 * 942 0 942
+4 +1 942 942
+4 * 942
+3 * 942 0 942
cob=(5)
cfi=(8)
cfn=(164)
calls=942 0x387e4bb2f0 0 
* * 117779 30940 16446 0 1 0 0 1 0 29155 406 942
* * 942 942 0 0 0 0 0 0 0 0 0 942
+5 * 942 942
+1 * 942 942

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 942 0 942 1 0 0 1
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 * 942 0 942
+4 +2 942 942
+4 * 942
+3 * 942 0 942
cfn=(102)
calls=942 0x4048de +12 
* * 5652 1884 1884 1 0 0 1
+5 * 942 942
+4 * 942 0 0 1 0 0 1
+3 * 942
+2 * 942 0 0 0 0 0 0 0 0 942
jcnd=942/942 +7 +3 
* * 
+7 +3 942 942
+4 * 942
+4 * 942
+3 * 942 0 942
cob=(5)
cfi=(8)
cfn=(32) operator new(unsigned long)
calls=942 0x387e4bd0b0 0 
* * 295555 44453 42764 33 21 39 33 21 39 49041 2278 942
* * 942 942 0 0 0 0 0 0 0 0 0 942
+5 +1 942 942
+1 * 942 942

fn=(18)
0x404a28 81 934 0 934 1 0 0 1
+1 * 934
+3 * 934 0 934 0 0 1 0 0 1
+4 * 934 0 934
+4 * 934 934
+1 * 934 934

fn=(92)
0x4049d4 81 934 0 934 1 0 0 1
+1 * 934
+3 * 934 0 934
+4 * 934 0 934
+4 * 934 934
+1 * 934 934

fn=(196)
0x404520 86 934 0 934
+1 * 934
+3 * 934 0 934
+4 * 934 934
+1 * 934 934

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 942 0 942 1 0 0 1
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 * 942 0 942 1 0 0 1
+4 +2 942 942
+4 * 942
+3 * 942 0 942
cfn=(28)
calls=942 0x404992 +12 
* * 5652 1884 1884 1 0 0 1
+5 * 942 942
+4 * 942
+3 * 942
+2 * 942 0 0 0 0 0 0 0 0 942
jcnd=942/942 +7 +3 
* * 
+7 +3 942 942
+4 * 942
+4 * 942
+3 * 942 0 942
cob=(5)
cfi=(8)
cfn=(32)
calls=942 0x387e4bd0b0 0 
* * 299575 45749 48453 22 21 17 22 21 17 48724 1744 942
* * 942 942 0 1 1 0 1 1 0 0 0 942
+5 +1 942 942
+1 * 942 942

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +10 934 934
+4 * 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=934 0x404829 -26 
* * 539162 183314 177714 25 3 3 25 3 3 21704 1244 1864 233
+5 +1 934 934
+1 * 934 934

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +2 934 934
+4 * 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934 1 0 0 1
cfn=(50)
calls=934 0x404484 107 
* * 552238 187984 182384 25 3 3 25 3 3 21704 1244 1864 233
+5 * 934 934
+1 * 934 934

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52)
0x404829 91 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +2 934 934 0 1 0 0 1
+4 * 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=934 0x404a36 450 
* * 526086 178644 173044 24 3 3 24 3 3 21704 1244 1864 233
+5 * 934 934
+1 * 934 934

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +2 934 934
+4 * 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=934 0x40439c 107 
* * 552238 187984 182384 7 1 47 7 1 47 21704 1167 1864
+5 * 934 934
+1 * 934 934

fn=(116)
0x40439c 107 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +10 934 934
+4 * 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=934 0x4047d7 -26 
* * 539162 183314 177714 7 1 47 7 1 47 21704 1167 1864
+5 +1 934 934
+1 * 934 934

fn=(118)
0x4047d7 91 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +2 934 934
+4 * 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=934 0x4049e2 450 
* * 526086 178644 173044 7 1 47 7 1 47 21704 1167 1864
+5 * 934 934
+1 * 934 934

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 934 0 934 1 0 0 1
+1 * 934
+3 * 934 0 934
+1 * 934
+4 * 934 0 934
+4 +2 934 934
+4 * 934 934
+4 * 934
+3 * 934 934
+4 * 934 934
+3 * 934
+3 * 934
+3 * 934
+4 * 934
+3 * 934 934
+4 * 934 934
+3 -1 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=934 0x403d98 +11 
* * 143048 40056 25672 1 1 0 1 1 0 29886 397 1868
+5 +1 934 934
+4 * 934
+3 * 934 0 934
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=934 0x403296 -82 
* * 21482 7472 7472 1 0 0 1
+5 * 934
jump=934 +28 * 
* * 
+28 * 934
+4 * 934 934
+1 * 934 934
+1 * 934 934

fn=(2)
0x402d74 645 3768 0 3768 1 0 0 1
+1 * 3768
+3 * 3768 0 3768 0 0 1 0 0 1
+4 +1 3768 3768
+4 * 3768 3768 0 1 1 0 1 1
+4 * 3768
+3 * 3768 3768
+4 * 3768 3768
+3 * 3768
+3 * 3768
+3 * 3768
+4 * 3768 3768
+1 * 3768 3768

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 +2 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=934 0x404236 -14 
* * 336666 57553 59304 26 19 11 26 19 11 50256 1698 1868
+5 * 934 934
+4 * 934 0 934
+3 +1 934 934
+4 * 934 934 0 1 0 0 1
+3 * 934 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+3 * 934 934
+4 * 934
+4 * 934
+3 * 934 934
+4 * 934 0 934
+4 +1 934 934
+1 * 934 934

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 +2 934 934
+4 * 934 934 0 1 0 0 1
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=934 0x403fbe -14 
* * 331506 55978 53393 16 9 34 16 9 34 50342 2210 1868
+5 * 934 934
+4 * 934 0 934
+3 +1 934 934
+4 * 934 934
+3 * 934 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+3 * 934 934
+4 * 934
+4 * 934
+3 * 934 934
+4 * 934 0 934
+4 +1 934 934
+1 * 934 934

fn=(244)
0x402f7a 901 467 0 467
+1 * 467
+3 * 467 0 0 1 0 0 1
+4 * 467 0 467
+4 * 467 0 467
+4 +2 467 467
+4 * 467 467
+4 * 467 467
+4 * 467 467
+4 * 467
+3 * 467 0 0 0 0 0 0 0 0 467
jcnd=8/467 +51 +10 
* * 
+2 +3 459 459
+4 * 459 459
+4 * 459 459
+4 -1 459 459
+4 * 459
+3 * 459
+3 * 459 0 459
cfi=(3)
cfn=(264)
calls=459 0x4036b1 215 
* * 17442 5967 6426 0 29 17 0 29 17 459
+5 +2 459 459
+4 * 459 459
+4 * 459
+4 * 459 459
+4 * 459 0 459
+4 * 459
jump=459 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11934 3694 3228 20 4 29 20 4 29 711 67 47
+5 +2 467 467
+1 * 467 467

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1892 0 1892 1 0 0 1
+1 * 1892
+3 * 1892 0 1892 1 0 0 1
+4 +1 1892 1892
+4 * 1892 1892
+1 * 1892 1892

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+3 * 934 0 934
+4 * 934
+4 * 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=934 0x404380 726 
* * 9340 4670 3736
+5 * 934 934
+4 * 934 934
+1 * 934 934

fn=(148)
0x402df4 414 934 0 934
+1 * 934
+3 * 934 0 934
+1 * 934
+4 * 934 0 934 1 0 0 1
+4 +2 934 934
+4 * 934
+3 * 934 0 934
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=934 0x40325e 113 
* * 5604 2802 1868
+5 * 934
+3 * 934 934
+4 * 934 934
+4 * 934 934
+4 * 934 934
+3 -1 934
+3 * 934
+3 * 934 0 934
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=934 0x40326c 148 
* * 28954 9340 11208 4 0 0 4
+5 +1 934 934
+4 * 934
+3 * 934 0 934
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=934 0x4031ec 159 
* * 188886 56946 37218 27 6 0 27 6 0 29318 246 1868
+5 * 934
jump=934 +28 * 
* * 
+28 * 934 0 0 1 0 0 1
+4 * 934 934
+1 * 934 934
+1 * 934 934

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 942 0 942 1 0 0 1
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 * 942 0 942
+4 +2 942 942
+5 * 942 0 0 0 0 0 0 0 0 942
+2 +1 942 942
+4 * 942 942
+4 * 942 942
+4 * 942
+3 * 942
+3 * 942 0 942
cfi=(5)
cfn=(160)
calls=942 0x4044d6 -65 
* * 127254 33835 20557 24 6 0 24 6 0 28578 251 1884
+5 +1 942 942
+1 * 942 942

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 934 0 934
+1 * 934
+3 * 934 0 934
+1 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=934 0x4043ca -45 
* * 33624 12142 13076 4 0 4 4 0 4
+5 +1 934 934 0 1 0 0 1
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(20)
calls=934 0x404412 +43 
* * 360016 68761 65842 27 19 11 27 19 11 50256 1698 1868
+5 * 934
jump=934 +28 * 
* * 
+28 * 934
+4 * 934 934
+1 * 934 934
+1 * 934 934

fn=(14)
0x4043ca 90 934 0 934 1 0 0 1
+1 * 934
+3 * 934
+4 * 934 0 934 0 0 1 0 0 1
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfi=(4)
cfn=(16)
calls=934 0x404804 +24 
* * 16812 5604 6538 2 0 1 2 0 1
+5 * 934 934
+4 * 934 0 934 0 0 2 0 0 2
+7 * 934 934
+4 * 934 0 934 1 0 0 1
+8 * 934 934
+4 * 934 0 934
+8 +1 934 934
+1 * 934 934

fn=(80)
0x402ff4 310 934 0 934 1 0 0 1
+1 * 934
+3 * 934 0 934
+2 * 934 0 934
+2 * 934 0 934
+1 * 934 0 0 1 0 0 1
+4 * 934 0 934
+4 * 934 0 934
+4 +2 934 934
+4 * 934
+3 * 934 0 934
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=934 0x4039fc 117 
* * 5604 2802 1868 2 0 0 2
+5 * 934
+3 * 934 0 934
cfi=(3)
cfn=(84)
calls=934 0x4039ed -88 
* * 5604 2802 1868
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(2)
calls=934 0x402d74 645 
* * 12142 5604 1868
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934
+3 * 934
+3 * 934 0 934 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=934 0x403a0a 134 
* * 409028 85866 79545 23 9 34 23 9 34 50342 2210 1868
+5 +4 934 934
+4 * 934
+3 * 934 0 934
cfn=(106)
calls=934 0x40325e 113 
* * 5604 2802 1868 1 0 0 1
+5 * 934
+3 * 934 934
+4 * 934 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=934 0x403a98 565 
* * 23350 9340 7472 2 0 0 2
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(112)
calls=934 0x403a68 547 
* * 23350 9340 7472
+5 * 934
+3 * 934
+3 * 934
+3 * 934
+3 * 934 0 934
cfi=(11)
cfn=(114)
calls=934 0x403ac9 -60 
* * 566248 192654 187988 7 1 47 7 1 47 21704 1167 1864
+5 -3 934 934
+4 * 934 0 934
+4 * 934
jump=934 +28 +4 
* * 
+28 +4 934
+4 * 934 934
+1 * 934 934
+2 * 934 934
+2 * 934 934
+1 * 934 934

fn=(188)
0x403d98 171 942 0 942 1 0 0 1
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 * 942 0 942
+4 +2 942 942
+5 * 942 0 0 0 0 0 0 0 0 942 8
+2 +1 942 942
+4 * 942 942
+4 * 942 942
+4 * 942
+3 * 942
+3 * 942 0 942
cfi=(5)
cfn=(190)
calls=942 0x40452a -65 
* * 129083 34708 21156 0 1 0 0 1 0 29155 406 1884
+5 +1 942 942
+1 * 942 942

fn=(22)
0x404236 167 942 0 942 1 0 0 1
+1 * 942
+3 * 942
+4 * 942 0 942 1 0 0 1
+4 * 942 0 942
+4 0 942 942
+5 0 942 0 0 0 0 0 0 0 0 942
+2 0 942 942
+4 0 942 942
+4 0 942
+5 0 942
+3 0 942
+3 0 942 0 942
fi=(6) ???
cfi=(5)
cfn=(26)
calls=942 0x404730 99 
* 0 324067 53285 55989 26 22 17 26 22 17 49666 1744 1884
+5 0 942
fi=(6)
jump=942 +7 0 
* 0 
+7 0 942 942
+1 0 942 942

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 934 0 934 1 0 0 1
+1 * 934
+3 * 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+4 * 934 0 934
+4 * 934
+4 * 934 0 0 1 0 0 1
+4 * 934
+3 * 934
+3 * 934 0 934
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=934 0x404468 726 
* * 9340 4670 3736 1 0 0 1
+5 * 934 934
+4 * 934 934
+1 * 934 934

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+3 * 934 0 934
+4 * 934
+4 * 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfi=(10)
cfn=(44)
calls=934 0x404468 726 
* * 9340 4670 3736
+5 * 934 934
+4 * 934 934
+1 * 934 934

fn=(86)
0x403a0a 134 934 0 934
+1 * 934
+3 * 934 0 934
+1 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=934 0x4042e2 -45 
* * 33624 12142 13076 5 0 0 5
+5 +1 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934 1 0 0 1
cfn=(94)
calls=934 0x40432a +43 
* * 354856 67186 59931 17 9 34 17 9 34 50342 2210 1868
+5 * 934
jump=934 +28 * 
* * 
+28 * 934
+4 * 934 934
+1 * 934 934
+1 * 934 934

fn=(88)
0x4042e2 90 934 0 934 1 0 0 1
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934 1 0 0 1
cfi=(4)
cfn=(90)
calls=934 0x4047b2 +24 
* * 16812 5604 6538 3 0 0 3
+5 * 934 934
+4 * 934 0 934
+7 * 934 934
+4 * 934 0 934
+8 * 934 934
+4 * 934 0 934
+8 +1 934 934
+1 * 934 934

fn=(156)
0x4031ec 159 934 0 934 1 0 0 1
+1 * 934
+3 * 934 0 934
+1 * 934
+4 * 934 0 934
+4 +2 934 934
+4 * 934 934 0 1 0 0 1
+4 * 934
+3 * 934 934
+4 * 934 934
+3 * 934
+3 * 934
+3 * 934
+4 * 934
+3 * 934 934
+4 * 934 934
+3 -1 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(158)
calls=934 0x403ce6 +11 
* * 141252 39200 25076 24 6 0 24 6 0 29318 246 1868
+5 +1 934 934
+4 * 934
+3 * 934 0 934
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=934 0x4031b8 -82 
* * 21482 7472 7472 1 0 0 1
+5 * 934
jump=934 +28 * 
* * 
+28 * 934
+4 * 934 934
+1 * 934 934
+1 * 934 934

fn=(172)
0x4031b8 79 934 0 934 1 0 0 1
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 934
+4 * 934
+3 * 934 0 934
cfi=(4)
cfn=(174)
calls=934 0x403ccc +42 
* * 13076 4670 4670
+5 * 934 934
+1 * 934 934

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1900 0 1900 1 0 0 1
+1 * 1900
+3 * 1900 0 1900
+4 +1 1900 1900
+4 * 1900 1900 0 0 2 0 0 2
+4 * 1900
+3 * 1900 1900
+4 * 1900 1900
+3 * 1900
+3 * 1900
+3 * 1900
+4 * 1900 1900
+1 * 1900 1900

fn=(106)
0x40325e 113 1892 0 1892 1 0 0 1
+1 * 1892
+3 * 1892 0 1892
+4 +1 1892 1892
+4 * 1892 1892
+1 * 1892 1892

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 950 0 950 1 0 0 1
+1 * 950
+3 * 950 0 950 0 0 1 0 0 1
+4 +1 950 950
+4 * 950 950
+1 * 950 950

fn=(82)
0x4039fc 117 950 0 950 1 0 0 1
+1 * 950
+3 * 950 0 950 1 0 0 1
+4 +1 950 950
+4 * 950 950
+1 * 950 950

fn=(200)
0x402eda 901 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 +2 467 467
+4 * 467 467
+4 * 467 467
+4 * 467 467
+4 * 467
+3 * 467 0 0 0 0 0 0 0 0 467 10
jcnd=8/467 +51 +10 
* * 
+2 +3 459 459
+4 * 459 459
+4 * 459 459
+4 -1 459 459
+4 * 459
+3 * 459
+3 * 459 0 459
cfi=(3)
cfn=(222)
calls=459 0x403373 215 
* * 17442 5967 6426 0 29 3 0 29 3 459 2
+5 +2 459 459
+4 * 459 459
+4 * 459
+4 * 459 459
+4 * 459 0 459
+4 * 459
jump=459 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 13041 3956 3447 45 13 9 45 13 9 933 78 47
+5 +2 467 467
+1 * 467 467

fn=(4)
0x4030b2 310 934 0 934 1 0 0 1
+1 * 934
+3 * 934 0 934
+2 * 934 0 934
+2 * 934 0 934
+1 * 934
+4 * 934 0 934 1 0 0 1
+4 * 934 0 934
+4 +2 934 934
+4 * 934
+3 * 934 0 934
cfn=(6)
calls=934 0x403b08 117 
* * 5604 2802 1868 1 0 1 1 0 1
+5 * 934
+3 * 934 0 934
cfi=(3)
cfn=(8)
calls=934 0x403afa -88 
* * 5604 2802 1868 1 0 0 1
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(10)
calls=934 0x402f54 645 
* * 12142 5604 1868 1 1 0 1 1
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934
+3 * 934
+3 * 934 0 934
cfn=(12)
calls=934 0x403b16 134 
* * 414188 87441 85456 32 19 15 32 19 15 50256 1698 1868
+5 +4 934 934 0 1 0 0 1
+4 * 934
+3 * 934 0 934
cfn=(40)
calls=934 0x40333c 113 
* * 5604 2802 1868 2 0 0 2
+5 * 934
+3 * 934 934
+4 * 934 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(42)
calls=934 0x403ba4 565 
* * 23350 9340 7472 3 0 0 3
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(46)
calls=934 0x403b74 547 
* * 23350 9340 7472
+5 * 934
+3 * 934
+3 * 934
+3 * 934
+3 * 934 0 934 1 0 0 1
cfi=(11)
cfn=(48)
calls=934 0x403bd5 -60 
* * 566248 192654 187988 26 3 3 26 3 3 21704 1244 1864 233
+5 -3 934 934
+4 * 934 0 934
+4 * 934
jump=934 +28 +4 
* * 
+28 +4 934
+4 * 934 934
+1 * 934 934
+2 * 934 934
+2 * 934 934
+1 * 934 934

fn=(108)
0x403a98 565 934 0 934 1 0 0 1
+1 * 934
+3 * 934
+4 * 934 0 934
+4 +1 934 934
+4 * 934 934
+4 * 934 0 934
+4 * 934
+4 * 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfi=(10)
cfn=(110)
calls=934 0x404380 726 
* * 9340 4670 3736 1 0 0 1
+5 * 934 934
+4 * 934 934
+1 * 934 934

fn=(178)
0x402e74 414 934 0 934
+1 * 934
+3 * 934 0 934
+1 * 934
+4 * 934 0 934 1 0 0 1
+4 +2 934 934
+4 * 934
+3 * 934 0 934
cfn=(40)
calls=934 0x40333c 113 
* * 5604 2802 1868
+5 * 934
+3 * 934 934
+4 * 934 934
+4 * 934 934
+4 * 934 934
+3 -1 934
+3 * 934
+3 * 934 0 934
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=934 0x40334a 148 
* * 28954 9340 11208 2 0 0 2
+5 +1 934 934
+4 * 934
+3 * 934 0 934
cfn=(186)
calls=934 0x4032ca 159 
* * 190682 57802 37814 3 1 0 3 1 0 29886 397 1868
+5 * 934
jump=934 +28 * 
* * 
+28 * 934 0 0 1 0 0 1
+4 * 934 934
+1 * 934 934
+1 * 934 934

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 942 0 942 1 0 0 1
+1 * 942 0 0 1 0 0 1
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 0 942 942
+5 0 942 0 0 0 0 0 0 0 0 942
+2 0 942 942
+4 0 942 942
+4 0 942
+5 0 942
+3 0 942
+3 0 942 0 942
fi=(6)
cfi=(5)
cfn=(100)
calls=942 0x40461a 99 
* 0 320047 51989 50300 36 21 39 36 21 39 49983 2278 1884
+5 0 942
fi=(6)
jump=942 +7 0 
* 0 
+7 0 942 942
+1 0 942 942

fn=(144)
0x402d9a 770 330169 0 330169
+1 * 330169
+3 * 330169 0 330169
+4 * 330169 0 330169
+4 +1 330169 330169
+4 * 330169 330169
+3 * 330169 330169
+4 * 330169
+4 * 330169
+3 * 330169 330169
+1 * 330169 330169

fn=(146)
0x402dba 770 330169 0 330169
+1 * 330169
+3 * 330169 0 330169 1 0 0 1
+4 * 330169 0 330169
+4 +1 330169 330169
+4 * 330169 330169
+3 * 330169 330169
+4 * 330169
+4 * 330169
+3 * 330169 330169
+1 * 330169 330169

fn=(192)
0x403296 79 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 934
+4 * 934
+3 * 934 0 934
cfi=(4)
cfn=(194)
calls=934 0x403d7e +42 
* * 13076 4670 4670 1 0 0 1
+5 * 934 934
+1 * 934 934

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(54)
0x404a36 450 934 0 934
+1 * 934
+3 * 934 0 934
+1 * 934
+4 * 934 0 934 1 0 0 1
+4 * 934 0 934
+4 * 934 0 934
+4 +10 934 934
+4 * 934
+3 * 934 0 934
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=934 0x404c38 288 
* * 14010 5604 4670 3 0 0 3
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(56)
calls=934 0x404c38 288 
* * 14010 5604 4670
+5 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=934 0x404c52 -36 
* * 477518 161832 156232 20 3 3 20 3 3 21704 1244 1864 233
+5 +1 934
+4 * 934 934
+1 * 934 934
+1 * 934 934

fn=(60)
0x404c52 424 934 0 934
+1 * 934
+3 * 934 0 934
+2 * 934 0 934
+1 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +4 934 934
+4 * 934
+3 * 934 0 934
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=934 0x40492d 277 
* * 14010 5604 4670 2 0 0 2
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=934 0x404d9d 277 
* * 23350 8406 7472 2 0 1 2 0 1
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(66)
calls=934 0x404d9d 277 
* * 23350 8406 7472
+5 * 934
+3 * 934
+3 * 934
+3 * 934 0 934
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=934 0x404db7 -49 
* * 390656 132878 127278 15 3 2 15 3 2 21704 1244 1864 233
+5 +1 934
+4 * 934 934
+1 * 934 934
+2 * 934 934
+1 * 934 934

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 982 0 982 1 0 0 1
+1 * 982
+3 * 982
+4 * 982 0 982
+4 +1 982 982
+4 * 982
+3 * 982 0 982 1 0 0 1
cfi=(13)
cfn=(64)
calls=982 -33 -66 
* * 5892 2946 1964
+5 * 982 982
+1 * 982 982

fn=(66)
0x404d9d 277 1868 0 1868
+1 * 1868
+3 * 1868
+4 * 1868 0 1868
+4 +1 1868 1868
+4 * 1868
+3 * 1868 0 1868
cfi=(13)
cfn=(68)
calls=1868 0x404f1a -58 
* * 29888 11208 9340 2 0 1 2 0 1
+5 * 1868 1868
+1 * 1868 1868

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 934 0 934
+1 * 934
+3 * 934 0 934
+1 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +10 934 934
+4 * 934
+3 * 934 0 934
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=934 0x404bc6 288 
* * 14010 5604 4670 3 0 0 3
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(122)
calls=934 0x404bc6 288 
* * 14010 5604 4670
+5 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=934 0x404be0 -36 
* * 477518 161832 156232 4 1 47 4 1 47 21704 1167 1864
+5 +1 934
+4 * 934 934
+1 * 934 934
+1 * 934 934

fn=(128)
0x404878 277 982 0 982
+1 * 982
+3 * 982
+4 * 982 0 982 1 0 0 1
+4 +1 982 982
+4 * 982
+3 * 982 0 982
cfi=(13)
cfn=(130)
calls=982 -33 -66 
* * 5892 2946 1964 0 0 1 0 0 1
+5 * 982 982
+1 * 982 982

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1868 0 1868
+1 * 1868
+3 * 1868
+4 * 1868 0 1868
+4 +1 1868 1868
+4 * 1868
+3 * 1868 0 1868
cfi=(13)
cfn=(134)
calls=1868 0x404e98 -58 
* * 29888 11208 9340 2 0 0 2
+5 * 1868 1868
+1 * 1868 1868

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +8 934 0 934
+4 +3 934 934
+4 * 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=934 0x404eb5 -22 
* * 376646 128208 121674 1 1 47 1 1 47 21704 1167 1864
+5 +1 934 934
+1 * 934 934

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868
+4 * 1868 0 1868
+4 +1 1868 1868
+4 * 1868
+3 * 1868 0 1868
cfi=(13)
cfn=(124)
calls=1868 0x404d36 -77 
* * 11208 5604 3736 2 0 0 2
+5 * 1868 1868
+1 * 1868 1868

fn=(56)
0x404c38 288 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868
+4 * 1868 0 1868 1 0 0 1
+4 +1 1868 1868
+4 * 1868
+3 * 1868 0 1868
cfi=(13)
cfn=(58)
calls=1868 0x404d8f -77 
* * 11208 5604 3736 1 0 0 1
+5 * 1868 1868
+1 * 1868 1868

fn=(74)
0x404f37 368 950 0 950
+1 * 950
+3 * 950
+4 * 950 0 950 1 0 0 1
+4 * 950 0 950
+4 * 950 0 950
+4 +2 950 950
+4 * 950 950
+4 * 950
+3 * 950
+3 * 950
+4 * 950 0 950
+4 +1 950 950
+5 * 950 0 0 0 0 0 0 0 0 950
jcnd=8/950 +33 +2 
* * 
+2 +1 942 942
+4 * 942
+8 * 942 942
+4 * 942 942
+4 * 942
+3 * 942 0 0 1 0 0 1
+3 * 942 0 942 0 0 1 0 0 1
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(78) memmove
calls=942 0x3877c83840 0 
* * 351616 118250 116371 11 2 20 11 2 20 20854 1248 937 233
* * 942 942 0 1 1 0 1 1 0 0 0 942
+5 +1 950 950
+4 * 950
+8 * 950 950
+4 * 950
+3 +1 950 950
+1 * 950 950

fn=(140)
0x404eb5 368 950 0 950
+1 * 950
+3 * 950
+4 * 950 0 950 1 0 0 1
+4 * 950 0 950
+4 * 950 0 950 0 0 1 0 0 1
+4 +2 950 950
+4 * 950 950
+4 * 950
+3 * 950
+3 * 950
+4 * 950 0 950
+4 +1 950 950
+5 * 950 0 0 0 0 0 0 0 0 950
jcnd=8/950 +33 +2 
* * 
+2 +1 942 942
+4 * 942
+8 * 942 942
+4 * 942 942
+4 * 942
+3 * 942
+3 * 942 0 942
cob=(2)
cfi=(9)
cfn=(78)
calls=942 0x3877c83840 0 
* * 351616 118250 116371 0 1 48 0 1 48 20854 1172 937
* * 942 942 0 0 0 0 0 0 0 0 0 942
+5 +1 950 950
+4 * 950
+8 * 950 950
+4 * 950
+3 +1 950 950
+1 * 950 950

fn=(72)
0x404db7 379 934 0 934
+1 * 934
+3 * 934
+4 * 934 0 934 1 0 0 1
+4 * 934 0 934
+4 * 934 0 934
+4 +8 934 0 934
+4 +3 934 934
+4 * 934 934
+4 * 934 934
+4 * 934
+3 * 934
+3 * 934 0 934
cfn=(74)
calls=934 0x404f37 -22 
* * 376646 128208 121674 14 3 2 14 3 2 21704 1244 1864 233
+5 +1 934 934
+1 * 934 934

fn=(126)
0x404be0 424 934 0 934
+1 * 934
+3 * 934 0 934
+2 * 934 0 934
+1 * 934
+4 * 934 0 934
+4 * 934 0 934
+4 * 934 0 934
+4 +4 934 934
+4 * 934
+3 * 934 0 934
cfn=(128)
calls=934 0x404878 277 
* * 14010 5604 4670 1 0 0 1
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(132)
calls=934 0x404d44 277 
* * 23350 8406 7472 2 0 0 2
+5 * 934
+3 * 934 934
+4 * 934
+3 * 934 0 934
cfn=(132)
calls=934 0x404d44 277 
* * 23350 8406 7472
+5 * 934
+3 * 934
+3 * 934
+3 * 934 0 934
cfn=(138)
calls=934 0x404d5e -49 
* * 390656 132878 127278 1 1 47 1 1 47 21704 1167 1864
+5 +1 934
+4 * 934 934
+1 * 934 934
+2 * 934 934
+1 * 934 934

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868 0 1868
+4 +1 1868 1868
+4 * 1868 1868
+1 * 1868 1868

fn=(110)
0x404380 726 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868 0 1868
+4 * 1868 0 1868
+4 * 1868 1868
+4 * 1868 1868
+3 * 1868 1868
+4 * 1868 0 1868
+3 * 1868 1868
+1 * 1868 1868

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868 0 1868
+4 +1 1868 1868
+4 * 1868 1868
+1 * 1868 1868

fn=(44)
0x404468 726 1868 0 1868
+1 * 1868
+3 * 1868 0 1868
+4 * 1868 0 1868
+4 * 1868 1868
+4 * 1868 1868
+3 * 1868 1868
+4 * 1868 0 1868 1 0 0 1
+3 * 1868 1868
+1 * 1868 1868

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 942 0 942 1 0 0 1
+1 * 942
+3 * 942 0 942
+4 * 942 0 942 1 0 0 1
+4 * 942 942
+1 * 942 942

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 942 0 942 1 0 0 1
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 +4 942 942
+4 * 942 942
+4 * 942
+3 * 942
+3 * 942 0 942
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=942 0x40454c -14 
* * 5652 1884 2826 1 0 0 1
+5 +2 942 942
+1 * 942 942

fn=(150)
0x40326c 148 942 0 942
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 * 942 0 942
+4 +3 942 942 0 1 0 0 1
+4 * 942 942
+4 * 942
+3 * 942
+3 * 942 0 942
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=942 0x403d1a -29 
* * 16956 5652 6594 3 0 0 3
+5 +1 942 942
+1 * 942 942

fn=(180)
0x40334a 148 942 0 942
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 * 942 0 942
+4 +3 942 942
+4 * 942 942
+4 * 942
+3 * 942
+3 * 942 0 942
cfn=(182)
calls=942 0x403dcc -29 
* * 16956 5652 6594 2 0 0 2
+5 +1 942 942
+1 * 942 942

fn=(152)
0x403d1a 122 942 0 942 1 0 0 1
+1 * 942
+3 * 942
+4 * 942 0 942
+4 * 942 0 942
+4 +4 942 942
+4 * 942 942
+4 * 942
+3 * 942
+3 * 942 0 942
cfn=(154)
calls=942 0x4044f8 -14 
* * 5652 1884 2826 2 0 0 2
+5 +2 942 942
+1 * 942 942

fn=(184)
0x40454c 112 942 0 942 1 0 0 1
+1 * 942
+3 * 942 0 942
+4 * 942 0 942
+4 * 942 942
+1 * 942 942

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2473 442 453 2 3 6 2 3 6 352 46 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3613 721 675 22 12 5 22 12 5 583 68 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 5 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(36) malloc
0x3877c7aa50 0 1884 0 1884 1 0 0 1
+5 0 1884 0 1884
+5 0 1884
+3 0 1884 0 1884
+5 0 1884
+4 0 1884 1884 0 0 1 0 0 1
+7 0 1884 1884 0 0 1 0 0 1
+3 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884 1
+6 0 1884 1884 0 0 1 0 0 1
+7 0 1884 1884 0 1 1 0 1 1
+4 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884
+2 0 1884 1884 0 0 1 0 0 1
+3 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884
jcnd=1884/1884 +97 0 
* 0 
+18 0 1884
+3 0 1884
+3 0 1884 0 1884
cfn=(38) _int_malloc
calls=1884 0x3877c79a00 0 
* 0 485858 61942 74261 47 35 55 47 35 55 77041 3922
+5 0 1884
+3 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884
+2 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884
+2 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884 21
+2 0 1884 1884
+7 0 1884 0 0 0 0 0 0 0 0 1884
jcnd=1884/1884 +13 0 
* 0 
+13 0 1884 0 1884
+2 0 1884 0 0 0 0 0 0 0 0 1884 78
+6 0 1884
+3 0 1884 1884
+4 0 1884 1884
+5 0 1884 1884
+5 0 1884
+4 0 1884 1884
+1 0 1884 0 0 1 0 0 1
+5 0 1884 1884 0 0 1 0 0 1
+7 0 1884 0 0 0 0 0 0 0 0 1884
jcnd=1884/1884 +14 0 
* 0 
+14 0 1884 0 1884 1 0 0 1
+3 0 1884 0 0 0 0 0 0 0 0 1884
+6 0 1884
jump=1884 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1884 0 1884 1 0 0 1
+2 0 1884
+3 0 1884
+3 0 1884 0 1884
+2 0 1884
+3 0 1884 0 1884
+1 0 1884
+3 0 1884 0 1884
+1 0 1884
+3 0 1884
+4 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884
+6 0 1884
+4 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884 4
jcnd=10/1884 0x3877c838d1 0 
* 0 
+2 0 1874
+3 0 1874
+3 0 1874
+3 0 1874
+3 0 1874
+3 0 1874 0 0 0 0 0 0 0 0 1874
jcnd=1874/1874 +41 0 
* 0 
+41 0 1874 0 0 1 0 0 1
+3 0 1874 0 0 0 0 0 0 0 0 1874
jcnd=1874/1874 0x3877c839c0 0 
* 0 
+24 0 1874
+3 0 1874
+4 0 1874
+3 0 1874
+3 0 1874
+3 0 1874
+3 0 1874
+3 0 1874 0 0 0 0 0 0 0 0 1874 1003
jcnd=946/1874 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 938
+10 0 938 938 0 0 2 0 0 2
+3 0 938
+4 0 938 0 938
+3 0 938
+4 0 938
+4 0 938 0 0 0 0 0 0 0 0 938
jcnd=938/938 -18 0 
* 0 
-18 0 2870 2870
+3 0 2870
+4 0 2870 0 2870
+3 0 2870
+4 0 2870
+4 0 2870 0 0 0 0 0 0 0 0 2870 8
jcnd=1932/2870 -18 0 
* 0 
+2 0 1884
+4 0 1884
+3 0 1884 1884
+1 0 1884 1884
+1 0 1884 1884
+2 0 1884 1884 0 1 0 0 1
+2 0 1884 1884
0x3877c839c0 0 1874 0 0 1 0 0 1
+3 0 1874
+3 0 1874
+3 0 1874
+4 0 1874 0 1874 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1874 0x3877c89b20 0 
* 0 596750 223272 219524 6 1 67 6 1 67 28500 1405 1874 233
+5 0 1874
jump=1874 0x3877c838be 0 
* 0 

fn=(168) free
0x3877c7b8b0 0 1884 1884 0 1 1 0 1 1
+7 0 1884 1884 0 0 1 0 0 1
+3 0 1884
+3 0 1884 0 0 1 0 0 1 0 0 1884
+6 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884
+6 0 1884 1884
+4 0 1884
+4 0 1884
+2 0 1884 0 0 0 0 0 0 0 0 1884
+2 0 1884
+2 0 1884
+7 0 1884 0 0 0 0 0 0 0 0 1884
jcnd=1884/1884 +14 0 
* 0 
+14 0 1884
+2 0 1884
cfn=(170) _int_free
calls=1884 0x3877c78650 0 
* 0 197933 53471 32293 19 3 0 19 3 0 48313 657

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=15/20 +18 0 
* 0 
+2 0 5 0 5
+8 0 5 0 5
+8 0 5
+3 0 5 0 5
+4 0 5 0 5
+4 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5
+3 0 5
+3 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=2/5 0x3877c75f78 0 
* 0 
-29 0 15
+3 0 15 0 15
+4 0 15 0 15
+4 0 15
+4 0 15 0 15
+4 0 15 0 15
+4 0 15
+3 0 15
+3 0 15 0 0 0 0 0 0 0 0 15 8
jcnd=5/15 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=9/13 +15 0 
* 0 
+2 0 4 4
+4 0 4
+3 0 4 0 0 0 0 0 0 0 0 4
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1884 0 1884 1 0 0 1
+2 0 1884 0 1884
+2 0 1884 0 1884
+2 0 1884
+3 0 1884 0 1884
+2 0 1884 0 1884
+1 0 1884 0 1884
+1 0 1884
+3 0 1884
+4 0 1884 1884
+4 0 1884 0 1884
+4 0 1884
+3 0 1884
+4 0 1884
+3 0 1884
+3 0 1884
+3 0 1884 0 0 1 0 0 1 0 0 1884
+6 0 1884
+4 0 1884 0 0 0 0 0 0 0 0 1884
+6 0 1884
+4 0 1884 0 0 0 0 0 0 0 0 1884
+6 0 1884 1884
+7 0 1884 0 0 0 0 0 0 0 0 1884 2
jcnd=1760/1884 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1760
+2 0 1760 0 0 0 0 0 0 0 0 1760
+6 0 1760 1760 0 1 0 0 1
+4 0 1760
+3 0 1760
+2 0 1760 0 0 0 0 0 0 0 0 1760
jcnd=1760/1760 0x3877c78a40 0 
* 0 
+6 0 1760 1760
+4 0 1760
+3 0 1760 0 0 0 0 0 0 0 0 1760
+6 0 1760 1760
+5 0 1760
+4 0 1760 0 0 0 0 0 0 0 0 1760
jcnd=1760/1760 0x3877c7907c 0 
* 0 
+6 0 1760 1760
+5 0 1760
+4 0 1760 0 0 0 0 0 0 0 0 1760
+6 0 1760
+4 0 1760 0 0 1 0 0 1 0 0 1760
+6 0 1760
+4 0 1760 1760
+7 0 1760 0 0 0 0 0 0 0 0 1760
+6 0 1760 1760
+6 0 1760
+2 0 1760 0 0 0 0 0 0 0 0 1760
+6 0 1760 1760
+4 0 1760 0 0 0 0 0 0 0 0 1760 5
jcnd=1756/1760 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1760 1760 0 1 0 0 1
+4 0 1760 0 0 0 0 0 0 0 0 1760 180
jcnd=180/1760 0x3877c78bf0 0 
* 0 
+6 0 1580 1580 0 0 2 0 0 2
+6 0 1580 0 0 1 0 0 1 0 0 1580 53
jcnd=73/1580 0x3877c78a78 0 
* 0 
+6 0 1507 1507
+5 0 1507 1507
+5 0 1507 1507
+4 0 1507 0 0 0 0 0 0 0 0 1507
+6 0 1507 1507
+4 0 1507 0 0 0 0 0 0 0 0 1507
+6 0 1507 1507
+9 0 1507 0 1507
+4 0 1507 0 1507
+4 0 1507 0 0 0 0 0 0 0 0 1507 389
jcnd=1039/1507 +16 0 
* 0 
+2 0 468 468
+5 0 468
+3 0 468 0 0 1 0 0 1 0 0 468
+6 0 1507
+3 0 1507
+4 0 1507 1507
+4 0 1507 1507
+4 0 1507 0 0 0 0 0 0 0 0 1507
-12 0 73
+4 0 73 73
+4 0 73 73
+4 0 73 0 0 0 0 0 0 0 0 73
+6 0 1580
+7 0 1580 0 1580
+4 0 1580 0 1580
+4 0 1580 0 0 0 0 0 0 0 0 1580 26
jcnd=441/1580 +18 0 
* 0 
+2 0 1139 0 1139
+8 0 1139 0 1139
+8 0 1139 0 1139
+4 0 1139
+3 0 1139 0 1139 1 0 0 1
+4 0 1139
+4 0 1139 0 1139
+4 0 1139 0 1139
+4 0 1139
+7 0 1139 0 0 0 0 0 0 0 0 1139
jcnd=1139/1139 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 180
+7 0 180 0 0 0 0 0 0 0 0 180
jcnd=180/180 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1760 0 0 1 0 0 1
+5 0 1760 1760
+4 0 1760 1760
+7 0 1760 0 0 0 0 0 0 0 0 1760
jcnd=1760/1760 +16 0 
* 0 
+16 0 1760 0 1760
+5 0 1760 0 0 0 0 0 0 0 0 1760
+6 0 1760
+3 0 1760
jump=1760 0x3877c7878f 0 
* 0 
+10 0 73 0 73
+6 0 73 0 0 1 0 0 1
jump=73 0x3877c78885 0 
* 0 
0x3877c78b20 0 1760 1760 0 1 0 0 1
+4 0 1760
+2 0 1760 0 0 0 0 0 0 0 0 1760
+6 0 1760 1760
+7 0 1760 0 0 0 0 0 0 0 0 1760
jcnd=1760/1760 +15 0 
* 0 
+15 0 1760 0 1760 1 0 0 1
+4 0 1760 0 0 0 0 0 0 0 0 1760
+6 0 1760
+4 0 1760 1760
+1 0 1760 1760
+1 0 1760 1760
+2 0 1760 1760
+2 0 1760 1760
+2 0 1760 1760
+2 0 1760 1760
0x3877c78bf0 0 180 0 0 1 0 0 1
+3 0 180 0 180
+4 0 180
+3 0 180
+4 0 180 0 180 1 0 0 1
+4 0 180
jump=180 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1760 1760 0 1 1 0 1 1
+4 0 1760 0 0 1 0 0 1
+7 0 1760
+4 0 1760
+3 0 1760
+3 0 1760 0 0 0 0 0 0 0 0 1760
jcnd=1760/1760 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1874 0 0 1 0 0 1
+7 0 1874
+3 0 1874
+3 0 1874 1874 0 0 1 0 0 1
+4 0 1874
+4 0 1874 0 0 0 0 0 0 0 0 0 0 1874 233
jump=232 0x3877c89be8 0 
* 0 
jump=242 0x3877c89bd0 0 
* 0 
jump=232 0x3877c89bb8 0 
* 0 
jump=232 +11 0 
* 0 
jump=232 0x3877c89c48 0 
* 0 
jump=234 0x3877c89c30 0 
* 0 
jump=232 0x3877c89c18 0 
* 0 
jump=238 0x3877c89c00 0 
* 0 
+11 0 232 232
+3 0 232
+4 0 232
+4 0 232 232
+4 0 232
+4 0 232 0 232
+4 0 232
+9 0 232 232
+4 0 232 0 232
+4 0 232 232
+4 0 232 0 232
+4 0 232 232
+4 0 232 0 232
+4 0 232 232
+4 0 232 0 232
+4 0 232
+4 0 232
+4 0 232 0 0 0 0 0 0 0 0 232
jcnd=8/232 0x3877c89c60 0 
* 0 
-40 0 27090 27090
+4 0 27090 0 27090 0 0 14 0 0 14
+4 0 27090 27090
+4 0 27090 0 27090 0 0 3 0 0 3
+4 0 27090 27090
+4 0 27090 0 27090 0 0 5 0 0 5
+4 0 27090 27090
+4 0 27090 0 27090 0 0 15 0 0 15
+4 0 27090
+4 0 27090
+4 0 27090 0 0 0 0 0 0 0 0 27090 1401
jcnd=1838/27090 0x3877c89c60 0 
* 0 
-32 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234
+4 0 234
+4 0 234 0 0 0 0 0 0 0 0 234
jcnd=10/234 0x3877c89c60 0 
* 0 
-24 0 232 232
+4 0 232 0 232
+4 0 232 232
+4 0 232 0 232
+4 0 232
+4 0 232
+4 0 232 0 0 0 0 0 0 0 0 232
jcnd=8/232 0x3877c89c60 0 
* 0 
-16 0 238 238 0 1 0 0 1
+4 0 238 0 238
+4 0 238 0 0 1 0 0 1
+4 0 238
+4 0 238 0 0 0 0 0 0 0 0 238 4
jcnd=10/238 0x3877c89c60 0 
* 0 
+6 0 26152
+4 0 26152 26152
+3 0 26152 0 26152
+3 0 26152 26152
+4 0 26152 0 26152 0 0 1 0 0 1
+4 0 26152 26152
+4 0 26152 0 26152 0 0 24 0 0 24
+4 0 26152 26152
+4 0 26152 0 26152 0 0 3 0 0 3
+4 0 26152
jump=26152 -80 0 
* 0 
-30 0 232 232
+3 0 232 0 232
+3 0 232 232
+4 0 232 0 232
+4 0 232 232
+4 0 232 0 232 0 0 1 0 0 1
+4 0 232 232
+4 0 232 0 232
+4 0 232
jump=232 -80 0 
* 0 
-24 0 242 242
+4 0 242 0 242
+4 0 242 242
+4 0 242 0 242
+4 0 242 242
+4 0 242 0 242 0 0 1 0 0 1
+4 0 242
jump=242 -80 0 
* 0 
-16 0 232 232
+4 0 232 0 232
+4 0 232 232
+4 0 232 0 232
+4 0 232
jump=232 -80 0 
* 0 
+8 0 232 232
+3 0 232
+4 0 232 0 0 1 0 0 1
+4 0 232
+4 0 232
jump=232 -39 0 
* 0 
+9 0 242
+3 0 242 0 0 0 0 0 0 0 0 242
+6 0 242 242
+3 0 242
+4 0 242
jump=242 -72 0 
* 0 
+8 0 232
+4 0 232 232
+3 0 232 0 0 0 0 0 0 0 0 232
+2 0 232
+4 0 232
jump=232 -99 0 
* 0 
+11 0 238 238 0 1 0 0 1
+3 0 238
+4 0 238
+4 0 238
+4 0 238
jump=238 0x3877c89b78 0 
* 0 
+9 0 232 232
+3 0 232
+4 0 232
+4 0 232
+4 0 232
jump=232 0x3877c89b70 0 
* 0 
+9 0 234 234
+3 0 234
+4 0 234
+4 0 234
+4 0 234
jump=234 0x3877c89b68 0 
* 0 
+9 0 232 232
+3 0 232
+4 0 232
+4 0 232
+4 0 232
jump=232 0x3877c89b60 0 
* 0 
+9 0 1874 0 1874 1 0 0 1
+3 0 1874 1874

fn=(104) alloc_perturb
0x3877c77180 0 1742 1742 0 1 0 0 1
+6 0 1742
+2 0 1742 0 0 0 0 0 0 0 0 1742 34
+2 0 1742 1742

fn=(38)
0x3877c79a00 0 1884 0 1884 1 0 0 1
+2 0 1884
+3 0 1884 0 1884
+2 0 1884 0 1884
+2 0 1884 0 1884 0 0 1 0 0 1
+2 0 1884
+3 0 1884 0 1884
+1 0 1884 0 1884
+1 0 1884
+4 0 1884
+4 0 1884 0 0 0 0 0 0 0 0 1884
+6 0 1884
+4 0 1884
+6 0 1884
+3 0 1884
+4 0 1884
+4 0 1884
+4 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884
+6 0 1884 1884 0 1 1 0 1 1
+7 0 1884 0 0 0 0 0 0 0 0 1884 5
jcnd=1762/1884 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 142 142
+6 0 142
+4 0 142
+2 0 142 0 0 0 0 0 0 0 0 142
+6 0 142
+3 0 142
+4 0 142 142
+1 0 142 142
+1 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
-14 0 1742
+4 0 1742 1742
+1 0 1742 1742
+1 0 1742 1742
+2 0 1742 1742
+2 0 1742 1742
+2 0 1742 1742
+2 0 1742 1742
+7 0 1779
+7 0 1779 0 0 1 0 0 1 0 0 1779 7
jcnd=876/1779 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 12 0 0 12
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 876 0 0 1 0 0 1
+3 0 876
+4 0 876
+4 0 876 0 0 1 0 0 1 0 0 876
jcnd=876/876 0x3877c7a1a4 0 
* 0 
+30 0 876 876
+6 0 876
+5 0 876 0 0 0 0 0 0 0 0 876 1
jcnd=875/876 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 931 251 199 8 1 0 8 1 0 193 23
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1778 0 0 1 0 0 1
+3 0 1778
+3 0 1778
+3 0 1778
+4 0 1778
+3 0 1778
+4 0 1778 0 1778
+5 0 1778
+3 0 1778 0 1778
+4 0 1778 0 1778
+4 0 1778 0 1778
+5 0 1778
+3 0 1778
+3 0 1778
+3 0 1778
+3 0 1778
+4 0 1778
+4 0 1778 0 0 1 0 0 1
+4 0 1778 0 1778
+4 0 1778
+4 0 1778 0 1778
+5 0 1778 0 1778
+5 0 1778
+3 0 1778
+3 0 1778 0 1778
+5 0 1778
+5 0 1778
+3 0 1778 0 1778
+4 0 1778 0 1778
+4 0 1778
+6 0 1778 0 1778
+4 0 1778 0 1778
+5 0 1778 0 0 1 0 0 1
+3 0 1778
+3 0 1778
+3 0 1778
jump=1778 +87 0 
* 0 
+8 0 1208
+3 0 1208
+4 0 1208
+2 0 1208
+2 0 1208
+3 0 1208
+3 0 1208
+3 0 1208
+2 0 1208
+2 0 1208
+5 0 1208
+2 0 1208 1208 0 0 2 0 0 2
+4 0 1208
+3 0 1208
+4 0 1208 0 1208
+4 0 1208 0 1208
+8 0 1208
+7 0 1208 0 1208
+4 0 1208 0 1208
+4 0 1208 0 1208
+4 0 1208 0 0 0 0 0 0 0 0 1208
-38 0 1114
+3 0 1114
+4 0 1114 0 1114
+4 0 1114 0 1114
+8 0 1114
+7 0 1114 0 1114
+4 0 1114 0 1114
+4 0 1114 0 1114
+4 0 1114 0 0 0 0 0 0 0 0 1114
+6 0 4101 4101 0 1 0 0 1
+4 0 4101
+3 0 4101 0 0 0 0 0 0 0 0 4101 296
jcnd=1705/4101 0x3877c79ef0 0 
* 0 
+6 0 2396 2396
+4 0 2396 2396
+4 0 2396
+4 0 2396 0 0 0 0 0 0 0 0 2396
+6 0 2396 2396 0 1 1 0 1 1
+7 0 2396 0 0 0 0 0 0 0 0 2396
+6 0 2396
+4 0 2396
+7 0 2396 0 0 0 0 0 0 0 0 2396 9
jcnd=1111/2396 +11 0 
* 0 
+2 0 1285
+3 0 1285 0 0 0 0 0 0 0 0 1285 607
jcnd=866/1285 0x3877c79e28 0 
* 0 
+6 0 2359
+3 0 2359 0 2359
+4 0 2359 0 2359
+5 0 2359 0 0 0 0 0 0 0 0 2359 25
jcnd=37/2359 0x3877c7a090 0 
* 0 
+6 0 2322
+7 0 2322 0 0 0 0 0 0 0 0 2322 652
jcnd=1208/2322 0x3877c79c50 0 
* 0 
+6 0 1114 0 0 1 0 0 1
+3 0 1114
+4 0 1114
+4 0 1114 0 0 0 0 0 0 0 0 1114 12
jcnd=384/1114 0x3877c79db0 0 
* 0 
+6 0 730
+3 0 730
+4 0 730
+2 0 730
+2 0 730
+3 0 730
+3 0 730
+8 0 730
+3 0 730
+2 0 730
+2 0 730
+4 0 730 730 0 0 2 0 0 2
+4 0 730
+3 0 730 0 0 1 0 0 1 0 0 730 68
jcnd=730/730 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 1114 0 1114
+4 0 1114 0 1114
+4 0 1114
+3 0 1114
jump=1114 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 30
jcnd=437/866 0x3877c79ce1 0 
* 0 
+6 0 429 429
+5 0 429 0 0 0 0 0 0 0 0 429 6
jcnd=392/429 0x3877c79ce1 0 
* 0 
+6 0 37 0 0 1 0 0 1
+3 0 37
+3 0 37
+3 0 37
+7 0 37 0 37
+4 0 37 0 37
+4 0 37
+3 0 37 0 37
+4 0 37 0 37 0 0 18 0 0 18
+4 0 37 0 37
+4 0 37 0 0 0 0 0 0 0 0 37 4
jcnd=9/37 +18 0 
* 0 
+2 0 28 0 28 0 0 1 0 0 1
+8 0 28 0 28
+8 0 28
+7 0 28 0 28 1 0 0 1
+4 0 28
+3 0 28
+3 0 28
+3 0 28
+4 0 28
+3 0 28
+4 0 28
+3 0 28
+3 0 28
+4 0 28 0 28
+4 0 28 0 28 0 0 2 0 0 2
+4 0 28
+4 0 28
+3 0 28 0 28
cfn=(104)
calls=28 0x3877c77180 0 
* 0 112 56 0 0 0 0 0 0 0 28
-56 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9 0 0 2 0 0 2
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
+5 0 37
+3 0 37
jump=37 0x3877c79ae3 0 
* 0 
+55 0 1705 0 0 1 0 0 1
+7 0 1705
+3 0 1705 0 0 0 0 0 0 0 0 1705 8
jcnd=868/1705 0x3877c7a0b0 0 
* 0 
+6 0 1681 1681 0 1 0 0 1
+4 0 1681
+3 0 1681
+3 0 1681
+2 0 1681
+4 0 1681
+3 0 1681
+3 0 1681
+2 0 1681
+2 0 1681
+2 0 1681
+2 0 1681 1681 0 0 1 0 0 1
+8 0 1681
+5 0 1681
+5 0 1681
+2 0 1681 0 0 0 0 0 0 0 0 1681
-2 0 814
+2 0 814 0 0 0 0 0 0 0 0 814
+2 0 2495
+2 0 2495 0 0 0 0 0 0 0 0 2495 41
jcnd=1667/2495 +64 0 
* 0 
+2 0 828
+8 0 828
+3 0 828
+3 0 828 0 0 0 0 0 0 0 0 828 1
jcnd=1/828 0x3877c79fc0 0 
* 0 
-6 0 596
+3 0 596
+3 0 596 0 0 0 0 0 0 0 0 596 4
jcnd=179/596 0x3877c79fc0 0 
* 0 
+2 0 1244
+2 0 1244 1244
+8 0 1244
+2 0 1244 0 0 0 0 0 0 0 0 1244 15
jcnd=596/1244 -20 0 
* 0 
+2 0 648
+2 0 648
+5 0 648
+3 0 648
+3 0 648
+2 0 648
+2 0 648
+5 0 648 0 0 0 0 0 0 0 0 648
+2 0 648
+2 0 648
+4 0 648
+2 0 648
+2 0 648 0 0 0 0 0 0 0 0 648
jcnd=648/648 -8 0 
* 0 
-8 0 12295
+4 0 12295
+2 0 12295
+2 0 12295 0 0 0 0 0 0 0 0 12295 764
jcnd=10086/12295 -8 0 
* 0 
-2 0 1667 0 0 1 0 0 1
+2 0 1667 0 0 0 0 0 0 0 0 1667 21
jcnd=1561/1667 -8 0 
* 0 
+2 0 2315 2315 0 0 5 0 0 5
+4 0 2315 0 0 1 0 0 1
+3 0 2315 0 0 0 0 0 0 0 0 2315 938
jcnd=1501/2315 0x3877c7a1cf 0 
* 0 
+6 0 814
+2 0 814
+4 0 814
+2 0 814
+2 0 814
+2 0 814 0 814
+8 0 814
jump=814 0x3877c79f30 0 
* 0 
+37 0 180 180 0 1 0 0 1
+5 0 180 180
+4 0 180
+4 0 180 180
+5 0 180 0 0 0 0 0 0 0 0 180
jcnd=180/180 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 37 0 0 1 0 0 1
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37
jcnd=37/37 0x3877c79ace 0 
* 0 
+16 0 868 868
+4 0 868
+4 0 868
+2 0 868
+5 0 868 868 0 1 1 0 1 1
+4 0 868
+3 0 868 0 0 0 0 0 0 0 0 868 4
jcnd=844/868 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 876 0 0 1 0 0 1
+3 0 876 0 876
+4 0 876
jump=876 0x3877c79b99 0 
* 0 
+36 0 1501 1501 0 1 2 0 1 2
+4 0 1501 1501 0 0 1 0 0 1
+4 0 1501
+3 0 1501 1501
+4 0 1501
+4 0 1501
+3 0 1501
+3 0 1501 1501
+4 0 1501 0 0 0 0 0 0 0 0 1501
+6 0 1501 1501 0 0 1 0 0 1
+4 0 1501 0 0 0 0 0 0 0 0 1501
+6 0 1501 1501 0 1 0 0 1
+8 0 1501 0 1501
+4 0 1501 0 1501
+4 0 1501 0 0 0 0 0 0 0 0 1501 273
jcnd=409/1501 +38 0 
* 0 
+2 0 1092 1092 0 0 2 0 0 2
+4 0 1092
+3 0 1092 0 0 0 0 0 0 0 0 1092
+2 0 1092 1092
+5 0 1092 0 0 0 0 0 0 0 0 1092
+6 0 1092 1092
+4 0 1092 0 1092
+4 0 1092 1092
+4 0 1092 0 1092
+4 0 1092
+4 0 1092 0 0 0 0 0 0 0 0 1092
-4 0 409
+4 0 409 0 0 0 0 0 0 0 0 409 4
jcnd=24/409 0x3877c7a2e3 0 
* 0 
+6 0 1477 1477
+4 0 1477 1477 0 1 0 0 1
+4 0 1477 0 0 0 0 0 0 0 0 1477
+6 0 1477
+4 0 1477
+7 0 1477 0 1477 0 0 8 0 0 8
+4 0 1477 0 1477
+4 0 1477 0 1477
+4 0 1477 0 1477
+4 0 1477 0 0 0 0 0 0 0 0 1477 6
jcnd=664/1477 +7 0 
* 0 
+2 0 813 0 813
+5 0 813
+7 0 813 0 0 0 0 0 0 0 0 813 1
jcnd=386/813 +18 0 
* 0 
-7 0 664
+7 0 664 0 0 0 0 0 0 0 0 664 4
jcnd=639/664 +18 0 
* 0 
+2 0 452 0 452 0 0 14 0 0 14
+8 0 452 0 452 1 0 0 1
+8 0 452
+7 0 452 0 452 0 0 3 0 0 3
+4 0 452
+3 0 452
+3 0 452
+4 0 452
+3 0 452
+4 0 452
+3 0 452
+3 0 452
+4 0 452 0 452
+4 0 452 0 452
+4 0 452
jump=452 +71 0 
* 0 
-46 0 1041
+7 0 1041 0 1041
+4 0 1041
+3 0 1041
+3 0 1041
+4 0 1041
+3 0 1041
+4 0 1041
+3 0 1041
+3 0 1041
+4 0 1041 0 1041
+4 0 1041 0 1041
+4 0 1041
jump=1041 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 32
+7 0 32 0 32
+6 0 32
+3 0 32 0 0 0 0 0 0 0 0 32 2
jcnd=32/32 +7 0 
* 0 
+7 0 1525
+4 0 1525 0 0 1 0 0 1
+3 0 1525
+3 0 1525 0 1525
cfn=(104)
calls=1525 0x3877c77180 0 
* 0 6100 3050 0 1 0 0 1 0 0 1525 33
+5 0 1525
+3 0 1525
jump=1525 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 180 0 0 1 0 0 1
+7 0 180
+2 0 180
+4 0 180
+3 0 180
+3 0 180 0 180
+5 0 180
+3 0 180
+4 0 180
+3 0 180 0 0 1 0 0 1
+4 0 180
+4 0 180
+3 0 180
+4 0 180 0 180
+4 0 180 0 180 0 0 6 0 0 6
+4 0 180
+3 0 180
+3 0 180 0 180
cfn=(104)
calls=180 0x3877c77180 0 
* 0 720 360 0 0 0 0 0 0 0 180 1
+5 0 180
+3 0 180
jump=180 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

ob=(5)
fl=(8)
fn=(164)
0x387e4bb2f0 0 1884 0 0 1 0 0 1
+3 0 1884 0 0 0 0 0 0 0 0 1884
+2 0 1884
cob=(2)
cfi=(9)
cfn=(168)
calls=1884 0x3877c7b8b0 0 
* 0 226193 59123 32293 21 5 0 21 5 0 55849 657
* 0 1884 1884 0 1 1 0 1 1 0 0 0 1884

fn=(32)
0x387e4bd0b0 0 1884 0 1884 1 0 0 1
+1 0 1884
+5 0 1884
+3 0 1884 0 1884
+1 0 1884
+4 0 1884 0 0 1 0 0 1
+3 0 1884
+4 0 1884
+3 0 1884 0 1884 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36)
calls=1884 0x3877c7aa50 0 
* 0 564986 82666 85565 51 41 55 51 41 55 95881 4022
* 0 1884 1884 0 1 1 0 1 1 0 0 0 1884
+5 0 1884
+3 0 1884 0 0 0 0 0 0 0 0 1884
jcnd=1884/1884 +96 0 
* 0 
+96 0 1884 0 0 1 0 0 1
+4 0 1884 1884
+1 0 1884 1884
+1 0 1884 1884

totals: 19636626 8140746 4631768 243 119 160 243 119 160 538745 8524 11294 233
