version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2443


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2811260929 - 2812886406
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1612 0 0 1 0 0 1
+3 0 1612 0 0 0 0 0 0 0 0 1612
+2 0 1612
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1612 0x3877c7b8b0 0 
* 0 192951 50411 27415 23 4 0 23 4 0 47493 837
* 0 1612 1612 0 1 1 0 1 1 0 0 0 1612

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1612 0 1612 1 0 0 1
+1 0 1612
+5 0 1612
+3 0 1612 0 1612
+1 0 1612
+4 0 1612 0 0 1 0 0 1
+3 0 1612
+4 0 1612
+3 0 1612 0 1612 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1612 0x3877c7aa50 0 
* 0 475168 68447 71195 51 40 55 51 40 55 80493 3009
* 0 1612 1612 0 1 1 0 1 1 0 0 0 1612
+5 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612
jcnd=1612/1612 +96 0 
* 0 
+96 0 1612 0 0 1 0 0 1
+4 0 1612 1612
+1 0 1612 1612
+1 0 1612 1612

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 399 0 399 1 0 0 1
+1 * 399
+3 * 399
+4 * 399 0 399
+4 * 399 0 399
+4 +1 399 399
+4 * 399
+3 * 399 0 399
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=399 0x402d74 645 
* * 5187 2394 798
+5 * 399
+3 * 399 0 399
+3 +1 399 399
+6 * 399 0 399
+3 * 399 399
+6 * 399 0 399
+3 +1 399 399
+6 * 399 0 399 1 0 0 1
+3 * 399 399
+6 * 399 0 399
+3 +2 399 0 399
+7 * 399
jump=399 +86 * 
* * 
+2 +1 80199 80199
+3 * 80199
+3 * 80199 80199
+4 * 80199
+3 * 80199
+3 * 80199 0 80199
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=80199 0x402d9a 770 
* * 882189 400995 240597
+5 * 80199 80199
+4 * 80199 80199
+5 * 80199
+4 * 80199 0 80199
+5 +1 80199 80199
+3 * 80199
+3 * 80199 80199
+4 * 80199
+3 * 80199
+3 * 80199 0 80199
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=80199 0x402dba 770 
* * 882189 400995 240597 1 0 0 1
+5 * 80199 80199
+2 * 80199
+4 * 80199 80199
+5 * 80199
+4 * 80199 0 80199
+5 -2 80199 0 80199
+4 * 80199 80199
+3 * 80199
+3 * 80199 80199
+3 * 80199 0 0 0 0 0 0 0 0 80199 400
jcnd=79800/80199 -93 +1 
* * 
-9 * 399 399 0 1 0 0 1
+3 * 399
+3 * 399 399
+3 * 399 0 0 0 0 0 0 0 0 399
jcnd=399/399 -93 +1 
* * 
+2 +4 399 399
+3 * 399
+3 * 399
+4 * 399 399 0 1 0 0 1
+5 * 399
+4 * 399
+3 * 399 0 399
+5 +1 399 399
+3 * 399
+3 * 399
+4 * 399 399
+5 * 399
+4 * 399
+3 * 399 0 399
+5 +1 399 0 399
+7 * 399
jump=399 0x4016ee * 
* * 
+2 +1 80199 80199
+3 * 80199
+3 * 80199 80199
+4 * 80199
+3 * 80199 0 0 1 0 0 1
+3 * 80199 0 80199
cfi=(2)
cfn=(146)
calls=80199 0x402dba 770 
* * 882189 400995 240597
+5 * 80199 80199
+2 * 80199
+4 * 80199 80199
+5 * 80199 0 80199
+5 +1 80199 80199
+3 * 80199
+3 * 80199 80199
+4 * 80199
+3 * 80199
+3 * 80199 0 80199
cfi=(2)
cfn=(144)
calls=80199 0x402d9a 770 
* * 882189 400995 240597
+5 * 80199 80199
+4 * 80199 80199
+5 * 80199 0 80199
+5 +1 80199 80199
+5 * 80199 80199
+5 * 80199 80199
+5 * 80199
+4 * 80199 0 80199
+5 +1 80199 80199
+5 * 80199 80199
+5 * 80199 80199
+5 * 80199
+4 * 80199 0 80199
+5 -4 80199 0 80199
+4 * 80199 80199
+3 * 80199
+3 * 80199 80199
+3 * 80199 0 0 0 0 0 0 0 0 80199 400
jcnd=79800/80199 0x401672 +1 
* * 
-9 * 399 399 0 1 0 0 1
+3 * 399
+3 * 399 399
+3 * 399 0 0 0 0 0 0 0 0 399
jcnd=399/399 0x401672 +1 
* * 
+6 +6 399 399 0 1 0 0 1
+5 * 399 399
+5 * 399 0 399
+5 +2 399 399
+3 +1 399 0 399
+3 * 399 399
+5 * 399 399
+1 * 399 399

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 399
+7 * 399
+7 * 399
+3 * 399
+3 * 399 0 399
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=399 0x4030b2 310 
* * 454092 132393 125314 66 20 21 66 20 21 30150 1252 1594 199
+5 * 399
+7 * 399
+7 * 399
+3 * 399
+3 * 399 0 399
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=399 0x402ff4 310 
* * 447305 130698 122500 46 21 62 46 21 62 29092 1593 1594
+5 * 399 0 0 1 0 0 1
+7 * 399
+7 * 399
+3 * 399
+3 * 399 0 399
cfn=(142)
calls=399 0x401585 -52 
* * 8366631 3699129 1931559 8 0 0 8 0 0 161196 800
+5 * 399 0 399
+8 * 399 399
+6 * 399 0 399
+6 * 399
+7 * 399
+3 * 399 0 399
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=399 0x402df4 414 
* * 104264 32889 23543 33 5 0 33 5 0 12349 295 798
+5 * 399
+7 * 399
+3 * 399 0 399 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=399 0x402e74 414 
* * 106278 33601 24363 7 1 0 7 1 0 12801 124 798
+5 +2 399
+7 * 399
+7 * 399
+3 * 399
+3 * 399 0 399
cfi=(2)
cfn=(4)
calls=399 0x4030b2 310 
* * 453605 132359 125185 4 1 1 4 1 1 30101 832 1594
+5 * 399
+7 * 399
+7 * 399
+3 * 399
+3 * 399 0 399
cfi=(2)
cfn=(80)
calls=399 0x402ff4 310 
* * 445599 130601 122293 0 0 0 0 0 0 28763 1217 1594
+5 * 399 399
+6 * 399 0 0 1 0 0 1
+7 * 399
+7 * 399 0 399
+6 * 399 399
+8 * 399
+3 * 399
+3 * 399 0 399
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=399 0x401719 -33 
* * 3873093 1612758 888174 4 0 0 4 0 0 80598 400
+5 * 399 0 399
+8 * 399 399
+6 * 399 0 399
+6 * 399
+7 * 399 0 0 1 0 0 1
+3 * 399 0 399
cfi=(2)
cfn=(148)
calls=399 0x402df4 414 
* * 104264 32889 23543 0 0 0 0 0 0 12349 286 798
+5 * 399
+7 * 399
+3 * 399 0 399
cfi=(2)
cfn=(178)
calls=399 0x402e74 414 
* * 106278 33601 24363 0 0 0 0 0 0 12801 118 798
+5 +2 399 399
+7 * 399
+3 * 399 0 399
cfi=(2)
cfn=(2)
calls=399 0x402d74 645 
* * 5187 2394 798
+5 * 399 399
+6 * 399
+3 * 399
+3 * 399
+3 * 399 399
+7 * 399
+3 * 399 0 0 1 0 0 1
+3 * 399 0 399
cfi=(2)
cfn=(144)
calls=399 0x402d9a 770 
* * 4389 1995 1197
+5 * 399
+3 * 399
+7 * 399
+3 * 399
+3 * 399 0 399
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=399 0x402eda 901 
* * 38302 14258 10966 43 27 20 43 27 20 1697 80 47
+5 +1 399 399
+7 * 399
+3 * 399 0 399
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=399 0x402f54 645 
* * 5187 2394 798 0 1 0 0 1
+5 * 399 399
+6 * 399
+3 * 399
+3 * 399
+3 * 399 399
+7 * 399 0 0 1 0 0 1
+3 * 399
+3 * 399 0 399
cfi=(2)
cfn=(146)
calls=399 0x402dba 770 
* * 4389 1995 1197
+5 * 399
+3 * 399
+7 * 399
+3 * 399
+3 * 399 0 399
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=399 0x402f7a 901 
* * 37376 14009 10756 20 28 43 20 28 43 1515 63 47
+5 +1 399 399
+7 * 399
+3 * 399 0 399
cfi=(2)
cfn=(10)
calls=399 0x402f54 645 
* * 5187 2394 798
+5 * 399 399
+6 * 399
+3 * 399
+3 * 399
+3 * 399 399 0 1 0 0 1
+7 * 399
+3 * 399
+3 * 399 0 399
cfi=(2)
cfn=(146)
calls=399 0x402dba 770 
* * 4389 1995 1197
+5 * 399 399
+2 * 399
+4 * 399 399
+8 * 399 399
+8 * 399 0 399
+8 +1 399 399
+7 * 399
+3 * 399 0 399
cfi=(2)
cfn=(2)
calls=399 0x402d74 645 
* * 5187 2394 798
+5 * 399 399 0 1 0 0 1
+6 * 399
+3 * 399
+3 * 399
+3 * 399 399
+7 * 399
+3 * 399
+3 * 399 0 399
cfi=(2)
cfn=(144)
calls=399 0x402d9a 770 
* * 4389 1995 1197
+5 * 399 399
+4 * 399 399
+8 * 399
+4 * 399 399
+8 * 399
+3 * 399 0 399
+8 +2 399 0 399
+7 -12 399 399
+8 * 399 399
+7 * 399 0 0 0 0 0 0 0 0 399 1
jcnd=1/399 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 399
+7 * 399
+3 * 399 0 399
cfi=(2)
cfn=(2)
calls=399 0x402d74 645 
* * 5187 2394 798 2 0 1 2 0 1
+5 * 399
+3 * 399 399
+7 * 399
+3 * 399 0 399
cfi=(2)
cfn=(2)
calls=399 0x402d74 645 
* * 5187 2394 798 0 1 0 0 1
+5 * 399
+3 * 399 0 0 0 0 0 0 0 0 399 1
+2 * 399 0 0 1 0 0 1
+5 * 399
jump=399 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 399
+2 * 399 0 0 0 0 0 0 0 0 399
jcnd=399/399 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 399 0 399
+1 * 399
+3 * 399
+4 * 399 0 399
+4 * 399 0 399
+4 * 399 0 399
+5 +1 399 399
+4 * 399
+3 * 399 0 399
cfi=(2)
cfn=(2)
calls=399 0x402d74 645 
* * 5187 2394 798
+5 * 399
+3 * 399 0 399
+3 +1 399 399 0 1 0 0 1
+6 * 399 0 399
+3 * 399 399
+6 * 399 0 399
+3 +2 399 0 399
+7 * 399
jump=399 +86 * 
* * 
+2 +1 80199 80199
+3 * 80199
+3 * 80199 80199
+4 * 80199
+3 * 80199
+3 * 80199 0 80199
cfi=(2)
cfn=(144)
calls=80199 0x402d9a 770 
* * 882189 400995 240597
+5 * 80199 80199
+4 * 80199 80199
+5 * 80199
+4 * 80199 0 80199
+5 +1 80199 80199
+3 * 80199
+3 * 80199 80199
+4 * 80199
+3 * 80199
+3 * 80199 0 80199
cfi=(2)
cfn=(146)
calls=80199 0x402dba 770 
* * 882189 400995 240597
+5 * 80199 80199
+2 * 80199
+4 * 80199 80199
+5 * 80199
+4 * 80199 0 80199
+5 -2 80199 0 80199
+4 * 80199 80199
+3 * 80199
+3 * 80199 80199
+3 * 80199 0 0 0 0 0 0 0 0 80199 400
jcnd=79800/80199 -93 +1 
* * 
-9 * 399 399 0 1 0 0 1
+3 * 399
+3 * 399 399
+3 * 399 0 0 0 0 0 0 0 0 399
jcnd=399/399 -93 +1 
* * 
+2 +4 399 399
+3 * 399
+3 * 399 0 0 1 0 0 1
+4 * 399 399
+5 * 399
+4 * 399
+3 * 399 0 399
+5 +1 399 399
+3 * 399
+3 * 399
+4 * 399 399
+5 * 399
+4 * 399
+3 * 399 0 399
+5 +1 399 399
+5 * 399 399
+5 * 399 399
+5 * 399 0 0 1 0 0 1
+4 * 399
+3 * 399 0 399
+5 +2 399 399
+3 +1 399 0 399
+3 * 399 399
+5 * 399 399
+1 * 399 399

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 798 0 798 1 0 0 1
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798 1 0 0 1
+4 +1 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=798 0x4049d4 -35 
* * 4788 1596 2394 1 0 0 1
+5 * 798 798
+1 * 798 798

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 798 0 798 1 0 0 1
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 798
+4 * 798
+3 * 798 0 798
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=798 0x404520 -35 
* * 3990 1596 1596
+5 * 798 798
+1 * 798 798

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 798 0 798 1 0 0 1
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=798 0x404a28 -35 
* * 4788 1596 2394 1 0 1 1 0 1
+5 * 798 798
+1 * 798 798

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 798
+4 * 798
+3 * 798 0 798
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=798 0x4044cc -35 
* * 3990 1596 1596
+5 * 798 798
+1 * 798 798

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 798 0 798
+1 * 798
+3 * 798 0 798
+4 * 798 798
+4 * 798 798
+1 * 798 798

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 399 0 399
+1 * 399
+3 * 399
+4 * 399 0 399
+4 * 399 0 399
+4 * 399 0 399
+4 +1 399 399
+4 * 399 399
+4 * 399 399
+4 * 399
+3 * 399
+3 * 399 0 399
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=399 0x403df2 -87 
* * 9576 3192 3591 0 25 12 0 25 12 399 2
+5 * 399 399
+1 * 399 399

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 798 0 798 1 0 0 1
+1 * 798
+3 * 798 0 798
+4 * 798 798
+4 * 798 798
+1 * 798 798

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 399 0 399
+1 * 399
+3 * 399
+4 * 399 0 399
+4 * 399 0 399
+4 * 399 0 399
+4 +1 399 399
+4 * 399 399
+4 * 399 399
+4 * 399
+3 * 399
+3 * 399 0 399
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=399 0x40406a -87 
* * 9576 3192 3591 0 26 17 0 26 17 399
+5 * 399 399
+1 * 399 399

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 878 0 878
+1 * 878
+3 * 878 0 878
+4 +1 878 878
+4 * 878 878
+1 * 878 878

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1596 0 1596 1 0 0 1
+1 * 1596
+3 * 1596 0 1596
+4 +1 1596 1596 0 1 0 0 1
+4 * 1596 1596
+1 * 1596 1596

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 878 0 878
+1 * 878
+3 * 878 0 878 0 0 1 0 0 1
+4 +1 878 878
+4 * 878 878
+1 * 878 878

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1596 0 1596 1 0 0 1
+1 * 1596
+3 * 1596
+4 * 1596 0 1596
+4 +1 1596
+4 * 1596
+3 * 1596 0 1596
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1596 0x404ffe 790 
* * 9576 4788 3192 1 0 0 1
+5 * 1596 1596
+3 * 1596 1596
+1 * 1596 1596

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1596 0 1596 1 0 0 1
+1 * 1596
+3 * 1596 0 1596
+4 +1 1596 1596
+4 * 1596 1596
+1 * 1596 1596

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1596 0 1596 1 0 0 1
+1 * 1596
+3 * 1596
+4 * 1596 0 1596
+4 +1 1596
+4 * 1596
+3 * 1596 0 1596 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1596 0x40500c 790 
* * 9576 4788 3192 1 0 0 1
+5 * 1596 1596
+3 * 1596 1596
+1 * 1596 1596

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 798 0 798
+1 * 798
+3 * 798 0 798
+4 * 798 0 798
+4 * 798 798
+4 * 798 798
+1 * 798 798

fl=(5)
fn=(28)
0x404992 113 822 0 822 1 0 0 1
+1 * 822
+3 * 822 0 822
+4 +1 822
+10 * 822 822
+1 * 822 822

fn=(176)
0x4044cc 86 798 0 798
+1 * 798
+3 * 798 0 798
+4 * 798 798
+1 * 798 798

fn=(224)
0x403df2 129 399 0 399
+1 * 399
+3 * 399
+4 * 399 0 399
+4 * 399 0 399
+4 * 399 0 399
+4 +1 399 399
+4 * 399
+3 * 399
+5 * 399 0 399
cfi=(16)
cfn=(226)
calls=399 0x402d61 -20 
* * 2793 1197 1197
+5 * 399
+3 * 399 0 0 0 0 0 0 0 0 399 2
+2 * 399 399
+4 * 399 399 0 0 25 0 0 25
+2 * 399 0 399 0 0 12 0 0 12
+2 * 399 399
+1 * 399 399

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 806 0 806
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 * 806 0 806
+4 +1 806 806
+4 * 806
+3 * 806 0 806
cob=(5)
cfi=(8)
cfn=(164)
calls=806 0x387e4bb2f0 0 
* * 97668 25291 12885 24 4 0 24 4 0 24096 585 806
* * 806 806 0 1 1 0 1 1 0 0 0 806
+5 * 806 806
+1 * 806 806

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 806 0 806
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 * 806 0 806
+4 +1 806 806
+4 * 806
+3 * 806 0 806
cob=(5)
cfi=(8)
cfn=(164)
calls=806 0x387e4bb2f0 0 
* * 101731 26732 14530 1 1 0 1 1 0 25009 252 806
* * 806 806 0 0 0 0 0 0 0 0 0 806
+5 * 806 806
+1 * 806 806

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 806 0 806 1 0 0 1
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 * 806 0 806
+4 +2 806 806
+4 * 806
+3 * 806 0 806
cfn=(102)
calls=806 0x4048de +12 
* * 4836 1612 1612 1 0 0 1
+5 * 806 806
+4 * 806 0 0 1 0 0 1
+3 * 806
+2 * 806 0 0 0 0 0 0 0 0 806
jcnd=806/806 +7 +3 
* * 
+7 +3 806 806
+4 * 806
+4 * 806
+3 * 806 0 806
cob=(5)
cfi=(8)
cfn=(32)
calls=806 0x387e4bd0b0 0 
* * 243564 35854 35270 35 23 37 35 23 37 39950 1908 806
* * 806 806 0 0 0 0 0 0 0 0 0 806
+5 +1 806 806
+1 * 806 806

fn=(18)
0x404a28 81 798 0 798 1 0 0 1
+1 * 798
+3 * 798 0 798 0 0 1 0 0 1
+4 * 798 0 798
+4 * 798 798
+1 * 798 798

fn=(92)
0x4049d4 81 798 0 798 1 0 0 1
+1 * 798
+3 * 798 0 798
+4 * 798 0 798
+4 * 798 798
+1 * 798 798

fn=(196)
0x404520 86 798 0 798
+1 * 798
+3 * 798 0 798
+4 * 798 798
+1 * 798 798

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 806 0 806 1 0 0 1
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 * 806 0 806 1 0 0 1
+4 +2 806 806
+4 * 806
+3 * 806 0 806
cfn=(28)
calls=806 0x404992 +12 
* * 4836 1612 1612 1 0 0 1
+5 * 806 806
+4 * 806
+3 * 806
+2 * 806 0 0 0 0 0 0 0 0 806
jcnd=806/806 +7 +3 
* * 
+7 +3 806 806
+4 * 806
+4 * 806
+3 * 806 0 806
cob=(5)
cfi=(8)
cfn=(32)
calls=806 0x387e4bd0b0 0 
* * 257396 39041 40761 20 18 19 20 18 19 42155 1101 806
* * 806 806 0 1 1 0 1 1 0 0 0 806
+5 +1 806 806
+1 * 806 806

fn=(102)
0x4048de 113 822 0 822 1 0 0 1
+1 * 822
+3 * 822 0 822
+4 +1 822
+10 * 822 822
+1 * 822 822

fn=(266)
0x40406a 129 399 0 399
+1 * 399
+3 * 399
+4 * 399 0 399
+4 * 399 0 399
+4 * 399 0 399
+4 +1 399 399
+4 * 399
+3 * 399
+5 * 399 0 399
cfi=(16)
cfn=(226)
calls=399 0x402d61 -20 
* * 2793 1197 1197
+5 * 399
+3 * 399 0 0 0 0 0 0 0 0 399
+2 * 399 399
+4 * 399 399 0 0 26 0 0 26
+2 * 399 0 399 0 0 17 0 0 17
+2 * 399 399
+1 * 399 399

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +10 798 798
+4 * 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=798 0x404829 -26 
* * 425054 143058 138274 25 3 5 25 3 5 16848 1024 1592 199
+5 +1 798 798
+1 * 798 798

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +2 798 798
+4 * 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798 1 0 0 1
cfn=(50)
calls=798 0x404484 107 
* * 436226 147048 142264 25 3 5 25 3 5 16848 1024 1592 199
+5 * 798 798
+1 * 798 798

fn=(230)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52)
0x404829 91 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +2 798 798 0 1 0 0 1
+4 * 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=798 0x404a36 450 
* * 413882 139068 134284 24 3 5 24 3 5 16848 1024 1592 199
+5 * 798 798
+1 * 798 798

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +2 798 798
+4 * 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=798 0x40439c 107 
* * 436226 147048 142264 7 0 30 7 0 30 16848 962 1592
+5 * 798 798
+1 * 798 798

fn=(116)
0x40439c 107 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +10 798 798
+4 * 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=798 0x4047d7 -26 
* * 425054 143058 138274 7 0 30 7 0 30 16848 962 1592
+5 +1 798 798
+1 * 798 798

fn=(118)
0x4047d7 91 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +2 798 798
+4 * 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=798 0x4049e2 450 
* * 413882 139068 134284 7 0 30 7 0 30 16848 962 1592
+5 * 798 798
+1 * 798 798

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(2)
fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1620 0 1620 1 0 0 1
+1 * 1620
+3 * 1620 0 1620 1 0 0 1
+4 +1 1620 1620
+4 * 1620 1620
+1 * 1620 1620

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+3 * 798 0 798
+4 * 798
+4 * 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=798 0x404380 726 
* * 7980 3990 3192
+5 * 798 798
+4 * 798 798
+1 * 798 798

fn=(148)
0x402df4 414 798 0 798
+1 * 798
+3 * 798 0 798
+1 * 798
+4 * 798 0 798 1 0 0 1
+4 +2 798 798
+4 * 798
+3 * 798 0 798
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=798 0x40325e 113 
* * 4788 2394 1596
+5 * 798
+3 * 798 798
+4 * 798 798
+4 * 798 798
+4 * 798 798
+3 -1 798
+3 * 798
+3 * 798 0 798
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=798 0x40326c 148 
* * 24738 7980 9576 4 0 0 4
+5 +1 798 798
+4 * 798
+3 * 798 0 798
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=798 0x4031ec 159 
* * 159850 48222 31126 27 5 0 27 5 0 24698 581 1596
+5 * 798
jump=798 +28 * 
* * 
+28 * 798 0 0 1 0 0 1
+4 * 798 798
+1 * 798 798
+1 * 798 798

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 806 0 806 1 0 0 1
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 * 806 0 806
+4 +2 806 806
+5 * 806 0 0 0 0 0 0 0 0 806
+2 +1 806 806
+4 * 806 806
+4 * 806 806
+4 * 806
+3 * 806
+3 * 806 0 806
cfi=(5)
cfn=(160)
calls=806 0x4044d6 -65 
* * 107340 28515 16915 25 5 0 25 5 0 24096 585 1612
+5 +1 806 806
+1 * 806 806

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 798 0 798
+1 * 798
+3 * 798 0 798
+1 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=798 0x4043ca -45 
* * 28728 10374 11172 4 0 4 4 0 4
+5 +1 798 798 0 1 0 0 1
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=798 0x404412 +43 
* * 308679 58652 55567 27 17 12 27 17 12 43403 1060 1596
+5 * 798
jump=798 +28 * 
* * 
+28 * 798
+4 * 798 798
+1 * 798 798
+1 * 798 798

fn=(14)
0x4043ca 90 798 0 798 1 0 0 1
+1 * 798
+3 * 798
+4 * 798 0 798 0 0 1 0 0 1
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfi=(4)
cfn=(16)
calls=798 0x404804 +24 
* * 14364 4788 5586 2 0 1 2 0 1
+5 * 798 798
+4 * 798 0 798 0 0 2 0 0 2
+7 * 798 798
+4 * 798 0 798 1 0 0 1
+8 * 798 798
+4 * 798 0 798
+8 +1 798 798
+1 * 798 798

fn=(80)
0x402ff4 310 798 0 798 1 0 0 1
+1 * 798
+3 * 798 0 798
+2 * 798 0 798
+2 * 798 0 798
+1 * 798 0 0 1 0 0 1
+4 * 798 0 798
+4 * 798 0 798
+4 +2 798 798
+4 * 798
+3 * 798 0 798
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=798 0x4039fc 117 
* * 4788 2394 1596 2 0 0 2
+5 * 798
+3 * 798 0 798
cfi=(3)
cfn=(84)
calls=798 0x4039ed -88 
* * 4788 2394 1596
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(2)
calls=798 0x402d74 645 
* * 10374 4788 1596
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798
+3 * 798
+3 * 798 0 798 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=798 0x403a0a 134 
* * 340170 71159 66619 31 21 32 31 21 32 41007 1848 1596
+5 +4 798 798
+4 * 798
+3 * 798 0 798
cfn=(106)
calls=798 0x40325e 113 
* * 4788 2394 1596 1 0 0 1
+5 * 798
+3 * 798 798
+4 * 798 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=798 0x403a98 565 
* * 19950 7980 6384 2 0 0 2
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(112)
calls=798 0x403a68 547 
* * 19950 7980 6384
+5 * 798
+3 * 798
+3 * 798
+3 * 798
+3 * 798 0 798
cfi=(11)
cfn=(114)
calls=798 0x403ac9 -60 
* * 448196 151038 147052 7 0 30 7 0 30 16848 962 1592
+5 -3 798 798
+4 * 798 0 798
+4 * 798
jump=798 +28 +4 
* * 
+28 +4 798
+4 * 798 798
+1 * 798 798
+2 * 798 798
+2 * 798 798
+1 * 798 798

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 806 0 806 1 0 0 1
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 * 806 0 806
+4 +2 806 806
+5 * 806 0 0 0 0 0 0 0 0 806 8
+2 +1 806 806
+4 * 806 806
+4 * 806 806
+4 * 806
+3 * 806
+3 * 806 0 806
cfi=(5)
cfn=(190)
calls=806 0x40452a -65 
* * 111403 29956 18560 1 1 0 1 1 0 25009 252 1612
+5 +1 806 806
+1 * 806 806

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 806 0 806 1 0 0 1
+1 * 806
+3 * 806
+4 * 806 0 806 1 0 0 1
+4 * 806 0 806
+4 0 806 806
+5 0 806 0 0 0 0 0 0 0 0 806
+2 0 806 806
+4 0 806 806
+4 0 806
+5 0 806
+3 0 806
+3 0 806 0 806
fi=(6) ???
cfi=(5)
cfn=(26)
calls=806 0x404730 99 
* 0 278352 45489 47209 24 19 19 24 19 19 42961 1101 1612
+5 0 806
fi=(6)
jump=806 +7 0 
* 0 
+7 0 806 806
+1 0 806 806

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 798 0 798 1 0 0 1
+1 * 798
+3 * 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+4 * 798 0 798
+4 * 798
+4 * 798 0 0 1 0 0 1
+4 * 798
+3 * 798
+3 * 798 0 798
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=798 0x404468 726 
* * 7980 3990 3192 1 0 0 1
+5 * 798 798
+4 * 798 798
+1 * 798 798

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+3 * 798 0 798
+4 * 798
+4 * 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfi=(10)
cfn=(44)
calls=798 0x404468 726 
* * 7980 3990 3192
+5 * 798 798
+4 * 798 798
+1 * 798 798

fn=(86)
0x403a0a 134 798 0 798
+1 * 798
+3 * 798 0 798
+1 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=798 0x4042e2 -45 
* * 28728 10374 11172 5 0 0 5
+5 +1 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=798 0x40432a +43 
* * 293886 55199 49861 25 21 32 25 21 32 41007 1848 1596
+5 * 798
jump=798 +28 * 
* * 
+28 * 798
+4 * 798 798
+1 * 798 798
+1 * 798 798

fn=(88)
0x4042e2 90 798 0 798 1 0 0 1
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798 1 0 0 1
cfi=(4)
cfn=(90)
calls=798 0x4047b2 +24 
* * 14364 4788 5586 3 0 0 3
+5 * 798 798
+4 * 798 0 798
+7 * 798 798
+4 * 798 0 798
+8 * 798 798
+4 * 798 0 798
+8 +1 798 798
+1 * 798 798

fn=(156)
0x4031ec 159 798 0 798 1 0 0 1
+1 * 798
+3 * 798 0 798
+1 * 798
+4 * 798 0 798
+4 +2 798 798
+4 * 798 798 0 1 0 0 1
+4 * 798
+3 * 798 798
+4 * 798 798
+3 * 798
+3 * 798
+3 * 798
+4 * 798
+3 * 798 798
+4 * 798 798
+3 -1 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(158)
calls=798 0x403ce6 +11 
* * 119152 33060 20752 24 5 0 24 5 0 24698 581 1596
+5 +1 798 798
+4 * 798
+3 * 798 0 798
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=798 0x4031b8 -82 
* * 18354 6384 6384 1 0 0 1
+5 * 798
jump=798 +28 * 
* * 
+28 * 798
+4 * 798 798
+1 * 798 798
+1 * 798 798

fn=(172)
0x4031b8 79 798 0 798 1 0 0 1
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 798
+4 * 798
+3 * 798 0 798
cfi=(4)
cfn=(174)
calls=798 0x403ccc +42 
* * 11172 3990 3990
+5 * 798 798
+1 * 798 798

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1628 0 1628 1 0 0 1
+1 * 1628
+3 * 1628 0 1628
+4 +1 1628 1628
+4 * 1628 1628 0 0 2 0 0 2
+4 * 1628
+3 * 1628 1628
+4 * 1628 1628
+3 * 1628
+3 * 1628
+3 * 1628
+4 * 1628 1628
+1 * 1628 1628

fn=(106)
0x40325e 113 1620 0 1620 1 0 0 1
+1 * 1620
+3 * 1620 0 1620
+4 +1 1620 1620
+4 * 1620 1620
+1 * 1620 1620

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 814 0 814 1 0 0 1
+1 * 814
+3 * 814 0 814 0 0 1 0 0 1
+4 +1 814 814
+4 * 814 814
+1 * 814 814

fn=(82)
0x4039fc 117 814 0 814 1 0 0 1
+1 * 814
+3 * 814 0 814 1 0 0 1
+4 +1 814 814
+4 * 814 814
+1 * 814 814

fn=(200)
0x402eda 901 399 0 399
+1 * 399
+3 * 399
+4 * 399 0 399
+4 * 399 0 399
+4 +2 399 399
+4 * 399 399
+4 * 399 399
+4 * 399 399
+4 * 399
+3 * 399 0 0 0 0 0 0 0 0 399 8
jcnd=8/399 +51 +10 
* * 
+2 +3 391 391
+4 * 391 391
+4 * 391 391
+4 -1 391 391
+4 * 391
+3 * 391
+3 * 391 0 391
cfi=(3)
cfn=(222)
calls=391 0x403373 215 
* * 14858 5083 5474 0 24 11 0 24 11 391 2
+5 +2 391 391
+4 * 391 391
+4 * 391
+4 * 391 391
+4 * 391 0 391
+4 * 391
jump=391 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12918 3948 3441 40 3 9 40 3 9 907 70 47
+5 +2 399 399
+1 * 399 399

fn=(4)
0x4030b2 310 798 0 798 1 0 0 1
+1 * 798
+3 * 798 0 798
+2 * 798 0 798
+2 * 798 0 798
+1 * 798
+4 * 798 0 798 1 0 0 1
+4 * 798 0 798
+4 +2 798 798
+4 * 798
+3 * 798 0 798
cfn=(6)
calls=798 0x403b08 117 
* * 4788 2394 1596 1 0 1 1 0 1
+5 * 798
+3 * 798 0 798
cfi=(3)
cfn=(8)
calls=798 0x403afa -88 
* * 4788 2394 1596 1 0 0 1
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(10)
calls=798 0x402f54 645 
* * 10374 4788 1596 1 1 0 1 1
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798
+3 * 798
+3 * 798 0 798
cfn=(12)
calls=798 0x403b16 134 
* * 354963 74612 72325 32 17 16 32 17 16 43403 1060 1596
+5 +4 798 798 0 1 0 0 1
+4 * 798
+3 * 798 0 798
cfn=(40)
calls=798 0x40333c 113 
* * 4788 2394 1596 2 0 0 2
+5 * 798
+3 * 798 798
+4 * 798 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(42)
calls=798 0x403ba4 565 
* * 19950 7980 6384 3 0 0 3
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(46)
calls=798 0x403b74 547 
* * 19950 7980 6384
+5 * 798
+3 * 798
+3 * 798
+3 * 798
+3 * 798 0 798 1 0 0 1
cfi=(11)
cfn=(48)
calls=798 0x403bd5 -60 
* * 448196 151038 147052 26 3 5 26 3 5 16848 1024 1592 199
+5 -3 798 798
+4 * 798 0 798
+4 * 798
jump=798 +28 +4 
* * 
+28 +4 798
+4 * 798 798
+1 * 798 798
+2 * 798 798
+2 * 798 798
+1 * 798 798

fn=(108)
0x403a98 565 798 0 798 1 0 0 1
+1 * 798
+3 * 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+4 * 798 0 798
+4 * 798
+4 * 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfi=(10)
cfn=(110)
calls=798 0x404380 726 
* * 7980 3990 3192 1 0 0 1
+5 * 798 798
+4 * 798 798
+1 * 798 798

fn=(178)
0x402e74 414 798 0 798
+1 * 798
+3 * 798 0 798
+1 * 798
+4 * 798 0 798 1 0 0 1
+4 +2 798 798
+4 * 798
+3 * 798 0 798
cfn=(40)
calls=798 0x40333c 113 
* * 4788 2394 1596
+5 * 798
+3 * 798 798
+4 * 798 798
+4 * 798 798
+4 * 798 798
+3 -1 798
+3 * 798
+3 * 798 0 798
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=798 0x40334a 148 
* * 24738 7980 9576 2 0 0 2
+5 +1 798 798
+4 * 798
+3 * 798 0 798
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=798 0x4032ca 159 
* * 163878 49646 32766 3 1 0 3 1 0 25602 242 1596
+5 * 798
jump=798 +28 * 
* * 
+28 * 798 0 0 1 0 0 1
+4 * 798 798
+1 * 798 798
+1 * 798 798

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 806 0 806 1 0 0 1
+1 * 806 0 0 1 0 0 1
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 0 806 806
+5 0 806 0 0 0 0 0 0 0 0 806
+2 0 806 806
+4 0 806 806
+4 0 806
+5 0 806
+3 0 806
+3 0 806 0 806
fi=(6)
cfi=(5)
cfn=(100)
calls=806 0x40461a 99 
* 0 264520 42302 41718 38 23 37 38 23 37 40756 1908 1612
+5 0 806
fi=(6)
jump=806 +7 0 
* 0 
+7 0 806 806
+1 0 806 806

fn=(144)
0x402d9a 770 241395 0 241395
+1 * 241395
+3 * 241395 0 241395
+4 * 241395 0 241395
+4 +1 241395 241395
+4 * 241395 241395
+3 * 241395 241395
+4 * 241395
+4 * 241395
+3 * 241395 241395
+1 * 241395 241395

fn=(146)
0x402dba 770 241395 0 241395
+1 * 241395
+3 * 241395 0 241395 1 0 0 1
+4 * 241395 0 241395
+4 +1 241395 241395
+4 * 241395 241395
+3 * 241395 241395
+4 * 241395
+4 * 241395
+3 * 241395 241395
+1 * 241395 241395

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 798
+4 * 798
+3 * 798 0 798
cfi=(4)
cfn=(194)
calls=798 0x403d7e +42 
* * 11172 3990 3990 1 0 0 1
+5 * 798 798
+1 * 798 798

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 798 0 798 1 0 0 1
+1 * 798
+3 * 798 0 798
+1 * 798
+4 * 798 0 798
+4 +2 798 798
+4 * 798 798
+4 * 798
+3 * 798 798
+4 * 798 798
+3 * 798
+3 * 798
+3 * 798
+4 * 798
+3 * 798 798
+4 * 798 798
+3 -1 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(188)
calls=798 0x403d98 +11 
* * 123180 34484 22392 1 1 0 1 1 0 25602 242 1596
+5 +1 798 798
+4 * 798
+3 * 798 0 798
cfn=(192)
calls=798 0x403296 -82 
* * 18354 6384 6384 1 0 0 1
+5 * 798
jump=798 +28 * 
* * 
+28 * 798
+4 * 798 798
+1 * 798 798
+1 * 798 798

fn=(2)
0x402d74 645 3224 0 3224 1 0 0 1
+1 * 3224
+3 * 3224 0 3224 0 0 1 0 0 1
+4 +1 3224 3224
+4 * 3224 3224 0 1 1 0 1 1
+4 * 3224
+3 * 3224 3224
+4 * 3224 3224
+3 * 3224
+3 * 3224
+3 * 3224
+4 * 3224 3224
+1 * 3224 3224

fn=(20)
0x404412 179 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 +2 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(22)
calls=798 0x404236 -14 
* * 288729 49076 49981 26 17 12 26 17 12 43403 1060 1596
+5 * 798 798
+4 * 798 0 798
+3 +1 798 798
+4 * 798 798 0 1 0 0 1
+3 * 798 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+3 * 798 798
+4 * 798
+4 * 798
+3 * 798 798
+4 * 798 0 798
+4 +1 798 798
+1 * 798 798

fn=(94)
0x40432a 179 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 +2 798 798
+4 * 798 798 0 1 0 0 1
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(96)
calls=798 0x403fbe -14 
* * 273936 45623 44275 24 21 32 24 21 32 41007 1848 1596
+5 * 798 798
+4 * 798 0 798
+3 +1 798 798
+4 * 798 798
+3 * 798 798
+4 * 798 0 798
+4 +1 798 798
+4 * 798 798
+3 * 798 798
+4 * 798
+4 * 798
+3 * 798 798
+4 * 798 0 798
+4 +1 798 798
+1 * 798 798

fn=(244)
0x402f7a 901 399 0 399
+1 * 399
+3 * 399 0 0 1 0 0 1
+4 * 399 0 399
+4 * 399 0 399
+4 +2 399 399
+4 * 399 399
+4 * 399 399
+4 * 399 399
+4 * 399
+3 * 399 0 0 0 0 0 0 0 0 399
jcnd=8/399 +51 +10 
* * 
+2 +3 391 391
+4 * 391 391
+4 * 391 391
+4 -1 391 391
+4 * 391
+3 * 391
+3 * 391 0 391
cfi=(3)
cfn=(264)
calls=391 0x4036b1 215 
* * 14858 5083 5474 0 25 13 0 25 13 391
+5 +2 391 391
+4 * 391 391
+4 * 391
+4 * 391 391
+4 * 391 0 391
+4 * 391
jump=391 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11992 3699 3231 19 3 30 19 3 30 725 63 47
+5 +2 399 399
+1 * 399 399

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798 1 0 0 1
+4 * 798 0 798
+4 * 798 0 798
+4 +8 798 0 798
+4 +3 798 798
+4 * 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=798 0x404f37 -22 
* * 286202 95976 90394 14 3 4 14 3 4 16848 1024 1592 199
+5 +1 798 798
+1 * 798 798

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 798 0 798
+1 * 798
+3 * 798 0 798
+2 * 798 0 798
+1 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +4 798 798
+4 * 798
+3 * 798 0 798
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=798 0x404878 277 
* * 11970 4788 3990 1 0 0 1
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=798 0x404d44 277 
* * 19950 7182 6384 2 0 0 2
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(132)
calls=798 0x404d44 277 
* * 19950 7182 6384
+5 * 798
+3 * 798
+3 * 798
+3 * 798 0 798
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=798 0x404d5e -49 
* * 298172 99966 95182 1 0 30 1 0 30 16848 962 1592
+5 +1 798
+4 * 798 798
+1 * 798 798
+2 * 798 798
+1 * 798 798

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 798 0 798
+1 * 798
+3 * 798 0 798
+1 * 798
+4 * 798 0 798 1 0 0 1
+4 * 798 0 798
+4 * 798 0 798
+4 +10 798 798
+4 * 798
+3 * 798 0 798
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=798 0x404c38 288 
* * 11970 4788 3990 3 0 0 3
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(56)
calls=798 0x404c38 288 
* * 11970 4788 3990
+5 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=798 0x404c52 -36 
* * 372386 124704 119920 20 3 5 20 3 5 16848 1024 1592 199
+5 +1 798
+4 * 798 798
+1 * 798 798
+1 * 798 798

fn=(60)
0x404c52 424 798 0 798
+1 * 798
+3 * 798 0 798
+2 * 798 0 798
+1 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +4 798 798
+4 * 798
+3 * 798 0 798
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=798 0x40492d 277 
* * 11970 4788 3990 2 0 0 2
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=798 0x404d9d 277 
* * 19950 7182 6384 2 0 1 2 0 1
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(66)
calls=798 0x404d9d 277 
* * 19950 7182 6384
+5 * 798
+3 * 798
+3 * 798
+3 * 798 0 798
cfn=(72)
calls=798 0x404db7 -49 
* * 298172 99966 95182 15 3 4 15 3 4 16848 1024 1592 199
+5 +1 798
+4 * 798 798
+1 * 798 798
+2 * 798 798
+1 * 798 798

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 846 0 846 1 0 0 1
+1 * 846
+3 * 846
+4 * 846 0 846
+4 +1 846 846
+4 * 846
+3 * 846 0 846 1 0 0 1
cfi=(13)
cfn=(64)
calls=846 -33 -66 
* * 5076 2538 1692
+5 * 846 846
+1 * 846 846

fn=(66)
0x404d9d 277 1596 0 1596
+1 * 1596
+3 * 1596
+4 * 1596 0 1596
+4 +1 1596 1596
+4 * 1596
+3 * 1596 0 1596
cfi=(13)
cfn=(68)
calls=1596 0x404f1a -58 
* * 25536 9576 7980 2 0 1 2 0 1
+5 * 1596 1596
+1 * 1596 1596

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 798 0 798
+1 * 798
+3 * 798 0 798
+1 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +10 798 798
+4 * 798
+3 * 798 0 798
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=798 0x404bc6 288 
* * 11970 4788 3990 3 0 0 3
+5 * 798
+3 * 798 798
+4 * 798
+3 * 798 0 798
cfn=(122)
calls=798 0x404bc6 288 
* * 11970 4788 3990
+5 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(126)
calls=798 0x404be0 -36 
* * 372386 124704 119920 4 0 30 4 0 30 16848 962 1592
+5 +1 798
+4 * 798 798
+1 * 798 798
+1 * 798 798

fn=(128)
0x404878 277 846 0 846
+1 * 846
+3 * 846
+4 * 846 0 846 1 0 0 1
+4 +1 846 846
+4 * 846
+3 * 846 0 846
cfi=(13)
cfn=(130)
calls=846 -33 -66 
* * 5076 2538 1692 0 0 1 0 0 1
+5 * 846 846
+1 * 846 846

fn=(132)
0x404d44 277 1596 0 1596
+1 * 1596
+3 * 1596
+4 * 1596 0 1596
+4 +1 1596 1596
+4 * 1596
+3 * 1596 0 1596
cfi=(13)
cfn=(134)
calls=1596 0x404e98 -58 
* * 25536 9576 7980 2 0 0 2
+5 * 1596 1596
+1 * 1596 1596

fn=(138)
0x404d5e 379 798 0 798
+1 * 798
+3 * 798
+4 * 798 0 798
+4 * 798 0 798
+4 * 798 0 798
+4 +8 798 0 798
+4 +3 798 798
+4 * 798 798
+4 * 798 798
+4 * 798
+3 * 798
+3 * 798 0 798
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=798 0x404eb5 -22 
* * 286202 95976 90394 1 0 30 1 0 30 16848 962 1592
+5 +1 798 798
+1 * 798 798

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1596 0 1596 1 0 0 1
+1 * 1596
+3 * 1596
+4 * 1596 0 1596
+4 +1 1596 1596
+4 * 1596
+3 * 1596 0 1596
cfi=(13)
cfn=(124)
calls=1596 0x404d36 -77 
* * 9576 4788 3192 2 0 0 2
+5 * 1596 1596
+1 * 1596 1596

fn=(56)
0x404c38 288 1596 0 1596 1 0 0 1
+1 * 1596
+3 * 1596
+4 * 1596 0 1596 1 0 0 1
+4 +1 1596 1596
+4 * 1596
+3 * 1596 0 1596
cfi=(13)
cfn=(58)
calls=1596 0x404d8f -77 
* * 9576 4788 3192 1 0 0 1
+5 * 1596 1596
+1 * 1596 1596

fn=(74)
0x404f37 368 814 0 814
+1 * 814
+3 * 814
+4 * 814 0 814 1 0 0 1
+4 * 814 0 814
+4 * 814 0 814
+4 +2 814 814
+4 * 814 814
+4 * 814
+3 * 814
+3 * 814
+4 * 814 0 814
+4 +1 814 814
+5 * 814 0 0 0 0 0 0 0 0 814
jcnd=8/814 +33 +2 
* * 
+2 +1 806 806
+4 * 806
+8 * 806 806
+4 * 806 806
+4 * 806
+3 * 806 0 0 1 0 0 1
+3 * 806 0 806 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=806 0x3877c83840 0 
* * 264980 87514 85907 11 2 22 11 2 22 16134 1028 801 199
* * 806 806 0 1 1 0 1 1 0 0 0 806
+5 +1 814 814
+4 * 814
+8 * 814 814
+4 * 814
+3 +1 814 814
+1 * 814 814

fn=(140)
0x404eb5 368 814 0 814
+1 * 814
+3 * 814
+4 * 814 0 814 1 0 0 1
+4 * 814 0 814
+4 * 814 0 814 0 0 1 0 0 1
+4 +2 814 814
+4 * 814 814
+4 * 814
+3 * 814
+3 * 814
+4 * 814 0 814
+4 +1 814 814
+5 * 814 0 0 0 0 0 0 0 0 814
jcnd=8/814 +33 +2 
* * 
+2 +1 806 806
+4 * 806
+8 * 806 806
+4 * 806 806
+4 * 806
+3 * 806
+3 * 806 0 806
cob=(2)
cfi=(9)
cfn=(78)
calls=806 0x3877c83840 0 
* * 264980 87514 85907 0 0 31 0 0 31 16134 968 801
* * 806 806 0 0 0 0 0 0 0 0 0 806
+5 +1 814 814
+4 * 814
+8 * 814 814
+4 * 814
+3 +1 814 814
+1 * 814 814

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1596 0 1596 1 0 0 1
+1 * 1596
+3 * 1596 0 1596
+4 +1 1596 1596
+4 * 1596 1596
+1 * 1596 1596

fn=(110)
0x404380 726 1596 0 1596 1 0 0 1
+1 * 1596
+3 * 1596 0 1596
+4 * 1596 0 1596
+4 * 1596 1596
+4 * 1596 1596
+3 * 1596 1596
+4 * 1596 0 1596
+3 * 1596 1596
+1 * 1596 1596

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1596 0 1596 1 0 0 1
+1 * 1596
+3 * 1596 0 1596
+4 +1 1596 1596
+4 * 1596 1596
+1 * 1596 1596

fn=(44)
0x404468 726 1596 0 1596
+1 * 1596
+3 * 1596 0 1596
+4 * 1596 0 1596
+4 * 1596 1596
+4 * 1596 1596
+3 * 1596 1596
+4 * 1596 0 1596 1 0 0 1
+3 * 1596 1596
+1 * 1596 1596

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 806 0 806 1 0 0 1
+1 * 806
+3 * 806 0 806
+4 * 806 0 806 1 0 0 1
+4 * 806 806
+1 * 806 806

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 806 0 806 1 0 0 1
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 +4 806 806
+4 * 806 806
+4 * 806
+3 * 806
+3 * 806 0 806
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=806 0x40454c -14 
* * 4836 1612 2418 1 0 0 1
+5 +2 806 806
+1 * 806 806

fn=(150)
0x40326c 148 806 0 806
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 * 806 0 806
+4 +3 806 806 0 1 0 0 1
+4 * 806 806
+4 * 806
+3 * 806
+3 * 806 0 806
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=806 0x403d1a -29 
* * 14508 4836 5642 3 0 0 3
+5 +1 806 806
+1 * 806 806

fn=(180)
0x40334a 148 806 0 806
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 * 806 0 806
+4 +3 806 806
+4 * 806 806
+4 * 806
+3 * 806
+3 * 806 0 806
cfn=(182)
calls=806 0x403dcc -29 
* * 14508 4836 5642 2 0 0 2
+5 +1 806 806
+1 * 806 806

fn=(152)
0x403d1a 122 806 0 806 1 0 0 1
+1 * 806
+3 * 806
+4 * 806 0 806
+4 * 806 0 806
+4 +4 806 806
+4 * 806 806
+4 * 806
+3 * 806
+3 * 806 0 806
cfn=(154)
calls=806 0x4044f8 -14 
* * 4836 1612 2418 2 0 0 2
+5 +2 806 806
+1 * 806 806

fn=(184)
0x40454c 112 806 0 806 1 0 0 1
+1 * 806
+3 * 806 0 806
+4 * 806 0 806
+4 * 806 806
+1 * 806 806

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2519 443 452 0 2 7 0 2 7 364 41 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1119 308 198 1 0 0 1 0 0 213 18 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3480 709 667 16 2 5 16 2 5 555 60 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1084 291 193 2 0 0 2 0 0 204 4 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1612 0 1612 1 0 0 1
+5 0 1612 0 1612
+5 0 1612
+3 0 1612 0 1612
+5 0 1612
+4 0 1612 1612 0 0 1 0 0 1
+7 0 1612 1612 0 0 1 0 0 1
+3 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612 2
+6 0 1612 1612 0 0 1 0 0 1
+7 0 1612 1612 0 1 1 0 1 1
+4 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612
+2 0 1612 1612 0 0 1 0 0 1
+3 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612
jcnd=1612/1612 +97 0 
* 0 
+18 0 1612
+3 0 1612
+3 0 1612 0 1612
cfn=(38) _int_malloc
calls=1612 0x3877c79a00 0 
* 0 407464 50715 61523 47 34 55 47 34 55 64373 2913
+5 0 1612
+3 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612
+2 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612
+2 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612 32
+2 0 1612 1612
+7 0 1612 0 0 0 0 0 0 0 0 1612
jcnd=1612/1612 +13 0 
* 0 
+13 0 1612 0 1612
+2 0 1612 0 0 0 0 0 0 0 0 1612 62
+6 0 1612
+3 0 1612 1612
+4 0 1612 1612
+5 0 1612 1612
+5 0 1612
+4 0 1612 1612
+1 0 1612 0 0 1 0 0 1
+5 0 1612 1612 0 0 1 0 0 1
+7 0 1612 0 0 0 0 0 0 0 0 1612
jcnd=1612/1612 +14 0 
* 0 
+14 0 1612 0 1612 1 0 0 1
+3 0 1612 0 0 0 0 0 0 0 0 1612
+6 0 1612
jump=1612 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1612 0 1612 1 0 0 1
+2 0 1612
+3 0 1612
+3 0 1612 0 1612
+2 0 1612
+3 0 1612 0 1612
+1 0 1612
+3 0 1612 0 1612
+1 0 1612
+3 0 1612
+4 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612
+6 0 1612
+4 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612 7
jcnd=10/1612 0x3877c838d1 0 
* 0 
+2 0 1602
+3 0 1602
+3 0 1602
+3 0 1602
+3 0 1602
+3 0 1602 0 0 0 0 0 0 0 0 1602
jcnd=1602/1602 +41 0 
* 0 
+41 0 1602 0 0 1 0 0 1
+3 0 1602 0 0 0 0 0 0 0 0 1602
jcnd=1602/1602 0x3877c839c0 0 
* 0 
+24 0 1602
+3 0 1602
+4 0 1602
+3 0 1602
+3 0 1602
+3 0 1602
+3 0 1602
+3 0 1602 0 0 0 0 0 0 0 0 1602 845
jcnd=810/1602 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 802
+10 0 802 802 0 0 1 0 0 1
+3 0 802
+4 0 802 0 802
+3 0 802
+4 0 802
+4 0 802 0 0 0 0 0 0 0 0 802
jcnd=802/802 -18 0 
* 0 
-18 0 2462 2462
+3 0 2462
+4 0 2462 0 2462
+3 0 2462
+4 0 2462
+4 0 2462 0 0 0 0 0 0 0 0 2462 11
jcnd=1660/2462 -18 0 
* 0 
+2 0 1612
+4 0 1612
+3 0 1612 1612
+1 0 1612 1612
+1 0 1612 1612
+2 0 1612 1612 0 1 0 0 1
+2 0 1612 1612
0x3877c839c0 0 1602 0 0 1 0 0 1
+3 0 1602
+3 0 1602
+3 0 1602
+4 0 1602 0 1602 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1602 0x3877c89b20 0 
* 0 438846 163704 160500 6 1 52 6 1 52 20964 1133 1602 199
+5 0 1602
jump=1602 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1612 1612 0 1 1 0 1 1
+7 0 1612 1612 0 0 1 0 0 1
+3 0 1612
+3 0 1612 0 0 1 0 0 1 0 0 1612
+6 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612
+6 0 1612 1612
+4 0 1612
+4 0 1612
+2 0 1612 0 0 0 0 0 0 0 0 1612 2
+2 0 1612
+2 0 1612
+7 0 1612 0 0 0 0 0 0 0 0 1612
jcnd=1612/1612 +14 0 
* 0 
+14 0 1612
+2 0 1612
cfn=(170) _int_free
calls=1612 0x3877c78650 0 
* 0 168771 45575 27415 21 2 0 21 2 0 41045 835

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 7 7
+5 0 7
+3 0 7 7
+5 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+9 0 7 0 7
+4 0 7 0 7
+4 0 7 0 0 0 0 0 0 0 0 7 3
jcnd=7/7 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=2/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 7
jcnd=5/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=7/20 0x3877c75e68 0 
* 0 
+6 0 13 0 13
+6 0 13
jump=13 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1612 0 1612 1 0 0 1
+2 0 1612 0 1612
+2 0 1612 0 1612
+2 0 1612
+3 0 1612 0 1612
+2 0 1612 0 1612
+1 0 1612 0 1612
+1 0 1612
+3 0 1612
+4 0 1612 1612
+4 0 1612 0 1612
+4 0 1612
+3 0 1612
+4 0 1612
+3 0 1612
+3 0 1612
+3 0 1612 0 0 1 0 0 1 0 0 1612
+6 0 1612
+4 0 1612 0 0 0 0 0 0 0 0 1612
+6 0 1612
+4 0 1612 0 0 0 0 0 0 0 0 1612
+6 0 1612 1612
+7 0 1612 0 0 0 0 0 0 0 0 1612 4
jcnd=1488/1612 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124 2
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1488
+2 0 1488 0 0 0 0 0 0 0 0 1488
+6 0 1488 1488 0 1 0 0 1
+4 0 1488
+3 0 1488
+2 0 1488 0 0 0 0 0 0 0 0 1488
jcnd=1488/1488 0x3877c78a40 0 
* 0 
+6 0 1488 1488
+4 0 1488
+3 0 1488 0 0 0 0 0 0 0 0 1488
+6 0 1488 1488
+5 0 1488
+4 0 1488 0 0 0 0 0 0 0 0 1488
jcnd=1488/1488 0x3877c7907c 0 
* 0 
+6 0 1488 1488
+5 0 1488
+4 0 1488 0 0 0 0 0 0 0 0 1488
+6 0 1488
+4 0 1488 0 0 1 0 0 1 0 0 1488
+6 0 1488
+4 0 1488 1488
+7 0 1488 0 0 0 0 0 0 0 0 1488
+6 0 1488 1488
+6 0 1488
+2 0 1488 0 0 0 0 0 0 0 0 1488
+6 0 1488 1488
+4 0 1488 0 0 0 0 0 0 0 0 1488 5
jcnd=1484/1488 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=3/4 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 1488 1488 0 1 0 0 1
+4 0 1488 0 0 0 0 0 0 0 0 1488 188
jcnd=188/1488 0x3877c78bf0 0 
* 0 
+6 0 1300 1300 0 0 1 0 0 1
+6 0 1300 0 0 1 0 0 1 0 0 1300 92
jcnd=77/1300 0x3877c78a78 0 
* 0 
+6 0 1223 1223
+5 0 1223 1223
+5 0 1223 1223
+4 0 1223 0 0 0 0 0 0 0 0 1223
+6 0 1223 1223
+4 0 1223 0 0 0 0 0 0 0 0 1223
+6 0 1223 1223
+9 0 1223 0 1223
+4 0 1223 0 1223
+4 0 1223 0 0 0 0 0 0 0 0 1223 428
jcnd=726/1223 +16 0 
* 0 
+2 0 497 497
+5 0 497
+3 0 497 0 0 1 0 0 1 0 0 497 9
jcnd=105/497 0x3877c78ee4 0 
* 0 
+6 0 1223
+3 0 1223
+4 0 1223 1223
+4 0 1223 1223
+4 0 1223 0 0 0 0 0 0 0 0 1223
-12 0 77
+4 0 77 77
+4 0 77 77
+4 0 77 0 0 0 0 0 0 0 0 77
+6 0 1300
+7 0 1300 0 1300
+4 0 1300 0 1300
+4 0 1300 0 0 0 0 0 0 0 0 1300 104
jcnd=368/1300 +18 0 
* 0 
+2 0 932 0 932
+8 0 932 0 932
+8 0 932 0 932
+4 0 932
+3 0 932 0 932 1 0 0 1
+4 0 932
+4 0 932 0 932
+4 0 932 0 932
+4 0 932
+7 0 932 0 0 0 0 0 0 0 0 932
jcnd=932/932 0x3877c78b20 0 
* 0 
-30 0 368 0 368
+4 0 368
+3 0 368 0 368
+4 0 368
+4 0 368 0 368
+4 0 368 0 368
+4 0 368
+7 0 368 0 0 0 0 0 0 0 0 368
jcnd=368/368 0x3877c78b20 0 
* 0 
-7 0 188
+7 0 188 0 0 0 0 0 0 0 0 188
jcnd=188/188 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1488 0 0 1 0 0 1
+5 0 1488 1488
+4 0 1488 1488
+7 0 1488 0 0 0 0 0 0 0 0 1488
jcnd=1488/1488 +16 0 
* 0 
+16 0 1488 0 1488
+5 0 1488 0 0 0 0 0 0 0 0 1488
+6 0 1488
+3 0 1488
jump=1488 0x3877c7878f 0 
* 0 
+10 0 77 0 77
+6 0 77 0 0 1 0 0 1
jump=77 0x3877c78885 0 
* 0 
0x3877c78b20 0 1488 1488 0 1 0 0 1
+4 0 1488
+2 0 1488 0 0 0 0 0 0 0 0 1488
+6 0 1488 1488
+7 0 1488 0 0 0 0 0 0 0 0 1488
jcnd=1488/1488 +15 0 
* 0 
+15 0 1488 0 1488 1 0 0 1
+4 0 1488 0 0 0 0 0 0 0 0 1488
+6 0 1488
+4 0 1488 1488
+1 0 1488 1488
+1 0 1488 1488
+2 0 1488 1488
+2 0 1488 1488
+2 0 1488 1488
+2 0 1488 1488
0x3877c78bf0 0 188 0 0 1 0 0 1
+3 0 188 0 188
+4 0 188
+3 0 188
+4 0 188 0 188 1 0 0 1
+4 0 188
jump=188 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 105 105 0 1 0 0 1
+5 0 105 0 0 0 0 0 0 0 0 105
+6 0 105 105
+5 0 105 0 105
+4 0 105 105
+5 0 105 0 105
+4 0 105
jump=105 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 1488 1488 0 1 1 0 1 1
+4 0 1488 0 0 1 0 0 1
+7 0 1488
+4 0 1488
+3 0 1488
+3 0 1488 0 0 0 0 0 0 0 0 1488
jcnd=1488/1488 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1602 0 0 1 0 0 1
+7 0 1602
+3 0 1602
+3 0 1602 1602 0 0 1 0 0 1
+4 0 1602
+4 0 1602 0 0 0 0 0 0 0 0 0 0 1602 199
jump=192 0x3877c89be8 0 
* 0 
jump=206 0x3877c89bd0 0 
* 0 
jump=200 0x3877c89bb8 0 
* 0 
jump=200 +11 0 
* 0 
jump=200 0x3877c89c48 0 
* 0 
jump=202 0x3877c89c30 0 
* 0 
jump=200 0x3877c89c18 0 
* 0 
jump=202 0x3877c89c00 0 
* 0 
+11 0 200 200
+3 0 200
+4 0 200
+4 0 200 200
+4 0 200
+4 0 200 0 200
+4 0 200
+9 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-40 0 19762 19762
+4 0 19762 0 19762 0 0 1 0 0 1
+4 0 19762 19762
+4 0 19762 0 19762 0 0 15 0 0 15
+4 0 19762 19762
+4 0 19762 0 19762 0 0 25 0 0 25
+4 0 19762 19762
+4 0 19762 0 19762 0 0 1 0 0 1
+4 0 19762
+4 0 19762
+4 0 19762 0 0 0 0 0 0 0 0 19762 1129
jcnd=1566/19762 0x3877c89c60 0 
* 0 
-32 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202
jcnd=10/202 0x3877c89c60 0 
* 0 
-24 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-16 0 202 202 0 1 0 0 1
+4 0 202 0 202
+4 0 202 0 0 1 0 0 1
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202 4
jcnd=10/202 0x3877c89c60 0 
* 0 
+6 0 18964
+4 0 18964 18964
+3 0 18964 0 18964 0 0 1 0 0 1
+3 0 18964 18964
+4 0 18964 0 18964 0 0 3 0 0 3
+4 0 18964 18964
+4 0 18964 0 18964 0 0 2 0 0 2
+4 0 18964 18964
+4 0 18964 0 18964 0 0 2 0 0 2
+4 0 18964
jump=18964 -80 0 
* 0 
-30 0 192 192
+3 0 192 0 192
+3 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192 0 0 1 0 0 1
+4 0 192 192
+4 0 192 0 192
+4 0 192
jump=192 -80 0 
* 0 
-24 0 206 206
+4 0 206 0 206
+4 0 206 206
+4 0 206 0 206
+4 0 206 206
+4 0 206 0 206 0 0 1 0 0 1
+4 0 206
jump=206 -80 0 
* 0 
-16 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
jump=200 -80 0 
* 0 
+8 0 200 200
+3 0 200
+4 0 200 0 0 1 0 0 1
+4 0 200
+4 0 200
jump=200 -39 0 
* 0 
+9 0 206
+3 0 206 0 0 0 0 0 0 0 0 206
+6 0 206 206
+3 0 206
+4 0 206
jump=206 -72 0 
* 0 
+8 0 192
+4 0 192 192
+3 0 192 0 0 0 0 0 0 0 0 192
+2 0 192
+4 0 192
jump=192 -99 0 
* 0 
+11 0 202 202 0 1 0 0 1
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b78 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b70 0 
* 0 
+9 0 202 202
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b68 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b60 0 
* 0 
+9 0 1602 0 1602 1 0 0 1
+3 0 1602 1602

fn=(104) alloc_perturb
0x3877c77180 0 1471 1471 0 1 0 0 1
+6 0 1471
+2 0 1471 0 0 0 0 0 0 0 0 1471 34
+2 0 1471 1471

fn=(38)
0x3877c79a00 0 1612 0 1612 1 0 0 1
+2 0 1612
+3 0 1612 0 1612
+2 0 1612 0 1612
+2 0 1612 0 1612 0 0 1 0 0 1
+2 0 1612
+3 0 1612 0 1612
+1 0 1612 0 1612
+1 0 1612
+4 0 1612
+4 0 1612 0 0 0 0 0 0 0 0 1612
+6 0 1612
+4 0 1612
+6 0 1612
+3 0 1612
+4 0 1612
+4 0 1612
+4 0 1612
+3 0 1612 0 0 0 0 0 0 0 0 1612
+6 0 1612 1612 0 1 1 0 1 1
+7 0 1612 0 0 0 0 0 0 0 0 1612 7
jcnd=1490/1612 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 141 141
+6 0 141
+4 0 141
+2 0 141 0 0 0 0 0 0 0 0 141
+6 0 141
+3 0 141
+4 0 141 141
+1 0 141 141
+1 0 141 141
+2 0 141 141
+2 0 141 141
+2 0 141 141
+2 0 141 141
-14 0 1471
+4 0 1471 1471
+1 0 1471 1471
+1 0 1471 1471
+2 0 1471 1471
+2 0 1471 1471
+2 0 1471 1471
+2 0 1471 1471
+7 0 1507
+7 0 1507 0 0 1 0 0 1 0 0 1507 7
jcnd=604/1507 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 4 0 0 4
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 604 0 0 1 0 0 1
+3 0 604
+4 0 604
+4 0 604 0 0 1 0 0 1 0 0 604
jcnd=604/604 0x3877c7a1a4 0 
* 0 
+30 0 604 604
+6 0 604
+5 0 604 0 0 0 0 0 0 0 0 604 1
jcnd=603/604 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 927 253 196 8 1 0 8 1 0 193 27
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1506 0 0 1 0 0 1
+3 0 1506
+3 0 1506
+3 0 1506
+4 0 1506
+3 0 1506
+4 0 1506 0 1506
+5 0 1506
+3 0 1506 0 1506
+4 0 1506 0 1506
+4 0 1506 0 1506
+5 0 1506
+3 0 1506
+3 0 1506
+3 0 1506
+3 0 1506
+4 0 1506
+4 0 1506 0 0 1 0 0 1
+4 0 1506 0 1506
+4 0 1506
+4 0 1506 0 1506
+5 0 1506 0 1506
+5 0 1506
+3 0 1506
+3 0 1506 0 1506
+5 0 1506
+5 0 1506
+3 0 1506 0 1506
+4 0 1506 0 1506
+4 0 1506
+6 0 1506 0 1506
+4 0 1506 0 1506
+5 0 1506 0 0 1 0 0 1
+3 0 1506
+3 0 1506
+3 0 1506
jump=1506 +87 0 
* 0 
+8 0 713
+3 0 713
+4 0 713
+2 0 713
+2 0 713
+3 0 713
+3 0 713
+3 0 713
+2 0 713
+2 0 713
+5 0 713
+2 0 713 713
+4 0 713
+3 0 713
+4 0 713 0 713
+4 0 713 0 713
+8 0 713
+7 0 713 0 713
+4 0 713 0 713
+4 0 713 0 713
+4 0 713 0 0 0 0 0 0 0 0 713
-38 0 1036
+3 0 1036
+4 0 1036 0 1036
+4 0 1036 0 1036
+8 0 1036
+7 0 1036 0 1036
+4 0 1036 0 1036
+4 0 1036 0 1036
+4 0 1036 0 0 0 0 0 0 0 0 1036
+6 0 3256 3256 0 1 0 0 1
+4 0 3256
+3 0 3256 0 0 0 0 0 0 0 0 3256 145
jcnd=1365/3256 0x3877c79ef0 0 
* 0 
+6 0 1891 1891
+4 0 1891 1891
+4 0 1891
+4 0 1891 0 0 0 0 0 0 0 0 1891
+6 0 1891 1891 0 1 0 0 1
+7 0 1891 0 0 0 0 0 0 0 0 1891 2
+6 0 1891
+4 0 1891
+7 0 1891 0 0 0 0 0 0 0 0 1891 10
jcnd=691/1891 +11 0 
* 0 
+2 0 1200
+3 0 1200 0 0 0 0 0 0 0 0 1200 301
jcnd=866/1200 0x3877c79e28 0 
* 0 
+6 0 1785
+3 0 1785 0 1785
+4 0 1785 0 1785
+5 0 1785 0 0 0 0 0 0 0 0 1785 20
jcnd=36/1785 0x3877c7a090 0 
* 0 
+6 0 1749
+7 0 1749 0 0 0 0 0 0 0 0 1749 248
jcnd=713/1749 0x3877c79c50 0 
* 0 
+6 0 1036 0 0 1 0 0 1
+3 0 1036
+4 0 1036
+4 0 1036 0 0 0 0 0 0 0 0 1036 8
jcnd=216/1036 0x3877c79db0 0 
* 0 
+6 0 820
+3 0 820
+4 0 820
+2 0 820
+2 0 820
+3 0 820
+3 0 820
+8 0 820
+3 0 820
+2 0 820
+2 0 820
+4 0 820 820 0 0 4 0 0 4
+4 0 820
+3 0 820 0 0 1 0 0 1 0 0 820 101
jcnd=788/820 0x3877c79e15 0 
* 0 
-36 0 216
+2 0 216
+2 0 216
+3 0 216
+3 0 216
+8 0 216
+3 0 216
+2 0 216
+2 0 216
+4 0 216 216
+4 0 216
+3 0 216 0 0 0 0 0 0 0 0 216
jcnd=216/216 0x3877c79e15 0 
* 0 
+6 0 32 32
+4 0 32
+4 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=8/32 +38 0 
* 0 
+2 0 24 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24
+3 0 24
jump=24 0x3877c79c73 0 
* 0 
+13 0 8 8
+4 0 8
+3 0 8 0 0 0 0 0 0 0 0 8
+2 0 8
+3 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c79ee0 0 
* 0 
+30 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
+14 0 216 0 0 1 0 0 1
+3 0 216
+4 0 216
+4 0 216 0 0 0 0 0 0 0 0 216
+2 0 216
+3 0 216 0 0 1 0 0 1
+7 0 216
jump=216 0x3877c79d18 0 
* 0 
+78 0 1004 0 1004
+4 0 1004 0 1004
+4 0 1004
+3 0 1004
jump=1004 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 109
jcnd=443/866 0x3877c79ce1 0 
* 0 
+6 0 423 423
+5 0 423 0 0 0 0 0 0 0 0 423 9
jcnd=317/423 0x3877c79ce1 0 
* 0 
+6 0 106 0 0 1 0 0 1
+3 0 106
+3 0 106
+3 0 106
+7 0 106 0 106
+4 0 106 0 106
+4 0 106
+3 0 106 0 106
+4 0 106 0 106 0 0 17 0 0 17
+4 0 106 0 106
+4 0 106 0 0 0 0 0 0 0 0 106 8
jcnd=95/106 +18 0 
* 0 
+2 0 11 0 11 0 0 1 0 0 1
+8 0 11 0 11
+8 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
-56 0 95
+7 0 95 0 95
+4 0 95
+3 0 95
+3 0 95
+3 0 95
+4 0 95
+3 0 95
+4 0 95
+3 0 95
+3 0 95
+4 0 95 0 95
+4 0 95 0 95 0 0 1 0 0 1
+4 0 95
+4 0 95
+3 0 95 0 95
cfn=(104)
calls=95 0x3877c77180 0 
* 0 380 190 0 0 0 0 0 0 0 95
+5 0 106
+3 0 106
jump=106 0x3877c79ae3 0 
* 0 
+39 0 8 8
+4 0 8
jump=8 0x3877c79d9e 0 
* 0 
+12 0 1365 0 0 1 0 0 1
+7 0 1365
+3 0 1365 0 0 0 0 0 0 0 0 1365 9
jcnd=596/1365 0x3877c7a0b0 0 
* 0 
+6 0 1325 1325 0 1 0 0 1
+4 0 1325
+3 0 1325
+3 0 1325
+2 0 1325
+4 0 1325
+3 0 1325
+3 0 1325
+2 0 1325
+2 0 1325
+2 0 1325
+2 0 1325 1325 0 0 1 0 0 1
+8 0 1325
+5 0 1325
+5 0 1325
+2 0 1325 0 0 0 0 0 0 0 0 1325
-2 0 630
+2 0 630 0 0 0 0 0 0 0 0 630 2
jcnd=2/630 +14 0 
* 0 
+2 0 1953
+2 0 1953 0 0 0 0 0 0 0 0 1953 52
jcnd=971/1953 +64 0 
* 0 
+2 0 982
+8 0 982
+3 0 982
+3 0 982 0 0 0 0 0 0 0 0 982 1
jcnd=1/982 0x3877c79fc0 0 
* 0 
-6 0 314
+3 0 314
+3 0 314 0 0 0 0 0 0 0 0 314 4
jcnd=187/314 0x3877c79fc0 0 
* 0 
+2 0 1108
+2 0 1108 1108 0 0 1 0 0 1
+8 0 1108
+2 0 1108 0 0 0 0 0 0 0 0 1108 17
jcnd=312/1108 -20 0 
* 0 
+2 0 796
+2 0 796
+5 0 796
+3 0 796
+3 0 796
+2 0 796
+2 0 796
+5 0 796 0 0 0 0 0 0 0 0 796 1
jcnd=3/796 +14 0 
* 0 
+2 0 793
+2 0 793
+4 0 793
+2 0 793
+2 0 793 0 0 0 0 0 0 0 0 793
jcnd=793/793 -8 0 
* 0 
-8 0 11582
+4 0 11582
+2 0 11582
+2 0 11582 0 0 0 0 0 0 0 0 11582 763
jcnd=9958/11582 -8 0 
* 0 
-2 0 971 0 0 1 0 0 1
+2 0 971 0 0 0 0 0 0 0 0 971 35
jcnd=831/971 -8 0 
* 0 
+2 0 1767 1767 0 0 16 0 0 16
+4 0 1767 0 0 1 0 0 1
+3 0 1767 0 0 0 0 0 0 0 0 1767 574
jcnd=1137/1767 0x3877c7a1cf 0 
* 0 
+6 0 630
+2 0 630
+4 0 630
+2 0 630
+2 0 630
+2 0 630 0 630
+8 0 630
jump=630 0x3877c79f30 0 
* 0 
+37 0 188 188 0 1 0 0 1
+5 0 188 188
+4 0 188
+4 0 188 188
+5 0 188 0 0 0 0 0 0 0 0 188
jcnd=188/188 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 36 0 0 1 0 0 1
+7 0 36 0 36
+6 0 36
+3 0 36 0 0 0 0 0 0 0 0 36
jcnd=36/36 0x3877c79ace 0 
* 0 
+16 0 596 596
+4 0 596
+4 0 596
+2 0 596
+5 0 596 596 0 1 0 0 1
+4 0 596
+3 0 596 0 0 0 0 0 0 0 0 596 37
jcnd=539/596 0x3877c79f00 0 
* 0 
+6 0 57 57
+4 0 57 0 0 0 0 0 0 0 0 57 4
jcnd=17/57 0x3877c79f00 0 
* 0 
+6 0 40
+3 0 40 40
+4 0 40 40
+4 0 40
+3 0 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c7a650 0 
* 0 
+26 0 40 0 0 1 0 0 1
+3 0 40 40
+4 0 40
+3 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40 2
+6 0 40 40
+8 0 40 0 40
+4 0 40 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40 0 1 0 0 1
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 26
jcnd=40/40 0x3877c7a659 0 
* 0 
+6 0 40
+4 0 40 0 0 0 0 0 0 0 0 40 8
jcnd=16/40 0x3877c7a2e3 0 
* 0 
+6 0 24 24
+4 0 24
+7 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+4 0 24
+7 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a285 0 
* 0 
+31 0 604 0 0 1 0 0 1
+3 0 604 0 604
+4 0 604
jump=604 0x3877c79b99 0 
* 0 
+36 0 1137 1137 0 1 2 0 1 2
+4 0 1137 1137
+4 0 1137
+3 0 1137 1137
+4 0 1137
+4 0 1137
+3 0 1137
+3 0 1137 1137
+4 0 1137 0 0 0 0 0 0 0 0 1137
+6 0 1137 1137
+4 0 1137 0 0 0 0 0 0 0 0 1137
+6 0 1137 1137 0 1 0 0 1
+8 0 1137 0 1137
+4 0 1137 0 1137
+4 0 1137 0 0 0 0 0 0 0 0 1137 72
jcnd=253/1137 +38 0 
* 0 
+2 0 884 884 0 0 1 0 0 1
+4 0 884
+3 0 884 0 0 0 0 0 0 0 0 884
+2 0 884 884
+5 0 884 0 0 0 0 0 0 0 0 884
+6 0 884 884
+4 0 884 0 884
+4 0 884 884
+4 0 884 0 884
+4 0 884
+4 0 884 0 0 0 0 0 0 0 0 884
-4 0 253
+4 0 253 0 0 0 0 0 0 0 0 253 12
jcnd=20/253 0x3877c7a2e3 0 
* 0 
+6 0 1117 1117
+4 0 1117 1117 0 1 0 0 1
+4 0 1117 0 0 0 0 0 0 0 0 1117
+6 0 1117
+4 0 1117
+7 0 1117 0 1117 0 0 11 0 0 11
+4 0 1117 0 1117
+4 0 1117 0 1117
+4 0 1117 0 1117
+4 0 1117 0 0 0 0 0 0 0 0 1117 7
jcnd=368/1117 +7 0 
* 0 
+2 0 749 0 749
+5 0 749
+7 0 749 0 0 0 0 0 0 0 0 749 148
jcnd=478/749 +18 0 
* 0 
-7 0 368
+7 0 368 0 0 0 0 0 0 0 0 368 69
jcnd=143/368 +18 0 
* 0 
+2 0 496 0 496 0 0 9 0 0 9
+8 0 496 0 496 1 0 0 1
+8 0 496
+7 0 496 0 496 0 0 3 0 0 3
+4 0 496
+3 0 496
+3 0 496
+4 0 496
+3 0 496
+4 0 496
+3 0 496
+3 0 496
+4 0 496 0 496
+4 0 496 0 496 0 0 1 0 0 1
+4 0 496
jump=496 +71 0 
* 0 
-46 0 645
+7 0 645 0 645
+4 0 645
+3 0 645
+3 0 645
+4 0 645
+3 0 645
+4 0 645
+3 0 645
+3 0 645
+4 0 645 0 645
+4 0 645 0 645 0 0 1 0 0 1
+4 0 645
jump=645 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 36
+7 0 36 0 36
+6 0 36
+3 0 36 0 0 0 0 0 0 0 0 36 2
jcnd=36/36 +7 0 
* 0 
+7 0 1177
+4 0 1177 0 0 1 0 0 1
+3 0 1177
+3 0 1177 0 1177
cfn=(104)
calls=1177 0x3877c77180 0 
* 0 4708 2354 0 1 0 0 1 0 0 1177 33
+5 0 1177
+3 0 1177
jump=1177 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 188 0 0 1 0 0 1
+7 0 188
+2 0 188
+4 0 188
+3 0 188
+3 0 188 0 188
+5 0 188
+3 0 188
+4 0 188
+3 0 188 0 0 1 0 0 1
+4 0 188
+4 0 188
+3 0 188
+4 0 188 0 188
+4 0 188 0 188 0 0 7 0 0 7
+4 0 188
+3 0 188
+3 0 188 0 188
cfn=(104)
calls=188 0x3877c77180 0 
* 0 752 376 0 0 0 0 0 0 0 188 1
+5 0 188
+3 0 188
jump=188 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 40 40 0 1 0 0 1
+4 0 40
jump=40 0x3877c7a10e 0 
* 0 
+5 0 40 40
+5 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 0x3877c7a14b 0 
* 0 

totals: 14638842 6031507 3454106 245 107 149 245 107 149 414611 7062 9662 199
