version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1094


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1393614017 - 1399769292
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 3346 0 0 1 0 0 1
+3 0 3346 0 0 0 0 0 0 0 0 3346
+2 0 3346
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=3346 0x3877c7b8b0 0 
* 0 382558 98457 50625 23 5 0 23 5 0 93878 1580
* 0 3346 3346 0 1 1 0 1 1 0 0 0 3346

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 3346 0 3346 1 0 0 1
+1 0 3346
+5 0 3346
+3 0 3346 0 3346
+1 0 3346
+4 0 3346 0 0 1 0 0 1
+3 0 3346
+4 0 3346
+3 0 3346 0 3346 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=3346 0x3877c7aa50 0 
* 0 914622 134612 137085 51 43 86 51 43 86 147989 4500
* 0 3346 3346 0 1 1 0 1 1 0 0 0 3346
+5 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346
jcnd=3346/3346 +96 0 
* 0 
+96 0 3346 0 0 1 0 0 1
+4 0 3346 3346
+1 0 3346 3346
+1 0 3346 3346

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 832 0 832
+1 * 832
+3 * 832
+4 * 832 0 832
+4 * 832 0 832
+4 * 832 0 832
+4 +1 832 832
+4 * 832 832
+4 * 832 832
+4 * 832
+3 * 832
+3 * 832 0 832
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=832 0x403df2 -87 
* * 19968 6656 7488 0 53 3 0 53 3 832 2
+5 * 832 832
+1 * 832 832

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664 0 1664
+4 * 1664 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 832 0 832
+1 * 832
+3 * 832
+4 * 832 0 832
+4 * 832 0 832
+4 * 832 0 832
+4 +1 832 832
+4 * 832 832
+4 * 832 832
+4 * 832
+3 * 832
+3 * 832 0 832
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=832 0x40406a -87 
* * 19968 6656 7488 0 52 44 0 52 44 832
+5 * 832 832
+1 * 832 832

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+4 * 1664 1664
+4 * 1664 1664
+1 * 1664 1664

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1754 0 1754
+1 * 1754
+3 * 1754 0 1754 0 0 1 0 0 1
+4 +1 1754 1754
+4 * 1754 1754
+1 * 1754 1754

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328
+4 * 3328 0 3328
+4 +1 3328
+4 * 3328
+3 * 3328 0 3328
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=3328 0x404ffe 790 
* * 19968 9984 6656 1 0 0 1
+5 * 3328 3328
+3 * 3328 3328
+1 * 3328 3328

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328 0 3328
+4 +1 3328 3328
+4 * 3328 3328
+1 * 3328 3328

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328
+4 * 3328 0 3328
+4 +1 3328
+4 * 3328
+3 * 3328 0 3328 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=3328 0x40500c 790 
* * 19968 9984 6656 1 0 0 1
+5 * 3328 3328
+3 * 3328 3328
+1 * 3328 3328

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1754 0 1754
+1 * 1754
+3 * 1754 0 1754
+4 +1 1754 1754
+4 * 1754 1754
+1 * 1754 1754

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328 0 3328
+4 +1 3328 3328 0 1 0 0 1
+4 * 3328 3328
+1 * 3328 3328

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 1664
+4 * 1664 1664
+1 * 1664 1664

fl=(5)
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1673 0 1673
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 +1 1673 1673
+4 * 1673
+3 * 1673 0 1673
cob=(5)
cfi=(8)
cfn=(164)
calls=1673 0x387e4bb2f0 0 
* * 180082 44460 19679 23 5 0 23 5 0 44011 1484 1673
* * 1673 1673 0 1 1 0 1 1 0 0 0 1673
+5 * 1673 1673
+1 * 1673 1673

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1673 0 1673
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 +1 1673 1673
+4 * 1673
+3 * 1673 0 1673
cob=(5)
cfi=(8)
cfn=(164)
calls=1673 0x387e4bb2f0 0 
* * 215860 57343 30946 2 1 0 2 1 0 53213 96 1673
* * 1673 1673 0 0 0 0 0 0 0 0 0 1673
+5 * 1673 1673
+1 * 1673 1673

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 +2 1673 1673
+4 * 1673
+3 * 1673 0 1673
cfn=(102)
calls=1673 0x4048de +12 
* * 10038 3346 3346 1 0 0 1
+5 * 1673 1673
+4 * 1673 0 0 1 0 0 1
+3 * 1673
+2 * 1673 0 0 0 0 0 0 0 0 1673
jcnd=1673/1673 +7 +3 
* * 
+7 +3 1673 1673
+4 * 1673
+4 * 1673
+3 * 1673 0 1673
cob=(5)
cfi=(8)
cfn=(32)
calls=1673 0x387e4bd0b0 0 
* * 473430 69262 67336 33 14 71 33 14 71 73079 3214 1673
* * 1673 1673 0 0 0 0 0 0 0 0 0 1673
+5 +1 1673 1673
+1 * 1673 1673

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664 0 1664 0 0 1 0 0 1
+4 * 1664 0 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 * 1673 0 1673 1 0 0 1
+4 +2 1673 1673
+4 * 1673
+3 * 1673 0 1673
cfn=(28)
calls=1673 0x404992 +12 
* * 10038 3346 3346 1 0 0 1
+5 * 1673 1673
+4 * 1673
+3 * 1673
+2 * 1673 0 0 0 0 0 0 0 0 1673
jcnd=1673/1673 +7 +3 
* * 
+7 +3 1673 1673
+4 * 1673
+4 * 1673
+3 * 1673 0 1673
cob=(5)
cfi=(8)
cfn=(32)
calls=1673 0x387e4bd0b0 0 
* * 494728 78734 79787 22 30 16 22 30 16 78256 1286 1673
* * 1673 1673 0 1 1 0 1 1 0 0 0 1673
+5 +1 1673 1673
+1 * 1673 1673

fn=(102)
0x4048de 113 1691 0 1691 1 0 0 1
+1 * 1691
+3 * 1691 0 1691
+4 +1 1691
+10 * 1691 1691
+1 * 1691 1691

fn=(266)
0x40406a 129 832 0 832
+1 * 832
+3 * 832
+4 * 832 0 832
+4 * 832 0 832
+4 * 832 0 832
+4 +1 832 832
+4 * 832
+3 * 832
+5 * 832 0 832
cfi=(16)
cfn=(226)
calls=832 0x402d61 -20 
* * 5824 2496 2496
+5 * 832
+3 * 832 0 0 0 0 0 0 0 0 832
+2 * 832 832
+4 * 832 832 0 0 52 0 0 52
+2 * 832 0 832 0 0 44 0 0 44
+2 * 832 832
+1 * 832 832

fn=(28)
0x404992 113 1691 0 1691 1 0 0 1
+1 * 1691
+3 * 1691 0 1691
+4 +1 1691
+10 * 1691 1691
+1 * 1691 1691

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(224)
0x403df2 129 832 0 832
+1 * 832
+3 * 832
+4 * 832 0 832
+4 * 832 0 832
+4 * 832 0 832
+4 +1 832 832
+4 * 832
+3 * 832
+5 * 832 0 832
cfi=(16)
cfn=(226)
calls=832 0x402d61 -20 
* * 5824 2496 2496
+5 * 832
+3 * 832 0 0 0 0 0 0 0 0 832 2
+2 * 832 832
+4 * 832 832 0 0 53 0 0 53
+2 * 832 0 832 0 0 3 0 0 3
+2 * 832 832
+1 * 832 832

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1664 0x404484 107 
* * 1382434 486740 476760 25 3 4 25 3 4 57636 2276 3324 415
+5 * 1664 1664
+1 * 1664 1664

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +2 1664 1664 0 1 0 0 1
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1664 0x404a36 450 
* * 1335842 470100 460120 24 3 4 24 3 4 57636 2276 3324 415
+5 * 1664 1664
+1 * 1664 1664

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1664 0x40439c 107 
* * 1382434 486740 476760 7 1 102 7 1 102 57636 2260 3324
+5 * 1664 1664
+1 * 1664 1664

fn=(116)
0x40439c 107 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +10 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1664 0x4047d7 -26 
* * 1359138 478420 468440 7 1 102 7 1 102 57636 2260 3324
+5 +1 1664 1664
+1 * 1664 1664

fn=(118)
0x4047d7 91 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1664 0x4049e2 450 
* * 1335842 470100 460120 7 1 102 7 1 102 57636 2260 3324
+5 * 1664 1664
+1 * 1664 1664

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(232)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 49 1 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fn=(50)
0x404484 107 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +10 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(52)
calls=1664 0x404829 -26 
* * 1359138 478420 468440 25 3 4 25 3 4 57636 2276 3324 415
+5 +1 1664 1664
+1 * 1664 1664

fn=(270)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 49 2 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fn=(234)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664 1664
+4 * 1664 1664
+3 * 1664
+3 * 1664
+3 * 1664
+4 * 1664
+3 * 1664 1664
+4 * 1664 1664
+3 -1 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1664 0x403d98 +11 
* * 261426 73720 47450 2 1 0 2 1 0 54640 85 3328
+5 +1 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=1664 0x403296 -82 
* * 38272 13312 13312 1 0 0 1
+5 * 1664
jump=1664 +28 * 
* * 
+28 * 1664
+4 * 1664 1664
+1 * 1664 1664
+1 * 1664 1664

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 6692 0 6692 1 0 0 1
+1 * 6692
+3 * 6692 0 6692 0 0 1 0 0 1
+4 +1 6692 6692
+4 * 6692 6692 0 1 1 0 1 1
+4 * 6692
+3 * 6692 6692
+4 * 6692 6692
+3 * 6692
+3 * 6692
+3 * 6692
+4 * 6692 6692
+1 * 6692 6692

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1664 0x404236 -14 
* * 561344 99929 99310 28 14 8 28 14 8 80995 1227 3328
+5 * 1664 1664
+4 * 1664 0 1664
+3 +1 1664 1664
+4 * 1664 1664 0 1 0 0 1
+3 * 1664 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+3 * 1664 1664
+4 * 1664
+4 * 1664
+3 * 1664 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+1 * 1664 1664

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664 1664 0 1 0 0 1
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=1664 0x403fbe -14 
* * 540270 90292 86755 26 10 67 26 10 67 75898 3154 3328
+5 * 1664 1664
+4 * 1664 0 1664
+3 +1 1664 1664
+4 * 1664 1664
+3 * 1664 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+3 * 1664 1664
+4 * 1664
+4 * 1664
+3 * 1664 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+1 * 1664 1664

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 832 0 832
+1 * 832
+3 * 832 0 0 1 0 0 1
+4 * 832 0 832
+4 * 832 0 832
+4 +2 832 832
+4 * 832 832
+4 * 832 832
+4 * 832 832
+4 * 832
+3 * 832 0 0 0 0 0 0 0 0 832
jcnd=9/832 +51 +10 
* * 
+2 +3 823 823
+4 * 823 823
+4 * 823 823
+4 -1 823 823
+4 * 823
+3 * 823
+3 * 823 0 823
cfi=(3)
cfn=(264)
calls=823 0x4036b1 215 
* * 31274 10699 11522 0 52 39 0 52 39 823
+5 +2 823 823
+4 * 823 823
+4 * 823
+4 * 823 823
+4 * 823 0 823
+4 * 823
jump=823 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 14912 4447 3906 19 17 62 19 17 62 1047 85 53
+5 +2 832 832
+1 * 832 832

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 3355 0 3355 1 0 0 1
+1 * 3355
+3 * 3355 0 3355 1 0 0 1
+4 +1 3355 3355
+4 * 3355 3355
+1 * 3355 3355

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+3 * 1664 0 1664
+4 * 1664
+4 * 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1664 0x404380 726 
* * 16640 8320 6656
+5 * 1664 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664 1 0 0 1
+4 +2 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1664 0x40325e 113 
* * 9984 4992 3328
+5 * 1664
+3 * 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+3 -1 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1664 0x40326c 148 
* * 51584 16640 19968 4 0 0 4
+5 +1 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1664 0x4031ec 159 
* * 310568 92480 57822 27 5 0 27 5 0 45452 1477 3328
+5 * 1664
jump=1664 +28 * 
* * 
+28 * 1664 0 0 1 0 0 1
+4 * 1664 1664
+1 * 1664 1664
+1 * 1664 1664

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 +2 1673 1673
+5 * 1673 0 0 0 0 0 0 0 0 1673
+2 +1 1673 1673
+4 * 1673 1673
+4 * 1673 1673
+4 * 1673
+3 * 1673
+3 * 1673 0 1673
cfi=(5)
cfn=(160)
calls=1673 0x4044d6 -65 
* * 200158 51152 28044 24 6 0 24 6 0 44011 1484 3346
+5 +1 1673 1673
+1 * 1673 1673

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1664 0x4043ca -45 
* * 59904 21632 23296 4 0 4 4 0 4
+5 +1 1664 1664 0 1 0 0 1
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(20)
calls=1664 0x404412 +43 
* * 602944 119897 110958 29 14 8 29 14 8 80995 1227 3328
+5 * 1664
jump=1664 +28 * 
* * 
+28 * 1664
+4 * 1664 1664
+1 * 1664 1664
+1 * 1664 1664

fn=(14)
0x4043ca 90 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664
+4 * 1664 0 1664 0 0 1 0 0 1
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=1664 0x404804 +24 
* * 29952 9984 11648 2 0 1 2 0 1
+5 * 1664 1664
+4 * 1664 0 1664 0 0 2 0 0 2
+7 * 1664 1664
+4 * 1664 0 1664 1 0 0 1
+8 * 1664 1664
+4 * 1664 0 1664
+8 +1 1664 1664
+1 * 1664 1664

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664 0 1664
+2 * 1664 0 1664
+2 * 1664 0 1664
+1 * 1664 0 0 1 0 0 1
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=1664 0x4039fc 117 
* * 9984 4992 3328 2 0 0 2
+5 * 1664
+3 * 1664 0 1664
cfi=(3)
cfn=(84)
calls=1664 0x4039ed -88 
* * 9984 4992 3328
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(2)
calls=1664 0x402d74 645 
* * 21632 9984 3328
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664
+3 * 1664 0 1664 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1664 0x403a0a 134 
* * 678382 143540 133347 33 10 67 33 10 67 75898 3154 3328
+5 +4 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(106)
calls=1664 0x40325e 113 
* * 9984 4992 3328 1 0 0 1
+5 * 1664
+3 * 1664 1664
+4 * 1664 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=1664 0x403a98 565 
* * 41600 16640 13312 2 0 0 2
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(112)
calls=1664 0x403a68 547 
* * 41600 16640 13312
+5 * 1664
+3 * 1664
+3 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(11)
cfn=(114)
calls=1664 0x403ac9 -60 
* * 1407394 495060 486744 7 1 102 7 1 102 57636 2260 3324
+5 -3 1664 1664
+4 * 1664 0 1664
+4 * 1664
jump=1664 +28 +4 
* * 
+28 +4 1664
+4 * 1664 1664
+1 * 1664 1664
+2 * 1664 1664
+2 * 1664 1664
+1 * 1664 1664

fn=(188)
0x403d98 171 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 +2 1673 1673
+5 * 1673 0 0 0 0 0 0 0 0 1673 9
+2 +1 1673 1673
+4 * 1673 1673
+4 * 1673 1673
+4 * 1673
+3 * 1673
+3 * 1673 0 1673
cfi=(5)
cfn=(190)
calls=1673 0x40452a -65 
* * 235936 64035 39311 2 1 0 2 1 0 53213 96 3346
+5 +1 1673 1673
+1 * 1673 1673

fn=(22)
0x404236 167 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673
+4 * 1673 0 1673 1 0 0 1
+4 * 1673 0 1673
+4 0 1673 1673
+5 0 1673 0 0 0 0 0 0 0 0 1673
+2 0 1673 1673
+4 0 1673 1673
+4 0 1673
+5 0 1673
+3 0 1673
+3 0 1673 0 1673
fi=(6) ???
cfi=(5)
cfn=(26)
calls=1673 0x404730 99 
* 0 538226 92118 93171 26 31 16 26 31 16 79929 1286 3346
+5 0 1673
fi=(6)
jump=1673 +7 0 
* 0 
+7 0 1673 1673
+1 0 1673 1673

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+4 * 1664 0 1664
+4 * 1664
+4 * 1664 0 0 1 0 0 1
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1664 0x404468 726 
* * 16640 8320 6656 1 0 0 1
+5 * 1664 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+3 * 1664 0 1664
+4 * 1664
+4 * 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(10)
cfn=(44)
calls=1664 0x404468 726 
* * 16640 8320 6656
+5 * 1664 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(86)
0x403a0a 134 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1664 0x4042e2 -45 
* * 59904 21632 23296 5 0 0 5
+5 +1 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664 1 0 0 1
cfn=(94)
calls=1664 0x40432a +43 
* * 581870 110260 98403 27 10 67 27 10 67 75898 3154 3328
+5 * 1664
jump=1664 +28 * 
* * 
+28 * 1664
+4 * 1664 1664
+1 * 1664 1664
+1 * 1664 1664

fn=(88)
0x4042e2 90 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=1664 0x4047b2 +24 
* * 29952 9984 11648 3 0 0 3
+5 * 1664 1664
+4 * 1664 0 1664
+7 * 1664 1664
+4 * 1664 0 1664
+8 * 1664 1664
+4 * 1664 0 1664
+8 +1 1664 1664
+1 * 1664 1664

fn=(156)
0x4031ec 159 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664 1664 0 1 0 0 1
+4 * 1664
+3 * 1664 1664
+4 * 1664 1664
+3 * 1664
+3 * 1664
+3 * 1664
+4 * 1664
+3 * 1664 1664
+4 * 1664 1664
+3 -1 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(158)
calls=1664 0x403ce6 +11 
* * 225704 60864 36190 24 5 0 24 5 0 45452 1477 3328
+5 +1 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1664 0x4031b8 -82 
* * 38272 13312 13312 1 0 0 1
+5 * 1664
jump=1664 +28 * 
* * 
+28 * 1664
+4 * 1664 1664
+1 * 1664 1664
+1 * 1664 1664

fn=(172)
0x4031b8 79 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=1664 0x403ccc +42 
* * 23296 8320 8320
+5 * 1664 1664
+1 * 1664 1664

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246)
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 3364 0 3364 1 0 0 1
+1 * 3364
+3 * 3364 0 3364
+4 +1 3364 3364
+4 * 3364 3364 0 0 2 0 0 2
+4 * 3364
+3 * 3364 3364
+4 * 3364 3364
+3 * 3364
+3 * 3364
+3 * 3364
+4 * 3364 3364
+1 * 3364 3364

fn=(106)
0x40325e 113 3355 0 3355 1 0 0 1
+1 * 3355
+3 * 3355 0 3355
+4 +1 3355 3355
+4 * 3355 3355
+1 * 3355 3355

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 1682 0 1682 1 0 0 1
+1 * 1682
+3 * 1682 0 1682 0 0 1 0 0 1
+4 +1 1682 1682
+4 * 1682 1682
+1 * 1682 1682

fn=(82)
0x4039fc 117 1682 0 1682 1 0 0 1
+1 * 1682
+3 * 1682 0 1682 1 0 0 1
+4 +1 1682 1682
+4 * 1682 1682
+1 * 1682 1682

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 832 0 832
+1 * 832
+3 * 832
+4 * 832 0 832
+4 * 832 0 832
+4 +2 832 832
+4 * 832 832
+4 * 832 832
+4 * 832 832
+4 * 832
+3 * 832 0 0 0 0 0 0 0 0 832 9
jcnd=9/832 +51 +10 
* * 
+2 +3 823 823
+4 * 823 823
+4 * 823 823
+4 -1 823 823
+4 * 823
+3 * 823
+3 * 823 0 823
cfi=(3)
cfn=(222)
calls=823 0x403373 215 
* * 31274 10699 11522 0 52 2 0 52 2 823 2
+5 +2 823 823
+4 * 823 823
+4 * 823
+4 * 823 823
+4 * 823 0 823
+4 * 823
jump=823 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202)
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 14632 4585 4003 35 6 8 35 6 8 953 75 53
+5 +2 832 832
+1 * 832 832

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664 0 1664
+2 * 1664 0 1664
+2 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664 1 0 0 1
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(6)
calls=1664 0x403b08 117 
* * 9984 4992 3328 1 0 1 1 0 1
+5 * 1664
+3 * 1664 0 1664
cfi=(3)
cfn=(8)
calls=1664 0x403afa -88 
* * 9984 4992 3328 1 0 0 1
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(10)
calls=1664 0x402f54 645 
* * 21632 9984 3328 1 1 0 1 1
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(12)
calls=1664 0x403b16 134 
* * 699456 153177 145902 34 14 12 34 14 12 80995 1227 3328
+5 +4 1664 1664 0 1 0 0 1
+4 * 1664
+3 * 1664 0 1664
cfn=(40)
calls=1664 0x40333c 113 
* * 9984 4992 3328 2 0 0 2
+5 * 1664
+3 * 1664 1664
+4 * 1664 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(42)
calls=1664 0x403ba4 565 
* * 41600 16640 13312 3 0 0 3
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(46)
calls=1664 0x403b74 547 
* * 41600 16640 13312
+5 * 1664
+3 * 1664
+3 * 1664
+3 * 1664
+3 * 1664 0 1664 1 0 0 1
cfi=(11)
cfn=(48)
calls=1664 0x403bd5 -60 
* * 1407394 495060 486744 26 3 4 26 3 4 57636 2276 3324 415
+5 -3 1664 1664
+4 * 1664 0 1664
+4 * 1664
jump=1664 +28 +4 
* * 
+28 +4 1664
+4 * 1664 1664
+1 * 1664 1664
+2 * 1664 1664
+2 * 1664 1664
+1 * 1664 1664

fn=(108)
0x403a98 565 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+4 * 1664 0 1664
+4 * 1664
+4 * 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(10)
cfn=(110)
calls=1664 0x404380 726 
* * 16640 8320 6656 1 0 0 1
+5 * 1664 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664 1 0 0 1
+4 +2 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(40)
calls=1664 0x40333c 113 
* * 9984 4992 3328
+5 * 1664
+3 * 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+3 -1 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1664 0x40334a 148 
* * 51584 16640 19968 2 0 0 2
+5 +1 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(186)
calls=1664 0x4032ca 159 
* * 346290 105336 69082 4 1 0 4 1 0 54640 85 3328
+5 * 1664
jump=1664 +28 * 
* * 
+28 * 1664 0 0 1 0 0 1
+4 * 1664 1664
+1 * 1664 1664
+1 * 1664 1664

fn=(210)
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82)
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96)
0x403fbe 167 1673 0 1673 1 0 0 1
+1 * 1673 0 0 1 0 0 1
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 0 1673 1673
+5 0 1673 0 0 0 0 0 0 0 0 1673
+2 0 1673 1673
+4 0 1673 1673
+4 0 1673
+5 0 1673
+3 0 1673
+3 0 1673 0 1673
fi=(6)
cfi=(5)
cfn=(100)
calls=1673 0x40461a 99 
* 0 516928 82646 80720 36 14 71 36 14 71 74752 3214 3346
+5 0 1673
fi=(6)
jump=1673 +7 0 
* 0 
+7 0 1673 1673
+1 0 1673 1673

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 1043744 0 1043744
+1 * 1043744
+3 * 1043744 0 1043744
+4 * 1043744 0 1043744
+4 +1 1043744 1043744
+4 * 1043744 1043744
+3 * 1043744 1043744
+4 * 1043744
+4 * 1043744
+3 * 1043744 1043744
+1 * 1043744 1043744

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 1043744 0 1043744
+1 * 1043744
+3 * 1043744 0 1043744 1 0 0 1
+4 * 1043744 0 1043744
+4 +1 1043744 1043744
+4 * 1043744 1043744
+3 * 1043744 1043744
+4 * 1043744
+4 * 1043744
+3 * 1043744 1043744
+1 * 1043744 1043744

fn=(192)
0x403296 79 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=1664 0x403d7e +42 
* * 23296 8320 8320 1 0 0 1
+5 * 1664 1664
+1 * 1664 1664

fn=(254)
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328
+4 * 3328 0 3328 1 0 0 1
+4 +1 3328 3328
+4 * 3328
+3 * 3328 0 3328
cfi=(13)
cfn=(58)
calls=3328 0x404d8f -77 
* * 19968 9984 6656 1 0 0 1
+5 * 3328 3328
+1 * 3328 3328

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 1682 0 1682
+1 * 1682
+3 * 1682
+4 * 1682 0 1682 1 0 0 1
+4 * 1682 0 1682
+4 * 1682 0 1682
+4 +2 1682 1682
+4 * 1682 1682
+4 * 1682
+3 * 1682
+3 * 1682
+4 * 1682 0 1682
+4 +1 1682 1682
+5 * 1682 0 0 0 0 0 0 0 0 1682
jcnd=9/1682 +33 +2 
* * 
+2 +1 1673 1673
+4 * 1673
+8 * 1673 1673
+4 * 1673 1673
+4 * 1673
+3 * 1673 0 0 1 0 0 1
+3 * 1673 0 1673 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1673 0x3877c83840 0 
* * 1024858 362519 359178 11 2 51 11 2 51 56094 2282 1668 415
* * 1673 1673 0 1 1 0 1 1 0 0 0 1673
+5 +1 1682 1682
+4 * 1682
+8 * 1682 1682
+4 * 1682
+3 +1 1682 1682
+1 * 1682 1682

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 1682 0 1682
+1 * 1682
+3 * 1682
+4 * 1682 0 1682 1 0 0 1
+4 * 1682 0 1682
+4 * 1682 0 1682 0 0 1 0 0 1
+4 +2 1682 1682
+4 * 1682 1682
+4 * 1682
+3 * 1682
+3 * 1682
+4 * 1682 0 1682
+4 +1 1682 1682
+5 * 1682 0 0 0 0 0 0 0 0 1682
jcnd=9/1682 +33 +2 
* * 
+2 +1 1673 1673
+4 * 1673
+8 * 1673 1673
+4 * 1673 1673
+4 * 1673
+3 * 1673
+3 * 1673 0 1673
cob=(2)
cfi=(9)
cfn=(78)
calls=1673 0x3877c83840 0 
* * 1024858 362519 359178 0 1 103 0 1 103 56094 2268 1668
* * 1673 1673 0 0 0 0 0 0 0 0 0 1673
+5 +1 1682 1682
+4 * 1682
+8 * 1682 1682
+4 * 1682
+3 +1 1682 1682
+1 * 1682 1682

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664 1 0 0 1
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +8 1664 0 1664
+4 +3 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(74)
calls=1664 0x404f37 -22 
* * 1069602 380244 368600 14 3 3 14 3 3 57636 2276 3324 415
+5 +1 1664 1664
+1 * 1664 1664

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+2 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +4 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=1664 0x404878 277 
* * 24960 9984 8320 1 0 0 1
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1664 0x404d44 277 
* * 41600 14976 13312 2 0 0 2
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(132)
calls=1664 0x404d44 277 
* * 41600 14976 13312
+5 * 1664
+3 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=1664 0x404d5e -49 
* * 1094562 388564 378584 1 1 102 1 1 102 57636 2260 3324
+5 +1 1664
+4 * 1664 1664
+1 * 1664 1664
+2 * 1664 1664
+1 * 1664 1664

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(54)
0x404a36 450 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664 1 0 0 1
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +10 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(56)
calls=1664 0x404c38 288 
* * 24960 9984 8320 3 0 0 3
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(56)
calls=1664 0x404c38 288 
* * 24960 9984 8320
+5 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1664 0x404c52 -36 
* * 1249314 440148 430168 20 3 4 20 3 4 57636 2276 3324 415
+5 +1 1664
+4 * 1664 1664
+1 * 1664 1664
+1 * 1664 1664

fn=(60)
0x404c52 424 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+2 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +4 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1664 0x40492d 277 
* * 24960 9984 8320 2 0 0 2
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1664 0x404d9d 277 
* * 41600 14976 13312 2 0 1 2 0 1
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(66)
calls=1664 0x404d9d 277 
* * 41600 14976 13312
+5 * 1664
+3 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(72)
calls=1664 0x404db7 -49 
* * 1094562 388564 378584 15 3 3 15 3 3 57636 2276 3324 415
+5 +1 1664
+4 * 1664 1664
+1 * 1664 1664
+2 * 1664 1664
+1 * 1664 1664

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 49 0 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(62)
0x40492d 277 1718 0 1718 1 0 0 1
+1 * 1718
+3 * 1718
+4 * 1718 0 1718
+4 +1 1718 1718
+4 * 1718
+3 * 1718 0 1718 1 0 0 1
cfi=(13)
cfn=(64)
calls=1718 -33 -66 
* * 10308 5154 3436
+5 * 1718 1718
+1 * 1718 1718

fn=(66)
0x404d9d 277 3328 0 3328
+1 * 3328
+3 * 3328
+4 * 3328 0 3328
+4 +1 3328 3328
+4 * 3328
+3 * 3328 0 3328
cfi=(13)
cfn=(68)
calls=3328 0x404f1a -58 
* * 53248 19968 16640 2 0 1 2 0 1
+5 * 3328 3328
+1 * 3328 3328

fn=(240)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 49 0 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1664 0 1664
+1 * 1664
+3 * 1664 0 1664
+1 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +10 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1664 0x404bc6 288 
* * 24960 9984 8320 3 0 0 3
+5 * 1664
+3 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfn=(122)
calls=1664 0x404bc6 288 
* * 24960 9984 8320
+5 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(126)
calls=1664 0x404be0 -36 
* * 1249314 440148 430168 4 1 102 4 1 102 57636 2260 3324
+5 +1 1664
+4 * 1664 1664
+1 * 1664 1664
+1 * 1664 1664

fn=(128)
0x404878 277 1718 0 1718
+1 * 1718
+3 * 1718
+4 * 1718 0 1718 1 0 0 1
+4 +1 1718 1718
+4 * 1718
+3 * 1718 0 1718
cfi=(13)
cfn=(130)
calls=1718 -33 -66 
* * 10308 5154 3436 0 0 1 0 0 1
+5 * 1718 1718
+1 * 1718 1718

fn=(132)
0x404d44 277 3328 0 3328
+1 * 3328
+3 * 3328
+4 * 3328 0 3328
+4 +1 3328 3328
+4 * 3328
+3 * 3328 0 3328
cfi=(13)
cfn=(134)
calls=3328 0x404e98 -58 
* * 53248 19968 16640 2 0 0 2
+5 * 3328 3328
+1 * 3328 3328

fn=(138)
0x404d5e 379 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +8 1664 0 1664
+4 +3 1664 1664
+4 * 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfn=(140)
calls=1664 0x404eb5 -22 
* * 1069602 380244 368600 1 1 102 1 1 102 57636 2260 3324
+5 +1 1664 1664
+1 * 1664 1664

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 49 1 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328
+4 * 3328 0 3328
+4 +1 3328 3328
+4 * 3328
+3 * 3328 0 3328
cfi=(13)
cfn=(124)
calls=3328 0x404d36 -77 
* * 19968 9984 6656 2 0 0 2
+5 * 3328 3328
+1 * 3328 3328

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328 0 3328
+4 +1 3328 3328
+4 * 3328 3328
+1 * 3328 3328

fn=(110)
0x404380 726 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328 0 3328
+4 * 3328 0 3328
+4 * 3328 3328
+4 * 3328 3328
+3 * 3328 3328
+4 * 3328 0 3328
+3 * 3328 3328
+1 * 3328 3328

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328 0 3328
+4 +1 3328 3328
+4 * 3328 3328
+1 * 3328 3328

fn=(44)
0x404468 726 3328 0 3328
+1 * 3328
+3 * 3328 0 3328
+4 * 3328 0 3328
+4 * 3328 3328
+4 * 3328 3328
+3 * 3328 3328
+4 * 3328 0 3328 1 0 0 1
+3 * 3328 3328
+1 * 3328 3328

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673 0 1673
+4 * 1673 0 1673 1 0 0 1
+4 * 1673 1673
+1 * 1673 1673

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 +4 1673 1673
+4 * 1673 1673
+4 * 1673
+3 * 1673
+3 * 1673 0 1673
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1673 0x40454c -14 
* * 10038 3346 5019 1 0 0 1
+5 +2 1673 1673
+1 * 1673 1673

fn=(150)
0x40326c 148 1673 0 1673
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 +3 1673 1673 0 1 0 0 1
+4 * 1673 1673
+4 * 1673
+3 * 1673
+3 * 1673 0 1673
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1673 0x403d1a -29 
* * 30114 10038 11711 3 0 0 3
+5 +1 1673 1673
+1 * 1673 1673

fn=(180)
0x40334a 148 1673 0 1673
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 +3 1673 1673
+4 * 1673 1673
+4 * 1673
+3 * 1673
+3 * 1673 0 1673
cfn=(182)
calls=1673 0x403dcc -29 
* * 30114 10038 11711 2 0 0 2
+5 +1 1673 1673
+1 * 1673 1673

fn=(152)
0x403d1a 122 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673
+4 * 1673 0 1673
+4 * 1673 0 1673
+4 +4 1673 1673
+4 * 1673 1673
+4 * 1673
+3 * 1673
+3 * 1673 0 1673
cfn=(154)
calls=1673 0x4044f8 -14 
* * 10038 3346 5019 2 0 0 2
+5 +2 1673 1673
+1 * 1673 1673

fn=(184)
0x40454c 112 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673 0 1673
+4 * 1673 0 1673
+4 * 1673 1673
+1 * 1673 1673

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 3650 554 553 0 17 8 0 17 8 607 59 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 0 5 0 0 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 49 3 0 49 131 6 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1278 353 226 1 0 0 1 0 0 246 20 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 3426 719 657 12 4 4 12 4 4 527 60 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 8 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1222 326 219 1 1 0 1 1 0 232 7 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 832 0 832 1 0 0 1
+1 * 832
+3 * 832
+4 * 832 0 832
+4 * 832 0 832
+4 +1 832 832
+4 * 832
+3 * 832 0 832
cfi=(2)
cfn=(2)
calls=832 0x402d74 645 
* * 10816 4992 1664
+5 * 832
+3 * 832 0 832
+3 +1 832 832
+6 * 832 0 832
+3 * 832 832
+6 * 832 0 832
+3 +1 832 832
+6 * 832 0 832 1 0 0 1
+3 * 832 832
+6 * 832 0 832
+3 +2 832 0 832
+7 * 832
jump=832 +86 * 
* * 
+2 +1 347360 347360
+3 * 347360
+3 * 347360 347360
+4 * 347360
+3 * 347360
+3 * 347360 0 347360
cfi=(2)
cfn=(144)
calls=347360 0x402d9a 770 
* * 3820960 1736800 1042080
+5 * 347360 347360
+4 * 347360 347360
+5 * 347360
+4 * 347360 0 347360
+5 +1 347360 347360
+3 * 347360
+3 * 347360 347360
+4 * 347360
+3 * 347360
+3 * 347360 0 347360
cfi=(2)
cfn=(146)
calls=347360 0x402dba 770 
* * 3820960 1736800 1042080 1 0 0 1
+5 * 347360 347360
+2 * 347360
+4 * 347360 347360
+5 * 347360
+4 * 347360 0 347360
+5 -2 347360 0 347360
+4 * 347360 347360
+3 * 347360
+3 * 347360 347360
+3 * 347360 0 0 0 0 0 0 0 0 347360 833
jcnd=346528/347360 -93 +1 
* * 
-9 * 832 832 0 1 0 0 1
+3 * 832
+3 * 832 832
+3 * 832 0 0 0 0 0 0 0 0 832
jcnd=832/832 -93 +1 
* * 
+2 +4 832 832
+3 * 832
+3 * 832
+4 * 832 832 0 1 0 0 1
+5 * 832
+4 * 832
+3 * 832 0 832
+5 +1 832 832
+3 * 832
+3 * 832
+4 * 832 832
+5 * 832
+4 * 832
+3 * 832 0 832
+5 +1 832 0 832
+7 * 832
jump=832 0x4016ee * 
* * 
+2 +1 347360 347360
+3 * 347360
+3 * 347360 347360
+4 * 347360
+3 * 347360 0 0 1 0 0 1
+3 * 347360 0 347360
cfi=(2)
cfn=(146)
calls=347360 0x402dba 770 
* * 3820960 1736800 1042080
+5 * 347360 347360
+2 * 347360
+4 * 347360 347360
+5 * 347360 0 347360
+5 +1 347360 347360
+3 * 347360
+3 * 347360 347360
+4 * 347360
+3 * 347360
+3 * 347360 0 347360
cfi=(2)
cfn=(144)
calls=347360 0x402d9a 770 
* * 3820960 1736800 1042080
+5 * 347360 347360
+4 * 347360 347360
+5 * 347360 0 347360
+5 +1 347360 347360
+5 * 347360 347360
+5 * 347360 347360
+5 * 347360
+4 * 347360 0 347360
+5 +1 347360 347360
+5 * 347360 347360
+5 * 347360 347360
+5 * 347360
+4 * 347360 0 347360
+5 -4 347360 0 347360
+4 * 347360 347360
+3 * 347360
+3 * 347360 347360
+3 * 347360 0 0 0 0 0 0 0 0 347360 833
jcnd=346528/347360 0x401672 +1 
* * 
-9 * 832 832 0 1 0 0 1
+3 * 832
+3 * 832 832
+3 * 832 0 0 0 0 0 0 0 0 832
jcnd=832/832 0x401672 +1 
* * 
+6 +6 832 832 0 1 0 0 1
+5 * 832 832
+5 * 832 0 832
+5 +2 832 832
+3 +1 832 0 832
+3 * 832 832
+5 * 832 832
+1 * 832 832

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 832
+7 * 832
+7 * 832
+3 * 832
+3 * 832 0 832
cfi=(2)
cfn=(4)
calls=832 0x4030b2 310 
* * 1162633 364904 348831 70 18 16 70 18 16 69338 2206 3326 415
+5 * 832
+7 * 832
+7 * 832
+3 * 832
+3 * 832 0 832
cfi=(2)
cfn=(80)
calls=832 0x402ff4 310 
* * 1152466 360109 342584 48 11 167 48 11 167 66866 3178 3326
+5 * 832 0 0 1 0 0 1
+7 * 832
+7 * 832
+3 * 832
+3 * 832 0 832
cfn=(142)
calls=832 0x401585 -52 
* * 36179520 15999360 8350784 8 0 0 8 0 0 696384 1666
+5 * 832 0 832
+8 * 832 832
+6 * 832 0 832
+6 * 832
+7 * 832
+3 * 832 0 832
cfi=(2)
cfn=(148)
calls=832 0x402df4 414 
* * 206036 64544 45551 33 5 0 33 5 0 22726 743 1664
+5 * 832
+7 * 832
+3 * 832 0 832 1 0 0 1
cfi=(2)
cfn=(178)
calls=832 0x402e74 414 
* * 223897 70972 51181 8 1 0 8 1 0 27320 47 1664
+5 +2 832
+7 * 832
+7 * 832
+3 * 832
+3 * 832 0 832
cfi=(2)
cfn=(4)
calls=832 0x4030b2 310 
* * 1162201 364869 348711 2 0 1 2 0 1 69293 1297 3326
+5 * 832
+7 * 832
+7 * 832
+3 * 832
+3 * 832 0 832
cfi=(2)
cfn=(80)
calls=832 0x402ff4 310 
* * 1151294 360027 342403 0 0 2 0 0 2 66668 2236 3326
+5 * 832 832
+6 * 832 0 0 1 0 0 1
+7 * 832
+7 * 832 0 832
+6 * 832 832
+8 * 832
+3 * 832
+3 * 832 0 832
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=832 0x401719 -33 
* * 16722368 6965504 3833440 4 0 0 4 0 0 348192 833
+5 * 832 0 832
+8 * 832 832
+6 * 832 0 832
+6 * 832
+7 * 832 0 0 1 0 0 1
+3 * 832 0 832
cfi=(2)
cfn=(148)
calls=832 0x402df4 414 
* * 206036 64544 45551 0 0 0 0 0 0 22726 734 1664
+5 * 832
+7 * 832
+3 * 832 0 832
cfi=(2)
cfn=(178)
calls=832 0x402e74 414 
* * 223897 70972 51181 0 0 0 0 0 0 27320 38 1664
+5 +2 832 832
+7 * 832
+3 * 832 0 832
cfi=(2)
cfn=(2)
calls=832 0x402d74 645 
* * 10816 4992 1664
+5 * 832 832
+6 * 832
+3 * 832
+3 * 832
+3 * 832 832
+7 * 832
+3 * 832 0 0 1 0 0 1
+3 * 832 0 832
cfi=(2)
cfn=(144)
calls=832 0x402d9a 770 
* * 9152 4160 2496
+5 * 832
+3 * 832
+7 * 832
+3 * 832
+3 * 832 0 832
cfi=(2)
cfn=(200)
calls=832 0x402eda 901 
* * 67709 26145 19748 38 58 10 38 58 10 2608 86 53
+5 +1 832 832
+7 * 832
+3 * 832 0 832
cfi=(2)
cfn=(10)
calls=832 0x402f54 645 
* * 10816 4992 1664 0 1 0 0 1
+5 * 832 832
+6 * 832
+3 * 832
+3 * 832
+3 * 832 832
+7 * 832 0 0 1 0 0 1
+3 * 832
+3 * 832 0 832
cfi=(2)
cfn=(146)
calls=832 0x402dba 770 
* * 9152 4160 2496
+5 * 832
+3 * 832
+7 * 832
+3 * 832
+3 * 832 0 832
cfi=(2)
cfn=(244)
calls=832 0x402f7a 901 
* * 67989 26007 19651 20 69 101 20 69 101 2702 85 53
+5 +1 832 832
+7 * 832
+3 * 832 0 832
cfi=(2)
cfn=(10)
calls=832 0x402f54 645 
* * 10816 4992 1664
+5 * 832 832
+6 * 832
+3 * 832
+3 * 832
+3 * 832 832 0 1 0 0 1
+7 * 832
+3 * 832
+3 * 832 0 832
cfi=(2)
cfn=(146)
calls=832 0x402dba 770 
* * 9152 4160 2496
+5 * 832 832
+2 * 832
+4 * 832 832
+8 * 832 832
+8 * 832 0 832
+8 +1 832 832
+7 * 832
+3 * 832 0 832
cfi=(2)
cfn=(2)
calls=832 0x402d74 645 
* * 10816 4992 1664
+5 * 832 832 0 1 0 0 1
+6 * 832
+3 * 832
+3 * 832
+3 * 832 832
+7 * 832
+3 * 832
+3 * 832 0 832
cfi=(2)
cfn=(144)
calls=832 0x402d9a 770 
* * 9152 4160 2496
+5 * 832 832
+4 * 832 832
+8 * 832
+4 * 832 832
+8 * 832
+3 * 832 0 832
+8 +2 832 0 832
+7 -12 832 832
+8 * 832 832
+7 * 832 0 0 0 0 0 0 0 0 832 1
jcnd=1/832 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 832
+7 * 832
+3 * 832 0 832
cfi=(2)
cfn=(2)
calls=832 0x402d74 645 
* * 10816 4992 1664 2 0 1 2 0 1
+5 * 832
+3 * 832 832
+7 * 832
+3 * 832 0 832
cfi=(2)
cfn=(2)
calls=832 0x402d74 645 
* * 10816 4992 1664 0 1 0 0 1
+5 * 832
+3 * 832 0 0 0 0 0 0 0 0 832 2
+2 * 832 0 0 1 0 0 1
+5 * 832
jump=832 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 832
+2 * 832 0 0 0 0 0 0 0 0 832
jcnd=832/832 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 832 0 832
+1 * 832
+3 * 832
+4 * 832 0 832
+4 * 832 0 832
+4 * 832 0 832
+5 +1 832 832
+4 * 832
+3 * 832 0 832
cfi=(2)
cfn=(2)
calls=832 0x402d74 645 
* * 10816 4992 1664
+5 * 832
+3 * 832 0 832
+3 +1 832 832 0 1 0 0 1
+6 * 832 0 832
+3 * 832 832
+6 * 832 0 832
+3 +2 832 0 832
+7 * 832
jump=832 +86 * 
* * 
+2 +1 347360 347360
+3 * 347360
+3 * 347360 347360
+4 * 347360
+3 * 347360
+3 * 347360 0 347360
cfi=(2)
cfn=(144)
calls=347360 0x402d9a 770 
* * 3820960 1736800 1042080
+5 * 347360 347360
+4 * 347360 347360
+5 * 347360
+4 * 347360 0 347360
+5 +1 347360 347360
+3 * 347360
+3 * 347360 347360
+4 * 347360
+3 * 347360
+3 * 347360 0 347360
cfi=(2)
cfn=(146)
calls=347360 0x402dba 770 
* * 3820960 1736800 1042080
+5 * 347360 347360
+2 * 347360
+4 * 347360 347360
+5 * 347360
+4 * 347360 0 347360
+5 -2 347360 0 347360
+4 * 347360 347360
+3 * 347360
+3 * 347360 347360
+3 * 347360 0 0 0 0 0 0 0 0 347360 833
jcnd=346528/347360 -93 +1 
* * 
-9 * 832 832 0 1 0 0 1
+3 * 832
+3 * 832 832
+3 * 832 0 0 0 0 0 0 0 0 832
jcnd=832/832 -93 +1 
* * 
+2 +4 832 832
+3 * 832
+3 * 832 0 0 1 0 0 1
+4 * 832 832
+5 * 832
+4 * 832
+3 * 832 0 832
+5 +1 832 832
+3 * 832
+3 * 832
+4 * 832 832
+5 * 832
+4 * 832
+3 * 832 0 832
+5 +1 832 832
+5 * 832 832
+5 * 832 832
+5 * 832 0 0 1 0 0 1
+4 * 832
+3 * 832 0 832
+5 +2 832 832
+3 +1 832 0 832
+3 * 832 832
+5 * 832 832
+1 * 832 832

fl=(4)
fn=(174)
0x403ccc 121 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfi=(5)
cfn=(176)
calls=1664 0x4044cc -35 
* * 8320 3328 3328
+5 * 1664 1664
+1 * 1664 1664

fn=(90)
0x4047b2 115 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664 1 0 0 1
+4 +1 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(5)
cfn=(92)
calls=1664 0x4049d4 -35 
* * 9984 3328 4992 1 0 0 1
+5 * 1664 1664
+1 * 1664 1664

fn=(194)
0x403d7e 121 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664 0 1664
cfi=(5)
cfn=(196)
calls=1664 0x404520 -35 
* * 8320 3328 3328
+5 * 1664 1664
+1 * 1664 1664

fn=(16)
0x404804 115 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664 0 1664
cfi=(5)
cfn=(18)
calls=1664 0x404a28 -35 
* * 9984 3328 4992 1 0 1 1 0 1
+5 * 1664 1664
+1 * 1664 1664

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 3346 0 3346 1 0 0 1
+2 0 3346 0 3346
+2 0 3346 0 3346
+2 0 3346
+3 0 3346 0 3346
+2 0 3346 0 3346
+1 0 3346 0 3346
+1 0 3346
+3 0 3346
+4 0 3346 3346
+4 0 3346 0 3346
+4 0 3346
+3 0 3346
+4 0 3346
+3 0 3346
+3 0 3346
+3 0 3346 0 0 1 0 0 1 0 0 3346
+6 0 3346
+4 0 3346 0 0 0 0 0 0 0 0 3346
+6 0 3346
+4 0 3346 0 0 0 0 0 0 0 0 3346
+6 0 3346 3346
+7 0 3346 0 0 0 0 0 0 0 0 3346 4
jcnd=3222/3346 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124 2
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 3222
+2 0 3222 0 0 0 0 0 0 0 0 3222
+6 0 3222 3222 0 1 0 0 1
+4 0 3222
+3 0 3222
+2 0 3222 0 0 0 0 0 0 0 0 3222
jcnd=3222/3222 0x3877c78a40 0 
* 0 
+6 0 3222 3222
+4 0 3222
+3 0 3222 0 0 0 0 0 0 0 0 3222
+6 0 3222 3222
+5 0 3222
+4 0 3222 0 0 0 0 0 0 0 0 3222
jcnd=3222/3222 0x3877c7907c 0 
* 0 
+6 0 3222 3222
+5 0 3222
+4 0 3222 0 0 0 0 0 0 0 0 3222
+6 0 3222
+4 0 3222 0 0 1 0 0 1 0 0 3222
+6 0 3222
+4 0 3222 3222
+7 0 3222 0 0 0 0 0 0 0 0 3222
+6 0 3222 3222
+6 0 3222
+2 0 3222 0 0 0 0 0 0 0 0 3222
+6 0 3222 3222
+4 0 3222 0 0 0 0 0 0 0 0 3222 6
jcnd=3217/3222 +70 0 
* 0 
+2 0 5 5
+3 0 5
+3 0 5
+3 0 5 5
+4 0 5 5
+4 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5 2
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=4/5 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 3222 3222 0 1 0 0 1
+4 0 3222 0 0 0 0 0 0 0 0 3222 1398
jcnd=1486/3222 0x3877c78bf0 0 
* 0 
+6 0 1736 1736 0 0 1 0 0 1
+6 0 1736 0 0 1 0 0 1 0 0 1736 71
jcnd=83/1736 0x3877c78a78 0 
* 0 
+6 0 1653 1653
+5 0 1653 1653
+5 0 1653 1653
+4 0 1653 0 0 0 0 0 0 0 0 1653
+6 0 1653 1653
+4 0 1653 0 0 0 0 0 0 0 0 1653
+6 0 1653 1653
+9 0 1653 0 1653
+4 0 1653 0 1653
+4 0 1653 0 0 0 0 0 0 0 0 1653 8
jcnd=1121/1653 +16 0 
* 0 
+2 0 532 532
+5 0 532
+3 0 532 0 0 1 0 0 1 0 0 532 12
jcnd=504/532 0x3877c78ee4 0 
* 0 
+6 0 1653
+3 0 1653
+4 0 1653 1653
+4 0 1653 1653
+4 0 1653 0 0 0 0 0 0 0 0 1653
-12 0 83
+4 0 83 83
+4 0 83 83
+4 0 83 0 0 0 0 0 0 0 0 83
+6 0 1736
+7 0 1736 0 1736
+4 0 1736 0 1736
+4 0 1736 0 0 0 0 0 0 0 0 1736 70
jcnd=441/1736 +18 0 
* 0 
+2 0 1295 0 1295
+8 0 1295 0 1295
+8 0 1295 0 1295
+4 0 1295
+3 0 1295 0 1295 1 0 0 1
+4 0 1295
+4 0 1295 0 1295
+4 0 1295 0 1295
+4 0 1295
+7 0 1295 0 0 0 0 0 0 0 0 1295
jcnd=1295/1295 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 1486
+7 0 1486 0 0 0 0 0 0 0 0 1486
jcnd=1486/1486 0x3877c78b20 0 
* 0 
0x3877c78a40 0 3222 0 0 1 0 0 1
+5 0 3222 3222
+4 0 3222 3222
+7 0 3222 0 0 0 0 0 0 0 0 3222
jcnd=3222/3222 +16 0 
* 0 
+16 0 3222 0 3222
+5 0 3222 0 0 0 0 0 0 0 0 3222
+6 0 3222
+3 0 3222
jump=3222 0x3877c7878f 0 
* 0 
+10 0 83 0 83
+6 0 83 0 0 1 0 0 1
jump=83 0x3877c78885 0 
* 0 
0x3877c78b20 0 3222 3222 0 1 0 0 1
+4 0 3222
+2 0 3222 0 0 0 0 0 0 0 0 3222
+6 0 3222 3222
+7 0 3222 0 0 0 0 0 0 0 0 3222
jcnd=3222/3222 +15 0 
* 0 
+15 0 3222 0 3222 1 0 0 1
+4 0 3222 0 0 0 0 0 0 0 0 3222 2
+6 0 3222
+4 0 3222 3222
+1 0 3222 3222
+1 0 3222 3222
+2 0 3222 3222
+2 0 3222 3222
+2 0 3222 3222
+2 0 3222 3222
0x3877c78bf0 0 1486 0 0 1 0 0 1
+3 0 1486 0 1486
+4 0 1486
+3 0 1486
+4 0 1486 0 1486 1 0 0 1
+4 0 1486
jump=1486 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 504 504 0 1 0 0 1
+5 0 504 0 0 0 0 0 0 0 0 504
+6 0 504 504
+5 0 504 0 504
+4 0 504 504
+5 0 504 0 504
+4 0 504
jump=504 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 3222 3222 0 1 1 0 1 1
+4 0 3222 0 0 1 0 0 1
+7 0 3222
+4 0 3222
+3 0 3222
+3 0 3222 0 0 0 0 0 0 0 0 3222
jcnd=3222/3222 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 3336 0 0 1 0 0 1
+7 0 3336
+3 0 3336
+3 0 3336 3336 0 0 1 0 0 1
+4 0 3336
+4 0 3336 0 0 0 0 0 0 0 0 0 0 3336 415
jump=408 0x3877c89be8 0 
* 0 
jump=428 0x3877c89bd0 0 
* 0 
jump=416 0x3877c89bb8 0 
* 0 
jump=416 +11 0 
* 0 
jump=416 0x3877c89c48 0 
* 0 
jump=418 0x3877c89c30 0 
* 0 
jump=416 0x3877c89c18 0 
* 0 
jump=418 0x3877c89c00 0 
* 0 
+11 0 416 416
+3 0 416
+4 0 416
+4 0 416 416
+4 0 416
+4 0 416 0 416
+4 0 416
+9 0 416 416
+4 0 416 0 416
+4 0 416 416
+4 0 416 0 416
+4 0 416 416
+4 0 416 0 416
+4 0 416 416
+4 0 416 0 416
+4 0 416
+4 0 416
+4 0 416 0 0 0 0 0 0 0 0 416
jcnd=8/416 0x3877c89c60 0 
* 0 
-40 0 86238 86238
+4 0 86238 0 86238 0 0 3 0 0 3
+4 0 86238 86238
+4 0 86238 0 86238 0 0 15 0 0 15
+4 0 86238 86238
+4 0 86238 0 86238 0 0 50 0 0 50
+4 0 86238 86238
+4 0 86238 0 86238
+4 0 86238
+4 0 86238
+4 0 86238 0 0 0 0 0 0 0 0 86238 2862
jcnd=3300/86238 0x3877c89c60 0 
* 0 
-32 0 418 418
+4 0 418 0 418
+4 0 418 418
+4 0 418 0 418
+4 0 418 418
+4 0 418 0 418
+4 0 418
+4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418
jcnd=10/418 0x3877c89c60 0 
* 0 
-24 0 416 416
+4 0 416 0 416
+4 0 416 416
+4 0 416 0 416
+4 0 416
+4 0 416
+4 0 416 0 0 0 0 0 0 0 0 416
jcnd=8/416 0x3877c89c60 0 
* 0 
-16 0 418 418 0 1 0 0 1
+4 0 418 0 418
+4 0 418 0 0 1 0 0 1
+4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 6
jcnd=10/418 0x3877c89c60 0 
* 0 
+6 0 84570
+4 0 84570 84570
+3 0 84570 0 84570 0 0 1 0 0 1
+3 0 84570 84570
+4 0 84570 0 84570 0 0 34 0 0 34
+4 0 84570 84570
+4 0 84570 0 84570 0 0 49 0 0 49
+4 0 84570 84570
+4 0 84570 0 84570
+4 0 84570
jump=84570 -80 0 
* 0 
-30 0 408 408
+3 0 408 0 408
+3 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408 0 0 1 0 0 1
+4 0 408 408
+4 0 408 0 408
+4 0 408
jump=408 -80 0 
* 0 
-24 0 428 428
+4 0 428 0 428
+4 0 428 428
+4 0 428 0 428
+4 0 428 428
+4 0 428 0 428
+4 0 428
jump=428 -80 0 
* 0 
-16 0 416 416
+4 0 416 0 416
+4 0 416 416
+4 0 416 0 416
+4 0 416
jump=416 -80 0 
* 0 
+8 0 416 416
+3 0 416
+4 0 416 0 0 1 0 0 1
+4 0 416
+4 0 416
jump=416 -39 0 
* 0 
+9 0 428
+3 0 428 0 0 0 0 0 0 0 0 428
+6 0 428 428
+3 0 428
+4 0 428
jump=428 -72 0 
* 0 
+8 0 408
+4 0 408 408
+3 0 408 0 0 0 0 0 0 0 0 408
+2 0 408
+4 0 408
jump=408 -99 0 
* 0 
+11 0 418 418 0 1 0 0 1
+3 0 418
+4 0 418
+4 0 418
+4 0 418
jump=418 0x3877c89b78 0 
* 0 
+9 0 416 416
+3 0 416
+4 0 416
+4 0 416
+4 0 416
jump=416 0x3877c89b70 0 
* 0 
+9 0 418 418
+3 0 418
+4 0 418
+4 0 418
+4 0 418
jump=418 0x3877c89b68 0 
* 0 
+9 0 416 416
+3 0 416
+4 0 416
+4 0 416
+4 0 416
jump=416 0x3877c89b60 0 
* 0 
+9 0 3336 0 3336 1 0 0 1
+3 0 3336 3336

fn=(104) alloc_perturb
0x3877c77180 0 3200 3200 0 1 0 0 1
+6 0 3200
+2 0 3200 0 0 0 0 0 0 0 0 3200 2
+2 0 3200 3200

fn=(38) _int_malloc
0x3877c79a00 0 3346 0 3346 1 0 0 1
+2 0 3346
+3 0 3346 0 3346
+2 0 3346 0 3346
+2 0 3346 0 3346 0 0 1 0 0 1
+2 0 3346
+3 0 3346 0 3346
+1 0 3346 0 3346
+1 0 3346
+4 0 3346
+4 0 3346 0 0 0 0 0 0 0 0 3346
+6 0 3346
+4 0 3346
+6 0 3346
+3 0 3346
+4 0 3346
+4 0 3346
+4 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346
+6 0 3346 3346 0 1 1 0 1 1
+7 0 3346 0 0 0 0 0 0 0 0 3346 7
jcnd=3224/3346 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 146 146
+6 0 146
+4 0 146
+2 0 146 0 0 0 0 0 0 0 0 146
+6 0 146
+3 0 146
+4 0 146 146
+1 0 146 146
+1 0 146 146
+2 0 146 146
+2 0 146 146
+2 0 146 146
+2 0 146 146
-14 0 3200
+4 0 3200 3200
+1 0 3200 3200
+1 0 3200 3200
+2 0 3200 3200
+2 0 3200 3200
+2 0 3200 3200
+2 0 3200 3200
+7 0 3241
+7 0 3241 0 0 1 0 0 1 0 0 3241 7
jcnd=2338/3241 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 1 0 0 1
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 2338 0 0 1 0 0 1
+3 0 2338
+4 0 2338
+4 0 2338 0 0 1 0 0 1 0 0 2338 7
jcnd=2116/2338 0x3877c7a1a4 0 
* 0 
+6 0 222
+3 0 222
+4 0 222
+4 0 222 0 0 0 0 0 0 0 0 222
+6 0 222
+3 0 222 0 222
+4 0 222 222
+6 0 222
+5 0 222 0 0 0 0 0 0 0 0 222
jcnd=222/222 +30 0 
* 0 
-11 0 2116 2116
+6 0 2116
+5 0 2116 0 0 0 0 0 0 0 0 2116 1
jcnd=2115/2116 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 894 237 190 8 2 0 8 2 0 184 26
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 3240 0 0 1 0 0 1
+3 0 3240
+3 0 3240
+3 0 3240
+4 0 3240
+3 0 3240
+4 0 3240 0 3240
+5 0 3240
+3 0 3240 0 3240
+4 0 3240 0 3240
+4 0 3240 0 3240
+5 0 3240
+3 0 3240
+3 0 3240
+3 0 3240
+3 0 3240
+4 0 3240
+4 0 3240 0 0 1 0 0 1
+4 0 3240 0 3240
+4 0 3240
+4 0 3240 0 3240
+5 0 3240 0 3240
+5 0 3240
+3 0 3240
+3 0 3240 0 3240
+5 0 3240
+5 0 3240
+3 0 3240 0 3240
+4 0 3240 0 3240
+4 0 3240
+6 0 3240 0 3240
+4 0 3240 0 3240
+5 0 3240 0 0 1 0 0 1
+3 0 3240
+3 0 3240
+3 0 3240
jump=3240 +87 0 
* 0 
+8 0 1387
+3 0 1387
+4 0 1387
+2 0 1387
+2 0 1387
+3 0 1387
+3 0 1387
+3 0 1387
+2 0 1387
+2 0 1387
+5 0 1387
+2 0 1387 1387
+4 0 1387
+3 0 1387
+4 0 1387 0 1387
+4 0 1387 0 1387 0 0 1 0 0 1
+8 0 1387
+7 0 1387 0 1387
+4 0 1387 0 1387 0 0 1 0 0 1
+4 0 1387 0 1387
+4 0 1387 0 0 0 0 0 0 0 0 1387
-38 0 1793
+3 0 1793
+4 0 1793 0 1793
+4 0 1793 0 1793
+8 0 1793
+7 0 1793 0 1793
+4 0 1793 0 1793
+4 0 1793 0 1793
+4 0 1793 0 0 0 0 0 0 0 0 1793
+6 0 6421 6421 0 1 0 0 1
+4 0 6421
+3 0 6421 0 0 0 0 0 0 0 0 6421 172
jcnd=3181/6421 0x3877c79ef0 0 
* 0 
+6 0 3240 3240
+4 0 3240 3240 0 0 1 0 0 1
+4 0 3240
+4 0 3240 0 0 0 0 0 0 0 0 3240
+6 0 3240 3240 0 1 1 0 1 1
+7 0 3240 0 0 0 0 0 0 0 0 3240 2
+6 0 3240
+4 0 3240
+7 0 3240 0 0 0 0 0 0 0 0 3240 6
jcnd=2330/3240 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 3221
+3 0 3221 0 3221
+4 0 3221 0 3221
+5 0 3221 0 0 0 0 0 0 0 0 3221 29
jcnd=41/3221 0x3877c7a090 0 
* 0 
+6 0 3180
+7 0 3180 0 0 0 0 0 0 0 0 3180 595
jcnd=1387/3180 0x3877c79c50 0 
* 0 
+6 0 1793 0 0 1 0 0 1
+3 0 1793
+4 0 1793
+4 0 1793 0 0 0 0 0 0 0 0 1793 524
jcnd=642/1793 0x3877c79db0 0 
* 0 
+6 0 1151
+3 0 1151
+4 0 1151
+2 0 1151
+2 0 1151
+3 0 1151
+3 0 1151
+8 0 1151
+3 0 1151
+2 0 1151
+2 0 1151
+4 0 1151 1151
+4 0 1151
+3 0 1151 0 0 1 0 0 1 0 0 1151 17
jcnd=1087/1151 0x3877c79e15 0 
* 0 
-36 0 642
+2 0 642
+2 0 642
+3 0 642
+3 0 642
+8 0 642
+3 0 642
+2 0 642
+2 0 642
+4 0 642 642
+4 0 642
+3 0 642 0 0 0 0 0 0 0 0 642
jcnd=642/642 0x3877c79e15 0 
* 0 
+6 0 64 64
+4 0 64
+4 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64 8
jcnd=24/64 +38 0 
* 0 
+2 0 40 40
+4 0 40 0 40
+4 0 40 0 40
+4 0 40 0 40
+4 0 40 0 40
+4 0 40
+3 0 40
jump=40 0x3877c79c73 0 
* 0 
+13 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=16/24 0x3877c79ee0 0 
* 0 
+6 0 8 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
-4 0 16 16
+4 0 16
jump=16 0x3877c79c73 0 
* 0 
+14 0 642 0 0 1 0 0 1
+3 0 642
+4 0 642
+4 0 642 0 0 0 0 0 0 0 0 642
+2 0 642
+3 0 642 0 0 1 0 0 1
+7 0 642
jump=642 0x3877c79d18 0 
* 0 
+78 0 1729 0 1729
+4 0 1729 0 1729
+4 0 1729
+3 0 1729
jump=1729 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=387/406 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+39 0 16 16
+4 0 16
jump=16 0x3877c79d9e 0 
* 0 
+12 0 3181 0 0 1 0 0 1
+7 0 3181
+3 0 3181 0 0 0 0 0 0 0 0 3181 14
jcnd=2318/3181 0x3877c7a0b0 0 
* 0 
+6 0 3141 3141 0 1 0 0 1
+4 0 3141
+3 0 3141
+3 0 3141
+2 0 3141
+4 0 3141
+3 0 3141
+3 0 3141
+2 0 3141
+2 0 3141
+2 0 3141
+2 0 3141 3141
+8 0 3141
+5 0 3141
+5 0 3141
+2 0 3141 0 0 0 0 0 0 0 0 3141
-2 0 1560
+2 0 1560 0 0 0 0 0 0 0 0 1560 2
jcnd=2/1560 +14 0 
* 0 
+2 0 4699
+2 0 4699 0 0 0 0 0 0 0 0 4699 47
jcnd=2003/4699 +64 0 
* 0 
+2 0 2696
+8 0 2696
+3 0 2696
+3 0 2696 0 0 0 0 0 0 0 0 2696 68
jcnd=641/2696 0x3877c79fc0 0 
* 0 
-6 0 1275
+3 0 1275
+3 0 1275 0 0 0 0 0 0 0 0 1275 11
jcnd=849/1275 0x3877c79fc0 0 
* 0 
+2 0 2481
+2 0 2481 2481
+8 0 2481
+2 0 2481 0 0 0 0 0 0 0 0 2481 30
jcnd=1273/2481 -20 0 
* 0 
+2 0 1208
+2 0 1208
+5 0 1208
+3 0 1208
+3 0 1208
+2 0 1208
+2 0 1208
+5 0 1208 0 0 0 0 0 0 0 0 1208
jcnd=2/1208 +14 0 
* 0 
+2 0 1206
+2 0 1206
+4 0 1206
+2 0 1206
+2 0 1206 0 0 0 0 0 0 0 0 1206 6
jcnd=1144/1206 -8 0 
* 0 
-8 0 14314
+4 0 14314
+2 0 14314
+2 0 14314 0 0 0 0 0 0 0 0 14314 859
jcnd=11410/14314 -8 0 
* 0 
-2 0 2003 0 0 1 0 0 1
+2 0 2003 0 0 0 0 0 0 0 0 2003 27
jcnd=1760/2003 -8 0 
* 0 
+2 0 3211 3211 0 0 21 0 0 21
+4 0 3211 0 0 1 0 0 1
+3 0 3211 0 0 0 0 0 0 0 0 3211 1464
jcnd=1651/3211 0x3877c7a1cf 0 
* 0 
+6 0 1560
+2 0 1560
+4 0 1560
+2 0 1560
+2 0 1560
+2 0 1560 0 1560
+8 0 1560
jump=1560 0x3877c79f30 0 
* 0 
+37 0 1490 1490 0 1 0 0 1
+5 0 1490 1490
+4 0 1490
+4 0 1490 1490
+5 0 1490 0 0 0 0 0 0 0 0 1490
jcnd=1490/1490 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 41 0 0 1 0 0 1
+7 0 41 0 41
+6 0 41
+3 0 41 0 0 0 0 0 0 0 0 41
jcnd=41/41 0x3877c79ace 0 
* 0 
+16 0 2318 2318
+4 0 2318
+4 0 2318
+2 0 2318
+5 0 2318 2318 0 1 4 0 1 4
+4 0 2318
+3 0 2318 0 0 0 0 0 0 0 0 2318 13
jcnd=2254/2318 0x3877c79f00 0 
* 0 
+6 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64 4
jcnd=24/64 0x3877c79f00 0 
* 0 
+6 0 40
+3 0 40 40
+4 0 40 40
+4 0 40
+3 0 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c7a650 0 
* 0 
+26 0 40 0 0 1 0 0 1
+3 0 40 40
+4 0 40
+3 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40 2
+6 0 40 40
+8 0 40 0 40
+4 0 40 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40 0 1 0 0 1
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 26
jcnd=40/40 0x3877c7a659 0 
* 0 
+6 0 40
+4 0 40 0 0 0 0 0 0 0 0 40 8
jcnd=16/40 0x3877c7a2e3 0 
* 0 
+6 0 24 24
+4 0 24
+7 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+4 0 24
+7 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a285 0 
* 0 
+31 0 2116 0 0 1 0 0 1
+3 0 2116 0 2116
+4 0 2116
jump=2116 0x3877c79b99 0 
* 0 
+36 0 1651 1651 0 1 1 0 1 1
+4 0 1651 1651
+4 0 1651
+3 0 1651 1651
+4 0 1651
+4 0 1651
+3 0 1651
+3 0 1651 1651
+4 0 1651 0 0 0 0 0 0 0 0 1651
+6 0 1651 1651
+4 0 1651 0 0 0 0 0 0 0 0 1651
+6 0 1651 1651 0 1 0 0 1
+8 0 1651 0 1651
+4 0 1651 0 1651
+4 0 1651 0 0 0 0 0 0 0 0 1651 12
jcnd=419/1651 +38 0 
* 0 
+2 0 1232 1232 0 0 2 0 0 2
+4 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
+2 0 1232 1232
+5 0 1232 0 0 0 0 0 0 0 0 1232
+6 0 1232 1232
+4 0 1232 0 1232
+4 0 1232 1232
+4 0 1232 0 1232
+4 0 1232
+4 0 1232 0 0 0 0 0 0 0 0 1232
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 1630 1630
+4 0 1630 1630 0 1 0 0 1
+4 0 1630 0 0 0 0 0 0 0 0 1630
+6 0 1630
+4 0 1630
+7 0 1630 0 1630 0 0 7 0 0 7
+4 0 1630 0 1630
+4 0 1630 0 1630
+4 0 1630 0 1630
+4 0 1630 0 0 0 0 0 0 0 0 1630 4
jcnd=1164/1630 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 1164
+7 0 1164 0 0 0 0 0 0 0 0 1164 4
jcnd=640/1164 +18 0 
* 0 
+2 0 531 0 531 0 0 1 0 0 1
+8 0 531 0 531
+8 0 531
+7 0 531 0 531 0 0 2 0 0 2
+4 0 531
+3 0 531
+3 0 531
+4 0 531
+3 0 531
+4 0 531
+3 0 531
+3 0 531
+4 0 531 0 531
+4 0 531 0 531
+4 0 531
jump=531 +71 0 
* 0 
-46 0 1123 0 0 1 0 0 1
+7 0 1123 0 1123
+4 0 1123
+3 0 1123
+3 0 1123
+4 0 1123
+3 0 1123
+4 0 1123
+3 0 1123
+3 0 1123
+4 0 1123 0 1123
+4 0 1123 0 1123 0 0 1 0 0 1
+4 0 1123
jump=1123 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 37
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37 2
jcnd=37/37 +7 0 
* 0 
+7 0 1691
+4 0 1691 0 0 1 0 0 1
+3 0 1691
+3 0 1691 0 1691
cfn=(104)
calls=1691 0x3877c77180 0 
* 0 6764 3382 0 1 0 0 1 0 0 1691
+5 0 1691
+3 0 1691
jump=1691 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1490 0 0 1 0 0 1
+7 0 1490
+2 0 1490
+4 0 1490
+3 0 1490
+3 0 1490 0 1490
+5 0 1490
+3 0 1490
+4 0 1490
+3 0 1490 0 0 1 0 0 1
+4 0 1490
+4 0 1490
+3 0 1490
+4 0 1490 0 1490
+4 0 1490 0 1490 0 0 53 0 0 53
+4 0 1490
+3 0 1490
+3 0 1490 0 1490
cfn=(104)
calls=1490 0x3877c77180 0 
* 0 5960 2980 0 0 0 0 0 0 0 1490 2
+5 0 1490
+3 0 1490
jump=1490 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 40 40 0 1 0 0 1
+4 0 40
jump=40 0x3877c7a10e 0 
* 0 
+5 0 40 40
+5 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 3346 0 3346 1 0 0 1
+5 0 3346 0 3346
+5 0 3346
+3 0 3346 0 3346
+5 0 3346
+4 0 3346 3346 0 0 1 0 0 1
+7 0 3346 3346 0 0 1 0 0 1
+3 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346 2
+6 0 3346 3346 0 0 1 0 0 1
+7 0 3346 3346 0 1 1 0 1 1
+4 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346
+2 0 3346 3346 0 0 1 0 0 1
+3 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346
jcnd=3346/3346 +97 0 
* 0 
+18 0 3346
+3 0 3346
+3 0 3346 0 3346
cfn=(38)
calls=3346 0x3877c79a00 0 
* 0 774090 97806 117009 47 37 86 47 37 86 114529 4453
+5 0 3346
+3 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346
+2 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346
+2 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346 31
+2 0 3346 3346
+7 0 3346 0 0 0 0 0 0 0 0 3346
jcnd=3346/3346 +13 0 
* 0 
+13 0 3346 0 3346
+2 0 3346 0 0 0 0 0 0 0 0 3346 14
+6 0 3346
+3 0 3346 3346
+4 0 3346 3346
+5 0 3346 3346
+5 0 3346
+4 0 3346 3346
+1 0 3346 0 0 1 0 0 1
+5 0 3346 3346 0 0 1 0 0 1
+7 0 3346 0 0 0 0 0 0 0 0 3346
jcnd=3346/3346 +14 0 
* 0 
+14 0 3346 0 3346 1 0 0 1
+3 0 3346 0 0 0 0 0 0 0 0 3346
+6 0 3346
jump=3346 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 3346 0 3346 1 0 0 1
+2 0 3346
+3 0 3346
+3 0 3346 0 3346
+2 0 3346
+3 0 3346 0 3346
+1 0 3346
+3 0 3346 0 3346
+1 0 3346
+3 0 3346
+4 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346
+6 0 3346
+4 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346 7
jcnd=10/3346 0x3877c838d1 0 
* 0 
+2 0 3336
+3 0 3336
+3 0 3336
+3 0 3336
+3 0 3336
+3 0 3336 0 0 0 0 0 0 0 0 3336
jcnd=3336/3336 +41 0 
* 0 
+41 0 3336 0 0 1 0 0 1
+3 0 3336 0 0 0 0 0 0 0 0 3336
jcnd=3336/3336 0x3877c839c0 0 
* 0 
+24 0 3336
+3 0 3336
+4 0 3336
+3 0 3336
+3 0 3336
+3 0 3336
+3 0 3336
+3 0 3336 0 0 0 0 0 0 0 0 3336 1664
jcnd=1676/3336 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1670
+10 0 1670 1670 0 0 2 0 0 2
+3 0 1670
+4 0 1670 0 1670
+3 0 1670
+4 0 1670
+4 0 1670 0 0 0 0 0 0 0 0 1670
jcnd=1670/1670 -18 0 
* 0 
-18 0 5066 5066
+3 0 5066
+4 0 5066 0 5066
+3 0 5066
+4 0 5066
+4 0 5066 0 0 0 0 0 0 0 0 5066 11
jcnd=3396/5066 -18 0 
* 0 
+2 0 3346
+4 0 3346
+3 0 3346 3346
+1 0 3346 3346
+1 0 3346 3346
+2 0 3346 3346 0 1 0 0 1
+2 0 3346 3346
0x3877c839c0 0 3336 0 0 1 0 0 1
+3 0 3336
+3 0 3336
+3 0 3336
+4 0 3336 0 3336 0 0 1 0 0 1
cfn=(284)
calls=3336 0x3877c89b20 0 
* 0 1860606 701572 694900 6 1 153 6 1 153 88742 2868 3336 415
+5 0 3336
jump=3336 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 3346 3346 0 1 1 0 1 1
+7 0 3346 3346 0 0 1 0 0 1
+3 0 3346
+3 0 3346 0 0 1 0 0 1 0 0 3346
+6 0 3346
+3 0 3346 0 0 0 0 0 0 0 0 3346 2
+6 0 3346 3346 0 0 1 0 0 1
+4 0 3346
+4 0 3346
+2 0 3346 0 0 0 0 0 0 0 0 3346 2
+2 0 3346
+2 0 3346
+7 0 3346 0 0 0 0 0 0 0 0 3346
jcnd=3346/3346 +14 0 
* 0 
+14 0 3346
+2 0 3346
cfn=(170)
calls=3346 0x3877c78650 0 
* 0 332368 88419 50625 21 2 0 21 2 0 80494 1576

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=11/12 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 58738216 24805352 13844545 245 166 299 245 166 299 1424641 13152 20066 415
