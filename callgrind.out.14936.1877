version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1877


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2424381817 - 2425591904
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1360 0 0 1 0 0 1
+3 0 1360 0 0 0 0 0 0 0 0 1360
+2 0 1360
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1360 0x3877c7b8b0 0 
* 0 164923 43345 23799 19 6 0 19 6 0 40715 494
* 0 1360 1360 0 1 1 0 1 1 0 0 0 1360

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1360 0 1360 1 0 0 1
+1 0 1360
+5 0 1360
+3 0 1360 0 1360
+1 0 1360
+4 0 1360 0 0 1 0 0 1
+3 0 1360
+4 0 1360
+3 0 1360 0 1360 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1360 0x3877c7aa50 0 
* 0 418584 60402 62744 48 40 53 48 40 53 71977 3211
* 0 1360 1360 0 1 1 0 1 1 0 0 0 1360
+5 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360
jcnd=1360/1360 +96 0 
* 0 
+96 0 1360 0 0 1 0 0 1
+4 0 1360 1360
+1 0 1360 1360
+1 0 1360 1360

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 752 0 752
+1 * 752
+3 * 752 0 752
+4 +1 752 752
+4 * 752 752
+1 * 752 752

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1344 0 1344 1 0 0 1
+1 * 1344
+3 * 1344 0 1344
+4 +1 1344 1344 0 1 0 0 1
+4 * 1344 1344
+1 * 1344 1344

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 752 0 752
+1 * 752
+3 * 752 0 752 0 0 1 0 0 1
+4 +1 752 752
+4 * 752 752
+1 * 752 752

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1344 0 1344 1 0 0 1
+1 * 1344
+3 * 1344
+4 * 1344 0 1344
+4 +1 1344
+4 * 1344
+3 * 1344 0 1344
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1344 0x404ffe 790 
* * 8064 4032 2688 1 0 0 1
+5 * 1344 1344
+3 * 1344 1344
+1 * 1344 1344

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1344 0 1344 1 0 0 1
+1 * 1344
+3 * 1344 0 1344
+4 +1 1344 1344
+4 * 1344 1344
+1 * 1344 1344

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1344 0 1344 1 0 0 1
+1 * 1344
+3 * 1344
+4 * 1344 0 1344
+4 +1 1344
+4 * 1344
+3 * 1344 0 1344 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1344 0x40500c 790 
* * 8064 4032 2688 1 0 0 1
+5 * 1344 1344
+3 * 1344 1344
+1 * 1344 1344

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 672 0 672
+1 * 672
+3 * 672 0 672
+4 * 672 0 672
+4 * 672 672
+4 * 672 672
+1 * 672 672

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(102) __gnu_cxx::new_allocator<float>::max_size() const
0x4048de 113 696 0 696 1 0 0 1
+1 * 696
+3 * 696 0 696
+4 +1 696
+10 * 696 696
+1 * 696 696

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 336 0 336
+1 * 336
+3 * 336
+4 * 336 0 336
+4 * 336 0 336
+4 * 336 0 336
+4 +1 336 336
+4 * 336
+3 * 336
+5 * 336 0 336
cfi=(16)
cfn=(226)
calls=336 0x402d61 -20 
* * 2352 1008 1008
+5 * 336
+3 * 336 0 0 0 0 0 0 0 0 336
+2 * 336 336
+4 * 336 336 0 0 22 0 0 22
+2 * 336 0 336 0 0 13 0 0 13
+2 * 336 336
+1 * 336 336

fn=(28) __gnu_cxx::new_allocator<int>::max_size() const
0x404992 113 696 0 696 1 0 0 1
+1 * 696
+3 * 696 0 696
+4 +1 696
+10 * 696 696
+1 * 696 696

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 672 0 672
+1 * 672
+3 * 672 0 672
+4 * 672 672
+1 * 672 672

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 336 0 336
+1 * 336
+3 * 336
+4 * 336 0 336
+4 * 336 0 336
+4 * 336 0 336
+4 +1 336 336
+4 * 336
+3 * 336
+5 * 336 0 336
cfi=(16)
cfn=(226)
calls=336 0x402d61 -20 
* * 2352 1008 1008
+5 * 336
+3 * 336 0 0 0 0 0 0 0 0 336 2
+2 * 336 336
+4 * 336 336 0 0 22 0 0 22
+2 * 336 0 336 0 0 4 0 0 4
+2 * 336 336
+1 * 336 336

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680
+3 * 680 0 680
cob=(5)
cfi=(8)
cfn=(164)
calls=680 0x387e4bb2f0 0 
* * 86292 22623 12321 21 4 0 21 4 0 21274 199 680
* * 680 680 0 1 1 0 1 1 0 0 0 680
+5 * 680 680
+1 * 680 680

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +1 680 680
+4 * 680
+3 * 680 0 680
cob=(5)
cfi=(8)
cfn=(164)
calls=680 0x387e4bb2f0 0 
* * 84071 22082 11478 0 3 0 0 3 0 20801 295 680
* * 680 680 0 0 0 0 0 0 0 0 0 680
+5 * 680 680
+1 * 680 680

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680
+3 * 680 0 680
cfn=(102)
calls=680 0x4048de +12 
* * 4080 1360 1360 1 0 0 1
+5 * 680 680
+4 * 680 0 0 1 0 0 1
+3 * 680
+2 * 680 0 0 0 0 0 0 0 0 680
jcnd=680/680 +7 +3 
* * 
+7 +3 680 680
+4 * 680
+4 * 680
+3 * 680 0 680
cob=(5)
cfi=(8)
cfn=(32)
calls=680 0x387e4bd0b0 0 
* * 220777 33115 31731 30 17 33 30 17 33 37339 1651 680
* * 680 680 0 0 0 0 0 0 0 0 0 680
+5 +1 680 680
+1 * 680 680

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 672 0 672 1 0 0 1
+1 * 672
+3 * 672 0 672 0 0 1 0 0 1
+4 * 672 0 672
+4 * 672 672
+1 * 672 672

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 672 0 672 1 0 0 1
+1 * 672
+3 * 672 0 672
+4 * 672 0 672
+4 * 672 672
+1 * 672 672

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 672 0 672
+1 * 672
+3 * 672 0 672
+4 * 672 672
+1 * 672 672

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680 1 0 0 1
+4 +2 680 680
+4 * 680
+3 * 680 0 680
cfn=(28)
calls=680 0x404992 +12 
* * 4080 1360 1360 1 0 0 1
+5 * 680 680
+4 * 680
+3 * 680
+2 * 680 0 0 0 0 0 0 0 0 680
jcnd=680/680 +7 +3 
* * 
+7 +3 680 680
+4 * 680
+4 * 680
+3 * 680 0 680
cob=(5)
cfi=(8)
cfn=(32)
calls=680 0x387e4bd0b0 0 
* * 219567 32727 35093 22 24 21 22 24 21 35998 1560 680
* * 680 680 0 1 1 0 1 1 0 0 0 680
+5 +1 680 680
+1 * 680 680

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=672 0x404484 107 
* * 339594 113252 109224 25 3 3 25 3 3 12872 853 1340 167
+5 * 672 672
+1 * 672 672

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672 0 1 0 0 1
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=672 0x404a36 450 
* * 320778 106532 102504 24 3 3 24 3 3 12872 853 1340 167
+5 * 672 672
+1 * 672 672

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=672 0x40439c 107 
* * 339594 113252 109224 7 1 19 7 1 19 12872 771 1340
+5 * 672 672
+1 * 672 672

fn=(116)
0x40439c 107 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +10 672 672
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=672 0x4047d7 -26 
* * 330186 109892 105864 7 1 19 7 1 19 12872 771 1340
+5 +1 672 672
+1 * 672 672

fn=(118)
0x4047d7 91 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=672 0x4049e2 450 
* * 320778 106532 102504 7 1 19 7 1 19 12872 771 1340
+5 * 672 672
+1 * 672 672

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +10 672 672
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(52)
calls=672 0x404829 -26 
* * 330186 109892 105864 25 3 3 25 3 3 12872 853 1340 167
+5 +1 672 672
+1 * 672 672

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 672 0 672 1 0 0 1
+1 * 672
+3 * 672 0 672
+1 * 672
+4 * 672 0 672
+4 +2 672 672
+4 * 672 672
+4 * 672
+3 * 672 672
+4 * 672 672
+3 * 672
+3 * 672
+3 * 672
+4 * 672
+3 * 672 672
+4 * 672 672
+3 -1 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=672 0x403d98 +11 
* * 102004 28578 18084 1 3 0 1 3 0 21270 286 1344
+5 +1 672 672
+4 * 672
+3 * 672 0 672
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=672 0x403296 -82 
* * 15456 5376 5376 1 0 0 1
+5 * 672
jump=672 +28 * 
* * 
+28 * 672
+4 * 672 672
+1 * 672 672
+1 * 672 672

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2720 0 2720 1 0 0 1
+1 * 2720
+3 * 2720 0 2720 0 0 1 0 0 1
+4 +1 2720 2720
+4 * 2720 2720 0 1 1 0 1 1
+4 * 2720
+3 * 2720 2720
+4 * 2720 2720
+3 * 2720
+3 * 2720
+3 * 2720
+4 * 2720 2720
+1 * 2720 2720

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=672 0x404236 -14 
* * 245678 41125 42800 26 23 15 26 23 15 37012 1516 1344
+5 * 672 672
+4 * 672 0 672
+3 +1 672 672
+4 * 672 672 0 1 0 0 1
+3 * 672 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+3 * 672 672
+4 * 672
+4 * 672
+3 * 672 672
+4 * 672 0 672
+4 +1 672 672
+1 * 672 672

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672
+4 * 672 672 0 1 0 0 1
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=672 0x403fbe -14 
* * 245749 41234 39217 13 6 28 13 6 28 38122 1591 1344
+5 * 672 672
+4 * 672 0 672
+3 +1 672 672
+4 * 672 672
+3 * 672 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+3 * 672 672
+4 * 672
+4 * 672
+3 * 672 672
+4 * 672 0 672
+4 +1 672 672
+1 * 672 672

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 336 0 336
+1 * 336
+3 * 336 0 0 1 0 0 1
+4 * 336 0 336
+4 * 336 0 336
+4 +2 336 336
+4 * 336 336
+4 * 336 336
+4 * 336 336
+4 * 336
+3 * 336 0 0 0 0 0 0 0 0 336
jcnd=8/336 +51 +10 
* * 
+2 +3 328 328
+4 * 328 328
+4 * 328 328
+4 -1 328 328
+4 * 328
+3 * 328
+3 * 328 0 328
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=328 0x4036b1 215 
* * 12464 4264 4592 0 21 9 0 21 9 328
+5 +2 328 328
+4 * 328 328
+4 * 328
+4 * 328 328
+4 * 328 0 328
+4 * 328
jump=328 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11910 3694 3228 20 3 29 20 3 29 705 65 47
+5 +2 336 336
+1 * 336 336

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368 0 1368 1 0 0 1
+4 +1 1368 1368
+4 * 1368 1368
+1 * 1368 1368

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+3 * 672 0 672
+4 * 672
+4 * 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=672 0x404380 726 
* * 6720 3360 2688
+5 * 672 672
+4 * 672 672
+1 * 672 672

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 672 0 672
+1 * 672
+3 * 672 0 672
+1 * 672
+4 * 672 0 672 1 0 0 1
+4 +2 672 672
+4 * 672
+3 * 672 0 672
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=672 0x40325e 113 
* * 4032 2016 1344
+5 * 672
+3 * 672 672
+4 * 672 672
+4 * 672 672
+4 * 672 672
+3 -1 672
+3 * 672
+3 * 672 0 672
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=672 0x40326c 148 
* * 20832 6720 8064 4 0 0 4
+5 +1 672 672
+4 * 672
+3 * 672 0 672
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=672 0x4031ec 159 
* * 138530 41904 27666 25 5 0 25 5 0 21752 194 1344
+5 * 672
jump=672 +28 * 
* * 
+28 * 672 0 0 1 0 0 1
+4 * 672 672
+1 * 672 672
+1 * 672 672

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+5 * 680 0 0 0 0 0 0 0 0 680
+2 +1 680 680
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(5)
cfn=(160)
calls=680 0x4044d6 -65 
* * 94452 25343 15721 22 5 0 22 5 0 21274 199 1360
+5 +1 680 680
+1 * 680 680

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 672 0 672
+1 * 672
+3 * 672 0 672
+1 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=672 0x4043ca -45 
* * 24192 8736 9408 4 0 4 4 0 4
+5 +1 672 672 0 1 0 0 1
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(20)
calls=672 0x404412 +43 
* * 262478 49189 47504 27 23 15 27 23 15 37012 1516 1344
+5 * 672
jump=672 +28 * 
* * 
+28 * 672
+4 * 672 672
+1 * 672 672
+1 * 672 672

fn=(14)
0x4043ca 90 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672 0 0 1 0 0 1
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=672 0x404804 +24 
* * 12096 4032 4704 2 0 1 2 0 1
+5 * 672 672
+4 * 672 0 672 0 0 2 0 0 2
+7 * 672 672
+4 * 672 0 672 1 0 0 1
+8 * 672 672
+4 * 672 0 672
+8 +1 672 672
+1 * 672 672

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 672 0 672 1 0 0 1
+1 * 672
+3 * 672 0 672
+2 * 672 0 672
+2 * 672 0 672
+1 * 672 0 0 1 0 0 1
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672
+4 * 672
+3 * 672 0 672
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=672 0x4039fc 117 
* * 4032 2016 1344 2 0 0 2
+5 * 672
+3 * 672 0 672
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=672 0x4039ed -88 
* * 4032 2016 1344
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(2)
calls=672 0x402d74 645 
* * 8736 4032 1344
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672
+3 * 672
+3 * 672 0 672 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=672 0x403a0a 134 
* * 301525 62738 58033 20 6 28 20 6 28 38122 1591 1344
+5 +4 672 672
+4 * 672
+3 * 672 0 672
cfn=(106)
calls=672 0x40325e 113 
* * 4032 2016 1344 1 0 0 1
+5 * 672
+3 * 672 672
+4 * 672 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=672 0x403a98 565 
* * 16800 6720 5376 2 0 0 2
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(112)
calls=672 0x403a68 547 
* * 16800 6720 5376
+5 * 672
+3 * 672
+3 * 672
+3 * 672
+3 * 672 0 672
cfi=(11)
cfn=(114)
calls=672 0x403ac9 -60 
* * 349674 116612 113256 7 1 19 7 1 19 12872 771 1340
+5 -3 672 672
+4 * 672 0 672
+4 * 672
jump=672 +28 +4 
* * 
+28 +4 672
+4 * 672 672
+1 * 672 672
+2 * 672 672
+2 * 672 672
+1 * 672 672

fn=(188)
0x403d98 171 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+5 * 680 0 0 0 0 0 0 0 0 680 8
+2 +1 680 680
+4 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfi=(5)
cfn=(190)
calls=680 0x40452a -65 
* * 92231 24802 14878 0 3 0 0 3 0 20801 295 1360
+5 +1 680 680
+1 * 680 680

fn=(22)
0x404236 167 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680 1 0 0 1
+4 * 680 0 680
+4 0 680 680
+5 0 680 0 0 0 0 0 0 0 0 680
+2 0 680 680
+4 0 680 680
+4 0 680
+5 0 680
+3 0 680
+3 0 680 0 680
fi=(6) ???
cfi=(5)
cfn=(26)
calls=680 0x404730 99 
* 0 237247 38167 40533 26 25 21 26 25 21 36678 1560 1360
+5 0 680
fi=(6)
jump=680 +7 0 
* 0 
+7 0 680 680
+1 0 680 680

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+4 * 672 0 672
+4 * 672
+4 * 672 0 0 1 0 0 1
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=672 0x404468 726 
* * 6720 3360 2688 1 0 0 1
+5 * 672 672
+4 * 672 672
+1 * 672 672

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+3 * 672 0 672
+4 * 672
+4 * 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(10)
cfn=(44)
calls=672 0x404468 726 
* * 6720 3360 2688
+5 * 672 672
+4 * 672 672
+1 * 672 672

fn=(86)
0x403a0a 134 672 0 672
+1 * 672
+3 * 672 0 672
+1 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=672 0x4042e2 -45 
* * 24192 8736 9408 5 0 0 5
+5 +1 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672 1 0 0 1
cfn=(94)
calls=672 0x40432a +43 
* * 262549 49298 43921 14 6 28 14 6 28 38122 1591 1344
+5 * 672
jump=672 +28 * 
* * 
+28 * 672
+4 * 672 672
+1 * 672 672
+1 * 672 672

fn=(88)
0x4042e2 90 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=672 0x4047b2 +24 
* * 12096 4032 4704 3 0 0 3
+5 * 672 672
+4 * 672 0 672
+7 * 672 672
+4 * 672 0 672
+8 * 672 672
+4 * 672 0 672
+8 +1 672 672
+1 * 672 672

fn=(156)
0x4031ec 159 672 0 672 1 0 0 1
+1 * 672
+3 * 672 0 672
+1 * 672
+4 * 672 0 672
+4 +2 672 672
+4 * 672 672 0 1 0 0 1
+4 * 672
+3 * 672 672
+4 * 672 672
+3 * 672
+3 * 672
+3 * 672
+4 * 672
+3 * 672 672
+4 * 672 672
+3 -1 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(158)
calls=672 0x403ce6 +11 
* * 104258 29136 18930 22 5 0 22 5 0 21752 194 1344
+5 +1 672 672
+4 * 672
+3 * 672 0 672
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=672 0x4031b8 -82 
* * 15456 5376 5376 1 0 0 1
+5 * 672
jump=672 +28 * 
* * 
+28 * 672
+4 * 672 672
+1 * 672 672
+1 * 672 672

fn=(172)
0x4031b8 79 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 672
+4 * 672
+3 * 672 0 672
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=672 0x403ccc +42 
* * 9408 3360 3360
+5 * 672 672
+1 * 672 672

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1376 0 1376 1 0 0 1
+1 * 1376
+3 * 1376 0 1376
+4 +1 1376 1376
+4 * 1376 1376 0 0 2 0 0 2
+4 * 1376
+3 * 1376 1376
+4 * 1376 1376
+3 * 1376
+3 * 1376
+3 * 1376
+4 * 1376 1376
+1 * 1376 1376

fn=(106)
0x40325e 113 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368 0 1368
+4 +1 1368 1368
+4 * 1368 1368
+1 * 1368 1368

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688 0 0 1 0 0 1
+4 +1 688 688
+4 * 688 688
+1 * 688 688

fn=(82)
0x4039fc 117 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688 1 0 0 1
+4 +1 688 688
+4 * 688 688
+1 * 688 688

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 336 0 336
+1 * 336
+3 * 336
+4 * 336 0 336
+4 * 336 0 336
+4 +2 336 336
+4 * 336 336
+4 * 336 336
+4 * 336 336
+4 * 336
+3 * 336 0 0 0 0 0 0 0 0 336 9
jcnd=8/336 +51 +10 
* * 
+2 +3 328 328
+4 * 328 328
+4 * 328 328
+4 -1 328 328
+4 * 328
+3 * 328
+3 * 328 0 328
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=328 0x403373 215 
* * 12464 4264 4592 0 21 3 0 21 3 328 2
+5 +2 328 328
+4 * 328 328
+4 * 328
+4 * 328 328
+4 * 328 0 328
+4 * 328
jump=328 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 13016 3956 3446 45 12 9 45 12 9 927 70 47
+5 +2 336 336
+1 * 336 336

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 672 0 672 1 0 0 1
+1 * 672
+3 * 672 0 672
+2 * 672 0 672
+2 * 672 0 672
+1 * 672
+4 * 672 0 672 1 0 0 1
+4 * 672 0 672
+4 +2 672 672
+4 * 672
+3 * 672 0 672
cfn=(6)
calls=672 0x403b08 117 
* * 4032 2016 1344 1 0 1 1 0 1
+5 * 672
+3 * 672 0 672
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=672 0x403afa -88 
* * 4032 2016 1344 1 0 0 1
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(10)
calls=672 0x402f54 645 
* * 8736 4032 1344 1 1 0 1 1
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672
+3 * 672
+3 * 672 0 672
cfn=(12)
calls=672 0x403b16 134 
* * 301454 62629 61616 32 23 19 32 23 19 37012 1516 1344
+5 +4 672 672 0 1 0 0 1
+4 * 672
+3 * 672 0 672
cfn=(40)
calls=672 0x40333c 113 
* * 4032 2016 1344 2 0 0 2
+5 * 672
+3 * 672 672
+4 * 672 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(42)
calls=672 0x403ba4 565 
* * 16800 6720 5376 3 0 0 3
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(46)
calls=672 0x403b74 547 
* * 16800 6720 5376
+5 * 672
+3 * 672
+3 * 672
+3 * 672
+3 * 672 0 672 1 0 0 1
cfi=(11)
cfn=(48)
calls=672 0x403bd5 -60 
* * 349674 116612 113256 26 3 3 26 3 3 12872 853 1340 167
+5 -3 672 672
+4 * 672 0 672
+4 * 672
jump=672 +28 +4 
* * 
+28 +4 672
+4 * 672 672
+1 * 672 672
+2 * 672 672
+2 * 672 672
+1 * 672 672

fn=(108)
0x403a98 565 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+4 * 672 0 672
+4 * 672
+4 * 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(10)
cfn=(110)
calls=672 0x404380 726 
* * 6720 3360 2688 1 0 0 1
+5 * 672 672
+4 * 672 672
+1 * 672 672

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 672 0 672
+1 * 672
+3 * 672 0 672
+1 * 672
+4 * 672 0 672 1 0 0 1
+4 +2 672 672
+4 * 672
+3 * 672 0 672
cfn=(40)
calls=672 0x40333c 113 
* * 4032 2016 1344
+5 * 672
+3 * 672 672
+4 * 672 672
+4 * 672 672
+4 * 672 672
+3 -1 672
+3 * 672
+3 * 672 0 672
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=672 0x40334a 148 
* * 20832 6720 8064 2 0 0 2
+5 +1 672 672
+4 * 672
+3 * 672 0 672
cfn=(186)
calls=672 0x4032ca 159 
* * 136276 41346 26820 3 3 0 3 3 0 21270 286 1344
+5 * 672
jump=672 +28 * 
* * 
+28 * 672 0 0 1 0 0 1
+4 * 672 672
+1 * 672 672
+1 * 672 672

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 680 0 680 1 0 0 1
+1 * 680 0 0 1 0 0 1
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 0 680 680
+5 0 680 0 0 0 0 0 0 0 0 680
+2 0 680 680
+4 0 680 680
+4 0 680
+5 0 680
+3 0 680
+3 0 680 0 680
fi=(6)
cfi=(5)
cfn=(100)
calls=680 0x40461a 99 
* 0 238457 38555 37171 33 17 33 33 17 33 38019 1651 1360
+5 0 680
fi=(6)
jump=680 +7 0 
* 0 
+7 0 680 680
+1 0 680 680

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 171528 0 171528
+1 * 171528
+3 * 171528 0 171528
+4 * 171528 0 171528
+4 +1 171528 171528
+4 * 171528 171528
+3 * 171528 171528
+4 * 171528
+4 * 171528
+3 * 171528 171528
+1 * 171528 171528

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 171528 0 171528
+1 * 171528
+3 * 171528 0 171528 1 0 0 1
+4 * 171528 0 171528
+4 +1 171528 171528
+4 * 171528 171528
+3 * 171528 171528
+4 * 171528
+4 * 171528
+3 * 171528 171528
+1 * 171528 171528

fn=(192)
0x403296 79 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 672
+4 * 672
+3 * 672 0 672
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=672 0x403d7e +42 
* * 9408 3360 3360 1 0 0 1
+5 * 672 672
+1 * 672 672

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(54)
0x404a36 450 672 0 672
+1 * 672
+3 * 672 0 672
+1 * 672
+4 * 672 0 672 1 0 0 1
+4 * 672 0 672
+4 * 672 0 672
+4 +10 672 672
+4 * 672
+3 * 672 0 672
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=672 0x404c38 288 
* * 10080 4032 3360 3 0 0 3
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(56)
calls=672 0x404c38 288 
* * 10080 4032 3360
+5 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=672 0x404c52 -36 
* * 285834 94436 90408 20 3 3 20 3 3 12872 853 1340 167
+5 +1 672
+4 * 672 672
+1 * 672 672
+1 * 672 672

fn=(60)
0x404c52 424 672 0 672
+1 * 672
+3 * 672 0 672
+2 * 672 0 672
+1 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +4 672 672
+4 * 672
+3 * 672 0 672
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=672 0x40492d 277 
* * 10080 4032 3360 2 0 0 2
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=672 0x404d9d 277 
* * 16800 6048 5376 2 0 1 2 0 1
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(66)
calls=672 0x404d9d 277 
* * 16800 6048 5376
+5 * 672
+3 * 672
+3 * 672
+3 * 672 0 672
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=672 0x404db7 -49 
* * 223338 73604 69576 15 3 2 15 3 2 12872 853 1340 167
+5 +1 672
+4 * 672 672
+1 * 672 672
+2 * 672 672
+1 * 672 672

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 720 0 720 1 0 0 1
+1 * 720
+3 * 720
+4 * 720 0 720
+4 +1 720 720
+4 * 720
+3 * 720 0 720 1 0 0 1
cfi=(13)
cfn=(64)
calls=720 -33 -66 
* * 4320 2160 1440
+5 * 720 720
+1 * 720 720

fn=(66)
0x404d9d 277 1344 0 1344
+1 * 1344
+3 * 1344
+4 * 1344 0 1344
+4 +1 1344 1344
+4 * 1344
+3 * 1344 0 1344
cfi=(13)
cfn=(68)
calls=1344 0x404f1a -58 
* * 21504 8064 6720 2 0 1 2 0 1
+5 * 1344 1344
+1 * 1344 1344

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 672 0 672
+1 * 672
+3 * 672 0 672
+1 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +10 672 672
+4 * 672
+3 * 672 0 672
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=672 0x404bc6 288 
* * 10080 4032 3360 3 0 0 3
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(122)
calls=672 0x404bc6 288 
* * 10080 4032 3360
+5 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=672 0x404be0 -36 
* * 285834 94436 90408 4 1 19 4 1 19 12872 771 1340
+5 +1 672
+4 * 672 672
+1 * 672 672
+1 * 672 672

fn=(128)
0x404878 277 720 0 720
+1 * 720
+3 * 720
+4 * 720 0 720 1 0 0 1
+4 +1 720 720
+4 * 720
+3 * 720 0 720
cfi=(13)
cfn=(130)
calls=720 -33 -66 
* * 4320 2160 1440 0 0 1 0 0 1
+5 * 720 720
+1 * 720 720

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1344 0 1344
+1 * 1344
+3 * 1344
+4 * 1344 0 1344
+4 +1 1344 1344
+4 * 1344
+3 * 1344 0 1344
cfi=(13)
cfn=(134)
calls=1344 0x404e98 -58 
* * 21504 8064 6720 2 0 0 2
+5 * 1344 1344
+1 * 1344 1344

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +8 672 0 672
+4 +3 672 672
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=672 0x404eb5 -22 
* * 213258 70244 65544 1 1 19 1 1 19 12872 771 1340
+5 +1 672 672
+1 * 672 672

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1344 0 1344 1 0 0 1
+1 * 1344
+3 * 1344
+4 * 1344 0 1344
+4 +1 1344 1344
+4 * 1344
+3 * 1344 0 1344
cfi=(13)
cfn=(124)
calls=1344 0x404d36 -77 
* * 8064 4032 2688 2 0 0 2
+5 * 1344 1344
+1 * 1344 1344

fn=(56)
0x404c38 288 1344 0 1344 1 0 0 1
+1 * 1344
+3 * 1344
+4 * 1344 0 1344 1 0 0 1
+4 +1 1344 1344
+4 * 1344
+3 * 1344 0 1344
cfi=(13)
cfn=(58)
calls=1344 0x404d8f -77 
* * 8064 4032 2688 1 0 0 1
+5 * 1344 1344
+1 * 1344 1344

fn=(74)
0x404f37 368 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688 1 0 0 1
+4 * 688 0 688
+4 * 688 0 688
+4 +2 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688
+4 * 688 0 688
+4 +1 688 688
+5 * 688 0 0 0 0 0 0 0 0 688
jcnd=8/688 +33 +2 
* * 
+2 +1 680 680
+4 * 680
+8 * 680 680
+4 * 680 680
+4 * 680
+3 * 680 0 0 1 0 0 1
+3 * 680 0 680 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=680 0x3877c83840 0 
* * 195564 63168 61813 11 2 20 11 2 20 12284 857 675 167
* * 680 680 0 1 1 0 1 1 0 0 0 680
+5 +1 688 688
+4 * 688
+8 * 688 688
+4 * 688
+3 +1 688 688
+1 * 688 688

fn=(140)
0x404eb5 368 688 0 688
+1 * 688
+3 * 688
+4 * 688 0 688 1 0 0 1
+4 * 688 0 688
+4 * 688 0 688 0 0 1 0 0 1
+4 +2 688 688
+4 * 688 688
+4 * 688
+3 * 688
+3 * 688
+4 * 688 0 688
+4 +1 688 688
+5 * 688 0 0 0 0 0 0 0 0 688
jcnd=8/688 +33 +2 
* * 
+2 +1 680 680
+4 * 680
+8 * 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cob=(2)
cfi=(9)
cfn=(78)
calls=680 0x3877c83840 0 
* * 195564 63168 61813 0 1 20 0 1 20 12284 776 675
* * 680 680 0 0 0 0 0 0 0 0 0 680
+5 +1 688 688
+4 * 688
+8 * 688 688
+4 * 688
+3 +1 688 688
+1 * 688 688

fn=(72)
0x404db7 379 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672 1 0 0 1
+4 * 672 0 672
+4 * 672 0 672
+4 +8 672 0 672
+4 +3 672 672
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(74)
calls=672 0x404f37 -22 
* * 213258 70244 65544 14 3 2 14 3 2 12872 853 1340 167
+5 +1 672 672
+1 * 672 672

fn=(126)
0x404be0 424 672 0 672
+1 * 672
+3 * 672 0 672
+2 * 672 0 672
+1 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +4 672 672
+4 * 672
+3 * 672 0 672
cfn=(128)
calls=672 0x404878 277 
* * 10080 4032 3360 1 0 0 1
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(132)
calls=672 0x404d44 277 
* * 16800 6048 5376 2 0 0 2
+5 * 672
+3 * 672 672
+4 * 672
+3 * 672 0 672
cfn=(132)
calls=672 0x404d44 277 
* * 16800 6048 5376
+5 * 672
+3 * 672
+3 * 672
+3 * 672 0 672
cfn=(138)
calls=672 0x404d5e -49 
* * 223338 73604 69576 1 1 19 1 1 19 12872 771 1340
+5 +1 672
+4 * 672 672
+1 * 672 672
+2 * 672 672
+1 * 672 672

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1344 0 1344 1 0 0 1
+1 * 1344
+3 * 1344 0 1344
+4 +1 1344 1344
+4 * 1344 1344
+1 * 1344 1344

fn=(110)
0x404380 726 1344 0 1344 1 0 0 1
+1 * 1344
+3 * 1344 0 1344
+4 * 1344 0 1344
+4 * 1344 1344
+4 * 1344 1344
+3 * 1344 1344
+4 * 1344 0 1344
+3 * 1344 1344
+1 * 1344 1344

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1344 0 1344 1 0 0 1
+1 * 1344
+3 * 1344 0 1344
+4 +1 1344 1344
+4 * 1344 1344
+1 * 1344 1344

fn=(44)
0x404468 726 1344 0 1344
+1 * 1344
+3 * 1344 0 1344
+4 * 1344 0 1344
+4 * 1344 1344
+4 * 1344 1344
+3 * 1344 1344
+4 * 1344 0 1344 1 0 0 1
+3 * 1344 1344
+1 * 1344 1344

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680
+4 * 680 0 680 1 0 0 1
+4 * 680 680
+1 * 680 680

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 +4 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=680 0x40454c -14 
* * 4080 1360 2040 1 0 0 1
+5 +2 680 680
+1 * 680 680

fn=(150)
0x40326c 148 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +3 680 680 0 1 0 0 1
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=680 0x403d1a -29 
* * 12240 4080 4760 3 0 0 3
+5 +1 680 680
+1 * 680 680

fn=(180)
0x40334a 148 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 * 680 0 680
+4 +3 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(182)
calls=680 0x403dcc -29 
* * 12240 4080 4760 2 0 0 2
+5 +1 680 680
+1 * 680 680

fn=(152)
0x403d1a 122 680 0 680 1 0 0 1
+1 * 680
+3 * 680
+4 * 680 0 680
+4 * 680 0 680
+4 +4 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680 0 680
cfn=(154)
calls=680 0x4044f8 -14 
* * 4080 1360 2040 2 0 0 2
+5 +2 680 680
+1 * 680 680

fn=(184)
0x40454c 112 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680
+4 * 680 0 680
+4 * 680 680
+1 * 680 680

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2449 442 453 2 2 6 2 2 6 346 44 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3588 721 674 22 11 5 22 11 5 577 60 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 5 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 336 0 336 1 0 0 1
+1 * 336
+3 * 336
+4 * 336 0 336
+4 * 336 0 336
+4 +1 336 336
+4 * 336
+3 * 336 0 336
cfi=(2)
cfn=(2)
calls=336 0x402d74 645 
* * 4368 2016 672
+5 * 336
+3 * 336 0 336
+3 +1 336 336
+6 * 336 0 336
+3 * 336 336
+6 * 336 0 336
+3 +1 336 336
+6 * 336 0 336 1 0 0 1
+3 * 336 336
+6 * 336 0 336
+3 +2 336 0 336
+7 * 336
jump=336 +86 * 
* * 
+2 +1 56952 56952
+3 * 56952
+3 * 56952 56952
+4 * 56952
+3 * 56952
+3 * 56952 0 56952
cfi=(2)
cfn=(144)
calls=56952 0x402d9a 770 
* * 626472 284760 170856
+5 * 56952 56952
+4 * 56952 56952
+5 * 56952
+4 * 56952 0 56952
+5 +1 56952 56952
+3 * 56952
+3 * 56952 56952
+4 * 56952
+3 * 56952
+3 * 56952 0 56952
cfi=(2)
cfn=(146)
calls=56952 0x402dba 770 
* * 626472 284760 170856 1 0 0 1
+5 * 56952 56952
+2 * 56952
+4 * 56952 56952
+5 * 56952
+4 * 56952 0 56952
+5 -2 56952 0 56952
+4 * 56952 56952
+3 * 56952
+3 * 56952 56952
+3 * 56952 0 0 0 0 0 0 0 0 56952 339
jcnd=56616/56952 -93 +1 
* * 
-9 * 336 336 0 1 0 0 1
+3 * 336
+3 * 336 336
+3 * 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 -93 +1 
* * 
+2 +4 336 336
+3 * 336
+3 * 336
+4 * 336 336 0 1 0 0 1
+5 * 336
+4 * 336
+3 * 336 0 336
+5 +1 336 336
+3 * 336
+3 * 336
+4 * 336 336
+5 * 336
+4 * 336
+3 * 336 0 336
+5 +1 336 0 336
+7 * 336
jump=336 0x4016ee * 
* * 
+2 +1 56952 56952
+3 * 56952
+3 * 56952 56952
+4 * 56952
+3 * 56952 0 0 1 0 0 1
+3 * 56952 0 56952
cfi=(2)
cfn=(146)
calls=56952 0x402dba 770 
* * 626472 284760 170856
+5 * 56952 56952
+2 * 56952
+4 * 56952 56952
+5 * 56952 0 56952
+5 +1 56952 56952
+3 * 56952
+3 * 56952 56952
+4 * 56952
+3 * 56952
+3 * 56952 0 56952
cfi=(2)
cfn=(144)
calls=56952 0x402d9a 770 
* * 626472 284760 170856
+5 * 56952 56952
+4 * 56952 56952
+5 * 56952 0 56952
+5 +1 56952 56952
+5 * 56952 56952
+5 * 56952 56952
+5 * 56952
+4 * 56952 0 56952
+5 +1 56952 56952
+5 * 56952 56952
+5 * 56952 56952
+5 * 56952
+4 * 56952 0 56952
+5 -4 56952 0 56952
+4 * 56952 56952
+3 * 56952
+3 * 56952 56952
+3 * 56952 0 0 0 0 0 0 0 0 56952 337
jcnd=56616/56952 0x401672 +1 
* * 
-9 * 336 336 0 1 0 0 1
+3 * 336
+3 * 336 336
+3 * 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 0x401672 +1 
* * 
+6 +6 336 336 0 1 0 0 1
+5 * 336 336
+5 * 336 0 336
+5 +2 336 336
+3 +1 336 0 336
+3 * 336 336
+5 * 336 336
+1 * 336 336

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 336
+7 * 336
+7 * 336
+3 * 336
+3 * 336 0 336
cfi=(2)
cfn=(4)
calls=336 0x4030b2 310 
* * 369811 106101 100602 66 26 22 66 26 22 24964 1347 1342 167
+5 * 336
+7 * 336
+7 * 336
+3 * 336
+3 * 336 0 336
cfi=(2)
cfn=(80)
calls=336 0x402ff4 310 
* * 370029 106166 98829 35 7 47 35 7 47 25556 1276 1342
+5 * 336 0 0 1 0 0 1
+7 * 336
+7 * 336
+3 * 336
+3 * 336 0 336
cfn=(142)
calls=336 0x401585 -52 
* * 5944848 2628192 1372560 8 0 0 8 0 0 114576 676
+5 * 336 0 336
+8 * 336 336
+6 * 336 0 336
+6 * 336
+7 * 336
+3 * 336 0 336
cfi=(2)
cfn=(148)
calls=336 0x402df4 414 
* * 89761 28344 20553 31 5 0 31 5 0 10876 99 672
+5 * 336
+7 * 336
+3 * 336 0 336 1 0 0 1
cfi=(2)
cfn=(178)
calls=336 0x402e74 414 
* * 88634 28065 20130 7 3 0 7 3 0 10635 144 672
+5 +2 336
+7 * 336
+7 * 336
+3 * 336
+3 * 336 0 336
cfi=(2)
cfn=(4)
calls=336 0x4030b2 310 
* * 369349 106068 100478 4 1 1 4 1 1 24920 1022 1342
+5 * 336
+7 * 336
+7 * 336
+3 * 336
+3 * 336 0 336
cfi=(2)
cfn=(80)
calls=336 0x402ff4 310 
* * 369202 106112 98668 0 0 0 0 0 0 25438 1086 1342
+5 * 336 336
+6 * 336 0 0 1 0 0 1
+7 * 336
+7 * 336 0 336
+6 * 336 336
+8 * 336
+3 * 336
+3 * 336 0 336
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=336 0x401719 -33 
* * 2753520 1146432 631512 4 0 0 4 0 0 57288 339
+5 * 336 0 336
+8 * 336 336
+6 * 336 0 336
+6 * 336
+7 * 336 0 0 1 0 0 1
+3 * 336 0 336
cfi=(2)
cfn=(148)
calls=336 0x402df4 414 
* * 89761 28344 20553 0 0 0 0 0 0 10876 95 672
+5 * 336
+7 * 336
+3 * 336 0 336
cfi=(2)
cfn=(178)
calls=336 0x402e74 414 
* * 88634 28065 20130 0 0 0 0 0 0 10635 142 672
+5 +2 336 336
+7 * 336
+3 * 336 0 336
cfi=(2)
cfn=(2)
calls=336 0x402d74 645 
* * 4368 2016 672
+5 * 336 336
+6 * 336
+3 * 336
+3 * 336
+3 * 336 336
+7 * 336
+3 * 336 0 0 1 0 0 1
+3 * 336 0 336
cfi=(2)
cfn=(144)
calls=336 0x402d9a 770 
* * 3696 1680 1008
+5 * 336
+3 * 336
+7 * 336
+3 * 336
+3 * 336 0 336
cfi=(2)
cfn=(200)
calls=336 0x402eda 901 
* * 34368 12628 9774 48 33 12 48 33 12 1591 81 47
+5 +1 336 336
+7 * 336
+3 * 336 0 336
cfi=(2)
cfn=(10)
calls=336 0x402f54 645 
* * 4368 2016 672 0 1 0 0 1
+5 * 336 336
+6 * 336
+3 * 336
+3 * 336
+3 * 336 336
+7 * 336 0 0 1 0 0 1
+3 * 336
+3 * 336 0 336
cfi=(2)
cfn=(146)
calls=336 0x402dba 770 
* * 3696 1680 1008
+5 * 336
+3 * 336
+7 * 336
+3 * 336
+3 * 336 0 336
cfi=(2)
cfn=(244)
calls=336 0x402f7a 901 
* * 33262 12366 9556 21 24 38 21 24 38 1369 65 47
+5 +1 336 336
+7 * 336
+3 * 336 0 336
cfi=(2)
cfn=(10)
calls=336 0x402f54 645 
* * 4368 2016 672
+5 * 336 336
+6 * 336
+3 * 336
+3 * 336
+3 * 336 336 0 1 0 0 1
+7 * 336
+3 * 336
+3 * 336 0 336
cfi=(2)
cfn=(146)
calls=336 0x402dba 770 
* * 3696 1680 1008
+5 * 336 336
+2 * 336
+4 * 336 336
+8 * 336 336
+8 * 336 0 336
+8 +1 336 336
+7 * 336
+3 * 336 0 336
cfi=(2)
cfn=(2)
calls=336 0x402d74 645 
* * 4368 2016 672
+5 * 336 336 0 1 0 0 1
+6 * 336
+3 * 336
+3 * 336
+3 * 336 336
+7 * 336
+3 * 336
+3 * 336 0 336
cfi=(2)
cfn=(144)
calls=336 0x402d9a 770 
* * 3696 1680 1008
+5 * 336 336
+4 * 336 336
+8 * 336
+4 * 336 336
+8 * 336
+3 * 336 0 336
+8 +2 336 0 336
+7 -12 336 336
+8 * 336 336
+7 * 336 0 0 0 0 0 0 0 0 336 3
jcnd=1/336 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 336
+7 * 336
+3 * 336 0 336
cfi=(2)
cfn=(2)
calls=336 0x402d74 645 
* * 4368 2016 672 2 0 1 2 0 1
+5 * 336
+3 * 336 336
+7 * 336
+3 * 336 0 336
cfi=(2)
cfn=(2)
calls=336 0x402d74 645 
* * 4368 2016 672 0 1 0 0 1
+5 * 336
+3 * 336 0 0 0 0 0 0 0 0 336 1
+2 * 336 0 0 1 0 0 1
+5 * 336
jump=336 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 336
+2 * 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 336 0 336
+1 * 336
+3 * 336
+4 * 336 0 336
+4 * 336 0 336
+4 * 336 0 336
+5 +1 336 336
+4 * 336
+3 * 336 0 336
cfi=(2)
cfn=(2)
calls=336 0x402d74 645 
* * 4368 2016 672
+5 * 336
+3 * 336 0 336
+3 +1 336 336 0 1 0 0 1
+6 * 336 0 336
+3 * 336 336
+6 * 336 0 336
+3 +2 336 0 336
+7 * 336
jump=336 +86 * 
* * 
+2 +1 56952 56952
+3 * 56952
+3 * 56952 56952
+4 * 56952
+3 * 56952
+3 * 56952 0 56952
cfi=(2)
cfn=(144)
calls=56952 0x402d9a 770 
* * 626472 284760 170856
+5 * 56952 56952
+4 * 56952 56952
+5 * 56952
+4 * 56952 0 56952
+5 +1 56952 56952
+3 * 56952
+3 * 56952 56952
+4 * 56952
+3 * 56952
+3 * 56952 0 56952
cfi=(2)
cfn=(146)
calls=56952 0x402dba 770 
* * 626472 284760 170856
+5 * 56952 56952
+2 * 56952
+4 * 56952 56952
+5 * 56952
+4 * 56952 0 56952
+5 -2 56952 0 56952
+4 * 56952 56952
+3 * 56952
+3 * 56952 56952
+3 * 56952 0 0 0 0 0 0 0 0 56952 339
jcnd=56616/56952 -93 +1 
* * 
-9 * 336 336 0 1 0 0 1
+3 * 336
+3 * 336 336
+3 * 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 -93 +1 
* * 
+2 +4 336 336
+3 * 336
+3 * 336 0 0 1 0 0 1
+4 * 336 336
+5 * 336
+4 * 336
+3 * 336 0 336
+5 +1 336 336
+3 * 336
+3 * 336
+4 * 336 336
+5 * 336
+4 * 336
+3 * 336 0 336
+5 +1 336 336
+5 * 336 336
+5 * 336 336
+5 * 336 0 0 1 0 0 1
+4 * 336
+3 * 336 0 336
+5 +2 336 336
+3 +1 336 0 336
+3 * 336 336
+5 * 336 336
+1 * 336 336

fl=(4)
fn=(174)
0x403ccc 121 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 672
+4 * 672
+3 * 672 0 672
cfi=(5)
cfn=(176)
calls=672 0x4044cc -35 
* * 3360 1344 1344
+5 * 672 672
+1 * 672 672

fn=(90)
0x4047b2 115 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672 1 0 0 1
+4 +1 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(5)
cfn=(92)
calls=672 0x4049d4 -35 
* * 4032 1344 2016 1 0 0 1
+5 * 672 672
+1 * 672 672

fn=(194)
0x403d7e 121 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 672
+4 * 672
+3 * 672 0 672
cfi=(5)
cfn=(196)
calls=672 0x404520 -35 
* * 3360 1344 1344
+5 * 672 672
+1 * 672 672

fn=(16)
0x404804 115 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(5)
cfn=(18)
calls=672 0x404a28 -35 
* * 4032 1344 2016 1 0 1 1 0 1
+5 * 672 672
+1 * 672 672

fl=(3)
fn=(222)
0x403373 215 336 0 336
+1 * 336
+3 * 336
+4 * 336 0 336
+4 * 336 0 336
+4 * 336 0 336
+4 +1 336 336
+4 * 336 336
+4 * 336 336
+4 * 336
+3 * 336
+3 * 336 0 336
cfi=(5)
cfn=(224)
calls=336 0x403df2 -87 
* * 8064 2688 3024 0 22 4 0 22 4 336 2
+5 * 336 336
+1 * 336 336

fn=(8)
0x403afa 224 672 0 672 1 0 0 1
+1 * 672
+3 * 672 0 672
+4 * 672 672
+4 * 672 672
+1 * 672 672

fn=(264)
0x4036b1 215 336 0 336
+1 * 336
+3 * 336
+4 * 336 0 336
+4 * 336 0 336
+4 * 336 0 336
+4 +1 336 336
+4 * 336 336
+4 * 336 336
+4 * 336
+3 * 336
+3 * 336 0 336
cfi=(5)
cfn=(266)
calls=336 0x40406a -87 
* * 8064 2688 3024 0 22 13 0 22 13 336
+5 * 336 336
+1 * 336 336

fn=(212)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102)
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28)
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84)
0x4039ed 224 672 0 672
+1 * 672
+3 * 672 0 672
+4 * 672 672
+4 * 672 672
+1 * 672 672

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1360 0 1360 1 0 0 1
+5 0 1360 0 1360
+5 0 1360
+3 0 1360 0 1360
+5 0 1360
+4 0 1360 1360 0 0 1 0 0 1
+7 0 1360 1360 0 0 1 0 0 1
+3 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360
+6 0 1360 1360 0 0 1 0 0 1
+7 0 1360 1360 0 1 1 0 1 1
+4 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360
+2 0 1360 1360 0 0 1 0 0 1
+3 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360
jcnd=1360/1360 +97 0 
* 0 
+18 0 1360
+3 0 1360
+3 0 1360 0 1360
cfn=(38) _int_malloc
calls=1360 0x3877c79a00 0 
* 0 361464 45442 54584 44 34 53 44 34 53 58377 3115
+5 0 1360
+3 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360
+2 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360
+2 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360 13
+2 0 1360 1360
+7 0 1360 0 0 0 0 0 0 0 0 1360
jcnd=1360/1360 +13 0 
* 0 
+13 0 1360 0 1360
+2 0 1360 0 0 0 0 0 0 0 0 1360 83
+6 0 1360
+3 0 1360 1360
+4 0 1360 1360
+5 0 1360 1360
+5 0 1360
+4 0 1360 1360
+1 0 1360 0 0 1 0 0 1
+5 0 1360 1360 0 0 1 0 0 1
+7 0 1360 0 0 0 0 0 0 0 0 1360
jcnd=1360/1360 +14 0 
* 0 
+14 0 1360 0 1360 1 0 0 1
+3 0 1360 0 0 0 0 0 0 0 0 1360
+6 0 1360
jump=1360 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1360 0 1360 1 0 0 1
+2 0 1360
+3 0 1360
+3 0 1360 0 1360
+2 0 1360
+3 0 1360 0 1360
+1 0 1360
+3 0 1360 0 1360
+1 0 1360
+3 0 1360
+4 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360
+6 0 1360
+4 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360 4
jcnd=10/1360 0x3877c838d1 0 
* 0 
+2 0 1350
+3 0 1350
+3 0 1350
+3 0 1350
+3 0 1350
+3 0 1350 0 0 0 0 0 0 0 0 1350
jcnd=1350/1350 +41 0 
* 0 
+41 0 1350 0 0 1 0 0 1
+3 0 1350 0 0 0 0 0 0 0 0 1350
jcnd=1350/1350 0x3877c839c0 0 
* 0 
+24 0 1350
+3 0 1350
+4 0 1350
+3 0 1350
+3 0 1350
+3 0 1350
+3 0 1350
+3 0 1350 0 0 0 0 0 0 0 0 1350 742
jcnd=682/1350 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 678
+10 0 678 678 0 0 2 0 0 2
+3 0 678
+4 0 678 0 678
+3 0 678
+4 0 678
+4 0 678 0 0 0 0 0 0 0 0 678
jcnd=678/678 -18 0 
* 0 
-18 0 2090 2090
+3 0 2090
+4 0 2090 0 2090
+3 0 2090
+4 0 2090
+4 0 2090 0 0 0 0 0 0 0 0 2090 8
jcnd=1412/2090 -18 0 
* 0 
+2 0 1360
+4 0 1360
+3 0 1360 1360
+1 0 1360 1360
+1 0 1360 1360
+2 0 1360 1360 0 1 0 0 1
+2 0 1360 1360
0x3877c839c0 0 1350 0 0 1 0 0 1
+3 0 1350
+3 0 1350
+3 0 1350
+4 0 1350 0 1350 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1350 0x3877c89b20 0 
* 0 314202 116768 114068 6 1 39 6 1 39 15020 879 1350 167
+5 0 1350
jump=1350 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1360 1360 0 1 1 0 1 1
+7 0 1360 1360 0 0 1 0 0 1
+3 0 1360
+3 0 1360 0 0 1 0 0 1 0 0 1360
+6 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360
+6 0 1360 1360
+4 0 1360
+4 0 1360
+2 0 1360 0 0 0 0 0 0 0 0 1360
+2 0 1360
+2 0 1360
+7 0 1360 0 0 0 0 0 0 0 0 1360
jcnd=1360/1360 +14 0 
* 0 
+14 0 1360
+2 0 1360
cfn=(170) _int_free
calls=1360 0x3877c78650 0 
* 0 144523 39265 23799 17 4 0 17 4 0 35275 494

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=16/20 +18 0 
* 0 
+2 0 4 0 4
+8 0 4 0 4
+8 0 4
+3 0 4 0 4
+4 0 4 0 4
+4 0 4
+4 0 4 0 4
+4 0 4 0 4
+4 0 4
+3 0 4
+3 0 4 0 0 0 0 0 0 0 0 4 2
jcnd=2/4 0x3877c75f78 0 
* 0 
-29 0 16
+3 0 16 0 16
+4 0 16 0 16
+4 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 7
jcnd=5/16 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=10/13 +15 0 
* 0 
+2 0 3 3
+4 0 3
+3 0 3 0 0 0 0 0 0 0 0 3
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1360 0 1360 1 0 0 1
+2 0 1360 0 1360
+2 0 1360 0 1360
+2 0 1360
+3 0 1360 0 1360
+2 0 1360 0 1360
+1 0 1360 0 1360
+1 0 1360
+3 0 1360
+4 0 1360 1360
+4 0 1360 0 1360
+4 0 1360
+3 0 1360
+4 0 1360
+3 0 1360
+3 0 1360
+3 0 1360 0 0 1 0 0 1 0 0 1360
+6 0 1360
+4 0 1360 0 0 0 0 0 0 0 0 1360
+6 0 1360
+4 0 1360 0 0 0 0 0 0 0 0 1360
+6 0 1360 1360
+7 0 1360 0 0 0 0 0 0 0 0 1360 2
jcnd=1236/1360 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1236
+2 0 1236 0 0 0 0 0 0 0 0 1236
+6 0 1236 1236 0 1 0 0 1
+4 0 1236
+3 0 1236
+2 0 1236 0 0 0 0 0 0 0 0 1236
jcnd=1236/1236 0x3877c78a40 0 
* 0 
+6 0 1236 1236
+4 0 1236
+3 0 1236 0 0 0 0 0 0 0 0 1236
+6 0 1236 1236
+5 0 1236
+4 0 1236 0 0 0 0 0 0 0 0 1236
jcnd=1236/1236 0x3877c7907c 0 
* 0 
+6 0 1236 1236
+5 0 1236
+4 0 1236 0 0 0 0 0 0 0 0 1236
+6 0 1236
+4 0 1236 0 0 1 0 0 1 0 0 1236
+6 0 1236
+4 0 1236 1236
+7 0 1236 0 0 0 0 0 0 0 0 1236
+6 0 1236 1236
+6 0 1236
+2 0 1236 0 0 0 0 0 0 0 0 1236
+6 0 1236 1236
+4 0 1236 0 0 0 0 0 0 0 0 1236 5
jcnd=1232/1236 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1236 1236 0 1 0 0 1
+4 0 1236 0 0 0 0 0 0 0 0 1236
+6 0 1236 1236 0 0 2 0 0 2
+6 0 1236 0 0 1 0 0 1 0 0 1236 66
jcnd=51/1236 0x3877c78a78 0 
* 0 
+6 0 1185 1185
+5 0 1185 1185
+5 0 1185 1185
+4 0 1185 0 0 0 0 0 0 0 0 1185
+6 0 1185 1185
+4 0 1185 0 0 0 0 0 0 0 0 1185
+6 0 1185 1185
+9 0 1185 0 1185
+4 0 1185 0 1185
+4 0 1185 0 0 0 0 0 0 0 0 1185 357
jcnd=753/1185 +16 0 
* 0 
+2 0 432 432
+5 0 432
+3 0 432 0 0 1 0 0 1 0 0 432
+6 0 1185
+3 0 1185
+4 0 1185 1185
+4 0 1185 1185
+4 0 1185 0 0 0 0 0 0 0 0 1185
-12 0 51
+4 0 51 51
+4 0 51 51
+4 0 51 0 0 0 0 0 0 0 0 51
+6 0 1236
+7 0 1236 0 1236
+4 0 1236 0 1236
+4 0 1236 0 0 0 0 0 0 0 0 1236 62
jcnd=441/1236 +18 0 
* 0 
+2 0 795 0 795
+8 0 795 0 795
+8 0 795 0 795
+4 0 795
+3 0 795 0 795 1 0 0 1
+4 0 795
+4 0 795 0 795
+4 0 795 0 795
+4 0 795
+7 0 795 0 0 0 0 0 0 0 0 795
jcnd=795/795 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1236 0 0 1 0 0 1
+5 0 1236 1236
+4 0 1236 1236
+7 0 1236 0 0 0 0 0 0 0 0 1236
jcnd=1236/1236 +16 0 
* 0 
+16 0 1236 0 1236
+5 0 1236 0 0 0 0 0 0 0 0 1236
+6 0 1236
+3 0 1236
jump=1236 0x3877c7878f 0 
* 0 
+10 0 51 0 51
+6 0 51 0 0 1 0 0 1
jump=51 0x3877c78885 0 
* 0 
0x3877c78b20 0 1236 1236 0 1 0 0 1
+4 0 1236
+2 0 1236 0 0 0 0 0 0 0 0 1236
+6 0 1236 1236
+7 0 1236 0 0 0 0 0 0 0 0 1236
jcnd=1236/1236 +15 0 
* 0 
+15 0 1236 0 1236 1 0 0 1
+4 0 1236 0 0 0 0 0 0 0 0 1236
+6 0 1236
+4 0 1236 1236
+1 0 1236 1236
+1 0 1236 1236
+2 0 1236 1236
+2 0 1236 1236
+2 0 1236 1236
+2 0 1236 1236
0x3877c7907c 0 1236 1236 0 1 1 0 1 1
+4 0 1236 0 0 1 0 0 1
+7 0 1236
+4 0 1236
+3 0 1236
+3 0 1236 0 0 0 0 0 0 0 0 1236
jcnd=1236/1236 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1350 0 0 1 0 0 1
+7 0 1350
+3 0 1350
+3 0 1350 1350 0 0 1 0 0 1
+4 0 1350
+4 0 1350 0 0 0 0 0 0 0 0 0 0 1350 167
jump=160 0x3877c89be8 0 
* 0 
jump=178 0x3877c89bd0 0 
* 0 
jump=168 0x3877c89bb8 0 
* 0 
jump=168 +11 0 
* 0 
jump=168 0x3877c89c48 0 
* 0 
jump=170 0x3877c89c30 0 
* 0 
jump=168 0x3877c89c18 0 
* 0 
jump=170 0x3877c89c00 0 
* 0 
+11 0 168 168
+3 0 168
+4 0 168
+4 0 168 168
+4 0 168
+4 0 168 0 168
+4 0 168
+9 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-40 0 14006 14006
+4 0 14006 0 14006 0 0 14 0 0 14
+4 0 14006 14006
+4 0 14006 0 14006 0 0 3 0 0 3
+4 0 14006 14006
+4 0 14006 0 14006 0 0 4 0 0 4
+4 0 14006 14006
+4 0 14006 0 14006 0 0 15 0 0 15
+4 0 14006
+4 0 14006
+4 0 14006 0 0 0 0 0 0 0 0 14006 877
jcnd=1314/14006 0x3877c89c60 0 
* 0 
-32 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
jcnd=10/170 0x3877c89c60 0 
* 0 
-24 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-16 0 170 170 0 1 0 0 1
+4 0 170 0 170
+4 0 170 0 0 1 0 0 1
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170 2
jcnd=10/170 0x3877c89c60 0 
* 0 
+6 0 13332
+4 0 13332 13332
+3 0 13332 0 13332
+3 0 13332 13332
+4 0 13332 0 13332 0 0 1 0 0 1
+4 0 13332 13332
+4 0 13332 0 13332 0 0 2 0 0 2
+4 0 13332 13332
+4 0 13332 0 13332
+4 0 13332
jump=13332 -80 0 
* 0 
-30 0 160 160
+3 0 160 0 160
+3 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
jump=160 -80 0 
* 0 
-24 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178
jump=178 -80 0 
* 0 
-16 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
+8 0 168 168
+3 0 168
+4 0 168 0 0 1 0 0 1
+4 0 168
+4 0 168
jump=168 -39 0 
* 0 
+9 0 178
+3 0 178 0 0 0 0 0 0 0 0 178
+6 0 178 178
+3 0 178
+4 0 178
jump=178 -72 0 
* 0 
+8 0 160
+4 0 160 160
+3 0 160 0 0 0 0 0 0 0 0 160
+2 0 160
+4 0 160
jump=160 -99 0 
* 0 
+11 0 170 170 0 1 0 0 1
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b78 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b70 0 
* 0 
+9 0 170 170
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b68 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b60 0 
* 0 
+9 0 1350 0 1350 1 0 0 1
+3 0 1350 1350

fn=(104) alloc_perturb
0x3877c77180 0 1234 1234 0 1 0 0 1
+6 0 1234
+2 0 1234 0 0 0 0 0 0 0 0 1234 33
+2 0 1234 1234

fn=(38)
0x3877c79a00 0 1360 0 1360 1 0 0 1
+2 0 1360
+3 0 1360 0 1360
+2 0 1360 0 1360
+2 0 1360 0 1360 0 0 1 0 0 1
+2 0 1360
+3 0 1360 0 1360
+1 0 1360 0 1360
+1 0 1360
+4 0 1360
+4 0 1360 0 0 0 0 0 0 0 0 1360
+6 0 1360
+4 0 1360
+6 0 1360
+3 0 1360
+4 0 1360
+4 0 1360
+4 0 1360
+3 0 1360 0 0 0 0 0 0 0 0 1360
+6 0 1360 1360 0 1 1 0 1 1
+7 0 1360 0 0 0 0 0 0 0 0 1360 5
jcnd=1238/1360 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 1234
+4 0 1234 1234
+1 0 1234 1234
+1 0 1234 1234
+2 0 1234 1234
+2 0 1234 1234
+2 0 1234 1234
+2 0 1234 1234
+7 0 1255
+7 0 1255 0 0 1 0 0 1 0 0 1255 7
jcnd=352/1255 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 12 0 0 12
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 352 0 0 1 0 0 1
+3 0 352
+4 0 352
+4 0 352 0 0 1 0 0 1 0 0 352
jcnd=352/352 0x3877c7a1a4 0 
* 0 
+30 0 352 352
+6 0 352
+5 0 352 0 0 0 0 0 0 0 0 352 1
jcnd=351/352 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 926 250 197 8 1 0 8 1 0 192 26
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1254 0 0 1 0 0 1
+3 0 1254
+3 0 1254
+3 0 1254
+4 0 1254
+3 0 1254
+4 0 1254 0 1254
+5 0 1254
+3 0 1254 0 1254
+4 0 1254 0 1254
+4 0 1254 0 1254
+5 0 1254
+3 0 1254
+3 0 1254
+3 0 1254
+3 0 1254
+4 0 1254
+4 0 1254 0 0 1 0 0 1
+4 0 1254 0 1254
+4 0 1254
+4 0 1254 0 1254
+5 0 1254 0 1254
+5 0 1254
+3 0 1254
+3 0 1254 0 1254
+5 0 1254
+5 0 1254
+3 0 1254 0 1254
+4 0 1254 0 1254
+4 0 1254
+6 0 1254 0 1254
+4 0 1254 0 1254
+5 0 1254 0 0 1 0 0 1
+3 0 1254
+3 0 1254
+3 0 1254
jump=1254 +87 0 
* 0 
+8 0 965
+3 0 965
+4 0 965
+2 0 965
+2 0 965
+3 0 965
+3 0 965
+3 0 965
+2 0 965
+2 0 965
+5 0 965
+2 0 965 965 0 0 2 0 0 2
+4 0 965
+3 0 965
+4 0 965 0 965
+4 0 965 0 965
+8 0 965
+7 0 965 0 965
+4 0 965 0 965
+4 0 965 0 965
+4 0 965 0 0 0 0 0 0 0 0 965
-38 0 777
+3 0 777
+4 0 777 0 777
+4 0 777 0 777
+8 0 777
+7 0 777 0 777
+4 0 777 0 777 0 0 1 0 0 1
+4 0 777 0 777
+4 0 777 0 0 0 0 0 0 0 0 777
+6 0 2997 2997 0 1 0 0 1
+4 0 2997
+3 0 2997 0 0 0 0 0 0 0 0 2997 214
jcnd=1198/2997 0x3877c79ef0 0 
* 0 
+6 0 1799 1799
+4 0 1799 1799
+4 0 1799
+4 0 1799 0 0 0 0 0 0 0 0 1799
+6 0 1799 1799 0 1 1 0 1 1
+7 0 1799 0 0 0 0 0 0 0 0 1799
+6 0 1799
+4 0 1799
+7 0 1799 0 0 0 0 0 0 0 0 1799 9
jcnd=514/1799 +11 0 
* 0 
+2 0 1285
+3 0 1285 0 0 0 0 0 0 0 0 1285 599
jcnd=866/1285 0x3877c79e28 0 
* 0 
+6 0 1763
+3 0 1763 0 1763
+4 0 1763 0 1763
+5 0 1763 0 0 0 0 0 0 0 0 1763 15
jcnd=21/1763 0x3877c7a090 0 
* 0 
+6 0 1742
+7 0 1742 0 0 0 0 0 0 0 0 1742 328
jcnd=965/1742 0x3877c79c50 0 
* 0 
+6 0 777 0 0 1 0 0 1
+3 0 777
+4 0 777
+4 0 777 0 0 0 0 0 0 0 0 777 12
jcnd=384/777 0x3877c79db0 0 
* 0 
+6 0 393
+3 0 393
+4 0 393
+2 0 393
+2 0 393
+3 0 393
+3 0 393
+8 0 393
+3 0 393
+2 0 393
+2 0 393
+4 0 393 393 0 0 3 0 0 3
+4 0 393
+3 0 393 0 0 1 0 0 1 0 0 393 33
jcnd=393/393 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 777 0 777
+4 0 777 0 777
+4 0 777
+3 0 777
jump=777 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 24
jcnd=443/866 0x3877c79ce1 0 
* 0 
+6 0 423 423
+5 0 423 0 0 0 0 0 0 0 0 423 9
jcnd=387/423 0x3877c79ce1 0 
* 0 
+6 0 36 0 0 1 0 0 1
+3 0 36
+3 0 36
+3 0 36
+7 0 36 0 36
+4 0 36 0 36
+4 0 36
+3 0 36 0 36
+4 0 36 0 36 0 0 17 0 0 17
+4 0 36 0 36
+4 0 36 0 0 0 0 0 0 0 0 36 4
jcnd=9/36 +18 0 
* 0 
+2 0 27 0 27 0 0 1 0 0 1
+8 0 27 0 27
+8 0 27
+7 0 27 0 27 1 0 0 1
+4 0 27
+3 0 27
+3 0 27
+3 0 27
+4 0 27
+3 0 27
+4 0 27
+3 0 27
+3 0 27
+4 0 27 0 27
+4 0 27 0 27 0 0 2 0 0 2
+4 0 27
+4 0 27
+3 0 27 0 27
cfn=(104)
calls=27 0x3877c77180 0 
* 0 108 54 0 0 0 0 0 0 0 27
-56 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9 0 0 2 0 0 2
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
+5 0 36
+3 0 36
jump=36 0x3877c79ae3 0 
* 0 
+55 0 1198 0 0 1 0 0 1
+7 0 1198
+3 0 1198 0 0 0 0 0 0 0 0 1198 8
jcnd=352/1198 0x3877c7a0b0 0 
* 0 
+6 0 1184 1184 0 1 0 0 1
+4 0 1184
+3 0 1184
+3 0 1184
+2 0 1184
+4 0 1184
+3 0 1184
+3 0 1184
+2 0 1184
+2 0 1184
+2 0 1184
+2 0 1184 1184 0 0 1 0 0 1
+8 0 1184
+5 0 1184
+5 0 1184
+2 0 1184 0 0 0 0 0 0 0 0 1184
-2 0 573
+2 0 573 0 0 0 0 0 0 0 0 573
+2 0 1757
+2 0 1757 0 0 0 0 0 0 0 0 1757 38
jcnd=1098/1757 +64 0 
* 0 
+2 0 659
+8 0 659
+3 0 659
+3 0 659 0 0 0 0 0 0 0 0 659
-6 0 417
+3 0 417
+3 0 417 0 0 0 0 0 0 0 0 417
+2 0 1076
+2 0 1076 1076
+8 0 1076
+2 0 1076 0 0 0 0 0 0 0 0 1076 21
jcnd=417/1076 -20 0 
* 0 
+2 0 659
+2 0 659
+5 0 659
+3 0 659
+3 0 659
+2 0 659
+2 0 659
+5 0 659 0 0 0 0 0 0 0 0 659
+2 0 659
+2 0 659
+4 0 659
+2 0 659
+2 0 659 0 0 0 0 0 0 0 0 659
jcnd=659/659 -8 0 
* 0 
-8 0 9919
+4 0 9919
+2 0 9919
+2 0 9919 0 0 0 0 0 0 0 0 9919 621
jcnd=8270/9919 -8 0 
* 0 
-2 0 1098 0 0 1 0 0 1
+2 0 1098 0 0 0 0 0 0 0 0 1098 18
jcnd=990/1098 -8 0 
* 0 
+2 0 1757 1757 0 0 4 0 0 4
+4 0 1757 0 0 1 0 0 1
+3 0 1757 0 0 0 0 0 0 0 0 1757 787
jcnd=1184/1757 0x3877c7a1cf 0 
* 0 
+6 0 573
+2 0 573
+4 0 573
+2 0 573
+2 0 573
+2 0 573 0 573
+8 0 573
jump=573 0x3877c79f30 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 352 352
+4 0 352
+4 0 352
+2 0 352
+5 0 352 352 0 1 1 0 1 1
+4 0 352
+3 0 352 0 0 0 0 0 0 0 0 352 2
jcnd=338/352 0x3877c79f00 0 
* 0 
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14
+3 0 14 14
+4 0 14 14
+4 0 14
+3 0 14
+4 0 14
+3 0 14 0 0 0 0 0 0 0 0 14
+2 0 14 14
+4 0 14
+3 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 0x3877c7a650 0 
* 0 
+26 0 14 0 0 1 0 0 1
+3 0 14 14
+4 0 14
+3 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14 2
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14
+2 0 14 14 0 1 0 0 1
+4 0 14
+3 0 14 0 0 0 0 0 0 0 0 14 14
jcnd=14/14 0x3877c7a659 0 
* 0 
+6 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 4
jcnd=6/14 0x3877c7a2e3 0 
* 0 
+6 0 8 8
+4 0 8
+7 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+4 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c7a285 0 
* 0 
+31 0 352 0 0 1 0 0 1
+3 0 352 0 352
+4 0 352
jump=352 0x3877c79b99 0 
* 0 
+36 0 1184 1184 0 1 1 0 1 1
+4 0 1184 1184 0 0 2 0 0 2
+4 0 1184
+3 0 1184 1184
+4 0 1184
+4 0 1184
+3 0 1184
+3 0 1184 1184
+4 0 1184 0 0 0 0 0 0 0 0 1184
+6 0 1184 1184 0 0 1 0 0 1
+4 0 1184 0 0 0 0 0 0 0 0 1184
+6 0 1184 1184 0 1 0 0 1
+8 0 1184 0 1184
+4 0 1184 0 1184
+4 0 1184 0 0 0 0 0 0 0 0 1184 234
jcnd=418/1184 +38 0 
* 0 
+2 0 766 766 0 0 1 0 0 1
+4 0 766
+3 0 766 0 0 0 0 0 0 0 0 766
+2 0 766 766
+5 0 766 0 0 0 0 0 0 0 0 766
+6 0 766 766
+4 0 766 0 766
+4 0 766 766
+4 0 766 0 766
+4 0 766
+4 0 766 0 0 0 0 0 0 0 0 766
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=20/418 0x3877c7a2e3 0 
* 0 
+6 0 1164 1164
+4 0 1164 1164 0 1 0 0 1
+4 0 1164 0 0 0 0 0 0 0 0 1164
+6 0 1164
+4 0 1164
+7 0 1164 0 1164 0 0 11 0 0 11
+4 0 1164 0 1164
+4 0 1164 0 1164
+4 0 1164 0 1164
+4 0 1164 0 0 0 0 0 0 0 0 1164 5
jcnd=338/1164 +7 0 
* 0 
+2 0 826 0 826
+5 0 826
+7 0 826 0 0 0 0 0 0 0 0 826 4
jcnd=435/826 +18 0 
* 0 
-7 0 338
+7 0 338 0 0 0 0 0 0 0 0 338 4
jcnd=313/338 +18 0 
* 0 
+2 0 416 0 416 0 0 14 0 0 14
+8 0 416 0 416 1 0 0 1
+8 0 416
+7 0 416 0 416 0 0 3 0 0 3
+4 0 416
+3 0 416
+3 0 416
+4 0 416
+3 0 416
+4 0 416
+3 0 416
+3 0 416
+4 0 416 0 416
+4 0 416 0 416
+4 0 416
jump=416 +71 0 
* 0 
-46 0 756
+7 0 756 0 756
+4 0 756
+3 0 756
+3 0 756
+4 0 756
+3 0 756
+4 0 756
+3 0 756
+3 0 756
+4 0 756 0 756
+4 0 756 0 756 0 0 1 0 0 1
+4 0 756
jump=756 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 26
+7 0 26 0 26
+6 0 26
+3 0 26 0 0 0 0 0 0 0 0 26 2
jcnd=26/26 +7 0 
* 0 
+7 0 1198
+4 0 1198 0 0 1 0 0 1
+3 0 1198
+3 0 1198 0 1198
cfn=(104)
calls=1198 0x3877c77180 0 
* 0 4792 2396 0 1 0 0 1 0 0 1198 33
+5 0 1198
+3 0 1198
jump=1198 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 14 14 0 1 0 0 1
+4 0 14
jump=14 0x3877c7a10e 0 
* 0 
+5 0 14 14
+5 0 14 0 0 0 0 0 0 0 0 14
+2 0 14 14
+4 0 14 0 14
+4 0 14 14
+4 0 14 0 14
+4 0 14
jump=14 0x3877c7a14b 0 
* 0 

totals: 10686869 4364102 2521490 238 103 122 238 103 122 319734 6376 8150 167
