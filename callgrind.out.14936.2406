version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2406


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2787625636 - 2788852268
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1380 0 0 1 0 0 1
+3 0 1380 0 0 0 0 0 0 0 0 1380
+2 0 1380
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1380 0x3877c7b8b0 0 
* 0 154837 39627 20265 21 4 0 21 4 0 37953 580
* 0 1380 1380 0 1 1 0 1 1 0 0 0 1380

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1380 0 1380 1 0 0 1
+1 0 1380
+5 0 1380
+3 0 1380 0 1380
+1 0 1380
+4 0 1380 0 0 1 0 0 1
+3 0 1380
+4 0 1380
+3 0 1380 0 1380 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1380 0x3877c7aa50 0 
* 0 374162 54098 54131 49 40 52 49 40 52 62643 2205
* 0 1380 1380 0 1 1 0 1 1 0 0 0 1380
+5 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380
jcnd=1380/1380 +96 0 
* 0 
+96 0 1380 0 0 1 0 0 1
+4 0 1380 1380
+1 0 1380 1380
+1 0 1380 1380

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 341 0 341 1 0 0 1
+1 * 341
+3 * 341
+4 * 341 0 341
+4 * 341 0 341
+4 +1 341 341
+4 * 341
+3 * 341 0 341
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=341 0x402d74 645 
* * 4433 2046 682
+5 * 341
+3 * 341 0 341
+3 +1 341 341
+6 * 341 0 341
+3 * 341 341
+6 * 341 0 341
+3 +1 341 341
+6 * 341 0 341 1 0 0 1
+3 * 341 341
+6 * 341 0 341
+3 +2 341 0 341
+7 * 341
jump=341 +86 * 
* * 
+2 +1 58652 58652
+3 * 58652
+3 * 58652 58652
+4 * 58652
+3 * 58652
+3 * 58652 0 58652
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=58652 0x402d9a 770 
* * 645172 293260 175956
+5 * 58652 58652
+4 * 58652 58652
+5 * 58652
+4 * 58652 0 58652
+5 +1 58652 58652
+3 * 58652
+3 * 58652 58652
+4 * 58652
+3 * 58652
+3 * 58652 0 58652
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=58652 0x402dba 770 
* * 645172 293260 175956 1 0 0 1
+5 * 58652 58652
+2 * 58652
+4 * 58652 58652
+5 * 58652
+4 * 58652 0 58652
+5 -2 58652 0 58652
+4 * 58652 58652
+3 * 58652
+3 * 58652 58652
+3 * 58652 0 0 0 0 0 0 0 0 58652 342
jcnd=58311/58652 -93 +1 
* * 
-9 * 341 341 0 1 0 0 1
+3 * 341
+3 * 341 341
+3 * 341 0 0 0 0 0 0 0 0 341
jcnd=341/341 -93 +1 
* * 
+2 +4 341 341
+3 * 341
+3 * 341
+4 * 341 341 0 1 0 0 1
+5 * 341
+4 * 341
+3 * 341 0 341
+5 +1 341 341
+3 * 341
+3 * 341
+4 * 341 341
+5 * 341
+4 * 341
+3 * 341 0 341
+5 +1 341 0 341
+7 * 341
jump=341 0x4016ee * 
* * 
+2 +1 58652 58652
+3 * 58652
+3 * 58652 58652
+4 * 58652
+3 * 58652 0 0 1 0 0 1
+3 * 58652 0 58652
cfi=(2)
cfn=(146)
calls=58652 0x402dba 770 
* * 645172 293260 175956
+5 * 58652 58652
+2 * 58652
+4 * 58652 58652
+5 * 58652 0 58652
+5 +1 58652 58652
+3 * 58652
+3 * 58652 58652
+4 * 58652
+3 * 58652
+3 * 58652 0 58652
cfi=(2)
cfn=(144)
calls=58652 0x402d9a 770 
* * 645172 293260 175956
+5 * 58652 58652
+4 * 58652 58652
+5 * 58652 0 58652
+5 +1 58652 58652
+5 * 58652 58652
+5 * 58652 58652
+5 * 58652
+4 * 58652 0 58652
+5 +1 58652 58652
+5 * 58652 58652
+5 * 58652 58652
+5 * 58652
+4 * 58652 0 58652
+5 -4 58652 0 58652
+4 * 58652 58652
+3 * 58652
+3 * 58652 58652
+3 * 58652 0 0 0 0 0 0 0 0 58652 342
jcnd=58311/58652 0x401672 +1 
* * 
-9 * 341 341 0 1 0 0 1
+3 * 341
+3 * 341 341
+3 * 341 0 0 0 0 0 0 0 0 341
jcnd=341/341 0x401672 +1 
* * 
+6 +6 341 341 0 1 0 0 1
+5 * 341 341
+5 * 341 0 341
+5 +2 341 341
+3 +1 341 0 341
+3 * 341 341
+5 * 341 341
+1 * 341 341

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 341
+7 * 341
+7 * 341
+3 * 341
+3 * 341 0 341
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=341 0x4030b2 310 
* * 363577 106744 100239 66 23 16 66 23 16 22959 1044 1362 170
+5 * 341
+7 * 341
+7 * 341
+3 * 341
+3 * 341 0 341
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=341 0x402ff4 310 
* * 364388 105955 98257 40 9 71 40 9 71 23268 1207 1362
+5 * 341 0 0 1 0 0 1
+7 * 341
+7 * 341
+3 * 341
+3 * 341 0 341
cfn=(142)
calls=341 0x401585 -52 
* * 6121973 2706517 1413445 8 0 0 8 0 0 117986 684
+5 * 341 0 341
+8 * 341 341
+6 * 341 0 341
+6 * 341
+7 * 341
+3 * 341 0 341
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=341 0x402df4 414 
* * 85222 26731 19023 33 5 0 33 5 0 9463 258 682
+5 * 341
+7 * 341
+3 * 341 0 341 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=341 0x402e74 414 
* * 89570 28339 20323 7 1 0 7 1 0 10687 28 682
+5 +2 341
+7 * 341
+7 * 341
+3 * 341
+3 * 341 0 341
cfi=(2)
cfn=(4)
calls=341 0x4030b2 310 
* * 363194 106714 100128 2 0 1 2 0 1 22923 653 1362
+5 * 341
+7 * 341
+7 * 341
+3 * 341
+3 * 341 0 341
cfi=(2)
cfn=(80)
calls=341 0x402ff4 310 
* * 363489 105901 98111 0 0 2 0 0 2 23128 793 1362
+5 * 341 341
+6 * 341 0 0 1 0 0 1
+7 * 341
+7 * 341 0 341
+6 * 341 341
+8 * 341
+3 * 341
+3 * 341 0 341
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=341 0x401719 -33 
* * 2835415 1180542 650287 4 0 0 4 0 0 58993 342
+5 * 341 0 341
+8 * 341 341
+6 * 341 0 341
+6 * 341
+7 * 341 0 0 1 0 0 1
+3 * 341 0 341
cfi=(2)
cfn=(148)
calls=341 0x402df4 414 
* * 85222 26731 19023 0 0 0 0 0 0 9463 254 682
+5 * 341
+7 * 341
+3 * 341 0 341
cfi=(2)
cfn=(178)
calls=341 0x402e74 414 
* * 89570 28339 20323 0 0 0 0 0 0 10687 24 682
+5 +2 341 341
+7 * 341
+3 * 341 0 341
cfi=(2)
cfn=(2)
calls=341 0x402d74 645 
* * 4433 2046 682
+5 * 341 341
+6 * 341
+3 * 341
+3 * 341
+3 * 341 341
+7 * 341
+3 * 341 0 0 1 0 0 1
+3 * 341 0 341
cfi=(2)
cfn=(144)
calls=341 0x402d9a 770 
* * 3751 1705 1023
+5 * 341
+3 * 341
+7 * 341
+3 * 341
+3 * 341 0 341
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=341 0x402eda 901 
* * 34317 12715 9819 39 32 11 39 32 11 1527 74 47
+5 +1 341 341
+7 * 341
+3 * 341 0 341
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=341 0x402f54 645 
* * 4433 2046 682 0 1 0 0 1
+5 * 341 341
+6 * 341
+3 * 341
+3 * 341
+3 * 341 341
+7 * 341 0 0 1 0 0 1
+3 * 341
+3 * 341 0 341
cfi=(2)
cfn=(146)
calls=341 0x402dba 770 
* * 3751 1705 1023
+5 * 341
+3 * 341
+7 * 341
+3 * 341
+3 * 341 0 341
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=341 0x402f7a 901 
* * 33554 12496 9638 28 27 38 28 27 38 1371 59 47
+5 +1 341 341
+7 * 341
+3 * 341 0 341
cfi=(2)
cfn=(10)
calls=341 0x402f54 645 
* * 4433 2046 682
+5 * 341 341
+6 * 341
+3 * 341
+3 * 341
+3 * 341 341 0 1 0 0 1
+7 * 341
+3 * 341
+3 * 341 0 341
cfi=(2)
cfn=(146)
calls=341 0x402dba 770 
* * 3751 1705 1023
+5 * 341 341
+2 * 341
+4 * 341 341
+8 * 341 341
+8 * 341 0 341
+8 +1 341 341
+7 * 341
+3 * 341 0 341
cfi=(2)
cfn=(2)
calls=341 0x402d74 645 
* * 4433 2046 682
+5 * 341 341 0 1 0 0 1
+6 * 341
+3 * 341
+3 * 341
+3 * 341 341
+7 * 341
+3 * 341
+3 * 341 0 341
cfi=(2)
cfn=(144)
calls=341 0x402d9a 770 
* * 3751 1705 1023
+5 * 341 341
+4 * 341 341
+8 * 341
+4 * 341 341
+8 * 341
+3 * 341 0 341
+8 +2 341 0 341
+7 -12 341 341
+8 * 341 341
+7 * 341 0 0 0 0 0 0 0 0 341 2
jcnd=1/341 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 341
+7 * 341
+3 * 341 0 341
cfi=(2)
cfn=(2)
calls=341 0x402d74 645 
* * 4433 2046 682 2 0 1 2 0 1
+5 * 341
+3 * 341 341
+7 * 341
+3 * 341 0 341
cfi=(2)
cfn=(2)
calls=341 0x402d74 645 
* * 4433 2046 682 0 1 0 0 1
+5 * 341
+3 * 341 0 0 0 0 0 0 0 0 341 1
+2 * 341 0 0 1 0 0 1
+5 * 341
jump=341 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 341
+2 * 341 0 0 0 0 0 0 0 0 341
jcnd=341/341 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 341 0 341
+1 * 341
+3 * 341
+4 * 341 0 341
+4 * 341 0 341
+4 * 341 0 341
+5 +1 341 341
+4 * 341
+3 * 341 0 341
cfi=(2)
cfn=(2)
calls=341 0x402d74 645 
* * 4433 2046 682
+5 * 341
+3 * 341 0 341
+3 +1 341 341 0 1 0 0 1
+6 * 341 0 341
+3 * 341 341
+6 * 341 0 341
+3 +2 341 0 341
+7 * 341
jump=341 +86 * 
* * 
+2 +1 58652 58652
+3 * 58652
+3 * 58652 58652
+4 * 58652
+3 * 58652
+3 * 58652 0 58652
cfi=(2)
cfn=(144)
calls=58652 0x402d9a 770 
* * 645172 293260 175956
+5 * 58652 58652
+4 * 58652 58652
+5 * 58652
+4 * 58652 0 58652
+5 +1 58652 58652
+3 * 58652
+3 * 58652 58652
+4 * 58652
+3 * 58652
+3 * 58652 0 58652
cfi=(2)
cfn=(146)
calls=58652 0x402dba 770 
* * 645172 293260 175956
+5 * 58652 58652
+2 * 58652
+4 * 58652 58652
+5 * 58652
+4 * 58652 0 58652
+5 -2 58652 0 58652
+4 * 58652 58652
+3 * 58652
+3 * 58652 58652
+3 * 58652 0 0 0 0 0 0 0 0 58652 342
jcnd=58311/58652 -93 +1 
* * 
-9 * 341 341 0 1 0 0 1
+3 * 341
+3 * 341 341
+3 * 341 0 0 0 0 0 0 0 0 341
jcnd=341/341 -93 +1 
* * 
+2 +4 341 341
+3 * 341
+3 * 341 0 0 1 0 0 1
+4 * 341 341
+5 * 341
+4 * 341
+3 * 341 0 341
+5 +1 341 341
+3 * 341
+3 * 341
+4 * 341 341
+5 * 341
+4 * 341
+3 * 341 0 341
+5 +1 341 341
+5 * 341 341
+5 * 341 341
+5 * 341 0 0 1 0 0 1
+4 * 341
+3 * 341 0 341
+5 +2 341 341
+3 +1 341 0 341
+3 * 341 341
+5 * 341 341
+1 * 341 341

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 682
+4 * 682
+3 * 682 0 682
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=682 0x4044cc -35 
* * 3410 1364 1364
+5 * 682 682
+1 * 682 682

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682 1 0 0 1
+4 +1 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=682 0x4049d4 -35 
* * 4092 1364 2046 1 0 0 1
+5 * 682 682
+1 * 682 682

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 682
+4 * 682
+3 * 682 0 682
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=682 0x404520 -35 
* * 3410 1364 1364
+5 * 682 682
+1 * 682 682

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=682 0x404a28 -35 
* * 4092 1364 2046 1 0 1 1 0 1
+5 * 682 682
+1 * 682 682

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 682 0 682
+1 * 682
+3 * 682 0 682
+4 * 682 682
+4 * 682 682
+1 * 682 682

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 341 0 341
+1 * 341
+3 * 341
+4 * 341 0 341
+4 * 341 0 341
+4 * 341 0 341
+4 +1 341 341
+4 * 341 341
+4 * 341 341
+4 * 341
+3 * 341
+3 * 341 0 341
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=341 0x403df2 -87 
* * 8184 2728 3069 0 23 3 0 23 3 341 2
+5 * 341 341
+1 * 341 341

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 682 0 682 1 0 0 1
+1 * 682
+3 * 682 0 682
+4 * 682 682
+4 * 682 682
+1 * 682 682

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 341 0 341
+1 * 341
+3 * 341
+4 * 341 0 341
+4 * 341 0 341
+4 * 341 0 341
+4 +1 341 341
+4 * 341 341
+4 * 341 341
+4 * 341
+3 * 341
+3 * 341 0 341
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=341 0x40406a -87 
* * 8184 2728 3069 0 21 13 0 21 13 341
+5 * 341 341
+1 * 341 341

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 762 0 762
+1 * 762
+3 * 762 0 762
+4 +1 762 762
+4 * 762 762
+1 * 762 762

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1364 0 1364 1 0 0 1
+1 * 1364
+3 * 1364 0 1364
+4 +1 1364 1364 0 1 0 0 1
+4 * 1364 1364
+1 * 1364 1364

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 762 0 762
+1 * 762
+3 * 762 0 762 0 0 1 0 0 1
+4 +1 762 762
+4 * 762 762
+1 * 762 762

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1364 0 1364 1 0 0 1
+1 * 1364
+3 * 1364
+4 * 1364 0 1364
+4 +1 1364
+4 * 1364
+3 * 1364 0 1364
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1364 0x404ffe 790 
* * 8184 4092 2728 1 0 0 1
+5 * 1364 1364
+3 * 1364 1364
+1 * 1364 1364

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1364 0 1364 1 0 0 1
+1 * 1364
+3 * 1364 0 1364
+4 +1 1364 1364
+4 * 1364 1364
+1 * 1364 1364

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1364 0 1364 1 0 0 1
+1 * 1364
+3 * 1364
+4 * 1364 0 1364
+4 +1 1364
+4 * 1364
+3 * 1364 0 1364 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1364 0x40500c 790 
* * 8184 4092 2728 1 0 0 1
+5 * 1364 1364
+3 * 1364 1364
+1 * 1364 1364

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 682 0 682
+1 * 682
+3 * 682 0 682
+4 * 682 0 682
+4 * 682 682
+4 * 682 682
+1 * 682 682

fl=(5)
fn=(28)
0x404992 113 706 0 706 1 0 0 1
+1 * 706
+3 * 706 0 706
+4 +1 706
+10 * 706 706
+1 * 706 706

fn=(176)
0x4044cc 86 682 0 682
+1 * 682
+3 * 682 0 682
+4 * 682 682
+1 * 682 682

fn=(224)
0x403df2 129 341 0 341
+1 * 341
+3 * 341
+4 * 341 0 341
+4 * 341 0 341
+4 * 341 0 341
+4 +1 341 341
+4 * 341
+3 * 341
+5 * 341 0 341
cfi=(16)
cfn=(226)
calls=341 0x402d61 -20 
* * 2387 1023 1023
+5 * 341
+3 * 341 0 0 0 0 0 0 0 0 341 2
+2 * 341 341
+4 * 341 341 0 0 23 0 0 23
+2 * 341 0 341 0 0 3 0 0 3
+2 * 341 341
+1 * 341 341

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 690 0 690
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 * 690 0 690
+4 +1 690 690
+4 * 690
+3 * 690 0 690
cob=(5)
cfi=(8)
cfn=(164)
calls=690 0x387e4bb2f0 0 
* * 75814 18887 8831 23 4 0 23 4 0 18438 519 690
* * 690 690 0 1 1 0 1 1 0 0 0 690
+5 * 690 690
+1 * 690 690

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 690 0 690
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 * 690 0 690
+4 +1 690 690
+4 * 690
+3 * 690 0 690
cob=(5)
cfi=(8)
cfn=(164)
calls=690 0x387e4bb2f0 0 
* * 84543 22120 11434 0 1 0 0 1 0 20895 61 690
* * 690 690 0 0 0 0 0 0 0 0 0 690
+5 * 690 690
+1 * 690 690

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 690 0 690 1 0 0 1
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 * 690 0 690
+4 +2 690 690
+4 * 690
+3 * 690 0 690
cfn=(102)
calls=690 0x4048de +12 
* * 4140 1380 1380 1 0 0 1
+5 * 690 690
+4 * 690 0 0 1 0 0 1
+3 * 690
+2 * 690 0 0 0 0 0 0 0 0 690
jcnd=690/690 +7 +3 
* * 
+7 +3 690 690
+4 * 690
+4 * 690
+3 * 690 0 690
cob=(5)
cfi=(8)
cfn=(32)
calls=690 0x387e4bd0b0 0 
* * 199072 29126 27228 26 17 38 26 17 38 32351 1268 690
* * 690 690 0 0 0 0 0 0 0 0 0 690
+5 +1 690 690
+1 * 690 690

fn=(18)
0x404a28 81 682 0 682 1 0 0 1
+1 * 682
+3 * 682 0 682 0 0 1 0 0 1
+4 * 682 0 682
+4 * 682 682
+1 * 682 682

fn=(92)
0x4049d4 81 682 0 682 1 0 0 1
+1 * 682
+3 * 682 0 682
+4 * 682 0 682
+4 * 682 682
+1 * 682 682

fn=(196)
0x404520 86 682 0 682
+1 * 682
+3 * 682 0 682
+4 * 682 682
+1 * 682 682

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 690 0 690 1 0 0 1
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 * 690 0 690 1 0 0 1
+4 +2 690 690
+4 * 690
+3 * 690 0 690
cfn=(28)
calls=690 0x404992 +12 
* * 4140 1380 1380 1 0 0 1
+5 * 690 690
+4 * 690
+3 * 690
+2 * 690 0 0 0 0 0 0 0 0 690
jcnd=690/690 +7 +3 
* * 
+7 +3 690 690
+4 * 690
+4 * 690
+3 * 690 0 690
cob=(5)
cfi=(8)
cfn=(32)
calls=690 0x387e4bd0b0 0 
* * 197170 30492 31043 27 24 15 27 24 15 31672 937 690
* * 690 690 0 1 1 0 1 1 0 0 0 690
+5 +1 690 690
+1 * 690 690

fn=(102)
0x4048de 113 706 0 706 1 0 0 1
+1 * 706
+3 * 706 0 706
+4 +1 706
+10 * 706 706
+1 * 706 706

fn=(266)
0x40406a 129 341 0 341
+1 * 341
+3 * 341
+4 * 341 0 341
+4 * 341 0 341
+4 * 341 0 341
+4 +1 341 341
+4 * 341
+3 * 341
+5 * 341 0 341
cfi=(16)
cfn=(226)
calls=341 0x402d61 -20 
* * 2387 1023 1023
+5 * 341
+3 * 341 0 0 0 0 0 0 0 0 341
+2 * 341 341
+4 * 341 341 0 0 21 0 0 21
+2 * 341 0 341 0 0 13 0 0 13
+2 * 341 341
+1 * 341 341

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=682 0x404484 107 
* * 346864 115786 111698 25 3 4 25 3 4 13168 798 1360 170
+5 * 682 682
+1 * 682 682

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682 0 1 0 0 1
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=682 0x404a36 450 
* * 327768 108966 104878 24 3 4 24 3 4 13168 798 1360 170
+5 * 682 682
+1 * 682 682

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=682 0x40439c 107 
* * 346864 115786 111698 7 1 40 7 1 40 13168 783 1360
+5 * 682 682
+1 * 682 682

fn=(116)
0x40439c 107 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +10 682 682
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=682 0x4047d7 -26 
* * 337316 112376 108288 7 1 40 7 1 40 13168 783 1360
+5 +1 682 682
+1 * 682 682

fn=(118)
0x4047d7 91 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=682 0x4049e2 450 
* * 327768 108966 104878 7 1 40 7 1 40 13168 783 1360
+5 * 682 682
+1 * 682 682

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +10 682 682
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(52)
calls=682 0x404829 -26 
* * 337316 112376 108288 25 3 4 25 3 4 13168 798 1360 170
+5 +1 682 682
+1 * 682 682

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(4)
0x4030b2 310 682 0 682 1 0 0 1
+1 * 682
+3 * 682 0 682
+2 * 682 0 682
+2 * 682 0 682
+1 * 682
+4 * 682 0 682 1 0 0 1
+4 * 682 0 682
+4 +2 682 682
+4 * 682
+3 * 682 0 682
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=682 0x403b08 117 
* * 4092 2046 1364 1 0 1 1 0 1
+5 * 682
+3 * 682 0 682
cfi=(3)
cfn=(8)
calls=682 0x403afa -88 
* * 4092 2046 1364 1 0 0 1
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(10)
calls=682 0x402f54 645 
* * 8866 4092 1364 1 1 0 1 1
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682
+3 * 682
+3 * 682 0 682
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=682 0x403b16 134 
* * 280335 60844 57979 30 19 12 30 19 12 32714 899 1364
+5 +4 682 682 0 1 0 0 1
+4 * 682
+3 * 682 0 682
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=682 0x40333c 113 
* * 4092 2046 1364 2 0 0 2
+5 * 682
+3 * 682 682
+4 * 682 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=682 0x403ba4 565 
* * 17050 6820 5456 3 0 0 3
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=682 0x403b74 547 
* * 17050 6820 5456
+5 * 682
+3 * 682
+3 * 682
+3 * 682
+3 * 682 0 682 1 0 0 1
cfi=(11)
cfn=(48)
calls=682 0x403bd5 -60 
* * 357094 119196 115790 26 3 4 26 3 4 13168 798 1360 170
+5 -3 682 682
+4 * 682 0 682
+4 * 682
jump=682 +28 +4 
* * 
+28 +4 682
+4 * 682 682
+1 * 682 682
+2 * 682 682
+2 * 682 682
+1 * 682 682

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+4 * 682 0 682
+4 * 682
+4 * 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=682 0x404380 726 
* * 6820 3410 2728 1 0 0 1
+5 * 682 682
+4 * 682 682
+1 * 682 682

fn=(178)
0x402e74 414 682 0 682
+1 * 682
+3 * 682 0 682
+1 * 682
+4 * 682 0 682 1 0 0 1
+4 +2 682 682
+4 * 682
+3 * 682 0 682
cfn=(40)
calls=682 0x40333c 113 
* * 4092 2046 1364
+5 * 682
+3 * 682 682
+4 * 682 682
+4 * 682 682
+4 * 682 682
+3 -1 682
+3 * 682
+3 * 682 0 682
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=682 0x40334a 148 
* * 21142 6820 8184 2 0 0 2
+5 +1 682 682
+4 * 682
+3 * 682 0 682
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=682 0x4032ca 159 
* * 137538 41674 27006 3 1 0 3 1 0 21374 52 1364
+5 * 682
jump=682 +28 * 
* * 
+28 * 682 0 0 1 0 0 1
+4 * 682 682
+1 * 682 682
+1 * 682 682

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 690 0 690 1 0 0 1
+1 * 690 0 0 1 0 0 1
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 0 690 690
+5 0 690 0 0 0 0 0 0 0 0 690
+2 0 690 690
+4 0 690 690
+4 0 690
+5 0 690
+3 0 690
+3 0 690 0 690
fi=(6) ???
cfi=(5)
cfn=(100)
calls=690 0x40461a 99 
* 0 217012 34646 32748 29 17 38 29 17 38 33041 1268 1380
+5 0 690
fi=(6)
jump=690 +7 0 
* 0 
+7 0 690 690
+1 0 690 690

fn=(144)
0x402d9a 770 176638 0 176638
+1 * 176638
+3 * 176638 0 176638
+4 * 176638 0 176638
+4 +1 176638 176638
+4 * 176638 176638
+3 * 176638 176638
+4 * 176638
+4 * 176638
+3 * 176638 176638
+1 * 176638 176638

fn=(146)
0x402dba 770 176638 0 176638
+1 * 176638
+3 * 176638 0 176638 1 0 0 1
+4 * 176638 0 176638
+4 +1 176638 176638
+4 * 176638 176638
+3 * 176638 176638
+4 * 176638
+4 * 176638
+3 * 176638 176638
+1 * 176638 176638

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 682
+4 * 682
+3 * 682 0 682
cfi=(4)
cfn=(194)
calls=682 0x403d7e +42 
* * 9548 3410 3410 1 0 0 1
+5 * 682 682
+1 * 682 682

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 682 0 682 1 0 0 1
+1 * 682
+3 * 682 0 682
+1 * 682
+4 * 682 0 682
+4 +2 682 682
+4 * 682 682
+4 * 682
+3 * 682 682
+4 * 682 682
+3 * 682
+3 * 682
+3 * 682
+4 * 682
+3 * 682 682
+4 * 682 682
+3 -1 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=682 0x403d98 +11 
* * 102756 28716 18140 1 1 0 1 1 0 21374 52 1364
+5 +1 682 682
+4 * 682
+3 * 682 0 682
cfn=(192)
calls=682 0x403296 -82 
* * 15686 5456 5456 1 0 0 1
+5 * 682
jump=682 +28 * 
* * 
+28 * 682
+4 * 682 682
+1 * 682 682
+1 * 682 682

fn=(2)
0x402d74 645 2760 0 2760 1 0 0 1
+1 * 2760
+3 * 2760 0 2760 0 0 1 0 0 1
+4 +1 2760 2760
+4 * 2760 2760 0 1 1 0 1 1
+4 * 2760
+3 * 2760 2760
+4 * 2760 2760
+3 * 2760
+3 * 2760
+3 * 2760
+4 * 2760 2760
+1 * 2760 2760

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=682 0x404236 -14 
* * 223729 39020 38883 24 19 8 24 19 8 32714 899 1364
+5 * 682 682
+4 * 682 0 682
+3 +1 682 682
+4 * 682 682 0 1 0 0 1
+3 * 682 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+3 * 682 682
+4 * 682
+4 * 682
+3 * 682 682
+4 * 682 0 682
+4 +1 682 682
+1 * 682 682

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682
+4 * 682 682 0 1 0 0 1
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(96)
calls=682 0x403fbe -14 
* * 224835 37418 34884 18 8 33 18 8 33 33228 1217 1364
+5 * 682 682
+4 * 682 0 682
+3 +1 682 682
+4 * 682 682
+3 * 682 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+3 * 682 682
+4 * 682
+4 * 682
+3 * 682 682
+4 * 682 0 682
+4 +1 682 682
+1 * 682 682

fn=(244)
0x402f7a 901 341 0 341
+1 * 341
+3 * 341 0 0 1 0 0 1
+4 * 341 0 341
+4 * 341 0 341
+4 +2 341 341
+4 * 341 341
+4 * 341 341
+4 * 341 341
+4 * 341
+3 * 341 0 0 0 0 0 0 0 0 341
jcnd=8/341 +51 +10 
* * 
+2 +3 333 333
+4 * 333 333
+4 * 333 333
+4 -1 333 333
+4 * 333
+3 * 333
+3 * 333 0 333
cfi=(3)
cfn=(264)
calls=333 0x4036b1 215 
* * 12654 4329 4662 0 21 9 0 21 9 333
+5 +2 333 333
+4 * 333 333
+4 * 333
+4 * 333 333
+4 * 333 0 333
+4 * 333
jump=333 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11882 3694 3215 27 6 29 27 6 29 697 59 47
+5 +2 341 341
+1 * 341 341

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1388 0 1388 1 0 0 1
+1 * 1388
+3 * 1388 0 1388 1 0 0 1
+4 +1 1388 1388
+4 * 1388 1388
+1 * 1388 1388

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+3 * 682 0 682
+4 * 682
+4 * 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(10)
cfn=(110)
calls=682 0x404380 726 
* * 6820 3410 2728
+5 * 682 682
+4 * 682 682
+1 * 682 682

fn=(148)
0x402df4 414 682 0 682
+1 * 682
+3 * 682 0 682
+1 * 682
+4 * 682 0 682 1 0 0 1
+4 +2 682 682
+4 * 682
+3 * 682 0 682
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=682 0x40325e 113 
* * 4092 2046 1364
+5 * 682
+3 * 682 682
+4 * 682 682
+4 * 682 682
+4 * 682 682
+3 -1 682
+3 * 682
+3 * 682 0 682
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=682 0x40326c 148 
* * 21142 6820 8184 4 0 0 4
+5 +1 682 682
+4 * 682
+3 * 682 0 682
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=682 0x4031ec 159 
* * 128842 38458 24406 27 5 0 27 5 0 18926 512 1364
+5 * 682
jump=682 +28 * 
* * 
+28 * 682 0 0 1 0 0 1
+4 * 682 682
+1 * 682 682
+1 * 682 682

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 690 0 690 1 0 0 1
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 * 690 0 690
+4 +2 690 690
+5 * 690 0 0 0 0 0 0 0 0 690
+2 +1 690 690
+4 * 690 690
+4 * 690 690
+4 * 690
+3 * 690
+3 * 690 0 690
cfi=(5)
cfn=(160)
calls=690 0x4044d6 -65 
* * 84094 21647 12281 24 5 0 24 5 0 18438 519 1380
+5 +1 690 690
+1 * 690 690

fn=(12)
0x403b16 134 682 0 682
+1 * 682
+3 * 682 0 682
+1 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=682 0x4043ca -45 
* * 24552 8866 9548 4 0 4 4 0 4
+5 +1 682 682 0 1 0 0 1
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(20)
calls=682 0x404412 +43 
* * 240779 47204 43657 25 19 8 25 19 8 32714 899 1364
+5 * 682
jump=682 +28 * 
* * 
+28 * 682
+4 * 682 682
+1 * 682 682
+1 * 682 682

fn=(14)
0x4043ca 90 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682 0 0 1 0 0 1
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(4)
cfn=(16)
calls=682 0x404804 +24 
* * 12276 4092 4774 2 0 1 2 0 1
+5 * 682 682
+4 * 682 0 682 0 0 2 0 0 2
+7 * 682 682
+4 * 682 0 682 1 0 0 1
+8 * 682 682
+4 * 682 0 682
+8 +1 682 682
+1 * 682 682

fn=(80)
0x402ff4 310 682 0 682 1 0 0 1
+1 * 682
+3 * 682 0 682
+2 * 682 0 682
+2 * 682 0 682
+1 * 682 0 0 1 0 0 1
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682
+4 * 682
+3 * 682 0 682
cfn=(82)
calls=682 0x4039fc 117 
* * 4092 2046 1364 2 0 0 2
+5 * 682
+3 * 682 0 682
cfi=(3)
cfn=(84)
calls=682 0x4039ed -88 
* * 4092 2046 1364
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(2)
calls=682 0x402d74 645 
* * 8866 4092 1364
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682
+3 * 682
+3 * 682 0 682 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=682 0x403a0a 134 
* * 281441 59242 53980 25 8 33 25 8 33 33228 1217 1364
+5 +4 682 682
+4 * 682
+3 * 682 0 682
cfn=(106)
calls=682 0x40325e 113 
* * 4092 2046 1364 1 0 0 1
+5 * 682
+3 * 682 682
+4 * 682 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(108)
calls=682 0x403a98 565 
* * 17050 6820 5456 2 0 0 2
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(112)
calls=682 0x403a68 547 
* * 17050 6820 5456
+5 * 682
+3 * 682
+3 * 682
+3 * 682
+3 * 682 0 682
cfi=(11)
cfn=(114)
calls=682 0x403ac9 -60 
* * 357094 119196 115790 7 1 40 7 1 40 13168 783 1360
+5 -3 682 682
+4 * 682 0 682
+4 * 682
jump=682 +28 +4 
* * 
+28 +4 682
+4 * 682 682
+1 * 682 682
+2 * 682 682
+2 * 682 682
+1 * 682 682

fn=(188)
0x403d98 171 690 0 690 1 0 0 1
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 * 690 0 690
+4 +2 690 690
+5 * 690 0 0 0 0 0 0 0 0 690 8
+2 +1 690 690
+4 * 690 690
+4 * 690 690
+4 * 690
+3 * 690
+3 * 690 0 690
cfi=(5)
cfn=(190)
calls=690 0x40452a -65 
* * 92823 24880 14884 0 1 0 0 1 0 20895 61 1380
+5 +1 690 690
+1 * 690 690

fn=(22)
0x404236 167 690 0 690 1 0 0 1
+1 * 690
+3 * 690
+4 * 690 0 690 1 0 0 1
+4 * 690 0 690
+4 0 690 690
+5 0 690 0 0 0 0 0 0 0 0 690
+2 0 690 690
+4 0 690 690
+4 0 690
+5 0 690
+3 0 690
+3 0 690 0 690
fi=(6)
cfi=(5)
cfn=(26)
calls=690 0x404730 99 
* 0 215110 36012 36563 31 25 15 31 25 15 32362 937 1380
+5 0 690
fi=(6)
jump=690 +7 0 
* 0 
+7 0 690 690
+1 0 690 690

fn=(42)
0x403ba4 565 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+4 * 682 0 682
+4 * 682
+4 * 682 0 0 1 0 0 1
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=682 0x404468 726 
* * 6820 3410 2728 1 0 0 1
+5 * 682 682
+4 * 682 682
+1 * 682 682

fn=(46)
0x403b74 547 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+3 * 682 0 682
+4 * 682
+4 * 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(10)
cfn=(44)
calls=682 0x404468 726 
* * 6820 3410 2728
+5 * 682 682
+4 * 682 682
+1 * 682 682

fn=(86)
0x403a0a 134 682 0 682
+1 * 682
+3 * 682 0 682
+1 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=682 0x4042e2 -45 
* * 24552 8866 9548 5 0 0 5
+5 +1 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682 1 0 0 1
cfn=(94)
calls=682 0x40432a +43 
* * 241885 45602 39658 19 8 33 19 8 33 33228 1217 1364
+5 * 682
jump=682 +28 * 
* * 
+28 * 682
+4 * 682 682
+1 * 682 682
+1 * 682 682

fn=(88)
0x4042e2 90 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682 1 0 0 1
cfi=(4)
cfn=(90)
calls=682 0x4047b2 +24 
* * 12276 4092 4774 3 0 0 3
+5 * 682 682
+4 * 682 0 682
+7 * 682 682
+4 * 682 0 682
+8 * 682 682
+4 * 682 0 682
+8 +1 682 682
+1 * 682 682

fn=(156)
0x4031ec 159 682 0 682 1 0 0 1
+1 * 682
+3 * 682 0 682
+1 * 682
+4 * 682 0 682
+4 +2 682 682
+4 * 682 682 0 1 0 0 1
+4 * 682
+3 * 682 682
+4 * 682 682
+3 * 682
+3 * 682
+3 * 682
+4 * 682
+3 * 682 682
+4 * 682 682
+3 -1 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(158)
calls=682 0x403ce6 +11 
* * 94060 25500 15540 24 5 0 24 5 0 18926 512 1364
+5 +1 682 682
+4 * 682
+3 * 682 0 682
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=682 0x4031b8 -82 
* * 15686 5456 5456 1 0 0 1
+5 * 682
jump=682 +28 * 
* * 
+28 * 682
+4 * 682 682
+1 * 682 682
+1 * 682 682

fn=(172)
0x4031b8 79 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 682
+4 * 682
+3 * 682 0 682
cfi=(4)
cfn=(174)
calls=682 0x403ccc +42 
* * 9548 3410 3410
+5 * 682 682
+1 * 682 682

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1396 0 1396 1 0 0 1
+1 * 1396
+3 * 1396 0 1396
+4 +1 1396 1396
+4 * 1396 1396 0 0 2 0 0 2
+4 * 1396
+3 * 1396 1396
+4 * 1396 1396
+3 * 1396
+3 * 1396
+3 * 1396
+4 * 1396 1396
+1 * 1396 1396

fn=(106)
0x40325e 113 1388 0 1388 1 0 0 1
+1 * 1388
+3 * 1388 0 1388
+4 +1 1388 1388
+4 * 1388 1388
+1 * 1388 1388

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 698 0 698 1 0 0 1
+1 * 698
+3 * 698 0 698 0 0 1 0 0 1
+4 +1 698 698
+4 * 698 698
+1 * 698 698

fn=(82)
0x4039fc 117 698 0 698 1 0 0 1
+1 * 698
+3 * 698 0 698 1 0 0 1
+4 +1 698 698
+4 * 698 698
+1 * 698 698

fn=(200)
0x402eda 901 341 0 341
+1 * 341
+3 * 341
+4 * 341 0 341
+4 * 341 0 341
+4 +2 341 341
+4 * 341 341
+4 * 341 341
+4 * 341 341
+4 * 341
+3 * 341 0 0 0 0 0 0 0 0 341 9
jcnd=8/341 +51 +10 
* * 
+2 +3 333 333
+4 * 333 333
+4 * 333 333
+4 -1 333 333
+4 * 333
+3 * 333
+3 * 333 0 333
cfi=(3)
cfn=(222)
calls=333 0x403373 215 
* * 12654 4329 4662 0 22 2 0 22 2 333 2
+5 +2 333 333
+4 * 333 333
+4 * 333
+4 * 333 333
+4 * 333 0 333
+4 * 333
jump=333 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12645 3913 3396 36 10 9 36 10 9 853 63 47
+5 +2 341 341
+1 * 341 341

fl=(12)
fn=(120)
0x4049e2 450 682 0 682
+1 * 682
+3 * 682 0 682
+1 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +10 682 682
+4 * 682
+3 * 682 0 682
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=682 0x404bc6 288 
* * 10230 4092 3410 3 0 0 3
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(122)
calls=682 0x404bc6 288 
* * 10230 4092 3410
+5 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=682 0x404be0 -36 
* * 292304 96690 92602 4 1 40 4 1 40 13168 783 1360
+5 +1 682
+4 * 682 682
+1 * 682 682
+1 * 682 682

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 730 0 730
+1 * 730
+3 * 730
+4 * 730 0 730 1 0 0 1
+4 +1 730 730
+4 * 730
+3 * 730 0 730
cfi=(13)
cfn=(130)
calls=730 -33 -66 
* * 4380 2190 1460 0 0 1 0 0 1
+5 * 730 730
+1 * 730 730

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1364 0 1364
+1 * 1364
+3 * 1364
+4 * 1364 0 1364
+4 +1 1364 1364
+4 * 1364
+3 * 1364 0 1364
cfi=(13)
cfn=(134)
calls=1364 0x404e98 -58 
* * 21824 8184 6820 2 0 0 2
+5 * 1364 1364
+1 * 1364 1364

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +8 682 0 682
+4 +3 682 682
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=682 0x404eb5 -22 
* * 218648 72138 67368 1 1 40 1 1 40 13168 783 1360
+5 +1 682 682
+1 * 682 682

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1364 0 1364 1 0 0 1
+1 * 1364
+3 * 1364
+4 * 1364 0 1364
+4 +1 1364 1364
+4 * 1364
+3 * 1364 0 1364
cfi=(13)
cfn=(124)
calls=1364 0x404d36 -77 
* * 8184 4092 2728 2 0 0 2
+5 * 1364 1364
+1 * 1364 1364

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1364 0 1364 1 0 0 1
+1 * 1364
+3 * 1364
+4 * 1364 0 1364 1 0 0 1
+4 +1 1364 1364
+4 * 1364
+3 * 1364 0 1364
cfi=(13)
cfn=(58)
calls=1364 0x404d8f -77 
* * 8184 4092 2728 1 0 0 1
+5 * 1364 1364
+1 * 1364 1364

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 698 0 698
+1 * 698
+3 * 698
+4 * 698 0 698 1 0 0 1
+4 * 698 0 698
+4 * 698 0 698
+4 +2 698 698
+4 * 698 698
+4 * 698
+3 * 698
+3 * 698
+4 * 698 0 698
+4 +1 698 698
+5 * 698 0 0 0 0 0 0 0 0 698
jcnd=8/698 +33 +2 
* * 
+2 +1 690 690
+4 * 690
+8 * 690 690
+4 * 690 690
+4 * 690
+3 * 690 0 0 1 0 0 1
+3 * 690 0 690 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=690 0x3877c83840 0 
* * 200674 64952 63577 11 2 20 11 2 20 12570 802 685 170
* * 690 690 0 1 1 0 1 1 0 0 0 690
+5 +1 698 698
+4 * 698
+8 * 698 698
+4 * 698
+3 +1 698 698
+1 * 698 698

fn=(140)
0x404eb5 368 698 0 698
+1 * 698
+3 * 698
+4 * 698 0 698 1 0 0 1
+4 * 698 0 698
+4 * 698 0 698 0 0 1 0 0 1
+4 +2 698 698
+4 * 698 698
+4 * 698
+3 * 698
+3 * 698
+4 * 698 0 698
+4 +1 698 698
+5 * 698 0 0 0 0 0 0 0 0 698
jcnd=8/698 +33 +2 
* * 
+2 +1 690 690
+4 * 690
+8 * 690 690
+4 * 690 690
+4 * 690
+3 * 690
+3 * 690 0 690
cob=(2)
cfi=(9)
cfn=(78)
calls=690 0x3877c83840 0 
* * 200674 64952 63577 0 1 41 0 1 41 12570 788 685
* * 690 690 0 0 0 0 0 0 0 0 0 690
+5 +1 698 698
+4 * 698
+8 * 698 698
+4 * 698
+3 +1 698 698
+1 * 698 698

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682 1 0 0 1
+4 * 682 0 682
+4 * 682 0 682
+4 +8 682 0 682
+4 +3 682 682
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(74)
calls=682 0x404f37 -22 
* * 218648 72138 67368 14 3 3 14 3 3 13168 798 1360 170
+5 +1 682 682
+1 * 682 682

fn=(126)
0x404be0 424 682 0 682
+1 * 682
+3 * 682 0 682
+2 * 682 0 682
+1 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +4 682 682
+4 * 682
+3 * 682 0 682
cfn=(128)
calls=682 0x404878 277 
* * 10230 4092 3410 1 0 0 1
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(132)
calls=682 0x404d44 277 
* * 17050 6138 5456 2 0 0 2
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(132)
calls=682 0x404d44 277 
* * 17050 6138 5456
+5 * 682
+3 * 682
+3 * 682
+3 * 682 0 682
cfn=(138)
calls=682 0x404d5e -49 
* * 228878 75548 71460 1 1 40 1 1 40 13168 783 1360
+5 +1 682
+4 * 682 682
+1 * 682 682
+2 * 682 682
+1 * 682 682

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 682 0 682
+1 * 682
+3 * 682 0 682
+1 * 682
+4 * 682 0 682 1 0 0 1
+4 * 682 0 682
+4 * 682 0 682
+4 +10 682 682
+4 * 682
+3 * 682 0 682
cfn=(56)
calls=682 0x404c38 288 
* * 10230 4092 3410 3 0 0 3
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(56)
calls=682 0x404c38 288 
* * 10230 4092 3410
+5 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=682 0x404c52 -36 
* * 292304 96690 92602 20 3 4 20 3 4 13168 798 1360 170
+5 +1 682
+4 * 682 682
+1 * 682 682
+1 * 682 682

fn=(60)
0x404c52 424 682 0 682
+1 * 682
+3 * 682 0 682
+2 * 682 0 682
+1 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +4 682 682
+4 * 682
+3 * 682 0 682
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=682 0x40492d 277 
* * 10230 4092 3410 2 0 0 2
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=682 0x404d9d 277 
* * 17050 6138 5456 2 0 1 2 0 1
+5 * 682
+3 * 682 682
+4 * 682
+3 * 682 0 682
cfn=(66)
calls=682 0x404d9d 277 
* * 17050 6138 5456
+5 * 682
+3 * 682
+3 * 682
+3 * 682 0 682
cfn=(72)
calls=682 0x404db7 -49 
* * 228878 75548 71460 15 3 3 15 3 3 13168 798 1360 170
+5 +1 682
+4 * 682 682
+1 * 682 682
+2 * 682 682
+1 * 682 682

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 730 0 730 1 0 0 1
+1 * 730
+3 * 730
+4 * 730 0 730
+4 +1 730 730
+4 * 730
+3 * 730 0 730 1 0 0 1
cfi=(13)
cfn=(64)
calls=730 -33 -66 
* * 4380 2190 1460
+5 * 730 730
+1 * 730 730

fn=(66)
0x404d9d 277 1364 0 1364
+1 * 1364
+3 * 1364
+4 * 1364 0 1364
+4 +1 1364 1364
+4 * 1364
+3 * 1364 0 1364
cfi=(13)
cfn=(68)
calls=1364 0x404f1a -58 
* * 21824 8184 6820 2 0 1 2 0 1
+5 * 1364 1364
+1 * 1364 1364

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1364 0 1364 1 0 0 1
+1 * 1364
+3 * 1364 0 1364
+4 +1 1364 1364
+4 * 1364 1364
+1 * 1364 1364

fn=(110)
0x404380 726 1364 0 1364 1 0 0 1
+1 * 1364
+3 * 1364 0 1364
+4 * 1364 0 1364
+4 * 1364 1364
+4 * 1364 1364
+3 * 1364 1364
+4 * 1364 0 1364
+3 * 1364 1364
+1 * 1364 1364

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1364 0 1364 1 0 0 1
+1 * 1364
+3 * 1364 0 1364
+4 +1 1364 1364
+4 * 1364 1364
+1 * 1364 1364

fn=(44)
0x404468 726 1364 0 1364
+1 * 1364
+3 * 1364 0 1364
+4 * 1364 0 1364
+4 * 1364 1364
+4 * 1364 1364
+3 * 1364 1364
+4 * 1364 0 1364 1 0 0 1
+3 * 1364 1364
+1 * 1364 1364

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 690 0 690 1 0 0 1
+1 * 690
+3 * 690 0 690
+4 * 690 0 690 1 0 0 1
+4 * 690 690
+1 * 690 690

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 690 0 690 1 0 0 1
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 +4 690 690
+4 * 690 690
+4 * 690
+3 * 690
+3 * 690 0 690
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=690 0x40454c -14 
* * 4140 1380 2070 1 0 0 1
+5 +2 690 690
+1 * 690 690

fn=(150)
0x40326c 148 690 0 690
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 * 690 0 690
+4 +3 690 690 0 1 0 0 1
+4 * 690 690
+4 * 690
+3 * 690
+3 * 690 0 690
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=690 0x403d1a -29 
* * 12420 4140 4830 3 0 0 3
+5 +1 690 690
+1 * 690 690

fn=(180)
0x40334a 148 690 0 690
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 * 690 0 690
+4 +3 690 690
+4 * 690 690
+4 * 690
+3 * 690
+3 * 690 0 690
cfn=(182)
calls=690 0x403dcc -29 
* * 12420 4140 4830 2 0 0 2
+5 +1 690 690
+1 * 690 690

fn=(152)
0x403d1a 122 690 0 690 1 0 0 1
+1 * 690
+3 * 690
+4 * 690 0 690
+4 * 690 0 690
+4 +4 690 690
+4 * 690 690
+4 * 690
+3 * 690
+3 * 690 0 690
cfn=(154)
calls=690 0x4044f8 -14 
* * 4140 1380 2070 2 0 0 2
+5 +2 690 690
+1 * 690 690

fn=(184)
0x40454c 112 690 0 690 1 0 0 1
+1 * 690
+3 * 690 0 690
+4 * 690 0 690
+4 * 690 690
+1 * 690 690

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2421 442 440 9 6 7 9 6 7 338 38 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3217 678 624 13 9 5 13 9 5 503 51 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1380 0 1380 1 0 0 1
+2 0 1380 0 1380
+2 0 1380 0 1380
+2 0 1380
+3 0 1380 0 1380
+2 0 1380 0 1380
+1 0 1380 0 1380
+1 0 1380
+3 0 1380
+4 0 1380 1380
+4 0 1380 0 1380
+4 0 1380
+3 0 1380
+4 0 1380
+3 0 1380
+3 0 1380
+3 0 1380 0 0 1 0 0 1 0 0 1380
+6 0 1380
+4 0 1380 0 0 0 0 0 0 0 0 1380
+6 0 1380
+4 0 1380 0 0 0 0 0 0 0 0 1380
+6 0 1380 1380
+7 0 1380 0 0 0 0 0 0 0 0 1380 2
jcnd=1256/1380 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1256
+2 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256 1256 0 1 0 0 1
+4 0 1256
+3 0 1256
+2 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 0x3877c78a40 0 
* 0 
+6 0 1256 1256
+4 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256 1256
+5 0 1256
+4 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 0x3877c7907c 0 
* 0 
+6 0 1256 1256
+5 0 1256
+4 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256
+4 0 1256 0 0 1 0 0 1 0 0 1256
+6 0 1256
+4 0 1256 1256
+7 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256 1256
+6 0 1256
+2 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256 1256
+4 0 1256 0 0 0 0 0 0 0 0 1256 5
jcnd=1252/1256 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1256 1256 0 1 0 0 1
+4 0 1256 0 0 0 0 0 0 0 0 1256 436
jcnd=488/1256 0x3877c78bf0 0 
* 0 
+6 0 768 768 0 0 1 0 0 1
+6 0 768 0 0 1 0 0 1 0 0 768 64
jcnd=61/768 0x3877c78a78 0 
* 0 
+6 0 707 707
+5 0 707 707
+5 0 707 707
+4 0 707 0 0 0 0 0 0 0 0 707
+6 0 707 707
+4 0 707 0 0 0 0 0 0 0 0 707
+6 0 707 707
+9 0 707 0 707
+4 0 707 0 707
+4 0 707 0 0 0 0 0 0 0 0 707 4
jcnd=699/707 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 707
+3 0 707
+4 0 707 707
+4 0 707 707
+4 0 707 0 0 0 0 0 0 0 0 707
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 768
+7 0 768 0 768
+4 0 768 0 768
+4 0 768 0 0 0 0 0 0 0 0 768 67
jcnd=441/768 +18 0 
* 0 
+2 0 327 0 327
+8 0 327 0 327
+8 0 327 0 327
+4 0 327
+3 0 327 0 327 1 0 0 1
+4 0 327
+4 0 327 0 327
+4 0 327 0 327
+4 0 327
+7 0 327 0 0 0 0 0 0 0 0 327
jcnd=327/327 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 488
+7 0 488 0 0 0 0 0 0 0 0 488
jcnd=488/488 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1256 0 0 1 0 0 1
+5 0 1256 1256
+4 0 1256 1256
+7 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 +16 0 
* 0 
+16 0 1256 0 1256
+5 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256
+3 0 1256
jump=1256 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1256 1256 0 1 0 0 1
+4 0 1256
+2 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256 1256
+7 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 +15 0 
* 0 
+15 0 1256 0 1256 1 0 0 1
+4 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256
+4 0 1256 1256
+1 0 1256 1256
+1 0 1256 1256
+2 0 1256 1256
+2 0 1256 1256
+2 0 1256 1256
+2 0 1256 1256
0x3877c78bf0 0 488 0 0 1 0 0 1
+3 0 488 0 488
+4 0 488
+3 0 488
+4 0 488 0 488 1 0 0 1
+4 0 488
jump=488 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1256 1256 0 1 1 0 1 1
+4 0 1256 0 0 1 0 0 1
+7 0 1256
+4 0 1256
+3 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1370 0 0 1 0 0 1
+7 0 1370
+3 0 1370
+3 0 1370 1370 0 0 1 0 0 1
+4 0 1370
+4 0 1370 0 0 0 0 0 0 0 0 0 0 1370 170
jump=168 0x3877c89be8 0 
* 0 
jump=178 0x3877c89bd0 0 
* 0 
jump=168 0x3877c89bb8 0 
* 0 
jump=168 +11 0 
* 0 
jump=168 0x3877c89c48 0 
* 0 
jump=170 0x3877c89c30 0 
* 0 
jump=172 0x3877c89c18 0 
* 0 
jump=178 0x3877c89c00 0 
* 0 
+11 0 168 168
+3 0 168
+4 0 168
+4 0 168 168
+4 0 168
+4 0 168 0 168
+4 0 168
+9 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-40 0 14426 14426
+4 0 14426 0 14426 0 0 3 0 0 3
+4 0 14426 14426
+4 0 14426 0 14426 0 0 15 0 0 15
+4 0 14426 14426
+4 0 14426 0 14426 0 0 19 0 0 19
+4 0 14426 14426
+4 0 14426 0 14426
+4 0 14426
+4 0 14426
+4 0 14426 0 0 0 0 0 0 0 0 14426 892
jcnd=1334/14426 0x3877c89c60 0 
* 0 
-32 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
jcnd=10/170 0x3877c89c60 0 
* 0 
-24 0 172 172
+4 0 172 0 172
+4 0 172 172
+4 0 172 0 172
+4 0 172
+4 0 172
+4 0 172 0 0 0 0 0 0 0 0 172
jcnd=8/172 0x3877c89c60 0 
* 0 
-16 0 178 178 0 1 0 0 1
+4 0 178 0 178
+4 0 178 0 0 1 0 0 1
+4 0 178
+4 0 178 0 0 0 0 0 0 0 0 178 4
jcnd=10/178 0x3877c89c60 0 
* 0 
+6 0 13744
+4 0 13744 13744
+3 0 13744 0 13744 0 0 1 0 0 1
+3 0 13744 13744
+4 0 13744 0 13744 0 0 3 0 0 3
+4 0 13744 13744
+4 0 13744 0 13744 0 0 18 0 0 18
+4 0 13744 13744
+4 0 13744 0 13744
+4 0 13744
jump=13744 -80 0 
* 0 
-30 0 168 168
+3 0 168 0 168
+3 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168 0 0 1 0 0 1
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
-24 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178
jump=178 -80 0 
* 0 
-16 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
+8 0 168 168
+3 0 168
+4 0 168 0 0 1 0 0 1
+4 0 168
+4 0 168
jump=168 -39 0 
* 0 
+9 0 178
+3 0 178 0 0 0 0 0 0 0 0 178
+6 0 178 178
+3 0 178
+4 0 178
jump=178 -72 0 
* 0 
+8 0 168
+4 0 168 168
+3 0 168 0 0 0 0 0 0 0 0 168
+2 0 168
+4 0 168
jump=168 -99 0 
* 0 
+11 0 178 178 0 1 0 0 1
+3 0 178
+4 0 178
+4 0 178
+4 0 178
jump=178 0x3877c89b78 0 
* 0 
+9 0 172 172
+3 0 172
+4 0 172
+4 0 172
+4 0 172
jump=172 0x3877c89b70 0 
* 0 
+9 0 170 170
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b68 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b60 0 
* 0 
+9 0 1370 0 1370 1 0 0 1
+3 0 1370 1370

fn=(104) alloc_perturb
0x3877c77180 0 1246 1246 0 1 0 0 1
+6 0 1246
+2 0 1246 0 0 0 0 0 0 0 0 1246 1
+2 0 1246 1246

fn=(38) _int_malloc
0x3877c79a00 0 1380 0 1380 1 0 0 1
+2 0 1380
+3 0 1380 0 1380
+2 0 1380 0 1380
+2 0 1380 0 1380 0 0 1 0 0 1
+2 0 1380
+3 0 1380 0 1380
+1 0 1380 0 1380
+1 0 1380
+4 0 1380
+4 0 1380 0 0 0 0 0 0 0 0 1380
+6 0 1380
+4 0 1380
+6 0 1380
+3 0 1380
+4 0 1380
+4 0 1380
+4 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380
+6 0 1380 1380 0 1 1 0 1 1
+7 0 1380 0 0 0 0 0 0 0 0 1380 5
jcnd=1258/1380 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1246
+4 0 1246 1246
+1 0 1246 1246
+1 0 1246 1246
+2 0 1246 1246
+2 0 1246 1246
+2 0 1246 1246
+2 0 1246 1246
+7 0 1275
+7 0 1275 0 0 1 0 0 1 0 0 1275 5
jcnd=372/1275 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 11 0 0 11
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 372 0 0 1 0 0 1
+3 0 372
+4 0 372
+4 0 372 0 0 1 0 0 1 0 0 372
jcnd=372/372 0x3877c7a1a4 0 
* 0 
+30 0 372 372
+6 0 372
+5 0 372 0 0 0 0 0 0 0 0 372 1
jcnd=371/372 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 911 244 193 8 3 0 8 3 0 187 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1274 0 0 1 0 0 1
+3 0 1274
+3 0 1274
+3 0 1274
+4 0 1274
+3 0 1274
+4 0 1274 0 1274
+5 0 1274
+3 0 1274 0 1274
+4 0 1274 0 1274
+4 0 1274 0 1274
+5 0 1274
+3 0 1274
+3 0 1274
+3 0 1274
+3 0 1274
+4 0 1274
+4 0 1274 0 0 1 0 0 1
+4 0 1274 0 1274
+4 0 1274
+4 0 1274 0 1274
+5 0 1274 0 1274
+5 0 1274
+3 0 1274
+3 0 1274 0 1274
+5 0 1274
+5 0 1274
+3 0 1274 0 1274
+4 0 1274 0 1274
+4 0 1274
+6 0 1274 0 1274
+4 0 1274 0 1274
+5 0 1274 0 0 1 0 0 1
+3 0 1274
+3 0 1274
+3 0 1274
jump=1274 +87 0 
* 0 
+8 0 963
+3 0 963
+4 0 963
+2 0 963
+2 0 963
+3 0 963
+3 0 963
+3 0 963
+2 0 963
+2 0 963
+5 0 963
+2 0 963 963 0 0 2 0 0 2
+4 0 963
+3 0 963
+4 0 963 0 963
+4 0 963 0 963
+8 0 963
+7 0 963 0 963
+4 0 963 0 963 0 0 1 0 0 1
+4 0 963 0 963
+4 0 963 0 0 0 0 0 0 0 0 963
-38 0 317
+3 0 317
+4 0 317 0 317
+4 0 317 0 317
+8 0 317
+7 0 317 0 317
+4 0 317 0 317
+4 0 317 0 317
+4 0 317 0 0 0 0 0 0 0 0 317
+6 0 2555 2555 0 1 0 0 1
+4 0 2555
+3 0 2555 0 0 0 0 0 0 0 0 2555 145
jcnd=1226/2555 0x3877c79ef0 0 
* 0 
+6 0 1329 1329
+4 0 1329 1329
+4 0 1329
+4 0 1329 0 0 0 0 0 0 0 0 1329
+6 0 1329 1329 0 1 1 0 1 1
+7 0 1329 0 0 0 0 0 0 0 0 1329
+6 0 1329
+4 0 1329
+7 0 1329 0 0 0 0 0 0 0 0 1329 4
jcnd=419/1329 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1309
+3 0 1309 0 1309
+4 0 1309 0 1309
+5 0 1309 0 0 0 0 0 0 0 0 1309 15
jcnd=29/1309 0x3877c7a090 0 
* 0 
+6 0 1280
+7 0 1280 0 0 0 0 0 0 0 0 1280 166
jcnd=963/1280 0x3877c79c50 0 
* 0 
+6 0 317 0 0 1 0 0 1
+3 0 317
+4 0 317
+4 0 317 0 0 0 0 0 0 0 0 317
+6 0 317
+3 0 317
+4 0 317
+2 0 317
+2 0 317
+3 0 317
+3 0 317
+8 0 317
+3 0 317
+2 0 317
+2 0 317
+4 0 317 317
+4 0 317
+3 0 317 0 0 1 0 0 1 0 0 317 7
jcnd=317/317 0x3877c79e15 0 
* 0 
0x3877c79e15 0 317 0 317
+4 0 317 0 317
+4 0 317
+3 0 317
jump=317 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 333
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 6
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 1226 0 0 1 0 0 1
+7 0 1226
+3 0 1226 0 0 0 0 0 0 0 0 1226 2
jcnd=364/1226 0x3877c7a0b0 0 
* 0 
+6 0 1202 1202 0 1 0 0 1
+4 0 1202
+3 0 1202
+3 0 1202
+2 0 1202
+4 0 1202
+3 0 1202
+3 0 1202
+2 0 1202
+2 0 1202
+2 0 1202
+2 0 1202 1202 0 0 1 0 0 1
+8 0 1202
+5 0 1202
+5 0 1202
+2 0 1202 0 0 0 0 0 0 0 0 1202
-2 0 555
+2 0 555 0 0 0 0 0 0 0 0 555
+2 0 1757
+2 0 1757 0 0 0 0 0 0 0 0 1757 30
jcnd=992/1757 +64 0 
* 0 
+2 0 765
+8 0 765
+3 0 765
+3 0 765 0 0 0 0 0 0 0 0 765 1
jcnd=1/765 0x3877c79fc0 0 
* 0 
-6 0 914
+3 0 914
+3 0 914 0 0 0 0 0 0 0 0 914 7
jcnd=489/914 0x3877c79fc0 0 
* 0 
+2 0 1189
+2 0 1189 1189
+8 0 1189
+2 0 1189 0 0 0 0 0 0 0 0 1189 17
jcnd=914/1189 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 9476
+4 0 9476
+2 0 9476
+2 0 9476 0 0 0 0 0 0 0 0 9476 686
jcnd=8377/9476 -8 0 
* 0 
-2 0 992 0 0 1 0 0 1
+2 0 992 0 0 0 0 0 0 0 0 992 21
jcnd=886/992 -8 0 
* 0 
+2 0 1267 1267 0 0 7 0 0 7
+4 0 1267 0 0 1 0 0 1
+3 0 1267 0 0 0 0 0 0 0 0 1267 540
jcnd=712/1267 0x3877c7a1cf 0 
* 0 
+6 0 555
+2 0 555
+4 0 555
+2 0 555
+2 0 555
+2 0 555 0 555
+8 0 555
jump=555 0x3877c79f30 0 
* 0 
+37 0 490 490 0 1 0 0 1
+5 0 490 490
+4 0 490
+4 0 490 490
+5 0 490 0 0 0 0 0 0 0 0 490
jcnd=490/490 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 364 364
+4 0 364
+4 0 364
+2 0 364
+5 0 364 364 0 1 1 0 1 1
+4 0 364
+3 0 364 0 0 0 0 0 0 0 0 364 4
jcnd=340/364 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 372 0 0 1 0 0 1
+3 0 372 0 372
+4 0 372
jump=372 0x3877c79b99 0 
* 0 
+36 0 712 712 0 1 1 0 1 1
+4 0 712 712
+4 0 712
+3 0 712 712
+4 0 712
+4 0 712
+3 0 712
+3 0 712 712
+4 0 712 0 0 0 0 0 0 0 0 712
+6 0 712 712
+4 0 712 0 0 0 0 0 0 0 0 712
+6 0 712 712 0 1 0 0 1
+8 0 712 0 712
+4 0 712 0 712
+4 0 712 0 0 0 0 0 0 0 0 712 11
jcnd=418/712 +38 0 
* 0 
+2 0 294 294 0 0 2 0 0 2
+4 0 294
+3 0 294 0 0 0 0 0 0 0 0 294
+2 0 294 294
+5 0 294 0 0 0 0 0 0 0 0 294
+6 0 294 294
+4 0 294 0 294
+4 0 294 294
+4 0 294 0 294
+4 0 294
+4 0 294 0 0 0 0 0 0 0 0 294
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 691 691
+4 0 691 691 0 1 0 0 1
+4 0 691 0 0 0 0 0 0 0 0 691
+6 0 691
+4 0 691
+7 0 691 0 691 0 0 7 0 0 7
+4 0 691 0 691
+4 0 691 0 691
+4 0 691 0 691
+4 0 691 0 0 0 0 0 0 0 0 691 2
jcnd=226/691 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 226
+7 0 226 0 0 0 0 0 0 0 0 226
jcnd=226/226 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 700
+7 0 700 0 700
+4 0 700
+3 0 700
+3 0 700
+4 0 700
+3 0 700
+4 0 700
+3 0 700
+3 0 700
+4 0 700 0 700
+4 0 700 0 700 0 0 1 0 0 1
+4 0 700
jump=700 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 736
+4 0 736 0 0 1 0 0 1
+3 0 736
+3 0 736 0 736
cfn=(104)
calls=736 0x3877c77180 0 
* 0 2944 1472 0 0 0 0 0 0 0 736
+5 0 736
+3 0 736
jump=736 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 490 0 0 1 0 0 1
+7 0 490
+2 0 490
+4 0 490
+3 0 490
+3 0 490 0 490
+5 0 490
+3 0 490
+4 0 490
+3 0 490 0 0 1 0 0 1
+4 0 490
+4 0 490
+3 0 490
+4 0 490 0 490
+4 0 490 0 490 0 0 19 0 0 19
+4 0 490
+3 0 490
+3 0 490 0 490
cfn=(104)
calls=490 0x3877c77180 0 
* 0 1960 980 0 0 0 0 0 0 0 490 1
+5 0 490
+3 0 490
jump=490 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1380 0 1380 1 0 0 1
+5 0 1380 0 1380
+5 0 1380
+3 0 1380 0 1380
+5 0 1380
+4 0 1380 1380 0 0 1 0 0 1
+7 0 1380 1380 0 0 1 0 0 1
+3 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380
+6 0 1380 1380 0 0 1 0 0 1
+7 0 1380 1380 0 1 1 0 1 1
+4 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380
+2 0 1380 1380 0 0 1 0 0 1
+3 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380
jcnd=1380/1380 +97 0 
* 0 
+18 0 1380
+3 0 1380
+3 0 1380 0 1380
cfn=(38)
calls=1380 0x3877c79a00 0 
* 0 316202 38918 45851 45 34 52 45 34 52 48843 2172
+5 0 1380
+3 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380
+2 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380
+2 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380 21
+2 0 1380 1380
+7 0 1380 0 0 0 0 0 0 0 0 1380
jcnd=1380/1380 +13 0 
* 0 
+13 0 1380 0 1380
+2 0 1380 0 0 0 0 0 0 0 0 1380 12
+6 0 1380
+3 0 1380 1380
+4 0 1380 1380
+5 0 1380 1380
+5 0 1380
+4 0 1380 1380
+1 0 1380 0 0 1 0 0 1
+5 0 1380 1380 0 0 1 0 0 1
+7 0 1380 0 0 0 0 0 0 0 0 1380
jcnd=1380/1380 +14 0 
* 0 
+14 0 1380 0 1380 1 0 0 1
+3 0 1380 0 0 0 0 0 0 0 0 1380
+6 0 1380
jump=1380 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1380 0 1380 1 0 0 1
+2 0 1380
+3 0 1380
+3 0 1380 0 1380
+2 0 1380
+3 0 1380 0 1380
+1 0 1380
+3 0 1380 0 1380
+1 0 1380
+3 0 1380
+4 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380
+6 0 1380
+4 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380 4
jcnd=10/1380 0x3877c838d1 0 
* 0 
+2 0 1370
+3 0 1370
+3 0 1370
+3 0 1370
+3 0 1370
+3 0 1370 0 0 0 0 0 0 0 0 1370
jcnd=1370/1370 +41 0 
* 0 
+41 0 1370 0 0 1 0 0 1
+3 0 1370 0 0 0 0 0 0 0 0 1370
jcnd=1370/1370 0x3877c839c0 0 
* 0 
+24 0 1370
+3 0 1370
+4 0 1370
+3 0 1370
+3 0 1370
+3 0 1370
+3 0 1370
+3 0 1370 0 0 0 0 0 0 0 0 1370 682
jcnd=694/1370 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 686
+10 0 686 686 0 0 2 0 0 2
+3 0 686
+4 0 686 0 686
+3 0 686
+4 0 686
+4 0 686 0 0 0 0 0 0 0 0 686
jcnd=686/686 -18 0 
* 0 
-18 0 2114 2114
+3 0 2114
+4 0 2114 0 2114
+3 0 2114
+4 0 2114
+4 0 2114 0 0 0 0 0 0 0 0 2114 8
jcnd=1428/2114 -18 0 
* 0 
+2 0 1380
+4 0 1380
+3 0 1380 1380
+1 0 1380 1380
+1 0 1380 1380
+2 0 1380 1380 0 1 0 0 1
+2 0 1380 1380
0x3877c839c0 0 1370 0 0 1 0 0 1
+3 0 1370
+3 0 1370
+3 0 1370
+4 0 1370 0 1370 0 0 1 0 0 1
cfn=(284)
calls=1370 0x3877c89b20 0 
* 0 323342 120204 117464 6 1 60 6 1 60 15460 896 1370 170
+5 0 1370
jump=1370 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1380 1380 0 1 1 0 1 1
+7 0 1380 1380 0 0 1 0 0 1
+3 0 1380
+3 0 1380 0 0 1 0 0 1 0 0 1380
+6 0 1380
+3 0 1380 0 0 0 0 0 0 0 0 1380
+6 0 1380 1380
+4 0 1380
+4 0 1380
+2 0 1380 0 0 0 0 0 0 0 0 1380
+2 0 1380
+2 0 1380
+7 0 1380 0 0 0 0 0 0 0 0 1380
jcnd=1380/1380 +14 0 
* 0 
+14 0 1380
+2 0 1380
cfn=(170)
calls=1380 0x3877c78650 0 
* 0 134137 35487 20265 19 2 0 19 2 0 32433 580

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 3 0 0 3
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 10916456 4475348 2577031 241 101 141 241 101 141 313480 5423 8270 170
