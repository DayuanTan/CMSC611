version: 1
creator: callgrind-3.10.1
pid: 2151
cmd:  ./a.out
part: 817


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 6291456 B, 64 B, 12-way associative

desc: Timerange: Basic block 1690361 - 1692651
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(1) /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19
fl=(8) ???
fn=(124) operator delete(void*)
0x5d0f0 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 10
cob=(5) /lib/x86_64-linux-gnu/libc-2.19.so
cfi=(9) /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c
cfn=(128) free
calls=10 0x82d00 2917 
* 0 1778 375 256 27 14 0 27 14 0 428 13
* 0 10 10 0 1 1 0 1 1 0 0 0 10

fn=(30) operator new(unsigned long)
0x5ed90 0 10 0 10 1 0 0 1
+1 0 10
+5 0 10 0 10
+1 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10 0 10
cob=(5)
cfi=(9)
cfn=(34) malloc
calls=10 0x82660 2876 
* 0 1731 288 265 25 19 6 25 19 6 290 13
* 0 10 10 0 1 1 0 1 1 0 0 0 10
+5 0 10
+3 0 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +40 0 
* 0 
+40 0 10 0 0 1 0 0 1
+4 0 10 10
+1 0 10 10
+1 0 10 10

ob=(5)
fl=(9)
fn=(130) _int_free
0x7ee10 3814 10 0 10 1 0 0 1
+2 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+1 * 10 0 10
+1 * 10
+3 * 10
+4 +13 10 10
+4 -13 10 0 10
+4 +13 10
+3 * 10
+4 +6 10
+3 * 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +1 10 0 0 1 0 0 1
+4 * 10 0 0 0 0 0 0 0 0 10
+6 +11 10
+4 * 10 0 0 0 0 0 0 0 0 10
+6 * 10
+2 * 10 0 0 0 0 0 0 0 0 10
+6 +13 10 10
+7 * 10
+3 * 10 0 0 0 0 0 0 0 0 10 5
jcnd=5/10 0x7ef40 +75 
* * 
+6 +11 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 0 0 1 0 0 1
+4 * 5 5
+7 * 5 0 0 0 0 0 0 0 0 5
+6 1869 5 5
+6 3894 5
+4 1869 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 3896 5 5
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+6 +1 5
+3 * 5
+3 +1 5
+2 +3 5 5
+5 -3 5 0 0 1 0 0 1
+5 +9 5
+3 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+4 -5 5
+5 * 5
+2 * 5
+4 * 5
jump=5 +16 +14 
* * 
+16 +14 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 +2 
* * 
+16 +2 5 0 5 1 0 0 1
+4 +2 5
+3 * 5 5
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +2 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +15 4087 
* * 
+15 4087 5
+4 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+5 3933 5 0 0 1 0 0 1
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f2a8 +9 
* * 
+17 +18 5 5
+5 -4 5
+4 +4 5
+3 * 5 0 0 0 0 0 0 0 0 5
+6 +6 5 5
+6 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f9dc +2 
* * 
+6 +8 5 5 0 1 0 0 1
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +6 5
+3 * 5
+4 +1 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+8 * 5 0 0 0 0 0 0 0 0 5
+6 1869 5 5
+6 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 3983 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +70 +7 
* * 
+70 +7 5 5 0 1 0 0 1
+5 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f43d +46 
* * 
0x7f0a2 +65 5 0 0 1 0 0 1
+7 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+6 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f455 +1 
* * 
+6 +3 5 0 0 1 0 0 1
+7 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f462 +2 
* * 
0x7f2a8 3943 5 0 0 1 0 0 1
+5 * 5 5
+4 * 5 5
+7 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 0 5 1 0 0 1
+5 * 5 0 0 0 0 0 0 0 0 5
+6 * 5
+6 +2 5 0 5
+8 * 5
jump=5 0x7ef5f +7 
* * 
0x7f380 4075 5 5 0 1 0 0 1
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+7 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +15 * 
* * 
+15 * 5 0 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +10 5
+4 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5 0 1 0 0 1
+2 * 5 5
+2 * 5 5
+2 * 5 5
0x7f43d -51 5 0 0 1 0 0 1
+3 +1 5 0 0 1 0 0 1
+3 * 5
+4 * 5 0 5
+4 +1 5 0 5
+5 * 5
jump=5 0x7f0a2 +17 
* * 
+5 +19 5
+3 * 5 0 5
cfn=(166) malloc_consolidate
calls=5 0x7e6b0 +47 
* * 753 130 141 8 12 0 8 12 0 188 8
+5 * 5
jump=5 0x7f0bb +2 
* * 
+5 +4 5 5
+7 * 5 5
+4 * 5
+4 * 5 5 0 0 1 0 0 1
+7 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f380 +14 
* * 
0x7f9dc 3960 5 5 0 1 0 0 1
+4 * 5
+4 * 5
+3 -2 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7ef7d +8 
* * 

fn=(36) _int_malloc
0x7fb70 3302 10 0 10 1 0 0 1
+2 * 10 0 10 0 0 1 0 0 1
+2 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+1 * 10 0 10
+1 * 10 0 0 1 0 0 1
+7 +30 10
+4 -30 10 0 10 0 0 1 0 0 1
+5 +30 10 0 0 0 0 0 0 0 0 10
+6 * 10
+3 * 10
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+4 * 10
+4 * 10
+4 +8 10 10 0 0 1 0 0 1
+7 * 10 0 0 0 0 0 0 0 0 10 5
jcnd=5/10 0x7fc29 +37 
* * 
+2 +2 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+4 +1 5
+3 +1 5 5
+5 -1 5
+4 * 5
+4 +5 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +3 5 5 0 0 1 0 0 1
+4 * 5
+3 * 5 5 0 0 1 0 0 1
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+5 +1 5
+3 -1 5
+3 +1 5 0 0 0 0 0 0 0 0 5
+2 * 5
jump=5 0x80212 +3 
* * 
+50 +25 5 0 0 1 0 0 1
+7 * 5 0 0 0 0 0 0 0 0 5
+2 +2 5
+3 * 5
+4 +1 5
+5 * 5 0 0 1 0 0 1
+5 +2 5 5 0 0 1 0 0 1
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7fced 3790 
* * 
+62 1862 5 5 0 1 1 0 1 1
+6 3743 5
+4 1862 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 3806 10
+7 * 10
+3 * 10 10
+1 * 10 10
+1 * 10 10
+2 * 10 10
+2 * 10 10
+2 * 10 10
+2 * 10 10
+63 -16 5 0 0 1 0 0 1
+2 4992 5 0 5
+9 * 5
+4 3790 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
+4 +2 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+7 4990 5
+8 +2 5 0 5
+5 -2 5 0 5
+5 * 5 0 0 1 0 0 1
+8 * 5 0 5
+5 3442 5
+6 * 5
jump=5 +73 * 
* * 
+3 +66 7
+2 * 7
+3 +1 7
+4 * 7
+2 * 7
+5 +1 7 7 0 0 2 0 0 2
+4 +50 7
+2 * 7
+5 * 7
+3 * 7
+2 * 7
+3 * 7 0 7 0 0 1 0 0 1
+7 +7 7
+4 -6 7 0 7
+5 +1 7 0 7
+5 +1 7 0 7 0 0 1 0 0 1
+4 +1 7 0 7
+4 +3 7 0 0 0 0 0 0 0 0 7
+6 3442 12 12 0 1 1 0 1 1
+4 * 12
+3 * 12 0 0 0 0 0 0 0 0 12 3
jcnd=5/12 0x80077 3576 
* * 
+6 +3 7 7 0 0 2 0 0 2
+5 -1 7 7
+5 +1 7
+4 * 7 0 0 0 0 0 0 0 0 7
+6 +1 7 7 0 0 1 0 0 1
+7 * 7 0 0 1 0 0 1 0 0 7
+6 +3 7
+4 +10 7
+7 * 7 0 0 0 0 0 0 0 0 7
+2 * 7
+3 * 7 0 0 0 0 0 0 0 0 7 3
jcnd=2/7 0x7ff70 +2 
* * 
+6 +34 7
+3 -5 7 0 7
+4 +1 7 0 7 0 0 1 0 0 1
+4 +4 7 0 0 0 0 0 0 0 0 7
+6 +13 7
+7 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x7fd90 +2 
* * 
0x7ff70 -45 2 2 0 1 0 0 1
+4 -1 2
+3 * 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x7fe1a +33 
* * 
0x80077 3576 5 0 0 1 0 0 1
+7 * 5 0 0 1 0 0 1 0 0 5
+6 +73 5
+4 +1 5
+5 +1 5
+2 -1 5
+5 +1 5
+3 +1 5
+2 * 5 5
+7 +1 5
+5 * 5
+2 +5 5
+2 * 5
+4 * 5
+2 * 5
+3 * 5
+3 * 5 0 0 0 0 0 0 0 0 5 1
jcnd=1/5 0x801cc +14 
* * 
-14 * 1
+2 * 1
+4 * 1
+2 * 1
+3 * 1
+3 * 1 0 0 0 0 0 0 0 0 1
+6 +4 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +3 5
+2 * 5 5
+7 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 -3 5
+3 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +3 5
+2 * 5 5
+7 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 -3 5
+3 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +3 5
+2 * 5 5
+7 * 5
+2 * 5 0 0 1 0 0 1 0 0 5
+6 -3 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 3765 
* * 
+16 3765 5 5 0 0 1 0 0 1
+4 +3 5
+4 -2 5 5 0 0 1 0 0 1
+4 * 5
+3 * 5
+4 +2 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x80748 +5 
* * 
0x801c0 -94 7
+4 +2 7
+2 * 7 0 0 0 0 0 0 0 0 7
+6 -4 8 0 0 1 0 0 1
+2 * 8 0 0 0 0 0 0 0 0 8 1
jcnd=7/8 -14 +2 
* * 
+2 +8 1 1 0 0 1 0 0 1
+4 +3 1
+3 * 1 0 0 0 0 0 0 0 0 1
+6 +2 1
+2 +1 1
+4 +1 1
+2 -2 1
+2 * 1
+2 * 1
+2 * 1 0 1
+7 +62 1
jump=1 0x800a7 -89 
* * 
+32 3355 5 5 0 1 0 0 1
+5 * 5
+3 * 5
+3 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7fc88 1862 
* * 
0x80748 3773 5 0 0 1 0 0 1
+7 -3 5
+3 +1 5
+4 +2 5
+3 -1 5 0 5
+4 +1 5
+3 * 5
+4 +2 5
+4 -2 5
+3 * 5
+4 * 5
+3 1862 5 5
+6 3773 5 0 5
+4 +2 5 0 5 0 0 1 0 0 1
+4 +3 5 0 0 1 0 0 1
+4 1862 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7fc9a 3806 
* * 

fn=(166)
0x7e6b0 4104 5 0 5 1 0 0 1
+2 * 5
+3 * 5 0 5
+2 * 5 0 5
+2 * 5 0 5
+2 * 5 0 5
+1 * 5 0 5
+1 * 5 0 0 1 0 0 1
+4 +22 5 5
+8 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+4 4990 5
+5 +2 5 0 5
+9 * 5 0 5
+5 4129 5
+4 +10 5
+4 +1 5
+4 4990 5 0 5 1 0 0 1
+5 * 5
+5 * 5 0 5
+5 * 5
+3 4142 5
+2 * 5 5 5 0 0 0 0 0 0 5
+3 +1 5
+3 * 5 0 0 0 0 0 0 0 0 5 1
jcnd=1/5 0x7e7b2 +6 
* * 
-8 -1 45
+2 * 45 45 45 0 0 0 0 0 0 45
+3 +1 45
+3 * 45 0 0 0 0 0 0 0 0 45 1
jcnd=2/45 0x7e7b2 +6 
* * 
+6 * 47
jump=47 0x7e850 +50 
* * 
+10 +22 1 1
+5 -1 1
+3 +1 1 1
+5 * 1 1
+4 * 1 0 0 0 0 0 0 0 0 1
+6 * 1 1
+4 * 1 0 0 0 0 0 0 0 0 1
+6 * 1 1
+9 * 1 0 1
+4 * 1 0 1
+4 * 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +16 +4 
* * 
+16 +4 5 5 0 1 0 0 1
+4 +4 5
+7 -3 5 0 5
+4 +1 5 0 5
+4 +2 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +18 +5 
* * 
+18 +5 5
+3 +1 5 0 5
+4 +1 5 0 5
+4 -2 5
+4 +12 5
+3 -12 5 0 5
+4 +3 5 0 5
+4 +9 5 0 0 0 0 0 0 0 0 5
jcnd=3/5 0x7e850 +3 
* * 
+6 * 2
+3 -41 2 2 0 0 2 0 0 2
+4 -3 2 2 0 0 1 0 0 1
+4 +3 2
+3 * 2
+4 +1 2
+4 +1 2 2 0 0 1 0 0 1
+5 * 2
+4 +2 2
+2 * 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +66 +7 
* * 
-30 -4 3 3 0 1 3 0 1 3
+4 -3 3 3
+4 +3 3
+3 * 3 0 0 1 0 0 1
+4 +1 3
+4 +1 3 3 0 0 2 0 0 2
+5 * 3
+4 +2 3
+2 * 3 0 0 0 0 0 0 0 0 3
jcnd=3/3 +66 +7 
* * 
+66 +7 5 5 0 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
+2 +3 5 5 0 0 3 0 0 3
+6 * 5 0 0 0 0 0 0 0 0 5 1
jcnd=1/5 0x7e728 +2 
* * 
+6 +4 4 0 4
+6 * 4
jump=4 0x7e76a +2 
* * 
+38 +26 50 0 0 1 0 0 1
+4 * 50
+4 * 50
+3 * 50 0 0 0 0 0 0 0 0 50 5
jcnd=45/50 0x7e710 -51 
* * 
+6 +6 5
+4 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5

fn=(128)
0x82d00 2917 10 10 0 1 0 0 1
+7 * 10 10 0 0 1 0 0 1
+3 +1 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +6 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +5 10 10
+4 -2 10
+4 +2 10
+2 * 10 0 0 0 0 0 0 0 0 10
+2 +16 10
+2 * 10
+7 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +14 +1 
* * 
+14 +1 10 0 0 1 0 0 1
+2 * 10
cfn=(130)
calls=10 0x7ee10 3814 
* * 1628 345 256 25 13 0 25 13 0 388 13

fn=(34)
0x82660 2876 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10
+4 +5 10 10 0 0 1 0 0 1
+7 * 10 10 0 0 1 0 0 1
+3 +1 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +3 10 10 0 1 1 0 1 1
+7 * 10 10 0 0 1 0 0 1
+4 +2 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 * 10
+5 * 10
+2 * 10 10 0 0 1 0 0 1
+7 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +14 * 
* * 
+14 * 10 0 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +4 10
+3 * 10
+3 * 10 0 10
cfn=(36)
calls=10 0x7fb70 3302 
* * 1321 188 215 21 14 6 21 14 6 190 13
+5 +1 10 0 0 1 0 0 1
+3 -1 10
+3 +1 10 0 0 0 0 0 0 0 0 10
+2 +11 10 10
+7 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +13 * 
* * 
+13 * 10 0 10
+2 * 10 0 0 0 0 0 0 0 0 10
+6 +1 10 10
+4 * 10
+2 * 10 0 0 0 0 0 0 0 0 10
+2 * 10
+2 * 10
+7 * 10 0 0 0 0 0 0 0 0 10
+2 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +3 10 0 0 1 0 0 1
+4 * 10
+3 * 10 10
+1 * 10 10
+1 * 10 10

fl=(14) /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S
fn=(76) __memmove_ssse3_back
0x14fc90 55 10 0 0 1 0 0 1
+3 +6 10
+3 +1 10 0 0 0 0 0 0 0 0 10 2
jcnd=2/10 +40 +7 
* * 
+2 +1 8 0 0 0 0 0 0 0 0 8
+6 +1 8
+7 +1 8 0 0 0 0 0 0 0 0 8 3
jcnd=5/8 0x14fd40 +58 
* * 
+6 +1 3
+7 * 3 3 0 0 1 0 0 1
+4 * 3
+4 * 3 0 0 0 0 0 0 0 0 0 0 3
jump=3 0x15261c 2707 
* * 
+4 +3 2 0 0 1 0 0 1
+7 +1 2 0 0 0 0 0 0 0 0 2
+2 +7 2
+3 +1 2
+3 +1 2
+7 * 2 2 0 0 1 0 0 1
+4 * 2
+4 * 2 0 0 0 0 0 0 0 0 0 0 2
jump=2 0x151ef2 2131 
* * 
0x14fd40 +44 5 5 0 1 1 0 1 1
+7 +2 5
+3 +1 5
+3 +1 5 0 0 0 0 0 0 0 0 5
+6 +2 5
+3 +1 5
+3 +1 5 5 0 0 5 0 0 5
+5 +1 5
+4 +1 5
+3 +1 5
+4 +1 5
+3 +1 5
+3 +1 5
+3 +1 5
+3 +1 5
+4 +1 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x14fe40 +51 
* * 
0x14fe40 +51 5 0 0 1 0 0 1
+7 +2 5 5
+4 +1 5 0 5 0 0 1 0 0 1
+4 +1 5 5 0 0 3 0 0 3
+4 +1 5 0 5
+4 +1 5 5 0 0 1 0 0 1
+4 +1 5 0 5
+4 +1 5 5
+4 +1 5 0 5
+4 +1 5 5 0 0 1 0 0 1
+4 +1 5 0 5 0 0 1 0 0 1
+4 +1 5 5 0 0 3 0 0 3
+4 +1 5 0 5
+4 +1 5 5 0 0 1 0 0 1
+4 +1 5 0 5
+4 +1 5 5 0 1 0 0 1
+4 +1 5 0 5
+4 +1 5
+7 +1 5
+4 +1 5
+4 +1 5 0 0 0 0 0 0 0 0 5
+2 +2 5 0 5
+5 +1 5
+7 +1 5
+3 +1 5
+3 +1 5
+7 * 5 5 0 0 1 0 0 1
+4 * 5
+4 * 5 0 0 0 0 0 0 0 0 0 0 5
jump=5 0x1520d4 2261 
* * 
0x151ef2 2131 2 2 0 1 2 0 1 2
+5 +1 2 0 2
+5 +2 2 2 0 1 0 0 1
+5 +1 2 2 0 0 1 0 0 1
+5 +1 2 0 2
+5 +1 2 0 2
+5 +1 2 2
0x1520d4 2261 5 5 0 1 1 0 1 1
+5 +1 5 0 5 0 0 1 0 0 1
+5 +2 5 5 0 0 3 0 0 3
+5 +1 5 0 5
+5 +2 5 5 0 0 1 0 0 1
+5 +1 5 0 5
+5 +2 5 5
+5 +1 5 0 5
+5 +2 5 5 0 1 1 0 1 1
+5 +1 5 0 5
+5 +2 5 5 0 0 2 0 0 2
+4 +1 5 0 5
+4 +2 5 5
0x15261c 2707 3 3 0 1 3 0 1 3
+5 +1 3 0 3
+5 +2 3 3 0 0 2 0 0 2
+5 +1 3 3
+4 +1 3 0 3
+5 +1 3 0 3
+4 +1 3 3

ob=(4) /home/paul878934/CMSC611/knn_predict/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(134) std::allocator<float>::~allocator()
0x40664e 121 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(136) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=10 0x407308 -35 
* * 50 20 20
+5 * 10 10
+1 * 10 10

fn=(14) std::allocator<float>::allocator(std::allocator<float> const&)
0x4076e0 115 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10 1 0 1 1 0 1
cfi=(5)
cfn=(16) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=10 0x407bb2 -35 
* * 60 20 30 1 0 0 1
+5 * 10 10
+1 * 10 10

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(80) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x404cc8 770 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+3 * 80 80
+4 * 80
+4 * 80
+3 * 80 80
+1 * 80 80

fn=(8) std::vector<float, std::allocator<float> >::size() const
0x405fa4 645 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 +1 10 10
+4 * 10 10 0 0 7 0 0 7
+4 * 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10
+3 * 10
+4 * 10 10
+1 * 10 10

fn=(132) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
0x4054c8 79 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(4)
cfn=(134)
calls=10 0x40664e +42 
* * 140 50 50
+5 * 10 10
+1 * 10 10

fn=(20) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x406d6e 167 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 0 10 10 0 1 0 0 1
+5 0 10 0 0 0 0 0 0 0 0 10
+2 0 10 10
+4 0 10 10
+4 0 10
+5 0 10
+3 0 10
+3 0 10 0 10
fi=(6) ???
cfi=(5)
cfn=(24) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
calls=10 0x407690 99 
* 0 2151 408 375 30 21 7 30 21 7 310 13 20 5
+5 0 10
fi=(6)
jump=10 +7 0 
* 0 
+7 0 10 10
+1 0 10 10

fn=(38) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
0x40556e 113 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(108) std::vector<float, std::allocator<float> >::~vector()
0x404d02 414 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(38)
calls=10 0x40556e 113 
* * 60 30 20
+5 * 10
+3 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+3 -1 10
+3 * 10
+3 * 10 0 10
cfi=(23) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(110) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=10 0x40557c 148 
* * 310 100 120 4 0 0 4
+5 +1 10 10
+4 * 10
+3 * 10 0 10 1 0 0 1
cfn=(116) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=10 0x4054fc 159 
* * 2608 675 486 34 16 0 34 16 0 448 13 20 5
+5 * 10
jump=10 +28 * 
* * 
+28 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(118) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x406194 171 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+5 * 10 0 0 0 0 0 0 0 0 10
+2 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 0 1 0 0 1
+3 * 10 0 10
cfi=(5)
cfn=(120) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
calls=10 0x406f02 -65 
* * 1938 425 306 30 16 0 30 16 0 438 13 20 5
+5 +1 10 10
+1 * 10 10

fn=(18) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x406e62 179 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfn=(20)
calls=10 0x406d6e -14 
* * 2311 458 415 32 21 7 32 21 7 320 13 20 5
+5 * 10 10
+4 * 10 0 10
+3 +1 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+3 * 10 10
+4 * 10
+4 * 10
+3 * 10 10
+4 * 10 0 10
+4 +1 10 10
+1 * 10 10

fn=(40) std::vector<float, std::allocator<float> >::end() const
0x406074 565 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10 0 1 0 0 1
+4 * 10 10
+4 * 10 0 10
+4 * 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(42) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=10 0x406eb8 726 
* * 100 50 40 1 0 0 1
+5 * 10 10
+4 * 10 10
+1 * 10 10

fn=(44) std::vector<float, std::allocator<float> >::begin() const
0x406044 547 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+3 * 10 0 10
+4 * 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(10)
cfn=(42)
calls=10 0x406eb8 726 
* * 100 50 40
+5 * 10 10
+4 * 10 10
+1 * 10 10

fn=(116)
0x4054fc 159 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10 1 0 0 1
+1 * 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10
+3 * 10
+4 * 10
+3 * 10 10
+4 * 10 10
+3 -1 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(118)
calls=10 0x406194 +11 
* * 2098 485 356 32 16 0 32 16 0 448 13 20 5
+5 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(132)
calls=10 0x4054c8 -82 
* * 230 80 80
+5 * 10
jump=10 +28 * 
* * 
+28 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(2) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x405136 310 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+1 * 10 0 0 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10 0 0 1 0 0 1
cfn=(4) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=10 0x405fd8 117 
* * 60 30 20 1 0 0 1
+5 * 10
+3 * 10 0 10
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(6) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=10 0x405fca -88 
* * 60 30 20
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(8)
calls=10 0x405fa4 645 
* * 130 60 20 1 7 0 1 7
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfn=(10) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=10 0x405fe6 134 
* * 3141 778 695 40 21 15 40 21 15 320 13 20 5
+5 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(38)
calls=10 0x40556e 113 
* * 60 30 20 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(40)
calls=10 0x406074 565 
* * 250 100 80 2 0 0 2
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(44)
calls=10 0x406044 547 
* * 250 100 80
+5 * 10
+3 * 10
+3 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfi=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
cfn=(46) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
calls=10 0x4060a5 -60 
* * 2717 915 860 22 35 5 22 35 5 53 5 20
+5 -3 10 10
+4 * 10 0 10
+4 * 10
jump=10 +28 +4 
* * 
+28 +4 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+2 * 10 10
+1 * 10 10

fn=(4)
0x405fd8 117 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 +1 10 10
+4 * 10 10
+1 * 10 10

fn=(10)
0x405fe6 134 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10 0 1 0 0 1
+4 * 10
+3 * 10
+3 * 10 0 10 0 0 1 0 0 1
cfn=(12) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=10 0x406e1a -45 
* * 360 130 140 5 0 7 5 0 7
+5 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(18)
calls=10 0x406e62 +43 
* * 2561 578 485 33 21 7 33 21 7 320 13 20 5
+5 * 10
jump=10 +28 * 
* * 
+28 * 10 0 0 1 0 0 1
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(12)
0x406e1a 90 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(4)
cfn=(14)
calls=10 0x4076e0 +24 
* * 180 60 70 3 0 1 3 0 1
+5 * 10 10 0 1 0 0 1
+4 * 10 0 10 0 0 6 0 0 6
+7 * 10 10
+4 * 10 0 10
+8 * 10 10
+4 * 10 0 10
+8 +1 10 10
+1 * 10 10

fl=(23)
fn=(114) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x407312 112 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+1 * 10 10

fn=(110)
0x40557c 148 10 0 10
+1 * 10
+3 * 10 0 0 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(112) void std::_Destroy<float*>(float*, float*)
calls=10 0x406668 -29 
* * 180 60 70 3 0 0 3
+5 +1 10 10
+1 * 10 10

fn=(112)
0x406668 122 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(114)
calls=10 0x407312 -14 
* * 60 20 30 1 0 0 1
+5 +2 10 10
+1 * 10 10

fl=(5)
fn=(26) __gnu_cxx::new_allocator<float>::max_size() const
0x407b9e 113 10 0 10
+1 * 10
+3 * 10 0 10 0 0 1 0 0 1
+4 +1 10
+10 * 10 10
+1 * 10 10

fn=(136)
0x407308 86 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 10
+1 * 10 10

fn=(16)
0x407bb2 81 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+1 * 10 10

fn=(24)
0x407690 99 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(26)
calls=10 0x407b9e +12 
* * 60 20 20 0 0 1 0 0 1
+5 * 10 10
+4 * 10
+3 * 10
+2 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +7 +3 
* * 
+7 +3 10 10
+4 * 10
+4 * 10
+3 * 10 0 10
cob=(1)
cfi=(8)
cfn=(30)
calls=10 0x5ed90 0 
* * 1891 328 295 28 20 6 28 20 6 300 13 10
* * 10 10 0 1 1 0 1 1 0 0 0 10 5
+5 +1 10 10
+1 * 10 10

fn=(120)
0x406f02 109 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cob=(1)
cfi=(8)
cfn=(124)
calls=10 0x5d0f0 0 
* * 1818 385 256 29 15 0 29 15 0 438 13 10
* * 10 10 0 1 1 0 1 1 0 0 0 10 5
+5 * 10 10
+1 * 10 10

fl=(3)
fn=(6)
0x405fca 224 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 10
+4 * 10 10
+1 * 10 10

fl=(12) /usr/include/c++/4.8/bits/stl_algobase.h
fn=(52) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x407bc0 450 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10
+3 * 10 0 10
cfn=(54) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=10 0x406f24 288 
* * 150 60 50 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(54)
calls=10 0x406f24 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(58) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=10 0x407ed6 -36 
* * 1767 585 520 19 35 5 19 35 5 53 5 20
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(60) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x4077c1 277 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
cfn=(62) std::_Iter_base<float*, false>::_S_base(float*)
calls=10 -33 -66 
* * 60 30 20 1 0 1 1 0 1
+5 * 10 10
+1 * 10 10

fn=(64) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x407740 277 20 0 20 1 0 0 1
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(66) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=20 0x407c06 -58 
* * 320 120 100 1 0 0 1
+5 * 20 20
+1 * 20 20

fn=(70) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x407774 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(72) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=10 0x407c40 -22 
* * 687 225 150 13 35 4 13 35 4 53 5 20
+5 +1 10 10
+1 * 10 10

fn=(54)
0x406f24 288 20 0 20 1 0 0 1
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(56) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=20 0x407732 -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(72)
0x407c40 368 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10 0 0 1 0 0 1
+4 +2 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+5 * 10 0 0 0 0 0 0 0 0 10
+2 +1 10 10
+4 * 10
+8 * 10 10 0 1 0 0 1
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cob=(5)
cfi=(14)
cfn=(76)
calls=10 0x14fc90 55 
* * 407 115 90 10 34 3 10 34 3 43 5 10
* * 10 10 0 1 1 0 1 1 0 0 0 10
+5 +1 10 10
+4 * 10
+8 * 10 10
+4 * 10
+3 +1 10 10
+1 * 10 10

fn=(58)
0x407ed6 424 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(60)
calls=10 0x4077c1 277 
* * 150 60 50 2 0 1 2 0 1
+5 * 10
+3 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10 0 10
cfn=(64)
calls=10 0x407740 277 
* * 250 90 80 2 0 0 2
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(64)
calls=10 0x407740 277 
* * 250 90 80
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(70)
calls=10 0x407774 -49 
* * 837 275 210 13 35 4 13 35 4 53 5 20
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fl=(13)
fn=(56)
0x407732 212 20 0 20
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(62)
0x4077b3 212 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10 0 0 1 0 0 1
+4 +1 10 10
+4 * 10 10
+1 * 10 10

fn=(66)
0x407c06 220 20 0 20 1 0 0 1
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20
+4 * 20
+3 * 20 0 20
cfi=(10)
cfn=(68) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=20 0x407f2e 790 
* * 120 60 40
+5 * 20 20
+3 * 20 20
+1 * 20 20

fl=(1) /home/paul878934/CMSC611/knn_predict/knn_predictprice_do.cpp
fn=(78) compEuclideanDistFloat(std::vector<float, std::allocator<float> >, std::vector<float, std::allocator<float> >, float)
0x401b2f 32 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5 1 0 0 1
+5 +1 5 5 0 0 1 0 0 1
+6 * 5 0 5
+3 +1 5 0 5
+7 * 5
jump=5 0x401bba * 
* * 
+2 +2 40 40
+3 * 40
+3 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(80)
calls=40 0x404cc8 770 
* * 440 200 120 1 0 0 1
+5 * 40 40
+4 * 40 0 40
+5 * 40 40
+3 * 40
+3 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(80)
calls=40 0x404cc8 770 
* * 440 200 120
+5 * 40 40
+4 * 40 40
+5 * 40
+4 * 40
+3 * 40 0 40
+5 +1 40 40
+5 * 40 40
+5 * 40 40
+5 * 40
+4 * 40 0 40
+5 -3 40 0 40
+4 * 40 40
+4 * 40 0 0 0 0 0 0 0 0 40 5
jcnd=35/40 0x401b56 +2 
* * 
-4 * 5 5 0 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x401b56 +2 
* * 
+2 +5 5 5 0 1 0 0 1
+5 * 5
+3 * 5 0 5
cob=(7) /lib/x86_64-linux-gnu/libm-2.19.so
cfi=(21) /build/eglibc-oGUzwX/eglibc-2.19/math/w_sqrt.c
cfn=(104) sqrt
calls=5 0x26b00 -12 
* * 25 5 0 1 0 0 1 0 0 5
* * 5 5 0 0 0 0 0 0 0 0 0 5
+5 * 5
+4 * 5
+4 * 5 0 5
+5 +1 5 5
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +8 +4 
* * 
+8 +4 5 5
+3 +1 5 0 5
+3 * 5 5
+5 * 5 5
+1 * 5 5

fn=(1) main'2
0x40367c 320 1 0 0 1 0 0 1
+3 * 1 0 1 1 0 1 1 0 1
+7 * 1
+7 +2 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1 0 0 1 0 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -12 
* * 618 206 175 49 15 9 49 15 9 23 1 4 1
+5 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -12 
* * 884 235 219 21 16 7 21 16 7 70 4 4
+5 * 1 1 0 1 1 0 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 424 179 105 6 1 0 6 1 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1 0 0 1 0 0 1
+6 * 1 0 0 1 0 0 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +92 
* * 533 136 113 37 16 0 37 16 0 92 5 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +92 
* * 229 71 53 3 0 0 3 0 0 20 0 2
+5 +1 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +39 +5 
* * 
+39 +5 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -18 
* * 617 206 175 1 4 1 1 4 1 24 1 4 1
+5 * 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -18 
* * 944 249 239 0 6 1 0 6 1 77 5 4
+5 * 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1 1 0 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 424 179 105 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +86 
* * 385 101 77 0 0 0 0 0 0 64 2 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +86 
* * 229 71 53 0 0 0 0 0 0 20 0 2
+5 +1 1 1
+8 * 1 1 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +39 +5 
* * 
+39 +5 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -24 
* * 617 206 175 0 2 1 0 2 1 24 1 4 1
+5 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -24 
* * 751 223 204 0 5 0 0 5 0 36 2 4
+5 * 1 1
+6 * 1
+7 * 1 0 0 1 0 0 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 424 179 105 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +80 
* * 385 101 77 0 0 0 0 0 0 64 2 2 1
+5 * 1 0 0 1 0 0 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +80 
* * 229 71 53 0 0 0 0 0 0 20 0 2
+5 +1 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +39 +5 
* * 
+39 +5 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -30 
* * 617 206 175 0 3 1 0 3 1 24 1 4 1
+5 * 1
+7 * 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -30 
* * 751 223 204 0 5 0 0 5 0 36 1 4
+5 * 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 424 179 105 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1 0 1 0 0 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +74 
* * 385 101 77 0 0 0 0 0 0 64 2 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +74 
* * 229 71 53 0 0 0 0 0 0 20 0 2
+5 +1 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +39 +5 
* * 
+39 +5 1
+7 * 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -36 
* * 618 206 175 0 3 1 0 3 1 23 1 4 1
+5 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -36 
* * 751 223 204 0 4 0 0 4 0 36 1 4
+5 * 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1 0 1 0 0 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 424 179 105 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +68 
* * 385 101 77 0 0 0 0 0 0 64 2 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +68 
* * 229 71 53 0 0 0 0 0 0 20 0 2
+5 +1 1 1 0 1 0 0 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +39 +5 
* * 

fl=(11)
fn=(46)
0x4060a5 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10 0 1 0 0 1
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(48) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=10 0x406ed4 107 
* * 2567 865 800 21 35 5 21 35 5 53 5 20
+5 * 10 10
+1 * 10 10

fn=(48)
0x406ed4 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(50) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=10 0x407705 -26 
* * 2427 815 750 21 35 5 21 35 5 53 5 20
+5 +1 10 10
+1 * 10 10

fn=(50)
0x407705 91 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(52)
calls=10 0x407bc0 450 
* * 2287 765 700 21 35 5 21 35 5 53 5 20
+5 * 10 10
+1 * 10 10

fl=(10)
fn=(42)
0x406eb8 726 20 0 20
+1 * 20
+3 * 20 0 20
+4 * 20 0 20 1 0 0 1
+4 * 20 20
+4 * 20 20
+3 * 20 20
+4 * 20 0 20
+3 * 20 20
+1 * 20 20

fn=(68)
0x407f2e 790 20 0 20
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

ob=(7)
fl=(21)
fn=(104)
0x26b00 27 5 0 0 1 0 0 1
+4 * 5
+4 * 5 0 0 0 0 0 0 0 0 5
fi=(22) /build/eglibc-oGUzwX/eglibc-2.19/math/../sysdeps/x86_64/fpu/math_private.h
+2 +31 5
fe=(21)
+4 -27 5 5

totals: 12674 4008 3197 135 81 24 135 81 24 886 36 65 10
