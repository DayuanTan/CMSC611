version: 1
creator: callgrind-3.10.1
pid: 2151
cmd:  ./a.out
part: 4107


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 6291456 B, 64 B, 12-way associative

desc: Timerange: Basic block 9139138 - 9142342
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(1) /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19
fl=(8) ???
fn=(124) operator delete(void*)
0x5d0f0 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 10
cob=(5) /lib/x86_64-linux-gnu/libc-2.19.so
cfi=(9) /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c
cfn=(128) free
calls=10 0x82d00 2917 
* 0 1090 270 150 17 2 0 17 2 0 260 6
* 0 10 10 0 1 1 0 1 1 0 0 0 10

fn=(30) operator new(unsigned long)
0x5ed90 0 15 0 15 1 0 0 1
+1 0 15
+5 0 15 0 15
+1 0 15
+3 0 15
+4 0 15
+3 0 15
+4 0 15
+3 0 15 0 15
cob=(5)
cfi=(9)
cfn=(34) malloc
calls=15 0x82660 2876 
* 0 4048 618 659 43 32 15 43 32 15 847 35
* 0 15 15 0 1 1 0 1 1 0 0 0 15
+5 0 15
+3 0 15 0 0 0 0 0 0 0 0 15
jcnd=15/15 +40 0 
* 0 
+40 0 15 0 0 1 0 0 1
+4 0 15 15
+1 0 15 15
+1 0 15 15

ob=(5)
fl=(9)
fn=(128)
0x82d00 2917 10 10 0 1 0 0 1
+7 * 10 10 0 0 1 0 0 1
+3 +1 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +6 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +5 10 10
+4 -2 10
+4 +2 10
+2 * 10 0 0 0 0 0 0 0 0 10
+2 +16 10
+2 * 10
+7 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +14 +1 
* * 
+14 +1 10 0 0 1 0 0 1
+2 * 10
cfn=(130) _int_free
calls=10 0x7ee10 3814 
* * 940 240 150 15 1 0 15 1 0 220 6

fn=(34)
0x82660 2876 15 0 15 1 0 0 1
+1 * 15
+3 * 15 0 15
+1 * 15
+4 +5 15 15 0 0 1 0 0 1
+7 * 15 15 0 0 1 0 0 1
+3 +1 15
+3 * 15 0 0 0 0 0 0 0 0 15
+6 +3 15 15 0 1 1 0 1 1
+7 * 15 15 0 0 1 0 0 1
+4 +2 15
+3 * 15 0 0 0 0 0 0 0 0 15
+6 * 15
+5 * 15
+2 * 15 15 0 0 1 0 0 1
+7 * 15 0 0 0 0 0 0 0 0 15
jcnd=15/15 +14 * 
* * 
+14 * 15 0 15
+3 * 15 0 0 0 0 0 0 0 0 15
+6 +4 15
+3 * 15
+3 * 15 0 15
cfn=(36) _int_malloc
calls=15 0x7fb70 3302 
* * 3433 468 584 39 27 15 39 27 15 697 35
+5 +1 15 0 0 1 0 0 1
+3 -1 15
+3 +1 15 0 0 0 0 0 0 0 0 15
+2 +11 15 15
+7 * 15 0 0 0 0 0 0 0 0 15
jcnd=15/15 +13 * 
* * 
+13 * 15 0 15
+2 * 15 0 0 0 0 0 0 0 0 15
+6 +1 15 15
+4 * 15
+2 * 15 0 0 0 0 0 0 0 0 15
+2 * 15
+2 * 15
+7 * 15 0 0 0 0 0 0 0 0 15
+2 * 15
+3 * 15 0 0 0 0 0 0 0 0 15
+6 +3 15 0 0 1 0 0 1
+4 * 15
+3 * 15 15
+1 * 15 15
+1 * 15 15

fn=(130)
0x7ee10 3814 10 0 10 1 0 0 1
+2 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+1 * 10 0 10
+1 * 10
+3 * 10
+4 +13 10 10
+4 -13 10 0 10
+4 +13 10
+3 * 10
+4 +6 10
+3 * 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +1 10 0 0 1 0 0 1
+4 * 10 0 0 0 0 0 0 0 0 10
+6 +11 10
+4 * 10 0 0 0 0 0 0 0 0 10
+6 * 10
+2 * 10 0 0 0 0 0 0 0 0 10
+6 +13 10 10
+7 * 10
+3 * 10 0 0 0 0 0 0 0 0 10 5
jcnd=5/10 0x7ef40 +75 
* * 
+6 +11 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 0 0 1 0 0 1
+4 * 5 5
+7 * 5 0 0 0 0 0 0 0 0 5
+6 1869 5 5
+6 3894 5
+4 1869 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 3896 5 5
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+6 +1 5
+3 * 5
+3 +1 5
+2 +3 5 5
+5 -3 5 0 0 1 0 0 1
+5 +9 5
+3 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+4 -5 5
+5 * 5
+2 * 5
+4 * 5
jump=5 +16 +14 
* * 
+16 +14 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 +2 
* * 
+16 +2 5 0 5 1 0 0 1
+4 +2 5
+3 * 5 5
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +2 5
+3 * 5 0 0 0 0 0 0 0 0 5 1
jcnd=5/5 +15 4087 
* * 
+15 4087 5
+4 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+5 3933 5 0 0 1 0 0 1
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f2a8 +9 
* * 
+17 +18 5 5
+5 -4 5
+4 +4 5
+3 * 5 0 0 0 0 0 0 0 0 5
+6 +6 5 5
+6 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f9dc +2 
* * 
+6 +8 5 5 0 1 0 0 1
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +6 5
+3 * 5
+4 +1 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+8 * 5 0 0 0 0 0 0 0 0 5
+6 1869 5 5
+6 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 3983 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +70 +7 
* * 
+70 +7 5 5 0 1 0 0 1
+5 * 5 0 0 0 0 0 0 0 0 5
+6 +5 5 5
+6 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+8 * 5 0 5
+4 * 5 0 5 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5
+3 +11 5 5
+5 -1 5
+5 +2 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +7 5
+7 -2 5 0 5
+4 +1 5 0 5
+4 +1 5 0 0 0 0 0 0 0 0 5
+2 +2 5 0 5 1 0 0 1
+8 +1 5 0 5
+8 +2 5 0 5
+5 +1 5 0 5
+4 +2 5
+3 * 5
+4 * 5 0 5
+4 +1 5 0 5
+4 +30 5
+7 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f380 +20 
* * 
0x7f2a8 3943 5 0 0 1 0 0 1
+5 * 5 5
+4 * 5 5
+7 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 0 5 1 0 0 1
+5 * 5 0 0 0 0 0 0 0 0 5
+6 * 5
+6 +2 5 0 5
+8 * 5
jump=5 0x7ef5f +7 
* * 
0x7f380 4075 5 5 0 1 0 0 1
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+7 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +15 * 
* * 
+15 * 5 0 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +10 5
+4 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5 0 1 0 0 1
+2 * 5 5
+2 * 5 5
+2 * 5 5
0x7f9dc 3960 5 5 0 1 1 0 1 1
+4 * 5
+4 * 5
+3 -2 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7ef7d +8 
* * 

fn=(36)
0x7fb70 3302 15 0 15 1 0 0 1
+2 * 15 0 15 0 0 1 0 0 1
+2 * 15 0 15
+2 * 15 0 15
+2 * 15 0 15
+1 * 15 0 15
+1 * 15 0 0 1 0 0 1
+7 +30 15
+4 -30 15 0 15 0 0 1 0 0 1
+5 +30 15 0 0 0 0 0 0 0 0 15
+6 * 15
+3 * 15
+5 * 15
+3 * 15
+4 * 15
+3 * 15
+4 * 15
+4 * 15
+4 +8 15 15 0 0 1 0 0 1
+7 * 15 0 0 0 0 0 0 0 0 15 5
jcnd=5/15 0x7fc29 +37 
* * 
+2 +2 10
+3 * 10
+4 * 10 0 0 1 0 0 1
+4 +1 10
+3 +1 10 10
+5 -1 10
+4 * 10
+4 +5 10
+3 * 10 0 0 0 0 0 0 0 0 10 4
jcnd=4/10 +84 +29 
* * 
+2 +3 6 6 0 0 1 0 0 1
+4 * 6
+3 * 6 6 0 0 1 0 0 1
+9 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +3 * 
* * 
+3 * 6 0 6
+5 +1 6
+3 -1 6
+3 +1 6 0 0 0 0 0 0 0 0 6
+2 * 6
jump=6 0x80212 +3 
* * 
+50 +25 9 0 0 1 0 0 1
+7 * 9 0 0 0 0 0 0 0 0 9
jcnd=5/9 0x7fcaf +44 
* * 
+2 +2 4
+3 * 4
+4 +1 4
+5 * 4 0 0 1 0 0 1
+5 +2 4 4
+4 * 4
+3 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x7fced 3790 
* * 
+62 1862 11 11 0 1 1 0 1 1
+6 3743 11
+4 1862 11
+2 * 11 0 0 0 0 0 0 0 0 11
+6 3806 15
+7 * 15
+3 * 15 15
+1 * 15 15
+1 * 15 15
+2 * 15 15
+2 * 15 15
+2 * 15 15
+2 * 15 15
+1 3421 5
+3 * 5
+4 * 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x80308 * 
* * 
+27 +1 5 5 0 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
+2 +1 5
+3 * 5 0 5
+5 * 5 0 5
cfn=(166) malloc_consolidate
calls=5 0x7e6b0 4104 
* * 764 136 143 8 18 3 8 18 3 191 17
+5 * 5 5
+5 3790 5
+2 4992 5 0 5
+9 * 5
+4 3790 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
+4 +2 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+7 4990 5
+8 +2 5 0 5
+5 -2 5 0 5
+5 * 5 0 0 1 0 0 1
+8 * 5 0 5
+5 3442 5
+6 * 5
jump=5 +73 * 
* * 
0x7fced 3790 4
+2 4992 4 0 4
+9 * 4
+4 3790 4
+3 * 4
+3 * 4 0 4
+4 +2 4
+3 * 4
+4 * 4 0 4
+5 * 4
+3 * 4 0 4
+4 * 4
+3 * 4
+4 * 4 0 4
+5 * 4
+3 * 4 0 4
+4 * 4
+3 * 4
+4 * 4 0 4
+5 * 4
+3 * 4 0 4
+4 * 4
+3 * 4
+4 * 4 0 4
+5 * 4
+3 * 4 0 4
+4 * 4
+3 * 4
+4 * 4 0 4
+5 * 4
+3 * 4 0 4
+7 4990 4
+8 +2 4 0 4
+5 -2 4 0 4
+5 * 4
+8 * 4 0 4
+5 3442 4
+6 * 4
jump=4 +73 * 
* * 
+3 +66 5
+2 * 5
+3 +1 5
+4 * 5
+2 * 5
+5 +1 5 5 0 0 1 0 0 1
+4 +50 5
+2 * 5
+5 * 5
+3 * 5
+2 * 5
+3 * 5 0 5 0 0 1 0 0 1
+7 +7 5
+4 -6 5 0 5
+5 +1 5 0 5
+5 +1 5 0 5 0 0 2 0 0 2
+4 +1 5 0 5
+4 +3 5 0 0 0 0 0 0 0 0 5
-44 -7 5
+2 * 5
+5 * 5
+3 * 5
+2 * 5
+3 * 5 0 5
+7 +7 5
+4 -6 5 0 5
+5 +1 5 0 5
+5 +1 5 0 5 0 0 1 0 0 1
+4 +1 5 0 5
+4 +3 5 0 0 0 0 0 0 0 0 5
+6 3442 19 19 0 1 0 0 1
+4 * 19
+3 * 19 0 0 0 0 0 0 0 0 19 2
jcnd=5/19 0x80077 3576 
* * 
+6 +3 14 14
+5 -1 14 14
+5 +1 14
+4 * 14 0 0 0 0 0 0 0 0 14
+6 +1 14 14 0 0 1 0 0 1
+7 * 14 0 0 1 0 0 1 0 0 14
+6 +3 14
+4 +10 14
+7 * 14 0 0 0 0 0 0 0 0 14
jcnd=10/14 +11 +34 
* * 
+2 * 4
+3 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x7ff70 +2 
* * 
+6 +34 10
+3 -5 10 0 10
+4 +1 10 0 10
+4 +4 10 0 0 0 0 0 0 0 0 10
+6 +13 10
+7 * 10 0 0 0 0 0 0 0 0 10
jcnd=5/10 0x7fd90 +2 
* * 
+6 +8 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5
+3 * 5
+4 * 5
+2 * 5
+4 +1 5
+5 +1 5 5 0 0 1 0 0 1
+4 +3 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7fecf +38 
* * 
0x7fecf +38 5 0 5 1 0 0 1
+5 * 5 0 5
+5 * 5
+3 * 5
jump=5 0x7fda4 +3 
* * 
0x7ff70 -96 4 4 0 1 0 0 1
+4 -1 4
+3 * 4 0 0 0 0 0 0 0 0 4 2
+6 +2 4 0 0 1 0 0 1
+4 -1 4
+3 * 4 0 0 0 0 0 0 0 0 4
+6 +4 4
+3 +1 4
+3 +4 4
+7 -3 4 0 4
+4 * 4 0 4
+4 +1 4 0 4
+4 +1 4 0 4
+5 * 4 0 4
+5 +1 4 0 0 0 0 0 0 0 0 4
+2 +2 4 0 4
+9 +1 4 0 4 1 0 0 1
+9 +3 4
+7 * 4
+3 * 4
+3 * 4
+4 * 4
+3 * 4
+4 * 4
+3 +2 4
+3 * 4
+4 -2 4 0 4
+4 +2 4 0 4
+5 +1 4 0 4
+4 +3 4
+4 1862 4 4
+6 * 4
+2 * 4 0 0 1 0 0 1 0 0 4
jcnd=4/4 0x7fc9a 3806 
* * 
0x80077 3576 5 0 0 1 0 0 1
+7 * 5 0 0 1 0 0 1 0 0 5
jcnd=5/5 0x80247 +2 
* * 
+6 +73 5
+4 +1 5
+5 +1 5
+2 -1 5
+5 +1 5
+3 +1 5
+2 * 5 5
+7 +1 5
+5 * 5
+2 +5 5
+2 * 5
+4 * 5
+2 * 5
+3 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x801cc +14 
* * 
0x801c0 +16 104
+4 +2 104
+2 * 104 0 0 0 0 0 0 0 0 104
+6 -4 109 0 0 1 0 0 1
+2 * 109 0 0 0 0 0 0 0 0 109 5
jcnd=104/109 -14 +2 
* * 
+2 +8 5 5
+4 +3 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x80374 +9 
* * 
+59 3355 6 6 0 1 1 0 1 1
+5 * 6
+3 * 6
+3 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x7fc88 1862 
* * 
+39 3578 5 0 0 1 0 0 1
+5 * 5
+5 +3 5 5 0 0 1 0 0 1
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x80084 +68 
* * 
0x80308 3421 5 0 0 1 0 0 1
+4 * 5
jump=5 0x7fcd5 +1 
* * 
0x80374 3692 5 5 0 1 0 0 1
+5 * 5
+3 * 5
+4 +3 5 0 0 1 0 0 1
+3 * 5 0 0 0 0 0 0 0 0 5
+6 +5 5 5
+5 -3 5
+3 +3 5 5
+5 -3 5
+3 +3 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5
+7 * 5 0 5
+4 * 5 0 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5 0 1 0 0 1
+5 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x80f0c * 
* * 
+6 +3 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +78 +15 
* * 
+78 +15 5 5 0 1 0 0 1
+4 -5 5
+4 +6 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +11 5
+7 -6 5 0 5 0 0 3 0 0 3
+4 +1 5 0 5
+4 +1 5 0 5 1 0 0 1
+4 +1 5 0 5
+4 +3 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +6 +2 
* * 
+6 +2 5
+7 * 5 0 0 0 0 0 0 0 0 5
+2 +2 5 0 5 0 0 2 0 0 2
+8 +1 5 0 5
+8 +2 5
+7 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 +2 5
+3 * 5
+4 -2 5 0 5
+5 +2 5 0 5
+4 +1 5 0 5 0 0 1 0 0 1
+4 * 5
jump=5 0x7fc88 1862 
* * 
0x80f0c -40 5 5 0 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+5 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 0 5
+4 * 5 5
+5 * 5 0 5
+4 * 5
jump=5 0x803cc +3 
* * 

fn=(166)
0x7e6b0 4104 5 0 5 1 0 0 1
+2 * 5
+3 * 5 0 5
+2 * 5 0 5
+2 * 5 0 5 0 0 1 0 0 1
+2 * 5 0 5
+1 * 5 0 5
+1 * 5 0 0 1 0 0 1
+4 +22 5 5
+8 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+4 4990 5
+5 +2 5 0 5 0 0 1 0 0 1
+9 * 5 0 5
+5 4129 5
+4 +10 5
+4 +1 5
+4 4990 5 0 5 1 0 0 1
+5 * 5
+5 * 5 0 5
+5 * 5
+3 4142 5
+2 * 5 5 5 0 0 0 0 0 0 5
+3 +1 5
+3 * 5 0 0 0 0 0 0 0 0 5 1
jcnd=1/5 0x7e7b2 +6 
* * 
-8 -1 45
+2 * 45 45 45 0 0 0 0 0 0 45
+3 +1 45
+3 * 45 0 0 0 0 0 0 0 0 45 4
jcnd=3/45 0x7e7b2 +6 
* * 
+6 * 46
jump=46 0x7e850 +50 
* * 
+10 +22 1 1
+5 -1 1
+3 +1 1 1
+5 * 1 1 0 0 1 0 0 1
+4 * 1 0 0 0 0 0 0 0 0 1
+6 * 1 1
+4 * 1 0 0 0 0 0 0 0 0 1
+6 * 1 1
+9 * 1 0 1
+4 * 1 0 1
+4 * 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 +16 +4 
* * 
+16 +4 5 5 0 1 1 0 1 1
+4 +4 5
+7 -3 5 0 5
+4 +1 5 0 5 0 0 1 0 0 1
+4 +2 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +18 +5 
* * 
+18 +5 5
+3 +1 5 0 5
+4 +1 5 0 5
+4 -2 5
+4 +12 5
+3 -12 5 0 5
+4 +3 5 0 5
+4 +9 5 0 0 0 0 0 0 0 0 5 2
jcnd=4/5 0x7e850 +3 
* * 
+6 * 1
+3 -41 1 1 0 0 1 0 0 1
+4 -3 1 1 0 0 1 0 0 1
+4 +3 1
+3 * 1
+4 +1 1
+4 +1 1 1
+5 * 1
+4 +2 1
+2 * 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +66 +7 
* * 
-30 -4 4 4 0 1 4 0 1 4
+4 -3 4 4
+4 +3 4
+3 * 4 0 0 1 0 0 1
+4 +1 4
+4 +1 4 4 0 0 3 0 0 3
+5 * 4
+4 +2 4
+2 * 4 0 0 0 0 0 0 0 0 4 1
jcnd=3/4 +66 +7 
* * 
+2 +1 1 1
+3 +2 1
+3 -1 1
+3 +2 1 1
+4 * 1 1
+4 * 1 1 0 0 1 0 0 1
+4 * 1 0 0 0 0 0 0 0 0 1
+6 * 1 1
+4 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 0 1
+4 * 1 0 1
+4 * 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +15 +3 
* * 
+15 +3 5 5 0 1 1 0 1 1
+4 * 5 0 0 0 0 0 0 0 0 5
+2 +3 5 5 0 0 5 0 0 5
+6 * 5 0 0 0 0 0 0 0 0 5 3
jcnd=1/5 0x7e728 +2 
* * 
+6 +4 4 0 4
+6 * 4
jump=4 0x7e76a +2 
* * 
+38 +26 50 0 0 1 0 0 1
+4 * 50
+4 * 50
+3 * 50 0 0 0 0 0 0 0 0 50 5
jcnd=45/50 0x7e710 -51 
* * 
+6 +6 5
+4 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5

fl=(14) /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S
fn=(76) __memmove_ssse3_back
0x14fc90 55 15 0 0 1 0 0 1
+3 +6 15
+3 +1 15 0 0 0 0 0 0 0 0 15 7
jcnd=10/15 +40 +7 
* * 
+2 +1 5 0 0 0 0 0 0 0 0 5
+6 +1 5
+7 +1 5 0 0 0 0 0 0 0 0 5 1
jcnd=1/5 0x14fd40 +58 
* * 
+6 +1 4
+7 * 4 4 0 0 1 0 0 1
+4 * 4
+4 * 4 0 0 0 0 0 0 0 0 0 0 4
jump=4 0x15261c 2707 
* * 
+4 +3 10 0 0 1 0 0 1
+7 +1 10 0 0 0 0 0 0 0 0 10 5
jcnd=4/10 +27 +23 
* * 
+2 +7 6
+3 +1 6
+3 +1 6
+7 * 6 6 0 0 1 0 0 1
+4 * 6
+4 * 6 0 0 0 0 0 0 0 0 0 0 6
jump=6 0x151ef2 2131 
* * 
+4 +14 4 4 0 0 4 0 0 4
+4 +1 4
+3 +1 4
+4 +1 4
+4 +1 4
+3 +1 4
+3 +1 4
+3 +1 4
+3 +1 4
+3 +1 4 0 0 1 0 0 1
+4 +1 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x14fda0 +48 
* * 
+62 +20 1 1 0 1 0 0 1
+7 +2 1
+3 +1 1
+3 +1 1 0 0 0 0 0 0 0 0 1
+6 +2 1
+3 +1 1
+3 +1 1 1 0 0 1 0 0 1
+5 +1 1
+4 +1 1
+3 +1 1
+4 +1 1
+3 +1 1
+3 +1 1
+3 +1 1
+3 +1 1
+4 +1 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x14fe40 +51 
* * 
+39 +11 4 0 0 1 0 0 1
+3 +1 4
+4 +1 4
+3 +4 4 4 0 0 1 0 0 1
+7 +2 4 0 0 0 0 0 0 0 0 4
+6 +1 4
+7 * 4
+2 +3 4 4 0 1 1 0 1 1
+4 +1 4 0 4
+4 +1 4 4 0 0 1 0 0 1
+4 +1 4 0 4 0 0 1 0 0 1
+4 +1 4 4
+4 +1 4 0 4
+4 +1 4 4 0 0 2 0 0 2
+4 +1 4 0 4
+4 +1 4 4 0 0 1 0 0 1
+4 +1 4 0 4
+4 +1 4 4 0 0 1 0 0 1
+4 +1 4 0 4 0 0 1 0 0 1
+4 +1 4 4
+4 +1 4 0 4
+4 +1 4 4 0 0 2 0 0 2
+4 +1 4 0 4
+4 +1 4 0 0 1 0 0 1
+7 +1 4
+7 +1 4
+7 +1 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 -85 -19 
* * 
-85 -19 28 28 0 0 7 0 0 7
+4 +1 28 0 28
+4 +1 28 28 0 0 7 0 0 7
+4 +1 28 0 28 0 0 7 0 0 7
+4 +1 28 28
+4 +1 28 0 28
+4 +1 28 28 0 0 14 0 0 14
+4 +1 28 0 28
+4 +1 28 28 0 0 7 0 0 7
+4 +1 28 0 28
+4 +1 28 28 0 0 7 0 0 7
+4 +1 28 0 28 0 0 7 0 0 7
+4 +1 28 28
+4 +1 28 0 28
+4 +1 28 28 0 0 14 0 0 14
+4 +1 28 0 28
+4 +1 28
+7 +1 28
+7 +1 28
+7 +1 28 0 0 0 0 0 0 0 0 28
jcnd=24/28 -85 -19 
* * 
+2 +1 4 0 4
+5 +1 4
+7 +1 4
+3 +1 4
+3 +1 4
+7 * 4 4 0 0 1 0 0 1
+4 * 4
+4 * 4 0 0 0 0 0 0 0 0 0 0 4 1
jump=4 0x1518d2 1694 
* * 
+8 +4 1 0 0 1 0 0 1
+7 +2 1 1
+4 +1 1 0 1
+4 +1 1 1
+4 +1 1 0 1
+4 +1 1 1
+4 +1 1 0 1
+4 +1 1 1 0 0 1 0 0 1
+4 +1 1 0 1
+4 +1 1 1
+4 +1 1 0 1
+4 +1 1 1
+4 +1 1 0 1
+4 +1 1 1
+4 +1 1 0 1
+4 +1 1 1 0 1 1 0 1 1
+4 +1 1 0 1
+4 +1 1
+7 +1 1
+4 +1 1
+4 +1 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 -79 -19 
* * 
-79 -19 7 7
+4 +1 7 0 7
+4 +1 7 7
+4 +1 7 0 7
+4 +1 7 7
+4 +1 7 0 7
+4 +1 7 7 0 0 7 0 0 7
+4 +1 7 0 7
+4 +1 7 7
+4 +1 7 0 7
+4 +1 7 7
+4 +1 7 0 7
+4 +1 7 7
+4 +1 7 0 7
+4 +1 7 7 0 0 7 0 0 7
+4 +1 7 0 7
+4 +1 7
+7 +1 7
+4 +1 7
+4 +1 7 0 0 0 0 0 0 0 0 7 1
jcnd=6/7 -79 -19 
* * 
+2 +2 1 0 1
+5 +1 1
+7 +1 1
+3 +1 1
+3 +1 1
+7 * 1 1 0 0 1 0 0 1
+4 * 1
+4 * 1 0 0 0 0 0 0 0 0 0 0 1 1
jump=1 0x1520e8 2267 
* * 
0x1518d2 1694 4 4 0 1 1 0 1 1
+5 +1 4 0 4
+5 +2 4 4 0 0 1 0 0 1
+5 +1 4 0 4
+5 +2 4 4
+5 +1 4 0 4
+5 +2 4 4
0x151ef2 2131 6 6 0 1 3 0 1 3
+5 +1 6 0 6
+5 +2 6 6 0 1 0 0 1
+5 +1 6 6
+5 +1 6 0 6
+5 +1 6 0 6
+5 +1 6 6
0x1520e8 2267 1 1 0 1 0 0 1
+5 +1 1 0 1
+5 +2 1 1
+5 +1 1 0 1
+5 +2 1 1 0 1 0 0 1
+5 +1 1 0 1
+5 +2 1 1 0 0 1 0 0 1
+4 +1 1 0 1
+4 +2 1 1
0x15261c 2707 4 4 0 1 2 0 1 2
+5 +1 4 0 4
+5 +2 4 4 0 0 1 0 0 1
+5 +1 4 4
+4 +1 4 0 4
+5 +1 4 0 4
+4 +1 4 4

ob=(4) /home/paul878934/CMSC611/knn_predict/a.out
fl=(10) /usr/include/c++/4.8/bits/stl_iterator.h
fn=(42) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
0x406eb8 726 30 0 30
+1 * 30
+3 * 30 0 30
+4 * 30 0 30 1 0 0 1
+4 * 30 30
+4 * 30 30
+3 * 30 30
+4 * 30 0 30
+3 * 30 30
+1 * 30 30

fn=(68) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
0x407f2e 790 30 0 30
+1 * 30
+3 * 30 0 30
+4 +1 30 30
+4 * 30 30
+1 * 30 30

fl=(24) /usr/include/c++/4.8/bits/vector.tcc
fn=(138) std::vector<float, std::allocator<float> >::operator=(std::vector<float, std::allocator<float> > const&)
0x4051f4 160 5 0 5
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+2 * 5 0 5
+2 * 5 0 5
+1 * 5 0 0 1 0 0 1
+4 * 5 0 5
+4 * 5 0 5
+4 +3 5 5
+4 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +21 5 5
+4 * 5
+3 * 5 0 5
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(8) std::vector<float, std::allocator<float> >::size() const
calls=5 0x405fa4 645 
* * 65 30 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(140) std::vector<float, std::allocator<float> >::capacity() const
calls=5 0x4060d6 725 
* * 65 30 10 0 3 0 0 3
+5 * 5 5
+4 * 5
+3 * 5
+2 * 5 0 0 1 0 0 1 0 0 5 2
+6 +3 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40) std::vector<float, std::allocator<float> >::end() const
calls=5 0x406074 565 
* * 125 50 40
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(44) std::vector<float, std::allocator<float> >::begin() const
calls=5 0x406044 547 
* * 125 50 40
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(142) float* std::vector<float, std::allocator<float> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(unsigned long, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=5 0x4060fc 1135 
* * 2193 690 600 2 0 0 2 0 0 117 3 20 5
+5 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(38) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=5 0x40556e -77 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 5
+3 -1 5
+3 * 5
+3 * 5 0 5
cfi=(23) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(110) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=5 0x40557c -41 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(118) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=5 0x406194 -20 
* * 50 15 20 0 0 0 0 0 0 5
+5 +3 5 5
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+3 * 5 5
+4 * 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 * 5 0 0 1 0 0 1
jump=5 0x405402 +16 
* * 
0x405402 +16 5 5 0 1 0 0 1
+4 * 5 5
+3 * 5 5
+4 * 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5 5
+4 +1 5
+4 * 5 5
+1 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+1 * 5 5

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(134) std::allocator<float>::~allocator()
0x40664e 121 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(136) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=10 0x407308 -35 
* * 50 20 20
+5 * 10 10
+1 * 10 10

fn=(14) std::allocator<float>::allocator(std::allocator<float> const&)
0x4076e0 115 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10 1 0 1 1 0 1
cfi=(5)
cfn=(16) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=10 0x407bb2 -35 
* * 60 20 30 1 0 0 1
+5 * 10 10
+1 * 10 10

fl=(2)
fn=(18) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x406e62 179 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfn=(20) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=10 0x406d6e -14 
* * 4143 673 744 50 34 16 50 34 16 792 35 20 1
+5 * 10 10
+4 * 10 0 10
+3 +1 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+3 * 10 10
+4 * 10
+4 * 10
+3 * 10 10
+4 * 10 0 10
+4 +1 10 10
+1 * 10 10

fn=(40)
0x406074 565 15 0 15
+1 * 15
+3 * 15
+4 * 15 0 15
+4 +1 15 15 0 1 0 0 1
+4 * 15 15
+4 * 15 0 15
+4 * 15
+4 * 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfi=(10)
cfn=(42)
calls=15 0x406eb8 726 
* * 150 75 60 1 0 0 1
+5 * 15 15
+4 * 15 15
+1 * 15 15

fn=(44)
0x406044 547 15 0 15
+1 * 15
+3 * 15
+4 * 15 0 15
+4 +1 15 15
+4 * 15 15
+3 * 15 0 15
+4 * 15
+4 * 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfi=(10)
cfn=(42)
calls=15 0x406eb8 726 
* * 150 75 60
+5 * 15 15
+4 * 15 15
+1 * 15 15

fn=(116) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4054fc 159 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10 1 0 0 1
+1 * 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10
+3 * 10
+4 * 10
+3 * 10 10
+4 * 10 10
+3 -1 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(118)
calls=10 0x406194 +11 
* * 1410 380 250 22 4 0 22 4 0 280 6 20 5
+5 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(132) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=10 0x4054c8 -82 
* * 230 80 80
+5 * 10
jump=10 +28 * 
* * 
+28 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(2) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x405136 310 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+1 * 10 0 0 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10 0 0 1 0 0 1
cfn=(4) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=10 0x405fd8 117 
* * 60 30 20 1 0 0 1
+5 * 10
+3 * 10 0 10
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(6) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=10 0x405fca -88 
* * 60 30 20
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(8)
calls=10 0x405fa4 645 
* * 130 60 20 1 7 0 1 7
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfn=(10) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=10 0x405fe6 134 
* * 4973 993 1024 58 34 24 58 34 24 792 35 20 1
+5 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(38)
calls=10 0x40556e 113 
* * 60 30 20 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(40)
calls=10 0x406074 565 
* * 250 100 80 2 0 0 2
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(44)
calls=10 0x406044 547 
* * 250 100 80
+5 * 10
+3 * 10
+3 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfi=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
cfn=(46) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
calls=10 0x4060a5 -60 
* * 3390 1181 1126 27 100 18 27 100 18 83 11 20 2
+5 -3 10 10
+4 * 10 0 10
+4 * 10
jump=10 +28 +4 
* * 
+28 +4 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+2 * 10 10
+1 * 10 10

fn=(4)
0x405fd8 117 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 +1 10 10
+4 * 10 10
+1 * 10 10

fn=(10)
0x405fe6 134 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10 0 1 0 0 1
+4 * 10
+3 * 10
+3 * 10 0 10 0 0 1 0 0 1
cfn=(12) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=10 0x406e1a -45 
* * 360 130 140 5 0 7 5 0 7
+5 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(18)
calls=10 0x406e62 +43 
* * 4393 793 814 51 34 16 51 34 16 792 35 20 1
+5 * 10
jump=10 +28 * 
* * 
+28 * 10 0 0 1 0 0 1
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(12)
0x406e1a 90 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(4)
cfn=(14)
calls=10 0x4076e0 +24 
* * 180 60 70 3 0 1 3 0 1
+5 * 10 10 0 1 0 0 1
+4 * 10 0 10 0 0 6 0 0 6
+7 * 10 10
+4 * 10 0 10
+8 * 10 10
+4 * 10 0 10
+8 +1 10 10
+1 * 10 10

fn=(80) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x404cc8 770 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+3 * 80 80
+4 * 80
+4 * 80
+3 * 80 80
+1 * 80 80

fn=(140)
0x4060d6 725 5 0 5
+1 * 5
+3 * 5 0 5
+4 +2 5 5
+4 * 5 5 0 0 3 0 0 3
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5 5
+1 * 5 5

fn=(8)
0x405fa4 645 15 0 15 1 0 0 1
+1 * 15
+3 * 15 0 15
+4 +1 15 15
+4 * 15 15 0 0 7 0 0 7
+4 * 15
+3 * 15 15
+4 * 15 15
+3 * 15
+3 * 15
+3 * 15
+4 * 15 15
+1 * 15 15

fn=(132)
0x4054c8 79 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(4)
cfn=(134)
calls=10 0x40664e +42 
* * 140 50 50
+5 * 10 10
+1 * 10 10

fn=(20)
0x406d6e 167 15 0 15 1 0 0 1
+1 * 15
+3 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 0 15 15 0 1 0 0 1
+5 0 15 0 0 0 0 0 0 0 0 15
+2 0 15 15
+4 0 15 15
+4 0 15
+5 0 15
+3 0 15
+3 0 15 0 15
fi=(6) ???
cfi=(5)
cfn=(24) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
calls=15 0x407690 99 
* 0 4678 798 824 48 34 16 48 34 16 877 35 30 6
+5 0 15
fi=(6)
jump=15 +7 0 
* 0 
+7 0 15 15
+1 0 15 15

fn=(38)
0x40556e 113 30 0 30 1 0 0 1
+1 * 30
+3 * 30 0 30
+4 +1 30 30
+4 * 30 30
+1 * 30 30

fn=(108) std::vector<float, std::allocator<float> >::~vector()
0x404d02 414 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(38)
calls=10 0x40556e 113 
* * 60 30 20
+5 * 10
+3 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+3 -1 10
+3 * 10
+3 * 10 0 10
cfi=(23)
cfn=(110)
calls=10 0x40557c 148 
* * 310 100 120 4 0 0 4
+5 +1 10 10
+4 * 10
+3 * 10 0 10 1 0 0 1
cfn=(116)
calls=10 0x4054fc 159 
* * 1920 570 380 24 4 0 24 4 0 280 6 20 5
+5 * 10
jump=10 +28 * 
* * 
+28 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(118)
0x406194 171 15 0 15 1 0 0 1
+1 * 15
+3 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 +2 15 15
+5 * 15 0 0 0 0 0 0 0 0 15
jcnd=5/15 +25 +2 
* * 
+2 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 0 1 0 0 1
+3 * 10 0 10
cfi=(5)
cfn=(120) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
calls=10 0x406f02 -65 
* * 1250 320 200 20 4 0 20 4 0 270 6 20 5
+5 +1 15 15
+1 * 15 15

fn=(142)
0x4060fc 1135 5 0 5
+1 * 5
+3 * 5 0 5 1 0 0 1
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +3 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfn=(20)
calls=5 0x406d6e 167 
* * 775 200 140 0 0 0 0 0 0 100 0 10 5
+5 * 5 0 5
+4 +4 5 5
+4 * 5
+3 * 5 0 5
cfn=(38)
calls=5 0x40556e 113 
* * 30 15 10
+5 * 5
+3 -1 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 5
cfi=(11)
cfn=(46)
calls=5 0x4060a5 256 
* * 1243 425 400 0 0 0 0 0 0 17 3 10
+5 +2 5 5
+4 * 5
jump=5 +57 +7 
* * 
+57 +7 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fl=(23)
fn=(114) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x407312 112 15 0 15 1 0 0 1
+1 * 15
+3 * 15 0 15
+4 * 15 0 15
+4 * 15 15
+1 * 15 15

fn=(110)
0x40557c 148 15 0 15
+1 * 15
+3 * 15 0 0 1 0 0 1
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 +3 15 15
+4 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfn=(112) void std::_Destroy<float*>(float*, float*)
calls=15 0x406668 -29 
* * 270 90 105 3 0 0 3
+5 +1 15 15
+1 * 15 15

fn=(112)
0x406668 122 15 0 15 1 0 0 1
+1 * 15
+3 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 +4 15 15
+4 * 15 15
+4 * 15 0 0 1 0 0 1
+3 * 15
+3 * 15 0 15
cfn=(114)
calls=15 0x407312 -14 
* * 90 30 45 1 0 0 1
+5 +2 15 15
+1 * 15 15

fl=(5)
fn=(136)
0x407308 86 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 10
+1 * 10 10

fn=(16)
0x407bb2 81 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+1 * 10 10

fn=(24)
0x407690 99 15 0 15 1 0 0 1
+1 * 15
+3 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 +2 15 15
+4 * 15
+3 * 15 0 15
cfn=(26) __gnu_cxx::new_allocator<float>::max_size() const
calls=15 0x407b9e +12 
* * 90 30 30 0 0 1 0 0 1
+5 * 15 15
+4 * 15
+3 * 15
+2 * 15 0 0 0 0 0 0 0 0 15
jcnd=15/15 +7 +3 
* * 
+7 +3 15 15
+4 * 15
+4 * 15
+3 * 15 0 15
cob=(1)
cfi=(8)
cfn=(30)
calls=15 0x5ed90 0 
* * 4288 678 704 46 33 15 46 33 15 862 35 15
* * 15 15 0 1 1 0 1 1 0 0 0 15 6
+5 +1 15 15
+1 * 15 15

fn=(120)
0x406f02 109 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cob=(1)
cfi=(8)
cfn=(124)
calls=10 0x5d0f0 0 
* * 1130 280 150 19 3 0 19 3 0 270 6 10
* * 10 10 0 1 1 0 1 1 0 0 0 10 5
+5 * 10 10
+1 * 10 10

fn=(26)
0x407b9e 113 15 0 15
+1 * 15
+3 * 15 0 15 0 0 1 0 0 1
+4 +1 15
+10 * 15 15
+1 * 15 15

fl=(3)
fn=(6)
0x405fca 224 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 10
+4 * 10 10
+1 * 10 10

fl=(12) /usr/include/c++/4.8/bits/stl_algobase.h
fn=(52) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x407bc0 450 15 0 15 1 0 0 1
+1 * 15
+3 * 15 0 15
+1 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 +10 15 15
+4 * 15
+3 * 15 0 15
cfn=(54) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=15 0x406f24 288 
* * 225 90 75 1 0 0 1
+5 * 15
+3 * 15 15
+4 * 15
+3 * 15 0 15
cfn=(54)
calls=15 0x406f24 288 
* * 225 90 75
+5 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfn=(58) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=15 0x407ed6 -36 
* * 3208 1111 1016 24 100 18 24 100 18 100 14 30 2
+5 +1 15
+4 * 15 15
+1 * 15 15
+1 * 15 15

fn=(60) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x4077c1 277 15 0 15 1 0 0 1
+1 * 15
+3 * 15
+4 * 15 0 15
+4 +1 15 15
+4 * 15
+3 * 15 0 15
cfi=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
cfn=(62) std::_Iter_base<float*, false>::_S_base(float*)
calls=15 -33 -66 
* * 90 45 30 1 0 1 1 0 1
+5 * 15 15
+1 * 15 15

fn=(64) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x407740 277 30 0 30 1 0 0 1
+1 * 30
+3 * 30
+4 * 30 0 30
+4 +1 30 30
+4 * 30
+3 * 30 0 30
cfi=(13)
cfn=(66) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=30 0x407c06 -58 
* * 480 180 150 1 0 0 1
+5 * 30 30
+1 * 30 30

fn=(70) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x407774 379 15 0 15
+1 * 15
+3 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 +8 15 0 15
+4 +3 15 15
+4 * 15 15
+4 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfn=(72) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=15 0x407c40 -22 
* * 1588 571 461 18 100 17 18 100 17 100 14 30 2
+5 +1 15 15
+1 * 15 15

fn=(54)
0x406f24 288 30 0 30 1 0 0 1
+1 * 30
+3 * 30
+4 * 30 0 30
+4 +1 30 30
+4 * 30
+3 * 30 0 30
cfi=(13)
cfn=(56) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=30 0x407732 -77 
* * 180 90 60
+5 * 30 30
+1 * 30 30

fn=(72)
0x407c40 368 15 0 15 1 0 0 1
+1 * 15
+3 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15 0 0 1 0 0 1
+4 +2 15 15
+4 * 15 15
+4 * 15
+3 * 15
+3 * 15
+4 * 15 0 15
+4 +1 15 15
+5 * 15 0 0 0 0 0 0 0 0 15
+2 +1 15 15
+4 * 15
+8 * 15 15 0 1 0 0 1
+4 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cob=(5)
cfi=(14)
cfn=(76)
calls=15 0x14fc90 55 
* * 1168 406 371 15 99 16 15 99 16 85 14 15 2
* * 15 15 0 1 1 0 1 1 0 0 0 15
+5 +1 15 15
+4 * 15
+8 * 15 15
+4 * 15
+3 +1 15 15
+1 * 15 15

fn=(58)
0x407ed6 424 15 0 15 1 0 0 1
+1 * 15
+3 * 15 0 15
+2 * 15 0 15
+1 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 +4 15 15
+4 * 15
+3 * 15 0 15
cfn=(60)
calls=15 0x4077c1 277 
* * 225 90 75 2 0 1 2 0 1
+5 * 15
+3 * 15 15
+4 * 15 0 0 1 0 0 1
+3 * 15 0 15
cfn=(64)
calls=15 0x407740 277 
* * 375 135 120 2 0 0 2
+5 * 15
+3 * 15 15
+4 * 15
+3 * 15 0 15
cfn=(64)
calls=15 0x407740 277 
* * 375 135 120
+5 * 15
+3 * 15
+3 * 15
+3 * 15 0 15
cfn=(70)
calls=15 0x407774 -49 
* * 1813 646 551 18 100 17 18 100 17 100 14 30 2
+5 +1 15
+4 * 15 15
+1 * 15 15
+2 * 15 15
+1 * 15 15

fl=(13)
fn=(56)
0x407732 212 30 0 30
+1 * 30
+3 * 30 0 30
+4 +1 30 30
+4 * 30 30
+1 * 30 30

fn=(62)
0x4077b3 212 15 0 15 1 0 0 1
+1 * 15
+3 * 15 0 15 0 0 1 0 0 1
+4 +1 15 15
+4 * 15 15
+1 * 15 15

fn=(66)
0x407c06 220 30 0 30 1 0 0 1
+1 * 30
+3 * 30
+4 * 30 0 30
+4 +1 30
+4 * 30
+3 * 30 0 30
cfi=(10)
cfn=(68)
calls=30 0x407f2e 790 
* * 180 90 60
+5 * 30 30
+3 * 30 30
+1 * 30 30

fl=(1) /home/paul878934/CMSC611/knn_predict/knn_predictprice_do.cpp
fn=(78) compEuclideanDistFloat(std::vector<float, std::allocator<float> >, std::vector<float, std::allocator<float> >, float)
0x401b2f 32 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5 1 0 0 1
+5 +1 5 5 0 0 1 0 0 1
+6 * 5 0 5
+3 +1 5 0 5
+7 * 5
jump=5 0x401bba * 
* * 
+2 +2 40 40
+3 * 40
+3 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(80)
calls=40 0x404cc8 770 
* * 440 200 120 1 0 0 1
+5 * 40 40
+4 * 40 0 40
+5 * 40 40
+3 * 40
+3 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(80)
calls=40 0x404cc8 770 
* * 440 200 120
+5 * 40 40
+4 * 40 40
+5 * 40
+4 * 40
+3 * 40 0 40
+5 +1 40 40
+5 * 40 40
+5 * 40 40
+5 * 40
+4 * 40 0 40
+5 -3 40 0 40
+4 * 40 40
+4 * 40 0 0 0 0 0 0 0 0 40 5
jcnd=35/40 0x401b56 +2 
* * 
-4 * 5 5 0 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x401b56 +2 
* * 
+2 +5 5 5 0 1 0 0 1
+5 * 5
+3 * 5 0 5
cob=(7) /lib/x86_64-linux-gnu/libm-2.19.so
cfi=(21) /build/eglibc-oGUzwX/eglibc-2.19/math/w_sqrt.c
cfn=(104) sqrt
calls=5 0x26b00 -12 
* * 25 5 0 1 0 0 1 0 0 5
* * 5 5 0 0 0 0 0 0 0 0 0 5
+5 * 5
+4 * 5
+4 * 5 0 5
+5 +1 5 5
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5 2
+2 +2 5 5
+3 * 5 0 5
+3 +2 5 5
+3 +1 5 0 5
+3 * 5 5
+5 * 5 5
+1 * 5 5

fn=(1) main'2
0x40367c 320 1 0 0 1 0 0 1
+3 * 1 0 1 1 0 1 1 0 1
+7 * 1
+7 +2 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1 0 0 1 0 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -12 
* * 617 206 175 47 17 9 47 17 9 24 1 4 1
+5 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -12 
* * 1533 377 372 35 42 27 35 42 27 201 18 4 1
+5 * 1 1 0 1 1 0 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 426 180 106 6 1 0 6 1 0 11 2 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1 0 0 1 0 0 1
+6 * 1 0 0 1 0 0 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +92 
* * 277 87 63 27 4 0 27 4 0 36 1 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +92 
* * 229 71 53 3 0 0 3 0 0 20 1 2
+5 +1 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
+2 +2 1 1 0 1 0 0 1
+6 * 1 0 1
+6 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(24)
cfn=(138)
calls=1 0x4051f4 160 
* * 650 224 178 8 1 0 8 1 0 27 2 4 1
+5 +2 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -18 
* * 693 209 199 5 2 1 5 2 1 31 2 4
+5 * 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -18 
* * 1194 311 299 0 19 0 0 19 0 135 4 4
+5 * 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1 1 0 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 426 180 106 0 0 0 0 0 0 11 2 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +86 
* * 277 87 63 0 0 0 0 0 0 36 1 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +86 
* * 229 71 53 0 0 0 0 0 0 20 0 2
+5 +1 1 1
+8 * 1 1 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
+2 +2 1 1
+6 * 1 0 1
+6 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(24)
cfn=(138)
calls=1 0x4051f4 160 
* * 650 224 178 0 0 0 0 0 0 27 1 4 1
+5 +2 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -24 
* * 694 209 199 2 3 1 2 3 1 30 4 4
+5 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -24 
* * 1189 311 299 0 17 1 0 17 1 133 4 4
+5 * 1 1
+6 * 1
+7 * 1 0 0 1 0 0 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 426 180 106 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +80 
* * 277 87 63 0 0 0 0 0 0 36 1 2 1
+5 * 1 0 0 1 0 0 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +80 
* * 229 71 53 0 0 0 0 0 0 20 0 2
+5 +1 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
+2 +2 1 1
+6 * 1 0 1
+6 +1 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(24)
cfn=(138)
calls=1 0x4051f4 160 
* * 651 224 178 0 1 0 0 1 0 26 1 4 1
+5 +2 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -30 
* * 694 209 199 0 2 1 0 2 1 30 2 4
+5 * 1
+7 * 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -30 
* * 1184 311 299 0 18 1 0 18 1 131 4 4
+5 * 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 426 180 106 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1 0 1 0 0 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +74 
* * 277 87 63 0 0 0 0 0 0 36 1 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +74 
* * 229 71 53 0 0 0 0 0 0 20 0 2
+5 +1 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
+2 +2 1 1
+6 * 1 0 1
+6 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(24)
cfn=(138)
calls=1 0x4051f4 160 
* * 651 224 178 0 0 0 0 0 0 26 1 4 1
+5 +2 1
+7 * 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -36 
* * 694 209 199 0 2 1 0 2 1 30 1 4
+5 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -36 
* * 1181 312 300 5 19 1 5 19 1 130 6 4 1
+5 * 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1 0 1 0 0 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 426 180 106 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +68 
* * 277 87 63 0 0 0 0 0 0 36 1 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +68 
* * 229 71 53 0 0 0 0 0 0 20 0 2
+5 +1 1 1 0 1 0 0 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
+2 +2 1 1
+6 * 1 0 1
+6 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1 1 0 0 1
cfi=(24)
cfn=(138)
calls=1 0x4051f4 160 
* * 651 224 178 0 1 0 0 1 0 26 0 4 1

fl=(11)
fn=(46)
0x4060a5 256 15 0 15
+1 * 15
+3 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 +2 15 15 0 1 0 0 1
+4 * 15 15
+4 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfn=(48) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=15 0x406ed4 107 
* * 4408 1531 1436 26 100 18 26 100 18 100 14 30 2
+5 * 15 15
+1 * 15 15

fn=(48)
0x406ed4 107 15 0 15
+1 * 15
+3 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 +10 15 15
+4 * 15 15
+4 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfn=(50) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=15 0x407705 -26 
* * 4198 1456 1361 26 100 18 26 100 18 100 14 30 2
+5 +1 15 15
+1 * 15 15

fn=(50)
0x407705 91 15 0 15
+1 * 15
+3 * 15
+4 * 15 0 15
+4 * 15 0 15
+4 * 15 0 15
+4 +2 15 15
+4 * 15 15
+4 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfi=(12)
cfn=(52)
calls=15 0x407bc0 450 
* * 3988 1381 1286 26 100 18 26 100 18 100 14 30 2
+5 * 15 15
+1 * 15 15

ob=(7)
fl=(21)
fn=(104)
0x26b00 27 5 0 0 1 0 0 1
+4 * 5
+4 * 5 0 0 0 0 0 0 0 0 5
fi=(22) /build/eglibc-oGUzwX/eglibc-2.19/math/../sysdeps/x86_64/fpu/math_private.h
+2 +31 5
fe=(21)
+4 -27 5 5

totals: 17789 5514 4591 157 150 46 157 150 46 1352 69 85 13
