version: 1
creator: callgrind-3.10.1
pid: 2151
cmd:  ./a.out
part: 3608


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 6291456 B, 64 B, 12-way associative

desc: Timerange: Basic block 7949735 - 7952267
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(1) /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19
fl=(8) ???
fn=(124) operator delete(void*)
0x5d0f0 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 10
cob=(5) /lib/x86_64-linux-gnu/libc-2.19.so
cfi=(9) /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c
cfn=(128) free
calls=10 0x82d00 2917 
* 0 1110 270 150 17 3 0 17 3 0 270 7
* 0 10 10 0 1 1 0 1 1 0 0 0 10

fn=(30) operator new(unsigned long)
0x5ed90 0 10 0 10 1 0 0 1
+1 0 10
+5 0 10 0 10
+1 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10 0 10
cob=(5)
cfi=(9)
cfn=(34) malloc
calls=10 0x82660 2876 
* 0 1968 340 322 33 16 6 33 16 6 343 16
* 0 10 10 0 1 1 0 1 1 0 0 0 10
+5 0 10
+3 0 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +40 0 
* 0 
+40 0 10 0 0 1 0 0 1
+4 0 10 10
+1 0 10 10
+1 0 10 10

ob=(5)
fl=(9)
fn=(34)
0x82660 2876 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10
+4 +5 10 10 0 0 1 0 0 1
+7 * 10 10 0 0 1 0 0 1
+3 +1 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +3 10 10 0 1 1 0 1 1
+7 * 10 10 0 0 1 0 0 1
+4 +2 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 * 10
+5 * 10
+2 * 10 10 0 0 1 0 0 1
+7 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +14 * 
* * 
+14 * 10 0 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +4 10
+3 * 10
+3 * 10 0 10
cfn=(36) _int_malloc
calls=10 0x7fb70 3302 
* * 1558 240 272 29 11 6 29 11 6 243 16
+5 +1 10 0 0 1 0 0 1
+3 -1 10
+3 +1 10 0 0 0 0 0 0 0 0 10
+2 +11 10 10
+7 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +13 * 
* * 
+13 * 10 0 10
+2 * 10 0 0 0 0 0 0 0 0 10
+6 +1 10 10
+4 * 10
+2 * 10 0 0 0 0 0 0 0 0 10
+2 * 10
+2 * 10
+7 * 10 0 0 0 0 0 0 0 0 10
+2 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +3 10 0 0 1 0 0 1
+4 * 10
+3 * 10 10
+1 * 10 10
+1 * 10 10

fn=(130) _int_free
0x7ee10 3814 10 0 10 1 0 0 1
+2 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+1 * 10 0 10
+1 * 10
+3 * 10
+4 +13 10 10
+4 -13 10 0 10
+4 +13 10
+3 * 10
+4 +6 10
+3 * 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +1 10 0 0 1 0 0 1
+4 * 10 0 0 0 0 0 0 0 0 10
+6 +11 10
+4 * 10 0 0 0 0 0 0 0 0 10
+6 * 10
+2 * 10 0 0 0 0 0 0 0 0 10
+6 +13 10 10
+7 * 10
+3 * 10 0 0 0 0 0 0 0 0 10 5
jcnd=5/10 0x7ef40 +75 
* * 
+6 +11 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 0 0 1 0 0 1
+4 * 5 5
+7 * 5 0 0 0 0 0 0 0 0 5
+6 1869 5 5
+6 3894 5
+4 1869 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 3896 5 5
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+6 +1 5
+3 * 5
+3 +1 5
+2 +3 5 5
+5 -3 5 0 0 1 0 0 1
+5 +9 5
+3 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+4 -5 5
+5 * 5
+2 * 5
+4 * 5
jump=5 +16 +14 
* * 
+16 +14 5
+3 * 5 0 0 0 0 0 0 0 0 5 2
+2 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +11 +2 
* * 
+11 +2 5 0 5 1 0 0 1
+4 +2 5
+3 * 5 5
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +2 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +10 4087 
* * 
+10 4087 5
+4 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+5 3933 5 0 0 1 0 0 1
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f2a8 +9 
* * 
+17 +18 5 5 0 0 1 0 0 1
+5 -4 5
+4 +4 5
+3 * 5 0 0 0 0 0 0 0 0 5
+6 +6 5 5
+6 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f9dc +2 
* * 
+6 +8 5 5 0 1 0 0 1
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +6 5
+3 * 5
+4 +1 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+8 * 5 0 0 0 0 0 0 0 0 5
+6 1869 5 5
+6 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 3983 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +70 +7 
* * 
+70 +7 5 5 0 1 0 0 1
+5 * 5 0 0 0 0 0 0 0 0 5
+6 +5 5 5
+6 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+8 * 5 0 5
+4 * 5 0 5 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5
+3 +11 5 5
+5 -1 5
+5 +2 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +7 5
+7 -2 5 0 5
+4 +1 5 0 5
+4 +1 5 0 0 0 0 0 0 0 0 5
+2 +2 5 0 5 1 0 0 1
+8 +1 5 0 5
+8 +2 5 0 5
+5 +1 5 0 5
+4 +2 5
+3 * 5
+4 * 5 0 5
+4 +1 5 0 5
+4 +30 5
+7 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7f380 +20 
* * 
0x7f2a8 3943 5 0 0 1 0 0 1
+5 * 5 5
+4 * 5 5
+7 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 0 5 1 0 0 1
+5 * 5 0 0 0 0 0 0 0 0 5
+6 * 5
+6 +2 5 0 5
+8 * 5
jump=5 0x7ef5f +7 
* * 
0x7f380 4075 5 5 0 1 0 0 1
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+4 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 +1 5 5
+7 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +15 * 
* * 
+15 * 5 0 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +10 5
+4 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5 0 1 0 0 1
+2 * 5 5
+2 * 5 5
+2 * 5 5
0x7f9dc 3960 5 5 0 1 1 0 1 1
+4 * 5
+4 * 5
+3 -2 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7ef7d +8 
* * 

fn=(36)
0x7fb70 3302 10 0 10 1 0 0 1
+2 * 10 0 10 0 0 1 0 0 1
+2 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+1 * 10 0 10
+1 * 10 0 0 1 0 0 1
+7 +30 10
+4 -30 10 0 10 0 0 1 0 0 1
+5 +30 10 0 0 0 0 0 0 0 0 10
+6 * 10
+3 * 10
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+4 * 10
+4 * 10
+4 +8 10 10 0 0 1 0 0 1
+7 * 10 0 0 0 0 0 0 0 0 10 5
jcnd=5/10 0x7fc29 +37 
* * 
+2 +2 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+4 +1 5
+3 +1 5 5
+5 -1 5
+4 * 5
+4 +5 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +3 5 5 0 0 1 0 0 1
+4 * 5
+3 * 5 5 0 0 1 0 0 1
+9 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +3 * 
* * 
+3 * 5 0 5
+5 +1 5
+3 -1 5
+3 +1 5 0 0 0 0 0 0 0 0 5
+2 * 5
jump=5 0x80212 +3 
* * 
+50 +25 5 0 0 1 0 0 1
+7 * 5 0 0 0 0 0 0 0 0 5
+2 +2 5
+3 * 5
+4 +1 5
+5 * 5 0 0 1 0 0 1
+5 +2 5 5 0 0 1 0 0 1
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7fced 3790 
* * 
+62 1862 10 10 0 1 1 0 1 1
+6 3743 10
+4 1862 10
+2 * 10 0 0 0 0 0 0 0 0 10
+6 3806 10
+7 * 10
+3 * 10 10
+1 * 10 10
+1 * 10 10
+2 * 10 10
+2 * 10 10
+2 * 10 10
+2 * 10 10
+63 -16 5 0 0 1 0 0 1
+2 4992 5 0 5
+9 * 5
+4 3790 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
+4 +2 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+4 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 * 5 0 5
+7 4990 5
+8 +2 5 0 5
+5 -2 5 0 5
+5 * 5 0 0 1 0 0 1
+8 * 5 0 5
+5 3442 5
+6 * 5
jump=5 +73 * 
* * 
+3 +66 1
+2 * 1
+3 +1 1
+4 * 1
+2 * 1
+5 +1 1 1 0 0 1 0 0 1
+4 +50 1
+2 * 1
+5 * 1
+3 * 1
+2 * 1
+3 * 1 0 1 0 0 1 0 0 1
+7 +7 1
+4 -6 1 0 1
+5 +1 1 0 1
+5 +1 1 0 1
+4 +1 1 0 1
+4 +3 1 0 0 0 0 0 0 0 0 1
-44 -7 5
+2 * 5
+5 * 5
+3 * 5
+2 * 5
+3 * 5 0 5
+7 +7 5
+4 -6 5 0 5
+5 +1 5 0 5
+5 +1 5 0 5
+4 +1 5 0 5
+4 +3 5 0 0 0 0 0 0 0 0 5
+6 3442 11 11 0 1 1 0 1 1
+4 * 11
+3 * 11 0 0 0 0 0 0 0 0 11
jcnd=5/11 0x80077 3576 
* * 
+6 +3 6 6 0 0 1 0 0 1
+5 -1 6 6
+5 +1 6
+4 * 6 0 0 0 0 0 0 0 0 6
+6 +1 6 6 0 0 1 0 0 1
+7 * 6 0 0 1 0 0 1 0 0 6
+6 +3 6
+4 +10 6
+7 * 6 0 0 0 0 0 0 0 0 6
+2 * 6
+3 * 6 0 0 0 0 0 0 0 0 6 1
jcnd=5/6 0x7ff70 +2 
* * 
+6 +34 6
+3 -5 6 0 6
+4 +1 6 0 6 0 0 1 0 0 1
+4 +4 6 0 0 0 0 0 0 0 0 6
+6 +13 6
+7 * 6 0 0 0 0 0 0 0 0 6 1
jcnd=1/6 0x7fd90 +2 
* * 
+6 +8 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +93 * 
* * 
+93 * 5 0 0 1 0 0 1
+3 * 5
+4 * 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5
+3 * 5
+7 * 5
+2 * 5 0 0 1 0 0 1
+4 +1 5
+5 +1 5 5 0 0 1 0 0 1
+4 +3 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +38 5 0 5
+5 * 5 0 5
+5 * 5
+3 * 5
jump=5 0x7fda4 +3 
* * 
0x7ff70 -96 5 5 0 1 0 0 1
+4 -1 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7fe1a +33 
* * 
0x80077 3576 5 0 0 1 0 0 1
+7 * 5 0 0 1 0 0 1 0 0 5
+6 +73 5
+4 +1 5
+5 +1 5
+2 -1 5
+5 +1 5
+3 +1 5
+2 * 5 5
+7 +1 5
+5 * 5
+2 +5 5
+2 * 5
+4 * 5
+2 * 5
+3 * 5
+3 * 5 0 0 0 0 0 0 0 0 5 2
+6 +4 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +3 5
+2 * 5 5
+7 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 -3 5
+3 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
+2 +3 5
+2 * 5 5
+7 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x80327 3332 
* * 
0x801c0 +9 5
+4 +2 5
+2 * 5 0 0 0 0 0 0 0 0 5
+6 -4 10 0 0 1 0 0 1
+2 * 10 0 0 0 0 0 0 0 0 10 2
jcnd=5/10 -14 +2 
* * 
+2 +8 5 5
+4 +3 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x80374 +9 
* * 
+59 3355 5 5 0 1 1 0 1 1
+5 * 5
+3 * 5
+3 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x7fc88 1862 
* * 
0x80327 -23 5 0 0 1 0 0 1
+2 3665 5
+2 * 5
+3 * 5
+3 * 5
+4 +2 5
+5 +1 5
+5 * 5 0 0 1 0 0 1
jump=5 0x801cc +4 
* * 
+53 +24 5 5
+5 * 5
+3 * 5
+4 +3 5 0 0 1 0 0 1
+3 * 5 0 0 0 0 0 0 0 0 5
+6 +5 5 5
+5 -3 5
+3 +3 5 5
+5 -3 5
+3 +3 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5
+7 * 5 0 5
+4 * 5 0 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5 0 1 0 0 1
+5 * 5
+3 * 5 0 0 0 0 0 0 0 0 5 5
jcnd=5/5 0x80f0c * 
* * 
+6 +3 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +78 +15 
* * 
+78 +15 5 5 0 1 0 0 1
+4 -5 5
+4 +6 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+6 +11 5
+7 -6 5 0 5 0 0 1 0 0 1
+4 +1 5 0 5
+4 +1 5 0 5 1 0 0 1
+4 +1 5 0 5
+4 +3 5 0 0 0 0 0 0 0 0 5
+2 +1 5 0 5
+4 +1 5
+7 * 5 0 0 0 0 0 0 0 0 5
+2 +2 5 0 5
+8 +1 5 0 5
+8 +2 5
+7 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 +2 5
+3 * 5
+4 -2 5 0 5
+5 +2 5 0 5
+4 +1 5 0 5 0 0 1 0 0 1
+4 * 5
jump=5 0x7fc88 1862 
* * 
0x80f0c -40 5 5 0 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
+6 * 5 5
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+5 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 0 5
+4 * 5 5
+5 * 5 0 5
+4 * 5
jump=5 0x803cc +3 
* * 

fn=(128)
0x82d00 2917 10 10 0 1 0 0 1
+7 * 10 10 0 0 1 0 0 1
+3 +1 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +6 10
+3 * 10 0 0 0 0 0 0 0 0 10
+6 +5 10 10
+4 -2 10
+4 +2 10
+2 * 10 0 0 0 0 0 0 0 0 10
+2 +16 10
+2 * 10
+7 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +14 +1 
* * 
+14 +1 10 0 0 1 0 0 1
+2 * 10
cfn=(130)
calls=10 0x7ee10 3814 
* * 960 240 150 15 2 0 15 2 0 230 7

fl=(14) /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S
fn=(76) __memmove_ssse3_back
0x14fc90 55 14 0 0 1 0 0 1
+3 +6 14
+3 +1 14 0 0 0 0 0 0 0 0 14 5
jcnd=3/14 +40 +7 
* * 
+2 +1 11 0 0 0 0 0 0 0 0 11
+6 +1 11
+7 +1 11 0 0 0 0 0 0 0 0 11 3
jcnd=3/11 0x14fd40 +58 
* * 
+6 +1 8
+7 * 8 8 0 0 1 0 0 1
+4 * 8
+4 * 8 0 0 0 0 0 0 0 0 0 0 8
jump=8 0x15261c 2707 
* * 
+4 +3 3 0 0 1 0 0 1
+7 +1 3 0 0 0 0 0 0 0 0 3 2
jcnd=2/3 +27 +23 
* * 
+2 +7 1
+3 +1 1
+3 +1 1
+7 * 1 1 0 0 1 0 0 1
+4 * 1
+4 * 1 0 0 0 0 0 0 0 0 0 0 1
jump=1 0x151ef2 2131 
* * 
+4 +14 2 2 0 0 2 0 0 2
+4 +1 2
+3 +1 2
+4 +1 2
+4 +1 2
+3 +1 2
+3 +1 2
+3 +1 2
+3 +1 2
+3 +1 2 0 0 1 0 0 1
+4 +1 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x14fda0 +48 
* * 
+62 +20 3 3 0 1 1 0 1 1
+7 +2 3
+3 +1 3
+3 +1 3 0 0 0 0 0 0 0 0 3
+6 +2 3
+3 +1 3
+3 +1 3 3 0 0 3 0 0 3
+5 +1 3
+4 +1 3
+3 +1 3
+4 +1 3
+3 +1 3
+3 +1 3
+3 +1 3
+3 +1 3
+4 +1 3 0 0 0 0 0 0 0 0 3
jcnd=3/3 0x14fe40 +51 
* * 
+39 +11 2 0 0 1 0 0 1
+3 +1 2
+4 +1 2
+3 +4 2 2
+7 +2 2 0 0 0 0 0 0 0 0 2
+6 +1 2
+7 * 2
+2 +3 2 2 0 1 0 0 1
+4 +1 2 0 2
+4 +1 2 2
+4 +1 2 0 2
+4 +1 2 2 0 0 1 0 0 1
+4 +1 2 0 2
+4 +1 2 2 0 0 1 0 0 1
+4 +1 2 0 2
+4 +1 2 2
+4 +1 2 0 2
+4 +1 2 2
+4 +1 2 0 2
+4 +1 2 2 0 0 1 0 0 1
+4 +1 2 0 2
+4 +1 2 2 0 0 1 0 0 1
+4 +1 2 0 2
+4 +1 2 0 0 1 0 0 1
+7 +1 2
+7 +1 2
+7 +1 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 -85 -19 
* * 
-85 -19 12 12
+4 +1 12 0 12
+4 +1 12 12
+4 +1 12 0 12
+4 +1 12 12 0 0 6 0 0 6
+4 +1 12 0 12
+4 +1 12 12 0 0 6 0 0 6
+4 +1 12 0 12
+4 +1 12 12
+4 +1 12 0 12
+4 +1 12 12
+4 +1 12 0 12
+4 +1 12 12 0 0 6 0 0 6
+4 +1 12 0 12
+4 +1 12 12 0 0 6 0 0 6
+4 +1 12 0 12
+4 +1 12
+7 +1 12
+7 +1 12
+7 +1 12 0 0 0 0 0 0 0 0 12
jcnd=10/12 -85 -19 
* * 
+2 +1 2 0 2
+5 +1 2
+7 +1 2
+3 +1 2
+3 +1 2
+7 * 2 2 0 0 1 0 0 1
+4 * 2
+4 * 2 0 0 0 0 0 0 0 0 0 0 2
jump=2 0x1518d2 1694 
* * 
+8 +4 3 0 0 1 0 0 1
+7 +2 3 3
+4 +1 3 0 3
+4 +1 3 3
+4 +1 3 0 3 0 0 1 0 0 1
+4 +1 3 3 0 0 1 0 0 1
+4 +1 3 0 3
+4 +1 3 3 0 0 1 0 0 1
+4 +1 3 0 3
+4 +1 3 3 0 0 1 0 0 1
+4 +1 3 0 3
+4 +1 3 3
+4 +1 3 0 3 0 0 1 0 0 1
+4 +1 3 3 0 0 1 0 0 1
+4 +1 3 0 3
+4 +1 3 3 0 1 1 0 1 1
+4 +1 3 0 3
+4 +1 3
+7 +1 3
+4 +1 3
+4 +1 3 0 0 0 0 0 0 0 0 3
jcnd=3/3 -79 -19 
* * 
-79 -19 18 18 0 0 6 0 0 6
+4 +1 18 0 18
+4 +1 18 18
+4 +1 18 0 18 0 0 6 0 0 6
+4 +1 18 18 0 0 6 0 0 6
+4 +1 18 0 18
+4 +1 18 18 0 0 6 0 0 6
+4 +1 18 0 18
+4 +1 18 18 0 0 6 0 0 6
+4 +1 18 0 18
+4 +1 18 18
+4 +1 18 0 18 0 0 6 0 0 6
+4 +1 18 18 0 0 6 0 0 6
+4 +1 18 0 18
+4 +1 18 18 0 0 6 0 0 6
+4 +1 18 0 18
+4 +1 18
+7 +1 18
+4 +1 18
+4 +1 18 0 0 0 0 0 0 0 0 18
jcnd=15/18 -79 -19 
* * 
+2 +2 3 0 3
+5 +1 3
+7 +1 3
+3 +1 3
+3 +1 3
+7 * 3 3 0 0 1 0 0 1
+4 * 3
+4 * 3 0 0 0 0 0 0 0 0 0 0 3
jump=3 0x1520e8 2267 
* * 
0x1518d2 1694 2 2 0 1 0 0 1
+5 +1 2 0 2
+5 +2 2 2
+5 +1 2 0 2
+5 +2 2 2 0 0 1 0 0 1
+5 +1 2 0 2
+5 +2 2 2
0x151ef2 2131 1 1 0 1 0 0 1
+5 +1 1 0 1 0 0 1 0 0 1
+5 +2 1 1 0 1 0 0 1
+5 +1 1 1
+5 +1 1 0 1 0 0 1 0 0 1
+5 +1 1 0 1
+5 +1 1 1
0x1520e8 2267 3 3 0 1 1 0 1 1
+5 +1 3 0 3
+5 +2 3 3
+5 +1 3 0 3
+5 +2 3 3 0 1 1 0 1 1
+5 +1 3 0 3
+5 +2 3 3 0 0 1 0 0 1
+4 +1 3 0 3
+4 +2 3 3
0x15261c 2707 8 8 0 1 5 0 1 5
+5 +1 8 0 8 0 0 3 0 0 3
+5 +2 8 8
+5 +1 8 8
+4 +1 8 0 8 0 0 1 0 0 1
+5 +1 8 0 8
+4 +1 8 8

ob=(4) /home/paul878934/CMSC611/knn_predict/a.out
fl=(10) /usr/include/c++/4.8/bits/stl_iterator.h
fn=(146) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
0x406dfe 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(42) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
0x406eb8 726 28 0 28
+1 * 28
+3 * 28 0 28
+4 * 28 0 28 1 0 0 1
+4 * 28 28
+4 * 28 28
+3 * 28 28
+4 * 28 0 28
+3 * 28 28
+1 * 28 28

fn=(158) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x406bfc 790 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4 1 0 0 1
+4 +1 4 4
+4 * 4 4
+1 * 4 4

fn=(68) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
0x407f2e 790 28 0 28
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(24) /usr/include/c++/4.8/bits/vector.tcc
fn=(138) std::vector<float, std::allocator<float> >::operator=(std::vector<float, std::allocator<float> > const&)
0x4051f4 160 4 0 4
+1 * 4
+3 * 4 0 4
+2 * 4 0 4
+2 * 4 0 4
+2 * 4 0 4
+1 * 4 0 0 1 0 0 1
+4 * 4 0 4
+4 * 4 0 4
+4 +3 4 4
+4 * 4 4
+4 * 4 0 0 0 0 0 0 0 0 4
+6 +21 4 4
+4 * 4
+3 * 4 0 4
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(8) std::vector<float, std::allocator<float> >::size() const
calls=4 0x405fa4 645 
* * 52 24 8
+5 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(140) std::vector<float, std::allocator<float> >::capacity() const
calls=4 0x4060d6 725 
* * 52 24 8 0 3 0 0 3
+5 * 4 4
+4 * 4
+3 * 4
+2 * 4 0 0 1 0 0 1 0 0 4
jcnd=4/4 0x405301 +12 
* * 
0x405301 +12 4 4 0 1 0 0 1
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(8)
calls=4 0x405fa4 645 
* * 52 24 8
+5 * 4 4
+4 * 4
+3 * 4
+2 * 4 0 0 0 0 0 0 0 0 4
+2 +3 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(38) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=4 0x40556e -87 
* * 24 12 8
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::end()
calls=4 0x405f7a 556 
* * 92 36 28 2 0 0 2
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4 1 0 0 1
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::begin()
calls=4 0x4061c8 538 
* * 88 36 28
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(40) std::vector<float, std::allocator<float> >::end() const
calls=4 0x406074 565 
* * 100 40 32
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(44) std::vector<float, std::allocator<float> >::begin() const
calls=4 0x406044 547 
* * 100 40 32
+5 * 4
+3 * 4
+3 * 4
+3 * 4 0 4
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(150) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
calls=4 0x4061ed 450 
* * 929 316 292 7 1 6 7 1 6 15 3 8
+5 -1 4
+3 * 4
+3 * 4
+3 * 4 0 4
cfi=(23) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(160) void std::_Destroy<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, std::allocator<float>&)
calls=4 0x406233 -51 
* * 124 40 48 2 0 0 2
+5 * 4 0 0 1 0 0 1
jump=4 0x405402 +12 
* * 
0x405402 +12 4 4 0 1 0 0 1
+4 * 4 4
+3 * 4 4
+4 * 4
+4 * 4
+3 * 4 4
+4 * 4 0 4
+4 +2 4 4
+4 +1 4
+4 * 4 4
+1 * 4 4
+2 * 4 4
+2 * 4 4
+2 * 4 4
+1 * 4 4

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(134) std::allocator<float>::~allocator()
0x40664e 121 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(136) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=10 0x407308 -35 
* * 50 20 20
+5 * 10 10
+1 * 10 10

fn=(14) std::allocator<float>::allocator(std::allocator<float> const&)
0x4076e0 115 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10 1 0 1 1 0 1
cfi=(5)
cfn=(16) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=10 0x407bb2 -35 
* * 60 20 30 1 0 0 1
+5 * 10 10
+1 * 10 10

fl=(2)
fn=(80) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x404cc8 770 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80 80
+3 * 80 80
+4 * 80
+4 * 80
+3 * 80 80
+1 * 80 80

fn=(140)
0x4060d6 725 4 0 4
+1 * 4
+3 * 4 0 4
+4 +2 4 4
+4 * 4 4 0 0 3 0 0 3
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4
+3 * 4
+3 * 4
+4 * 4 4
+1 * 4 4

fn=(8)
0x405fa4 645 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 +1 18 18
+4 * 18 18 0 0 7 0 0 7
+4 * 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18
+3 * 18
+4 * 18 18
+1 * 18 18

fn=(144)
0x405f7a 556 4 0 4 1 0 0 1
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(146)
calls=4 0x406dfe 726 
* * 40 20 16 1 0 0 1
+5 * 4 4
+4 * 4 4
+1 * 4 4

fn=(132) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
0x4054c8 79 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(4)
cfn=(134)
calls=10 0x40664e +42 
* * 140 50 50
+5 * 10 10
+1 * 10 10

fn=(148)
0x4061c8 538 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(146)
calls=4 0x406dfe 726 
* * 40 20 16
+5 * 4 4
+4 * 4 4
+1 * 4 4

fn=(20) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x406d6e 167 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 0 10 10 0 1 0 0 1
+5 0 10 0 0 0 0 0 0 0 0 10
+2 0 10 10
+4 0 10 10
+4 0 10
+5 0 10
+3 0 10
+3 0 10 0 10
fi=(6) ???
cfi=(5)
cfn=(24) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
calls=10 0x407690 99 
* 0 2388 460 432 38 18 7 38 18 7 363 16 20 4
+5 0 10
fi=(6)
jump=10 +7 0 
* 0 
+7 0 10 10
+1 0 10 10

fn=(38)
0x40556e 113 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(108) std::vector<float, std::allocator<float> >::~vector()
0x404d02 414 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(38)
calls=10 0x40556e 113 
* * 60 30 20
+5 * 10
+3 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+3 -1 10
+3 * 10
+3 * 10 0 10
cfi=(23)
cfn=(110) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=10 0x40557c 148 
* * 310 100 120 4 0 0 4
+5 +1 10 10
+4 * 10
+3 * 10 0 10 1 0 0 1
cfn=(116) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=10 0x4054fc 159 
* * 1940 570 380 24 5 0 24 5 0 290 7 20 5
+5 * 10
jump=10 +28 * 
* * 
+28 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(118) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x406194 171 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+5 * 10 0 0 0 0 0 0 0 0 10
+2 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 0 1 0 0 1
+3 * 10 0 10
cfi=(5)
cfn=(120) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
calls=10 0x406f02 -65 
* * 1270 320 200 20 5 0 20 5 0 280 7 20 5
+5 +1 10 10
+1 * 10 10

fn=(18) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x406e62 179 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfn=(20)
calls=10 0x406d6e -14 
* * 2548 510 472 40 18 7 40 18 7 373 16 20 4
+5 * 10 10
+4 * 10 0 10
+3 +1 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+3 * 10 10
+4 * 10
+4 * 10
+3 * 10 10
+4 * 10 0 10
+4 +1 10 10
+1 * 10 10

fn=(40)
0x406074 565 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14 0 1 0 0 1
+4 * 14 14
+4 * 14 0 14
+4 * 14
+4 * 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(10)
cfn=(42)
calls=14 0x406eb8 726 
* * 140 70 56 1 0 0 1
+5 * 14 14
+4 * 14 14
+1 * 14 14

fn=(44)
0x406044 547 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14 14
+3 * 14 0 14
+4 * 14
+4 * 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(10)
cfn=(42)
calls=14 0x406eb8 726 
* * 140 70 56
+5 * 14 14
+4 * 14 14
+1 * 14 14

fn=(116)
0x4054fc 159 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10 1 0 0 1
+1 * 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10
+3 * 10
+4 * 10
+3 * 10 10
+4 * 10 10
+3 -1 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(118)
calls=10 0x406194 +11 
* * 1430 380 250 22 5 0 22 5 0 290 7 20 5
+5 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(132)
calls=10 0x4054c8 -82 
* * 230 80 80
+5 * 10
jump=10 +28 * 
* * 
+28 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(2) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x405136 310 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+2 * 10 0 10
+1 * 10 0 0 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10 0 0 1 0 0 1
cfn=(4) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=10 0x405fd8 117 
* * 60 30 20 1 0 0 1
+5 * 10
+3 * 10 0 10
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(6) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=10 0x405fca -88 
* * 60 30 20
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(8)
calls=10 0x405fa4 645 
* * 130 60 20 1 7 0 1 7
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfn=(10) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=10 0x405fe6 134 
* * 3378 830 752 48 18 15 48 18 15 373 16 20 4
+5 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(38)
calls=10 0x40556e 113 
* * 60 30 20 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(40)
calls=10 0x406074 565 
* * 250 100 80 2 0 0 2
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(44)
calls=10 0x406044 547 
* * 250 100 80
+5 * 10
+3 * 10
+3 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfi=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
cfn=(46) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
calls=10 0x4060a5 -60 
* * 3291 1143 1088 25 88 16 25 88 16 83 7 20
+5 -3 10 10
+4 * 10 0 10
+4 * 10
jump=10 +28 +4 
* * 
+28 +4 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+2 * 10 10
+1 * 10 10

fn=(4)
0x405fd8 117 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 +1 10 10
+4 * 10 10
+1 * 10 10

fn=(10)
0x405fe6 134 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10 0 1 0 0 1
+4 * 10
+3 * 10
+3 * 10 0 10 0 0 1 0 0 1
cfn=(12) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=10 0x406e1a -45 
* * 360 130 140 5 0 7 5 0 7
+5 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(18)
calls=10 0x406e62 +43 
* * 2798 630 542 41 18 7 41 18 7 373 16 20 4
+5 * 10
jump=10 +28 * 
* * 
+28 * 10 0 0 1 0 0 1
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(12)
0x406e1a 90 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(4)
cfn=(14)
calls=10 0x4076e0 +24 
* * 180 60 70 3 0 1 3 0 1
+5 * 10 10 0 1 0 0 1
+4 * 10 0 10 0 0 6 0 0 6
+7 * 10 10
+4 * 10 0 10
+8 * 10 10
+4 * 10 0 10
+8 +1 10 10
+1 * 10 10

fl=(23)
fn=(114) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x407312 112 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+1 * 10 10

fn=(110)
0x40557c 148 10 0 10
+1 * 10
+3 * 10 0 0 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(112) void std::_Destroy<float*>(float*, float*)
calls=10 0x406668 -29 
* * 180 60 70 3 0 0 3
+5 +1 10 10
+1 * 10 10

fn=(112)
0x406668 122 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(114)
calls=10 0x407312 -14 
* * 60 20 30 1 0 0 1
+5 +2 10 10
+1 * 10 10

fn=(160)
0x406233 148 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 * 4 0 4 1 0 0 1
+4 * 4 0 4
+4 +3 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfn=(162) void std::_Destroy<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
calls=4 0x406fb1 -29 
* * 72 24 28 1 0 0 1
+5 +1 4 4
+1 * 4 4

fn=(164) void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
0x4077a5 112 4 0 4
+1 * 4
+3 * 4 0 4
+4 * 4 0 4
+4 * 4 4
+1 * 4 4

fn=(162)
0x406fb1 122 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 * 4 0 4 1 0 0 1
+4 +4 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfn=(164)
calls=4 0x4077a5 -14 
* * 24 8 12
+5 +2 4 4
+1 * 4 4

fl=(5)
fn=(26) __gnu_cxx::new_allocator<float>::max_size() const
0x407b9e 113 10 0 10
+1 * 10
+3 * 10 0 10 0 0 1 0 0 1
+4 +1 10
+10 * 10 10
+1 * 10 10

fn=(136)
0x407308 86 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 10
+1 * 10 10

fn=(16)
0x407bb2 81 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+1 * 10 10

fn=(24)
0x407690 99 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(26)
calls=10 0x407b9e +12 
* * 60 20 20 0 0 1 0 0 1
+5 * 10 10
+4 * 10
+3 * 10
+2 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +7 +3 
* * 
+7 +3 10 10
+4 * 10
+4 * 10
+3 * 10 0 10
cob=(1)
cfi=(8)
cfn=(30)
calls=10 0x5ed90 0 
* * 2128 380 352 36 17 6 36 17 6 353 16 10
* * 10 10 0 1 1 0 1 1 0 0 0 10 4
+5 +1 10 10
+1 * 10 10

fn=(120)
0x406f02 109 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cob=(1)
cfi=(8)
cfn=(124)
calls=10 0x5d0f0 0 
* * 1150 280 150 19 4 0 19 4 0 280 7 10
* * 10 10 0 1 1 0 1 1 0 0 0 10 5
+5 * 10 10
+1 * 10 10

fl=(3)
fn=(6)
0x405fca 224 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 10
+4 * 10 10
+1 * 10 10

fl=(12)
fn=(52) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x407bc0 450 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10
+3 * 10 0 10
cfn=(54) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=10 0x406f24 288 
* * 150 60 50 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(54)
calls=10 0x406f24 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(58) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=10 0x407ed6 -36 
* * 2341 813 748 22 88 16 22 88 16 83 7 20
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(60) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x4077c1 277 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
cfn=(62) std::_Iter_base<float*, false>::_S_base(float*)
calls=10 -33 -66 
* * 60 30 20 1 0 1 1 0 1
+5 * 10 10
+1 * 10 10

fn=(64) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x407740 277 28 0 28 1 0 0 1
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(66) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=28 0x407c06 -58 
* * 448 168 140 1 0 0 1
+5 * 28 28
+1 * 28 28

fn=(70) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x407774 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(72) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=14 0x407c40 -22 
* * 1442 517 414 18 89 21 18 89 21 98 10 28
+5 +1 14 14
+1 * 14 14

fn=(152) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
0x406f3e 424 4 0 4
+1 * 4 0 0 1 0 0 1
+3 * 4 0 4
+2 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +4 4 4
+4 * 4
+3 * 4 0 4
cfn=(154) std::_Niter_base<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
calls=4 0x40775a 277 
* * 100 36 32 2 0 0 2
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(64)
calls=4 0x407740 277 
* * 100 36 32
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(64)
calls=4 0x407740 277 
* * 100 36 32
+5 * 4 0 0 1 0 0 1
+3 * 4
+3 * 4
+3 * 4 0 4
cfn=(70)
calls=4 0x407774 -49 
* * 241 84 60 2 1 6 2 1 6 15 3 8
+5 * 4 0 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(146)
calls=4 0x406dfe 726 
* * 40 20 16
+5 * 4 4
+4 +1 4
+4 * 4 4
+1 * 4 4
+2 * 4 4
+1 * 4 4

fn=(54)
0x406f24 288 28 0 28 1 0 0 1
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(56) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=28 0x407732 -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(72)
0x407c40 368 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 0 0 1 0 0 1
+4 +2 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+5 * 14 0 0 0 0 0 0 0 0 14
+2 +1 14 14
+4 * 14
+8 * 14 14 0 1 0 0 1
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cob=(5)
cfi=(14)
cfn=(76)
calls=14 0x14fc90 55 
* * 1050 363 330 15 88 20 15 88 20 84 10 14
* * 14 14 0 1 1 0 1 1 0 0 0 14
+5 +1 14 14
+4 * 14
+8 * 14 14
+4 * 14
+3 +1 14 14
+1 * 14 14

fn=(58)
0x407ed6 424 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(60)
calls=10 0x4077c1 277 
* * 150 60 50 2 0 1 2 0 1
+5 * 10
+3 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10 0 10
cfn=(64)
calls=10 0x407740 277 
* * 250 90 80 2 0 0 2
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(64)
calls=10 0x407740 277 
* * 250 90 80
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(70)
calls=10 0x407774 -49 
* * 1411 503 438 16 88 15 16 88 15 83 7 20
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(150)
0x4061ed 450 4 0 4
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4 1 0 0 1
+4 +10 4 4
+4 * 4
+3 * 4 0 4
cfn=(54)
calls=4 0x406f24 288 
* * 60 24 20
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(54)
calls=4 0x406f24 288 
* * 60 24 20
+5 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfn=(152)
calls=4 0x406f3e -36 
* * 721 244 220 6 1 6 6 1 6 15 3 8
+5 +1 4
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(154)
0x40775a 277 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4
cfi=(13)
cfn=(156) std::_Iter_base<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
calls=4 0x407c23 -58 
* * 64 24 20 2 0 0 2
+5 * 4 4
+1 * 4 4

fl=(13)
fn=(62)
0x4077b3 212 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10 0 0 1 0 0 1
+4 +1 10 10
+4 * 10 10
+1 * 10 10

fn=(66)
0x407c06 220 28 0 28 1 0 0 1
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28
+4 * 28
+3 * 28 0 28
cfi=(10)
cfn=(68)
calls=28 0x407f2e 790 
* * 168 84 56
+5 * 28 28
+3 * 28 28
+1 * 28 28

fn=(156)
0x407c23 220 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4
+4 * 4
+3 * 4 0 4
cfi=(10)
cfn=(158)
calls=4 0x406bfc 790 
* * 24 12 8 2 0 0 2
+5 * 4 4
+3 * 4 4
+1 * 4 4

fn=(56)
0x407732 212 28 0 28
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(1) /home/paul878934/CMSC611/knn_predict/knn_predictprice_do.cpp
fn=(78) compEuclideanDistFloat(std::vector<float, std::allocator<float> >, std::vector<float, std::allocator<float> >, float)
0x401b2f 32 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5 1 0 0 1
+5 +1 5 5 0 0 1 0 0 1
+6 * 5 0 5
+3 +1 5 0 5
+7 * 5
jump=5 0x401bba * 
* * 
+2 +2 40 40
+3 * 40
+3 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(80)
calls=40 0x404cc8 770 
* * 440 200 120 1 0 0 1
+5 * 40 40
+4 * 40 0 40
+5 * 40 40
+3 * 40
+3 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(2)
cfn=(80)
calls=40 0x404cc8 770 
* * 440 200 120
+5 * 40 40
+4 * 40 40
+5 * 40
+4 * 40
+3 * 40 0 40
+5 +1 40 40
+5 * 40 40
+5 * 40 40
+5 * 40
+4 * 40 0 40
+5 -3 40 0 40
+4 * 40 40
+4 * 40 0 0 0 0 0 0 0 0 40 5
jcnd=35/40 0x401b56 +2 
* * 
-4 * 5 5 0 1 0 0 1
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x401b56 +2 
* * 
+2 +5 5 5 0 1 0 0 1
+5 * 5
+3 * 5 0 5
cob=(7) /lib/x86_64-linux-gnu/libm-2.19.so
cfi=(21) /build/eglibc-oGUzwX/eglibc-2.19/math/w_sqrt.c
cfn=(104) sqrt
calls=5 0x26b00 -12 
* * 25 5 0 1 0 0 1 0 0 5
* * 5 5 0 0 0 0 0 0 0 0 0 5
+5 * 5
+4 * 5
+4 * 5 0 5
+5 +1 5 5
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5 1
jcnd=1/5 +8 +4 
* * 
+2 +2 4 4
+3 * 4 0 4
+3 +2 4 4
+3 +1 4 0 4
+3 * 4 4
+5 * 4 4
+1 * 4 4
-12 -1 1 1
+3 +1 1 0 1
+3 * 1 1
+5 * 1 1
+1 * 1 1

fn=(1) main'2
0x40367c 320 1 0 0 1 0 0 1
+3 * 1 0 1 1 0 1 1 0 1
+7 * 1
+7 +2 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1 0 0 1 0 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -12 
* * 617 206 175 47 16 9 47 16 9 24 0 4
+5 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -12 
* * 1010 291 277 29 24 19 29 24 19 74 6 4
+5 * 1 1 0 1 1 0 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 426 180 106 6 1 0 6 1 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1 0 0 1 0 0 1
+6 * 1 0 0 1 0 0 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +92 
* * 277 87 63 27 5 0 27 5 0 36 1 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +92 
* * 233 71 53 3 0 0 3 0 0 22 1 2
+5 +1 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
+2 +2 1 1 0 1 0 0 1
+6 * 1 0 1
+6 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(24)
cfn=(138)
calls=1 0x4051f4 160 
* * 476 171 142 15 1 1 15 1 1 7 1 2
+5 +2 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -18 
* * 617 206 175 0 2 1 0 2 1 24 0 4 1
+5 * 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -18 
* * 970 285 269 6 17 0 6 17 0 65 6 4
+5 * 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1 1 0 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 426 180 106 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +86 
* * 277 87 63 0 0 0 0 0 0 36 1 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +86 
* * 233 71 53 0 0 0 0 0 0 22 1 2
+5 +1 1 1
+8 * 1 1 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
+2 +2 1 1
+6 * 1 0 1
+6 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(24)
cfn=(138)
calls=1 0x4051f4 160 
* * 476 171 142 0 0 2 0 0 2 7 1 2
+5 +2 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -24 
* * 617 206 175 0 2 1 0 2 1 24 0 4 1
+5 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -24 
* * 970 285 269 0 16 0 0 16 0 65 5 4
+5 * 1 1
+6 * 1
+7 * 1 0 0 1 0 0 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 426 180 106 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +80 
* * 277 87 63 0 0 0 0 0 0 36 1 2 1
+5 * 1 0 0 1 0 0 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +80 
* * 233 71 53 0 0 0 0 0 0 22 0 2
+5 +1 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
+2 +2 1 1
+6 * 1 0 1
+6 +1 1 0 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(24)
cfn=(138)
calls=1 0x4051f4 160 
* * 476 171 142 0 1 1 0 1 1 7 0 2
+5 +2 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -30 
* * 617 206 175 0 2 1 0 2 1 24 0 4 1
+5 * 1
+7 * 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -30 
* * 972 286 270 0 17 0 0 17 0 66 3 4
+5 * 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 424 179 105 0 0 0 0 0 0 11 2 1
+5 * 1 0 1
+8 * 1 1 0 1 0 0 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +74 
* * 277 87 63 0 0 0 0 0 0 36 1 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +74 
* * 233 71 53 0 0 0 0 0 0 22 0 2
+5 +1 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 +39 +5 
* * 
+39 +5 1
+7 * 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -36 
* * 617 206 175 0 2 1 0 2 1 24 0 4 1
+5 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(2)
cfn=(2)
calls=1 0x405136 -36 
* * 972 286 270 0 15 0 0 15 0 66 3 4
+5 * 1 1
+6 * 1
+7 * 1
+7 * 1 0 1
+6 * 1 1 0 1 0 0 1
+8 * 1
+3 * 1
+3 * 1 0 1
cfn=(78)
calls=1 0x401b2f 32 
* * 426 180 106 0 0 0 0 0 0 11 1 1
+5 * 1 0 1
+8 * 1 1
+6 * 1 0 1
+6 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +68 
* * 277 87 63 0 0 0 0 0 0 36 1 2 1
+5 * 1
+7 * 1
+3 * 1 0 1
cfi=(2)
cfn=(108)
calls=1 0x404d02 +68 
* * 233 71 53 0 0 0 0 0 0 22 0 2
+5 +1 1 1 0 1 0 0 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 1 1
+8 * 1 1
+7 * 1 0 0 0 0 0 0 0 0 1 1
+2 +2 1 1
+6 * 1 0 1
+6 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1 1 0 0 1
cfi=(24)
cfn=(138)
calls=1 0x4051f4 160 
* * 477 171 142 2 2 2 2 2 2 6 1 2

fl=(11)
fn=(46)
0x4060a5 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10 0 1 0 0 1
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(48) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=10 0x406ed4 107 
* * 3141 1093 1028 24 88 16 24 88 16 83 7 20
+5 * 10 10
+1 * 10 10

fn=(48)
0x406ed4 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(50) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=10 0x407705 -26 
* * 3001 1043 978 24 88 16 24 88 16 83 7 20
+5 +1 10 10
+1 * 10 10

fn=(50)
0x407705 91 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(52)
calls=10 0x407bc0 450 
* * 2861 993 928 24 88 16 24 88 16 83 7 20
+5 * 10 10
+1 * 10 10

ob=(7)
fl=(21)
fn=(104)
0x26b00 27 5 0 0 1 0 0 1
+4 * 5
+4 * 5 0 0 0 0 0 0 0 0 5
fi=(22) /build/eglibc-oGUzwX/eglibc-2.19/math/../sysdeps/x86_64/fpu/math_private.h
+2 +31 5
fe=(21)
+4 -27 5 5

totals: 14758 4875 3956 154 124 41 154 124 41 838 44 73 9
