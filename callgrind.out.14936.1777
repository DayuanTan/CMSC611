version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1777


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2229511390 - 2230723484
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1364 0 0 1 0 0 1
+3 0 1364 0 0 0 0 0 0 0 0 1364
+2 0 1364
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1364 0x3877c7b8b0 0 
* 0 164597 43019 23881 23 5 0 23 5 0 40503 589
* 0 1364 1364 0 1 1 0 1 1 0 0 0 1364

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1364 0 1364 1 0 0 1
+1 0 1364
+5 0 1364
+3 0 1364 0 1364
+1 0 1364
+4 0 1364 0 0 1 0 0 1
+3 0 1364
+4 0 1364
+3 0 1364 0 1364 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1364 0x3877c7aa50 0 
* 0 406680 61284 63233 51 40 58 51 40 58 68103 3111
* 0 1364 1364 0 1 1 0 1 1 0 0 0 1364
+5 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364
jcnd=1364/1364 +96 0 
* 0 
+96 0 1364 0 0 1 0 0 1
+4 0 1364 1364
+1 0 1364 1364
+1 0 1364 1364

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 674
+4 * 674
+3 * 674 0 674
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=674 0x4044cc -35 
* * 3370 1348 1348
+5 * 674 674
+1 * 674 674

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 674 0 674 1 0 0 1
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674 1 0 0 1
+4 +1 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=674 0x4049d4 -35 
* * 4044 1348 2022 1 0 0 1
+5 * 674 674
+1 * 674 674

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 674 0 674 1 0 0 1
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 674
+4 * 674
+3 * 674 0 674
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=674 0x404520 -35 
* * 3370 1348 1348
+5 * 674 674
+1 * 674 674

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 674 0 674 1 0 0 1
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=674 0x404a28 -35 
* * 4044 1348 2022 1 0 1 1 0 1
+5 * 674 674
+1 * 674 674

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 337 0 337
+1 * 337
+3 * 337
+4 * 337 0 337
+4 * 337 0 337
+4 * 337 0 337
+4 +1 337 337
+4 * 337 337
+4 * 337 337
+4 * 337
+3 * 337
+3 * 337 0 337
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=337 0x403df2 -87 
* * 8088 2696 3033 0 22 9 0 22 9 337 2
+5 * 337 337
+1 * 337 337

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 674 0 674 1 0 0 1
+1 * 674
+3 * 674 0 674
+4 * 674 674
+4 * 674 674
+1 * 674 674

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 337 0 337
+1 * 337
+3 * 337
+4 * 337 0 337
+4 * 337 0 337
+4 * 337 0 337
+4 +1 337 337
+4 * 337 337
+4 * 337 337
+4 * 337
+3 * 337
+3 * 337 0 337
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=337 0x40406a -87 
* * 8088 2696 3033 0 22 13 0 22 13 337
+5 * 337 337
+1 * 337 337

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 674 0 674
+1 * 674
+3 * 674 0 674
+4 * 674 674
+4 * 674 674
+1 * 674 674

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 754 0 754
+1 * 754
+3 * 754 0 754
+4 +1 754 754
+4 * 754 754
+1 * 754 754

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348 0 1348
+4 +1 1348 1348 0 1 0 0 1
+4 * 1348 1348
+1 * 1348 1348

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 754 0 754
+1 * 754
+3 * 754 0 754 0 0 1 0 0 1
+4 +1 754 754
+4 * 754 754
+1 * 754 754

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
+4 +1 1348
+4 * 1348
+3 * 1348 0 1348
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1348 0x404ffe 790 
* * 8088 4044 2696 1 0 0 1
+5 * 1348 1348
+3 * 1348 1348
+1 * 1348 1348

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348 0 1348
+4 +1 1348 1348
+4 * 1348 1348
+1 * 1348 1348

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
+4 +1 1348
+4 * 1348
+3 * 1348 0 1348 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1348 0x40500c 790 
* * 8088 4044 2696 1 0 0 1
+5 * 1348 1348
+3 * 1348 1348
+1 * 1348 1348

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 674 0 674
+1 * 674
+3 * 674 0 674
+4 * 674 0 674
+4 * 674 674
+4 * 674 674
+1 * 674 674

fl=(5)
fn=(102)
0x4048de 113 698 0 698 1 0 0 1
+1 * 698
+3 * 698 0 698
+4 +1 698
+10 * 698 698
+1 * 698 698

fn=(266)
0x40406a 129 337 0 337
+1 * 337
+3 * 337
+4 * 337 0 337
+4 * 337 0 337
+4 * 337 0 337
+4 +1 337 337
+4 * 337
+3 * 337
+5 * 337 0 337
cfi=(16)
cfn=(226)
calls=337 0x402d61 -20 
* * 2359 1011 1011
+5 * 337
+3 * 337 0 0 0 0 0 0 0 0 337
+2 * 337 337
+4 * 337 337 0 0 22 0 0 22
+2 * 337 0 337 0 0 13 0 0 13
+2 * 337 337
+1 * 337 337

fn=(28)
0x404992 113 698 0 698 1 0 0 1
+1 * 698
+3 * 698 0 698
+4 +1 698
+10 * 698 698
+1 * 698 698

fn=(176)
0x4044cc 86 674 0 674
+1 * 674
+3 * 674 0 674
+4 * 674 674
+1 * 674 674

fn=(224)
0x403df2 129 337 0 337
+1 * 337
+3 * 337
+4 * 337 0 337
+4 * 337 0 337
+4 * 337 0 337
+4 +1 337 337
+4 * 337
+3 * 337
+5 * 337 0 337
cfi=(16)
cfn=(226)
calls=337 0x402d61 -20 
* * 2359 1011 1011
+5 * 337
+3 * 337 0 0 0 0 0 0 0 0 337 2
+2 * 337 337
+4 * 337 337 0 0 22 0 0 22
+2 * 337 0 337 0 0 9 0 0 9
+2 * 337 337
+1 * 337 337

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682
+3 * 682 0 682
cob=(5)
cfi=(8)
cfn=(164)
calls=682 0x387e4bb2f0 0 
* * 85394 22287 11911 23 4 0 23 4 0 21046 256 682
* * 682 682 0 1 1 0 1 1 0 0 0 682
+5 * 682 682
+1 * 682 682

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682
+3 * 682 0 682
cob=(5)
cfi=(8)
cfn=(164)
calls=682 0x387e4bb2f0 0 
* * 84659 22096 11970 2 2 0 2 2 0 20821 333 682
* * 682 682 0 0 0 0 0 0 0 0 0 682
+5 * 682 682
+1 * 682 682

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682
+4 * 682
+3 * 682 0 682
cfn=(102)
calls=682 0x4048de +12 
* * 4092 1364 1364 1 0 0 1
+5 * 682 682
+4 * 682 0 0 1 0 0 1
+3 * 682
+2 * 682 0 0 0 0 0 0 0 0 682
jcnd=682/682 +7 +3 
* * 
+7 +3 682 682
+4 * 682
+4 * 682
+3 * 682 0 682
cob=(5)
cfi=(8)
cfn=(32)
calls=682 0x387e4bd0b0 0 
* * 213858 33066 31643 26 18 36 26 18 36 35032 1622 682
* * 682 682 0 0 0 0 0 0 0 0 0 682
+5 +1 682 682
+1 * 682 682

fn=(18)
0x404a28 81 674 0 674 1 0 0 1
+1 * 674
+3 * 674 0 674 0 0 1 0 0 1
+4 * 674 0 674
+4 * 674 674
+1 * 674 674

fn=(92)
0x4049d4 81 674 0 674 1 0 0 1
+1 * 674
+3 * 674 0 674
+4 * 674 0 674
+4 * 674 674
+1 * 674 674

fn=(196)
0x404520 86 674 0 674
+1 * 674
+3 * 674 0 674
+4 * 674 674
+1 * 674 674

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682 1 0 0 1
+4 +2 682 682
+4 * 682
+3 * 682 0 682
cfn=(28)
calls=682 0x404992 +12 
* * 4092 1364 1364 1 0 0 1
+5 * 682 682
+4 * 682
+3 * 682
+2 * 682 0 0 0 0 0 0 0 0 682
jcnd=682/682 +7 +3 
* * 
+7 +3 682 682
+4 * 682
+4 * 682
+3 * 682 0 682
cob=(5)
cfi=(8)
cfn=(32)
calls=682 0x387e4bd0b0 0 
* * 214646 33674 35682 29 23 23 29 23 23 34435 1489 682
* * 682 682 0 1 1 0 1 1 0 0 0 682
+5 +1 682 682
+1 * 682 682

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +10 674 674
+4 * 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=674 0x404829 -26 
* * 331584 110384 106344 25 3 2 25 3 2 12928 865 1344 168
+5 +1 674 674
+1 * 674 674

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +2 674 674
+4 * 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674 1 0 0 1
cfn=(50)
calls=674 0x404484 107 
* * 341020 113754 109714 25 3 2 25 3 2 12928 865 1344 168
+5 * 674 674
+1 * 674 674

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52)
0x404829 91 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +2 674 674 0 1 0 0 1
+4 * 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=674 0x404a36 450 
* * 322148 107014 102974 24 3 2 24 3 2 12928 865 1344 168
+5 * 674 674
+1 * 674 674

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +2 674 674
+4 * 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=674 0x40439c 107 
* * 341020 113754 109714 7 1 24 7 1 24 12928 777 1344
+5 * 674 674
+1 * 674 674

fn=(116)
0x40439c 107 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +10 674 674
+4 * 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=674 0x4047d7 -26 
* * 331584 110384 106344 7 1 24 7 1 24 12928 777 1344
+5 +1 674 674
+1 * 674 674

fn=(118)
0x4047d7 91 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +2 674 674
+4 * 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=674 0x4049e2 450 
* * 322148 107014 102974 7 1 24 7 1 24 12928 777 1344
+5 * 674 674
+1 * 674 674

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 674 0 674
+1 * 674
+3 * 674 0 674
+1 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=674 0x4043ca -45 
* * 24264 8762 9436 4 0 4 4 0 4
+5 +1 674 674 0 1 0 0 1
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=674 0x404412 +43 
* * 257599 50178 48129 27 19 16 27 19 16 35432 1433 1348
+5 * 674
jump=674 +28 * 
* * 
+28 * 674
+4 * 674 674
+1 * 674 674
+1 * 674 674

fn=(14)
0x4043ca 90 674 0 674 1 0 0 1
+1 * 674
+3 * 674
+4 * 674 0 674 0 0 1 0 0 1
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfi=(4)
cfn=(16)
calls=674 0x404804 +24 
* * 12132 4044 4718 2 0 1 2 0 1
+5 * 674 674
+4 * 674 0 674 0 0 2 0 0 2
+7 * 674 674
+4 * 674 0 674 1 0 0 1
+8 * 674 674
+4 * 674 0 674
+8 +1 674 674
+1 * 674 674

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 674 0 674 1 0 0 1
+1 * 674
+3 * 674 0 674
+2 * 674 0 674
+2 * 674 0 674
+1 * 674 0 0 1 0 0 1
+4 * 674 0 674
+4 * 674 0 674
+4 +2 674 674
+4 * 674
+3 * 674 0 674
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=674 0x4039fc 117 
* * 4044 2022 1348 2 0 0 2
+5 * 674
+3 * 674 0 674
cfi=(3)
cfn=(84)
calls=674 0x4039ed -88 
* * 4044 2022 1348
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=674 0x402d74 645 
* * 8762 4044 1348
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674
+3 * 674
+3 * 674 0 674 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=674 0x403a0a 134 
* * 294950 62793 58030 25 16 31 25 16 31 35838 1569 1348
+5 +4 674 674
+4 * 674
+3 * 674 0 674
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=674 0x40325e 113 
* * 4044 2022 1348 1 0 0 1
+5 * 674
+3 * 674 674
+4 * 674 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=674 0x403a98 565 
* * 16850 6740 5392 2 0 0 2
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=674 0x403a68 547 
* * 16850 6740 5392
+5 * 674
+3 * 674
+3 * 674
+3 * 674
+3 * 674 0 674
cfi=(11)
cfn=(114)
calls=674 0x403ac9 -60 
* * 351130 117124 113758 7 1 24 7 1 24 12928 777 1344
+5 -3 674 674
+4 * 674 0 674
+4 * 674
jump=674 +28 +4 
* * 
+28 +4 674
+4 * 674 674
+1 * 674 674
+2 * 674 674
+2 * 674 674
+1 * 674 674

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682
+5 * 682 0 0 0 0 0 0 0 0 682 8
+2 +1 682 682
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(5)
cfn=(190)
calls=682 0x40452a -65 
* * 92843 24824 15380 2 2 0 2 2 0 20821 333 1364
+5 +1 682 682
+1 * 682 682

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682 1 0 0 1
+4 * 682 0 682
+4 0 682 682
+5 0 682 0 0 0 0 0 0 0 0 682
+2 0 682 682
+4 0 682 682
+4 0 682
+5 0 682
+3 0 682
+3 0 682 0 682
fi=(6) ???
cfi=(5)
cfn=(26)
calls=682 0x404730 99 
* 0 232378 39130 41138 33 24 23 33 24 23 35117 1489 1364
+5 0 682
fi=(6)
jump=682 +7 0 
* 0 
+7 0 682 682
+1 0 682 682

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 674 0 674 1 0 0 1
+1 * 674
+3 * 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+4 * 674 0 674
+4 * 674
+4 * 674 0 0 1 0 0 1
+4 * 674
+3 * 674
+3 * 674 0 674
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=674 0x404468 726 
* * 6740 3370 2696 1 0 0 1
+5 * 674 674
+4 * 674 674
+1 * 674 674

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+3 * 674 0 674
+4 * 674
+4 * 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfi=(10)
cfn=(44)
calls=674 0x404468 726 
* * 6740 3370 2696
+5 * 674 674
+4 * 674 674
+1 * 674 674

fn=(86)
0x403a0a 134 674 0 674
+1 * 674
+3 * 674 0 674
+1 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=674 0x4042e2 -45 
* * 24264 8762 9436 5 0 0 5
+5 +1 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=674 0x40432a +43 
* * 255858 49313 43876 19 16 31 19 16 31 35838 1569 1348
+5 * 674
jump=674 +28 * 
* * 
+28 * 674
+4 * 674 674
+1 * 674 674
+1 * 674 674

fn=(88)
0x4042e2 90 674 0 674 1 0 0 1
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674 1 0 0 1
cfi=(4)
cfn=(90)
calls=674 0x4047b2 +24 
* * 12132 4044 4718 3 0 0 3
+5 * 674 674
+4 * 674 0 674
+7 * 674 674
+4 * 674 0 674
+8 * 674 674
+4 * 674 0 674
+8 +1 674 674
+1 * 674 674

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 674 0 674 1 0 0 1
+1 * 674
+3 * 674 0 674
+1 * 674
+4 * 674 0 674
+4 +2 674 674
+4 * 674 674 0 1 0 0 1
+4 * 674
+3 * 674 674
+4 * 674 674
+3 * 674
+3 * 674
+3 * 674
+4 * 674
+3 * 674 674
+4 * 674 674
+3 -1 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=674 0x403ce6 +11 
* * 103416 28820 18540 24 5 0 24 5 0 21526 252 1348
+5 +1 674 674
+4 * 674
+3 * 674 0 674
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=674 0x4031b8 -82 
* * 15502 5392 5392 1 0 0 1
+5 * 674
jump=674 +28 * 
* * 
+28 * 674
+4 * 674 674
+1 * 674 674
+1 * 674 674

fn=(172)
0x4031b8 79 674 0 674 1 0 0 1
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 674
+4 * 674
+3 * 674 0 674
cfi=(4)
cfn=(174)
calls=674 0x403ccc +42 
* * 9436 3370 3370
+5 * 674 674
+1 * 674 674

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1380 0 1380 1 0 0 1
+1 * 1380
+3 * 1380 0 1380
+4 +1 1380 1380
+4 * 1380 1380 0 0 2 0 0 2
+4 * 1380
+3 * 1380 1380
+4 * 1380 1380
+3 * 1380
+3 * 1380
+3 * 1380
+4 * 1380 1380
+1 * 1380 1380

fn=(106)
0x40325e 113 1372 0 1372 1 0 0 1
+1 * 1372
+3 * 1372 0 1372
+4 +1 1372 1372
+4 * 1372 1372
+1 * 1372 1372

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 690 0 690 1 0 0 1
+1 * 690
+3 * 690 0 690 0 0 1 0 0 1
+4 +1 690 690
+4 * 690 690
+1 * 690 690

fn=(82)
0x4039fc 117 690 0 690 1 0 0 1
+1 * 690
+3 * 690 0 690 1 0 0 1
+4 +1 690 690
+4 * 690 690
+1 * 690 690

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 337 0 337
+1 * 337
+3 * 337
+4 * 337 0 337
+4 * 337 0 337
+4 +2 337 337
+4 * 337 337
+4 * 337 337
+4 * 337 337
+4 * 337
+3 * 337 0 0 0 0 0 0 0 0 337 8
jcnd=8/337 +51 +10 
* * 
+2 +3 329 329
+4 * 329 329
+4 * 329 329
+4 -1 329 329
+4 * 329
+3 * 329
+3 * 329 0 329
cfi=(3)
cfn=(222)
calls=329 0x403373 215 
* * 12502 4277 4606 0 21 8 0 21 8 329 2
+5 +2 329 329
+4 * 329 329
+4 * 329
+4 * 329 329
+4 * 329 0 329
+4 * 329
jump=329 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12922 3942 3441 36 3 9 36 3 9 908 63 47
+5 +2 337 337
+1 * 337 337

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 674 0 674 1 0 0 1
+1 * 674
+3 * 674 0 674
+2 * 674 0 674
+2 * 674 0 674
+1 * 674
+4 * 674 0 674 1 0 0 1
+4 * 674 0 674
+4 +2 674 674
+4 * 674
+3 * 674 0 674
cfn=(6)
calls=674 0x403b08 117 
* * 4044 2022 1348 1 0 1 1 0 1
+5 * 674
+3 * 674 0 674
cfi=(3)
cfn=(8)
calls=674 0x403afa -88 
* * 4044 2022 1348 1 0 0 1
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(10)
calls=674 0x402f54 645 
* * 8762 4044 1348 1 1 0 1 1
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674
+3 * 674
+3 * 674 0 674
cfn=(12)
calls=674 0x403b16 134 
* * 296691 63658 62283 32 19 20 32 19 20 35432 1433 1348
+5 +4 674 674 0 1 0 0 1
+4 * 674
+3 * 674 0 674
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=674 0x40333c 113 
* * 4044 2022 1348 2 0 0 2
+5 * 674
+3 * 674 674
+4 * 674 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(42)
calls=674 0x403ba4 565 
* * 16850 6740 5392 3 0 0 3
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(46)
calls=674 0x403b74 547 
* * 16850 6740 5392
+5 * 674
+3 * 674
+3 * 674
+3 * 674
+3 * 674 0 674 1 0 0 1
cfi=(11)
cfn=(48)
calls=674 0x403bd5 -60 
* * 351130 117124 113758 26 3 2 26 3 2 12928 865 1344 168
+5 -3 674 674
+4 * 674 0 674
+4 * 674
jump=674 +28 +4 
* * 
+28 +4 674
+4 * 674 674
+1 * 674 674
+2 * 674 674
+2 * 674 674
+1 * 674 674

fn=(108)
0x403a98 565 674 0 674 1 0 0 1
+1 * 674
+3 * 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+4 * 674 0 674
+4 * 674
+4 * 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=674 0x404380 726 
* * 6740 3370 2696 1 0 0 1
+5 * 674 674
+4 * 674 674
+1 * 674 674

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 674 0 674
+1 * 674
+3 * 674 0 674
+1 * 674
+4 * 674 0 674 1 0 0 1
+4 +2 674 674
+4 * 674
+3 * 674 0 674
cfn=(40)
calls=674 0x40333c 113 
* * 4044 2022 1348
+5 * 674
+3 * 674 674
+4 * 674 674
+4 * 674 674
+4 * 674 674
+3 -1 674
+3 * 674
+3 * 674 0 674
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=674 0x40334a 148 
* * 20894 6740 8088 2 0 0 2
+5 +1 674 674
+4 * 674
+3 * 674 0 674
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=674 0x4032ca 159 
* * 137010 41414 27354 3 2 0 3 2 0 21290 324 1348
+5 * 674
jump=674 +28 * 
* * 
+28 * 674 0 0 1 0 0 1
+4 * 674 674
+1 * 674 674
+1 * 674 674

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 682 0 682 1 0 0 1
+1 * 682 0 0 1 0 0 1
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 0 682 682
+5 0 682 0 0 0 0 0 0 0 0 682
+2 0 682 682
+4 0 682 682
+4 0 682
+5 0 682
+3 0 682
+3 0 682 0 682
fi=(6)
cfi=(5)
cfn=(100)
calls=682 0x40461a 99 
* 0 231590 38522 37099 29 18 36 29 18 36 35714 1622 1364
+5 0 682
fi=(6)
jump=682 +7 0 
* 0 
+7 0 682 682
+1 0 682 682

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 172544 0 172544
+1 * 172544
+3 * 172544 0 172544
+4 * 172544 0 172544
+4 +1 172544 172544
+4 * 172544 172544
+3 * 172544 172544
+4 * 172544
+4 * 172544
+3 * 172544 172544
+1 * 172544 172544

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 172544 0 172544
+1 * 172544
+3 * 172544 0 172544 1 0 0 1
+4 * 172544 0 172544
+4 +1 172544 172544
+4 * 172544 172544
+3 * 172544 172544
+4 * 172544
+4 * 172544
+3 * 172544 172544
+1 * 172544 172544

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 674
+4 * 674
+3 * 674 0 674
cfi=(4)
cfn=(194)
calls=674 0x403d7e +42 
* * 9436 3370 3370 1 0 0 1
+5 * 674 674
+1 * 674 674

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 674 0 674 1 0 0 1
+1 * 674
+3 * 674 0 674
+1 * 674
+4 * 674 0 674
+4 +2 674 674
+4 * 674 674
+4 * 674
+3 * 674 674
+4 * 674 674
+3 * 674
+3 * 674
+3 * 674
+4 * 674
+3 * 674 674
+4 * 674 674
+3 -1 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(188)
calls=674 0x403d98 +11 
* * 102636 28608 18592 1 2 0 1 2 0 21290 324 1348
+5 +1 674 674
+4 * 674
+3 * 674 0 674
cfn=(192)
calls=674 0x403296 -82 
* * 15502 5392 5392 1 0 0 1
+5 * 674
jump=674 +28 * 
* * 
+28 * 674
+4 * 674 674
+1 * 674 674
+1 * 674 674

fn=(2)
0x402d74 645 2728 0 2728 1 0 0 1
+1 * 2728
+3 * 2728 0 2728 0 0 1 0 0 1
+4 +1 2728 2728
+4 * 2728 2728 0 1 1 0 1 1
+4 * 2728
+3 * 2728 2728
+4 * 2728 2728
+3 * 2728
+3 * 2728
+3 * 2728
+4 * 2728 2728
+1 * 2728 2728

fn=(20)
0x404412 179 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 +2 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(22)
calls=674 0x404236 -14 
* * 240749 42090 43411 26 19 16 26 19 16 35432 1433 1348
+5 * 674 674
+4 * 674 0 674
+3 +1 674 674
+4 * 674 674 0 1 0 0 1
+3 * 674 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+3 * 674 674
+4 * 674
+4 * 674
+3 * 674 674
+4 * 674 0 674
+4 +1 674 674
+1 * 674 674

fn=(94)
0x40432a 179 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 +2 674 674
+4 * 674 674 0 1 0 0 1
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(96)
calls=674 0x403fbe -14 
* * 239008 41225 39158 18 16 31 18 16 31 35838 1569 1348
+5 * 674 674
+4 * 674 0 674
+3 +1 674 674
+4 * 674 674
+3 * 674 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+3 * 674 674
+4 * 674
+4 * 674
+3 * 674 674
+4 * 674 0 674
+4 +1 674 674
+1 * 674 674

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 337 0 337
+1 * 337
+3 * 337 0 0 1 0 0 1
+4 * 337 0 337
+4 * 337 0 337
+4 +2 337 337
+4 * 337 337
+4 * 337 337
+4 * 337 337
+4 * 337
+3 * 337 0 0 0 0 0 0 0 0 337
jcnd=8/337 +51 +10 
* * 
+2 +3 329 329
+4 * 329 329
+4 * 329 329
+4 -1 329 329
+4 * 329
+3 * 329
+3 * 329 0 329
cfi=(3)
cfn=(264)
calls=329 0x4036b1 215 
* * 12502 4277 4606 0 21 9 0 21 9 329
+5 +2 329 329
+4 * 329 329
+4 * 329
+4 * 329 329
+4 * 329 0 329
+4 * 329
jump=329 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12014 3706 3234 29 6 30 29 6 30 728 77 47
+5 +2 337 337
+1 * 337 337

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1372 0 1372 1 0 0 1
+1 * 1372
+3 * 1372 0 1372 1 0 0 1
+4 +1 1372 1372
+4 * 1372 1372
+1 * 1372 1372

fn=(112)
0x403a68 547 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674 674
+3 * 674 0 674
+4 * 674
+4 * 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfi=(10)
cfn=(110)
calls=674 0x404380 726 
* * 6740 3370 2696
+5 * 674 674
+4 * 674 674
+1 * 674 674

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 674 0 674
+1 * 674
+3 * 674 0 674
+1 * 674
+4 * 674 0 674 1 0 0 1
+4 +2 674 674
+4 * 674
+3 * 674 0 674
cfn=(106)
calls=674 0x40325e 113 
* * 4044 2022 1348
+5 * 674
+3 * 674 674
+4 * 674 674
+4 * 674 674
+4 * 674 674
+3 -1 674
+3 * 674
+3 * 674 0 674
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=674 0x40326c 148 
* * 20894 6740 8088 4 0 0 4
+5 +1 674 674
+4 * 674
+3 * 674 0 674
cfn=(156)
calls=674 0x4031ec 159 
* * 137790 41626 27302 27 5 0 27 5 0 21526 252 1348
+5 * 674
jump=674 +28 * 
* * 
+28 * 674 0 0 1 0 0 1
+4 * 674 674
+1 * 674 674
+1 * 674 674

fn=(158)
0x403ce6 171 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +2 682 682
+5 * 682 0 0 0 0 0 0 0 0 682
+2 +1 682 682
+4 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfi=(5)
cfn=(160)
calls=682 0x4044d6 -65 
* * 93578 25015 15321 24 5 0 24 5 0 21046 256 1364
+5 +1 682 682
+1 * 682 682

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 722 0 722 1 0 0 1
+1 * 722
+3 * 722
+4 * 722 0 722
+4 +1 722 722
+4 * 722
+3 * 722 0 722 1 0 0 1
cfi=(13)
cfn=(64)
calls=722 -33 -66 
* * 4332 2166 1444
+5 * 722 722
+1 * 722 722

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 1348 0 1348
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
+4 +1 1348 1348
+4 * 1348
+3 * 1348 0 1348
cfi=(13)
cfn=(68)
calls=1348 0x404f1a -58 
* * 21568 8088 6740 2 0 1 2 0 1
+5 * 1348 1348
+1 * 1348 1348

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 674 0 674
+1 * 674
+3 * 674 0 674
+1 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +10 674 674
+4 * 674
+3 * 674 0 674
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=674 0x404bc6 288 
* * 10110 4044 3370 3 0 0 3
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(122)
calls=674 0x404bc6 288 
* * 10110 4044 3370
+5 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=674 0x404be0 -36 
* * 287100 94882 90842 4 1 24 4 1 24 12928 777 1344
+5 +1 674
+4 * 674 674
+1 * 674 674
+1 * 674 674

fn=(128)
0x404878 277 722 0 722
+1 * 722
+3 * 722
+4 * 722 0 722 1 0 0 1
+4 +1 722 722
+4 * 722
+3 * 722 0 722
cfi=(13)
cfn=(130)
calls=722 -33 -66 
* * 4332 2166 1444 0 0 1 0 0 1
+5 * 722 722
+1 * 722 722

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1348 0 1348
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
+4 +1 1348 1348
+4 * 1348
+3 * 1348 0 1348
cfi=(13)
cfn=(134)
calls=1348 0x404e98 -58 
* * 21568 8088 6740 2 0 0 2
+5 * 1348 1348
+1 * 1348 1348

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +8 674 0 674
+4 +3 674 674
+4 * 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=674 0x404eb5 -22 
* * 214308 70618 65904 1 1 24 1 1 24 12928 777 1344
+5 +1 674 674
+1 * 674 674

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
+4 +1 1348 1348
+4 * 1348
+3 * 1348 0 1348
cfi=(13)
cfn=(124)
calls=1348 0x404d36 -77 
* * 8088 4044 2696 2 0 0 2
+5 * 1348 1348
+1 * 1348 1348

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348
+4 * 1348 0 1348 1 0 0 1
+4 +1 1348 1348
+4 * 1348
+3 * 1348 0 1348
cfi=(13)
cfn=(58)
calls=1348 0x404d8f -77 
* * 8088 4044 2696 1 0 0 1
+5 * 1348 1348
+1 * 1348 1348

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 690 0 690
+1 * 690
+3 * 690
+4 * 690 0 690 1 0 0 1
+4 * 690 0 690
+4 * 690 0 690
+4 +2 690 690
+4 * 690 690
+4 * 690
+3 * 690
+3 * 690
+4 * 690 0 690
+4 +1 690 690
+5 * 690 0 0 0 0 0 0 0 0 690
jcnd=8/690 +33 +2 
* * 
+2 +1 682 682
+4 * 682
+8 * 682 682
+4 * 682 682
+4 * 682
+3 * 682 0 0 1 0 0 1
+3 * 682 0 682 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=682 0x3877c83840 0 
* * 196558 63520 62161 11 2 19 11 2 19 12338 869 677 168
* * 682 682 0 1 1 0 1 1 0 0 0 682
+5 +1 690 690
+4 * 690
+8 * 690 690
+4 * 690
+3 +1 690 690
+1 * 690 690

fn=(140)
0x404eb5 368 690 0 690
+1 * 690
+3 * 690
+4 * 690 0 690 1 0 0 1
+4 * 690 0 690
+4 * 690 0 690 0 0 1 0 0 1
+4 +2 690 690
+4 * 690 690
+4 * 690
+3 * 690
+3 * 690
+4 * 690 0 690
+4 +1 690 690
+5 * 690 0 0 0 0 0 0 0 0 690
jcnd=8/690 +33 +2 
* * 
+2 +1 682 682
+4 * 682
+8 * 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cob=(2)
cfi=(9)
cfn=(78)
calls=682 0x3877c83840 0 
* * 196558 63520 62161 0 1 25 0 1 25 12338 783 677
* * 682 682 0 0 0 0 0 0 0 0 0 682
+5 +1 690 690
+4 * 690
+8 * 690 690
+4 * 690
+3 +1 690 690
+1 * 690 690

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674 1 0 0 1
+4 * 674 0 674
+4 * 674 0 674
+4 +8 674 0 674
+4 +3 674 674
+4 * 674 674
+4 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(74)
calls=674 0x404f37 -22 
* * 214308 70618 65904 14 3 1 14 3 1 12928 865 1344 168
+5 +1 674 674
+1 * 674 674

fn=(126)
0x404be0 424 674 0 674
+1 * 674
+3 * 674 0 674
+2 * 674 0 674
+1 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +4 674 674
+4 * 674
+3 * 674 0 674
cfn=(128)
calls=674 0x404878 277 
* * 10110 4044 3370 1 0 0 1
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(132)
calls=674 0x404d44 277 
* * 16850 6066 5392 2 0 0 2
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(132)
calls=674 0x404d44 277 
* * 16850 6066 5392
+5 * 674
+3 * 674
+3 * 674
+3 * 674 0 674
cfn=(138)
calls=674 0x404d5e -49 
* * 224418 73988 69948 1 1 24 1 1 24 12928 777 1344
+5 +1 674
+4 * 674 674
+1 * 674 674
+2 * 674 674
+1 * 674 674

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 674 0 674
+1 * 674
+3 * 674 0 674
+1 * 674
+4 * 674 0 674 1 0 0 1
+4 * 674 0 674
+4 * 674 0 674
+4 +10 674 674
+4 * 674
+3 * 674 0 674
cfn=(56)
calls=674 0x404c38 288 
* * 10110 4044 3370 3 0 0 3
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(56)
calls=674 0x404c38 288 
* * 10110 4044 3370
+5 * 674 674
+4 * 674
+3 * 674
+3 * 674 0 674
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=674 0x404c52 -36 
* * 287100 94882 90842 20 3 2 20 3 2 12928 865 1344 168
+5 +1 674
+4 * 674 674
+1 * 674 674
+1 * 674 674

fn=(60)
0x404c52 424 674 0 674
+1 * 674
+3 * 674 0 674
+2 * 674 0 674
+1 * 674
+4 * 674 0 674
+4 * 674 0 674
+4 * 674 0 674
+4 +4 674 674
+4 * 674
+3 * 674 0 674
cfn=(62)
calls=674 0x40492d 277 
* * 10110 4044 3370 2 0 0 2
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674 1 0 0 1
cfn=(66)
calls=674 0x404d9d 277 
* * 16850 6066 5392 2 0 1 2 0 1
+5 * 674
+3 * 674 674
+4 * 674
+3 * 674 0 674
cfn=(66)
calls=674 0x404d9d 277 
* * 16850 6066 5392
+5 * 674
+3 * 674
+3 * 674
+3 * 674 0 674
cfn=(72)
calls=674 0x404db7 -49 
* * 224418 73988 69948 15 3 1 15 3 1 12928 865 1344 168
+5 +1 674
+4 * 674 674
+1 * 674 674
+2 * 674 674
+1 * 674 674

fn=(282)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(10)
fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348 0 1348
+4 +1 1348 1348
+4 * 1348 1348
+1 * 1348 1348

fn=(110)
0x404380 726 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348 0 1348
+4 * 1348 0 1348
+4 * 1348 1348
+4 * 1348 1348
+3 * 1348 1348
+4 * 1348 0 1348
+3 * 1348 1348
+1 * 1348 1348

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1348 0 1348 1 0 0 1
+1 * 1348
+3 * 1348 0 1348
+4 +1 1348 1348
+4 * 1348 1348
+1 * 1348 1348

fn=(44)
0x404468 726 1348 0 1348
+1 * 1348
+3 * 1348 0 1348
+4 * 1348 0 1348
+4 * 1348 1348
+4 * 1348 1348
+3 * 1348 1348
+4 * 1348 0 1348 1 0 0 1
+3 * 1348 1348
+1 * 1348 1348

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(150)
0x40326c 148 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +3 682 682 0 1 0 0 1
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=682 0x403d1a -29 
* * 12276 4092 4774 3 0 0 3
+5 +1 682 682
+1 * 682 682

fn=(180)
0x40334a 148 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 * 682 0 682
+4 +3 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(182) void std::_Destroy<int*>(int*, int*)
calls=682 0x403dcc -29 
* * 12276 4092 4774 2 0 0 2
+5 +1 682 682
+1 * 682 682

fn=(152)
0x403d1a 122 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 +4 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
calls=682 0x4044f8 -14 
* * 4092 1364 2046 2 0 0 2
+5 +2 682 682
+1 * 682 682

fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 682 0 682 1 0 0 1
+1 * 682
+3 * 682 0 682
+4 * 682 0 682
+4 * 682 682
+1 * 682 682

fn=(154)
0x4044f8 112 682 0 682 1 0 0 1
+1 * 682
+3 * 682 0 682
+4 * 682 0 682 1 0 0 1
+4 * 682 682
+1 * 682 682

fn=(182)
0x403dcc 122 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 * 682 0 682
+4 +4 682 682
+4 * 682 682
+4 * 682
+3 * 682
+3 * 682 0 682
cfn=(184)
calls=682 0x40454c -14 
* * 4092 1364 2046 1 0 0 1
+5 +2 682 682
+1 * 682 682

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2541 450 455 9 5 7 9 5 7 367 56 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1119 308 198 2 0 0 2 0 0 213 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3494 707 669 13 2 5 13 2 5 558 53 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 4 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 337 0 337 1 0 0 1
+1 * 337
+3 * 337
+4 * 337 0 337
+4 * 337 0 337
+4 +1 337 337
+4 * 337
+3 * 337 0 337
cfi=(2)
cfn=(2)
calls=337 0x402d74 645 
* * 4381 2022 674
+5 * 337
+3 * 337 0 337
+3 +1 337 337
+6 * 337 0 337
+3 * 337 337
+6 * 337 0 337
+3 +1 337 337
+6 * 337 0 337 1 0 0 1
+3 * 337 337
+6 * 337 0 337
+3 +2 337 0 337
+7 * 337
jump=337 +86 * 
* * 
+2 +1 57290 57290
+3 * 57290
+3 * 57290 57290
+4 * 57290
+3 * 57290
+3 * 57290 0 57290
cfi=(2)
cfn=(144)
calls=57290 0x402d9a 770 
* * 630190 286450 171870
+5 * 57290 57290
+4 * 57290 57290
+5 * 57290
+4 * 57290 0 57290
+5 +1 57290 57290
+3 * 57290
+3 * 57290 57290
+4 * 57290
+3 * 57290
+3 * 57290 0 57290
cfi=(2)
cfn=(146)
calls=57290 0x402dba 770 
* * 630190 286450 171870 1 0 0 1
+5 * 57290 57290
+2 * 57290
+4 * 57290 57290
+5 * 57290
+4 * 57290 0 57290
+5 -2 57290 0 57290
+4 * 57290 57290
+3 * 57290
+3 * 57290 57290
+3 * 57290 0 0 0 0 0 0 0 0 57290 338
jcnd=56953/57290 -93 +1 
* * 
-9 * 337 337 0 1 0 0 1
+3 * 337
+3 * 337 337
+3 * 337 0 0 0 0 0 0 0 0 337
jcnd=337/337 -93 +1 
* * 
+2 +4 337 337
+3 * 337
+3 * 337
+4 * 337 337 0 1 0 0 1
+5 * 337
+4 * 337
+3 * 337 0 337
+5 +1 337 337
+3 * 337
+3 * 337
+4 * 337 337
+5 * 337
+4 * 337
+3 * 337 0 337
+5 +1 337 0 337
+7 * 337
jump=337 0x4016ee * 
* * 
+2 +1 57290 57290
+3 * 57290
+3 * 57290 57290
+4 * 57290
+3 * 57290 0 0 1 0 0 1
+3 * 57290 0 57290
cfi=(2)
cfn=(146)
calls=57290 0x402dba 770 
* * 630190 286450 171870
+5 * 57290 57290
+2 * 57290
+4 * 57290 57290
+5 * 57290 0 57290
+5 +1 57290 57290
+3 * 57290
+3 * 57290 57290
+4 * 57290
+3 * 57290
+3 * 57290 0 57290
cfi=(2)
cfn=(144)
calls=57290 0x402d9a 770 
* * 630190 286450 171870
+5 * 57290 57290
+4 * 57290 57290
+5 * 57290 0 57290
+5 +1 57290 57290
+5 * 57290 57290
+5 * 57290 57290
+5 * 57290
+4 * 57290 0 57290
+5 +1 57290 57290
+5 * 57290 57290
+5 * 57290 57290
+5 * 57290
+4 * 57290 0 57290
+5 -4 57290 0 57290
+4 * 57290 57290
+3 * 57290
+3 * 57290 57290
+3 * 57290 0 0 0 0 0 0 0 0 57290 338
jcnd=56953/57290 0x401672 +1 
* * 
-9 * 337 337 0 1 0 0 1
+3 * 337
+3 * 337 337
+3 * 337 0 0 0 0 0 0 0 0 337
jcnd=337/337 0x401672 +1 
* * 
+6 +6 337 337 0 1 0 0 1
+5 * 337 337
+5 * 337 0 337
+5 +2 337 337
+3 +1 337 0 337
+3 * 337 337
+5 * 337 337
+1 * 337 337

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 337
+7 * 337
+7 * 337
+3 * 337
+3 * 337 0 337
cfi=(2)
cfn=(4)
calls=337 0x4030b2 310 
* * 368285 106918 101215 66 22 22 66 22 22 24207 1314 1346 168
+5 * 337
+7 * 337
+7 * 337
+3 * 337
+3 * 337 0 337
cfi=(2)
cfn=(80)
calls=337 0x402ff4 310 
* * 367275 106474 99087 40 7 53 40 7 53 24369 1251 1346
+5 * 337 0 0 1 0 0 1
+7 * 337
+7 * 337
+3 * 337
+3 * 337 0 337
cfn=(142)
calls=337 0x401585 -52 
* * 5980065 2643765 1380689 8 0 0 8 0 0 115254 676
+5 * 337 0 337
+8 * 337 337
+6 * 337 0 337
+6 * 337
+7 * 337
+3 * 337 0 337
cfi=(2)
cfn=(148)
calls=337 0x402df4 414 
* * 89452 28227 20391 33 5 0 33 5 0 10763 129 674
+5 * 337
+7 * 337
+3 * 337 0 337 1 0 0 1
cfi=(2)
cfn=(178)
calls=337 0x402e74 414 
* * 89062 28121 20417 7 2 0 7 2 0 10645 164 674
+5 +2 337
+7 * 337
+7 * 337
+3 * 337
+3 * 337 0 337
cfi=(2)
cfn=(4)
calls=337 0x4030b2 310 
* * 367830 106890 101112 4 1 1 4 1 1 24153 984 1346
+5 * 337
+7 * 337
+7 * 337
+3 * 337
+3 * 337 0 337
cfi=(2)
cfn=(80)
calls=337 0x402ff4 310 
* * 367099 106469 98987 0 10 2 0 10 2 24397 1095 1346
+5 * 337 337
+6 * 337 0 0 1 0 0 1
+7 * 337
+7 * 337 0 337
+6 * 337 337
+8 * 337
+3 * 337
+3 * 337 0 337
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=337 0x401719 -33 
* * 2769803 1153214 635245 4 0 0 4 0 0 57627 338
+5 * 337 0 337
+8 * 337 337
+6 * 337 0 337
+6 * 337
+7 * 337 0 0 1 0 0 1
+3 * 337 0 337
cfi=(2)
cfn=(148)
calls=337 0x402df4 414 
* * 89452 28227 20391 0 0 0 0 0 0 10763 123 674
+5 * 337
+7 * 337
+3 * 337 0 337
cfi=(2)
cfn=(178)
calls=337 0x402e74 414 
* * 89062 28121 20417 0 0 0 0 0 0 10645 160 674
+5 +2 337 337
+7 * 337
+3 * 337 0 337
cfi=(2)
cfn=(2)
calls=337 0x402d74 645 
* * 4381 2022 674
+5 * 337 337
+6 * 337
+3 * 337
+3 * 337
+3 * 337 337
+7 * 337
+3 * 337 0 0 1 0 0 1
+3 * 337 0 337
cfi=(2)
cfn=(144)
calls=337 0x402d9a 770 
* * 3707 1685 1011
+5 * 337
+3 * 337
+7 * 337
+3 * 337
+3 * 337 0 337
cfi=(2)
cfn=(200)
calls=337 0x402eda 901 
* * 34338 12640 9788 39 24 17 39 24 17 1574 73 47
+5 +1 337 337
+7 * 337
+3 * 337 0 337
cfi=(2)
cfn=(10)
calls=337 0x402f54 645 
* * 4381 2022 674 0 1 0 0 1
+5 * 337 337
+6 * 337
+3 * 337
+3 * 337
+3 * 337 337
+7 * 337 0 0 1 0 0 1
+3 * 337
+3 * 337 0 337
cfi=(2)
cfn=(146)
calls=337 0x402dba 770 
* * 3707 1685 1011
+5 * 337
+3 * 337
+7 * 337
+3 * 337
+3 * 337 0 337
cfi=(2)
cfn=(244)
calls=337 0x402f7a 901 
* * 33430 12404 9581 30 27 39 30 27 39 1394 77 47
+5 +1 337 337
+7 * 337
+3 * 337 0 337
cfi=(2)
cfn=(10)
calls=337 0x402f54 645 
* * 4381 2022 674
+5 * 337 337
+6 * 337
+3 * 337
+3 * 337
+3 * 337 337 0 1 0 0 1
+7 * 337
+3 * 337
+3 * 337 0 337
cfi=(2)
cfn=(146)
calls=337 0x402dba 770 
* * 3707 1685 1011
+5 * 337 337
+2 * 337
+4 * 337 337
+8 * 337 337
+8 * 337 0 337
+8 +1 337 337
+7 * 337
+3 * 337 0 337
cfi=(2)
cfn=(2)
calls=337 0x402d74 645 
* * 4381 2022 674
+5 * 337 337 0 1 0 0 1
+6 * 337
+3 * 337
+3 * 337
+3 * 337 337
+7 * 337
+3 * 337
+3 * 337 0 337
cfi=(2)
cfn=(144)
calls=337 0x402d9a 770 
* * 3707 1685 1011
+5 * 337 337
+4 * 337 337
+8 * 337
+4 * 337 337
+8 * 337
+3 * 337 0 337
+8 +2 337 0 337
+7 -12 337 337
+8 * 337 337
+7 * 337 0 0 0 0 0 0 0 0 337 1
jcnd=1/337 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 337
+7 * 337
+3 * 337 0 337
cfi=(2)
cfn=(2)
calls=337 0x402d74 645 
* * 4381 2022 674 2 0 1 2 0 1
+5 * 337
+3 * 337 337
+7 * 337
+3 * 337 0 337
cfi=(2)
cfn=(2)
calls=337 0x402d74 645 
* * 4381 2022 674 0 1 0 0 1
+5 * 337
+3 * 337 0 0 0 0 0 0 0 0 337 3
+2 * 337 0 0 1 0 0 1
+5 * 337
jump=337 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 337
+2 * 337 0 0 0 0 0 0 0 0 337
jcnd=337/337 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 337 0 337
+1 * 337
+3 * 337
+4 * 337 0 337
+4 * 337 0 337
+4 * 337 0 337
+5 +1 337 337
+4 * 337
+3 * 337 0 337
cfi=(2)
cfn=(2)
calls=337 0x402d74 645 
* * 4381 2022 674
+5 * 337
+3 * 337 0 337
+3 +1 337 337 0 1 0 0 1
+6 * 337 0 337
+3 * 337 337
+6 * 337 0 337
+3 +2 337 0 337
+7 * 337
jump=337 +86 * 
* * 
+2 +1 57290 57290
+3 * 57290
+3 * 57290 57290
+4 * 57290
+3 * 57290
+3 * 57290 0 57290
cfi=(2)
cfn=(144)
calls=57290 0x402d9a 770 
* * 630190 286450 171870
+5 * 57290 57290
+4 * 57290 57290
+5 * 57290
+4 * 57290 0 57290
+5 +1 57290 57290
+3 * 57290
+3 * 57290 57290
+4 * 57290
+3 * 57290
+3 * 57290 0 57290
cfi=(2)
cfn=(146)
calls=57290 0x402dba 770 
* * 630190 286450 171870
+5 * 57290 57290
+2 * 57290
+4 * 57290 57290
+5 * 57290
+4 * 57290 0 57290
+5 -2 57290 0 57290
+4 * 57290 57290
+3 * 57290
+3 * 57290 57290
+3 * 57290 0 0 0 0 0 0 0 0 57290 338
jcnd=56953/57290 -93 +1 
* * 
-9 * 337 337 0 1 0 0 1
+3 * 337
+3 * 337 337
+3 * 337 0 0 0 0 0 0 0 0 337
jcnd=337/337 -93 +1 
* * 
+2 +4 337 337
+3 * 337
+3 * 337 0 0 1 0 0 1
+4 * 337 337
+5 * 337
+4 * 337
+3 * 337 0 337
+5 +1 337 337
+3 * 337
+3 * 337
+4 * 337 337
+5 * 337
+4 * 337
+3 * 337 0 337
+5 +1 337 337
+5 * 337 337
+5 * 337 337
+5 * 337 0 0 1 0 0 1
+4 * 337
+3 * 337 0 337
+5 +2 337 337
+3 +1 337 0 337
+3 * 337 337
+5 * 337 337
+1 * 337 337

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1364 0 1364 1 0 0 1
+2 0 1364 0 1364
+2 0 1364 0 1364
+2 0 1364
+3 0 1364 0 1364
+2 0 1364 0 1364
+1 0 1364 0 1364
+1 0 1364
+3 0 1364
+4 0 1364 1364
+4 0 1364 0 1364
+4 0 1364
+3 0 1364
+4 0 1364
+3 0 1364
+3 0 1364
+3 0 1364 0 0 1 0 0 1 0 0 1364
+6 0 1364
+4 0 1364 0 0 0 0 0 0 0 0 1364
+6 0 1364
+4 0 1364 0 0 0 0 0 0 0 0 1364
+6 0 1364 1364
+7 0 1364 0 0 0 0 0 0 0 0 1364 4
jcnd=1240/1364 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1240
+2 0 1240 0 0 0 0 0 0 0 0 1240
+6 0 1240 1240 0 1 0 0 1
+4 0 1240
+3 0 1240
+2 0 1240 0 0 0 0 0 0 0 0 1240
jcnd=1240/1240 0x3877c78a40 0 
* 0 
+6 0 1240 1240
+4 0 1240
+3 0 1240 0 0 0 0 0 0 0 0 1240
+6 0 1240 1240
+5 0 1240
+4 0 1240 0 0 0 0 0 0 0 0 1240
jcnd=1240/1240 0x3877c7907c 0 
* 0 
+6 0 1240 1240
+5 0 1240
+4 0 1240 0 0 0 0 0 0 0 0 1240
+6 0 1240
+4 0 1240 0 0 1 0 0 1 0 0 1240
+6 0 1240
+4 0 1240 1240
+7 0 1240 0 0 0 0 0 0 0 0 1240
+6 0 1240 1240
+6 0 1240
+2 0 1240 0 0 0 0 0 0 0 0 1240
+6 0 1240 1240
+4 0 1240 0 0 0 0 0 0 0 0 1240 5
jcnd=1236/1240 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1240 1240 0 1 0 0 1
+4 0 1240 0 0 0 0 0 0 0 0 1240 56
jcnd=56/1240 0x3877c78bf0 0 
* 0 
+6 0 1184 1184 0 0 2 0 0 2
+6 0 1184 0 0 1 0 0 1 0 0 1184 72
jcnd=57/1184 0x3877c78a78 0 
* 0 
+6 0 1127 1127
+5 0 1127 1127
+5 0 1127 1127
+4 0 1127 0 0 0 0 0 0 0 0 1127
+6 0 1127 1127
+4 0 1127 0 0 0 0 0 0 0 0 1127
+6 0 1127 1127
+9 0 1127 0 1127
+4 0 1127 0 1127
+4 0 1127 0 0 0 0 0 0 0 0 1127 433
jcnd=678/1127 +16 0 
* 0 
+2 0 449 449
+5 0 449
+3 0 449 0 0 1 0 0 1 0 0 449 1
jcnd=1/449 0x3877c78ee4 0 
* 0 
+6 0 1127
+3 0 1127
+4 0 1127 1127
+4 0 1127 1127
+4 0 1127 0 0 0 0 0 0 0 0 1127
-12 0 57
+4 0 57 57
+4 0 57 57
+4 0 57 0 0 0 0 0 0 0 0 57
+6 0 1184
+7 0 1184 0 1184
+4 0 1184 0 1184
+4 0 1184 0 0 0 0 0 0 0 0 1184 14
jcnd=212/1184 +18 0 
* 0 
+2 0 972 0 972
+8 0 972 0 972
+8 0 972 0 972
+4 0 972
+3 0 972 0 972 1 0 0 1
+4 0 972
+4 0 972 0 972
+4 0 972 0 972
+4 0 972
+7 0 972 0 0 0 0 0 0 0 0 972
jcnd=972/972 0x3877c78b20 0 
* 0 
-30 0 212 0 212
+4 0 212
+3 0 212 0 212
+4 0 212
+4 0 212 0 212
+4 0 212 0 212
+4 0 212
+7 0 212 0 0 0 0 0 0 0 0 212
jcnd=212/212 0x3877c78b20 0 
* 0 
-7 0 56
+7 0 56 0 0 0 0 0 0 0 0 56
jcnd=56/56 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1240 0 0 1 0 0 1
+5 0 1240 1240
+4 0 1240 1240
+7 0 1240 0 0 0 0 0 0 0 0 1240
jcnd=1240/1240 +16 0 
* 0 
+16 0 1240 0 1240
+5 0 1240 0 0 0 0 0 0 0 0 1240
+6 0 1240
+3 0 1240
jump=1240 0x3877c7878f 0 
* 0 
+10 0 57 0 57
+6 0 57 0 0 1 0 0 1
jump=57 0x3877c78885 0 
* 0 
0x3877c78b20 0 1240 1240 0 1 0 0 1
+4 0 1240
+2 0 1240 0 0 0 0 0 0 0 0 1240
+6 0 1240 1240
+7 0 1240 0 0 0 0 0 0 0 0 1240
jcnd=1240/1240 +15 0 
* 0 
+15 0 1240 0 1240 1 0 0 1
+4 0 1240 0 0 0 0 0 0 0 0 1240
+6 0 1240
+4 0 1240 1240
+1 0 1240 1240
+1 0 1240 1240
+2 0 1240 1240
+2 0 1240 1240
+2 0 1240 1240
+2 0 1240 1240
0x3877c78bf0 0 56 0 0 1 0 0 1
+3 0 56 0 56
+4 0 56
+3 0 56
+4 0 56 0 56 1 0 0 1
+4 0 56
jump=56 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+5 0 1 0 1
+4 0 1 1
+5 0 1 0 1 1 0 0 1
+4 0 1
jump=1 0x3877c78882 0 
* 0 
0x3877c7907c 0 1240 1240 0 1 1 0 1 1
+4 0 1240 0 0 1 0 0 1
+7 0 1240
+4 0 1240
+3 0 1240
+3 0 1240 0 0 0 0 0 0 0 0 1240
jcnd=1240/1240 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1354 0 0 1 0 0 1
+7 0 1354
+3 0 1354
+3 0 1354 1354 0 0 1 0 0 1
+4 0 1354
+4 0 1354 0 0 0 0 0 0 0 0 0 0 1354 168
jump=164 0x3877c89be8 0 
* 0 
jump=178 0x3877c89bd0 0 
* 0 
jump=168 0x3877c89bb8 0 
* 0 
jump=168 +11 0 
* 0 
jump=168 0x3877c89c48 0 
* 0 
jump=170 0x3877c89c30 0 
* 0 
jump=168 0x3877c89c18 0 
* 0 
jump=170 0x3877c89c00 0 
* 0 
+11 0 168 168
+3 0 168
+4 0 168
+4 0 168 168
+4 0 168
+4 0 168 0 168
+4 0 168
+9 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-40 0 14090 14090
+4 0 14090 0 14090 0 0 18 0 0 18
+4 0 14090 14090
+4 0 14090 0 14090 0 0 3 0 0 3
+4 0 14090 14090
+4 0 14090 0 14090 0 0 4 0 0 4
+4 0 14090 14090
+4 0 14090 0 14090 0 0 15 0 0 15
+4 0 14090
+4 0 14090
+4 0 14090 0 0 0 0 0 0 0 0 14090 881
jcnd=1318/14090 0x3877c89c60 0 
* 0 
-32 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
jcnd=10/170 0x3877c89c60 0 
* 0 
-24 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-16 0 170 170 0 1 0 0 1
+4 0 170 0 170
+4 0 170 0 0 1 0 0 1
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170 4
jcnd=10/170 0x3877c89c60 0 
* 0 
+6 0 13412
+4 0 13412 13412
+3 0 13412 0 13412
+3 0 13412 13412
+4 0 13412 0 13412 0 0 1 0 0 1
+4 0 13412 13412
+4 0 13412 0 13412 0 0 1 0 0 1
+4 0 13412 13412
+4 0 13412 0 13412
+4 0 13412
jump=13412 -80 0 
* 0 
-30 0 164 164
+3 0 164 0 164
+3 0 164 164
+4 0 164 0 164
+4 0 164 164
+4 0 164 0 164 0 0 1 0 0 1
+4 0 164 164
+4 0 164 0 164
+4 0 164
jump=164 -80 0 
* 0 
-24 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178
jump=178 -80 0 
* 0 
-16 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
+8 0 168 168
+3 0 168
+4 0 168 0 0 1 0 0 1
+4 0 168
+4 0 168
jump=168 -39 0 
* 0 
+9 0 178
+3 0 178 0 0 0 0 0 0 0 0 178
+6 0 178 178
+3 0 178
+4 0 178
jump=178 -72 0 
* 0 
+8 0 164
+4 0 164 164
+3 0 164 0 0 0 0 0 0 0 0 164
+2 0 164
+4 0 164
jump=164 -99 0 
* 0 
+11 0 170 170 0 1 0 0 1
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b78 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b70 0 
* 0 
+9 0 170 170
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b68 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b60 0 
* 0 
+9 0 1354 0 1354 1 0 0 1
+3 0 1354 1354

fn=(104) alloc_perturb
0x3877c77180 0 1234 1234 0 1 0 0 1
+6 0 1234
+2 0 1234 0 0 0 0 0 0 0 0 1234 34
+2 0 1234 1234

fn=(38) _int_malloc
0x3877c79a00 0 1364 0 1364 1 0 0 1
+2 0 1364
+3 0 1364 0 1364
+2 0 1364 0 1364
+2 0 1364 0 1364 0 0 1 0 0 1
+2 0 1364
+3 0 1364 0 1364
+1 0 1364 0 1364
+1 0 1364
+4 0 1364
+4 0 1364 0 0 0 0 0 0 0 0 1364
+6 0 1364
+4 0 1364
+6 0 1364
+3 0 1364
+4 0 1364
+4 0 1364
+4 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364
+6 0 1364 1364 0 1 1 0 1 1
+7 0 1364 0 0 0 0 0 0 0 0 1364 7
jcnd=1242/1364 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 130 130
+6 0 130
+4 0 130
+2 0 130 0 0 0 0 0 0 0 0 130
+6 0 130
+3 0 130
+4 0 130 130
+1 0 130 130
+1 0 130 130
+2 0 130 130
+2 0 130 130
+2 0 130 130
+2 0 130 130
-14 0 1234
+4 0 1234 1234
+1 0 1234 1234
+1 0 1234 1234
+2 0 1234 1234
+2 0 1234 1234
+2 0 1234 1234
+2 0 1234 1234
+7 0 1259
+7 0 1259 0 0 1 0 0 1 0 0 1259 7
jcnd=356/1259 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 5 0 0 5
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 356 0 0 1 0 0 1
+3 0 356
+4 0 356
+4 0 356 0 0 1 0 0 1 0 0 356
jcnd=356/356 0x3877c7a1a4 0 
* 0 
+30 0 356 356
+6 0 356
+5 0 356 0 0 0 0 0 0 0 0 356 1
jcnd=355/356 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 907 243 192 8 0 0 8 0 0 187 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1258 0 0 1 0 0 1
+3 0 1258
+3 0 1258
+3 0 1258
+4 0 1258
+3 0 1258
+4 0 1258 0 1258
+5 0 1258
+3 0 1258 0 1258
+4 0 1258 0 1258
+4 0 1258 0 1258
+5 0 1258
+3 0 1258
+3 0 1258
+3 0 1258
+3 0 1258
+4 0 1258
+4 0 1258 0 0 1 0 0 1
+4 0 1258 0 1258
+4 0 1258
+4 0 1258 0 1258
+5 0 1258 0 1258
+5 0 1258
+3 0 1258
+3 0 1258 0 1258
+5 0 1258
+5 0 1258
+3 0 1258 0 1258
+4 0 1258 0 1258
+4 0 1258
+6 0 1258 0 1258
+4 0 1258 0 1258
+5 0 1258 0 0 1 0 0 1
+3 0 1258
+3 0 1258
+3 0 1258
jump=1258 +87 0 
* 0 
+8 0 769
+3 0 769
+4 0 769
+2 0 769
+2 0 769
+3 0 769
+3 0 769
+3 0 769
+2 0 769
+2 0 769
+5 0 769
+2 0 769 769
+4 0 769
+3 0 769
+4 0 769 0 769
+4 0 769 0 769
+8 0 769
+7 0 769 0 769
+4 0 769 0 769 0 0 1 0 0 1
+4 0 769 0 769
+4 0 769 0 0 0 0 0 0 0 0 769
-38 0 959
+3 0 959
+4 0 959 0 959
+4 0 959 0 959
+8 0 959
+7 0 959 0 959
+4 0 959 0 959
+4 0 959 0 959
+4 0 959 0 0 0 0 0 0 0 0 959
+6 0 2987 2987 0 1 0 0 1
+4 0 2987
+3 0 2987 0 0 0 0 0 0 0 0 2987 164
jcnd=1215/2987 0x3877c79ef0 0 
* 0 
+6 0 1772 1772
+4 0 1772 1772
+4 0 1772
+4 0 1772 0 0 0 0 0 0 0 0 1772
+6 0 1772 1772 0 1 1 0 1 1
+7 0 1772 0 0 0 0 0 0 0 0 1772 2
+6 0 1772
+4 0 1772
+7 0 1772 0 0 0 0 0 0 0 0 1772 10
jcnd=457/1772 +11 0 
* 0 
+2 0 1315
+3 0 1315 0 0 0 0 0 0 0 0 1315 660
jcnd=881/1315 0x3877c79e28 0 
* 0 
+6 0 1753
+3 0 1753 0 1753
+4 0 1753 0 1753
+5 0 1753 0 0 0 0 0 0 0 0 1753 17
jcnd=25/1753 0x3877c7a090 0 
* 0 
+6 0 1728
+7 0 1728 0 0 0 0 0 0 0 0 1728 256
jcnd=769/1728 0x3877c79c50 0 
* 0 
+6 0 959 0 0 1 0 0 1
+3 0 959
+4 0 959
+4 0 959 0 0 0 0 0 0 0 0 959 8
jcnd=372/959 0x3877c79db0 0 
* 0 
+6 0 587
+3 0 587
+4 0 587
+2 0 587
+2 0 587
+3 0 587
+3 0 587
+8 0 587
+3 0 587
+2 0 587
+2 0 587
+4 0 587 587 0 0 3 0 0 3
+4 0 587
+3 0 587 0 0 1 0 0 1 0 0 587 66
jcnd=587/587 0x3877c79e15 0 
* 0 
-36 0 372
+2 0 372
+2 0 372
+3 0 372
+3 0 372
+8 0 372
+3 0 372
+2 0 372
+2 0 372
+4 0 372 372
+4 0 372
+3 0 372 0 0 0 0 0 0 0 0 372
jcnd=372/372 0x3877c79e15 0 
* 0 
0x3877c79db0 0 372 0 0 1 0 0 1
+3 0 372
+4 0 372
+4 0 372 0 0 0 0 0 0 0 0 372
+2 0 372
+3 0 372 0 0 1 0 0 1
+7 0 372
jump=372 0x3877c79d18 0 
* 0 
+78 0 959 0 959
+4 0 959 0 959
+4 0 959
+3 0 959
jump=959 0x3877c79c73 0 
* 0 
+8 0 881 881 0 1 0 0 1
+4 0 881
+3 0 881 0 0 0 0 0 0 0 0 881 9
jcnd=443/881 0x3877c79ce1 0 
* 0 
+6 0 438 438
+5 0 438 0 0 0 0 0 0 0 0 438 7
jcnd=419/438 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 7
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8 0 0 1 0 0 1
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1215 0 0 1 0 0 1
+7 0 1215
+3 0 1215 0 0 0 0 0 0 0 0 1215 5
jcnd=344/1215 0x3877c7a0b0 0 
* 0 
+6 0 1191 1191 0 1 0 0 1
+4 0 1191
+3 0 1191
+3 0 1191
+2 0 1191
+4 0 1191
+3 0 1191
+3 0 1191
+2 0 1191
+2 0 1191
+2 0 1191
+2 0 1191 1191 0 0 1 0 0 1
+8 0 1191
+5 0 1191
+5 0 1191
+2 0 1191 0 0 0 0 0 0 0 0 1191
-2 0 608
+2 0 608 0 0 0 0 0 0 0 0 608 1
jcnd=1/608 +14 0 
* 0 
+2 0 1798
+2 0 1798 0 0 0 0 0 0 0 0 1798 49
jcnd=623/1798 +64 0 
* 0 
+2 0 1175
+8 0 1175
+3 0 1175
+3 0 1175 0 0 0 0 0 0 0 0 1175 1
jcnd=1/1175 0x3877c79fc0 0 
* 0 
-6 0 237
+3 0 237
+3 0 237 0 0 0 0 0 0 0 0 237 4
jcnd=55/237 0x3877c79fc0 0 
* 0 
+2 0 1356
+2 0 1356 1356
+8 0 1356
+2 0 1356 0 0 0 0 0 0 0 0 1356 19
jcnd=236/1356 -20 0 
* 0 
+2 0 1120
+2 0 1120
+5 0 1120
+3 0 1120
+3 0 1120
+2 0 1120
+2 0 1120
+5 0 1120 0 0 0 0 0 0 0 0 1120 240
jcnd=474/1120 +14 0 
* 0 
+2 0 646
+2 0 646
+4 0 646
+2 0 646
+2 0 646 0 0 0 0 0 0 0 0 646
jcnd=646/646 -8 0 
* 0 
-8 0 4862
+4 0 4862
+2 0 4862
+2 0 4862 0 0 0 0 0 0 0 0 4862 319
jcnd=3728/4862 -8 0 
* 0 
-2 0 623 0 0 1 0 0 1
+2 0 623 0 0 0 0 0 0 0 0 623 23
jcnd=488/623 -8 0 
* 0 
+2 0 1743 1743 0 0 12 0 0 12
+4 0 1743 0 0 1 0 0 1
+3 0 1743 0 0 0 0 0 0 0 0 1743 637
jcnd=1135/1743 0x3877c7a1cf 0 
* 0 
+6 0 608
+2 0 608
+4 0 608
+2 0 608
+2 0 608
+2 0 608 0 608
+8 0 608
jump=608 0x3877c79f30 0 
* 0 
+37 0 56 56 0 1 0 0 1
+5 0 56 56
+4 0 56
+4 0 56 56
+5 0 56 0 0 0 0 0 0 0 0 56
jcnd=56/56 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 25 0 0 1 0 0 1
+7 0 25 0 25
+6 0 25
+3 0 25 0 0 0 0 0 0 0 0 25
jcnd=25/25 0x3877c79ace 0 
* 0 
+16 0 344 344
+4 0 344
+4 0 344
+2 0 344
+5 0 344 344 0 1 1 0 1 1
+4 0 344
+3 0 344 0 0 0 0 0 0 0 0 344 12
jcnd=304/344 0x3877c79f00 0 
* 0 
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40 4
jcnd=16/40 0x3877c79f00 0 
* 0 
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 18
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=16/24 0x3877c7a2e3 0 
* 0 
+6 0 8 8
+4 0 8
+7 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+4 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c7a285 0 
* 0 
+31 0 356 0 0 1 0 0 1
+3 0 356 0 356
+4 0 356
jump=356 0x3877c79b99 0 
* 0 
+36 0 1135 1135 0 1 2 0 1 2
+4 0 1135 1135 0 0 2 0 0 2
+4 0 1135
+3 0 1135 1135
+4 0 1135
+4 0 1135
+3 0 1135
+3 0 1135 1135
+4 0 1135 0 0 0 0 0 0 0 0 1135
+6 0 1135 1135 0 0 2 0 0 2
+4 0 1135 0 0 0 0 0 0 0 0 1135
+6 0 1135 1135 0 1 0 0 1
+8 0 1135 0 1135
+4 0 1135 0 1135
+4 0 1135 0 0 0 0 0 0 0 0 1135 68
jcnd=199/1135 +38 0 
* 0 
+2 0 936 936 0 0 1 0 0 1
+4 0 936
+3 0 936 0 0 0 0 0 0 0 0 936
+2 0 936 936
+5 0 936 0 0 0 0 0 0 0 0 936
+6 0 936 936
+4 0 936 0 936
+4 0 936 936
+4 0 936 0 936
+4 0 936
+4 0 936 0 0 0 0 0 0 0 0 936
-4 0 199
+4 0 199 0 0 0 0 0 0 0 0 199 8
jcnd=13/199 0x3877c7a2e3 0 
* 0 
+6 0 1122 1122
+4 0 1122 1122 0 1 0 0 1
+4 0 1122 0 0 0 0 0 0 0 0 1122
+6 0 1122
+4 0 1122
+7 0 1122 0 1122 0 0 13 0 0 13
+4 0 1122 0 1122
+4 0 1122 0 1122
+4 0 1122 0 1122
+4 0 1122 0 0 0 0 0 0 0 0 1122 7
jcnd=264/1122 +7 0 
* 0 
+2 0 858 0 858
+5 0 858
+7 0 858 0 0 0 0 0 0 0 0 858 248
jcnd=435/858 +18 0 
* 0 
-7 0 264
+7 0 264 0 0 0 0 0 0 0 0 264 28
jcnd=239/264 +18 0 
* 0 
+2 0 448 0 448 0 0 16 0 0 16
+8 0 448 0 448
+8 0 448
+7 0 448 0 448 0 0 3 0 0 3
+4 0 448
+3 0 448
+3 0 448
+4 0 448
+3 0 448
+4 0 448
+3 0 448
+3 0 448
+4 0 448 0 448
+4 0 448 0 448
+4 0 448
jump=448 +71 0 
* 0 
-46 0 682 0 0 1 0 0 1
+7 0 682 0 682 0 0 1 0 0 1
+4 0 682
+3 0 682
+3 0 682
+4 0 682
+3 0 682
+4 0 682
+3 0 682
+3 0 682
+4 0 682 0 682
+4 0 682 0 682
+4 0 682
jump=682 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 1159
+4 0 1159 0 0 1 0 0 1
+3 0 1159
+3 0 1159 0 1159
cfn=(104)
calls=1159 0x3877c77180 0 
* 0 4636 2318 0 0 0 0 0 0 0 1159 33
+5 0 1159
+3 0 1159
jump=1159 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 56 0 0 1 0 0 1
+7 0 56
+2 0 56
+4 0 56
+3 0 56
+3 0 56 0 56
+5 0 56
+3 0 56
+4 0 56
+3 0 56 0 0 1 0 0 1
+4 0 56
+4 0 56
+3 0 56
+4 0 56 0 56
+4 0 56 0 56 0 0 3 0 0 3
+4 0 56
+3 0 56
+3 0 56 0 56
cfn=(104)
calls=56 0x3877c77180 0 
* 0 224 112 0 0 0 0 0 0 0 56 1
+5 0 56
+3 0 56
jump=56 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1364 0 1364 1 0 0 1
+5 0 1364 0 1364
+5 0 1364
+3 0 1364 0 1364
+5 0 1364
+4 0 1364 1364 0 0 1 0 0 1
+7 0 1364 1364 0 0 1 0 0 1
+3 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364 3
+6 0 1364 1364 0 0 1 0 0 1
+7 0 1364 1364 0 1 1 0 1 1
+4 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364
+2 0 1364 1364 0 0 1 0 0 1
+3 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364
jcnd=1364/1364 +97 0 
* 0 
+18 0 1364
+3 0 1364
+3 0 1364 0 1364
cfn=(38)
calls=1364 0x3877c79a00 0 
* 0 349392 46280 55049 47 34 58 47 34 58 54463 3003
+5 0 1364
+3 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364
+2 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364
+2 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364 17
+2 0 1364 1364
+7 0 1364 0 0 0 0 0 0 0 0 1364
jcnd=1364/1364 +13 0 
* 0 
+13 0 1364 0 1364
+2 0 1364 0 0 0 0 0 0 0 0 1364 88
+6 0 1364
+3 0 1364 1364
+4 0 1364 1364
+5 0 1364 1364
+5 0 1364
+4 0 1364 1364
+1 0 1364 0 0 1 0 0 1
+5 0 1364 1364 0 0 1 0 0 1
+7 0 1364 0 0 0 0 0 0 0 0 1364
jcnd=1364/1364 +14 0 
* 0 
+14 0 1364 0 1364 1 0 0 1
+3 0 1364 0 0 0 0 0 0 0 0 1364
+6 0 1364
jump=1364 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1364 0 1364 1 0 0 1
+2 0 1364
+3 0 1364
+3 0 1364 0 1364
+2 0 1364
+3 0 1364 0 1364
+1 0 1364
+3 0 1364 0 1364
+1 0 1364
+3 0 1364
+4 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364
+6 0 1364
+4 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364 7
jcnd=10/1364 0x3877c838d1 0 
* 0 
+2 0 1354
+3 0 1354
+3 0 1354
+3 0 1354
+3 0 1354
+3 0 1354 0 0 0 0 0 0 0 0 1354
jcnd=1354/1354 +41 0 
* 0 
+41 0 1354 0 0 1 0 0 1
+3 0 1354 0 0 0 0 0 0 0 0 1354
jcnd=1354/1354 0x3877c839c0 0 
* 0 
+24 0 1354
+3 0 1354
+4 0 1354
+3 0 1354
+3 0 1354
+3 0 1354
+3 0 1354
+3 0 1354 0 0 0 0 0 0 0 0 1354 749
jcnd=686/1354 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 678
+10 0 678 678 0 0 2 0 0 2
+3 0 678
+4 0 678 0 678
+3 0 678
+4 0 678
+4 0 678 0 0 0 0 0 0 0 0 678
jcnd=678/678 -18 0 
* 0 
-18 0 2090 2090
+3 0 2090
+4 0 2090 0 2090
+3 0 2090
+4 0 2090
+4 0 2090 0 0 0 0 0 0 0 0 2090 11
jcnd=1412/2090 -18 0 
* 0 
+2 0 1364
+4 0 1364
+3 0 1364 1364
+1 0 1364 1364
+1 0 1364 1364
+2 0 1364 1364 0 1 0 0 1
+2 0 1364 1364
0x3877c839c0 0 1354 0 0 1 0 0 1
+3 0 1354
+3 0 1354
+3 0 1354
+4 0 1354 0 1354 0 0 1 0 0 1
cfn=(284)
calls=1354 0x3877c89b20 0 
* 0 316014 117452 114744 6 1 43 6 1 43 15108 885 1354 168
+5 0 1354
jump=1354 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1364 1364 0 1 1 0 1 1
+7 0 1364 1364 0 0 1 0 0 1
+3 0 1364
+3 0 1364 0 0 1 0 0 1 0 0 1364
+6 0 1364
+3 0 1364 0 0 0 0 0 0 0 0 1364
+6 0 1364 1364
+4 0 1364
+4 0 1364
+2 0 1364 0 0 0 0 0 0 0 0 1364 2
+2 0 1364
+2 0 1364
+7 0 1364 0 0 0 0 0 0 0 0 1364
jcnd=1364/1364 +14 0 
* 0 
+14 0 1364
+2 0 1364
cfn=(170)
calls=1364 0x3877c78650 0 
* 0 144137 38927 23881 21 3 0 21 3 0 35047 587

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 6
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 10731098 4388770 2535519 245 102 136 245 102 136 316804 6388 8174 168
