version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 503


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 585088407 - 585812650
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1014 0 0 1 0 0 1
+3 0 1014 0 0 0 0 0 0 0 0 1014
+2 0 1014
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1014 0x3877c7b8b0 0 
* 0 113284 29112 14578 22 5 0 22 5 0 27779 573
* 0 1014 1014 0 1 1 0 1 1 0 0 0 1014

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1014 0 1014 1 0 0 1
+1 0 1014
+5 0 1014
+3 0 1014 0 1014
+1 0 1014
+4 0 1014 0 0 1 0 0 1
+3 0 1014
+4 0 1014
+3 0 1014 0 1014 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1014 0x3877c7aa50 0 
* 0 277353 38623 38865 49 37 39 49 37 39 47438 1906
* 0 1014 1014 0 1 1 0 1 1 0 0 0 1014
+5 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014
jcnd=1014/1014 +96 0 
* 0 
+96 0 1014 0 0 1 0 0 1
+4 0 1014 1014
+1 0 1014 1014
+1 0 1014 1014

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 570 0 570
+1 * 570
+3 * 570 0 570
+4 +1 570 570
+4 * 570 570
+1 * 570 570

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+4 +1 1000 1000 0 1 0 0 1
+4 * 1000 1000
+1 * 1000 1000

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 570 0 570
+1 * 570
+3 * 570 0 570 0 0 1 0 0 1
+4 +1 570 570
+4 * 570 570
+1 * 570 570

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 +1 1000
+4 * 1000
+3 * 1000 0 1000
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1000 0x404ffe 790 
* * 6000 3000 2000 1 0 0 1
+5 * 1000 1000
+3 * 1000 1000
+1 * 1000 1000

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 +1 1000
+4 * 1000
+3 * 1000 0 1000 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1000 0x40500c 790 
* * 6000 3000 2000 1 0 0 1
+5 * 1000 1000
+3 * 1000 1000
+1 * 1000 1000

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 500 0 500
+1 * 500
+3 * 500 0 500
+4 * 500 0 500
+4 * 500 500
+4 * 500 500
+1 * 500 500

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 507 0 507 1 0 0 1
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 * 507 0 507 1 0 0 1
+4 +2 507 507
+4 * 507
+3 * 507 0 507
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=507 0x404992 +12 
* * 3042 1014 1014 1 0 0 1
+5 * 507 507
+4 * 507
+3 * 507
+2 * 507 0 0 0 0 0 0 0 0 507
jcnd=507/507 +7 +3 
* * 
+7 +3 507 507
+4 * 507
+4 * 507
+3 * 507 0 507
cob=(5)
cfi=(8)
cfn=(32)
calls=507 0x387e4bd0b0 0 
* * 142705 21705 22069 18 29 18 18 29 18 23204 758 507
* * 507 507 0 1 1 0 1 1 0 0 0 507
+5 +1 507 507
+1 * 507 507

fn=(102) __gnu_cxx::new_allocator<float>::max_size() const
0x4048de 113 521 0 521 1 0 0 1
+1 * 521
+3 * 521 0 521
+4 +1 521
+10 * 521 521
+1 * 521 521

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250
+3 * 250
+5 * 250 0 250
cfi=(16)
cfn=(226)
calls=250 0x402d61 -20 
* * 1750 750 750
+5 * 250
+3 * 250 0 0 0 0 0 0 0 0 250
+2 * 250 250
+4 * 250 250 0 0 17 0 0 17
+2 * 250 0 250 0 0 7 0 0 7
+2 * 250 250
+1 * 250 250

fn=(28)
0x404992 113 521 0 521 1 0 0 1
+1 * 521
+3 * 521 0 521
+4 +1 521
+10 * 521 521
+1 * 521 521

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 500 0 500
+1 * 500
+3 * 500 0 500
+4 * 500 500
+1 * 500 500

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250
+3 * 250
+5 * 250 0 250
cfi=(16)
cfn=(226)
calls=250 0x402d61 -20 
* * 1750 750 750
+5 * 250
+3 * 250 0 0 0 0 0 0 0 0 250 2
+2 * 250 250
+4 * 250 250 0 0 17 0 0 17
+2 * 250 0 250 0 0 3 0 0 3
+2 * 250 250
+1 * 250 250

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 507 0 507
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 * 507 0 507
+4 +1 507 507
+4 * 507
+3 * 507 0 507
cob=(5)
cfi=(8)
cfn=(164)
calls=507 0x387e4bb2f0 0 
* * 56208 14162 6549 24 5 0 24 5 0 13703 286 507
* * 507 507 0 1 1 0 1 1 0 0 0 507
+5 * 507 507
+1 * 507 507

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 507 0 507
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 * 507 0 507
+4 +1 507 507
+4 * 507
+3 * 507 0 507
cob=(5)
cfi=(8)
cfn=(164)
calls=507 0x387e4bb2f0 0 
* * 61132 15964 8029 0 1 0 0 1 0 15090 287 507
* * 507 507 0 0 0 0 0 0 0 0 0 507
+5 * 507 507
+1 * 507 507

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 507 0 507 1 0 0 1
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 * 507 0 507
+4 +2 507 507
+4 * 507
+3 * 507 0 507
cfn=(102)
calls=507 0x4048de +12 
* * 3042 1014 1014 1 0 0 1
+5 * 507 507
+4 * 507 0 0 1 0 0 1
+3 * 507
+2 * 507 0 0 0 0 0 0 0 0 507
jcnd=507/507 +7 +3 
* * 
+7 +3 507 507
+4 * 507
+4 * 507
+3 * 507 0 507
cob=(5)
cfi=(8)
cfn=(32)
calls=507 0x387e4bd0b0 0 
* * 150872 20974 19838 35 9 22 35 9 22 25248 1148 507
* * 507 507 0 0 0 0 0 0 0 0 0 507
+5 +1 507 507
+1 * 507 507

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500 0 0 1 0 0 1
+4 * 500 0 500
+4 * 500 500
+1 * 500 500

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 * 500 0 500
+4 * 500 500
+1 * 500 500

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 500 0 500
+1 * 500
+3 * 500 0 500
+4 * 500 500
+1 * 500 500

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +2 500 500 0 1 0 0 1
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=500 0x404a36 450 
* * 210480 68520 65524 24 3 5 24 3 5 8240 526 996 124
+5 * 500 500
+1 * 500 500

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=500 0x40439c 107 
* * 224480 73520 70524 7 1 28 7 1 28 8240 515 996
+5 * 500 500
+1 * 500 500

fn=(116)
0x40439c 107 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +10 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=500 0x4047d7 -26 
* * 217480 71020 68024 7 1 28 7 1 28 8240 515 996
+5 +1 500 500
+1 * 500 500

fn=(118)
0x4047d7 91 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=500 0x4049e2 450 
* * 210480 68520 65524 7 1 28 7 1 28 8240 515 996
+5 * 500 500
+1 * 500 500

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +10 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(52)
calls=500 0x404829 -26 
* * 217480 71020 68024 25 3 5 25 3 5 8240 526 996 124
+5 +1 500 500
+1 * 500 500

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500 1 0 0 1
cfn=(50)
calls=500 0x404484 107 
* * 224480 73520 70524 25 3 5 25 3 5 8240 526 996 124
+5 * 500 500
+1 * 500 500

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+1 * 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500 500
+4 * 500
+3 * 500 500
+4 * 500 500
+3 * 500
+3 * 500
+3 * 500
+4 * 500
+3 * 500 500
+4 * 500 500
+3 -1 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=500 0x403d98 +11 
* * 74412 20788 12942 1 1 0 1 1 0 15428 282 1000
+5 +1 500 500
+4 * 500
+3 * 500 0 500
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=500 0x403296 -82 
* * 11500 4000 4000 1 0 0 1
+5 * 500
jump=500 +28 * 
* * 
+28 * 500
+4 * 500 500
+1 * 500 500
+1 * 500 500

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2028 0 2028 1 0 0 1
+1 * 2028
+3 * 2028 0 2028 0 0 1 0 0 1
+4 +1 2028 2028
+4 * 2028 2028 0 1 1 0 1 1
+4 * 2028
+3 * 2028 2028
+4 * 2028 2028
+3 * 2028
+3 * 2028
+3 * 2028
+4 * 2028 2028
+1 * 2028 2028

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=500 0x404236 -14 
* * 161619 27907 27769 21 29 14 21 29 14 23857 707 1000
+5 * 500 500
+4 * 500 0 500
+3 +1 500 500
+4 * 500 500 0 1 0 0 1
+3 * 500 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+3 * 500 500
+4 * 500
+4 * 500
+3 * 500 500
+4 * 500 0 500
+4 +1 500 500
+1 * 500 500

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500 500 0 1 0 0 1
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=500 0x403fbe -14 
* * 168890 26905 25311 23 4 17 23 4 17 25721 1078 1000
+5 * 500 500
+4 * 500 0 500
+3 +1 500 500
+4 * 500 500
+3 * 500 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+3 * 500 500
+4 * 500
+4 * 500
+3 * 500 500
+4 * 500 0 500
+4 +1 500 500
+1 * 500 500

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 250 0 250
+1 * 250
+3 * 250 0 0 1 0 0 1
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250 0 0 0 0 0 0 0 0 250
jcnd=7/250 +51 +10 
* * 
+2 +3 243 243
+4 * 243 243
+4 * 243 243
+4 -1 243 243
+4 * 243
+3 * 243
+3 * 243 0 243
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=243 0x4036b1 215 
* * 9234 3159 3402 0 16 4 0 16 4 243
+5 +2 243 243
+4 * 243 243
+4 * 243
+4 * 243 243
+4 * 243 0 243
+4 * 243
jump=243 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10356 3119 2704 21 2 10 21 2 10 648 66 41
+5 +2 250 250
+1 * 250 250

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1021 0 1021 1 0 0 1
+1 * 1021
+3 * 1021 0 1021 1 0 0 1
+4 +1 1021 1021
+4 * 1021 1021
+1 * 1021 1021

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+3 * 500 0 500
+4 * 500
+4 * 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=500 0x404380 726 
* * 5000 2500 2000
+5 * 500 500
+4 * 500 500
+1 * 500 500

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 500 0 500
+1 * 500
+3 * 500 0 500
+1 * 500
+4 * 500 0 500 1 0 0 1
+4 +2 500 500
+4 * 500
+3 * 500 0 500
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=500 0x40325e 113 
* * 3000 1500 1000
+5 * 500
+3 * 500 500
+4 * 500 500
+4 * 500 500
+4 * 500 500
+3 -1 500
+3 * 500
+3 * 500 0 500
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=500 0x40326c 148 
* * 15500 5000 6000 4 0 0 4
+5 +1 500 500
+4 * 500
+3 * 500 0 500
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=500 0x4031ec 159 
* * 94968 28480 17954 27 6 0 27 6 0 14036 280 1000
+5 * 500
jump=500 +28 * 
* * 
+28 * 500 0 0 1 0 0 1
+4 * 500 500
+1 * 500 500
+1 * 500 500

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 507 0 507 1 0 0 1
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 * 507 0 507
+4 +2 507 507
+5 * 507 0 0 0 0 0 0 0 0 507
+2 +1 507 507
+4 * 507 507
+4 * 507 507
+4 * 507
+3 * 507
+3 * 507 0 507
cfi=(5)
cfn=(160)
calls=507 0x4044d6 -65 
* * 62292 16190 9084 25 6 0 25 6 0 13703 286 1014
+5 +1 507 507
+1 * 507 507

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 500 0 500
+1 * 500
+3 * 500 0 500
+1 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=500 0x4043ca -45 
* * 18000 6500 7000 4 0 4 4 0 4
+5 +1 500 500 0 1 0 0 1
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(20)
calls=500 0x404412 +43 
* * 174119 33907 31269 22 29 14 22 29 14 23857 707 1000
+5 * 500
jump=500 +28 * 
* * 
+28 * 500
+4 * 500 500
+1 * 500 500
+1 * 500 500

fn=(14)
0x4043ca 90 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500 0 0 1 0 0 1
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=500 0x404804 +24 
* * 9000 3000 3500 2 0 1 2 0 1
+5 * 500 500
+4 * 500 0 500 0 0 2 0 0 2
+7 * 500 500
+4 * 500 0 500 1 0 0 1
+8 * 500 500
+4 * 500 0 500
+8 +1 500 500
+1 * 500 500

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+2 * 500 0 500
+2 * 500 0 500
+1 * 500 0 0 1 0 0 1
+4 * 500 0 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500
+3 * 500 0 500
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=500 0x4039fc 117 
* * 3000 1500 1000 2 0 0 2
+5 * 500
+3 * 500 0 500
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=500 0x4039ed -88 
* * 3000 1500 1000
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(2)
calls=500 0x402d74 645 
* * 6500 3000 1000
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500
+3 * 500
+3 * 500 0 500 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=500 0x403a0a 134 
* * 210390 42905 39311 30 4 17 30 4 17 25721 1078 1000
+5 +4 500 500
+4 * 500
+3 * 500 0 500
cfn=(106)
calls=500 0x40325e 113 
* * 3000 1500 1000 1 0 0 1
+5 * 500
+3 * 500 500
+4 * 500 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=500 0x403a98 565 
* * 12500 5000 4000 2 0 0 2
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(112)
calls=500 0x403a68 547 
* * 12500 5000 4000
+5 * 500
+3 * 500
+3 * 500
+3 * 500
+3 * 500 0 500
cfi=(11)
cfn=(114)
calls=500 0x403ac9 -60 
* * 231980 76020 73524 7 1 28 7 1 28 8240 515 996
+5 -3 500 500
+4 * 500 0 500
+4 * 500
jump=500 +28 +4 
* * 
+28 +4 500
+4 * 500 500
+1 * 500 500
+2 * 500 500
+2 * 500 500
+1 * 500 500

fn=(188)
0x403d98 171 507 0 507 1 0 0 1
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 * 507 0 507
+4 +2 507 507
+5 * 507 0 0 0 0 0 0 0 0 507 7
+2 +1 507 507
+4 * 507 507
+4 * 507 507
+4 * 507
+3 * 507
+3 * 507 0 507
cfi=(5)
cfn=(190)
calls=507 0x40452a -65 
* * 67216 17992 10564 0 1 0 0 1 0 15090 287 1014
+5 +1 507 507
+1 * 507 507

fn=(22)
0x404236 167 507 0 507 1 0 0 1
+1 * 507
+3 * 507
+4 * 507 0 507 1 0 0 1
+4 * 507 0 507
+4 0 507 507
+5 0 507 0 0 0 0 0 0 0 0 507
+2 0 507 507
+4 0 507 507
+4 0 507
+5 0 507
+3 0 507
+3 0 507 0 507
fi=(6) ???
cfi=(5)
cfn=(26)
calls=507 0x404730 99 
* 0 155887 25761 26125 22 30 18 22 30 18 23711 758 1014
+5 0 507
fi=(6)
jump=507 +7 0 
* 0 
+7 0 507 507
+1 0 507 507

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+4 * 500 0 500
+4 * 500
+4 * 500 0 0 1 0 0 1
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=500 0x404468 726 
* * 5000 2500 2000 1 0 0 1
+5 * 500 500
+4 * 500 500
+1 * 500 500

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+3 * 500 0 500
+4 * 500
+4 * 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(10)
cfn=(44)
calls=500 0x404468 726 
* * 5000 2500 2000
+5 * 500 500
+4 * 500 500
+1 * 500 500

fn=(86)
0x403a0a 134 500 0 500
+1 * 500
+3 * 500 0 500
+1 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=500 0x4042e2 -45 
* * 18000 6500 7000 5 0 0 5
+5 +1 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500 1 0 0 1
cfn=(94)
calls=500 0x40432a +43 
* * 181390 32905 28811 24 4 17 24 4 17 25721 1078 1000
+5 * 500
jump=500 +28 * 
* * 
+28 * 500
+4 * 500 500
+1 * 500 500
+1 * 500 500

fn=(88)
0x4042e2 90 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=500 0x4047b2 +24 
* * 9000 3000 3500 3 0 0 3
+5 * 500 500
+4 * 500 0 500
+7 * 500 500
+4 * 500 0 500
+8 * 500 500
+4 * 500 0 500
+8 +1 500 500
+1 * 500 500

fn=(156)
0x4031ec 159 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+1 * 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500 500 0 1 0 0 1
+4 * 500
+3 * 500 500
+4 * 500 500
+3 * 500
+3 * 500
+3 * 500
+4 * 500
+3 * 500 500
+4 * 500 500
+3 -1 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(158)
calls=500 0x403ce6 +11 
* * 69468 18980 11454 24 6 0 24 6 0 14036 280 1000
+5 +1 500 500
+4 * 500
+3 * 500 0 500
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=500 0x4031b8 -82 
* * 11500 4000 4000 1 0 0 1
+5 * 500
jump=500 +28 * 
* * 
+28 * 500
+4 * 500 500
+1 * 500 500
+1 * 500 500

fn=(172)
0x4031b8 79 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 500
+4 * 500
+3 * 500 0 500
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=500 0x403ccc +42 
* * 7000 2500 2500
+5 * 500 500
+1 * 500 500

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028 0 1028
+4 +1 1028 1028
+4 * 1028 1028 0 0 2 0 0 2
+4 * 1028
+3 * 1028 1028
+4 * 1028 1028
+3 * 1028
+3 * 1028
+3 * 1028
+4 * 1028 1028
+1 * 1028 1028

fn=(106)
0x40325e 113 1021 0 1021 1 0 0 1
+1 * 1021
+3 * 1021 0 1021
+4 +1 1021 1021
+4 * 1021 1021
+1 * 1021 1021

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 514 0 514 1 0 0 1
+1 * 514
+3 * 514 0 514 0 0 1 0 0 1
+4 +1 514 514
+4 * 514 514
+1 * 514 514

fn=(82)
0x4039fc 117 514 0 514 1 0 0 1
+1 * 514
+3 * 514 0 514 1 0 0 1
+4 +1 514 514
+4 * 514 514
+1 * 514 514

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250 0 0 0 0 0 0 0 0 250 7
jcnd=7/250 +51 +10 
* * 
+2 +3 243 243
+4 * 243 243
+4 * 243 243
+4 -1 243 243
+4 * 243
+3 * 243
+3 * 243 0 243
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=243 0x403373 215 
* * 9234 3159 3402 0 16 2 0 16 2 243 2
+5 +2 243 243
+4 * 243 243
+4 * 243
+4 * 243 243
+4 * 243 0 243
+4 * 243
jump=243 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11272 3396 2939 41 6 9 41 6 9 833 81 41
+5 +2 250 250
+1 * 250 250

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+2 * 500 0 500
+2 * 500 0 500
+1 * 500
+4 * 500 0 500 1 0 0 1
+4 * 500 0 500
+4 +2 500 500
+4 * 500
+3 * 500 0 500
cfn=(6)
calls=500 0x403b08 117 
* * 3000 1500 1000 1 0 1 1 0 1
+5 * 500
+3 * 500 0 500
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=500 0x403afa -88 
* * 3000 1500 1000 1 0 0 1
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(10)
calls=500 0x402f54 645 
* * 6500 3000 1000 1 1 0 1 1
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500
+3 * 500
+3 * 500 0 500
cfn=(12)
calls=500 0x403b16 134 
* * 203119 43907 41769 27 29 18 27 29 18 23857 707 1000
+5 +4 500 500 0 1 0 0 1
+4 * 500
+3 * 500 0 500
cfn=(40)
calls=500 0x40333c 113 
* * 3000 1500 1000 2 0 0 2
+5 * 500
+3 * 500 500
+4 * 500 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(42)
calls=500 0x403ba4 565 
* * 12500 5000 4000 3 0 0 3
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(46)
calls=500 0x403b74 547 
* * 12500 5000 4000
+5 * 500
+3 * 500
+3 * 500
+3 * 500
+3 * 500 0 500 1 0 0 1
cfi=(11)
cfn=(48)
calls=500 0x403bd5 -60 
* * 231980 76020 73524 26 3 5 26 3 5 8240 526 996 124
+5 -3 500 500
+4 * 500 0 500
+4 * 500
jump=500 +28 +4 
* * 
+28 +4 500
+4 * 500 500
+1 * 500 500
+2 * 500 500
+2 * 500 500
+1 * 500 500

fn=(108)
0x403a98 565 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+4 * 500 0 500
+4 * 500
+4 * 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(10)
cfn=(110)
calls=500 0x404380 726 
* * 5000 2500 2000 1 0 0 1
+5 * 500 500
+4 * 500 500
+1 * 500 500

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 500 0 500
+1 * 500
+3 * 500 0 500
+1 * 500
+4 * 500 0 500 1 0 0 1
+4 +2 500 500
+4 * 500
+3 * 500 0 500
cfn=(40)
calls=500 0x40333c 113 
* * 3000 1500 1000
+5 * 500
+3 * 500 500
+4 * 500 500
+4 * 500 500
+4 * 500 500
+3 -1 500
+3 * 500
+3 * 500 0 500
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=500 0x40334a 148 
* * 15500 5000 6000 2 0 0 2
+5 +1 500 500
+4 * 500
+3 * 500 0 500
cfn=(186)
calls=500 0x4032ca 159 
* * 99912 30288 19442 3 1 0 3 1 0 15428 282 1000
+5 * 500
jump=500 +28 * 
* * 
+28 * 500 0 0 1 0 0 1
+4 * 500 500
+1 * 500 500
+1 * 500 500

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 507 0 507 1 0 0 1
+1 * 507 0 0 1 0 0 1
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 0 507 507
+5 0 507 0 0 0 0 0 0 0 0 507
+2 0 507 507
+4 0 507 507
+4 0 507
+5 0 507
+3 0 507
+3 0 507 0 507
fi=(6)
cfi=(5)
cfn=(100)
calls=507 0x40461a 99 
* 0 164054 25030 23894 38 9 22 38 9 22 25755 1148 1014
+5 0 507
fi=(6)
jump=507 +7 0 
* 0 
+7 0 507 507
+1 0 507 507

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 95375 0 95375
+1 * 95375
+3 * 95375 0 95375
+4 * 95375 0 95375
+4 +1 95375 95375
+4 * 95375 95375
+3 * 95375 95375
+4 * 95375
+4 * 95375
+3 * 95375 95375
+1 * 95375 95375

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 95375 0 95375
+1 * 95375
+3 * 95375 0 95375 1 0 0 1
+4 * 95375 0 95375
+4 +1 95375 95375
+4 * 95375 95375
+3 * 95375 95375
+4 * 95375
+4 * 95375
+3 * 95375 95375
+1 * 95375 95375

fn=(192)
0x403296 79 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 500
+4 * 500
+3 * 500 0 500
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=500 0x403d7e +42 
* * 7000 2500 2500 1 0 0 1
+5 * 500 500
+1 * 500 500

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fl=(12)
fn=(54)
0x404a36 450 500 0 500
+1 * 500
+3 * 500 0 500
+1 * 500
+4 * 500 0 500 1 0 0 1
+4 * 500 0 500
+4 * 500 0 500
+4 +10 500 500
+4 * 500
+3 * 500 0 500
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=500 0x404c38 288 
* * 7500 3000 2500 3 0 0 3
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(56)
calls=500 0x404c38 288 
* * 7500 3000 2500
+5 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=500 0x404c52 -36 
* * 184480 59520 56524 20 3 5 20 3 5 8240 526 996 124
+5 +1 500
+4 * 500 500
+1 * 500 500
+1 * 500 500

fn=(60)
0x404c52 424 500 0 500
+1 * 500
+3 * 500 0 500
+2 * 500 0 500
+1 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +4 500 500
+4 * 500
+3 * 500 0 500
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=500 0x40492d 277 
* * 7500 3000 2500 2 0 0 2
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=500 0x404d9d 277 
* * 12500 4500 4000 2 0 1 2 0 1
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(66)
calls=500 0x404d9d 277 
* * 12500 4500 4000
+5 * 500
+3 * 500
+3 * 500
+3 * 500 0 500
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=500 0x404db7 -49 
* * 137980 44020 41024 15 3 4 15 3 4 8240 526 996 124
+5 +1 500
+4 * 500 500
+1 * 500 500
+2 * 500 500
+1 * 500 500

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 542 0 542 1 0 0 1
+1 * 542
+3 * 542
+4 * 542 0 542
+4 +1 542 542
+4 * 542
+3 * 542 0 542 1 0 0 1
cfi=(13)
cfn=(64)
calls=542 -33 -66 
* * 3252 1626 1084
+5 * 542 542
+1 * 542 542

fn=(66)
0x404d9d 277 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfi=(13)
cfn=(68)
calls=1000 0x404f1a -58 
* * 16000 6000 5000 2 0 1 2 0 1
+5 * 1000 1000
+1 * 1000 1000

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 500 0 500
+1 * 500
+3 * 500 0 500
+1 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +10 500 500
+4 * 500
+3 * 500 0 500
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=500 0x404bc6 288 
* * 7500 3000 2500 3 0 0 3
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(122)
calls=500 0x404bc6 288 
* * 7500 3000 2500
+5 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=500 0x404be0 -36 
* * 184480 59520 56524 4 1 28 4 1 28 8240 515 996
+5 +1 500
+4 * 500 500
+1 * 500 500
+1 * 500 500

fn=(128)
0x404878 277 542 0 542
+1 * 542
+3 * 542
+4 * 542 0 542 1 0 0 1
+4 +1 542 542
+4 * 542
+3 * 542 0 542
cfi=(13)
cfn=(130)
calls=542 -33 -66 
* * 3252 1626 1084 0 0 1 0 0 1
+5 * 542 542
+1 * 542 542

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfi=(13)
cfn=(134)
calls=1000 0x404e98 -58 
* * 16000 6000 5000 2 0 0 2
+5 * 1000 1000
+1 * 1000 1000

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +8 500 0 500
+4 +3 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=500 0x404eb5 -22 
* * 130480 41520 38024 1 1 28 1 1 28 8240 515 996
+5 +1 500 500
+1 * 500 500

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfi=(13)
cfn=(124)
calls=1000 0x404d36 -77 
* * 6000 3000 2000 2 0 0 2
+5 * 1000 1000
+1 * 1000 1000

fn=(56)
0x404c38 288 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000 1 0 0 1
+4 +1 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfi=(13)
cfn=(58)
calls=1000 0x404d8f -77 
* * 6000 3000 2000 1 0 0 1
+5 * 1000 1000
+1 * 1000 1000

fn=(74)
0x404f37 368 514 0 514
+1 * 514
+3 * 514
+4 * 514 0 514 1 0 0 1
+4 * 514 0 514
+4 * 514 0 514
+4 +2 514 514
+4 * 514 514
+4 * 514
+3 * 514
+3 * 514
+4 * 514 0 514
+4 +1 514 514
+5 * 514 0 0 0 0 0 0 0 0 514
jcnd=7/514 +33 +2 
* * 
+2 +1 507 507
+4 * 507
+8 * 507 507
+4 * 507 507
+4 * 507
+3 * 507 0 0 1 0 0 1
+3 * 507 0 507 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=507 0x3877c83840 0 
* * 117212 36201 35192 11 2 6 11 2 6 7802 529 502 124
* * 507 507 0 1 1 0 1 1 0 0 0 507
+5 +1 514 514
+4 * 514
+8 * 514 514
+4 * 514
+3 +1 514 514
+1 * 514 514

fn=(140)
0x404eb5 368 514 0 514
+1 * 514
+3 * 514
+4 * 514 0 514 1 0 0 1
+4 * 514 0 514
+4 * 514 0 514 0 0 1 0 0 1
+4 +2 514 514
+4 * 514 514
+4 * 514
+3 * 514
+3 * 514
+4 * 514 0 514
+4 +1 514 514
+5 * 514 0 0 0 0 0 0 0 0 514
jcnd=7/514 +33 +2 
* * 
+2 +1 507 507
+4 * 507
+8 * 507 507
+4 * 507 507
+4 * 507
+3 * 507
+3 * 507 0 507
cob=(2)
cfi=(9)
cfn=(78)
calls=507 0x3877c83840 0 
* * 117212 36201 35192 0 1 29 0 1 29 7802 520 502
* * 507 507 0 0 0 0 0 0 0 0 0 507
+5 +1 514 514
+4 * 514
+8 * 514 514
+4 * 514
+3 +1 514 514
+1 * 514 514

fn=(72)
0x404db7 379 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500 1 0 0 1
+4 * 500 0 500
+4 * 500 0 500
+4 +8 500 0 500
+4 +3 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfn=(74)
calls=500 0x404f37 -22 
* * 130480 41520 38024 14 3 4 14 3 4 8240 526 996 124
+5 +1 500 500
+1 * 500 500

fn=(126)
0x404be0 424 500 0 500
+1 * 500
+3 * 500 0 500
+2 * 500 0 500
+1 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +4 500 500
+4 * 500
+3 * 500 0 500
cfn=(128)
calls=500 0x404878 277 
* * 7500 3000 2500 1 0 0 1
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(132)
calls=500 0x404d44 277 
* * 12500 4500 4000 2 0 0 2
+5 * 500
+3 * 500 500
+4 * 500
+3 * 500 0 500
cfn=(132)
calls=500 0x404d44 277 
* * 12500 4500 4000
+5 * 500
+3 * 500
+3 * 500
+3 * 500 0 500
cfn=(138)
calls=500 0x404d5e -49 
* * 137980 44020 41024 1 1 28 1 1 28 8240 515 996
+5 +1 500
+4 * 500 500
+1 * 500 500
+2 * 500 500
+1 * 500 500

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(110)
0x404380 726 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 1000
+4 * 1000 1000
+3 * 1000 1000
+4 * 1000 0 1000
+3 * 1000 1000
+1 * 1000 1000

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(44)
0x404468 726 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 1000
+4 * 1000 1000
+3 * 1000 1000
+4 * 1000 0 1000 1 0 0 1
+3 * 1000 1000
+1 * 1000 1000

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 507 0 507 1 0 0 1
+1 * 507
+3 * 507 0 507
+4 * 507 0 507 1 0 0 1
+4 * 507 507
+1 * 507 507

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 507 0 507 1 0 0 1
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 +4 507 507
+4 * 507 507
+4 * 507
+3 * 507
+3 * 507 0 507
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=507 0x40454c -14 
* * 3042 1014 1521 1 0 0 1
+5 +2 507 507
+1 * 507 507

fn=(150)
0x40326c 148 507 0 507
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 * 507 0 507
+4 +3 507 507 0 1 0 0 1
+4 * 507 507
+4 * 507
+3 * 507
+3 * 507 0 507
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=507 0x403d1a -29 
* * 9126 3042 3549 3 0 0 3
+5 +1 507 507
+1 * 507 507

fn=(180)
0x40334a 148 507 0 507
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 * 507 0 507
+4 +3 507 507
+4 * 507 507
+4 * 507
+3 * 507
+3 * 507 0 507
cfn=(182)
calls=507 0x403dcc -29 
* * 9126 3042 3549 2 0 0 2
+5 +1 507 507
+1 * 507 507

fn=(152)
0x403d1a 122 507 0 507 1 0 0 1
+1 * 507
+3 * 507
+4 * 507 0 507
+4 * 507 0 507
+4 +4 507 507
+4 * 507 507
+4 * 507
+3 * 507
+3 * 507 0 507
cfn=(154)
calls=507 0x4044f8 -14 
* * 3042 1014 1521 2 0 0 2
+5 +2 507 507
+1 * 507 507

fn=(184)
0x40454c 112 507 0 507 1 0 0 1
+1 * 507
+3 * 507 0 507
+4 * 507 0 507
+4 * 507 507
+1 * 507 507

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2380 389 384 3 1 4 3 1 4 361 51 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 1 3 0 1 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 916 246 157 0 0 0 0 0 0 169 12 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3276 660 611 17 5 5 17 5 5 541 70 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 5 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 936 252 165 2 0 0 2 0 0 174 6 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250
+3 * 250 0 250
cfi=(2)
cfn=(2)
calls=250 0x402d74 645 
* * 3250 1500 500
+5 * 250
+3 * 250 0 250
+3 +1 250 250
+6 * 250 0 250
+3 * 250 250
+6 * 250 0 250
+3 +1 250 250
+6 * 250 0 250 1 0 0 1
+3 * 250 250
+6 * 250 0 250
+3 +2 250 0 250
+7 * 250
jump=250 +86 * 
* * 
+2 +1 31625 31625
+3 * 31625
+3 * 31625 31625
+4 * 31625
+3 * 31625
+3 * 31625 0 31625
cfi=(2)
cfn=(144)
calls=31625 0x402d9a 770 
* * 347875 158125 94875
+5 * 31625 31625
+4 * 31625 31625
+5 * 31625
+4 * 31625 0 31625
+5 +1 31625 31625
+3 * 31625
+3 * 31625 31625
+4 * 31625
+3 * 31625
+3 * 31625 0 31625
cfi=(2)
cfn=(146)
calls=31625 0x402dba 770 
* * 347875 158125 94875 1 0 0 1
+5 * 31625 31625
+2 * 31625
+4 * 31625 31625
+5 * 31625
+4 * 31625 0 31625
+5 -2 31625 0 31625
+4 * 31625 31625
+3 * 31625
+3 * 31625 31625
+3 * 31625 0 0 0 0 0 0 0 0 31625 251
jcnd=31375/31625 -93 +1 
* * 
-9 * 250 250 0 1 0 0 1
+3 * 250
+3 * 250 250
+3 * 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 -93 +1 
* * 
+2 +4 250 250
+3 * 250
+3 * 250
+4 * 250 250 0 1 0 0 1
+5 * 250
+4 * 250
+3 * 250 0 250
+5 +1 250 250
+3 * 250
+3 * 250
+4 * 250 250
+5 * 250
+4 * 250
+3 * 250 0 250
+5 +1 250 0 250
+7 * 250
jump=250 0x4016ee * 
* * 
+2 +1 31625 31625
+3 * 31625
+3 * 31625 31625
+4 * 31625
+3 * 31625 0 0 1 0 0 1
+3 * 31625 0 31625
cfi=(2)
cfn=(146)
calls=31625 0x402dba 770 
* * 347875 158125 94875
+5 * 31625 31625
+2 * 31625
+4 * 31625 31625
+5 * 31625 0 31625
+5 +1 31625 31625
+3 * 31625
+3 * 31625 31625
+4 * 31625
+3 * 31625
+3 * 31625 0 31625
cfi=(2)
cfn=(144)
calls=31625 0x402d9a 770 
* * 347875 158125 94875
+5 * 31625 31625
+4 * 31625 31625
+5 * 31625 0 31625
+5 +1 31625 31625
+5 * 31625 31625
+5 * 31625 31625
+5 * 31625
+4 * 31625 0 31625
+5 +1 31625 31625
+5 * 31625 31625
+5 * 31625 31625
+5 * 31625
+4 * 31625 0 31625
+5 -4 31625 0 31625
+4 * 31625 31625
+3 * 31625
+3 * 31625 31625
+3 * 31625 0 0 0 0 0 0 0 0 31625 251
jcnd=31375/31625 0x401672 +1 
* * 
-9 * 250 250 0 1 0 0 1
+3 * 250
+3 * 250 250
+3 * 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 0x401672 +1 
* * 
+6 +6 250 250 0 1 0 0 1
+5 * 250 250
+5 * 250 0 250
+5 +2 250 250
+3 +1 250 0 250
+3 * 250 250
+5 * 250 250
+1 * 250 250

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 250
+7 * 250
+7 * 250
+3 * 250
+3 * 250 0 250
cfi=(2)
cfn=(4)
calls=250 0x4030b2 310 
* * 250884 72254 67483 63 32 22 63 32 22 16153 784 998 124
+5 * 250
+7 * 250
+7 * 250
+3 * 250
+3 * 250 0 250
cfi=(2)
cfn=(80)
calls=250 0x402ff4 310 
* * 254271 71734 66245 45 5 45 45 5 45 17019 960 998
+5 * 250 0 0 1 0 0 1
+7 * 250
+7 * 250
+3 * 250
+3 * 250 0 250
cfn=(142)
calls=250 0x401585 -52 
* * 3305250 1461000 763250 8 0 0 8 0 0 63750 502
+5 * 250 0 250
+8 * 250 250
+6 * 250 0 250
+6 * 250
+7 * 250
+3 * 250 0 250
cfi=(2)
cfn=(148)
calls=250 0x402df4 414 
* * 62734 19740 13977 33 6 0 33 6 0 7018 144 500
+5 * 250
+7 * 250
+3 * 250 0 250 1 0 0 1
cfi=(2)
cfn=(178)
calls=250 0x402e74 414 
* * 65206 20644 14721 7 1 0 7 1 0 7714 144 500
+5 +2 250
+7 * 250
+7 * 250
+3 * 250
+3 * 250 0 250
cfi=(2)
cfn=(4)
calls=250 0x4030b2 310 
* * 249715 72173 67310 2 1 2 2 1 2 15944 449 998
+5 * 250
+7 * 250
+7 * 250
+3 * 250
+3 * 250 0 250
cfi=(2)
cfn=(80)
calls=250 0x402ff4 310 
* * 253599 71691 66090 0 0 0 0 0 0 16942 633 998
+5 * 250 250
+6 * 250 0 0 1 0 0 1
+7 * 250
+7 * 250 0 250
+6 * 250 250
+8 * 250
+3 * 250
+3 * 250 0 250
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=250 0x401719 -33 
* * 1532750 638000 351625 4 0 0 4 0 0 31875 251
+5 * 250 0 250
+8 * 250 250
+6 * 250 0 250
+6 * 250
+7 * 250 0 0 1 0 0 1
+3 * 250 0 250
cfi=(2)
cfn=(148)
calls=250 0x402df4 414 
* * 62734 19740 13977 0 0 0 0 0 0 7018 136 500
+5 * 250
+7 * 250
+3 * 250 0 250
cfi=(2)
cfn=(178)
calls=250 0x402e74 414 
* * 65206 20644 14721 0 0 0 0 0 0 7714 138 500
+5 +2 250 250
+7 * 250
+3 * 250 0 250
cfi=(2)
cfn=(2)
calls=250 0x402d74 645 
* * 3250 1500 500
+5 * 250 250
+6 * 250
+3 * 250
+3 * 250
+3 * 250 250
+7 * 250
+3 * 250 0 0 1 0 0 1
+3 * 250 0 250
cfi=(2)
cfn=(144)
calls=250 0x402d9a 770 
* * 2750 1250 750
+5 * 250
+3 * 250
+7 * 250
+3 * 250
+3 * 250 0 250
cfi=(2)
cfn=(200)
calls=250 0x402eda 901 
* * 27139 9840 7640 44 22 11 44 22 11 1326 90 41
+5 +1 250 250
+7 * 250
+3 * 250 0 250
cfi=(2)
cfn=(10)
calls=250 0x402f54 645 
* * 3250 1500 500 0 1 0 0 1
+5 * 250 250
+6 * 250
+3 * 250
+3 * 250
+3 * 250 250
+7 * 250 0 0 1 0 0 1
+3 * 250
+3 * 250 0 250
cfi=(2)
cfn=(146)
calls=250 0x402dba 770 
* * 2750 1250 750
+5 * 250
+3 * 250
+7 * 250
+3 * 250
+3 * 250 0 250
cfi=(2)
cfn=(244)
calls=250 0x402f7a 901 
* * 26223 9563 7405 22 18 14 22 18 14 1141 66 41
+5 +1 250 250
+7 * 250
+3 * 250 0 250
cfi=(2)
cfn=(10)
calls=250 0x402f54 645 
* * 3250 1500 500
+5 * 250 250
+6 * 250
+3 * 250
+3 * 250
+3 * 250 250 0 1 0 0 1
+7 * 250
+3 * 250
+3 * 250 0 250
cfi=(2)
cfn=(146)
calls=250 0x402dba 770 
* * 2750 1250 750
+5 * 250 250
+2 * 250
+4 * 250 250
+8 * 250 250
+8 * 250 0 250
+8 +1 250 250
+7 * 250
+3 * 250 0 250
cfi=(2)
cfn=(2)
calls=250 0x402d74 645 
* * 3250 1500 500
+5 * 250 250 0 1 0 0 1
+6 * 250
+3 * 250
+3 * 250
+3 * 250 250
+7 * 250
+3 * 250
+3 * 250 0 250
cfi=(2)
cfn=(144)
calls=250 0x402d9a 770 
* * 2750 1250 750
+5 * 250 250
+4 * 250 250
+8 * 250
+4 * 250 250
+8 * 250
+3 * 250 0 250
+8 +2 250 0 250
+7 -12 250 250
+8 * 250 250
+7 * 250 0 0 0 0 0 0 0 0 250 1
jcnd=1/250 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 250
+7 * 250
+3 * 250 0 250
cfi=(2)
cfn=(2)
calls=250 0x402d74 645 
* * 3250 1500 500 2 0 1 2 0 1
+5 * 250
+3 * 250 250
+7 * 250
+3 * 250 0 250
cfi=(2)
cfn=(2)
calls=250 0x402d74 645 
* * 3250 1500 500 0 1 0 0 1
+5 * 250
+3 * 250 0 0 0 0 0 0 0 0 250 1
+2 * 250 0 0 1 0 0 1
+5 * 250
jump=250 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 250
+2 * 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+5 +1 250 250
+4 * 250
+3 * 250 0 250
cfi=(2)
cfn=(2)
calls=250 0x402d74 645 
* * 3250 1500 500
+5 * 250
+3 * 250 0 250
+3 +1 250 250 0 1 0 0 1
+6 * 250 0 250
+3 * 250 250
+6 * 250 0 250
+3 +2 250 0 250
+7 * 250
jump=250 +86 * 
* * 
+2 +1 31625 31625
+3 * 31625
+3 * 31625 31625
+4 * 31625
+3 * 31625
+3 * 31625 0 31625
cfi=(2)
cfn=(144)
calls=31625 0x402d9a 770 
* * 347875 158125 94875
+5 * 31625 31625
+4 * 31625 31625
+5 * 31625
+4 * 31625 0 31625
+5 +1 31625 31625
+3 * 31625
+3 * 31625 31625
+4 * 31625
+3 * 31625
+3 * 31625 0 31625
cfi=(2)
cfn=(146)
calls=31625 0x402dba 770 
* * 347875 158125 94875
+5 * 31625 31625
+2 * 31625
+4 * 31625 31625
+5 * 31625
+4 * 31625 0 31625
+5 -2 31625 0 31625
+4 * 31625 31625
+3 * 31625
+3 * 31625 31625
+3 * 31625 0 0 0 0 0 0 0 0 31625 251
jcnd=31375/31625 -93 +1 
* * 
-9 * 250 250 0 1 0 0 1
+3 * 250
+3 * 250 250
+3 * 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 -93 +1 
* * 
+2 +4 250 250
+3 * 250
+3 * 250 0 0 1 0 0 1
+4 * 250 250
+5 * 250
+4 * 250
+3 * 250 0 250
+5 +1 250 250
+3 * 250
+3 * 250
+4 * 250 250
+5 * 250
+4 * 250
+3 * 250 0 250
+5 +1 250 250
+5 * 250 250
+5 * 250 250
+5 * 250 0 0 1 0 0 1
+4 * 250
+3 * 250 0 250
+5 +2 250 250
+3 +1 250 0 250
+3 * 250 250
+5 * 250 250
+1 * 250 250

fl=(4)
fn=(174)
0x403ccc 121 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 500
+4 * 500
+3 * 500 0 500
cfi=(5)
cfn=(176)
calls=500 0x4044cc -35 
* * 2500 1000 1000
+5 * 500 500
+1 * 500 500

fn=(90)
0x4047b2 115 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500 1 0 0 1
+4 +1 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(5)
cfn=(92)
calls=500 0x4049d4 -35 
* * 3000 1000 1500 1 0 0 1
+5 * 500 500
+1 * 500 500

fn=(194)
0x403d7e 121 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 500
+4 * 500
+3 * 500 0 500
cfi=(5)
cfn=(196)
calls=500 0x404520 -35 
* * 2500 1000 1000
+5 * 500 500
+1 * 500 500

fn=(16)
0x404804 115 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(5)
cfn=(18)
calls=500 0x404a28 -35 
* * 3000 1000 1500 1 0 1 1 0 1
+5 * 500 500
+1 * 500 500

fl=(3)
fn=(8)
0x403afa 224 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 * 500 500
+4 * 500 500
+1 * 500 500

fn=(264)
0x4036b1 215 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(5)
cfn=(266)
calls=250 0x40406a -87 
* * 6000 2000 2250 0 17 7 0 17 7 250
+5 * 250 250
+1 * 250 250

fn=(212)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102)
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28)
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84)
0x4039ed 224 500 0 500
+1 * 500
+3 * 500 0 500
+4 * 500 500
+4 * 500 500
+1 * 500 500

fn=(222)
0x403373 215 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(5)
cfn=(224)
calls=250 0x403df2 -87 
* * 6000 2000 2250 0 17 3 0 17 3 250 2
+5 * 250 250
+1 * 250 250

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1014 0 1014 1 0 0 1
+5 0 1014 0 1014
+5 0 1014
+3 0 1014 0 1014
+5 0 1014
+4 0 1014 1014 0 0 1 0 0 1
+7 0 1014 1014 0 0 1 0 0 1
+3 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014
+6 0 1014 1014 0 0 1 0 0 1
+7 0 1014 1014 0 1 1 0 1 1
+4 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014
+2 0 1014 1014 0 0 1 0 0 1
+3 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014
jcnd=1014/1014 +97 0 
* 0 
+18 0 1014
+3 0 1014
+3 0 1014 0 1014
cfn=(38) _int_malloc
calls=1014 0x3877c79a00 0 
* 0 234765 27469 32781 45 31 39 45 31 39 37298 1894
+5 0 1014
+3 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014
+2 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014
+2 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014 2
+2 0 1014 1014
+7 0 1014 0 0 0 0 0 0 0 0 1014
jcnd=1014/1014 +13 0 
* 0 
+13 0 1014 0 1014
+2 0 1014 0 0 0 0 0 0 0 0 1014 10
+6 0 1014
+3 0 1014 1014
+4 0 1014 1014
+5 0 1014 1014
+5 0 1014
+4 0 1014 1014
+1 0 1014 0 0 1 0 0 1
+5 0 1014 1014 0 0 1 0 0 1
+7 0 1014 0 0 0 0 0 0 0 0 1014
jcnd=1014/1014 +14 0 
* 0 
+14 0 1014 0 1014 1 0 0 1
+3 0 1014 0 0 0 0 0 0 0 0 1014
+6 0 1014
jump=1014 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1014 0 1014 1 0 0 1
+2 0 1014
+3 0 1014
+3 0 1014 0 1014
+2 0 1014
+3 0 1014 0 1014
+1 0 1014
+3 0 1014 0 1014
+1 0 1014
+3 0 1014
+4 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014
+6 0 1014
+4 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014 7
jcnd=10/1014 0x3877c838d1 0 
* 0 
+2 0 1004
+3 0 1004
+3 0 1004
+3 0 1004
+3 0 1004
+3 0 1004 0 0 0 0 0 0 0 0 1004
jcnd=1004/1004 +41 0 
* 0 
+41 0 1004 0 0 1 0 0 1
+3 0 1004 0 0 0 0 0 0 0 0 1004
jcnd=1004/1004 0x3877c839c0 0 
* 0 
+24 0 1004
+3 0 1004
+4 0 1004
+3 0 1004
+3 0 1004
+3 0 1004
+3 0 1004
+3 0 1004 0 0 0 0 0 0 0 0 1004 497
jcnd=508/1004 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 506
+10 0 506 506 0 0 2 0 0 2
+3 0 506
+4 0 506 0 506
+3 0 506
+4 0 506
+4 0 506 0 0 0 0 0 0 0 0 506
jcnd=506/506 -18 0 
* 0 
-18 0 1574 1574
+3 0 1574
+4 0 1574 0 1574
+3 0 1574
+4 0 1574
+4 0 1574 0 0 0 0 0 0 0 0 1574 11
jcnd=1068/1574 -18 0 
* 0 
+2 0 1014
+4 0 1014
+3 0 1014 1014
+1 0 1014 1014
+1 0 1014 1014
+2 0 1014 1014 0 1 0 0 1
+2 0 1014 1014
0x3877c839c0 0 1004 0 0 1 0 0 1
+3 0 1004
+3 0 1004
+3 0 1004
+4 0 1004 0 1004 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1004 0x3877c89b20 0 
* 0 177022 65252 63244 6 1 34 6 1 34 8474 534 1004 124
+5 0 1004
jump=1004 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1014 1014 0 1 1 0 1 1
+7 0 1014 1014 0 0 1 0 0 1
+3 0 1014
+3 0 1014 0 0 1 0 0 1 0 0 1014
+6 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014
+6 0 1014 1014
+4 0 1014
+4 0 1014
+2 0 1014 0 0 0 0 0 0 0 0 1014 2
+2 0 1014
+2 0 1014
+7 0 1014 0 0 0 0 0 0 0 0 1014
jcnd=1014/1014 +14 0 
* 0 
+14 0 1014
+2 0 1014
cfn=(170) _int_free
calls=1014 0x3877c78650 0 
* 0 98074 26070 14578 20 3 0 20 3 0 23723 571

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 8 8
+5 0 8
+3 0 8 8
+5 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8 8
+9 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8 2
jcnd=8/8 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=9/20 +70 0 
* 0 
+2 0 11 11
+3 0 11
+3 0 11
+3 0 11 11
+4 0 11 11
+4 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+8 0 11 0 11
+4 0 11 0 11
+4 0 11 0 0 0 0 0 0 0 0 11
jcnd=11/11 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 9
jcnd=8/20 0x3877c75e68 0 
* 0 
+6 0 12 0 12
+6 0 12
jump=12 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1014 0 1014 1 0 0 1
+2 0 1014 0 1014
+2 0 1014 0 1014
+2 0 1014
+3 0 1014 0 1014
+2 0 1014 0 1014
+1 0 1014 0 1014
+1 0 1014
+3 0 1014
+4 0 1014 1014
+4 0 1014 0 1014
+4 0 1014
+3 0 1014
+4 0 1014
+3 0 1014
+3 0 1014
+3 0 1014 0 0 1 0 0 1 0 0 1014
+6 0 1014
+4 0 1014 0 0 0 0 0 0 0 0 1014
+6 0 1014
+4 0 1014 0 0 0 0 0 0 0 0 1014
+6 0 1014 1014
+7 0 1014 0 0 0 0 0 0 0 0 1014 4
jcnd=890/1014 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 890
+2 0 890 0 0 0 0 0 0 0 0 890
+6 0 890 890 0 1 0 0 1
+4 0 890
+3 0 890
+2 0 890 0 0 0 0 0 0 0 0 890
jcnd=890/890 0x3877c78a40 0 
* 0 
+6 0 890 890
+4 0 890
+3 0 890 0 0 0 0 0 0 0 0 890
+6 0 890 890
+5 0 890
+4 0 890 0 0 0 0 0 0 0 0 890
jcnd=890/890 0x3877c7907c 0 
* 0 
+6 0 890 890
+5 0 890
+4 0 890 0 0 0 0 0 0 0 0 890
+6 0 890
+4 0 890 0 0 1 0 0 1 0 0 890
+6 0 890
+4 0 890 890
+7 0 890 0 0 0 0 0 0 0 0 890
+6 0 890 890
+6 0 890
+2 0 890 0 0 0 0 0 0 0 0 890
+6 0 890 890
+4 0 890 0 0 0 0 0 0 0 0 890 3
jcnd=887/890 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=2/3 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 890 890 0 1 0 0 1
+4 0 890 0 0 0 0 0 0 0 0 890 488
jcnd=293/890 0x3877c78bf0 0 
* 0 
+6 0 597 597 0 0 1 0 0 1
+6 0 597 0 0 1 0 0 1 0 0 597 64
jcnd=60/597 0x3877c78a78 0 
* 0 
+6 0 537 537
+5 0 537 537
+5 0 537 537
+4 0 537 0 0 0 0 0 0 0 0 537
+6 0 537 537
+4 0 537 0 0 0 0 0 0 0 0 537
+6 0 537 537
+9 0 537 0 537
+4 0 537 0 537
+4 0 537 0 0 0 0 0 0 0 0 537 4
jcnd=529/537 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 537
+3 0 537
+4 0 537 537
+4 0 537 537
+4 0 537 0 0 0 0 0 0 0 0 537
-12 0 60
+4 0 60 60
+4 0 60 60
+4 0 60 0 0 0 0 0 0 0 0 60
+6 0 597
+7 0 597 0 597
+4 0 597 0 597
+4 0 597 0 0 0 0 0 0 0 0 597 2
jcnd=588/597 +18 0 
* 0 
+2 0 9 0 9
+8 0 9 0 9
+8 0 9 0 9
+4 0 9
+3 0 9 0 9 1 0 0 1
+4 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+7 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x3877c78b20 0 
* 0 
-30 0 588 0 588
+4 0 588
+3 0 588 0 588
+4 0 588
+4 0 588 0 588
+4 0 588 0 588
+4 0 588
+7 0 588 0 0 0 0 0 0 0 0 588
jcnd=588/588 0x3877c78b20 0 
* 0 
-7 0 293
+7 0 293 0 0 0 0 0 0 0 0 293
jcnd=293/293 0x3877c78b20 0 
* 0 
0x3877c78a40 0 890 0 0 1 0 0 1
+5 0 890 890
+4 0 890 890
+7 0 890 0 0 0 0 0 0 0 0 890
jcnd=890/890 +16 0 
* 0 
+16 0 890 0 890
+5 0 890 0 0 0 0 0 0 0 0 890
+6 0 890
+3 0 890
jump=890 0x3877c7878f 0 
* 0 
+10 0 60 0 60
+6 0 60 0 0 1 0 0 1
jump=60 0x3877c78885 0 
* 0 
0x3877c78b20 0 890 890 0 1 0 0 1
+4 0 890
+2 0 890 0 0 0 0 0 0 0 0 890
+6 0 890 890
+7 0 890 0 0 0 0 0 0 0 0 890
jcnd=890/890 +15 0 
* 0 
+15 0 890 0 890 1 0 0 1
+4 0 890 0 0 0 0 0 0 0 0 890 2
+6 0 890
+4 0 890 890
+1 0 890 890
+1 0 890 890
+2 0 890 890
+2 0 890 890
+2 0 890 890
+2 0 890 890
0x3877c78bf0 0 293 0 0 1 0 0 1
+3 0 293 0 293
+4 0 293
+3 0 293
+4 0 293 0 293 1 0 0 1
+4 0 293
jump=293 0x3877c788cf 0 
* 0 
0x3877c78f12 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 890 890 0 1 1 0 1 1
+4 0 890 0 0 1 0 0 1
+7 0 890
+4 0 890
+3 0 890
+3 0 890 0 0 0 0 0 0 0 0 890
jcnd=890/890 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1004 0 0 1 0 0 1
+7 0 1004
+3 0 1004
+3 0 1004 1004 0 0 1 0 0 1
+4 0 1004
+4 0 1004 0 0 0 0 0 0 0 0 0 0 1004 124
jump=120 0x3877c89be8 0 
* 0 
jump=128 0x3877c89bd0 0 
* 0 
jump=120 0x3877c89bb8 0 
* 0 
jump=120 +11 0 
* 0 
jump=128 0x3877c89c48 0 
* 0 
jump=130 0x3877c89c30 0 
* 0 
jump=128 0x3877c89c18 0 
* 0 
jump=130 0x3877c89c00 0 
* 0 
+11 0 120 120
+3 0 120
+4 0 120
+4 0 120 120
+4 0 120
+4 0 120 0 120
+4 0 120
+9 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-40 0 7718 7718
+4 0 7718 0 7718 0 0 6 0 0 6
+4 0 7718 7718
+4 0 7718 0 7718
+4 0 7718 7718
+4 0 7718 0 7718 0 0 1 0 0 1
+4 0 7718 7718
+4 0 7718 0 7718 0 0 3 0 0 3
+4 0 7718
+4 0 7718
+4 0 7718 0 0 0 0 0 0 0 0 7718 530
jcnd=968/7718 0x3877c89c60 0 
* 0 
-32 0 130 130
+4 0 130 0 130
+4 0 130 130
+4 0 130 0 130
+4 0 130 130
+4 0 130 0 130
+4 0 130
+4 0 130
+4 0 130 0 0 0 0 0 0 0 0 130
jcnd=10/130 0x3877c89c60 0 
* 0 
-24 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128
+4 0 128
+4 0 128 0 0 0 0 0 0 0 0 128
jcnd=8/128 0x3877c89c60 0 
* 0 
-16 0 130 130 0 1 0 0 1
+4 0 130 0 130
+4 0 130 0 0 1 0 0 1
+4 0 130
+4 0 130 0 0 0 0 0 0 0 0 130 4
jcnd=10/130 0x3877c89c60 0 
* 0 
+6 0 7222
+4 0 7222 7222
+3 0 7222 0 7222 0 0 1 0 0 1
+3 0 7222 7222
+4 0 7222 0 7222 0 0 3 0 0 3
+4 0 7222 7222
+4 0 7222 0 7222 0 0 18 0 0 18
+4 0 7222 7222
+4 0 7222 0 7222
+4 0 7222
jump=7222 -80 0 
* 0 
-30 0 120 120
+3 0 120 0 120
+3 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120 0 0 2 0 0 2
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-24 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128
jump=128 -80 0 
* 0 
-16 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
+8 0 120 120
+3 0 120
+4 0 120 0 0 1 0 0 1
+4 0 120
+4 0 120
jump=120 -39 0 
* 0 
+9 0 128
+3 0 128 0 0 0 0 0 0 0 0 128
+6 0 128 128
+3 0 128
+4 0 128
jump=128 -72 0 
* 0 
+8 0 120
+4 0 120 120
+3 0 120 0 0 0 0 0 0 0 0 120
+2 0 120
+4 0 120
jump=120 -99 0 
* 0 
+11 0 130 130 0 1 0 0 1
+3 0 130
+4 0 130
+4 0 130
+4 0 130
jump=130 0x3877c89b78 0 
* 0 
+9 0 128 128
+3 0 128
+4 0 128
+4 0 128
+4 0 128
jump=128 0x3877c89b70 0 
* 0 
+9 0 130 130
+3 0 130
+4 0 130
+4 0 130
+4 0 130
jump=130 0x3877c89b68 0 
* 0 
+9 0 128 128
+3 0 128
+4 0 128
+4 0 128
+4 0 128
jump=128 0x3877c89b60 0 
* 0 
+9 0 1004 0 1004 1 0 0 1
+3 0 1004 1004

fn=(104) alloc_perturb
0x3877c77180 0 881 881 0 1 0 0 1
+6 0 881
+2 0 881 0 0 0 0 0 0 0 0 881 1
+2 0 881 881

fn=(38)
0x3877c79a00 0 1014 0 1014 1 0 0 1
+2 0 1014
+3 0 1014 0 1014
+2 0 1014 0 1014
+2 0 1014 0 1014 0 0 1 0 0 1
+2 0 1014
+3 0 1014 0 1014
+1 0 1014 0 1014
+1 0 1014
+4 0 1014
+4 0 1014 0 0 0 0 0 0 0 0 1014
+6 0 1014
+4 0 1014
+6 0 1014
+3 0 1014
+4 0 1014
+4 0 1014
+4 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014
+6 0 1014 1014 0 1 1 0 1 1
+7 0 1014 0 0 0 0 0 0 0 0 1014 7
jcnd=892/1014 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 133 133
+6 0 133
+4 0 133
+2 0 133 0 0 0 0 0 0 0 0 133
+6 0 133
+3 0 133
+4 0 133 133
+1 0 133 133
+1 0 133 133
+2 0 133 133
+2 0 133 133
+2 0 133 133
+2 0 133 133
-14 0 881
+4 0 881 881
+1 0 881 881
+1 0 881 881
+2 0 881 881
+2 0 881 881
+2 0 881 881
+2 0 881 881
+7 0 909
+7 0 909 0 0 1 0 0 1 0 0 909 7
jcnd=6/909 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 8 0 0 8
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 6 0 0 1 0 0 1
+3 0 6
+4 0 6
+4 0 6 0 0 1 0 0 1 0 0 6
jcnd=6/6 0x3877c7a1a4 0 
* 0 
+30 0 6 6
+6 0 6
+5 0 6 0 0 0 0 0 0 0 0 6 1
jcnd=5/6 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 905 245 191 8 1 0 8 1 0 189 31
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 908 0 0 1 0 0 1
+3 0 908
+3 0 908
+3 0 908
+4 0 908
+3 0 908
+4 0 908 0 908
+5 0 908
+3 0 908 0 908
+4 0 908 0 908
+4 0 908 0 908
+5 0 908
+3 0 908
+3 0 908
+3 0 908
+3 0 908
+4 0 908
+4 0 908 0 0 1 0 0 1
+4 0 908 0 908
+4 0 908
+4 0 908 0 908
+5 0 908 0 908
+5 0 908
+3 0 908
+3 0 908 0 908
+5 0 908
+5 0 908
+3 0 908 0 908
+4 0 908 0 908
+4 0 908
+6 0 908 0 908
+4 0 908 0 908
+5 0 908 0 0 1 0 0 1
+3 0 908
+3 0 908
+3 0 908
jump=908 +87 0 
* 0 
+8 0 935
+3 0 935
+4 0 935
+2 0 935
+2 0 935
+3 0 935
+3 0 935
+3 0 935
+2 0 935
+2 0 935
+5 0 935
+2 0 935 935
+4 0 935
+3 0 935
+4 0 935 0 935
+4 0 935 0 935
+8 0 935
+7 0 935 0 935
+4 0 935 0 935
+4 0 935 0 935
+4 0 935 0 0 0 0 0 0 0 0 935
-38 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8 0 8 0 0 1 0 0 1
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 1852 1852 0 1 0 0 1
+4 0 1852
+3 0 1852 0 0 0 0 0 0 0 0 1852 61
jcnd=862/1852 0x3877c79ef0 0 
* 0 
+6 0 990 990
+4 0 990 990
+4 0 990
+4 0 990 0 0 0 0 0 0 0 0 990
+6 0 990 990 0 1 0 0 1
+7 0 990 0 0 0 0 0 0 0 0 990
+6 0 990
+4 0 990
+7 0 990 0 0 0 0 0 0 0 0 990 3
jcnd=8/990 +11 0 
* 0 
+2 0 982
+3 0 982 0 0 0 0 0 0 0 0 982 135
jcnd=819/982 0x3877c79e28 0 
* 0 
+6 0 971
+3 0 971 0 971
+4 0 971 0 971
+5 0 971 0 0 0 0 0 0 0 0 971 16
jcnd=28/971 0x3877c7a090 0 
* 0 
+6 0 943
+7 0 943 0 0 0 0 0 0 0 0 943 9
jcnd=935/943 0x3877c79c50 0 
* 0 
+6 0 8 0 0 1 0 0 1
+3 0 8
+4 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+3 0 8
+4 0 8
+2 0 8
+2 0 8
+3 0 8
+3 0 8
+8 0 8
+3 0 8
+2 0 8
+2 0 8
+4 0 8 8 0 0 1 0 0 1
+4 0 8
+3 0 8 0 0 1 0 0 1 0 0 8 4
jcnd=7/8 0x3877c79e15 0 
* 0 
+6 0 1 1
+4 0 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
jump=1 0x3877c79c73 0 
* 0 
0x3877c79e15 0 7 0 7
+4 0 7 0 7
+4 0 7
+3 0 7
jump=7 0x3877c79c73 0 
* 0 
+8 0 819 819 0 1 0 0 1
+4 0 819
+3 0 819 0 0 0 0 0 0 0 0 819 248
jcnd=428/819 0x3877c79ce1 0 
* 0 
+6 0 391 391
+5 0 391 0 0 0 0 0 0 0 0 391 5
jcnd=372/391 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 1 0 0 1
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 862 0 0 1 0 0 1
+7 0 862
+3 0 862 0 0 0 0 0 0 0 0 862 2
jcnd=6/862 0x3877c7a0b0 0 
* 0 
+6 0 861 861 0 1 0 0 1
+4 0 861
+3 0 861
+3 0 861
+2 0 861
+4 0 861
+3 0 861
+3 0 861
+2 0 861
+2 0 861
+2 0 861
+2 0 861 861 0 0 1 0 0 1
+8 0 861
+5 0 861
+5 0 861
+2 0 861 0 0 0 0 0 0 0 0 861
-2 0 428
+2 0 428 0 0 0 0 0 0 0 0 428
+2 0 1289
+2 0 1289 0 0 0 0 0 0 0 0 1289 29
jcnd=821/1289 +64 0 
* 0 
+2 0 468
+8 0 468
+3 0 468
+3 0 468 0 0 0 0 0 0 0 0 468 1
jcnd=1/468 0x3877c79fc0 0 
* 0 
-6 0 569
+3 0 569
+3 0 569 0 0 0 0 0 0 0 0 569 7
jcnd=292/569 0x3877c79fc0 0 
* 0 
+2 0 744
+2 0 744 744
+8 0 744
+2 0 744 0 0 0 0 0 0 0 0 744 21
jcnd=569/744 -20 0 
* 0 
+2 0 175
+2 0 175
+5 0 175
+3 0 175
+3 0 175
+2 0 175
+2 0 175
+5 0 175 0 0 0 0 0 0 0 0 175 3
jcnd=3/175 +14 0 
* 0 
+2 0 172
+2 0 172
+4 0 172
+2 0 172
+2 0 172 0 0 0 0 0 0 0 0 172
jcnd=172/172 -8 0 
* 0 
-8 0 9224
+4 0 9224
+2 0 9224
+2 0 9224 0 0 0 0 0 0 0 0 9224 606
jcnd=8313/9224 -8 0 
* 0 
-2 0 821 0 0 1 0 0 1
+2 0 821 0 0 0 0 0 0 0 0 821 29
jcnd=739/821 -8 0 
* 0 
+2 0 996 996 0 0 11 0 0 11
+4 0 996 0 0 1 0 0 1
+3 0 996 0 0 0 0 0 0 0 0 996 615
jcnd=568/996 0x3877c7a1cf 0 
* 0 
+6 0 428
+2 0 428
+4 0 428
+2 0 428
+2 0 428
+2 0 428 0 428
+8 0 428
jump=428 0x3877c79f30 0 
* 0 
+37 0 293 293 0 1 0 0 1
+5 0 293 293
+4 0 293
+4 0 293 293
+5 0 293 0 0 0 0 0 0 0 0 293
jcnd=293/293 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 28 0 0 1 0 0 1
+7 0 28 0 28
+6 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
jcnd=28/28 0x3877c79ace 0 
* 0 
+16 0 6 6
+4 0 6
+4 0 6
+2 0 6
+5 0 6 6 0 1 0 0 1
+4 0 6
+3 0 6 0 0 0 0 0 0 0 0 6 1
jcnd=5/6 0x3877c79f00 0 
* 0 
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+3 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 -18 0 
* 0 
-18 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 1 0 1 0 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1
+3 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1 0 1 0 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c7a659 0 
* 0 
+6 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1
+7 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c7a285 0 
* 0 
+31 0 6 0 0 1 0 0 1
+3 0 6 0 6
+4 0 6
jump=6 0x3877c79b99 0 
* 0 
+36 0 568 568 0 1 2 0 1 2
+4 0 568 568 0 0 1 0 0 1
+4 0 568
+3 0 568 568
+4 0 568
+4 0 568
+3 0 568
+3 0 568 568
+4 0 568 0 0 0 0 0 0 0 0 568
+6 0 568 568
+4 0 568 0 0 0 0 0 0 0 0 568
+6 0 568 568 0 1 0 0 1
+8 0 568 0 568
+4 0 568 0 568
+4 0 568 0 0 0 0 0 0 0 0 568 6
jcnd=560/568 +38 0 
* 0 
+2 0 8 8 0 0 2 0 0 2
+4 0 8
+3 0 8 0 0 0 0 0 0 0 0 8
+2 0 8 8
+5 0 8 0 0 0 0 0 0 0 0 8
+6 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
-4 0 560
+4 0 560 0 0 0 0 0 0 0 0 560 13
jcnd=28/560 0x3877c7a2e3 0 
* 0 
+6 0 540 540
+4 0 540 540 0 1 0 0 1
+4 0 540 0 0 0 0 0 0 0 0 540
+6 0 540
+4 0 540
+7 0 540 0 540 0 0 10 0 0 10
+4 0 540 0 540
+4 0 540 0 540
+4 0 540 0 540
+4 0 540 0 0 0 0 0 0 0 0 540 1
jcnd=1/540 +7 0 
* 0 
+2 0 539 0 539
+5 0 539
+7 0 539 0 0 0 0 0 0 0 0 539 1
jcnd=533/539 +18 0 
* 0 
-7 0 1
+7 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +18 0 
* 0 
+2 0 6 0 6
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 535 0 0 1 0 0 1
+7 0 535 0 535 0 0 1 0 0 1
+4 0 535
+3 0 535
+3 0 535
+4 0 535
+3 0 535
+4 0 535
+3 0 535
+3 0 535
+4 0 535 0 535
+4 0 535 0 535 0 0 1 0 0 1
+4 0 535
jump=535 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 28
+7 0 28 0 28
+6 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
jcnd=28/28 +7 0 
* 0 
+7 0 569
+4 0 569 0 0 1 0 0 1
+3 0 569
+3 0 569 0 569
cfn=(104)
calls=569 0x3877c77180 0 
* 0 2276 1138 0 1 0 0 1 0 0 569
+5 0 569
+3 0 569
jump=569 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 293 0 0 1 0 0 1
+7 0 293
+2 0 293
+4 0 293
+3 0 293
+3 0 293 0 293
+5 0 293
+3 0 293
+4 0 293
+3 0 293 0 0 1 0 0 1
+4 0 293
+4 0 293
+3 0 293
+4 0 293 0 293
+4 0 293 0 293 0 0 5 0 0 5
+4 0 293
+3 0 293
+3 0 293 0 293
cfn=(104)
calls=293 0x3877c77180 0 
* 0 1172 586 0 0 0 0 0 0 0 293 1
+5 0 293
+3 0 293
jump=293 0x3877c79ae3 0 
* 0 
0x3877c7a659 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7a14b 0 
* 0 

totals: 6219471 2507276 1467945 242 89 96 242 89 96 194366 4299 6074 124
