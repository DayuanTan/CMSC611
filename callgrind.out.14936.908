version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 908


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1004461827 - 1008244709
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2578 0 0 1 0 0 1
+3 0 2578 0 0 0 0 0 0 0 0 2578
+2 0 2578
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2578 0x3877c7b8b0 0 
* 0 292786 75145 38589 23 5 0 23 5 0 71850 1190
* 0 2578 2578 0 1 1 0 1 1 0 0 0 2578

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2578 0 2578 1 0 0 1
+1 0 2578
+5 0 2578
+3 0 2578 0 2578
+1 0 2578
+4 0 2578 0 0 1 0 0 1
+3 0 2578
+4 0 2578
+3 0 2578 0 2578 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2578 0x3877c7aa50 0 
* 0 701688 102957 104092 51 40 75 51 40 75 114532 3642
* 0 2578 2578 0 1 1 0 1 1 0 0 0 2578
+5 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578
jcnd=2578/2578 +96 0 
* 0 
+96 0 2578 0 0 1 0 0 1
+4 0 2578 2578
+1 0 2578 2578
+1 0 2578 2578

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 640 0 640 1 0 0 1
+1 * 640
+3 * 640
+4 * 640 0 640
+4 * 640 0 640
+4 +1 640 640
+4 * 640
+3 * 640 0 640
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=640 0x402d74 645 
* * 8320 3840 1280
+5 * 640
+3 * 640 0 640
+3 +1 640 640
+6 * 640 0 640
+3 * 640 640
+6 * 640 0 640
+3 +1 640 640
+6 * 640 0 640 1 0 0 1
+3 * 640 640
+6 * 640 0 640
+3 +2 640 0 640
+7 * 640
jump=640 +86 * 
* * 
+2 +1 205760 205760
+3 * 205760
+3 * 205760 205760
+4 * 205760
+3 * 205760
+3 * 205760 0 205760
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=205760 0x402d9a 770 
* * 2263360 1028800 617280
+5 * 205760 205760
+4 * 205760 205760
+5 * 205760
+4 * 205760 0 205760
+5 +1 205760 205760
+3 * 205760
+3 * 205760 205760
+4 * 205760
+3 * 205760
+3 * 205760 0 205760
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=205760 0x402dba 770 
* * 2263360 1028800 617280 1 0 0 1
+5 * 205760 205760
+2 * 205760
+4 * 205760 205760
+5 * 205760
+4 * 205760 0 205760
+5 -2 205760 0 205760
+4 * 205760 205760
+3 * 205760
+3 * 205760 205760
+3 * 205760 0 0 0 0 0 0 0 0 205760 641
jcnd=205120/205760 -93 +1 
* * 
-9 * 640 640 0 1 0 0 1
+3 * 640
+3 * 640 640
+3 * 640 0 0 0 0 0 0 0 0 640
jcnd=640/640 -93 +1 
* * 
+2 +4 640 640
+3 * 640
+3 * 640
+4 * 640 640 0 1 0 0 1
+5 * 640
+4 * 640
+3 * 640 0 640
+5 +1 640 640
+3 * 640
+3 * 640
+4 * 640 640
+5 * 640
+4 * 640
+3 * 640 0 640
+5 +1 640 0 640
+7 * 640
jump=640 0x4016ee * 
* * 
+2 +1 205760 205760
+3 * 205760
+3 * 205760 205760
+4 * 205760
+3 * 205760 0 0 1 0 0 1
+3 * 205760 0 205760
cfi=(2)
cfn=(146)
calls=205760 0x402dba 770 
* * 2263360 1028800 617280
+5 * 205760 205760
+2 * 205760
+4 * 205760 205760
+5 * 205760 0 205760
+5 +1 205760 205760
+3 * 205760
+3 * 205760 205760
+4 * 205760
+3 * 205760
+3 * 205760 0 205760
cfi=(2)
cfn=(144)
calls=205760 0x402d9a 770 
* * 2263360 1028800 617280
+5 * 205760 205760
+4 * 205760 205760
+5 * 205760 0 205760
+5 +1 205760 205760
+5 * 205760 205760
+5 * 205760 205760
+5 * 205760
+4 * 205760 0 205760
+5 +1 205760 205760
+5 * 205760 205760
+5 * 205760 205760
+5 * 205760
+4 * 205760 0 205760
+5 -4 205760 0 205760
+4 * 205760 205760
+3 * 205760
+3 * 205760 205760
+3 * 205760 0 0 0 0 0 0 0 0 205760 641
jcnd=205120/205760 0x401672 +1 
* * 
-9 * 640 640 0 1 0 0 1
+3 * 640
+3 * 640 640
+3 * 640 0 0 0 0 0 0 0 0 640
jcnd=640/640 0x401672 +1 
* * 
+6 +6 640 640 0 1 0 0 1
+5 * 640 640
+5 * 640 0 640
+5 +2 640 640
+3 +1 640 0 640
+3 * 640 640
+5 * 640 640
+1 * 640 640

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 640
+7 * 640
+7 * 640
+3 * 640
+3 * 640 0 640
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=640 0x4030b2 310 
* * 811739 249503 237109 70 17 16 70 17 16 49303 1774 2558 319
+5 * 640
+7 * 640
+7 * 640
+3 * 640
+3 * 640 0 640
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=640 0x402ff4 310 
* * 806460 246374 232568 48 8 155 48 8 155 48059 2408 2558
+5 * 640 0 0 1 0 0 1
+7 * 640
+7 * 640
+3 * 640
+3 * 640 0 640
cfn=(142)
calls=640 0x401585 -52 
* * 21440640 9480960 4949120 8 0 0 8 0 0 412800 1282
+5 * 640 0 640
+8 * 640 640
+6 * 640 0 640
+6 * 640
+7 * 640
+3 * 640 0 640
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=640 0x402df4 414 
* * 158804 49760 35183 33 5 0 33 5 0 17542 550 1280
+5 * 640
+7 * 640
+3 * 640 0 640 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=640 0x402e74 414 
* * 170947 54132 39019 8 1 0 8 1 0 20722 43 1280
+5 +2 640
+7 * 640
+7 * 640
+3 * 640
+3 * 640 0 640
cfi=(2)
cfn=(4)
calls=640 0x4030b2 310 
* * 811307 249468 236989 2 0 1 2 0 1 49258 1064 2558
+5 * 640
+7 * 640
+7 * 640
+3 * 640
+3 * 640 0 640
cfi=(2)
cfn=(80)
calls=640 0x402ff4 310 
* * 805360 246298 232393 0 0 2 0 0 2 47879 1662 2558
+5 * 640 640
+6 * 640 0 0 1 0 0 1
+7 * 640
+7 * 640 0 640
+6 * 640 640
+8 * 640
+3 * 640
+3 * 640 0 640
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=640 0x401719 -33 
* * 9914240 4129280 2272960 4 0 0 4 0 0 206400 641
+5 * 640 0 640
+8 * 640 640
+6 * 640 0 640
+6 * 640
+7 * 640 0 0 1 0 0 1
+3 * 640 0 640
cfi=(2)
cfn=(148)
calls=640 0x402df4 414 
* * 158804 49760 35183 0 0 0 0 0 0 17542 542 1280
+5 * 640
+7 * 640
+3 * 640 0 640
cfi=(2)
cfn=(178)
calls=640 0x402e74 414 
* * 170947 54132 39019 0 0 0 0 0 0 20722 35 1280
+5 +2 640 640
+7 * 640
+3 * 640 0 640
cfi=(2)
cfn=(2)
calls=640 0x402d74 645 
* * 8320 3840 1280
+5 * 640 640
+6 * 640
+3 * 640
+3 * 640
+3 * 640 640
+7 * 640
+3 * 640 0 0 1 0 0 1
+3 * 640 0 640
cfi=(2)
cfn=(144)
calls=640 0x402d9a 770 
* * 7040 3200 1920
+5 * 640
+3 * 640
+7 * 640
+3 * 640
+3 * 640 0 640
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=640 0x402eda 901 
* * 55395 21154 16095 38 47 11 38 47 11 2220 81 53
+5 +1 640 640
+7 * 640
+3 * 640 0 640
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=640 0x402f54 645 
* * 8320 3840 1280 0 1 0 0 1
+5 * 640 640
+6 * 640
+3 * 640
+3 * 640
+3 * 640 640
+7 * 640 0 0 1 0 0 1
+3 * 640
+3 * 640 0 640
cfi=(2)
cfn=(146)
calls=640 0x402dba 770 
* * 7040 3200 1920
+5 * 640
+3 * 640
+7 * 640
+3 * 640
+3 * 640 0 640
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=640 0x402f7a 901 
* * 55529 21001 15989 20 56 89 20 56 89 2275 91 53
+5 +1 640 640
+7 * 640
+3 * 640 0 640
cfi=(2)
cfn=(10)
calls=640 0x402f54 645 
* * 8320 3840 1280
+5 * 640 640
+6 * 640
+3 * 640
+3 * 640
+3 * 640 640 0 1 0 0 1
+7 * 640
+3 * 640
+3 * 640 0 640
cfi=(2)
cfn=(146)
calls=640 0x402dba 770 
* * 7040 3200 1920
+5 * 640 640
+2 * 640
+4 * 640 640
+8 * 640 640
+8 * 640 0 640
+8 +1 640 640
+7 * 640
+3 * 640 0 640
cfi=(2)
cfn=(2)
calls=640 0x402d74 645 
* * 8320 3840 1280
+5 * 640 640 0 1 0 0 1
+6 * 640
+3 * 640
+3 * 640
+3 * 640 640
+7 * 640
+3 * 640
+3 * 640 0 640
cfi=(2)
cfn=(144)
calls=640 0x402d9a 770 
* * 7040 3200 1920
+5 * 640 640
+4 * 640 640
+8 * 640
+4 * 640 640
+8 * 640
+3 * 640 0 640
+8 +2 640 0 640
+7 -12 640 640
+8 * 640 640
+7 * 640 0 0 0 0 0 0 0 0 640 1
jcnd=1/640 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 640
+7 * 640
+3 * 640 0 640
cfi=(2)
cfn=(2)
calls=640 0x402d74 645 
* * 8320 3840 1280 2 0 1 2 0 1
+5 * 640
+3 * 640 640
+7 * 640
+3 * 640 0 640
cfi=(2)
cfn=(2)
calls=640 0x402d74 645 
* * 8320 3840 1280 0 1 0 0 1
+5 * 640
+3 * 640 0 0 0 0 0 0 0 0 640 1
+2 * 640 0 0 1 0 0 1
+5 * 640
jump=640 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 640
+2 * 640 0 0 0 0 0 0 0 0 640
jcnd=640/640 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640
+4 * 640 0 640
+4 * 640 0 640
+5 +1 640 640
+4 * 640
+3 * 640 0 640
cfi=(2)
cfn=(2)
calls=640 0x402d74 645 
* * 8320 3840 1280
+5 * 640
+3 * 640 0 640
+3 +1 640 640 0 1 0 0 1
+6 * 640 0 640
+3 * 640 640
+6 * 640 0 640
+3 +2 640 0 640
+7 * 640
jump=640 +86 * 
* * 
+2 +1 205760 205760
+3 * 205760
+3 * 205760 205760
+4 * 205760
+3 * 205760
+3 * 205760 0 205760
cfi=(2)
cfn=(144)
calls=205760 0x402d9a 770 
* * 2263360 1028800 617280
+5 * 205760 205760
+4 * 205760 205760
+5 * 205760
+4 * 205760 0 205760
+5 +1 205760 205760
+3 * 205760
+3 * 205760 205760
+4 * 205760
+3 * 205760
+3 * 205760 0 205760
cfi=(2)
cfn=(146)
calls=205760 0x402dba 770 
* * 2263360 1028800 617280
+5 * 205760 205760
+2 * 205760
+4 * 205760 205760
+5 * 205760
+4 * 205760 0 205760
+5 -2 205760 0 205760
+4 * 205760 205760
+3 * 205760
+3 * 205760 205760
+3 * 205760 0 0 0 0 0 0 0 0 205760 641
jcnd=205120/205760 -93 +1 
* * 
-9 * 640 640 0 1 0 0 1
+3 * 640
+3 * 640 640
+3 * 640 0 0 0 0 0 0 0 0 640
jcnd=640/640 -93 +1 
* * 
+2 +4 640 640
+3 * 640
+3 * 640 0 0 1 0 0 1
+4 * 640 640
+5 * 640
+4 * 640
+3 * 640 0 640
+5 +1 640 640
+3 * 640
+3 * 640
+4 * 640 640
+5 * 640
+4 * 640
+3 * 640 0 640
+5 +1 640 640
+5 * 640 640
+5 * 640 640
+5 * 640 0 0 1 0 0 1
+4 * 640
+3 * 640 0 640
+5 +2 640 640
+3 +1 640 0 640
+3 * 640 640
+5 * 640 640
+1 * 640 640

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1280 0x404a28 -35 
* * 7680 2560 3840 1 0 1 1 0 1
+5 * 1280 1280
+1 * 1280 1280

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1280 0x4044cc -35 
* * 6400 2560 2560
+5 * 1280 1280
+1 * 1280 1280

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280 1 0 0 1
+4 +1 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1280 0x4049d4 -35 
* * 7680 2560 3840 1 0 0 1
+5 * 1280 1280
+1 * 1280 1280

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1280 0x404520 -35 
* * 6400 2560 2560
+5 * 1280 1280
+1 * 1280 1280

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+4 * 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640
+4 * 640 0 640
+4 * 640 0 640
+4 +1 640 640
+4 * 640 640
+4 * 640 640
+4 * 640
+3 * 640
+3 * 640 0 640
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=640 0x403df2 -87 
* * 15360 5120 5760 0 41 3 0 41 3 640 2
+5 * 640 640
+1 * 640 640

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280
+4 * 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640
+4 * 640 0 640
+4 * 640 0 640
+4 +1 640 640
+4 * 640 640
+4 * 640 640
+4 * 640
+3 * 640
+3 * 640 0 640
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=640 0x40406a -87 
* * 15360 5120 5760 0 40 32 0 40 32 640
+5 * 640 640
+1 * 640 640

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1370 0 1370
+1 * 1370
+3 * 1370 0 1370 0 0 1 0 0 1
+4 +1 1370 1370
+4 * 1370 1370
+1 * 1370 1370

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560
+4 * 2560 0 2560
+4 +1 2560
+4 * 2560
+3 * 2560 0 2560
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2560 0x404ffe 790 
* * 15360 7680 5120 1 0 0 1
+5 * 2560 2560
+3 * 2560 2560
+1 * 2560 2560

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560 0 2560
+4 +1 2560 2560
+4 * 2560 2560
+1 * 2560 2560

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560
+4 * 2560 0 2560
+4 +1 2560
+4 * 2560
+3 * 2560 0 2560 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2560 0x40500c 790 
* * 15360 7680 5120 1 0 0 1
+5 * 2560 2560
+3 * 2560 2560
+1 * 2560 2560

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1370 0 1370
+1 * 1370
+3 * 1370 0 1370
+4 +1 1370 1370
+4 * 1370 1370
+1 * 1370 1370

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560 0 2560
+4 +1 2560 2560 0 1 0 0 1
+4 * 2560 2560
+1 * 2560 2560

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 +2 1289 1289
+4 * 1289
+3 * 1289 0 1289
cfn=(102)
calls=1289 0x4048de +12 
* * 7734 2578 2578 1 0 0 1
+5 * 1289 1289
+4 * 1289 0 0 1 0 0 1
+3 * 1289
+2 * 1289 0 0 0 0 0 0 0 0 1289
jcnd=1289/1289 +7 +3 
* * 
+7 +3 1289 1289
+4 * 1289
+4 * 1289
+3 * 1289 0 1289
cob=(5)
cfi=(8)
cfn=(32)
calls=1289 0x387e4bd0b0 0 
* * 365816 53575 51401 33 13 60 33 13 60 57223 2440 1289
* * 1289 1289 0 0 0 0 0 0 0 0 0 1289
+5 +1 1289 1289
+1 * 1289 1289

fn=(18)
0x404a28 81 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280 0 0 1 0 0 1
+4 * 1280 0 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(92)
0x4049d4 81 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(196)
0x404520 86 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 * 1289 0 1289 1 0 0 1
+4 +2 1289 1289
+4 * 1289
+3 * 1289 0 1289
cfn=(28)
calls=1289 0x404992 +12 
* * 7734 2578 2578 1 0 0 1
+5 * 1289 1289
+4 * 1289
+3 * 1289
+2 * 1289 0 0 0 0 0 0 0 0 1289
jcnd=1289/1289 +7 +3 
* * 
+7 +3 1289 1289
+4 * 1289
+4 * 1289
+3 * 1289 0 1289
cob=(5)
cfi=(8)
cfn=(32)
calls=1289 0x387e4bd0b0 0 
* * 377120 59694 60425 22 28 16 22 28 16 59887 1202 1289
* * 1289 1289 0 1 1 0 1 1 0 0 0 1289
+5 +1 1289 1289
+1 * 1289 1289

fn=(102)
0x4048de 113 1307 0 1307 1 0 0 1
+1 * 1307
+3 * 1307 0 1307
+4 +1 1307
+10 * 1307 1307
+1 * 1307 1307

fn=(266)
0x40406a 129 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640
+4 * 640 0 640
+4 * 640 0 640
+4 +1 640 640
+4 * 640
+3 * 640
+5 * 640 0 640
cfi=(16)
cfn=(226)
calls=640 0x402d61 -20 
* * 4480 1920 1920
+5 * 640
+3 * 640 0 0 0 0 0 0 0 0 640
+2 * 640 640
+4 * 640 640 0 0 40 0 0 40
+2 * 640 0 640 0 0 32 0 0 32
+2 * 640 640
+1 * 640 640

fn=(28)
0x404992 113 1307 0 1307 1 0 0 1
+1 * 1307
+3 * 1307 0 1307
+4 +1 1307
+10 * 1307 1307
+1 * 1307 1307

fn=(176)
0x4044cc 86 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(224)
0x403df2 129 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640
+4 * 640 0 640
+4 * 640 0 640
+4 +1 640 640
+4 * 640
+3 * 640
+5 * 640 0 640
cfi=(16)
cfn=(226)
calls=640 0x402d61 -20 
* * 4480 1920 1920
+5 * 640
+3 * 640 0 0 0 0 0 0 0 0 640 2
+2 * 640 640
+4 * 640 640 0 0 41 0 0 41
+2 * 640 0 640 0 0 3 0 0 3
+2 * 640 640
+1 * 640 640

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1289 0 1289
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 +1 1289 1289
+4 * 1289
+3 * 1289 0 1289
cob=(5)
cfi=(8)
cfn=(164)
calls=1289 0x387e4bb2f0 0 
* * 139378 34476 15455 23 5 0 23 5 0 34027 1100 1289
* * 1289 1289 0 1 1 0 1 1 0 0 0 1289
+5 * 1289 1289
+1 * 1289 1289

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1289 0 1289
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 +1 1289 1289
+4 * 1289
+3 * 1289 0 1289
cob=(5)
cfi=(8)
cfn=(164)
calls=1289 0x387e4bb2f0 0 
* * 163720 43247 23134 2 1 0 2 1 0 40401 90 1289
* * 1289 1289 0 0 0 0 0 0 0 0 0 1289
+5 * 1289 1289
+1 * 1289 1289

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1280 0x404484 107 
* * 902146 312980 305304 25 3 4 25 3 4 36660 1700 2556 319
+5 * 1280 1280
+1 * 1280 1280

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +2 1280 1280 0 1 0 0 1
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1280 0x404a36 450 
* * 866306 300180 292504 24 3 4 24 3 4 36660 1700 2556 319
+5 * 1280 1280
+1 * 1280 1280

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1280 0x40439c 107 
* * 902146 312980 305304 7 0 102 7 0 102 36660 1684 2556
+5 * 1280 1280
+1 * 1280 1280

fn=(116)
0x40439c 107 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +10 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1280 0x4047d7 -26 
* * 884226 306580 298904 7 0 102 7 0 102 36660 1684 2556
+5 +1 1280 1280
+1 * 1280 1280

fn=(118)
0x4047d7 91 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1280 0x4049e2 450 
* * 866306 300180 292504 7 0 102 7 0 102 36660 1684 2556
+5 * 1280 1280
+1 * 1280 1280

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(232)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 49 1 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fn=(50)
0x404484 107 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +10 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(52)
calls=1280 0x404829 -26 
* * 884226 306580 298904 25 3 4 25 3 4 36660 1700 2556 319
+5 +1 1280 1280
+1 * 1280 1280

fn=(270)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 49 2 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fn=(234)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fl=(2)
fn=(10)
0x402f54 645 2596 0 2596 1 0 0 1
+1 * 2596
+3 * 2596 0 2596
+4 +1 2596 2596
+4 * 2596 2596 0 0 2 0 0 2
+4 * 2596
+3 * 2596 2596
+4 * 2596 2596
+3 * 2596
+3 * 2596
+3 * 2596
+4 * 2596 2596
+1 * 2596 2596

fn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
0x40325e 113 2587 0 2587 1 0 0 1
+1 * 2587
+3 * 2587 0 2587
+4 +1 2587 2587
+4 * 2587 2587
+1 * 2587 2587

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 1298 0 1298 1 0 0 1
+1 * 1298
+3 * 1298 0 1298 0 0 1 0 0 1
+4 +1 1298 1298
+4 * 1298 1298
+1 * 1298 1298

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 1298 0 1298 1 0 0 1
+1 * 1298
+3 * 1298 0 1298 1 0 0 1
+4 +1 1298 1298
+4 * 1298 1298
+1 * 1298 1298

fn=(200)
0x402eda 901 640 0 640
+1 * 640
+3 * 640
+4 * 640 0 640
+4 * 640 0 640
+4 +2 640 640
+4 * 640 640
+4 * 640 640
+4 * 640 640
+4 * 640
+3 * 640 0 0 0 0 0 0 0 0 640 9
jcnd=9/640 +51 +10 
* * 
+2 +3 631 631
+4 * 631 631
+4 * 631 631
+4 -1 631 631
+4 * 631
+3 * 631
+3 * 631 0 631
cfi=(3)
cfn=(222)
calls=631 0x403373 215 
* * 23978 8203 8834 0 40 2 0 40 2 631 2
+5 +2 631 631
+4 * 631 631
+4 * 631
+4 * 631 631
+4 * 631 0 631
+4 * 631
jump=631 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202) std::vector<float, std::allocator<float> >::end()
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 14606 4586 3998 35 7 9 35 7 9 949 70 53
+5 +2 640 640
+1 * 640 640

fn=(4)
0x4030b2 310 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280
+2 * 1280 0 1280
+2 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280 1 0 0 1
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(6)
calls=1280 0x403b08 117 
* * 7680 3840 2560 1 0 1 1 0 1
+5 * 1280
+3 * 1280 0 1280
cfi=(3)
cfn=(8)
calls=1280 0x403afa -88 
* * 7680 3840 2560 1 0 0 1
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(10)
calls=1280 0x402f54 645 
* * 16640 7680 2560 1 1 0 1 1
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=1280 0x403b16 134 
* * 534020 116871 111194 34 13 12 34 13 12 61901 1138 2560
+5 +4 1280 1280 0 1 0 0 1
+4 * 1280
+3 * 1280 0 1280
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=1280 0x40333c 113 
* * 7680 3840 2560 2 0 0 2
+5 * 1280
+3 * 1280 1280
+4 * 1280 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=1280 0x403ba4 565 
* * 32000 12800 10240 3 0 0 3
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=1280 0x403b74 547 
* * 32000 12800 10240
+5 * 1280
+3 * 1280
+3 * 1280
+3 * 1280
+3 * 1280 0 1280 1 0 0 1
cfi=(11)
cfn=(48)
calls=1280 0x403bd5 -60 
* * 921346 319380 312984 26 3 4 26 3 4 36660 1700 2556 319
+5 -3 1280 1280
+4 * 1280 0 1280
+4 * 1280
jump=1280 +28 +4 
* * 
+28 +4 1280
+4 * 1280 1280
+1 * 1280 1280
+2 * 1280 1280
+2 * 1280 1280
+1 * 1280 1280

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+4 * 1280 0 1280
+4 * 1280
+4 * 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1280 0x404380 726 
* * 12800 6400 5120 1 0 0 1
+5 * 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(178)
0x402e74 414 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280 1 0 0 1
+4 +2 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(40)
calls=1280 0x40333c 113 
* * 7680 3840 2560
+5 * 1280
+3 * 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+3 -1 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1280 0x40334a 148 
* * 39680 12800 15360 2 0 0 2
+5 +1 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=1280 0x4032ca 159 
* * 263814 80104 52438 4 1 0 4 1 0 41444 78 2560
+5 * 1280
jump=1280 +28 * 
* * 
+28 * 1280 0 0 1 0 0 1
+4 * 1280 1280
+1 * 1280 1280
+1 * 1280 1280

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82)
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1289 0 1289 1 0 0 1
+1 * 1289 0 0 1 0 0 1
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 0 1289 1289
+5 0 1289 0 0 0 0 0 0 0 0 1289
+2 0 1289 1289
+4 0 1289 1289
+4 0 1289
+5 0 1289
+3 0 1289
+3 0 1289 0 1289
fi=(6) ???
cfi=(5)
cfn=(100)
calls=1289 0x40461a 99 
* 0 399330 63887 61713 36 13 60 36 13 60 58512 2440 2578
+5 0 1289
fi=(6)
jump=1289 +7 0 
* 0 
+7 0 1289 1289
+1 0 1289 1289

fn=(144)
0x402d9a 770 618560 0 618560
+1 * 618560
+3 * 618560 0 618560
+4 * 618560 0 618560
+4 +1 618560 618560
+4 * 618560 618560
+3 * 618560 618560
+4 * 618560
+4 * 618560
+3 * 618560 618560
+1 * 618560 618560

fn=(146)
0x402dba 770 618560 0 618560
+1 * 618560
+3 * 618560 0 618560 1 0 0 1
+4 * 618560 0 618560
+4 +1 618560 618560
+4 * 618560 618560
+3 * 618560 618560
+4 * 618560
+4 * 618560
+3 * 618560 618560
+1 * 618560 618560

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfi=(4)
cfn=(194)
calls=1280 0x403d7e +42 
* * 17920 6400 6400 1 0 0 1
+5 * 1280 1280
+1 * 1280 1280

fn=(254)
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(186)
0x4032ca 159 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280 1280
+4 * 1280 1280
+3 * 1280
+3 * 1280
+3 * 1280
+4 * 1280
+3 * 1280 1280
+4 * 1280 1280
+3 -1 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1280 0x403d98 +11 
* * 198534 55784 35798 2 1 0 2 1 0 41444 78 2560
+5 +1 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(192)
calls=1280 0x403296 -82 
* * 29440 10240 10240 1 0 0 1
+5 * 1280
jump=1280 +28 * 
* * 
+28 * 1280
+4 * 1280 1280
+1 * 1280 1280
+1 * 1280 1280

fn=(2)
0x402d74 645 5156 0 5156 1 0 0 1
+1 * 5156
+3 * 5156 0 5156 0 0 1 0 0 1
+4 +1 5156 5156
+4 * 5156 5156 0 1 1 0 1 1
+4 * 5156
+3 * 5156 5156
+4 * 5156 5156
+3 * 5156
+3 * 5156
+3 * 5156
+4 * 5156 5156
+1 * 5156 5156

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1280 0x404236 -14 
* * 427780 75911 75354 28 13 8 28 13 8 61901 1138 2560
+5 * 1280 1280
+4 * 1280 0 1280
+3 +1 1280 1280
+4 * 1280 1280 0 1 0 0 1
+3 * 1280 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+3 * 1280 1280
+4 * 1280
+4 * 1280
+3 * 1280 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+1 * 1280 1280

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280 1280 0 1 0 0 1
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(96)
calls=1280 0x403fbe -14 
* * 416554 69612 66217 26 8 55 26 8 55 59278 2386 2560
+5 * 1280 1280
+4 * 1280 0 1280
+3 +1 1280 1280
+4 * 1280 1280
+3 * 1280 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+3 * 1280 1280
+4 * 1280
+4 * 1280
+3 * 1280 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+1 * 1280 1280

fn=(244)
0x402f7a 901 640 0 640
+1 * 640
+3 * 640 0 0 1 0 0 1
+4 * 640 0 640
+4 * 640 0 640
+4 +2 640 640
+4 * 640 640
+4 * 640 640
+4 * 640 640
+4 * 640
+3 * 640 0 0 0 0 0 0 0 0 640
jcnd=9/640 +51 +10 
* * 
+2 +3 631 631
+4 * 631 631
+4 * 631 631
+4 -1 631 631
+4 * 631
+3 * 631
+3 * 631 0 631
cfi=(3)
cfn=(264)
calls=631 0x4036b1 215 
* * 23978 8203 8834 0 40 27 0 40 27 631
+5 +2 631 631
+4 * 631 631
+4 * 631
+4 * 631 631
+4 * 631 0 631
+4 * 631
jump=631 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 14740 4433 3892 19 16 62 19 16 62 1004 91 53
+5 +2 640 640
+1 * 640 640

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40)
0x40333c 113 2587 0 2587 1 0 0 1
+1 * 2587
+3 * 2587 0 2587 1 0 0 1
+4 +1 2587 2587
+4 * 2587 2587
+1 * 2587 2587

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+3 * 1280 0 1280
+4 * 1280
+4 * 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(10)
cfn=(110)
calls=1280 0x404380 726 
* * 12800 6400 5120
+5 * 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(148)
0x402df4 414 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280 1 0 0 1
+4 +2 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(106)
calls=1280 0x40325e 113 
* * 7680 3840 2560
+5 * 1280
+3 * 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+3 -1 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1280 0x40326c 148 
* * 39680 12800 15360 4 0 0 4
+5 +1 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1280 0x4031ec 159 
* * 239528 71360 44766 27 5 0 27 5 0 35084 1092 2560
+5 * 1280
jump=1280 +28 * 
* * 
+28 * 1280 0 0 1 0 0 1
+4 * 1280 1280
+1 * 1280 1280
+1 * 1280 1280

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 +2 1289 1289
+5 * 1289 0 0 0 0 0 0 0 0 1289
+2 +1 1289 1289
+4 * 1289 1289
+4 * 1289 1289
+4 * 1289
+3 * 1289
+3 * 1289 0 1289
cfi=(5)
cfn=(160)
calls=1289 0x4044d6 -65 
* * 154846 39632 21900 24 6 0 24 6 0 34027 1100 2578
+5 +1 1289 1289
+1 * 1289 1289

fn=(12)
0x403b16 134 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1280 0x4043ca -45 
* * 46080 16640 17920 4 0 4 4 0 4
+5 +1 1280 1280 0 1 0 0 1
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(20)
calls=1280 0x404412 +43 
* * 459780 91271 84314 29 13 8 29 13 8 61901 1138 2560
+5 * 1280
jump=1280 +28 * 
* * 
+28 * 1280
+4 * 1280 1280
+1 * 1280 1280
+1 * 1280 1280

fn=(14)
0x4043ca 90 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280
+4 * 1280 0 1280 0 0 1 0 0 1
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(4)
cfn=(16)
calls=1280 0x404804 +24 
* * 23040 7680 8960 2 0 1 2 0 1
+5 * 1280 1280
+4 * 1280 0 1280 0 0 2 0 0 2
+7 * 1280 1280
+4 * 1280 0 1280 1 0 0 1
+8 * 1280 1280
+4 * 1280 0 1280
+8 +1 1280 1280
+1 * 1280 1280

fn=(80)
0x402ff4 310 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280
+2 * 1280 0 1280
+2 * 1280 0 1280
+1 * 1280 0 0 1 0 0 1
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(82)
calls=1280 0x4039fc 117 
* * 7680 3840 2560 2 0 0 2
+5 * 1280
+3 * 1280 0 1280
cfi=(3)
cfn=(84)
calls=1280 0x4039ed -88 
* * 7680 3840 2560
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(2)
calls=1280 0x402d74 645 
* * 16640 7680 2560
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280
+3 * 1280 0 1280 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1280 0x403a0a 134 
* * 522794 110572 102057 33 8 55 33 8 55 59278 2386 2560
+5 +4 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(106)
calls=1280 0x40325e 113 
* * 7680 3840 2560 1 0 0 1
+5 * 1280
+3 * 1280 1280
+4 * 1280 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(108)
calls=1280 0x403a98 565 
* * 32000 12800 10240 2 0 0 2
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(112)
calls=1280 0x403a68 547 
* * 32000 12800 10240
+5 * 1280
+3 * 1280
+3 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(11)
cfn=(114)
calls=1280 0x403ac9 -60 
* * 921346 319380 312984 7 0 102 7 0 102 36660 1684 2556
+5 -3 1280 1280
+4 * 1280 0 1280
+4 * 1280
jump=1280 +28 +4 
* * 
+28 +4 1280
+4 * 1280 1280
+1 * 1280 1280
+2 * 1280 1280
+2 * 1280 1280
+1 * 1280 1280

fn=(188)
0x403d98 171 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 +2 1289 1289
+5 * 1289 0 0 0 0 0 0 0 0 1289 9
+2 +1 1289 1289
+4 * 1289 1289
+4 * 1289 1289
+4 * 1289
+3 * 1289
+3 * 1289 0 1289
cfi=(5)
cfn=(190)
calls=1289 0x40452a -65 
* * 179188 48403 29579 2 1 0 2 1 0 40401 90 2578
+5 +1 1289 1289
+1 * 1289 1289

fn=(22)
0x404236 167 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289
+4 * 1289 0 1289 1 0 0 1
+4 * 1289 0 1289
+4 0 1289 1289
+5 0 1289 0 0 0 0 0 0 0 0 1289
+2 0 1289 1289
+4 0 1289 1289
+4 0 1289
+5 0 1289
+3 0 1289
+3 0 1289 0 1289
fi=(6)
cfi=(5)
cfn=(26)
calls=1289 0x404730 99 
* 0 410634 70006 70737 26 29 16 26 29 16 61176 1202 2578
+5 0 1289
fi=(6)
jump=1289 +7 0 
* 0 
+7 0 1289 1289
+1 0 1289 1289

fn=(42)
0x403ba4 565 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+4 * 1280 0 1280
+4 * 1280
+4 * 1280 0 0 1 0 0 1
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1280 0x404468 726 
* * 12800 6400 5120 1 0 0 1
+5 * 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(46)
0x403b74 547 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+3 * 1280 0 1280
+4 * 1280
+4 * 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfi=(10)
cfn=(44)
calls=1280 0x404468 726 
* * 12800 6400 5120
+5 * 1280 1280
+4 * 1280 1280
+1 * 1280 1280

fn=(86)
0x403a0a 134 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1280 0x4042e2 -45 
* * 46080 16640 17920 5 0 0 5
+5 +1 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280 1 0 0 1
cfn=(94)
calls=1280 0x40432a +43 
* * 448554 84972 75177 27 8 55 27 8 55 59278 2386 2560
+5 * 1280
jump=1280 +28 * 
* * 
+28 * 1280
+4 * 1280 1280
+1 * 1280 1280
+1 * 1280 1280

fn=(88)
0x4042e2 90 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +1 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280 1 0 0 1
cfi=(4)
cfn=(90)
calls=1280 0x4047b2 +24 
* * 23040 7680 8960 3 0 0 3
+5 * 1280 1280
+4 * 1280 0 1280
+7 * 1280 1280
+4 * 1280 0 1280
+8 * 1280 1280
+4 * 1280 0 1280
+8 +1 1280 1280
+1 * 1280 1280

fn=(156)
0x4031ec 159 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280
+4 +2 1280 1280
+4 * 1280 1280 0 1 0 0 1
+4 * 1280
+3 * 1280 1280
+4 * 1280 1280
+3 * 1280
+3 * 1280
+3 * 1280
+4 * 1280
+3 * 1280 1280
+4 * 1280 1280
+3 -1 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(158)
calls=1280 0x403ce6 +11 
* * 174248 47040 28126 24 5 0 24 5 0 35084 1092 2560
+5 +1 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1280 0x4031b8 -82 
* * 29440 10240 10240 1 0 0 1
+5 * 1280
jump=1280 +28 * 
* * 
+28 * 1280
+4 * 1280 1280
+1 * 1280 1280
+1 * 1280 1280

fn=(172)
0x4031b8 79 1280 0 1280 1 0 0 1
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfi=(4)
cfn=(174)
calls=1280 0x403ccc +42 
* * 17920 6400 6400
+5 * 1280 1280
+1 * 1280 1280

fn=(202)
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246)
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280 1 0 0 1
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +8 1280 0 1280
+4 +3 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=1280 0x404f37 -22 
* * 661506 231060 222104 14 3 3 14 3 3 36660 1700 2556 319
+5 +1 1280 1280
+1 * 1280 1280

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+2 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +4 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=1280 0x404878 277 
* * 19200 7680 6400 1 0 0 1
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1280 0x404d44 277 
* * 32000 11520 10240 2 0 0 2
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(132)
calls=1280 0x404d44 277 
* * 32000 11520 10240
+5 * 1280
+3 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=1280 0x404d5e -49 
* * 680706 237460 229784 1 0 102 1 0 102 36660 1684 2556
+5 +1 1280
+4 * 1280 1280
+1 * 1280 1280
+2 * 1280 1280
+1 * 1280 1280

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(54)
0x404a36 450 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280 1 0 0 1
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +10 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1280 0x404c38 288 
* * 19200 7680 6400 3 0 0 3
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(56)
calls=1280 0x404c38 288 
* * 19200 7680 6400
+5 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1280 0x404c52 -36 
* * 799746 277140 269464 20 3 4 20 3 4 36660 1700 2556 319
+5 +1 1280
+4 * 1280 1280
+1 * 1280 1280
+1 * 1280 1280

fn=(60)
0x404c52 424 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+2 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +4 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1280 0x40492d 277 
* * 19200 7680 6400 2 0 0 2
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1280 0x404d9d 277 
* * 32000 11520 10240 2 0 1 2 0 1
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(66)
calls=1280 0x404d9d 277 
* * 32000 11520 10240
+5 * 1280
+3 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(72)
calls=1280 0x404db7 -49 
* * 680706 237460 229784 15 3 3 15 3 3 36660 1700 2556 319
+5 +1 1280
+4 * 1280 1280
+1 * 1280 1280
+2 * 1280 1280
+1 * 1280 1280

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 49 0 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(62)
0x40492d 277 1334 0 1334 1 0 0 1
+1 * 1334
+3 * 1334
+4 * 1334 0 1334
+4 +1 1334 1334
+4 * 1334
+3 * 1334 0 1334 1 0 0 1
cfi=(13)
cfn=(64)
calls=1334 -33 -66 
* * 8004 4002 2668
+5 * 1334 1334
+1 * 1334 1334

fn=(66)
0x404d9d 277 2560 0 2560
+1 * 2560
+3 * 2560
+4 * 2560 0 2560
+4 +1 2560 2560
+4 * 2560
+3 * 2560 0 2560
cfi=(13)
cfn=(68)
calls=2560 0x404f1a -58 
* * 40960 15360 12800 2 0 1 2 0 1
+5 * 2560 2560
+1 * 2560 2560

fn=(240)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 49 0 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1280 0 1280
+1 * 1280
+3 * 1280 0 1280
+1 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +10 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1280 0x404bc6 288 
* * 19200 7680 6400 3 0 0 3
+5 * 1280
+3 * 1280 1280
+4 * 1280
+3 * 1280 0 1280
cfn=(122)
calls=1280 0x404bc6 288 
* * 19200 7680 6400
+5 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(126)
calls=1280 0x404be0 -36 
* * 799746 277140 269464 4 0 102 4 0 102 36660 1684 2556
+5 +1 1280
+4 * 1280 1280
+1 * 1280 1280
+1 * 1280 1280

fn=(128)
0x404878 277 1334 0 1334
+1 * 1334
+3 * 1334
+4 * 1334 0 1334 1 0 0 1
+4 +1 1334 1334
+4 * 1334
+3 * 1334 0 1334
cfi=(13)
cfn=(130)
calls=1334 -33 -66 
* * 8004 4002 2668 0 0 1 0 0 1
+5 * 1334 1334
+1 * 1334 1334

fn=(132)
0x404d44 277 2560 0 2560
+1 * 2560
+3 * 2560
+4 * 2560 0 2560
+4 +1 2560 2560
+4 * 2560
+3 * 2560 0 2560
cfi=(13)
cfn=(134)
calls=2560 0x404e98 -58 
* * 40960 15360 12800 2 0 0 2
+5 * 2560 2560
+1 * 2560 2560

fn=(138)
0x404d5e 379 1280 0 1280
+1 * 1280
+3 * 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 * 1280 0 1280
+4 +8 1280 0 1280
+4 +3 1280 1280
+4 * 1280 1280
+4 * 1280 1280
+4 * 1280
+3 * 1280
+3 * 1280 0 1280
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1280 0x404eb5 -22 
* * 661506 231060 222104 1 0 102 1 0 102 36660 1684 2556
+5 +1 1280 1280
+1 * 1280 1280

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 49 1 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560
+4 * 2560 0 2560
+4 +1 2560 2560
+4 * 2560
+3 * 2560 0 2560
cfi=(13)
cfn=(124)
calls=2560 0x404d36 -77 
* * 15360 7680 5120 2 0 0 2
+5 * 2560 2560
+1 * 2560 2560

fn=(56)
0x404c38 288 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560
+4 * 2560 0 2560 1 0 0 1
+4 +1 2560 2560
+4 * 2560
+3 * 2560 0 2560
cfi=(13)
cfn=(58)
calls=2560 0x404d8f -77 
* * 15360 7680 5120 1 0 0 1
+5 * 2560 2560
+1 * 2560 2560

fn=(74)
0x404f37 368 1298 0 1298
+1 * 1298
+3 * 1298
+4 * 1298 0 1298 1 0 0 1
+4 * 1298 0 1298
+4 * 1298 0 1298
+4 +2 1298 1298
+4 * 1298 1298
+4 * 1298
+3 * 1298
+3 * 1298
+4 * 1298 0 1298
+4 +1 1298 1298
+5 * 1298 0 0 0 0 0 0 0 0 1298
jcnd=9/1298 +33 +2 
* * 
+2 +1 1289 1289
+4 * 1289
+8 * 1289 1289
+4 * 1289 1289
+4 * 1289
+3 * 1289 0 0 1 0 0 1
+3 * 1289 0 1289 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1289 0x3877c83840 0 
* * 627514 217559 214986 11 2 51 11 2 51 35502 1706 1284 319
* * 1289 1289 0 1 1 0 1 1 0 0 0 1289
+5 +1 1298 1298
+4 * 1298
+8 * 1298 1298
+4 * 1298
+3 +1 1298 1298
+1 * 1298 1298

fn=(140)
0x404eb5 368 1298 0 1298
+1 * 1298
+3 * 1298
+4 * 1298 0 1298 1 0 0 1
+4 * 1298 0 1298
+4 * 1298 0 1298 0 0 1 0 0 1
+4 +2 1298 1298
+4 * 1298 1298
+4 * 1298
+3 * 1298
+3 * 1298
+4 * 1298 0 1298
+4 +1 1298 1298
+5 * 1298 0 0 0 0 0 0 0 0 1298
jcnd=9/1298 +33 +2 
* * 
+2 +1 1289 1289
+4 * 1289
+8 * 1289 1289
+4 * 1289 1289
+4 * 1289
+3 * 1289
+3 * 1289 0 1289
cob=(2)
cfi=(9)
cfn=(78)
calls=1289 0x3877c83840 0 
* * 627514 217559 214986 0 0 103 0 0 103 35502 1692 1284
* * 1289 1289 0 0 0 0 0 0 0 0 0 1289
+5 +1 1298 1298
+4 * 1298
+8 * 1298 1298
+4 * 1298
+3 +1 1298 1298
+1 * 1298 1298

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560 0 2560
+4 +1 2560 2560
+4 * 2560 2560
+1 * 2560 2560

fn=(110)
0x404380 726 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560 0 2560
+4 * 2560 0 2560
+4 * 2560 2560
+4 * 2560 2560
+3 * 2560 2560
+4 * 2560 0 2560
+3 * 2560 2560
+1 * 2560 2560

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 2560 0 2560 1 0 0 1
+1 * 2560
+3 * 2560 0 2560
+4 +1 2560 2560
+4 * 2560 2560
+1 * 2560 2560

fn=(44)
0x404468 726 2560 0 2560
+1 * 2560
+3 * 2560 0 2560
+4 * 2560 0 2560
+4 * 2560 2560
+4 * 2560 2560
+3 * 2560 2560
+4 * 2560 0 2560 1 0 0 1
+3 * 2560 2560
+1 * 2560 2560

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289 0 1289
+4 * 1289 0 1289
+4 * 1289 1289
+1 * 1289 1289

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289 0 1289
+4 * 1289 0 1289 1 0 0 1
+4 * 1289 1289
+1 * 1289 1289

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 +4 1289 1289
+4 * 1289 1289
+4 * 1289
+3 * 1289
+3 * 1289 0 1289
cfn=(184)
calls=1289 0x40454c -14 
* * 7734 2578 3867 1 0 0 1
+5 +2 1289 1289
+1 * 1289 1289

fn=(150)
0x40326c 148 1289 0 1289
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 +3 1289 1289 0 1 0 0 1
+4 * 1289 1289
+4 * 1289
+3 * 1289
+3 * 1289 0 1289
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1289 0x403d1a -29 
* * 23202 7734 9023 3 0 0 3
+5 +1 1289 1289
+1 * 1289 1289

fn=(180)
0x40334a 148 1289 0 1289
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 +3 1289 1289
+4 * 1289 1289
+4 * 1289
+3 * 1289
+3 * 1289 0 1289
cfn=(182)
calls=1289 0x403dcc -29 
* * 23202 7734 9023 2 0 0 2
+5 +1 1289 1289
+1 * 1289 1289

fn=(152)
0x403d1a 122 1289 0 1289 1 0 0 1
+1 * 1289
+3 * 1289
+4 * 1289 0 1289
+4 * 1289 0 1289
+4 +4 1289 1289
+4 * 1289 1289
+4 * 1289
+3 * 1289
+3 * 1289 0 1289
cfn=(154)
calls=1289 0x4044f8 -14 
* * 7734 2578 3867 2 0 0 2
+5 +2 1289 1289
+1 * 1289 1289

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 3478 540 539 0 16 8 0 16 8 564 64 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 0 5 0 0 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 49 3 0 49 131 6 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1278 353 226 1 0 0 1 0 0 246 21 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 3400 720 652 12 5 5 12 5 5 523 54 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 8 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1222 326 219 1 1 0 1 1 0 232 8 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 2578 0 2578 1 0 0 1
+2 0 2578 0 2578
+2 0 2578 0 2578
+2 0 2578
+3 0 2578 0 2578
+2 0 2578 0 2578
+1 0 2578 0 2578
+1 0 2578
+3 0 2578
+4 0 2578 2578
+4 0 2578 0 2578
+4 0 2578
+3 0 2578
+4 0 2578
+3 0 2578
+3 0 2578
+3 0 2578 0 0 1 0 0 1 0 0 2578
+6 0 2578
+4 0 2578 0 0 0 0 0 0 0 0 2578
+6 0 2578
+4 0 2578 0 0 0 0 0 0 0 0 2578
+6 0 2578 2578
+7 0 2578 0 0 0 0 0 0 0 0 2578 4
jcnd=2454/2578 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124 2
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 2454
+2 0 2454 0 0 0 0 0 0 0 0 2454
+6 0 2454 2454 0 1 0 0 1
+4 0 2454
+3 0 2454
+2 0 2454 0 0 0 0 0 0 0 0 2454
jcnd=2454/2454 0x3877c78a40 0 
* 0 
+6 0 2454 2454
+4 0 2454
+3 0 2454 0 0 0 0 0 0 0 0 2454
+6 0 2454 2454
+5 0 2454
+4 0 2454 0 0 0 0 0 0 0 0 2454
jcnd=2454/2454 0x3877c7907c 0 
* 0 
+6 0 2454 2454
+5 0 2454
+4 0 2454 0 0 0 0 0 0 0 0 2454
+6 0 2454
+4 0 2454 0 0 1 0 0 1 0 0 2454
+6 0 2454
+4 0 2454 2454
+7 0 2454 0 0 0 0 0 0 0 0 2454
+6 0 2454 2454
+6 0 2454
+2 0 2454 0 0 0 0 0 0 0 0 2454
+6 0 2454 2454
+4 0 2454 0 0 0 0 0 0 0 0 2454 6
jcnd=2449/2454 +70 0 
* 0 
+2 0 5 5
+3 0 5
+3 0 5
+3 0 5 5
+4 0 5 5
+4 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5 2
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=4/5 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 2454 2454 0 1 0 0 1
+4 0 2454 0 0 0 0 0 0 0 0 2454 1014
jcnd=1102/2454 0x3877c78bf0 0 
* 0 
+6 0 1352 1352 0 0 1 0 0 1
+6 0 1352 0 0 1 0 0 1 0 0 1352 71
jcnd=83/1352 0x3877c78a78 0 
* 0 
+6 0 1269 1269
+5 0 1269 1269
+5 0 1269 1269
+4 0 1269 0 0 0 0 0 0 0 0 1269
+6 0 1269 1269
+4 0 1269 0 0 0 0 0 0 0 0 1269
+6 0 1269 1269
+9 0 1269 0 1269
+4 0 1269 0 1269
+4 0 1269 0 0 0 0 0 0 0 0 1269 4
jcnd=1003/1269 +16 0 
* 0 
+2 0 266 266
+5 0 266
+3 0 266 0 0 1 0 0 1 0 0 266 8
jcnd=246/266 0x3877c78ee4 0 
* 0 
+6 0 1269
+3 0 1269
+4 0 1269 1269
+4 0 1269 1269
+4 0 1269 0 0 0 0 0 0 0 0 1269
-12 0 83
+4 0 83 83
+4 0 83 83
+4 0 83 0 0 0 0 0 0 0 0 83
+6 0 1352
+7 0 1352 0 1352
+4 0 1352 0 1352
+4 0 1352 0 0 0 0 0 0 0 0 1352 71
jcnd=441/1352 +18 0 
* 0 
+2 0 911 0 911
+8 0 911 0 911
+8 0 911 0 911
+4 0 911
+3 0 911 0 911 1 0 0 1
+4 0 911
+4 0 911 0 911
+4 0 911 0 911
+4 0 911
+7 0 911 0 0 0 0 0 0 0 0 911
jcnd=911/911 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 1102
+7 0 1102 0 0 0 0 0 0 0 0 1102
jcnd=1102/1102 0x3877c78b20 0 
* 0 
0x3877c78a40 0 2454 0 0 1 0 0 1
+5 0 2454 2454
+4 0 2454 2454
+7 0 2454 0 0 0 0 0 0 0 0 2454
jcnd=2454/2454 +16 0 
* 0 
+16 0 2454 0 2454
+5 0 2454 0 0 0 0 0 0 0 0 2454
+6 0 2454
+3 0 2454
jump=2454 0x3877c7878f 0 
* 0 
+10 0 83 0 83
+6 0 83 0 0 1 0 0 1
jump=83 0x3877c78885 0 
* 0 
0x3877c78b20 0 2454 2454 0 1 0 0 1
+4 0 2454
+2 0 2454 0 0 0 0 0 0 0 0 2454
+6 0 2454 2454
+7 0 2454 0 0 0 0 0 0 0 0 2454
jcnd=2454/2454 +15 0 
* 0 
+15 0 2454 0 2454 1 0 0 1
+4 0 2454 0 0 0 0 0 0 0 0 2454 2
+6 0 2454
+4 0 2454 2454
+1 0 2454 2454
+1 0 2454 2454
+2 0 2454 2454
+2 0 2454 2454
+2 0 2454 2454
+2 0 2454 2454
0x3877c78bf0 0 1102 0 0 1 0 0 1
+3 0 1102 0 1102
+4 0 1102
+3 0 1102
+4 0 1102 0 1102 1 0 0 1
+4 0 1102
jump=1102 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 246 246 0 1 0 0 1
+5 0 246 0 0 0 0 0 0 0 0 246
+6 0 246 246
+5 0 246 0 246
+4 0 246 246
+5 0 246 0 246
+4 0 246
jump=246 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 2454 2454 0 1 1 0 1 1
+4 0 2454 0 0 1 0 0 1
+7 0 2454
+4 0 2454
+3 0 2454
+3 0 2454 0 0 0 0 0 0 0 0 2454
jcnd=2454/2454 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 2568 0 0 1 0 0 1
+7 0 2568
+3 0 2568
+3 0 2568 2568 0 0 1 0 0 1
+4 0 2568
+4 0 2568 0 0 0 0 0 0 0 0 0 0 2568 319
jump=312 0x3877c89be8 0 
* 0 
jump=332 0x3877c89bd0 0 
* 0 
jump=320 0x3877c89bb8 0 
* 0 
jump=320 +11 0 
* 0 
jump=320 0x3877c89c48 0 
* 0 
jump=322 0x3877c89c30 0 
* 0 
jump=320 0x3877c89c18 0 
* 0 
jump=322 0x3877c89c00 0 
* 0 
+11 0 320 320
+3 0 320
+4 0 320
+4 0 320 320
+4 0 320
+4 0 320 0 320
+4 0 320
+9 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320
+4 0 320
+4 0 320 0 0 0 0 0 0 0 0 320
jcnd=8/320 0x3877c89c60 0 
* 0 
-40 0 51006 51006
+4 0 51006 0 51006 0 0 3 0 0 3
+4 0 51006 51006
+4 0 51006 0 51006 0 0 15 0 0 15
+4 0 51006 51006
+4 0 51006 0 51006 0 0 50 0 0 50
+4 0 51006 51006
+4 0 51006 0 51006
+4 0 51006
+4 0 51006
+4 0 51006 0 0 0 0 0 0 0 0 51006 2094
jcnd=2532/51006 0x3877c89c60 0 
* 0 
-32 0 322 322
+4 0 322 0 322
+4 0 322 322
+4 0 322 0 322
+4 0 322 322
+4 0 322 0 322
+4 0 322
+4 0 322
+4 0 322 0 0 0 0 0 0 0 0 322
jcnd=10/322 0x3877c89c60 0 
* 0 
-24 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320
+4 0 320
+4 0 320 0 0 0 0 0 0 0 0 320
jcnd=8/320 0x3877c89c60 0 
* 0 
-16 0 322 322 0 1 0 0 1
+4 0 322 0 322
+4 0 322 0 0 1 0 0 1
+4 0 322
+4 0 322 0 0 0 0 0 0 0 0 322 6
jcnd=10/322 0x3877c89c60 0 
* 0 
+6 0 49722
+4 0 49722 49722
+3 0 49722 0 49722 0 0 1 0 0 1
+3 0 49722 49722
+4 0 49722 0 49722 0 0 34 0 0 34
+4 0 49722 49722
+4 0 49722 0 49722 0 0 49 0 0 49
+4 0 49722 49722
+4 0 49722 0 49722
+4 0 49722
jump=49722 -80 0 
* 0 
-30 0 312 312
+3 0 312 0 312
+3 0 312 312
+4 0 312 0 312
+4 0 312 312
+4 0 312 0 312 0 0 1 0 0 1
+4 0 312 312
+4 0 312 0 312
+4 0 312
jump=312 -80 0 
* 0 
-24 0 332 332
+4 0 332 0 332
+4 0 332 332
+4 0 332 0 332
+4 0 332 332
+4 0 332 0 332
+4 0 332
jump=332 -80 0 
* 0 
-16 0 320 320
+4 0 320 0 320
+4 0 320 320
+4 0 320 0 320
+4 0 320
jump=320 -80 0 
* 0 
+8 0 320 320
+3 0 320
+4 0 320 0 0 1 0 0 1
+4 0 320
+4 0 320
jump=320 -39 0 
* 0 
+9 0 332
+3 0 332 0 0 0 0 0 0 0 0 332
+6 0 332 332
+3 0 332
+4 0 332
jump=332 -72 0 
* 0 
+8 0 312
+4 0 312 312
+3 0 312 0 0 0 0 0 0 0 0 312
+2 0 312
+4 0 312
jump=312 -99 0 
* 0 
+11 0 322 322 0 1 0 0 1
+3 0 322
+4 0 322
+4 0 322
+4 0 322
jump=322 0x3877c89b78 0 
* 0 
+9 0 320 320
+3 0 320
+4 0 320
+4 0 320
+4 0 320
jump=320 0x3877c89b70 0 
* 0 
+9 0 322 322
+3 0 322
+4 0 322
+4 0 322
+4 0 322
jump=322 0x3877c89b68 0 
* 0 
+9 0 320 320
+3 0 320
+4 0 320
+4 0 320
+4 0 320
jump=320 0x3877c89b60 0 
* 0 
+9 0 2568 0 2568 1 0 0 1
+3 0 2568 2568

fn=(104) alloc_perturb
0x3877c77180 0 2432 2432 0 1 0 0 1
+6 0 2432
+2 0 2432 0 0 0 0 0 0 0 0 2432 2
+2 0 2432 2432

fn=(38) _int_malloc
0x3877c79a00 0 2578 0 2578 1 0 0 1
+2 0 2578
+3 0 2578 0 2578
+2 0 2578 0 2578
+2 0 2578 0 2578 0 0 1 0 0 1
+2 0 2578
+3 0 2578 0 2578
+1 0 2578 0 2578
+1 0 2578
+4 0 2578
+4 0 2578 0 0 0 0 0 0 0 0 2578
+6 0 2578
+4 0 2578
+6 0 2578
+3 0 2578
+4 0 2578
+4 0 2578
+4 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578
+6 0 2578 2578 0 1 1 0 1 1
+7 0 2578 0 0 0 0 0 0 0 0 2578 7
jcnd=2456/2578 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 146 146
+6 0 146
+4 0 146
+2 0 146 0 0 0 0 0 0 0 0 146
+6 0 146
+3 0 146
+4 0 146 146
+1 0 146 146
+1 0 146 146
+2 0 146 146
+2 0 146 146
+2 0 146 146
+2 0 146 146
-14 0 2432
+4 0 2432 2432
+1 0 2432 2432
+1 0 2432 2432
+2 0 2432 2432
+2 0 2432 2432
+2 0 2432 2432
+2 0 2432 2432
+7 0 2473
+7 0 2473 0 0 1 0 0 1 0 0 2473 7
jcnd=1570/2473 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 1 0 0 1
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 1570 0 0 1 0 0 1
+3 0 1570
+4 0 1570
+4 0 1570 0 0 1 0 0 1 0 0 1570 3
jcnd=1568/1570 0x3877c7a1a4 0 
* 0 
+6 0 2
+3 0 2
+4 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2
+3 0 2 0 2
+4 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +30 0 
* 0 
-11 0 1568 1568
+6 0 1568
+5 0 1568 0 0 0 0 0 0 0 0 1568 1
jcnd=1567/1568 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 907 243 192 8 2 0 8 2 0 187 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 2472 0 0 1 0 0 1
+3 0 2472
+3 0 2472
+3 0 2472
+4 0 2472
+3 0 2472
+4 0 2472 0 2472
+5 0 2472
+3 0 2472 0 2472
+4 0 2472 0 2472
+4 0 2472 0 2472
+5 0 2472
+3 0 2472
+3 0 2472
+3 0 2472
+3 0 2472
+4 0 2472
+4 0 2472 0 0 1 0 0 1
+4 0 2472 0 2472
+4 0 2472
+4 0 2472 0 2472
+5 0 2472 0 2472
+5 0 2472
+3 0 2472
+3 0 2472 0 2472
+5 0 2472
+5 0 2472
+3 0 2472 0 2472
+4 0 2472 0 2472
+4 0 2472
+6 0 2472 0 2472
+4 0 2472 0 2472
+5 0 2472 0 0 1 0 0 1
+3 0 2472
+3 0 2472
+3 0 2472
jump=2472 +87 0 
* 0 
+8 0 1268
+3 0 1268
+4 0 1268
+2 0 1268
+2 0 1268
+3 0 1268
+3 0 1268
+3 0 1268
+2 0 1268
+2 0 1268
+5 0 1268
+2 0 1268 1268 0 0 1 0 0 1
+4 0 1268
+3 0 1268
+4 0 1268 0 1268
+4 0 1268 0 1268 0 0 1 0 0 1
+8 0 1268
+7 0 1268 0 1268
+4 0 1268 0 1268 0 0 2 0 0 2
+4 0 1268 0 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
-38 0 1143
+3 0 1143
+4 0 1143 0 1143
+4 0 1143 0 1143
+8 0 1143
+7 0 1143 0 1143
+4 0 1143 0 1143
+4 0 1143 0 1143
+4 0 1143 0 0 0 0 0 0 0 0 1143
+6 0 4884 4884 0 1 0 0 1
+4 0 4884
+3 0 4884 0 0 0 0 0 0 0 0 4884 172
jcnd=2413/4884 0x3877c79ef0 0 
* 0 
+6 0 2471 2471
+4 0 2471 2471 0 0 1 0 0 1
+4 0 2471
+4 0 2471 0 0 0 0 0 0 0 0 2471
+6 0 2471 2471 0 1 1 0 1 1
+7 0 2471 0 0 0 0 0 0 0 0 2471 2
+6 0 2471
+4 0 2471
+7 0 2471 0 0 0 0 0 0 0 0 2471 6
jcnd=1561/2471 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 2452
+3 0 2452 0 2452
+4 0 2452 0 2452
+5 0 2452 0 0 0 0 0 0 0 0 2452 29
jcnd=41/2452 0x3877c7a090 0 
* 0 
+6 0 2411
+7 0 2411 0 0 0 0 0 0 0 0 2411 472
jcnd=1268/2411 0x3877c79c50 0 
* 0 
+6 0 1143 0 0 1 0 0 1
+3 0 1143
+4 0 1143
+4 0 1143 0 0 0 0 0 0 0 0 1143 257
jcnd=258/1143 0x3877c79db0 0 
* 0 
+6 0 885
+3 0 885
+4 0 885
+2 0 885
+2 0 885
+3 0 885
+3 0 885
+8 0 885
+3 0 885
+2 0 885
+2 0 885
+4 0 885 885 0 0 1 0 0 1
+4 0 885
+3 0 885 0 0 1 0 0 1 0 0 885 13
jcnd=853/885 0x3877c79e15 0 
* 0 
-36 0 258
+2 0 258
+2 0 258
+3 0 258
+3 0 258
+8 0 258
+3 0 258
+2 0 258
+2 0 258
+4 0 258 258
+4 0 258
+3 0 258 0 0 0 0 0 0 0 0 258
jcnd=258/258 0x3877c79e15 0 
* 0 
+6 0 32 32
+4 0 32
+4 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=16/32 +38 0 
* 0 
+2 0 16 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
jump=16 0x3877c79c73 0 
* 0 
+13 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c79ee0 0 
* 0 
+6 0 8 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
-4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
+14 0 258 0 0 1 0 0 1
+3 0 258
+4 0 258
+4 0 258 0 0 0 0 0 0 0 0 258
+2 0 258
+3 0 258 0 0 1 0 0 1
+7 0 258
jump=258 0x3877c79d18 0 
* 0 
+78 0 1111 0 1111
+4 0 1111 0 1111
+4 0 1111
+3 0 1111
jump=1111 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=387/406 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+39 0 8 8
+4 0 8
jump=8 0x3877c79d9e 0 
* 0 
+12 0 2413 0 0 1 0 0 1
+7 0 2413
+3 0 2413 0 0 0 0 0 0 0 0 2413 14
jcnd=1550/2413 0x3877c7a0b0 0 
* 0 
+6 0 2373 2373 0 1 0 0 1
+4 0 2373
+3 0 2373
+3 0 2373
+2 0 2373
+4 0 2373
+3 0 2373
+3 0 2373
+2 0 2373
+2 0 2373
+2 0 2373
+2 0 2373 2373
+8 0 2373
+5 0 2373
+5 0 2373
+2 0 2373 0 0 0 0 0 0 0 0 2373
-2 0 1156
+2 0 1156 0 0 0 0 0 0 0 0 1156 1
jcnd=1/1156 +14 0 
* 0 
+2 0 3528
+2 0 3528 0 0 0 0 0 0 0 0 3528 47
jcnd=1635/3528 +64 0 
* 0 
+2 0 1893
+8 0 1893
+3 0 1893
+3 0 1893 0 0 0 0 0 0 0 0 1893 4
jcnd=257/1893 0x3877c79fc0 0 
* 0 
-6 0 1274
+3 0 1274
+3 0 1274 0 0 0 0 0 0 0 0 1274 11
jcnd=849/1274 0x3877c79fc0 0 
* 0 
+2 0 2061
+2 0 2061 2061
+8 0 2061
+2 0 2061 0 0 0 0 0 0 0 0 2061 31
jcnd=1273/2061 -20 0 
* 0 
+2 0 788
+2 0 788
+5 0 788
+3 0 788
+3 0 788
+2 0 788
+2 0 788
+5 0 788 0 0 0 0 0 0 0 0 788
jcnd=1/788 +14 0 
* 0 
+2 0 787
+2 0 787
+4 0 787
+2 0 787
+2 0 787 0 0 0 0 0 0 0 0 787 6
jcnd=725/787 -8 0 
* 0 
-8 0 12951
+4 0 12951
+2 0 12951
+2 0 12951 0 0 0 0 0 0 0 0 12951 851
jcnd=10813/12951 -8 0 
* 0 
-2 0 1635 0 0 1 0 0 1
+2 0 1635 0 0 0 0 0 0 0 0 1635 30
jcnd=1413/1635 -8 0 
* 0 
+2 0 2423 2423 0 0 17 0 0 17
+4 0 2423 0 0 1 0 0 1
+3 0 2423 0 0 0 0 0 0 0 0 2423 1080
jcnd=1267/2423 0x3877c7a1cf 0 
* 0 
+6 0 1156
+2 0 1156
+4 0 1156
+2 0 1156
+2 0 1156
+2 0 1156 0 1156
+8 0 1156
jump=1156 0x3877c79f30 0 
* 0 
+37 0 1106 1106 0 1 0 0 1
+5 0 1106 1106
+4 0 1106
+4 0 1106 1106
+5 0 1106 0 0 0 0 0 0 0 0 1106 1
jcnd=1106/1106 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 41 0 0 1 0 0 1
+7 0 41 0 41
+6 0 41
+3 0 41 0 0 0 0 0 0 0 0 41
jcnd=41/41 0x3877c79ace 0 
* 0 
+16 0 1550 1550
+4 0 1550
+4 0 1550
+2 0 1550
+5 0 1550 1550 0 1 2 0 1 2
+4 0 1550
+3 0 1550 0 0 0 0 0 0 0 0 1550 13
jcnd=1486/1550 0x3877c79f00 0 
* 0 
+6 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64 4
jcnd=24/64 0x3877c79f00 0 
* 0 
+6 0 40
+3 0 40 40
+4 0 40 40
+4 0 40
+3 0 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c7a650 0 
* 0 
+26 0 40 0 0 1 0 0 1
+3 0 40 40
+4 0 40
+3 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40 2
+6 0 40 40
+8 0 40 0 40
+4 0 40 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40 0 1 0 0 1
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 26
jcnd=40/40 0x3877c7a659 0 
* 0 
+6 0 40
+4 0 40 0 0 0 0 0 0 0 0 40 8
jcnd=16/40 0x3877c7a2e3 0 
* 0 
+6 0 24 24
+4 0 24
+7 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+4 0 24
+7 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a285 0 
* 0 
+31 0 1568 0 0 1 0 0 1
+3 0 1568 0 1568
+4 0 1568
jump=1568 0x3877c79b99 0 
* 0 
+36 0 1267 1267 0 1 1 0 1 1
+4 0 1267 1267
+4 0 1267
+3 0 1267 1267
+4 0 1267
+4 0 1267
+3 0 1267
+3 0 1267 1267
+4 0 1267 0 0 0 0 0 0 0 0 1267
+6 0 1267 1267
+4 0 1267 0 0 0 0 0 0 0 0 1267
+6 0 1267 1267 0 1 0 0 1
+8 0 1267 0 1267
+4 0 1267 0 1267
+4 0 1267 0 0 0 0 0 0 0 0 1267 12
jcnd=419/1267 +38 0 
* 0 
+2 0 848 848 0 0 2 0 0 2
+4 0 848
+3 0 848 0 0 0 0 0 0 0 0 848
+2 0 848 848
+5 0 848 0 0 0 0 0 0 0 0 848
+6 0 848 848
+4 0 848 0 848
+4 0 848 848
+4 0 848 0 848
+4 0 848
+4 0 848 0 0 0 0 0 0 0 0 848
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 1246 1246
+4 0 1246 1246 0 1 0 0 1
+4 0 1246 0 0 0 0 0 0 0 0 1246
+6 0 1246
+4 0 1246
+7 0 1246 0 1246 0 0 7 0 0 7
+4 0 1246 0 1246
+4 0 1246 0 1246
+4 0 1246 0 1246
+4 0 1246 0 0 0 0 0 0 0 0 1246 4
jcnd=780/1246 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 780
+7 0 780 0 0 0 0 0 0 0 0 780 4
jcnd=522/780 +18 0 
* 0 
+2 0 265 0 265 0 0 1 0 0 1
+8 0 265 0 265
+8 0 265
+7 0 265 0 265 0 0 2 0 0 2
+4 0 265
+3 0 265
+3 0 265
+4 0 265
+3 0 265
+4 0 265
+3 0 265
+3 0 265
+4 0 265 0 265
+4 0 265 0 265
+4 0 265
jump=265 +71 0 
* 0 
-46 0 1005 0 0 1 0 0 1
+7 0 1005 0 1005
+4 0 1005
+3 0 1005
+3 0 1005
+4 0 1005
+3 0 1005
+4 0 1005
+3 0 1005
+3 0 1005
+4 0 1005 0 1005
+4 0 1005 0 1005 0 0 1 0 0 1
+4 0 1005
jump=1005 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 37
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37 2
jcnd=37/37 +7 0 
* 0 
+7 0 1307
+4 0 1307 0 0 1 0 0 1
+3 0 1307
+3 0 1307 0 1307
cfn=(104)
calls=1307 0x3877c77180 0 
* 0 5228 2614 0 1 0 0 1 0 0 1307
+5 0 1307
+3 0 1307
jump=1307 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1106 0 0 1 0 0 1
+7 0 1106
+2 0 1106
+4 0 1106
+3 0 1106
+3 0 1106 0 1106
+5 0 1106
+3 0 1106
+4 0 1106
+3 0 1106 0 0 1 0 0 1
+4 0 1106
+4 0 1106
+3 0 1106
+4 0 1106 0 1106
+4 0 1106 0 1106 0 0 41 0 0 41
+4 0 1106
+3 0 1106
+3 0 1106 0 1106
cfn=(104)
calls=1106 0x3877c77180 0 
* 0 4424 2212 0 0 0 0 0 0 0 1106 2
+5 0 1106
+3 0 1106
jump=1106 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 40 40 0 1 0 0 1
+4 0 40
jump=40 0x3877c7a10e 0 
* 0 
+5 0 40 40
+5 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 2578 0 2578 1 0 0 1
+5 0 2578 0 2578
+5 0 2578
+3 0 2578 0 2578
+5 0 2578
+4 0 2578 2578 0 0 1 0 0 1
+7 0 2578 2578 0 0 1 0 0 1
+3 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578 2
+6 0 2578 2578 0 0 1 0 0 1
+7 0 2578 2578 0 1 1 0 1 1
+4 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578
+2 0 2578 2578 0 0 1 0 0 1
+3 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578
jcnd=2578/2578 +97 0 
* 0 
+18 0 2578
+3 0 2578
+3 0 2578 0 2578
cfn=(38)
calls=2578 0x3877c79a00 0 
* 0 593412 74599 88624 47 34 75 47 34 75 88752 3595
+5 0 2578
+3 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578
+2 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578
+2 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578 31
+2 0 2578 2578
+7 0 2578 0 0 0 0 0 0 0 0 2578
jcnd=2578/2578 +13 0 
* 0 
+13 0 2578 0 2578
+2 0 2578 0 0 0 0 0 0 0 0 2578 14
+6 0 2578
+3 0 2578 2578
+4 0 2578 2578
+5 0 2578 2578
+5 0 2578
+4 0 2578 2578
+1 0 2578 0 0 1 0 0 1
+5 0 2578 2578 0 0 1 0 0 1
+7 0 2578 0 0 0 0 0 0 0 0 2578
jcnd=2578/2578 +14 0 
* 0 
+14 0 2578 0 2578 1 0 0 1
+3 0 2578 0 0 0 0 0 0 0 0 2578
+6 0 2578
jump=2578 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2578 0 2578 1 0 0 1
+2 0 2578
+3 0 2578
+3 0 2578 0 2578
+2 0 2578
+3 0 2578 0 2578
+1 0 2578
+3 0 2578 0 2578
+1 0 2578
+3 0 2578
+4 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578
+6 0 2578
+4 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578 7
jcnd=10/2578 0x3877c838d1 0 
* 0 
+2 0 2568
+3 0 2568
+3 0 2568
+3 0 2568
+3 0 2568
+3 0 2568 0 0 0 0 0 0 0 0 2568
jcnd=2568/2568 +41 0 
* 0 
+41 0 2568 0 0 1 0 0 1
+3 0 2568 0 0 0 0 0 0 0 0 2568
jcnd=2568/2568 0x3877c839c0 0 
* 0 
+24 0 2568
+3 0 2568
+4 0 2568
+3 0 2568
+3 0 2568
+3 0 2568
+3 0 2568
+3 0 2568 0 0 0 0 0 0 0 0 2568 1280
jcnd=1292/2568 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1286
+10 0 1286 1286 0 0 1 0 0 1
+3 0 1286
+4 0 1286 0 1286
+3 0 1286
+4 0 1286
+4 0 1286 0 0 0 0 0 0 0 0 1286
jcnd=1286/1286 -18 0 
* 0 
-18 0 3914 3914
+3 0 3914
+4 0 3914 0 3914
+3 0 3914
+4 0 3914
+4 0 3914 0 0 0 0 0 0 0 0 3914 11
jcnd=2628/3914 -18 0 
* 0 
+2 0 2578
+4 0 2578
+3 0 2578 2578
+1 0 2578 2578
+1 0 2578 2578
+2 0 2578 2578 0 1 0 0 1
+2 0 2578 2578
0x3877c839c0 0 2568 0 0 1 0 0 1
+3 0 2568
+3 0 2568
+3 0 2568
+4 0 2568 0 2568 0 0 1 0 0 1
cfn=(284)
calls=2568 0x3877c89b20 0 
* 0 1109310 417028 411892 6 1 153 6 1 153 52934 2100 2568 319
+5 0 2568
jump=2568 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2578 2578 0 1 1 0 1 1
+7 0 2578 2578 0 0 1 0 0 1
+3 0 2578
+3 0 2578 0 0 1 0 0 1 0 0 2578
+6 0 2578
+3 0 2578 0 0 0 0 0 0 0 0 2578 2
+6 0 2578 2578
+4 0 2578
+4 0 2578
+2 0 2578 0 0 0 0 0 0 0 0 2578 2
+2 0 2578
+2 0 2578
+7 0 2578 0 0 0 0 0 0 0 0 2578
jcnd=2578/2578 +14 0 
* 0 
+14 0 2578
+2 0 2578
cfn=(170)
calls=2578 0x3877c78650 0 
* 0 254116 67411 38589 21 3 0 21 3 0 61538 1186

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 9
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 35523382 14903665 8376188 245 138 276 245 138 276 896644 10175 15458 319
