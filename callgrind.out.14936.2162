version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2162


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2634781232 - 2638966106
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2722 0 0 1 0 0 1
+3 0 2722 0 0 0 0 0 0 0 0 2722
+2 0 2722
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2722 0x3877c7b8b0 0 
* 0 310402 79801 41085 23 4 0 23 4 0 76170 1237
* 0 2722 2722 0 1 1 0 1 1 0 0 0 2722

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2722 0 2722 1 0 0 1
+1 0 2722
+5 0 2722
+3 0 2722 0 2722
+1 0 2722
+4 0 2722 0 0 1 0 0 1
+3 0 2722
+4 0 2722
+3 0 2722 0 2722 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2722 0x3877c7aa50 0 
* 0 744039 109281 110767 51 43 75 51 43 75 121203 3847
* 0 2722 2722 0 1 1 0 1 1 0 0 0 2722
+5 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722
jcnd=2722/2722 +96 0 
* 0 
+96 0 2722 0 0 1 0 0 1
+4 0 2722 2722
+1 0 2722 2722
+1 0 2722 2722

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 676 0 676 1 0 0 1
+1 * 676
+3 * 676
+4 * 676 0 676
+4 * 676 0 676
+4 +1 676 676
+4 * 676
+3 * 676 0 676
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=676 0x402d74 645 
* * 8788 4056 1352
+5 * 676
+3 * 676 0 676
+3 +1 676 676
+6 * 676 0 676
+3 * 676 676
+6 * 676 0 676
+3 +1 676 676
+6 * 676 0 676 1 0 0 1
+3 * 676 676
+6 * 676 0 676
+3 +2 676 0 676
+7 * 676
jump=676 +86 * 
* * 
+2 +1 229502 229502
+3 * 229502
+3 * 229502 229502
+4 * 229502
+3 * 229502
+3 * 229502 0 229502
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=229502 0x402d9a 770 
* * 2524522 1147510 688506
+5 * 229502 229502
+4 * 229502 229502
+5 * 229502
+4 * 229502 0 229502
+5 +1 229502 229502
+3 * 229502
+3 * 229502 229502
+4 * 229502
+3 * 229502
+3 * 229502 0 229502
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=229502 0x402dba 770 
* * 2524522 1147510 688506 1 0 0 1
+5 * 229502 229502
+2 * 229502
+4 * 229502 229502
+5 * 229502
+4 * 229502 0 229502
+5 -2 229502 0 229502
+4 * 229502 229502
+3 * 229502
+3 * 229502 229502
+3 * 229502 0 0 0 0 0 0 0 0 229502 677
jcnd=228826/229502 -93 +1 
* * 
-9 * 676 676 0 1 0 0 1
+3 * 676
+3 * 676 676
+3 * 676 0 0 0 0 0 0 0 0 676
jcnd=676/676 -93 +1 
* * 
+2 +4 676 676
+3 * 676
+3 * 676
+4 * 676 676 0 1 0 0 1
+5 * 676
+4 * 676
+3 * 676 0 676
+5 +1 676 676
+3 * 676
+3 * 676
+4 * 676 676
+5 * 676
+4 * 676
+3 * 676 0 676
+5 +1 676 0 676
+7 * 676
jump=676 0x4016ee * 
* * 
+2 +1 229502 229502
+3 * 229502
+3 * 229502 229502
+4 * 229502
+3 * 229502 0 0 1 0 0 1
+3 * 229502 0 229502
cfi=(2)
cfn=(146)
calls=229502 0x402dba 770 
* * 2524522 1147510 688506
+5 * 229502 229502
+2 * 229502
+4 * 229502 229502
+5 * 229502 0 229502
+5 +1 229502 229502
+3 * 229502
+3 * 229502 229502
+4 * 229502
+3 * 229502
+3 * 229502 0 229502
cfi=(2)
cfn=(144)
calls=229502 0x402d9a 770 
* * 2524522 1147510 688506
+5 * 229502 229502
+4 * 229502 229502
+5 * 229502 0 229502
+5 +1 229502 229502
+5 * 229502 229502
+5 * 229502 229502
+5 * 229502
+4 * 229502 0 229502
+5 +1 229502 229502
+5 * 229502 229502
+5 * 229502 229502
+5 * 229502
+4 * 229502 0 229502
+5 -4 229502 0 229502
+4 * 229502 229502
+3 * 229502
+3 * 229502 229502
+3 * 229502 0 0 0 0 0 0 0 0 229502 677
jcnd=228826/229502 0x401672 +1 
* * 
-9 * 676 676 0 1 0 0 1
+3 * 676
+3 * 676 676
+3 * 676 0 0 0 0 0 0 0 0 676
jcnd=676/676 0x401672 +1 
* * 
+6 +6 676 676 0 1 0 0 1
+5 * 676 676
+5 * 676 0 676
+5 +2 676 676
+3 +1 676 0 676
+3 * 676 676
+5 * 676 676
+1 * 676 676

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 676
+7 * 676
+7 * 676
+3 * 676
+3 * 676 0 676
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=676 0x4030b2 310 
* * 874401 269817 256783 68 19 16 68 19 16 52945 1869 2702 336
+5 * 676
+7 * 676
+7 * 676
+3 * 676
+3 * 676 0 676
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=676 0x402ff4 310 
* * 868233 266401 251883 38 10 155 38 10 155 51545 2553 2702
+5 * 676 0 0 1 0 0 1
+7 * 676
+7 * 676
+3 * 676
+3 * 676 0 676
cfn=(142)
calls=676 0x401585 -52 
* * 23912148 10573992 5519540 8 0 0 8 0 0 460356 1354
+5 * 676 0 676
+8 * 676 676
+6 * 676 0 676
+6 * 676
+7 * 676
+3 * 676 0 676
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=676 0x402df4 414 
* * 167936 52628 37223 33 5 0 33 5 0 18586 574 1352
+5 * 676
+7 * 676
+3 * 676 0 676 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=676 0x402e74 414 
* * 180991 57336 41323 8 1 0 8 1 0 21982 43 1352
+5 +2 676
+7 * 676
+7 * 676
+3 * 676
+3 * 676 0 676
cfi=(2)
cfn=(4)
calls=676 0x4030b2 310 
* * 873969 269782 256663 2 0 1 2 0 1 52900 1121 2702
+5 * 676
+7 * 676
+7 * 676
+3 * 676
+3 * 676 0 676
cfi=(2)
cfn=(80)
calls=676 0x402ff4 310 
* * 867254 266340 251735 0 0 2 0 0 2 51379 1769 2702
+5 * 676 676
+6 * 676 0 0 1 0 0 1
+7 * 676
+7 * 676 0 676
+6 * 676 676
+8 * 676
+3 * 676
+3 * 676 0 676
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=676 0x401719 -33 
* * 11055980 4604912 2534662 4 0 0 4 0 0 230178 677
+5 * 676 0 676
+8 * 676 676
+6 * 676 0 676
+6 * 676
+7 * 676 0 0 1 0 0 1
+3 * 676 0 676
cfi=(2)
cfn=(148)
calls=676 0x402df4 414 
* * 167936 52628 37223 0 0 0 0 0 0 18586 566 1352
+5 * 676
+7 * 676
+3 * 676 0 676
cfi=(2)
cfn=(178)
calls=676 0x402e74 414 
* * 180991 57336 41323 0 0 0 0 0 0 21982 35 1352
+5 +2 676 676
+7 * 676
+3 * 676 0 676
cfi=(2)
cfn=(2)
calls=676 0x402d74 645 
* * 8788 4056 1352
+5 * 676 676
+6 * 676
+3 * 676
+3 * 676
+3 * 676 676
+7 * 676
+3 * 676 0 0 1 0 0 1
+3 * 676 0 676
cfi=(2)
cfn=(144)
calls=676 0x402d9a 770 
* * 7436 3380 2028
+5 * 676
+3 * 676
+7 * 676
+3 * 676
+3 * 676 0 676
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=676 0x402eda 901 
* * 58624 22152 16852 48 64 13 48 64 13 2504 114 53
+5 +1 676 676
+7 * 676
+3 * 676 0 676
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=676 0x402f54 645 
* * 8788 4056 1352 0 1 0 0 1
+5 * 676 676
+6 * 676
+3 * 676
+3 * 676
+3 * 676 676
+7 * 676 0 0 1 0 0 1
+3 * 676
+3 * 676 0 676
cfi=(2)
cfn=(146)
calls=676 0x402dba 770 
* * 7436 3380 2028
+5 * 676
+3 * 676
+7 * 676
+3 * 676
+3 * 676 0 676
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=676 0x402f7a 901 
* * 56964 21878 16622 22 42 90 22 42 90 2136 74 53
+5 +1 676 676
+7 * 676
+3 * 676 0 676
cfi=(2)
cfn=(10)
calls=676 0x402f54 645 
* * 8788 4056 1352
+5 * 676 676
+6 * 676
+3 * 676
+3 * 676
+3 * 676 676 0 1 0 0 1
+7 * 676
+3 * 676
+3 * 676 0 676
cfi=(2)
cfn=(146)
calls=676 0x402dba 770 
* * 7436 3380 2028
+5 * 676 676
+2 * 676
+4 * 676 676
+8 * 676 676
+8 * 676 0 676
+8 +1 676 676
+7 * 676
+3 * 676 0 676
cfi=(2)
cfn=(2)
calls=676 0x402d74 645 
* * 8788 4056 1352
+5 * 676 676 0 1 0 0 1
+6 * 676
+3 * 676
+3 * 676
+3 * 676 676
+7 * 676
+3 * 676
+3 * 676 0 676
cfi=(2)
cfn=(144)
calls=676 0x402d9a 770 
* * 7436 3380 2028
+5 * 676 676
+4 * 676 676
+8 * 676
+4 * 676 676
+8 * 676
+3 * 676 0 676
+8 +2 676 0 676
+7 -12 676 676
+8 * 676 676
+7 * 676 0 0 0 0 0 0 0 0 676 1
jcnd=1/676 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 676
+7 * 676
+3 * 676 0 676
cfi=(2)
cfn=(2)
calls=676 0x402d74 645 
* * 8788 4056 1352 2 0 1 2 0 1
+5 * 676
+3 * 676 676
+7 * 676
+3 * 676 0 676
cfi=(2)
cfn=(2)
calls=676 0x402d74 645 
* * 8788 4056 1352 0 1 0 0 1
+5 * 676
+3 * 676 0 0 0 0 0 0 0 0 676 1
+2 * 676 0 0 1 0 0 1
+5 * 676
jump=676 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 676
+2 * 676 0 0 0 0 0 0 0 0 676
jcnd=676/676 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 676 0 676
+1 * 676
+3 * 676
+4 * 676 0 676
+4 * 676 0 676
+4 * 676 0 676
+5 +1 676 676
+4 * 676
+3 * 676 0 676
cfi=(2)
cfn=(2)
calls=676 0x402d74 645 
* * 8788 4056 1352
+5 * 676
+3 * 676 0 676
+3 +1 676 676 0 1 0 0 1
+6 * 676 0 676
+3 * 676 676
+6 * 676 0 676
+3 +2 676 0 676
+7 * 676
jump=676 +86 * 
* * 
+2 +1 229502 229502
+3 * 229502
+3 * 229502 229502
+4 * 229502
+3 * 229502
+3 * 229502 0 229502
cfi=(2)
cfn=(144)
calls=229502 0x402d9a 770 
* * 2524522 1147510 688506
+5 * 229502 229502
+4 * 229502 229502
+5 * 229502
+4 * 229502 0 229502
+5 +1 229502 229502
+3 * 229502
+3 * 229502 229502
+4 * 229502
+3 * 229502
+3 * 229502 0 229502
cfi=(2)
cfn=(146)
calls=229502 0x402dba 770 
* * 2524522 1147510 688506
+5 * 229502 229502
+2 * 229502
+4 * 229502 229502
+5 * 229502
+4 * 229502 0 229502
+5 -2 229502 0 229502
+4 * 229502 229502
+3 * 229502
+3 * 229502 229502
+3 * 229502 0 0 0 0 0 0 0 0 229502 677
jcnd=228826/229502 -93 +1 
* * 
-9 * 676 676 0 1 0 0 1
+3 * 676
+3 * 676 676
+3 * 676 0 0 0 0 0 0 0 0 676
jcnd=676/676 -93 +1 
* * 
+2 +4 676 676
+3 * 676
+3 * 676 0 0 1 0 0 1
+4 * 676 676
+5 * 676
+4 * 676
+3 * 676 0 676
+5 +1 676 676
+3 * 676
+3 * 676
+4 * 676 676
+5 * 676
+4 * 676
+3 * 676 0 676
+5 +1 676 676
+5 * 676 676
+5 * 676 676
+5 * 676 0 0 1 0 0 1
+4 * 676
+3 * 676 0 676
+5 +2 676 676
+3 +1 676 0 676
+3 * 676 676
+5 * 676 676
+1 * 676 676

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352 1 0 0 1
+4 +1 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1352 0x4049d4 -35 
* * 8112 2704 4056 1 0 0 1
+5 * 1352 1352
+1 * 1352 1352

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1352 0x404520 -35 
* * 6760 2704 2704
+5 * 1352 1352
+1 * 1352 1352

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1352 0x404a28 -35 
* * 8112 2704 4056 1 0 1 1 0 1
+5 * 1352 1352
+1 * 1352 1352

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1352 0x4044cc -35 
* * 6760 2704 2704
+5 * 1352 1352
+1 * 1352 1352

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 676 0 676
+1 * 676
+3 * 676
+4 * 676 0 676
+4 * 676 0 676
+4 * 676 0 676
+4 +1 676 676
+4 * 676 676
+4 * 676 676
+4 * 676
+3 * 676
+3 * 676 0 676
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=676 0x403df2 -87 
* * 16224 5408 6084 0 43 3 0 43 3 676 2
+5 * 676 676
+1 * 676 676

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352 0 1352
+4 * 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 676 0 676
+1 * 676
+3 * 676
+4 * 676 0 676
+4 * 676 0 676
+4 * 676 0 676
+4 +1 676 676
+4 * 676 676
+4 * 676 676
+4 * 676
+3 * 676
+3 * 676 0 676
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=676 0x40406a -87 
* * 16224 5408 6084 0 42 34 0 42 34 676
+5 * 676 676
+1 * 676 676

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+4 * 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1442 0 1442
+1 * 1442
+3 * 1442 0 1442
+4 +1 1442 1442
+4 * 1442 1442
+1 * 1442 1442

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2704 0 2704 1 0 0 1
+1 * 2704
+3 * 2704 0 2704
+4 +1 2704 2704 0 1 0 0 1
+4 * 2704 2704
+1 * 2704 2704

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1442 0 1442
+1 * 1442
+3 * 1442 0 1442 0 0 1 0 0 1
+4 +1 1442 1442
+4 * 1442 1442
+1 * 1442 1442

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2704 0 2704 1 0 0 1
+1 * 2704
+3 * 2704
+4 * 2704 0 2704
+4 +1 2704
+4 * 2704
+3 * 2704 0 2704
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2704 0x404ffe 790 
* * 16224 8112 5408 1 0 0 1
+5 * 2704 2704
+3 * 2704 2704
+1 * 2704 2704

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2704 0 2704 1 0 0 1
+1 * 2704
+3 * 2704 0 2704
+4 +1 2704 2704
+4 * 2704 2704
+1 * 2704 2704

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2704 0 2704 1 0 0 1
+1 * 2704
+3 * 2704
+4 * 2704 0 2704
+4 +1 2704
+4 * 2704
+3 * 2704 0 2704 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2704 0x40500c 790 
* * 16224 8112 5408 1 0 0 1
+5 * 2704 2704
+3 * 2704 2704
+1 * 2704 2704

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fl=(5)
fn=(28)
0x404992 113 1379 0 1379 1 0 0 1
+1 * 1379
+3 * 1379 0 1379
+4 +1 1379
+10 * 1379 1379
+1 * 1379 1379

fn=(176)
0x4044cc 86 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(224)
0x403df2 129 676 0 676
+1 * 676
+3 * 676
+4 * 676 0 676
+4 * 676 0 676
+4 * 676 0 676
+4 +1 676 676
+4 * 676
+3 * 676
+5 * 676 0 676
cfi=(16)
cfn=(226)
calls=676 0x402d61 -20 
* * 4732 2028 2028
+5 * 676
+3 * 676 0 0 0 0 0 0 0 0 676 2
+2 * 676 676
+4 * 676 676 0 0 43 0 0 43
+2 * 676 0 676 0 0 3 0 0 3
+2 * 676 676
+1 * 676 676

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1361 0 1361
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 +1 1361 1361
+4 * 1361
+3 * 1361 0 1361
cob=(5)
cfi=(8)
cfn=(164)
calls=1361 0x387e4bb2f0 0 
* * 147562 36540 16439 23 4 0 23 4 0 36043 1148 1361
* * 1361 1361 0 1 1 0 1 1 0 0 0 1361
+5 * 1361 1361
+1 * 1361 1361

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1361 0 1361
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 +1 1361 1361
+4 * 1361
+3 * 1361 0 1361
cob=(5)
cfi=(8)
cfn=(164)
calls=1361 0x387e4bb2f0 0 
* * 173728 45983 24646 2 1 0 2 1 0 42849 89 1361
* * 1361 1361 0 0 0 0 0 0 0 0 0 1361
+5 * 1361 1361
+1 * 1361 1361

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1361 0 1361 1 0 0 1
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 +2 1361 1361
+4 * 1361
+3 * 1361 0 1361
cfn=(102)
calls=1361 0x4048de +12 
* * 8166 2722 2722 1 0 0 1
+5 * 1361 1361
+4 * 1361 0 0 1 0 0 1
+3 * 1361
+2 * 1361 0 0 0 0 0 0 0 0 1361
jcnd=1361/1361 +7 +3 
* * 
+7 +3 1361 1361
+4 * 1361
+4 * 1361
+3 * 1361 0 1361
cob=(5)
cfi=(8)
cfn=(32)
calls=1361 0x387e4bd0b0 0 
* * 388212 56806 54671 33 30 61 33 30 61 60693 2617 1361
* * 1361 1361 0 0 0 0 0 0 0 0 0 1361
+5 +1 1361 1361
+1 * 1361 1361

fn=(18)
0x404a28 81 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352 0 1352 0 0 1 0 0 1
+4 * 1352 0 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(92)
0x4049d4 81 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(196)
0x404520 86 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1361 0 1361 1 0 0 1
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 * 1361 0 1361 1 0 0 1
+4 +2 1361 1361
+4 * 1361
+3 * 1361 0 1361
cfn=(28)
calls=1361 0x404992 +12 
* * 8166 2722 2722 1 0 0 1
+5 * 1361 1361
+4 * 1361
+3 * 1361
+2 * 1361 0 0 0 0 0 0 0 0 1361
jcnd=1361/1361 +7 +3 
* * 
+7 +3 1361 1361
+4 * 1361
+4 * 1361
+3 * 1361 0 1361
cob=(5)
cfi=(8)
cfn=(32)
calls=1361 0x387e4bd0b0 0 
* * 399379 63363 64262 22 14 15 22 14 15 63232 1230 1361
* * 1361 1361 0 1 1 0 1 1 0 0 0 1361
+5 +1 1361 1361
+1 * 1361 1361

fn=(102)
0x4048de 113 1379 0 1379 1 0 0 1
+1 * 1379
+3 * 1379 0 1379
+4 +1 1379
+10 * 1379 1379
+1 * 1379 1379

fn=(266)
0x40406a 129 676 0 676
+1 * 676
+3 * 676
+4 * 676 0 676
+4 * 676 0 676
+4 * 676 0 676
+4 +1 676 676
+4 * 676
+3 * 676
+5 * 676 0 676
cfi=(16)
cfn=(226)
calls=676 0x402d61 -20 
* * 4732 2028 2028
+5 * 676
+3 * 676 0 0 0 0 0 0 0 0 676
+2 * 676 676
+4 * 676 676 0 0 42 0 0 42
+2 * 676 0 676 0 0 34 0 0 34
+2 * 676 676
+1 * 676 676

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +2 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1352 0x404484 107 
* * 984830 342752 334644 25 3 4 25 3 4 40244 1808 2700 336
+5 * 1352 1352
+1 * 1352 1352

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +2 1352 1352 0 1 0 0 1
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1352 0x404a36 450 
* * 946974 329232 321124 24 3 4 24 3 4 40244 1808 2700 336
+5 * 1352 1352
+1 * 1352 1352

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +2 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1352 0x40439c 107 
* * 984830 342752 334644 7 1 103 7 1 103 40244 1792 2700
+5 * 1352 1352
+1 * 1352 1352

fn=(116)
0x40439c 107 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +10 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1352 0x4047d7 -26 
* * 965902 335992 327884 7 1 103 7 1 103 40244 1792 2700
+5 +1 1352 1352
+1 * 1352 1352

fn=(118)
0x4047d7 91 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +2 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1352 0x4049e2 450 
* * 946974 329232 321124 7 1 103 7 1 103 40244 1792 2700
+5 * 1352 1352
+1 * 1352 1352

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(232)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 49 1 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fn=(50)
0x404484 107 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +10 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(52)
calls=1352 0x404829 -26 
* * 965902 335992 327884 25 3 4 25 3 4 40244 1808 2700 336
+5 +1 1352 1352
+1 * 1352 1352

fn=(270)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 49 2 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fn=(234)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fl=(2)
fn=(4)
0x4030b2 310 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352 0 1352
+2 * 1352 0 1352
+2 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352 1 0 0 1
+4 * 1352 0 1352
+4 +2 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=1352 0x403b08 117 
* * 8112 4056 2704 1 0 1 1 0 1
+5 * 1352
+3 * 1352 0 1352
cfi=(3)
cfn=(8)
calls=1352 0x403afa -88 
* * 8112 4056 2704 1 0 0 1
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(10)
calls=1352 0x402f54 645 
* * 17576 8112 2704 1 1 0 1 1
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=1352 0x403b16 134 
* * 566148 123839 117962 32 15 12 32 15 12 65601 1182 2704
+5 +4 1352 1352 0 1 0 0 1
+4 * 1352
+3 * 1352 0 1352
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=1352 0x40333c 113 
* * 8112 4056 2704 2 0 0 2
+5 * 1352
+3 * 1352 1352
+4 * 1352 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=1352 0x403ba4 565 
* * 33800 13520 10816 3 0 0 3
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=1352 0x403b74 547 
* * 33800 13520 10816
+5 * 1352
+3 * 1352
+3 * 1352
+3 * 1352
+3 * 1352 0 1352 1 0 0 1
cfi=(11)
cfn=(48)
calls=1352 0x403bd5 -60 
* * 1005110 349512 342756 26 3 4 26 3 4 40244 1808 2700 336
+5 -3 1352 1352
+4 * 1352 0 1352
+4 * 1352
jump=1352 +28 +4 
* * 
+28 +4 1352
+4 * 1352 1352
+1 * 1352 1352
+2 * 1352 1352
+2 * 1352 1352
+1 * 1352 1352

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+4 * 1352 0 1352
+4 * 1352
+4 * 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1352 0x404380 726 
* * 13520 6760 5408 1 0 0 1
+5 * 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(178)
0x402e74 414 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352 1 0 0 1
+4 +2 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(40)
calls=1352 0x40333c 113 
* * 8112 4056 2704
+5 * 1352
+3 * 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+3 -1 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1352 0x40334a 148 
* * 41912 13520 16224 2 0 0 2
+5 +1 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=1352 0x4032ca 159 
* * 279510 84928 55606 4 1 0 4 1 0 43964 78 2704
+5 * 1352
jump=1352 +28 * 
* * 
+28 * 1352 0 0 1 0 0 1
+4 * 1352 1352
+1 * 1352 1352
+1 * 1352 1352

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1361 0 1361 1 0 0 1
+1 * 1361 0 0 1 0 0 1
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 0 1361 1361
+5 0 1361 0 0 0 0 0 0 0 0 1361
+2 0 1361 1361
+4 0 1361 1361
+4 0 1361
+5 0 1361
+3 0 1361
+3 0 1361 0 1361
fi=(6) ???
cfi=(5)
cfn=(100)
calls=1361 0x40461a 99 
* 0 423598 67694 65559 36 30 61 36 30 61 62054 2617 2722
+5 0 1361
fi=(6)
jump=1361 +7 0 
* 0 
+7 0 1361 1361
+1 0 1361 1361

fn=(144)
0x402d9a 770 689858 0 689858
+1 * 689858
+3 * 689858 0 689858
+4 * 689858 0 689858
+4 +1 689858 689858
+4 * 689858 689858
+3 * 689858 689858
+4 * 689858
+4 * 689858
+3 * 689858 689858
+1 * 689858 689858

fn=(146)
0x402dba 770 689858 0 689858
+1 * 689858
+3 * 689858 0 689858 1 0 0 1
+4 * 689858 0 689858
+4 +1 689858 689858
+4 * 689858 689858
+3 * 689858 689858
+4 * 689858
+4 * 689858
+3 * 689858 689858
+1 * 689858 689858

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfi=(4)
cfn=(194)
calls=1352 0x403d7e +42 
* * 18928 6760 6760 1 0 0 1
+5 * 1352 1352
+1 * 1352 1352

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(186)
0x4032ca 159 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352
+4 +2 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352 1352
+4 * 1352 1352
+3 * 1352
+3 * 1352
+3 * 1352
+4 * 1352
+3 * 1352 1352
+4 * 1352 1352
+3 -1 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1352 0x403d98 +11 
* * 210558 59240 38030 2 1 0 2 1 0 43964 78 2704
+5 +1 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(192)
calls=1352 0x403296 -82 
* * 31096 10816 10816 1 0 0 1
+5 * 1352
jump=1352 +28 * 
* * 
+28 * 1352
+4 * 1352 1352
+1 * 1352 1352
+1 * 1352 1352

fn=(2)
0x402d74 645 5444 0 5444 1 0 0 1
+1 * 5444
+3 * 5444 0 5444 0 0 1 0 0 1
+4 +1 5444 5444
+4 * 5444 5444 0 1 1 0 1 1
+4 * 5444
+3 * 5444 5444
+4 * 5444 5444
+3 * 5444
+3 * 5444
+3 * 5444
+4 * 5444 5444
+1 * 5444 5444

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +2 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1352 0x404236 -14 
* * 453932 80575 80106 26 15 8 26 15 8 65601 1182 2704
+5 * 1352 1352
+4 * 1352 0 1352
+3 +1 1352 1352
+4 * 1352 1352 0 1 0 0 1
+3 * 1352 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+3 * 1352 1352
+4 * 1352
+4 * 1352
+3 * 1352 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+1 * 1352 1352

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +2 1352 1352
+4 * 1352 1352 0 1 0 0 1
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(96)
calls=1352 0x403fbe -14 
* * 441049 73717 70278 16 9 54 16 9 54 62680 2530 2704
+5 * 1352 1352
+4 * 1352 0 1352
+3 +1 1352 1352
+4 * 1352 1352
+3 * 1352 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+3 * 1352 1352
+4 * 1352
+4 * 1352
+3 * 1352 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+1 * 1352 1352

fn=(244)
0x402f7a 901 676 0 676
+1 * 676
+3 * 676 0 0 1 0 0 1
+4 * 676 0 676
+4 * 676 0 676
+4 +2 676 676
+4 * 676 676
+4 * 676 676
+4 * 676 676
+4 * 676
+3 * 676 0 0 0 0 0 0 0 0 676
jcnd=9/676 +51 +10 
* * 
+2 +3 667 667
+4 * 667 667
+4 * 667 667
+4 -1 667 667
+4 * 667
+3 * 667
+3 * 667 0 667
cfi=(3)
cfn=(264)
calls=667 0x4036b1 215 
* * 25346 8671 9338 0 42 29 0 42 29 667
+5 +2 667 667
+4 * 667 667
+4 * 667
+4 * 667 667
+4 * 667 0 667
+4 * 667
jump=667 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 13871 4374 3841 21 0 61 21 0 61 793 74 53
+5 +2 676 676
+1 * 676 676

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40)
0x40333c 113 2731 0 2731 1 0 0 1
+1 * 2731
+3 * 2731 0 2731 1 0 0 1
+4 +1 2731 2731
+4 * 2731 2731
+1 * 2731 2731

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+3 * 1352 0 1352
+4 * 1352
+4 * 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(10)
cfn=(110)
calls=1352 0x404380 726 
* * 13520 6760 5408
+5 * 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(148)
0x402df4 414 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352 1 0 0 1
+4 +2 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1352 0x40325e 113 
* * 8112 4056 2704
+5 * 1352
+3 * 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+3 -1 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1352 0x40326c 148 
* * 41912 13520 16224 4 0 0 4
+5 +1 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1352 0x4031ec 159 
* * 253400 75512 47406 27 5 0 27 5 0 37172 1140 2704
+5 * 1352
jump=1352 +28 * 
* * 
+28 * 1352 0 0 1 0 0 1
+4 * 1352 1352
+1 * 1352 1352
+1 * 1352 1352

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1361 0 1361 1 0 0 1
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 +2 1361 1361
+5 * 1361 0 0 0 0 0 0 0 0 1361
+2 +1 1361 1361
+4 * 1361 1361
+4 * 1361 1361
+4 * 1361
+3 * 1361
+3 * 1361 0 1361
cfi=(5)
cfn=(160)
calls=1361 0x4044d6 -65 
* * 163894 41984 23244 24 5 0 24 5 0 36043 1148 2722
+5 +1 1361 1361
+1 * 1361 1361

fn=(12)
0x403b16 134 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1352 0x4043ca -45 
* * 48672 17576 18928 4 0 4 4 0 4
+5 +1 1352 1352 0 1 0 0 1
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(20)
calls=1352 0x404412 +43 
* * 487732 96799 89570 27 15 8 27 15 8 65601 1182 2704
+5 * 1352
jump=1352 +28 * 
* * 
+28 * 1352
+4 * 1352 1352
+1 * 1352 1352
+1 * 1352 1352

fn=(14)
0x4043ca 90 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352
+4 * 1352 0 1352 0 0 1 0 0 1
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(4)
cfn=(16)
calls=1352 0x404804 +24 
* * 24336 8112 9464 2 0 1 2 0 1
+5 * 1352 1352
+4 * 1352 0 1352 0 0 2 0 0 2
+7 * 1352 1352
+4 * 1352 0 1352 1 0 0 1
+8 * 1352 1352
+4 * 1352 0 1352
+8 +1 1352 1352
+1 * 1352 1352

fn=(80)
0x402ff4 310 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352 0 1352
+2 * 1352 0 1352
+2 * 1352 0 1352
+1 * 1352 0 0 1 0 0 1
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +2 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(82)
calls=1352 0x4039fc 117 
* * 8112 4056 2704 2 0 0 2
+5 * 1352
+3 * 1352 0 1352
cfi=(3)
cfn=(84)
calls=1352 0x4039ed -88 
* * 8112 4056 2704
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(2)
calls=1352 0x402d74 645 
* * 17576 8112 2704
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352
+3 * 1352 0 1352 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1352 0x403a0a 134 
* * 553265 116981 108134 23 9 54 23 9 54 62680 2530 2704
+5 +4 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(106)
calls=1352 0x40325e 113 
* * 8112 4056 2704 1 0 0 1
+5 * 1352
+3 * 1352 1352
+4 * 1352 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(108)
calls=1352 0x403a98 565 
* * 33800 13520 10816 2 0 0 2
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(112)
calls=1352 0x403a68 547 
* * 33800 13520 10816
+5 * 1352
+3 * 1352
+3 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(11)
cfn=(114)
calls=1352 0x403ac9 -60 
* * 1005110 349512 342756 7 1 103 7 1 103 40244 1792 2700
+5 -3 1352 1352
+4 * 1352 0 1352
+4 * 1352
jump=1352 +28 +4 
* * 
+28 +4 1352
+4 * 1352 1352
+1 * 1352 1352
+2 * 1352 1352
+2 * 1352 1352
+1 * 1352 1352

fn=(188)
0x403d98 171 1361 0 1361 1 0 0 1
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 +2 1361 1361
+5 * 1361 0 0 0 0 0 0 0 0 1361 9
+2 +1 1361 1361
+4 * 1361 1361
+4 * 1361 1361
+4 * 1361
+3 * 1361
+3 * 1361 0 1361
cfi=(5)
cfn=(190)
calls=1361 0x40452a -65 
* * 190060 51427 31451 2 1 0 2 1 0 42849 89 2722
+5 +1 1361 1361
+1 * 1361 1361

fn=(22)
0x404236 167 1361 0 1361 1 0 0 1
+1 * 1361
+3 * 1361
+4 * 1361 0 1361 1 0 0 1
+4 * 1361 0 1361
+4 0 1361 1361
+5 0 1361 0 0 0 0 0 0 0 0 1361
+2 0 1361 1361
+4 0 1361 1361
+4 0 1361
+5 0 1361
+3 0 1361
+3 0 1361 0 1361
fi=(6)
cfi=(5)
cfn=(26)
calls=1361 0x404730 99 
* 0 434765 74251 75150 26 15 15 26 15 15 64593 1230 2722
+5 0 1361
fi=(6)
jump=1361 +7 0 
* 0 
+7 0 1361 1361
+1 0 1361 1361

fn=(42)
0x403ba4 565 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+4 * 1352 0 1352
+4 * 1352
+4 * 1352 0 0 1 0 0 1
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1352 0x404468 726 
* * 13520 6760 5408 1 0 0 1
+5 * 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(46)
0x403b74 547 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+3 * 1352 0 1352
+4 * 1352
+4 * 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfi=(10)
cfn=(44)
calls=1352 0x404468 726 
* * 13520 6760 5408
+5 * 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(86)
0x403a0a 134 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1352 0x4042e2 -45 
* * 48672 17576 18928 5 0 0 5
+5 +1 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352 1 0 0 1
cfn=(94)
calls=1352 0x40432a +43 
* * 474849 89941 79742 17 9 54 17 9 54 62680 2530 2704
+5 * 1352
jump=1352 +28 * 
* * 
+28 * 1352
+4 * 1352 1352
+1 * 1352 1352
+1 * 1352 1352

fn=(88)
0x4042e2 90 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352 1 0 0 1
cfi=(4)
cfn=(90)
calls=1352 0x4047b2 +24 
* * 24336 8112 9464 3 0 0 3
+5 * 1352 1352
+4 * 1352 0 1352
+7 * 1352 1352
+4 * 1352 0 1352
+8 * 1352 1352
+4 * 1352 0 1352
+8 +1 1352 1352
+1 * 1352 1352

fn=(156)
0x4031ec 159 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352
+4 +2 1352 1352
+4 * 1352 1352 0 1 0 0 1
+4 * 1352
+3 * 1352 1352
+4 * 1352 1352
+3 * 1352
+3 * 1352
+3 * 1352
+4 * 1352
+3 * 1352 1352
+4 * 1352 1352
+3 -1 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(158)
calls=1352 0x403ce6 +11 
* * 184448 49824 29830 24 5 0 24 5 0 37172 1140 2704
+5 +1 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1352 0x4031b8 -82 
* * 31096 10816 10816 1 0 0 1
+5 * 1352
jump=1352 +28 * 
* * 
+28 * 1352
+4 * 1352 1352
+1 * 1352 1352
+1 * 1352 1352

fn=(172)
0x4031b8 79 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfi=(4)
cfn=(174)
calls=1352 0x403ccc +42 
* * 18928 6760 6760
+5 * 1352 1352
+1 * 1352 1352

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246)
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(10)
0x402f54 645 2740 0 2740 1 0 0 1
+1 * 2740
+3 * 2740 0 2740
+4 +1 2740 2740
+4 * 2740 2740 0 0 2 0 0 2
+4 * 2740
+3 * 2740 2740
+4 * 2740 2740
+3 * 2740
+3 * 2740
+3 * 2740
+4 * 2740 2740
+1 * 2740 2740

fn=(106)
0x40325e 113 2731 0 2731 1 0 0 1
+1 * 2731
+3 * 2731 0 2731
+4 +1 2731 2731
+4 * 2731 2731
+1 * 2731 2731

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6)
0x403b08 117 1370 0 1370 1 0 0 1
+1 * 1370
+3 * 1370 0 1370 0 0 1 0 0 1
+4 +1 1370 1370
+4 * 1370 1370
+1 * 1370 1370

fn=(82)
0x4039fc 117 1370 0 1370 1 0 0 1
+1 * 1370
+3 * 1370 0 1370 1 0 0 1
+4 +1 1370 1370
+4 * 1370 1370
+1 * 1370 1370

fn=(200)
0x402eda 901 676 0 676
+1 * 676
+3 * 676
+4 * 676 0 676
+4 * 676 0 676
+4 +2 676 676
+4 * 676 676
+4 * 676 676
+4 * 676 676
+4 * 676
+3 * 676 0 0 0 0 0 0 0 0 676 9
jcnd=9/676 +51 +10 
* * 
+2 +3 667 667
+4 * 667 667
+4 * 667 667
+4 -1 667 667
+4 * 667
+3 * 667
+3 * 667 0 667
cfi=(3)
cfn=(222)
calls=667 0x403373 215 
* * 25346 8671 9338 0 42 2 0 42 2 667 2
+5 +2 667 667
+4 * 667 667
+4 * 667
+4 * 667 667
+4 * 667 0 667
+4 * 667
jump=667 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202)
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 15531 4648 4071 45 22 11 45 22 11 1161 103 53
+5 +2 676 676
+1 * 676 676

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352 1 0 0 1
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +8 1352 0 1352
+4 +3 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=1352 0x404f37 -22 
* * 730654 256224 246764 14 3 3 14 3 3 40244 1808 2700 336
+5 +1 1352 1352
+1 * 1352 1352

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+2 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +4 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=1352 0x404878 277 
* * 20280 8112 6760 1 0 0 1
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1352 0x404d44 277 
* * 33800 12168 10816 2 0 0 2
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(132)
calls=1352 0x404d44 277 
* * 33800 12168 10816
+5 * 1352
+3 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=1352 0x404d5e -49 
* * 750934 262984 254876 1 1 103 1 1 103 40244 1792 2700
+5 +1 1352
+4 * 1352 1352
+1 * 1352 1352
+2 * 1352 1352
+1 * 1352 1352

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(54)
0x404a36 450 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352 1 0 0 1
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +10 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1352 0x404c38 288 
* * 20280 8112 6760 3 0 0 3
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(56)
calls=1352 0x404c38 288 
* * 20280 8112 6760
+5 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1352 0x404c52 -36 
* * 876670 304896 296788 20 3 4 20 3 4 40244 1808 2700 336
+5 +1 1352
+4 * 1352 1352
+1 * 1352 1352
+1 * 1352 1352

fn=(60)
0x404c52 424 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+2 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +4 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1352 0x40492d 277 
* * 20280 8112 6760 2 0 0 2
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1352 0x404d9d 277 
* * 33800 12168 10816 2 0 1 2 0 1
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(66)
calls=1352 0x404d9d 277 
* * 33800 12168 10816
+5 * 1352
+3 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(72)
calls=1352 0x404db7 -49 
* * 750934 262984 254876 15 3 3 15 3 3 40244 1808 2700 336
+5 +1 1352
+4 * 1352 1352
+1 * 1352 1352
+2 * 1352 1352
+1 * 1352 1352

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 49 0 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(62)
0x40492d 277 1406 0 1406 1 0 0 1
+1 * 1406
+3 * 1406
+4 * 1406 0 1406
+4 +1 1406 1406
+4 * 1406
+3 * 1406 0 1406 1 0 0 1
cfi=(13)
cfn=(64)
calls=1406 -33 -66 
* * 8436 4218 2812
+5 * 1406 1406
+1 * 1406 1406

fn=(66)
0x404d9d 277 2704 0 2704
+1 * 2704
+3 * 2704
+4 * 2704 0 2704
+4 +1 2704 2704
+4 * 2704
+3 * 2704 0 2704
cfi=(13)
cfn=(68)
calls=2704 0x404f1a -58 
* * 43264 16224 13520 2 0 1 2 0 1
+5 * 2704 2704
+1 * 2704 2704

fn=(240)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 49 0 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1352 0 1352
+1 * 1352
+3 * 1352 0 1352
+1 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +10 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1352 0x404bc6 288 
* * 20280 8112 6760 3 0 0 3
+5 * 1352
+3 * 1352 1352
+4 * 1352
+3 * 1352 0 1352
cfn=(122)
calls=1352 0x404bc6 288 
* * 20280 8112 6760
+5 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(126)
calls=1352 0x404be0 -36 
* * 876670 304896 296788 4 1 103 4 1 103 40244 1792 2700
+5 +1 1352
+4 * 1352 1352
+1 * 1352 1352
+1 * 1352 1352

fn=(128)
0x404878 277 1406 0 1406
+1 * 1406
+3 * 1406
+4 * 1406 0 1406 1 0 0 1
+4 +1 1406 1406
+4 * 1406
+3 * 1406 0 1406
cfi=(13)
cfn=(130)
calls=1406 -33 -66 
* * 8436 4218 2812 0 0 1 0 0 1
+5 * 1406 1406
+1 * 1406 1406

fn=(132)
0x404d44 277 2704 0 2704
+1 * 2704
+3 * 2704
+4 * 2704 0 2704
+4 +1 2704 2704
+4 * 2704
+3 * 2704 0 2704
cfi=(13)
cfn=(134)
calls=2704 0x404e98 -58 
* * 43264 16224 13520 2 0 0 2
+5 * 2704 2704
+1 * 2704 2704

fn=(138)
0x404d5e 379 1352 0 1352
+1 * 1352
+3 * 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 * 1352 0 1352
+4 +8 1352 0 1352
+4 +3 1352 1352
+4 * 1352 1352
+4 * 1352 1352
+4 * 1352
+3 * 1352
+3 * 1352 0 1352
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1352 0x404eb5 -22 
* * 730654 256224 246764 1 1 103 1 1 103 40244 1792 2700
+5 +1 1352 1352
+1 * 1352 1352

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 49 1 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 2704 0 2704 1 0 0 1
+1 * 2704
+3 * 2704
+4 * 2704 0 2704
+4 +1 2704 2704
+4 * 2704
+3 * 2704 0 2704
cfi=(13)
cfn=(124)
calls=2704 0x404d36 -77 
* * 16224 8112 5408 2 0 0 2
+5 * 2704 2704
+1 * 2704 2704

fn=(56)
0x404c38 288 2704 0 2704 1 0 0 1
+1 * 2704
+3 * 2704
+4 * 2704 0 2704 1 0 0 1
+4 +1 2704 2704
+4 * 2704
+3 * 2704 0 2704
cfi=(13)
cfn=(58)
calls=2704 0x404d8f -77 
* * 16224 8112 5408 1 0 0 1
+5 * 2704 2704
+1 * 2704 2704

fn=(74)
0x404f37 368 1370 0 1370
+1 * 1370
+3 * 1370
+4 * 1370 0 1370 1 0 0 1
+4 * 1370 0 1370
+4 * 1370 0 1370
+4 +2 1370 1370
+4 * 1370 1370
+4 * 1370
+3 * 1370
+3 * 1370
+4 * 1370 0 1370
+4 +1 1370 1370
+5 * 1370 0 0 0 0 0 0 0 0 1370
jcnd=9/1370 +33 +2 
* * 
+2 +1 1361 1361
+4 * 1361
+8 * 1361 1361
+4 * 1361 1361
+4 * 1361
+3 * 1361 0 0 1 0 0 1
+3 * 1361 0 1361 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1361 0x3877c83840 0 
* * 694646 241931 239214 11 2 51 11 2 51 39014 1814 1356 336
* * 1361 1361 0 1 1 0 1 1 0 0 0 1361
+5 +1 1370 1370
+4 * 1370
+8 * 1370 1370
+4 * 1370
+3 +1 1370 1370
+1 * 1370 1370

fn=(140)
0x404eb5 368 1370 0 1370
+1 * 1370
+3 * 1370
+4 * 1370 0 1370 1 0 0 1
+4 * 1370 0 1370
+4 * 1370 0 1370 0 0 1 0 0 1
+4 +2 1370 1370
+4 * 1370 1370
+4 * 1370
+3 * 1370
+3 * 1370
+4 * 1370 0 1370
+4 +1 1370 1370
+5 * 1370 0 0 0 0 0 0 0 0 1370
jcnd=9/1370 +33 +2 
* * 
+2 +1 1361 1361
+4 * 1361
+8 * 1361 1361
+4 * 1361 1361
+4 * 1361
+3 * 1361
+3 * 1361 0 1361
cob=(2)
cfi=(9)
cfn=(78)
calls=1361 0x3877c83840 0 
* * 694646 241931 239214 0 1 104 0 1 104 39014 1800 1356
* * 1361 1361 0 0 0 0 0 0 0 0 0 1361
+5 +1 1370 1370
+4 * 1370
+8 * 1370 1370
+4 * 1370
+3 +1 1370 1370
+1 * 1370 1370

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 2704 0 2704 1 0 0 1
+1 * 2704
+3 * 2704 0 2704
+4 +1 2704 2704
+4 * 2704 2704
+1 * 2704 2704

fn=(110)
0x404380 726 2704 0 2704 1 0 0 1
+1 * 2704
+3 * 2704 0 2704
+4 * 2704 0 2704
+4 * 2704 2704
+4 * 2704 2704
+3 * 2704 2704
+4 * 2704 0 2704
+3 * 2704 2704
+1 * 2704 2704

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 2704 0 2704 1 0 0 1
+1 * 2704
+3 * 2704 0 2704
+4 +1 2704 2704
+4 * 2704 2704
+1 * 2704 2704

fn=(44)
0x404468 726 2704 0 2704
+1 * 2704
+3 * 2704 0 2704
+4 * 2704 0 2704
+4 * 2704 2704
+4 * 2704 2704
+3 * 2704 2704
+4 * 2704 0 2704 1 0 0 1
+3 * 2704 2704
+1 * 2704 2704

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1361 0 1361 1 0 0 1
+1 * 1361
+3 * 1361 0 1361
+4 * 1361 0 1361 1 0 0 1
+4 * 1361 1361
+1 * 1361 1361

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1361 0 1361 1 0 0 1
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 +4 1361 1361
+4 * 1361 1361
+4 * 1361
+3 * 1361
+3 * 1361 0 1361
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1361 0x40454c -14 
* * 8166 2722 4083 1 0 0 1
+5 +2 1361 1361
+1 * 1361 1361

fn=(150)
0x40326c 148 1361 0 1361
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 +3 1361 1361 0 1 0 0 1
+4 * 1361 1361
+4 * 1361
+3 * 1361
+3 * 1361 0 1361
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1361 0x403d1a -29 
* * 24498 8166 9527 3 0 0 3
+5 +1 1361 1361
+1 * 1361 1361

fn=(180)
0x40334a 148 1361 0 1361
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 +3 1361 1361
+4 * 1361 1361
+4 * 1361
+3 * 1361
+3 * 1361 0 1361
cfn=(182)
calls=1361 0x403dcc -29 
* * 24498 8166 9527 2 0 0 2
+5 +1 1361 1361
+1 * 1361 1361

fn=(152)
0x403d1a 122 1361 0 1361 1 0 0 1
+1 * 1361
+3 * 1361
+4 * 1361 0 1361
+4 * 1361 0 1361
+4 +4 1361 1361
+4 * 1361 1361
+4 * 1361
+3 * 1361
+3 * 1361 0 1361
cfn=(154)
calls=1361 0x4044f8 -14 
* * 8166 2722 4083 2 0 0 2
+5 +2 1361 1361
+1 * 1361 1361

fn=(184)
0x40454c 112 1361 0 1361 1 0 0 1
+1 * 1361
+3 * 1361 0 1361
+4 * 1361 0 1361
+4 * 1361 1361
+1 * 1361 1361

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 2609 481 488 2 0 7 2 0 7 353 48 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 0 5 0 0 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 49 3 0 49 131 6 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1278 353 226 1 0 0 1 0 0 246 20 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 4325 782 725 22 21 7 22 21 7 735 87 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 8 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1222 326 219 1 0 0 1 0 0 232 8 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 2722 0 2722 1 0 0 1
+2 0 2722 0 2722
+2 0 2722 0 2722
+2 0 2722
+3 0 2722 0 2722
+2 0 2722 0 2722
+1 0 2722 0 2722
+1 0 2722
+3 0 2722
+4 0 2722 2722
+4 0 2722 0 2722
+4 0 2722
+3 0 2722
+4 0 2722
+3 0 2722
+3 0 2722
+3 0 2722 0 0 1 0 0 1 0 0 2722
+6 0 2722
+4 0 2722 0 0 0 0 0 0 0 0 2722
+6 0 2722
+4 0 2722 0 0 0 0 0 0 0 0 2722
+6 0 2722 2722
+7 0 2722 0 0 0 0 0 0 0 0 2722 4
jcnd=2598/2722 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124 2
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 2598
+2 0 2598 0 0 0 0 0 0 0 0 2598
+6 0 2598 2598 0 1 0 0 1
+4 0 2598
+3 0 2598
+2 0 2598 0 0 0 0 0 0 0 0 2598
jcnd=2598/2598 0x3877c78a40 0 
* 0 
+6 0 2598 2598
+4 0 2598
+3 0 2598 0 0 0 0 0 0 0 0 2598
+6 0 2598 2598
+5 0 2598
+4 0 2598 0 0 0 0 0 0 0 0 2598
jcnd=2598/2598 0x3877c7907c 0 
* 0 
+6 0 2598 2598
+5 0 2598
+4 0 2598 0 0 0 0 0 0 0 0 2598
+6 0 2598
+4 0 2598 0 0 1 0 0 1 0 0 2598
+6 0 2598
+4 0 2598 2598
+7 0 2598 0 0 0 0 0 0 0 0 2598
+6 0 2598 2598
+6 0 2598
+2 0 2598 0 0 0 0 0 0 0 0 2598
+6 0 2598 2598
+4 0 2598 0 0 0 0 0 0 0 0 2598 6
jcnd=2593/2598 +70 0 
* 0 
+2 0 5 5
+3 0 5
+3 0 5
+3 0 5 5
+4 0 5 5
+4 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5 2
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=4/5 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 2598 2598 0 1 0 0 1
+4 0 2598 0 0 0 0 0 0 0 0 2598 1062
jcnd=1150/2598 0x3877c78bf0 0 
* 0 
+6 0 1448 1448 0 0 1 0 0 1
+6 0 1448 0 0 1 0 0 1 0 0 1448 71
jcnd=83/1448 0x3877c78a78 0 
* 0 
+6 0 1365 1365
+5 0 1365 1365
+5 0 1365 1365
+4 0 1365 0 0 0 0 0 0 0 0 1365
+6 0 1365 1365
+4 0 1365 0 0 0 0 0 0 0 0 1365
+6 0 1365 1365
+9 0 1365 0 1365
+4 0 1365 0 1365
+4 0 1365 0 0 0 0 0 0 0 0 1365 4
jcnd=1027/1365 +16 0 
* 0 
+2 0 338 338
+5 0 338
+3 0 338 0 0 1 0 0 1 0 0 338 8
jcnd=318/338 0x3877c78ee4 0 
* 0 
+6 0 1365
+3 0 1365
+4 0 1365 1365
+4 0 1365 1365
+4 0 1365 0 0 0 0 0 0 0 0 1365
-12 0 83
+4 0 83 83
+4 0 83 83
+4 0 83 0 0 0 0 0 0 0 0 83
+6 0 1448
+7 0 1448 0 1448
+4 0 1448 0 1448
+4 0 1448 0 0 0 0 0 0 0 0 1448 71
jcnd=441/1448 +18 0 
* 0 
+2 0 1007 0 1007
+8 0 1007 0 1007
+8 0 1007 0 1007
+4 0 1007
+3 0 1007 0 1007 1 0 0 1
+4 0 1007
+4 0 1007 0 1007
+4 0 1007 0 1007
+4 0 1007
+7 0 1007 0 0 0 0 0 0 0 0 1007
jcnd=1007/1007 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 1150
+7 0 1150 0 0 0 0 0 0 0 0 1150
jcnd=1150/1150 0x3877c78b20 0 
* 0 
0x3877c78a40 0 2598 0 0 1 0 0 1
+5 0 2598 2598
+4 0 2598 2598
+7 0 2598 0 0 0 0 0 0 0 0 2598
jcnd=2598/2598 +16 0 
* 0 
+16 0 2598 0 2598
+5 0 2598 0 0 0 0 0 0 0 0 2598
+6 0 2598
+3 0 2598
jump=2598 0x3877c7878f 0 
* 0 
+10 0 83 0 83
+6 0 83 0 0 1 0 0 1
jump=83 0x3877c78885 0 
* 0 
0x3877c78b20 0 2598 2598 0 1 0 0 1
+4 0 2598
+2 0 2598 0 0 0 0 0 0 0 0 2598
+6 0 2598 2598
+7 0 2598 0 0 0 0 0 0 0 0 2598
jcnd=2598/2598 +15 0 
* 0 
+15 0 2598 0 2598 1 0 0 1
+4 0 2598 0 0 0 0 0 0 0 0 2598 2
+6 0 2598
+4 0 2598 2598
+1 0 2598 2598
+1 0 2598 2598
+2 0 2598 2598
+2 0 2598 2598
+2 0 2598 2598
+2 0 2598 2598
0x3877c78bf0 0 1150 0 0 1 0 0 1
+3 0 1150 0 1150
+4 0 1150
+3 0 1150
+4 0 1150 0 1150 1 0 0 1
+4 0 1150
jump=1150 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 318 318 0 1 0 0 1
+5 0 318 0 0 0 0 0 0 0 0 318
+6 0 318 318
+5 0 318 0 318
+4 0 318 318
+5 0 318 0 318
+4 0 318
jump=318 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 2598 2598 0 1 1 0 1 1
+4 0 2598 0 0 1 0 0 1
+7 0 2598
+4 0 2598
+3 0 2598
+3 0 2598 0 0 0 0 0 0 0 0 2598
jcnd=2598/2598 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 2712 0 0 1 0 0 1
+7 0 2712
+3 0 2712
+3 0 2712 2712 0 0 1 0 0 1
+4 0 2712
+4 0 2712 0 0 0 0 0 0 0 0 0 0 2712 336
jump=336 0x3877c89be8 0 
* 0 
jump=348 0x3877c89bd0 0 
* 0 
jump=336 0x3877c89bb8 0 
* 0 
jump=336 +11 0 
* 0 
jump=336 0x3877c89c48 0 
* 0 
jump=338 0x3877c89c30 0 
* 0 
jump=336 0x3877c89c18 0 
* 0 
jump=346 0x3877c89c00 0 
* 0 
+11 0 336 336
+3 0 336
+4 0 336
+4 0 336 336
+4 0 336
+4 0 336 0 336
+4 0 336
+9 0 336 336
+4 0 336 0 336
+4 0 336 336
+4 0 336 0 336
+4 0 336 336
+4 0 336 0 336
+4 0 336 336
+4 0 336 0 336
+4 0 336
+4 0 336
+4 0 336 0 0 0 0 0 0 0 0 336
jcnd=8/336 0x3877c89c60 0 
* 0 
-40 0 56910 56910
+4 0 56910 0 56910 0 0 3 0 0 3
+4 0 56910 56910
+4 0 56910 0 56910 0 0 15 0 0 15
+4 0 56910 56910
+4 0 56910 0 56910 0 0 32 0 0 32
+4 0 56910 56910
+4 0 56910 0 56910
+4 0 56910
+4 0 56910
+4 0 56910 0 0 0 0 0 0 0 0 56910 2238
jcnd=2676/56910 0x3877c89c60 0 
* 0 
-32 0 338 338
+4 0 338 0 338
+4 0 338 338
+4 0 338 0 338
+4 0 338 338
+4 0 338 0 338
+4 0 338
+4 0 338
+4 0 338 0 0 0 0 0 0 0 0 338
jcnd=10/338 0x3877c89c60 0 
* 0 
-24 0 336 336
+4 0 336 0 336
+4 0 336 336
+4 0 336 0 336
+4 0 336
+4 0 336
+4 0 336 0 0 0 0 0 0 0 0 336
jcnd=8/336 0x3877c89c60 0 
* 0 
-16 0 346 346 0 1 0 0 1
+4 0 346 0 346
+4 0 346 0 0 1 0 0 1
+4 0 346
+4 0 346 0 0 0 0 0 0 0 0 346 6
jcnd=10/346 0x3877c89c60 0 
* 0 
+6 0 55554
+4 0 55554 55554
+3 0 55554 0 55554 0 0 20 0 0 20
+3 0 55554 55554
+4 0 55554 0 55554 0 0 34 0 0 34
+4 0 55554 55554
+4 0 55554 0 55554 0 0 49 0 0 49
+4 0 55554 55554
+4 0 55554 0 55554
+4 0 55554
jump=55554 -80 0 
* 0 
-30 0 336 336
+3 0 336 0 336
+3 0 336 336
+4 0 336 0 336
+4 0 336 336
+4 0 336 0 336 0 0 1 0 0 1
+4 0 336 336
+4 0 336 0 336
+4 0 336
jump=336 -80 0 
* 0 
-24 0 348 348
+4 0 348 0 348
+4 0 348 348
+4 0 348 0 348
+4 0 348 348
+4 0 348 0 348
+4 0 348
jump=348 -80 0 
* 0 
-16 0 336 336
+4 0 336 0 336
+4 0 336 336
+4 0 336 0 336
+4 0 336
jump=336 -80 0 
* 0 
+8 0 336 336
+3 0 336
+4 0 336 0 0 1 0 0 1
+4 0 336
+4 0 336
jump=336 -39 0 
* 0 
+9 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
+6 0 348 348
+3 0 348
+4 0 348
jump=348 -72 0 
* 0 
+8 0 336
+4 0 336 336
+3 0 336 0 0 0 0 0 0 0 0 336
+2 0 336
+4 0 336
jump=336 -99 0 
* 0 
+11 0 346 346 0 1 0 0 1
+3 0 346
+4 0 346
+4 0 346
+4 0 346
jump=346 0x3877c89b78 0 
* 0 
+9 0 336 336
+3 0 336
+4 0 336
+4 0 336
+4 0 336
jump=336 0x3877c89b70 0 
* 0 
+9 0 338 338
+3 0 338
+4 0 338
+4 0 338
+4 0 338
jump=338 0x3877c89b68 0 
* 0 
+9 0 336 336
+3 0 336
+4 0 336
+4 0 336
+4 0 336
jump=336 0x3877c89b60 0 
* 0 
+9 0 2712 0 2712 1 0 0 1
+3 0 2712 2712

fn=(104) alloc_perturb
0x3877c77180 0 2576 2576 0 1 0 0 1
+6 0 2576
+2 0 2576 0 0 0 0 0 0 0 0 2576 2
+2 0 2576 2576

fn=(38) _int_malloc
0x3877c79a00 0 2722 0 2722 1 0 0 1
+2 0 2722
+3 0 2722 0 2722
+2 0 2722 0 2722
+2 0 2722 0 2722 0 0 1 0 0 1
+2 0 2722
+3 0 2722 0 2722
+1 0 2722 0 2722
+1 0 2722
+4 0 2722
+4 0 2722 0 0 0 0 0 0 0 0 2722
+6 0 2722
+4 0 2722
+6 0 2722
+3 0 2722
+4 0 2722
+4 0 2722
+4 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722
+6 0 2722 2722 0 1 1 0 1 1
+7 0 2722 0 0 0 0 0 0 0 0 2722 7
jcnd=2600/2722 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 146 146
+6 0 146
+4 0 146
+2 0 146 0 0 0 0 0 0 0 0 146
+6 0 146
+3 0 146
+4 0 146 146
+1 0 146 146
+1 0 146 146
+2 0 146 146
+2 0 146 146
+2 0 146 146
+2 0 146 146
-14 0 2576
+4 0 2576 2576
+1 0 2576 2576
+1 0 2576 2576
+2 0 2576 2576
+2 0 2576 2576
+2 0 2576 2576
+2 0 2576 2576
+7 0 2617
+7 0 2617 0 0 1 0 0 1 0 0 2617 7
jcnd=1714/2617 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 2 0 0 2
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 1714 0 0 1 0 0 1
+3 0 1714
+4 0 1714
+4 0 1714 0 0 1 0 0 1 0 0 1714 3
jcnd=1712/1714 0x3877c7a1a4 0 
* 0 
+6 0 2
+3 0 2
+4 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2
+3 0 2 0 2
+4 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +30 0 
* 0 
-11 0 1712 1712
+6 0 1712
+5 0 1712 0 0 0 0 0 0 0 0 1712 1
jcnd=1711/1712 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 912 244 194 8 2 0 8 2 0 188 29
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 2616 0 0 1 0 0 1
+3 0 2616
+3 0 2616
+3 0 2616
+4 0 2616
+3 0 2616
+4 0 2616 0 2616
+5 0 2616
+3 0 2616 0 2616
+4 0 2616 0 2616
+4 0 2616 0 2616
+5 0 2616
+3 0 2616
+3 0 2616
+3 0 2616
+3 0 2616
+4 0 2616
+4 0 2616 0 0 1 0 0 1
+4 0 2616 0 2616
+4 0 2616
+4 0 2616 0 2616
+5 0 2616 0 2616
+5 0 2616
+3 0 2616
+3 0 2616 0 2616
+5 0 2616
+5 0 2616
+3 0 2616 0 2616
+4 0 2616 0 2616
+4 0 2616
+6 0 2616 0 2616
+4 0 2616 0 2616
+5 0 2616 0 0 1 0 0 1
+3 0 2616
+3 0 2616
+3 0 2616
jump=2616 +87 0 
* 0 
+8 0 1267
+3 0 1267
+4 0 1267
+2 0 1267
+2 0 1267
+3 0 1267
+3 0 1267
+3 0 1267
+2 0 1267
+2 0 1267
+5 0 1267
+2 0 1267 1267 0 0 1 0 0 1
+4 0 1267
+3 0 1267
+4 0 1267 0 1267
+4 0 1267 0 1267
+8 0 1267
+7 0 1267 0 1267
+4 0 1267 0 1267 0 0 1 0 0 1
+4 0 1267 0 1267
+4 0 1267 0 0 0 0 0 0 0 0 1267
-38 0 1311
+3 0 1311
+4 0 1311 0 1311
+4 0 1311 0 1311
+8 0 1311
+7 0 1311 0 1311
+4 0 1311 0 1311
+4 0 1311 0 1311
+4 0 1311 0 0 0 0 0 0 0 0 1311
+6 0 5195 5195 0 1 0 0 1
+4 0 5195
+3 0 5195 0 0 0 0 0 0 0 0 5195 196
jcnd=2556/5195 0x3877c79ef0 0 
* 0 
+6 0 2639 2639
+4 0 2639 2639
+4 0 2639
+4 0 2639 0 0 0 0 0 0 0 0 2639
+6 0 2639 2639 0 1 1 0 1 1
+7 0 2639 0 0 0 0 0 0 0 0 2639 2
+6 0 2639
+4 0 2639
+7 0 2639 0 0 0 0 0 0 0 0 2639 6
jcnd=1729/2639 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 2619
+3 0 2619 0 2619
+4 0 2619 0 2619
+5 0 2619 0 0 0 0 0 0 0 0 2619 29
jcnd=41/2619 0x3877c7a090 0 
* 0 
+6 0 2578
+7 0 2578 0 0 0 0 0 0 0 0 2578 472
jcnd=1267/2578 0x3877c79c50 0 
* 0 
+6 0 1311 0 0 1 0 0 1
+3 0 1311
+4 0 1311
+4 0 1311 0 0 0 0 0 0 0 0 1311 329
jcnd=330/1311 0x3877c79db0 0 
* 0 
+6 0 981
+3 0 981
+4 0 981
+2 0 981
+2 0 981
+3 0 981
+3 0 981
+8 0 981
+3 0 981
+2 0 981
+2 0 981
+4 0 981 981
+4 0 981
+3 0 981 0 0 1 0 0 1 0 0 981 13
jcnd=949/981 0x3877c79e15 0 
* 0 
-36 0 330
+2 0 330
+2 0 330
+3 0 330
+3 0 330
+8 0 330
+3 0 330
+2 0 330
+2 0 330
+4 0 330 330
+4 0 330
+3 0 330 0 0 0 0 0 0 0 0 330
jcnd=330/330 0x3877c79e15 0 
* 0 
+6 0 32 32
+4 0 32
+4 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=16/32 +38 0 
* 0 
+2 0 16 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
jump=16 0x3877c79c73 0 
* 0 
+13 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c79ee0 0 
* 0 
+6 0 8 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
-4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
+14 0 330 0 0 1 0 0 1
+3 0 330
+4 0 330
+4 0 330 0 0 0 0 0 0 0 0 330
+2 0 330
+3 0 330 0 0 1 0 0 1
+7 0 330
jump=330 0x3877c79d18 0 
* 0 
+78 0 1279 0 1279
+4 0 1279 0 1279
+4 0 1279
+3 0 1279
jump=1279 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+39 0 8 8
+4 0 8
jump=8 0x3877c79d9e 0 
* 0 
+12 0 2556 0 0 1 0 0 1
+7 0 2556
+3 0 2556 0 0 0 0 0 0 0 0 2556 14
jcnd=1694/2556 0x3877c7a0b0 0 
* 0 
+6 0 2524 2524 0 1 0 0 1
+4 0 2524
+3 0 2524
+3 0 2524
+2 0 2524
+4 0 2524
+3 0 2524
+3 0 2524
+2 0 2524
+2 0 2524
+2 0 2524
+2 0 2524 2524 0 0 1 0 0 1
+8 0 2524
+5 0 2524
+5 0 2524
+2 0 2524 0 0 0 0 0 0 0 0 2524
-2 0 1236
+2 0 1236 0 0 0 0 0 0 0 0 1236 1
jcnd=1/1236 +14 0 
* 0 
+2 0 3759
+2 0 3759 0 0 0 0 0 0 0 0 3759 59
jcnd=1674/3759 +64 0 
* 0 
+2 0 2085
+8 0 2085
+3 0 2085
+3 0 2085 0 0 0 0 0 0 0 0 2085 4
jcnd=329/2085 0x3877c79fc0 0 
* 0 
-6 0 1250
+3 0 1250
+3 0 1250 0 0 0 0 0 0 0 0 1250 11
jcnd=825/1250 0x3877c79fc0 0 
* 0 
+2 0 2181
+2 0 2181 2181
+8 0 2181
+2 0 2181 0 0 0 0 0 0 0 0 2181 31
jcnd=1249/2181 -20 0 
* 0 
+2 0 932
+2 0 932
+5 0 932
+3 0 932
+3 0 932
+2 0 932
+2 0 932
+5 0 932 0 0 0 0 0 0 0 0 932
jcnd=1/932 +14 0 
* 0 
+2 0 931
+2 0 931
+4 0 931
+2 0 931
+2 0 931 0 0 0 0 0 0 0 0 931 6
jcnd=869/931 -8 0 
* 0 
-8 0 12996
+4 0 12996
+2 0 12996
+2 0 12996 0 0 0 0 0 0 0 0 12996 835
jcnd=10674/12996 -8 0 
* 0 
-2 0 1674 0 0 1 0 0 1
+2 0 1674 0 0 0 0 0 0 0 0 1674 30
jcnd=1453/1674 -8 0 
* 0 
+2 0 2606 2606 0 0 19 0 0 19
+4 0 2606 0 0 1 0 0 1
+3 0 2606 0 0 0 0 0 0 0 0 2606 1195
jcnd=1370/2606 0x3877c7a1cf 0 
* 0 
+6 0 1236
+2 0 1236
+4 0 1236
+2 0 1236
+2 0 1236
+2 0 1236 0 1236
+8 0 1236
jump=1236 0x3877c79f30 0 
* 0 
+37 0 1154 1154 0 1 0 0 1
+5 0 1154 1154
+4 0 1154
+4 0 1154 1154
+5 0 1154 0 0 0 0 0 0 0 0 1154 1
jcnd=1154/1154 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 41 0 0 1 0 0 1
+7 0 41 0 41
+6 0 41
+3 0 41 0 0 0 0 0 0 0 0 41
jcnd=41/41 0x3877c79ace 0 
* 0 
+16 0 1694 1694
+4 0 1694
+4 0 1694
+2 0 1694
+5 0 1694 1694 0 1 3 0 1 3
+4 0 1694
+3 0 1694 0 0 0 0 0 0 0 0 1694 17
jcnd=1622/1694 0x3877c79f00 0 
* 0 
+6 0 72 72
+4 0 72 0 0 0 0 0 0 0 0 72 8
jcnd=40/72 0x3877c79f00 0 
* 0 
+6 0 32
+3 0 32 32
+4 0 32 32
+4 0 32
+3 0 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 0x3877c7a650 0 
* 0 
+26 0 32 0 0 1 0 0 1
+3 0 32 32
+4 0 32
+3 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 2
+6 0 32 32
+8 0 32 0 32
+4 0 32 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32 0 1 0 0 1
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32 18
jcnd=32/32 0x3877c7a659 0 
* 0 
+6 0 32
+4 0 32 0 0 0 0 0 0 0 0 32 8
jcnd=16/32 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 1712 0 0 1 0 0 1
+3 0 1712 0 1712
+4 0 1712
jump=1712 0x3877c79b99 0 
* 0 
+36 0 1370 1370 0 1 1 0 1 1
+4 0 1370 1370 0 0 1 0 0 1
+4 0 1370
+3 0 1370 1370
+4 0 1370
+4 0 1370
+3 0 1370
+3 0 1370 1370
+4 0 1370 0 0 0 0 0 0 0 0 1370
+6 0 1370 1370
+4 0 1370 0 0 0 0 0 0 0 0 1370
+6 0 1370 1370 0 1 0 0 1
+8 0 1370 0 1370
+4 0 1370 0 1370
+4 0 1370 0 0 0 0 0 0 0 0 1370 12
jcnd=418/1370 +38 0 
* 0 
+2 0 952 952 0 0 1 0 0 1
+4 0 952
+3 0 952 0 0 0 0 0 0 0 0 952
+2 0 952 952
+5 0 952 0 0 0 0 0 0 0 0 952
+6 0 952 952
+4 0 952 0 952
+4 0 952 952
+4 0 952 0 952
+4 0 952
+4 0 952 0 0 0 0 0 0 0 0 952
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 1349 1349
+4 0 1349 1349 0 1 0 0 1
+4 0 1349 0 0 0 0 0 0 0 0 1349
+6 0 1349
+4 0 1349
+7 0 1349 0 1349 0 0 7 0 0 7
+4 0 1349 0 1349
+4 0 1349 0 1349
+4 0 1349 0 1349
+4 0 1349 0 0 0 0 0 0 0 0 1349 4
jcnd=884/1349 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 884
+7 0 884 0 0 0 0 0 0 0 0 884 4
jcnd=554/884 +18 0 
* 0 
+2 0 337 0 337 0 0 2 0 0 2
+8 0 337 0 337 1 0 0 1
+8 0 337
+7 0 337 0 337 0 0 2 0 0 2
+4 0 337
+3 0 337
+3 0 337
+4 0 337
+3 0 337
+4 0 337
+3 0 337
+3 0 337
+4 0 337 0 337
+4 0 337 0 337
+4 0 337
jump=337 +71 0 
* 0 
-46 0 1028
+7 0 1028 0 1028
+4 0 1028
+3 0 1028
+3 0 1028
+4 0 1028
+3 0 1028
+4 0 1028
+3 0 1028
+3 0 1028
+4 0 1028 0 1028
+4 0 1028 0 1028 0 0 1 0 0 1
+4 0 1028
jump=1028 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 37
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37 2
jcnd=37/37 +7 0 
* 0 
+7 0 1402
+4 0 1402 0 0 1 0 0 1
+3 0 1402
+3 0 1402 0 1402
cfn=(104)
calls=1402 0x3877c77180 0 
* 0 5608 2804 0 1 0 0 1 0 0 1402
+5 0 1402
+3 0 1402
jump=1402 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1154 0 0 1 0 0 1
+7 0 1154
+2 0 1154
+4 0 1154
+3 0 1154
+3 0 1154 0 1154
+5 0 1154
+3 0 1154
+4 0 1154
+3 0 1154 0 0 1 0 0 1
+4 0 1154
+4 0 1154
+3 0 1154
+4 0 1154 0 1154
+4 0 1154 0 1154 0 0 42 0 0 42
+4 0 1154
+3 0 1154
+3 0 1154 0 1154
cfn=(104)
calls=1154 0x3877c77180 0 
* 0 4616 2308 0 0 0 0 0 0 0 1154 2
+5 0 1154
+3 0 1154
jump=1154 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 32 32 0 1 0 0 1
+4 0 32
jump=32 0x3877c7a10e 0 
* 0 
+5 0 32 32
+5 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 2722 0 2722 1 0 0 1
+5 0 2722 0 2722
+5 0 2722
+3 0 2722 0 2722
+5 0 2722
+4 0 2722 2722 0 0 1 0 0 1
+7 0 2722 2722 0 0 1 0 0 1
+3 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722 2
+6 0 2722 2722 0 0 1 0 0 1
+7 0 2722 2722 0 1 1 0 1 1
+4 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722
+2 0 2722 2722 0 0 1 0 0 1
+3 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722
jcnd=2722/2722 +97 0 
* 0 
+18 0 2722
+3 0 2722
+3 0 2722 0 2722
cfn=(38)
calls=2722 0x3877c79a00 0 
* 0 629715 79339 94435 47 37 75 47 37 75 93983 3810
+5 0 2722
+3 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722
+2 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722
+2 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722 23
+2 0 2722 2722
+7 0 2722 0 0 0 0 0 0 0 0 2722
jcnd=2722/2722 +13 0 
* 0 
+13 0 2722 0 2722
+2 0 2722 0 0 0 0 0 0 0 0 2722 12
+6 0 2722
+3 0 2722 2722
+4 0 2722 2722
+5 0 2722 2722
+5 0 2722
+4 0 2722 2722
+1 0 2722 0 0 1 0 0 1
+5 0 2722 2722 0 0 1 0 0 1
+7 0 2722 0 0 0 0 0 0 0 0 2722
jcnd=2722/2722 +14 0 
* 0 
+14 0 2722 0 2722 1 0 0 1
+3 0 2722 0 0 0 0 0 0 0 0 2722
+6 0 2722
jump=2722 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2722 0 2722 1 0 0 1
+2 0 2722
+3 0 2722
+3 0 2722 0 2722
+2 0 2722
+3 0 2722 0 2722
+1 0 2722
+3 0 2722 0 2722
+1 0 2722
+3 0 2722
+4 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722
+6 0 2722
+4 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722 7
jcnd=10/2722 0x3877c838d1 0 
* 0 
+2 0 2712
+3 0 2712
+3 0 2712
+3 0 2712
+3 0 2712
+3 0 2712 0 0 0 0 0 0 0 0 2712
jcnd=2712/2712 +41 0 
* 0 
+41 0 2712 0 0 1 0 0 1
+3 0 2712 0 0 0 0 0 0 0 0 2712
jcnd=2712/2712 0x3877c839c0 0 
* 0 
+24 0 2712
+3 0 2712
+4 0 2712
+3 0 2712
+3 0 2712
+3 0 2712
+3 0 2712
+3 0 2712 0 0 0 0 0 0 0 0 2712 1352
jcnd=1364/2712 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1358
+10 0 1358 1358 0 0 2 0 0 2
+3 0 1358
+4 0 1358 0 1358
+3 0 1358
+4 0 1358
+4 0 1358 0 0 0 0 0 0 0 0 1358
jcnd=1358/1358 -18 0 
* 0 
-18 0 4130 4130
+3 0 4130
+4 0 4130 0 4130
+3 0 4130
+4 0 4130
+4 0 4130 0 0 0 0 0 0 0 0 4130 11
jcnd=2772/4130 -18 0 
* 0 
+2 0 2722
+4 0 2722
+3 0 2722 2722
+1 0 2722 2722
+1 0 2722 2722
+2 0 2722 2722 0 1 0 0 1
+2 0 2722 2722
0x3877c839c0 0 2712 0 0 1 0 0 1
+3 0 2712
+3 0 2712
+3 0 2712
+4 0 2712 0 2712 0 0 1 0 0 1
cfn=(284)
calls=2712 0x3877c89b20 0 
* 0 1235438 464764 459340 6 1 154 6 1 154 58950 2244 2712 336
+5 0 2712
jump=2712 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2722 2722 0 1 1 0 1 1
+7 0 2722 2722 0 0 1 0 0 1
+3 0 2722
+3 0 2722 0 0 1 0 0 1 0 0 2722
+6 0 2722
+3 0 2722 0 0 0 0 0 0 0 0 2722 2
+6 0 2722 2722
+4 0 2722
+4 0 2722
+2 0 2722 0 0 0 0 0 0 0 0 2722 2
+2 0 2722
+2 0 2722
+7 0 2722 0 0 0 0 0 0 0 0 2722
jcnd=2722/2722 +14 0 
* 0 
+14 0 2722
+2 0 2722
cfn=(170)
calls=2722 0x3877c78650 0 
* 0 269572 71635 41085 21 2 0 21 2 0 65282 1233

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 2
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 9
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 2
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 39437817 16569961 9298337 245 145 279 245 145 279 987109 10751 16322 336
