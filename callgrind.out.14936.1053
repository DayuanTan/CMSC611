version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1053


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1288870464 - 1289890124
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1232 0 0 1 0 0 1
+3 0 1232 0 0 0 0 0 0 0 0 1232
+2 0 1232
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1232 0x3877c7b8b0 0 
* 0 148905 39127 21373 19 4 0 19 4 0 36741 488
* 0 1232 1232 0 1 1 0 1 1 0 0 0 1232

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1232 0 1232 1 0 0 1
+1 0 1232
+5 0 1232
+3 0 1232 0 1232
+1 0 1232
+4 0 1232 0 0 1 0 0 1
+3 0 1232
+4 0 1232
+3 0 1232 0 1232 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1232 0x3877c7aa50 0 
* 0 378848 54319 56393 45 38 52 45 38 52 65279 2621
* 0 1232 1232 0 1 1 0 1 1 0 0 0 1232
+5 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
jcnd=1232/1232 +96 0 
* 0 
+96 0 1232 0 0 1 0 0 1
+4 0 1232 1232
+1 0 1232 1232
+1 0 1232 1232

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 608 0 608 1 0 0 1
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608 1 0 0 1
+4 +1 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=608 0x4049d4 -35 
* * 3648 1216 1824 1 0 0 1
+5 * 608 608
+1 * 608 608

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 608 0 608 1 0 0 1
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 608
+4 * 608
+3 * 608 0 608
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=608 0x404520 -35 
* * 3040 1216 1216
+5 * 608 608
+1 * 608 608

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 608 0 608 1 0 0 1
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=608 0x404a28 -35 
* * 3648 1216 1824 1 0 1 1 0 1
+5 * 608 608
+1 * 608 608

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 608
+4 * 608
+3 * 608 0 608
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=608 0x4044cc -35 
* * 3040 1216 1216
+5 * 608 608
+1 * 608 608

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 608 0 608 1 0 0 1
+1 * 608
+3 * 608 0 608
+4 * 608 608
+4 * 608 608
+1 * 608 608

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 304 0 304
+1 * 304
+3 * 304
+4 * 304 0 304
+4 * 304 0 304
+4 * 304 0 304
+4 +1 304 304
+4 * 304 304
+4 * 304 304
+4 * 304
+3 * 304
+3 * 304 0 304
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=304 0x40406a -87 
* * 7296 2432 2736 0 20 11 0 20 11 304
+5 * 304 304
+1 * 304 304

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 608 0 608
+1 * 608
+3 * 608 0 608
+4 * 608 608
+4 * 608 608
+1 * 608 608

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 304 0 304
+1 * 304
+3 * 304
+4 * 304 0 304
+4 * 304 0 304
+4 * 304 0 304
+4 +1 304 304
+4 * 304 304
+4 * 304 304
+4 * 304
+3 * 304
+3 * 304 0 304
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=304 0x403df2 -87 
* * 7296 2432 2736 0 20 4 0 20 4 304 2
+5 * 304 304
+1 * 304 304

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 688 0 688
+1 * 688
+3 * 688 0 688
+4 +1 688 688
+4 * 688 688
+1 * 688 688

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1216 0 1216 1 0 0 1
+1 * 1216
+3 * 1216 0 1216
+4 +1 1216 1216 0 1 0 0 1
+4 * 1216 1216
+1 * 1216 1216

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 688 0 688
+1 * 688
+3 * 688 0 688 0 0 1 0 0 1
+4 +1 688 688
+4 * 688 688
+1 * 688 688

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1216 0 1216 1 0 0 1
+1 * 1216
+3 * 1216
+4 * 1216 0 1216
+4 +1 1216
+4 * 1216
+3 * 1216 0 1216
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1216 0x404ffe 790 
* * 7296 3648 2432 1 0 0 1
+5 * 1216 1216
+3 * 1216 1216
+1 * 1216 1216

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1216 0 1216 1 0 0 1
+1 * 1216
+3 * 1216 0 1216
+4 +1 1216 1216
+4 * 1216 1216
+1 * 1216 1216

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1216 0 1216 1 0 0 1
+1 * 1216
+3 * 1216
+4 * 1216 0 1216
+4 +1 1216
+4 * 1216
+3 * 1216 0 1216 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1216 0x40500c 790 
* * 7296 3648 2432 1 0 0 1
+5 * 1216 1216
+3 * 1216 1216
+1 * 1216 1216

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 608 0 608
+1 * 608
+3 * 608 0 608
+4 * 608 0 608
+4 * 608 608
+4 * 608 608
+1 * 608 608

fl=(5)
fn=(28)
0x404992 113 632 0 632 1 0 0 1
+1 * 632
+3 * 632 0 632
+4 +1 632
+10 * 632 632
+1 * 632 632

fn=(176)
0x4044cc 86 608 0 608
+1 * 608
+3 * 608 0 608
+4 * 608 608
+1 * 608 608

fn=(224)
0x403df2 129 304 0 304
+1 * 304
+3 * 304
+4 * 304 0 304
+4 * 304 0 304
+4 * 304 0 304
+4 +1 304 304
+4 * 304
+3 * 304
+5 * 304 0 304
cfi=(16)
cfn=(226)
calls=304 0x402d61 -20 
* * 2128 912 912
+5 * 304
+3 * 304 0 0 0 0 0 0 0 0 304 2
+2 * 304 304
+4 * 304 304 0 0 20 0 0 20
+2 * 304 0 304 0 0 4 0 0 4
+2 * 304 304
+1 * 304 304

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616
+3 * 616 0 616
cob=(5)
cfi=(8)
cfn=(164)
calls=616 0x387e4bb2f0 0 
* * 77964 20423 11105 21 4 0 21 4 0 19202 200 616
* * 616 616 0 1 1 0 1 1 0 0 0 616
+5 * 616 616
+1 * 616 616

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616
+3 * 616 0 616
cob=(5)
cfi=(8)
cfn=(164)
calls=616 0x387e4bb2f0 0 
* * 75869 19936 10268 0 1 0 0 1 0 18771 288 616
* * 616 616 0 0 0 0 0 0 0 0 0 616
+5 * 616 616
+1 * 616 616

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616
+4 * 616
+3 * 616 0 616
cfn=(102)
calls=616 0x4048de +12 
* * 3696 1232 1232 1 0 0 1
+5 * 616 616
+4 * 616 0 0 1 0 0 1
+3 * 616
+2 * 616 0 0 0 0 0 0 0 0 616
jcnd=616/616 +7 +3 
* * 
+7 +3 616 616
+4 * 616
+4 * 616
+3 * 616 0 616
cob=(5)
cfi=(8)
cfn=(32)
calls=616 0x387e4bd0b0 0 
* * 199939 29950 28660 23 13 33 23 13 33 33839 1286 616
* * 616 616 0 0 0 0 0 0 0 0 0 616
+5 +1 616 616
+1 * 616 616

fn=(18)
0x404a28 81 608 0 608 1 0 0 1
+1 * 608
+3 * 608 0 608 0 0 1 0 0 1
+4 * 608 0 608
+4 * 608 608
+1 * 608 608

fn=(92)
0x4049d4 81 608 0 608 1 0 0 1
+1 * 608
+3 * 608 0 608
+4 * 608 0 608
+4 * 608 608
+1 * 608 608

fn=(196)
0x404520 86 608 0 608
+1 * 608
+3 * 608 0 608
+4 * 608 608
+1 * 608 608

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616 1 0 0 1
+4 +2 616 616
+4 * 616
+3 * 616 0 616
cfn=(28)
calls=616 0x404992 +12 
* * 3696 1232 1232 1 0 0 1
+5 * 616 616
+4 * 616
+3 * 616
+2 * 616 0 0 0 0 0 0 0 0 616
jcnd=616/616 +7 +3 
* * 
+7 +3 616 616
+4 * 616
+4 * 616
+3 * 616 0 616
cob=(5)
cfi=(8)
cfn=(32)
calls=616 0x387e4bd0b0 0 
* * 198621 29297 31429 26 26 20 26 26 20 32672 1335 616
* * 616 616 0 1 1 0 1 1 0 0 0 616
+5 +1 616 616
+1 * 616 616

fn=(102)
0x4048de 113 632 0 632 1 0 0 1
+1 * 632
+3 * 632 0 632
+4 +1 632
+10 * 632 632
+1 * 632 632

fn=(266)
0x40406a 129 304 0 304
+1 * 304
+3 * 304
+4 * 304 0 304
+4 * 304 0 304
+4 * 304 0 304
+4 +1 304 304
+4 * 304
+3 * 304
+5 * 304 0 304
cfi=(16)
cfn=(226)
calls=304 0x402d61 -20 
* * 2128 912 912
+5 * 304
+3 * 304 0 0 0 0 0 0 0 0 304
+2 * 304 304
+4 * 304 304 0 0 20 0 0 20
+2 * 304 0 304 0 0 11 0 0 11
+2 * 304 304
+1 * 304 304

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +2 608 608
+4 * 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=608 0x404484 107 
* * 294490 97604 93960 25 3 4 25 3 4 11040 761 1212 151
+5 * 608 608
+1 * 608 608

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +2 608 608 0 1 0 0 1
+4 * 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=608 0x404a36 450 
* * 277466 91524 87880 24 3 4 24 3 4 11040 761 1212 151
+5 * 608 608
+1 * 608 608

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +2 608 608
+4 * 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=608 0x40439c 107 
* * 294490 97604 93960 7 1 20 7 1 20 11040 678 1212
+5 * 608 608
+1 * 608 608

fn=(116)
0x40439c 107 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +10 608 608
+4 * 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=608 0x4047d7 -26 
* * 285978 94564 90920 7 1 20 7 1 20 11040 678 1212
+5 +1 608 608
+1 * 608 608

fn=(118)
0x4047d7 91 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +2 608 608
+4 * 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=608 0x4049e2 450 
* * 277466 91524 87880 7 1 20 7 1 20 11040 678 1212
+5 * 608 608
+1 * 608 608

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +10 608 608
+4 * 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(52)
calls=608 0x404829 -26 
* * 285978 94564 90920 25 3 4 25 3 4 11040 761 1212 151
+5 +1 608 608
+1 * 608 608

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240 1 0 0 1
+4 +1 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+3 * 608 0 608
+4 * 608
+4 * 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=608 0x404380 726 
* * 6080 3040 2432
+5 * 608 608
+4 * 608 608
+1 * 608 608

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 608 0 608
+1 * 608
+3 * 608 0 608
+1 * 608
+4 * 608 0 608 1 0 0 1
+4 +2 608 608
+4 * 608
+3 * 608 0 608
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=608 0x40325e 113 
* * 3648 1824 1216
+5 * 608
+3 * 608 608
+4 * 608 608
+4 * 608 608
+4 * 608 608
+3 -1 608
+3 * 608
+3 * 608 0 608
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=608 0x40326c 148 
* * 18848 6080 7296 4 0 0 4
+5 +1 608 608
+4 * 608
+3 * 608 0 608
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=608 0x4031ec 159 
* * 125146 37848 24978 25 5 0 25 5 0 19616 195 1216
+5 * 608
jump=608 +28 * 
* * 
+28 * 608 0 0 1 0 0 1
+4 * 608 608
+1 * 608 608
+1 * 608 608

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616
+5 * 616 0 0 0 0 0 0 0 0 616
+2 +1 616 616
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(5)
cfn=(160)
calls=616 0x4044d6 -65 
* * 85356 22887 14185 22 5 0 22 5 0 19202 200 1232
+5 +1 616 616
+1 * 616 616

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 608 0 608
+1 * 608
+3 * 608 0 608
+1 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=608 0x4043ca -45 
* * 21888 7904 8512 4 0 4 4 0 4
+5 +1 608 608 0 1 0 0 1
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=608 0x404412 +43 
* * 236689 44124 42599 24 15 11 24 15 11 33425 1275 1216
+5 * 608
jump=608 +28 * 
* * 
+28 * 608
+4 * 608 608
+1 * 608 608
+1 * 608 608

fn=(14)
0x4043ca 90 608 0 608 1 0 0 1
+1 * 608
+3 * 608
+4 * 608 0 608 0 0 1 0 0 1
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfi=(4)
cfn=(16)
calls=608 0x404804 +24 
* * 10944 3648 4256 2 0 1 2 0 1
+5 * 608 608
+4 * 608 0 608 0 0 2 0 0 2
+7 * 608 608
+4 * 608 0 608 1 0 0 1
+8 * 608 608
+4 * 608 0 608
+8 +1 608 608
+1 * 608 608

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 608 0 608 1 0 0 1
+1 * 608
+3 * 608 0 608
+2 * 608 0 608
+2 * 608 0 608
+1 * 608 0 0 1 0 0 1
+4 * 608 0 608
+4 * 608 0 608
+4 +2 608 608
+4 * 608
+3 * 608 0 608
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=608 0x4039fc 117 
* * 3648 1824 1216 2 0 0 2
+5 * 608
+3 * 608 0 608
cfi=(3)
cfn=(84)
calls=608 0x4039ed -88 
* * 3648 1824 1216
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=608 0x402d74 645 
* * 7904 3648 1216
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608
+3 * 608
+3 * 608 0 608 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=608 0x403a0a 134 
* * 272864 56710 52420 22 9 29 22 9 29 34528 1233 1216
+5 +4 608 608
+4 * 608
+3 * 608 0 608
cfn=(106)
calls=608 0x40325e 113 
* * 3648 1824 1216 1 0 0 1
+5 * 608
+3 * 608 608
+4 * 608 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=608 0x403a98 565 
* * 15200 6080 4864 2 0 0 2
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(112)
calls=608 0x403a68 547 
* * 15200 6080 4864
+5 * 608
+3 * 608
+3 * 608
+3 * 608
+3 * 608 0 608
cfi=(11)
cfn=(114)
calls=608 0x403ac9 -60 
* * 303610 100644 97608 7 1 20 7 1 20 11040 678 1212
+5 -3 608 608
+4 * 608 0 608
+4 * 608
jump=608 +28 +4 
* * 
+28 +4 608
+4 * 608 608
+1 * 608 608
+2 * 608 608
+2 * 608 608
+1 * 608 608

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +2 616 616
+5 * 616 0 0 0 0 0 0 0 0 616 8
+2 +1 616 616
+4 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfi=(5)
cfn=(190)
calls=616 0x40452a -65 
* * 83261 22400 13348 0 1 0 0 1 0 18771 288 1232
+5 +1 616 616
+1 * 616 616

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616 1 0 0 1
+4 * 616 0 616
+4 0 616 616
+5 0 616 0 0 0 0 0 0 0 0 616
+2 0 616 616
+4 0 616 616
+4 0 616
+5 0 616
+3 0 616
+3 0 616 0 616
fi=(6) ???
cfi=(5)
cfn=(26)
calls=616 0x404730 99 
* 0 214637 34225 36357 30 27 20 30 27 20 33288 1335 1232
+5 0 616
fi=(6)
jump=616 +7 0 
* 0 
+7 0 616 616
+1 0 616 616

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 608 0 608 1 0 0 1
+1 * 608
+3 * 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+4 * 608 0 608
+4 * 608
+4 * 608 0 0 1 0 0 1
+4 * 608
+3 * 608
+3 * 608 0 608
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=608 0x404468 726 
* * 6080 3040 2432 1 0 0 1
+5 * 608 608
+4 * 608 608
+1 * 608 608

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+3 * 608 0 608
+4 * 608
+4 * 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfi=(10)
cfn=(44)
calls=608 0x404468 726 
* * 6080 3040 2432
+5 * 608 608
+4 * 608 608
+1 * 608 608

fn=(86)
0x403a0a 134 608 0 608
+1 * 608
+3 * 608 0 608
+1 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=608 0x4042e2 -45 
* * 21888 7904 8512 5 0 0 5
+5 +1 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=608 0x40432a +43 
* * 237600 44550 39652 16 9 29 16 9 29 34528 1233 1216
+5 * 608
jump=608 +28 * 
* * 
+28 * 608
+4 * 608 608
+1 * 608 608
+1 * 608 608

fn=(88)
0x4042e2 90 608 0 608 1 0 0 1
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608 1 0 0 1
cfi=(4)
cfn=(90)
calls=608 0x4047b2 +24 
* * 10944 3648 4256 3 0 0 3
+5 * 608 608
+4 * 608 0 608
+7 * 608 608
+4 * 608 0 608
+8 * 608 608
+4 * 608 0 608
+8 +1 608 608
+1 * 608 608

fn=(156)
0x4031ec 159 608 0 608 1 0 0 1
+1 * 608
+3 * 608 0 608
+1 * 608
+4 * 608 0 608
+4 +2 608 608
+4 * 608 608 0 1 0 0 1
+4 * 608
+3 * 608 608
+4 * 608 608
+3 * 608
+3 * 608
+3 * 608
+4 * 608
+3 * 608 608
+4 * 608 608
+3 -1 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(158)
calls=608 0x403ce6 +11 
* * 94138 26296 17074 22 5 0 22 5 0 19616 195 1216
+5 +1 608 608
+4 * 608
+3 * 608 0 608
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=608 0x4031b8 -82 
* * 13984 4864 4864 1 0 0 1
+5 * 608
jump=608 +28 * 
* * 
+28 * 608
+4 * 608 608
+1 * 608 608
+1 * 608 608

fn=(172)
0x4031b8 79 608 0 608 1 0 0 1
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 608
+4 * 608
+3 * 608 0 608
cfi=(4)
cfn=(174)
calls=608 0x403ccc +42 
* * 8512 3040 3040
+5 * 608 608
+1 * 608 608

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1248 0 1248 1 0 0 1
+1 * 1248
+3 * 1248 0 1248
+4 +1 1248 1248
+4 * 1248 1248 0 0 2 0 0 2
+4 * 1248
+3 * 1248 1248
+4 * 1248 1248
+3 * 1248
+3 * 1248
+3 * 1248
+4 * 1248 1248
+1 * 1248 1248

fn=(106)
0x40325e 113 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624 0 0 1 0 0 1
+4 +1 624 624
+4 * 624 624
+1 * 624 624

fn=(82)
0x4039fc 117 624 0 624 1 0 0 1
+1 * 624
+3 * 624 0 624 1 0 0 1
+4 +1 624 624
+4 * 624 624
+1 * 624 624

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 304 0 304
+1 * 304
+3 * 304
+4 * 304 0 304
+4 * 304 0 304
+4 +2 304 304
+4 * 304 304
+4 * 304 304
+4 * 304 304
+4 * 304
+3 * 304 0 0 0 0 0 0 0 0 304 8
jcnd=8/304 +51 +10 
* * 
+2 +3 296 296
+4 * 296 296
+4 * 296 296
+4 -1 296 296
+4 * 296
+3 * 296
+3 * 296 0 296
cfi=(3)
cfn=(222)
calls=296 0x403373 215 
* * 11248 3848 4144 0 19 3 0 19 3 296 2
+5 +2 296 296
+4 * 296 296
+4 * 296
+4 * 296 296
+4 * 296 0 296
+4 * 296
jump=296 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12839 3939 3428 36 5 8 36 5 8 893 64 47
+5 +2 304 304
+1 * 304 304

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 608 0 608 1 0 0 1
+1 * 608
+3 * 608 0 608
+2 * 608 0 608
+2 * 608 0 608
+1 * 608
+4 * 608 0 608 1 0 0 1
+4 * 608 0 608
+4 +2 608 608
+4 * 608
+3 * 608 0 608
cfn=(6)
calls=608 0x403b08 117 
* * 3648 1824 1216 1 0 1 1 0 1
+5 * 608
+3 * 608 0 608
cfi=(3)
cfn=(8)
calls=608 0x403afa -88 
* * 3648 1824 1216 1 0 0 1
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(10)
calls=608 0x402f54 645 
* * 7904 3648 1216 1 1 0 1 1
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608
+3 * 608
+3 * 608 0 608
cfn=(12)
calls=608 0x403b16 134 
* * 271953 56284 55367 29 15 15 29 15 15 33425 1275 1216
+5 +4 608 608 0 1 0 0 1
+4 * 608
+3 * 608 0 608
cfn=(40)
calls=608 0x40333c 113 
* * 3648 1824 1216 2 0 0 2
+5 * 608
+3 * 608 608
+4 * 608 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(42)
calls=608 0x403ba4 565 
* * 15200 6080 4864 3 0 0 3
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(46)
calls=608 0x403b74 547 
* * 15200 6080 4864
+5 * 608
+3 * 608
+3 * 608
+3 * 608
+3 * 608 0 608 1 0 0 1
cfi=(11)
cfn=(48)
calls=608 0x403bd5 -60 
* * 303610 100644 97608 26 3 4 26 3 4 11040 761 1212 151
+5 -3 608 608
+4 * 608 0 608
+4 * 608
jump=608 +28 +4 
* * 
+28 +4 608
+4 * 608 608
+1 * 608 608
+2 * 608 608
+2 * 608 608
+1 * 608 608

fn=(108)
0x403a98 565 608 0 608 1 0 0 1
+1 * 608
+3 * 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+4 * 608 0 608
+4 * 608
+4 * 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfi=(10)
cfn=(110)
calls=608 0x404380 726 
* * 6080 3040 2432 1 0 0 1
+5 * 608 608
+4 * 608 608
+1 * 608 608

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 608 0 608
+1 * 608
+3 * 608 0 608
+1 * 608
+4 * 608 0 608 1 0 0 1
+4 +2 608 608
+4 * 608
+3 * 608 0 608
cfn=(40)
calls=608 0x40333c 113 
* * 3648 1824 1216
+5 * 608
+3 * 608 608
+4 * 608 608
+4 * 608 608
+4 * 608 608
+3 -1 608
+3 * 608
+3 * 608 0 608
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=608 0x40334a 148 
* * 18848 6080 7296 2 0 0 2
+5 +1 608 608
+4 * 608
+3 * 608 0 608
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=608 0x4032ca 159 
* * 123018 37344 24138 3 1 0 3 1 0 19176 279 1216
+5 * 608
jump=608 +28 * 
* * 
+28 * 608 0 0 1 0 0 1
+4 * 608 608
+1 * 608 608
+1 * 608 608

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 616 0 616 1 0 0 1
+1 * 616 0 0 1 0 0 1
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 0 616 616
+5 0 616 0 0 0 0 0 0 0 0 616
+2 0 616 616
+4 0 616 616
+4 0 616
+5 0 616
+3 0 616
+3 0 616 0 616
fi=(6)
cfi=(5)
cfn=(100)
calls=616 0x40461a 99 
* 0 215955 34878 33588 26 13 33 26 13 33 34455 1286 1232
+5 0 616
fi=(6)
jump=616 +7 0 
* 0 
+7 0 616 616
+1 0 616 616

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 140600 0 140600
+1 * 140600
+3 * 140600 0 140600
+4 * 140600 0 140600
+4 +1 140600 140600
+4 * 140600 140600
+3 * 140600 140600
+4 * 140600
+4 * 140600
+3 * 140600 140600
+1 * 140600 140600

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 140600 0 140600
+1 * 140600
+3 * 140600 0 140600 1 0 0 1
+4 * 140600 0 140600
+4 +1 140600 140600
+4 * 140600 140600
+3 * 140600 140600
+4 * 140600
+4 * 140600
+3 * 140600 140600
+1 * 140600 140600

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 608
+4 * 608
+3 * 608 0 608
cfi=(4)
cfn=(194)
calls=608 0x403d7e +42 
* * 8512 3040 3040 1 0 0 1
+5 * 608 608
+1 * 608 608

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 608 0 608 1 0 0 1
+1 * 608
+3 * 608 0 608
+1 * 608
+4 * 608 0 608
+4 +2 608 608
+4 * 608 608
+4 * 608
+3 * 608 608
+4 * 608 608
+3 * 608
+3 * 608
+3 * 608
+4 * 608
+3 * 608 608
+4 * 608 608
+3 -1 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(188)
calls=608 0x403d98 +11 
* * 92010 25792 16234 1 1 0 1 1 0 19176 279 1216
+5 +1 608 608
+4 * 608
+3 * 608 0 608
cfn=(192)
calls=608 0x403296 -82 
* * 13984 4864 4864 1 0 0 1
+5 * 608
jump=608 +28 * 
* * 
+28 * 608
+4 * 608 608
+1 * 608 608
+1 * 608 608

fn=(2)
0x402d74 645 2464 0 2464 1 0 0 1
+1 * 2464
+3 * 2464 0 2464 0 0 1 0 0 1
+4 +1 2464 2464
+4 * 2464 2464 0 1 1 0 1 1
+4 * 2464
+3 * 2464 2464
+4 * 2464 2464
+3 * 2464
+3 * 2464
+3 * 2464
+4 * 2464 2464
+1 * 2464 2464

fn=(20)
0x404412 179 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 +2 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(22)
calls=608 0x404236 -14 
* * 221489 36828 38343 23 15 11 23 15 11 33425 1275 1216
+5 * 608 608
+4 * 608 0 608
+3 +1 608 608
+4 * 608 608 0 1 0 0 1
+3 * 608 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+3 * 608 608
+4 * 608
+4 * 608
+3 * 608 608
+4 * 608 0 608
+4 +1 608 608
+1 * 608 608

fn=(94)
0x40432a 179 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 +2 608 608
+4 * 608 608 0 1 0 0 1
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(96)
calls=608 0x403fbe -14 
* * 222400 37254 35396 15 9 29 15 9 29 34528 1233 1216
+5 * 608 608
+4 * 608 0 608
+3 +1 608 608
+4 * 608 608
+3 * 608 608
+4 * 608 0 608
+4 +1 608 608
+4 * 608 608
+3 * 608 608
+4 * 608
+4 * 608
+3 * 608 608
+4 * 608 0 608
+4 +1 608 608
+1 * 608 608

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 304 0 304
+1 * 304
+3 * 304 0 0 1 0 0 1
+4 * 304 0 304
+4 * 304 0 304
+4 +2 304 304
+4 * 304 304
+4 * 304 304
+4 * 304 304
+4 * 304
+3 * 304 0 0 0 0 0 0 0 0 304
jcnd=8/304 +51 +10 
* * 
+2 +3 296 296
+4 * 296 296
+4 * 296 296
+4 -1 296 296
+4 * 296
+3 * 296
+3 * 296 0 296
cfi=(3)
cfn=(264)
calls=296 0x4036b1 215 
* * 11248 3848 4144 0 19 7 0 19 7 296
+5 +2 296 296
+4 * 296 296
+4 * 296
+4 * 296 296
+4 * 296 0 296
+4 * 296
jump=296 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12465 3729 3253 27 13 31 27 13 31 838 81 47
+5 +2 304 304
+1 * 304 304

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fl=(12)
fn=(120)
0x4049e2 450 608 0 608
+1 * 608
+3 * 608 0 608
+1 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +10 608 608
+4 * 608
+3 * 608 0 608
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=608 0x404bc6 288 
* * 9120 3648 3040 3 0 0 3
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(122)
calls=608 0x404bc6 288 
* * 9120 3648 3040
+5 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=608 0x404be0 -36 
* * 245850 80580 76936 4 1 20 4 1 20 11040 678 1212
+5 +1 608
+4 * 608 608
+1 * 608 608
+1 * 608 608

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 656 0 656
+1 * 656
+3 * 656
+4 * 656 0 656 1 0 0 1
+4 +1 656 656
+4 * 656
+3 * 656 0 656
cfi=(13)
cfn=(130)
calls=656 -33 -66 
* * 3936 1968 1312 0 0 1 0 0 1
+5 * 656 656
+1 * 656 656

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1216 0 1216
+1 * 1216
+3 * 1216
+4 * 1216 0 1216
+4 +1 1216 1216
+4 * 1216
+3 * 1216 0 1216
cfi=(13)
cfn=(134)
calls=1216 0x404e98 -58 
* * 19456 7296 6080 2 0 0 2
+5 * 1216 1216
+1 * 1216 1216

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +8 608 0 608
+4 +3 608 608
+4 * 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=608 0x404eb5 -22 
* * 180186 58692 54440 1 1 20 1 1 20 11040 678 1212
+5 +1 608 608
+1 * 608 608

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1216 0 1216 1 0 0 1
+1 * 1216
+3 * 1216
+4 * 1216 0 1216
+4 +1 1216 1216
+4 * 1216
+3 * 1216 0 1216
cfi=(13)
cfn=(124)
calls=1216 0x404d36 -77 
* * 7296 3648 2432 2 0 0 2
+5 * 1216 1216
+1 * 1216 1216

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1216 0 1216 1 0 0 1
+1 * 1216
+3 * 1216
+4 * 1216 0 1216 1 0 0 1
+4 +1 1216 1216
+4 * 1216
+3 * 1216 0 1216
cfi=(13)
cfn=(58)
calls=1216 0x404d8f -77 
* * 7296 3648 2432 1 0 0 1
+5 * 1216 1216
+1 * 1216 1216

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624 1 0 0 1
+4 * 624 0 624
+4 * 624 0 624
+4 +2 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624
+4 * 624 0 624
+4 +1 624 624
+5 * 624 0 0 0 0 0 0 0 0 624
jcnd=8/624 +33 +2 
* * 
+2 +1 616 616
+4 * 616
+8 * 616 616
+4 * 616 616
+4 * 616
+3 * 616 0 0 1 0 0 1
+3 * 616 0 616 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=616 0x3877c83840 0 
* * 164284 52320 51093 11 2 20 11 2 20 10516 765 611 151
* * 616 616 0 1 1 0 1 1 0 0 0 616
+5 +1 624 624
+4 * 624
+8 * 624 624
+4 * 624
+3 +1 624 624
+1 * 624 624

fn=(140)
0x404eb5 368 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624 1 0 0 1
+4 * 624 0 624
+4 * 624 0 624 0 0 1 0 0 1
+4 +2 624 624
+4 * 624 624
+4 * 624
+3 * 624
+3 * 624
+4 * 624 0 624
+4 +1 624 624
+5 * 624 0 0 0 0 0 0 0 0 624
jcnd=8/624 +33 +2 
* * 
+2 +1 616 616
+4 * 616
+8 * 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cob=(2)
cfi=(9)
cfn=(78)
calls=616 0x3877c83840 0 
* * 164284 52320 51093 0 1 21 0 1 21 10516 684 611
* * 616 616 0 0 0 0 0 0 0 0 0 616
+5 +1 624 624
+4 * 624
+8 * 624 624
+4 * 624
+3 +1 624 624
+1 * 624 624

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 608 0 608
+1 * 608
+3 * 608
+4 * 608 0 608 1 0 0 1
+4 * 608 0 608
+4 * 608 0 608
+4 +8 608 0 608
+4 +3 608 608
+4 * 608 608
+4 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(74)
calls=608 0x404f37 -22 
* * 180186 58692 54440 14 3 3 14 3 3 11040 761 1212 151
+5 +1 608 608
+1 * 608 608

fn=(126)
0x404be0 424 608 0 608
+1 * 608
+3 * 608 0 608
+2 * 608 0 608
+1 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +4 608 608
+4 * 608
+3 * 608 0 608
cfn=(128)
calls=608 0x404878 277 
* * 9120 3648 3040 1 0 0 1
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(132)
calls=608 0x404d44 277 
* * 15200 5472 4864 2 0 0 2
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(132)
calls=608 0x404d44 277 
* * 15200 5472 4864
+5 * 608
+3 * 608
+3 * 608
+3 * 608 0 608
cfn=(138)
calls=608 0x404d5e -49 
* * 189306 61732 58088 1 1 20 1 1 20 11040 678 1212
+5 +1 608
+4 * 608 608
+1 * 608 608
+2 * 608 608
+1 * 608 608

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 608 0 608
+1 * 608
+3 * 608 0 608
+1 * 608
+4 * 608 0 608 1 0 0 1
+4 * 608 0 608
+4 * 608 0 608
+4 +10 608 608
+4 * 608
+3 * 608 0 608
cfn=(56)
calls=608 0x404c38 288 
* * 9120 3648 3040 3 0 0 3
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(56)
calls=608 0x404c38 288 
* * 9120 3648 3040
+5 * 608 608
+4 * 608
+3 * 608
+3 * 608 0 608
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=608 0x404c52 -36 
* * 245850 80580 76936 20 3 4 20 3 4 11040 761 1212 151
+5 +1 608
+4 * 608 608
+1 * 608 608
+1 * 608 608

fn=(60)
0x404c52 424 608 0 608
+1 * 608
+3 * 608 0 608
+2 * 608 0 608
+1 * 608
+4 * 608 0 608
+4 * 608 0 608
+4 * 608 0 608
+4 +4 608 608
+4 * 608
+3 * 608 0 608
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=608 0x40492d 277 
* * 9120 3648 3040 2 0 0 2
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=608 0x404d9d 277 
* * 15200 5472 4864 2 0 1 2 0 1
+5 * 608
+3 * 608 608
+4 * 608
+3 * 608 0 608
cfn=(66)
calls=608 0x404d9d 277 
* * 15200 5472 4864
+5 * 608
+3 * 608
+3 * 608
+3 * 608 0 608
cfn=(72)
calls=608 0x404db7 -49 
* * 189306 61732 58088 15 3 3 15 3 3 11040 761 1212 151
+5 +1 608
+4 * 608 608
+1 * 608 608
+2 * 608 608
+1 * 608 608

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 656 0 656 1 0 0 1
+1 * 656
+3 * 656
+4 * 656 0 656
+4 +1 656 656
+4 * 656
+3 * 656 0 656 1 0 0 1
cfi=(13)
cfn=(64)
calls=656 -33 -66 
* * 3936 1968 1312
+5 * 656 656
+1 * 656 656

fn=(66)
0x404d9d 277 1216 0 1216
+1 * 1216
+3 * 1216
+4 * 1216 0 1216
+4 +1 1216 1216
+4 * 1216
+3 * 1216 0 1216
cfi=(13)
cfn=(68)
calls=1216 0x404f1a -58 
* * 19456 7296 6080 2 0 1 2 0 1
+5 * 1216 1216
+1 * 1216 1216

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fl=(10)
fn=(136)
0x404ffe 790 1216 0 1216 1 0 0 1
+1 * 1216
+3 * 1216 0 1216
+4 +1 1216 1216
+4 * 1216 1216
+1 * 1216 1216

fn=(44)
0x404468 726 1216 0 1216
+1 * 1216
+3 * 1216 0 1216
+4 * 1216 0 1216
+4 * 1216 1216
+4 * 1216 1216
+3 * 1216 1216
+4 * 1216 0 1216 1 0 0 1
+3 * 1216 1216
+1 * 1216 1216

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1216 0 1216 1 0 0 1
+1 * 1216
+3 * 1216 0 1216
+4 +1 1216 1216
+4 * 1216 1216
+1 * 1216 1216

fn=(110)
0x404380 726 1216 0 1216 1 0 0 1
+1 * 1216
+3 * 1216 0 1216
+4 * 1216 0 1216
+4 * 1216 1216
+4 * 1216 1216
+3 * 1216 1216
+4 * 1216 0 1216
+3 * 1216 1216
+1 * 1216 1216

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 616 0 616 1 0 0 1
+1 * 616
+3 * 616 0 616
+4 * 616 0 616 1 0 0 1
+4 * 616 616
+1 * 616 616

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 +4 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=616 0x40454c -14 
* * 3696 1232 1848 1 0 0 1
+5 +2 616 616
+1 * 616 616

fn=(150)
0x40326c 148 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +3 616 616 0 1 0 0 1
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=616 0x403d1a -29 
* * 11088 3696 4312 3 0 0 3
+5 +1 616 616
+1 * 616 616

fn=(180)
0x40334a 148 616 0 616
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 * 616 0 616
+4 +3 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(182)
calls=616 0x403dcc -29 
* * 11088 3696 4312 2 0 0 2
+5 +1 616 616
+1 * 616 616

fn=(152)
0x403d1a 122 616 0 616 1 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
+4 * 616 0 616
+4 +4 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(154)
calls=616 0x4044f8 -14 
* * 3696 1232 1848 2 0 0 2
+5 +2 616 616
+1 * 616 616

fn=(184)
0x40454c 112 616 0 616 1 0 0 1
+1 * 616
+3 * 616 0 616
+4 * 616 0 616
+4 * 616 616
+1 * 616 616

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 3004 477 478 9 12 9 9 12 9 479 60 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3411 704 656 13 4 4 13 4 4 543 53 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 5 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 304 0 304 1 0 0 1
+1 * 304
+3 * 304
+4 * 304 0 304
+4 * 304 0 304
+4 +1 304 304
+4 * 304
+3 * 304 0 304
cfi=(2)
cfn=(2)
calls=304 0x402d74 645 
* * 3952 1824 608
+5 * 304
+3 * 304 0 304
+3 +1 304 304
+6 * 304 0 304
+3 * 304 304
+6 * 304 0 304
+3 +1 304 304
+6 * 304 0 304 1 0 0 1
+3 * 304 304
+6 * 304 0 304
+3 +2 304 0 304
+7 * 304
jump=304 +86 * 
* * 
+2 +1 46664 46664
+3 * 46664
+3 * 46664 46664
+4 * 46664
+3 * 46664
+3 * 46664 0 46664
cfi=(2)
cfn=(144)
calls=46664 0x402d9a 770 
* * 513304 233320 139992
+5 * 46664 46664
+4 * 46664 46664
+5 * 46664
+4 * 46664 0 46664
+5 +1 46664 46664
+3 * 46664
+3 * 46664 46664
+4 * 46664
+3 * 46664
+3 * 46664 0 46664
cfi=(2)
cfn=(146)
calls=46664 0x402dba 770 
* * 513304 233320 139992 1 0 0 1
+5 * 46664 46664
+2 * 46664
+4 * 46664 46664
+5 * 46664
+4 * 46664 0 46664
+5 -2 46664 0 46664
+4 * 46664 46664
+3 * 46664
+3 * 46664 46664
+3 * 46664 0 0 0 0 0 0 0 0 46664 305
jcnd=46360/46664 -93 +1 
* * 
-9 * 304 304 0 1 0 0 1
+3 * 304
+3 * 304 304
+3 * 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 -93 +1 
* * 
+2 +4 304 304
+3 * 304
+3 * 304
+4 * 304 304 0 1 0 0 1
+5 * 304
+4 * 304
+3 * 304 0 304
+5 +1 304 304
+3 * 304
+3 * 304
+4 * 304 304
+5 * 304
+4 * 304
+3 * 304 0 304
+5 +1 304 0 304
+7 * 304
jump=304 0x4016ee * 
* * 
+2 +1 46664 46664
+3 * 46664
+3 * 46664 46664
+4 * 46664
+3 * 46664 0 0 1 0 0 1
+3 * 46664 0 46664
cfi=(2)
cfn=(146)
calls=46664 0x402dba 770 
* * 513304 233320 139992
+5 * 46664 46664
+2 * 46664
+4 * 46664 46664
+5 * 46664 0 46664
+5 +1 46664 46664
+3 * 46664
+3 * 46664 46664
+4 * 46664
+3 * 46664
+3 * 46664 0 46664
cfi=(2)
cfn=(144)
calls=46664 0x402d9a 770 
* * 513304 233320 139992
+5 * 46664 46664
+4 * 46664 46664
+5 * 46664 0 46664
+5 +1 46664 46664
+5 * 46664 46664
+5 * 46664 46664
+5 * 46664
+4 * 46664 0 46664
+5 +1 46664 46664
+5 * 46664 46664
+5 * 46664 46664
+5 * 46664
+4 * 46664 0 46664
+5 -4 46664 0 46664
+4 * 46664 46664
+3 * 46664
+3 * 46664 46664
+3 * 46664 0 0 0 0 0 0 0 0 46664 305
jcnd=46360/46664 0x401672 +1 
* * 
-9 * 304 304 0 1 0 0 1
+3 * 304
+3 * 304 304
+3 * 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 0x401672 +1 
* * 
+6 +6 304 304 0 1 0 0 1
+5 * 304 304
+5 * 304 0 304
+5 +2 304 304
+3 +1 304 0 304
+3 * 304 304
+5 * 304 304
+1 * 304 304

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 304
+7 * 304
+7 * 304
+3 * 304
+3 * 304 0 304
cfi=(2)
cfn=(4)
calls=304 0x4030b2 310 
* * 327743 93366 88399 63 18 19 63 18 19 22234 1158 1214 151
+5 * 304
+7 * 304
+7 * 304
+3 * 304
+3 * 304 0 304
cfi=(2)
cfn=(80)
calls=304 0x402ff4 310 
* * 328551 93604 86956 37 10 49 37 10 49 22858 1042 1214
+5 * 304 0 0 1 0 0 1
+7 * 304
+7 * 304
+3 * 304
+3 * 304 0 304
cfn=(142)
calls=304 0x401585 -52 
* * 4872816 2154144 1125104 8 0 0 8 0 0 93936 610
+5 * 304 0 304
+8 * 304 304
+6 * 304 0 304
+6 * 304
+7 * 304
+3 * 304 0 304
cfi=(2)
cfn=(148)
calls=304 0x402df4 414 
* * 81117 25612 18569 31 5 0 31 5 0 9808 100 608
+5 * 304
+7 * 304
+3 * 304 0 304 1 0 0 1
cfi=(2)
cfn=(178)
calls=304 0x402e74 414 
* * 80053 25360 18149 7 1 0 7 1 0 9588 141 608
+5 +2 304
+7 * 304
+7 * 304
+3 * 304
+3 * 304 0 304
cfi=(2)
cfn=(4)
calls=304 0x4030b2 310 
* * 327468 93354 88288 4 1 1 4 1 1 22231 878 1214
+5 * 304
+7 * 304
+7 * 304
+3 * 304
+3 * 304 0 304
cfi=(2)
cfn=(80)
calls=304 0x402ff4 310 
* * 327571 93542 86784 0 0 0 0 0 0 22710 869 1214
+5 * 304 304
+6 * 304 0 0 1 0 0 1
+7 * 304
+7 * 304 0 304
+6 * 304 304
+8 * 304
+3 * 304
+3 * 304 0 304
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=304 0x401719 -33 
* * 2257808 939968 517864 4 0 0 4 0 0 46968 305
+5 * 304 0 304
+8 * 304 304
+6 * 304 0 304
+6 * 304
+7 * 304 0 0 1 0 0 1
+3 * 304 0 304
cfi=(2)
cfn=(148)
calls=304 0x402df4 414 
* * 81117 25612 18569 0 0 0 0 0 0 9808 95 608
+5 * 304
+7 * 304
+3 * 304 0 304
cfi=(2)
cfn=(178)
calls=304 0x402e74 414 
* * 80053 25360 18149 0 0 0 0 0 0 9588 138 608
+5 +2 304 304
+7 * 304
+3 * 304 0 304
cfi=(2)
cfn=(2)
calls=304 0x402d74 645 
* * 3952 1824 608
+5 * 304 304
+6 * 304
+3 * 304
+3 * 304
+3 * 304 304
+7 * 304
+3 * 304 0 0 1 0 0 1
+3 * 304 0 304
cfi=(2)
cfn=(144)
calls=304 0x402d9a 770 
* * 3344 1520 912
+5 * 304
+3 * 304
+7 * 304
+3 * 304
+3 * 304 0 304
cfi=(2)
cfn=(200)
calls=304 0x402eda 901 
* * 32143 11779 9148 39 24 11 39 24 11 1493 74 47
+5 +1 304 304
+7 * 304
+3 * 304 0 304
cfi=(2)
cfn=(10)
calls=304 0x402f54 645 
* * 3952 1824 608 0 1 0 0 1
+5 * 304 304
+6 * 304
+3 * 304
+3 * 304
+3 * 304 304
+7 * 304 0 0 1 0 0 1
+3 * 304
+3 * 304 0 304
cfi=(2)
cfn=(146)
calls=304 0x402dba 770 
* * 3344 1520 912
+5 * 304
+3 * 304
+7 * 304
+3 * 304
+3 * 304 0 304
cfi=(2)
cfn=(244)
calls=304 0x402f7a 901 
* * 31769 11569 8973 28 32 38 28 32 38 1438 81 47
+5 +1 304 304
+7 * 304
+3 * 304 0 304
cfi=(2)
cfn=(10)
calls=304 0x402f54 645 
* * 3952 1824 608
+5 * 304 304
+6 * 304
+3 * 304
+3 * 304
+3 * 304 304 0 1 0 0 1
+7 * 304
+3 * 304
+3 * 304 0 304
cfi=(2)
cfn=(146)
calls=304 0x402dba 770 
* * 3344 1520 912
+5 * 304 304
+2 * 304
+4 * 304 304
+8 * 304 304
+8 * 304 0 304
+8 +1 304 304
+7 * 304
+3 * 304 0 304
cfi=(2)
cfn=(2)
calls=304 0x402d74 645 
* * 3952 1824 608
+5 * 304 304 0 1 0 0 1
+6 * 304
+3 * 304
+3 * 304
+3 * 304 304
+7 * 304
+3 * 304
+3 * 304 0 304
cfi=(2)
cfn=(144)
calls=304 0x402d9a 770 
* * 3344 1520 912
+5 * 304 304
+4 * 304 304
+8 * 304
+4 * 304 304
+8 * 304
+3 * 304 0 304
+8 +2 304 0 304
+7 -12 304 304
+8 * 304 304
+7 * 304 0 0 0 0 0 0 0 0 304 1
jcnd=1/304 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 304
+7 * 304
+3 * 304 0 304
cfi=(2)
cfn=(2)
calls=304 0x402d74 645 
* * 3952 1824 608 2 0 1 2 0 1
+5 * 304
+3 * 304 304
+7 * 304
+3 * 304 0 304
cfi=(2)
cfn=(2)
calls=304 0x402d74 645 
* * 3952 1824 608 0 1 0 0 1
+5 * 304
+3 * 304 0 0 0 0 0 0 0 0 304 1
+2 * 304 0 0 1 0 0 1
+5 * 304
jump=304 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 304
+2 * 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 304 0 304
+1 * 304
+3 * 304
+4 * 304 0 304
+4 * 304 0 304
+4 * 304 0 304
+5 +1 304 304
+4 * 304
+3 * 304 0 304
cfi=(2)
cfn=(2)
calls=304 0x402d74 645 
* * 3952 1824 608
+5 * 304
+3 * 304 0 304
+3 +1 304 304 0 1 0 0 1
+6 * 304 0 304
+3 * 304 304
+6 * 304 0 304
+3 +2 304 0 304
+7 * 304
jump=304 +86 * 
* * 
+2 +1 46664 46664
+3 * 46664
+3 * 46664 46664
+4 * 46664
+3 * 46664
+3 * 46664 0 46664
cfi=(2)
cfn=(144)
calls=46664 0x402d9a 770 
* * 513304 233320 139992
+5 * 46664 46664
+4 * 46664 46664
+5 * 46664
+4 * 46664 0 46664
+5 +1 46664 46664
+3 * 46664
+3 * 46664 46664
+4 * 46664
+3 * 46664
+3 * 46664 0 46664
cfi=(2)
cfn=(146)
calls=46664 0x402dba 770 
* * 513304 233320 139992
+5 * 46664 46664
+2 * 46664
+4 * 46664 46664
+5 * 46664
+4 * 46664 0 46664
+5 -2 46664 0 46664
+4 * 46664 46664
+3 * 46664
+3 * 46664 46664
+3 * 46664 0 0 0 0 0 0 0 0 46664 305
jcnd=46360/46664 -93 +1 
* * 
-9 * 304 304 0 1 0 0 1
+3 * 304
+3 * 304 304
+3 * 304 0 0 0 0 0 0 0 0 304
jcnd=304/304 -93 +1 
* * 
+2 +4 304 304
+3 * 304
+3 * 304 0 0 1 0 0 1
+4 * 304 304
+5 * 304
+4 * 304
+3 * 304 0 304
+5 +1 304 304
+3 * 304
+3 * 304
+4 * 304 304
+5 * 304
+4 * 304
+3 * 304 0 304
+5 +1 304 304
+5 * 304 304
+5 * 304 304
+5 * 304 0 0 1 0 0 1
+4 * 304
+3 * 304 0 304
+5 +2 304 304
+3 +1 304 0 304
+3 * 304 304
+5 * 304 304
+1 * 304 304

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1232 0 1232 1 0 0 1
+5 0 1232 0 1232
+5 0 1232
+3 0 1232 0 1232
+5 0 1232
+4 0 1232 1232 0 0 1 0 0 1
+7 0 1232 1232 0 0 1 0 0 1
+3 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
+6 0 1232 1232 0 0 1 0 0 1
+7 0 1232 1232 0 1 1 0 1 1
+4 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
+2 0 1232 1232 0 0 1 0 0 1
+3 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
jcnd=1232/1232 +97 0 
* 0 
+18 0 1232
+3 0 1232
+3 0 1232 0 1232
cfn=(38) _int_malloc
calls=1232 0x3877c79a00 0 
* 0 327104 40767 49001 41 32 52 41 32 52 52959 2529
+5 0 1232
+3 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
+2 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
+2 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232 7
+2 0 1232 1232
+7 0 1232 0 0 0 0 0 0 0 0 1232
jcnd=1232/1232 +13 0 
* 0 
+13 0 1232 0 1232
+2 0 1232 0 0 0 0 0 0 0 0 1232 85
+6 0 1232
+3 0 1232 1232
+4 0 1232 1232
+5 0 1232 1232
+5 0 1232
+4 0 1232 1232
+1 0 1232 0 0 1 0 0 1
+5 0 1232 1232 0 0 1 0 0 1
+7 0 1232 0 0 0 0 0 0 0 0 1232
jcnd=1232/1232 +14 0 
* 0 
+14 0 1232 0 1232 1 0 0 1
+3 0 1232 0 0 0 0 0 0 0 0 1232
+6 0 1232
jump=1232 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1232 0 1232 1 0 0 1
+2 0 1232
+3 0 1232
+3 0 1232 0 1232
+2 0 1232
+3 0 1232 0 1232
+1 0 1232
+3 0 1232 0 1232
+1 0 1232
+3 0 1232
+4 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
+6 0 1232
+4 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232 7
jcnd=10/1232 0x3877c838d1 0 
* 0 
+2 0 1222
+3 0 1222
+3 0 1222
+3 0 1222
+3 0 1222
+3 0 1222 0 0 0 0 0 0 0 0 1222
jcnd=1222/1222 +41 0 
* 0 
+41 0 1222 0 0 1 0 0 1
+3 0 1222 0 0 0 0 0 0 0 0 1222
jcnd=1222/1222 0x3877c839c0 0 
* 0 
+24 0 1222
+3 0 1222
+4 0 1222
+3 0 1222
+3 0 1222
+3 0 1222
+3 0 1222
+3 0 1222 0 0 0 0 0 0 0 0 1222 678
jcnd=618/1222 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 614
+10 0 614 614 0 0 2 0 0 2
+3 0 614
+4 0 614 0 614
+3 0 614
+4 0 614
+4 0 614 0 0 0 0 0 0 0 0 614
jcnd=614/614 -18 0 
* 0 
-18 0 1898 1898
+3 0 1898
+4 0 1898 0 1898
+3 0 1898
+4 0 1898
+4 0 1898 0 0 0 0 0 0 0 0 1898 11
jcnd=1284/1898 -18 0 
* 0 
+2 0 1232
+4 0 1232
+3 0 1232 1232
+1 0 1232 1232
+1 0 1232 1232
+2 0 1232 1232 0 1 0 0 1
+2 0 1232 1232
0x3877c839c0 0 1222 0 0 1 0 0 1
+3 0 1222
+3 0 1222
+3 0 1222
+4 0 1222 0 1222 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1222 0x3877c89b20 0 
* 0 258874 95968 93524 6 1 40 6 1 40 12380 753 1222 151
+5 0 1222
jump=1222 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1232 1232 0 1 1 0 1 1
+7 0 1232 1232 0 0 1 0 0 1
+3 0 1232
+3 0 1232 0 0 1 0 0 1 0 0 1232
+6 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
+6 0 1232 1232
+4 0 1232
+4 0 1232
+2 0 1232 0 0 0 0 0 0 0 0 1232
+2 0 1232
+2 0 1232
+7 0 1232 0 0 0 0 0 0 0 0 1232
jcnd=1232/1232 +14 0 
* 0 
+14 0 1232
+2 0 1232
cfn=(170) _int_free
calls=1232 0x3877c78650 0 
* 0 130425 35431 21373 17 2 0 17 2 0 31813 488

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1232 0 1232 1 0 0 1
+2 0 1232 0 1232
+2 0 1232 0 1232
+2 0 1232
+3 0 1232 0 1232
+2 0 1232 0 1232
+1 0 1232 0 1232
+1 0 1232
+3 0 1232
+4 0 1232 1232
+4 0 1232 0 1232
+4 0 1232
+3 0 1232
+4 0 1232
+3 0 1232
+3 0 1232
+3 0 1232 0 0 1 0 0 1 0 0 1232
+6 0 1232
+4 0 1232 0 0 0 0 0 0 0 0 1232
+6 0 1232
+4 0 1232 0 0 0 0 0 0 0 0 1232
+6 0 1232 1232
+7 0 1232 0 0 0 0 0 0 0 0 1232 4
jcnd=1108/1232 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1108
+2 0 1108 0 0 0 0 0 0 0 0 1108
+6 0 1108 1108 0 1 0 0 1
+4 0 1108
+3 0 1108
+2 0 1108 0 0 0 0 0 0 0 0 1108
jcnd=1108/1108 0x3877c78a40 0 
* 0 
+6 0 1108 1108
+4 0 1108
+3 0 1108 0 0 0 0 0 0 0 0 1108
+6 0 1108 1108
+5 0 1108
+4 0 1108 0 0 0 0 0 0 0 0 1108
jcnd=1108/1108 0x3877c7907c 0 
* 0 
+6 0 1108 1108
+5 0 1108
+4 0 1108 0 0 0 0 0 0 0 0 1108
+6 0 1108
+4 0 1108 0 0 1 0 0 1 0 0 1108
+6 0 1108
+4 0 1108 1108
+7 0 1108 0 0 0 0 0 0 0 0 1108
+6 0 1108 1108
+6 0 1108
+2 0 1108 0 0 0 0 0 0 0 0 1108
+6 0 1108 1108
+4 0 1108 0 0 0 0 0 0 0 0 1108 5
jcnd=1104/1108 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1108 1108 0 1 0 0 1
+4 0 1108 0 0 0 0 0 0 0 0 1108
+6 0 1108 1108 0 0 1 0 0 1
+6 0 1108 0 0 1 0 0 1 0 0 1108 60
jcnd=45/1108 0x3877c78a78 0 
* 0 
+6 0 1063 1063
+5 0 1063 1063
+5 0 1063 1063
+4 0 1063 0 0 0 0 0 0 0 0 1063
+6 0 1063 1063
+4 0 1063 0 0 0 0 0 0 0 0 1063
+6 0 1063 1063
+9 0 1063 0 1063
+4 0 1063 0 1063
+4 0 1063 0 0 0 0 0 0 0 0 1063 333
jcnd=655/1063 +16 0 
* 0 
+2 0 408 408
+5 0 408
+3 0 408 0 0 1 0 0 1 0 0 408
+6 0 1063
+3 0 1063
+4 0 1063 1063
+4 0 1063 1063
+4 0 1063 0 0 0 0 0 0 0 0 1063
-12 0 45
+4 0 45 45
+4 0 45 45
+4 0 45 0 0 0 0 0 0 0 0 45
+6 0 1108
+7 0 1108 0 1108
+4 0 1108 0 1108
+4 0 1108 0 0 0 0 0 0 0 0 1108 84
jcnd=441/1108 +18 0 
* 0 
+2 0 667 0 667
+8 0 667 0 667
+8 0 667 0 667
+4 0 667
+3 0 667 0 667 1 0 0 1
+4 0 667
+4 0 667 0 667
+4 0 667 0 667
+4 0 667
+7 0 667 0 0 0 0 0 0 0 0 667
jcnd=667/667 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1108 0 0 1 0 0 1
+5 0 1108 1108
+4 0 1108 1108
+7 0 1108 0 0 0 0 0 0 0 0 1108
jcnd=1108/1108 +16 0 
* 0 
+16 0 1108 0 1108
+5 0 1108 0 0 0 0 0 0 0 0 1108
+6 0 1108
+3 0 1108
jump=1108 0x3877c7878f 0 
* 0 
+10 0 45 0 45
+6 0 45 0 0 1 0 0 1
jump=45 0x3877c78885 0 
* 0 
0x3877c78b20 0 1108 1108 0 1 0 0 1
+4 0 1108
+2 0 1108 0 0 0 0 0 0 0 0 1108
+6 0 1108 1108
+7 0 1108 0 0 0 0 0 0 0 0 1108
jcnd=1108/1108 +15 0 
* 0 
+15 0 1108 0 1108 1 0 0 1
+4 0 1108 0 0 0 0 0 0 0 0 1108
+6 0 1108
+4 0 1108 1108
+1 0 1108 1108
+1 0 1108 1108
+2 0 1108 1108
+2 0 1108 1108
+2 0 1108 1108
+2 0 1108 1108
0x3877c7907c 0 1108 1108 0 1 1 0 1 1
+4 0 1108 0 0 1 0 0 1
+7 0 1108
+4 0 1108
+3 0 1108
+3 0 1108 0 0 0 0 0 0 0 0 1108
jcnd=1108/1108 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1222 0 0 1 0 0 1
+7 0 1222
+3 0 1222
+3 0 1222 1222 0 0 1 0 0 1
+4 0 1222
+4 0 1222 0 0 0 0 0 0 0 0 0 0 1222 151
jump=144 0x3877c89be8 0 
* 0 
jump=162 0x3877c89bd0 0 
* 0 
jump=152 0x3877c89bb8 0 
* 0 
jump=152 +11 0 
* 0 
jump=152 0x3877c89c48 0 
* 0 
jump=154 0x3877c89c30 0 
* 0 
jump=152 0x3877c89c18 0 
* 0 
jump=154 0x3877c89c00 0 
* 0 
+11 0 152 152
+3 0 152
+4 0 152
+4 0 152 152
+4 0 152
+4 0 152 0 152
+4 0 152
+9 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-40 0 11462 11462
+4 0 11462 0 11462 0 0 14 0 0 14
+4 0 11462 11462
+4 0 11462 0 11462
+4 0 11462 11462
+4 0 11462 0 11462 0 0 4 0 0 4
+4 0 11462 11462
+4 0 11462 0 11462 0 0 18 0 0 18
+4 0 11462
+4 0 11462
+4 0 11462 0 0 0 0 0 0 0 0 11462 749
jcnd=1186/11462 0x3877c89c60 0 
* 0 
-32 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154
+4 0 154
+4 0 154 0 0 0 0 0 0 0 0 154
jcnd=10/154 0x3877c89c60 0 
* 0 
-24 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-16 0 154 154 0 1 0 0 1
+4 0 154 0 154
+4 0 154 0 0 1 0 0 1
+4 0 154
+4 0 154 0 0 0 0 0 0 0 0 154 4
jcnd=10/154 0x3877c89c60 0 
* 0 
+6 0 10852
+4 0 10852 10852
+3 0 10852 0 10852 0 0 3 0 0 3
+3 0 10852 10852
+4 0 10852 0 10852
+4 0 10852 10852
+4 0 10852 0 10852
+4 0 10852 10852
+4 0 10852 0 10852
+4 0 10852
jump=10852 -80 0 
* 0 
-30 0 144 144
+3 0 144 0 144
+3 0 144 144
+4 0 144 0 144
+4 0 144 144
+4 0 144 0 144 0 0 1 0 0 1
+4 0 144 144
+4 0 144 0 144
+4 0 144
jump=144 -80 0 
* 0 
-24 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
jump=162 -80 0 
* 0 
-16 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
+8 0 152 152
+3 0 152
+4 0 152 0 0 1 0 0 1
+4 0 152
+4 0 152
jump=152 -39 0 
* 0 
+9 0 162
+3 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+3 0 162
+4 0 162
jump=162 -72 0 
* 0 
+8 0 144
+4 0 144 144
+3 0 144 0 0 0 0 0 0 0 0 144
+2 0 144
+4 0 144
jump=144 -99 0 
* 0 
+11 0 154 154 0 1 0 0 1
+3 0 154
+4 0 154
+4 0 154
+4 0 154
jump=154 0x3877c89b78 0 
* 0 
+9 0 152 152
+3 0 152
+4 0 152
+4 0 152
+4 0 152
jump=152 0x3877c89b70 0 
* 0 
+9 0 154 154
+3 0 154
+4 0 154
+4 0 154
+4 0 154
jump=154 0x3877c89b68 0 
* 0 
+9 0 152 152
+3 0 152
+4 0 152
+4 0 152
+4 0 152
jump=152 0x3877c89b60 0 
* 0 
+9 0 1222 0 1222 1 0 0 1
+3 0 1222 1222

fn=(104) alloc_perturb
0x3877c77180 0 1106 1106 0 1 0 0 1
+6 0 1106
+2 0 1106 0 0 0 0 0 0 0 0 1106 33
+2 0 1106 1106

fn=(38)
0x3877c79a00 0 1232 0 1232 1 0 0 1
+2 0 1232
+3 0 1232 0 1232
+2 0 1232 0 1232
+2 0 1232 0 1232 0 0 1 0 0 1
+2 0 1232
+3 0 1232 0 1232
+1 0 1232 0 1232
+1 0 1232
+4 0 1232
+4 0 1232 0 0 0 0 0 0 0 0 1232
+6 0 1232
+4 0 1232
+6 0 1232
+3 0 1232
+4 0 1232
+4 0 1232
+4 0 1232
+3 0 1232 0 0 0 0 0 0 0 0 1232
+6 0 1232 1232 0 1 1 0 1 1
+7 0 1232 0 0 0 0 0 0 0 0 1232 7
jcnd=1110/1232 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 1106
+4 0 1106 1106
+1 0 1106 1106
+1 0 1106 1106
+2 0 1106 1106
+2 0 1106 1106
+2 0 1106 1106
+2 0 1106 1106
+7 0 1127
+7 0 1127 0 0 1 0 0 1 0 0 1127 7
jcnd=224/1127 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 6 0 0 6
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 224 0 0 1 0 0 1
+3 0 224
+4 0 224
+4 0 224 0 0 1 0 0 1 0 0 224
jcnd=224/224 0x3877c7a1a4 0 
* 0 
+30 0 224 224
+6 0 224
+5 0 224 0 0 0 0 0 0 0 0 224 1
jcnd=223/224 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 920 249 194 8 0 0 8 0 0 190 21
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1126 0 0 1 0 0 1
+3 0 1126
+3 0 1126
+3 0 1126
+4 0 1126
+3 0 1126
+4 0 1126 0 1126
+5 0 1126
+3 0 1126 0 1126
+4 0 1126 0 1126
+4 0 1126 0 1126
+5 0 1126
+3 0 1126
+3 0 1126
+3 0 1126
+3 0 1126
+4 0 1126
+4 0 1126 0 0 1 0 0 1
+4 0 1126 0 1126
+4 0 1126
+4 0 1126 0 1126
+5 0 1126 0 1126
+5 0 1126
+3 0 1126
+3 0 1126 0 1126
+5 0 1126
+5 0 1126
+3 0 1126 0 1126
+4 0 1126 0 1126
+4 0 1126
+6 0 1126 0 1126
+4 0 1126 0 1126
+5 0 1126 0 0 1 0 0 1
+3 0 1126
+3 0 1126
+3 0 1126
jump=1126 +87 0 
* 0 
+8 0 906
+3 0 906
+4 0 906
+2 0 906
+2 0 906
+3 0 906
+3 0 906
+3 0 906
+2 0 906
+2 0 906
+5 0 906
+2 0 906 906 0 0 1 0 0 1
+4 0 906
+3 0 906
+4 0 906 0 906
+4 0 906 0 906
+8 0 906
+7 0 906 0 906
+4 0 906 0 906 0 0 1 0 0 1
+4 0 906 0 906
+4 0 906 0 0 0 0 0 0 0 0 906
-38 0 649
+3 0 649
+4 0 649 0 649
+4 0 649 0 649
+8 0 649
+7 0 649 0 649
+4 0 649 0 649
+4 0 649 0 649
+4 0 649 0 0 0 0 0 0 0 0 649
+6 0 2682 2682 0 1 0 0 1
+4 0 2682
+3 0 2682 0 0 0 0 0 0 0 0 2682 142
jcnd=1069/2682 0x3877c79ef0 0 
* 0 
+6 0 1613 1613
+4 0 1613 1613
+4 0 1613
+4 0 1613 0 0 0 0 0 0 0 0 1613
+6 0 1613 1613 0 1 1 0 1 1
+7 0 1613 0 0 0 0 0 0 0 0 1613
+6 0 1613
+4 0 1613
+7 0 1613 0 0 0 0 0 0 0 0 1613 9
jcnd=328/1613 +11 0 
* 0 
+2 0 1285
+3 0 1285 0 0 0 0 0 0 0 0 1285 599
jcnd=866/1285 0x3877c79e28 0 
* 0 
+6 0 1576
+3 0 1576 0 1576
+4 0 1576 0 1576
+5 0 1576 0 0 0 0 0 0 0 0 1576 13
jcnd=21/1576 0x3877c7a090 0 
* 0 
+6 0 1555
+7 0 1555 0 0 0 0 0 0 0 0 1555 211
jcnd=906/1555 0x3877c79c50 0 
* 0 
+6 0 649 0 0 1 0 0 1
+3 0 649
+4 0 649
+4 0 649 0 0 0 0 0 0 0 0 649 12
jcnd=384/649 0x3877c79db0 0 
* 0 
+6 0 265
+3 0 265
+4 0 265
+2 0 265
+2 0 265
+3 0 265
+3 0 265
+8 0 265
+3 0 265
+2 0 265
+2 0 265
+4 0 265 265 0 0 1 0 0 1
+4 0 265
+3 0 265 0 0 1 0 0 1 0 0 265 9
jcnd=265/265 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 649 0 649
+4 0 649 0 649
+4 0 649
+3 0 649
jump=649 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 24
jcnd=443/866 0x3877c79ce1 0 
* 0 
+6 0 423 423
+5 0 423 0 0 0 0 0 0 0 0 423 6
jcnd=386/423 0x3877c79ce1 0 
* 0 
+6 0 37 0 0 1 0 0 1
+3 0 37
+3 0 37
+3 0 37
+7 0 37 0 37
+4 0 37 0 37
+4 0 37
+3 0 37 0 37
+4 0 37 0 37 0 0 18 0 0 18
+4 0 37 0 37
+4 0 37 0 0 0 0 0 0 0 0 37 5
jcnd=11/37 +18 0 
* 0 
+2 0 26 0 26 0 0 2 0 0 2
+8 0 26 0 26
+8 0 26
+7 0 26 0 26
+4 0 26
+3 0 26
+3 0 26
+3 0 26
+4 0 26
+3 0 26
+4 0 26
+3 0 26
+3 0 26
+4 0 26 0 26
+4 0 26 0 26 0 0 2 0 0 2
+4 0 26
+4 0 26
+3 0 26 0 26
cfn=(104)
calls=26 0x3877c77180 0 
* 0 104 52 0 0 0 0 0 0 0 26
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 37
+3 0 37
jump=37 0x3877c79ae3 0 
* 0 
+55 0 1069 0 0 1 0 0 1
+7 0 1069
+3 0 1069 0 0 0 0 0 0 0 0 1069 8
jcnd=224/1069 0x3877c7a0b0 0 
* 0 
+6 0 1069 1069 0 1 0 0 1
+4 0 1069
+3 0 1069
+3 0 1069
+2 0 1069
+4 0 1069
+3 0 1069
+3 0 1069
+2 0 1069
+2 0 1069
+2 0 1069
+2 0 1069 1069 0 0 1 0 0 1
+8 0 1069
+5 0 1069
+5 0 1069
+2 0 1069 0 0 0 0 0 0 0 0 1069
-2 0 542
+2 0 542 0 0 0 0 0 0 0 0 542
+2 0 1611
+2 0 1611 0 0 0 0 0 0 0 0 1611 39
jcnd=951/1611 +64 0 
* 0 
+2 0 660
+8 0 660
+3 0 660
+3 0 660 0 0 0 0 0 0 0 0 660
-6 0 416
+3 0 416
+3 0 416 0 0 0 0 0 0 0 0 416
+2 0 1076
+2 0 1076 1076
+8 0 1076
+2 0 1076 0 0 0 0 0 0 0 0 1076 24
jcnd=416/1076 -20 0 
* 0 
+2 0 660
+2 0 660
+5 0 660
+3 0 660
+3 0 660
+2 0 660
+2 0 660
+5 0 660 0 0 0 0 0 0 0 0 660
+2 0 660
+2 0 660
+4 0 660
+2 0 660
+2 0 660 0 0 0 0 0 0 0 0 660 6
jcnd=598/660 -8 0 
* 0 
-8 0 9109
+4 0 9109
+2 0 9109
+2 0 9109 0 0 0 0 0 0 0 0 9109 546
jcnd=7647/9109 -8 0 
* 0 
-2 0 951 0 0 1 0 0 1
+2 0 951 0 0 0 0 0 0 0 0 951 22
jcnd=864/951 -8 0 
* 0 
+2 0 1611 1611 0 0 12 0 0 12
+4 0 1611 0 0 1 0 0 1
+3 0 1611 0 0 0 0 0 0 0 0 1611 511
jcnd=1069/1611 0x3877c7a1cf 0 
* 0 
+6 0 542
+2 0 542
+4 0 542
+2 0 542
+2 0 542
+2 0 542 0 542
+8 0 542
jump=542 0x3877c79f30 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 224 224
+4 0 224
+4 0 224
+2 0 224
+5 0 224 224 0 1 0 0 1
+4 0 224
+3 0 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 224 0 0 1 0 0 1
+3 0 224 0 224
+4 0 224
jump=224 0x3877c79b99 0 
* 0 
+36 0 1069 1069 0 1 2 0 1 2
+4 0 1069 1069 0 0 1 0 0 1
+4 0 1069
+3 0 1069 1069
+4 0 1069
+4 0 1069
+3 0 1069
+3 0 1069 1069
+4 0 1069 0 0 0 0 0 0 0 0 1069
+6 0 1069 1069 0 0 2 0 0 2
+4 0 1069 0 0 0 0 0 0 0 0 1069
+6 0 1069 1069 0 1 0 0 1
+8 0 1069 0 1069
+4 0 1069 0 1069
+4 0 1069 0 0 0 0 0 0 0 0 1069 225
jcnd=417/1069 +38 0 
* 0 
+2 0 652 652 0 0 1 0 0 1
+4 0 652
+3 0 652 0 0 0 0 0 0 0 0 652
+2 0 652 652
+5 0 652 0 0 0 0 0 0 0 0 652
+6 0 652 652
+4 0 652 0 652
+4 0 652 652
+4 0 652 0 652
+4 0 652
+4 0 652 0 0 0 0 0 0 0 0 652
-4 0 417
+4 0 417 0 0 0 0 0 0 0 0 417 7
jcnd=20/417 0x3877c7a2e3 0 
* 0 
+6 0 1049 1049
+4 0 1049 1049 0 1 0 0 1
+4 0 1049 0 0 0 0 0 0 0 0 1049
+6 0 1049
+4 0 1049
+7 0 1049 0 1049 0 0 11 0 0 11
+4 0 1049 0 1049
+4 0 1049 0 1049
+4 0 1049 0 1049
+4 0 1049 0 0 0 0 0 0 0 0 1049 7
jcnd=224/1049 +7 0 
* 0 
+2 0 825 0 825
+5 0 825
+7 0 825 0 0 0 0 0 0 0 0 825 4
jcnd=458/825 +18 0 
* 0 
-7 0 224
+7 0 224 0 0 0 0 0 0 0 0 224 4
jcnd=199/224 +18 0 
* 0 
+2 0 392 0 392 0 0 11 0 0 11
+8 0 392 0 392 1 0 0 1
+8 0 392
+7 0 392 0 392 0 0 3 0 0 3
+4 0 392
+3 0 392
+3 0 392
+4 0 392
+3 0 392
+4 0 392
+3 0 392
+3 0 392
+4 0 392 0 392
+4 0 392 0 392 0 0 1 0 0 1
+4 0 392
jump=392 +71 0 
* 0 
-46 0 657
+7 0 657 0 657
+4 0 657
+3 0 657
+3 0 657
+4 0 657
+3 0 657
+4 0 657
+3 0 657
+3 0 657
+4 0 657 0 657
+4 0 657 0 657
+4 0 657
jump=657 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 20
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 +7 0 
* 0 
+7 0 1069
+4 0 1069 0 0 1 0 0 1
+3 0 1069
+3 0 1069 0 1069
cfn=(104)
calls=1069 0x3877c77180 0 
* 0 4276 2138 0 0 0 0 0 0 0 1069 33
+5 0 1069
+3 0 1069
jump=1069 0x3877c79ae3 0 
* 0 

totals: 8905739 3617897 2101369 235 95 120 235 95 120 273574 5493 7382 151
