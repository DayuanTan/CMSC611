version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2213


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2654051270 - 2654277738
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 492 0 0 1 0 0 1
+3 0 492 0 0 0 0 0 0 0 0 492
+2 0 492
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=492 0x3877c7b8b0 0 
* 0 55092 14208 7392 21 4 0 21 4 0 13326 81
* 0 492 492 0 1 1 0 1 1 0 0 0 492

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 492 0 492 1 0 0 1
+1 0 492
+5 0 492
+3 0 492 0 492
+1 0 492
+4 0 492 0 0 1 0 0 1
+3 0 492
+4 0 492
+3 0 492 0 492 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=492 0x3877c7aa50 0 
* 0 126826 18571 18461 34 29 38 34 29 38 21733 747
* 0 492 492 0 1 1 0 1 1 0 0 0 492
+5 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
jcnd=492/492 +96 0 
* 0 
+96 0 492 0 0 1 0 0 1
+4 0 492 492
+1 0 492 492
+1 0 492 492

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120
+3 * 120 0 120
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=120 0x402d74 645 
* * 1560 720 240
+5 * 120
+3 * 120 0 120
+3 +1 120 120
+6 * 120 0 120
+3 * 120 120
+6 * 120 0 120
+3 +1 120 120
+6 * 120 0 120 1 0 0 1
+3 * 120 120
+6 * 120 0 120
+3 +2 120 0 120
+7 * 120
jump=120 +86 * 
* * 
+2 +1 7380 7380
+3 * 7380
+3 * 7380 7380
+4 * 7380
+3 * 7380
+3 * 7380 0 7380
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=7380 0x402d9a 770 
* * 81180 36900 22140
+5 * 7380 7380
+4 * 7380 7380
+5 * 7380
+4 * 7380 0 7380
+5 +1 7380 7380
+3 * 7380
+3 * 7380 7380
+4 * 7380
+3 * 7380
+3 * 7380 0 7380
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=7380 0x402dba 770 
* * 81180 36900 22140 1 0 0 1
+5 * 7380 7380
+2 * 7380
+4 * 7380 7380
+5 * 7380
+4 * 7380 0 7380
+5 -2 7380 0 7380
+4 * 7380 7380
+3 * 7380
+3 * 7380 7380
+3 * 7380 0 0 0 0 0 0 0 0 7380 121
jcnd=7260/7380 -93 +1 
* * 
-9 * 120 120 0 1 0 0 1
+3 * 120
+3 * 120 120
+3 * 120 0 0 0 0 0 0 0 0 120
jcnd=120/120 -93 +1 
* * 
+2 +4 120 120
+3 * 120
+3 * 120
+4 * 120 120 0 1 0 0 1
+5 * 120
+4 * 120
+3 * 120 0 120
+5 +1 120 120
+3 * 120
+3 * 120
+4 * 120 120
+5 * 120
+4 * 120
+3 * 120 0 120
+5 +1 120 0 120
+7 * 120
jump=120 0x4016ee * 
* * 
+2 +1 7380 7380
+3 * 7380
+3 * 7380 7380
+4 * 7380
+3 * 7380 0 0 1 0 0 1
+3 * 7380 0 7380
cfi=(2)
cfn=(146)
calls=7380 0x402dba 770 
* * 81180 36900 22140
+5 * 7380 7380
+2 * 7380
+4 * 7380 7380
+5 * 7380 0 7380
+5 +1 7380 7380
+3 * 7380
+3 * 7380 7380
+4 * 7380
+3 * 7380
+3 * 7380 0 7380
cfi=(2)
cfn=(144)
calls=7380 0x402d9a 770 
* * 81180 36900 22140
+5 * 7380 7380
+4 * 7380 7380
+5 * 7380 0 7380
+5 +1 7380 7380
+5 * 7380 7380
+5 * 7380 7380
+5 * 7380
+4 * 7380 0 7380
+5 +1 7380 7380
+5 * 7380 7380
+5 * 7380 7380
+5 * 7380
+4 * 7380 0 7380
+5 -4 7380 0 7380
+4 * 7380 7380
+3 * 7380
+3 * 7380 7380
+3 * 7380 0 0 0 0 0 0 0 0 7380 121
jcnd=7260/7380 0x401672 +1 
* * 
-9 * 120 120 0 1 0 0 1
+3 * 120
+3 * 120 120
+3 * 120 0 0 0 0 0 0 0 0 120
jcnd=120/120 0x401672 +1 
* * 
+6 +6 120 120 0 1 0 0 1
+5 * 120 120
+5 * 120 0 120
+5 +2 120 120
+3 +1 120 0 120
+3 * 120 120
+5 * 120 120
+1 * 120 120

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 120
+7 * 120
+7 * 120
+3 * 120
+3 * 120 0 120
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=120 0x4030b2 310 
* * 107948 30792 28427 63 26 22 63 26 22 6829 301 478 59
+5 * 120
+7 * 120
+7 * 120
+3 * 120
+3 * 120 0 120
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=120 0x402ff4 310 
* * 110823 30548 27916 47 4 30 47 4 30 7579 362 478
+5 * 120 0 0 1 0 0 1
+7 * 120
+7 * 120
+3 * 120
+3 * 120 0 120
cfn=(142)
calls=120 0x401585 -52 
* * 775320 342480 179160 8 0 0 8 0 0 15000 242
+5 * 120 0 120
+8 * 120 120
+6 * 120 0 120
+6 * 120
+7 * 120
+3 * 120 0 120
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=120 0x402df4 414 
* * 30754 9730 6957 33 5 0 33 5 0 3508 19 240
+5 * 120
+7 * 120
+3 * 120 0 120 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=120 0x402e74 414 
* * 30775 9716 6985 7 1 0 7 1 0 3508 22 240
+5 +2 120
+7 * 120
+7 * 120
+3 * 120
+3 * 120 0 120
cfi=(2)
cfn=(4)
calls=120 0x4030b2 310 
* * 107155 30734 28278 2 1 2 2 1 2 6710 115 478
+5 * 120
+7 * 120
+7 * 120
+3 * 120
+3 * 120 0 120
cfi=(2)
cfn=(80)
calls=120 0x402ff4 310 
* * 110200 30500 27756 0 0 0 0 0 0 7514 195 478
+5 * 120 120
+6 * 120 0 0 1 0 0 1
+7 * 120
+7 * 120 0 120
+6 * 120 120
+8 * 120
+3 * 120
+3 * 120 0 120
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=120 0x401719 -33 
* * 361320 150240 82980 4 0 0 4 0 0 7500 121
+5 * 120 0 120
+8 * 120 120
+6 * 120 0 120
+6 * 120
+7 * 120 0 0 1 0 0 1
+3 * 120 0 120
cfi=(2)
cfn=(148)
calls=120 0x402df4 414 
* * 30754 9730 6957 0 0 0 0 0 0 3508 15 240
+5 * 120
+7 * 120
+3 * 120 0 120
cfi=(2)
cfn=(178)
calls=120 0x402e74 414 
* * 30775 9716 6985 0 0 0 0 0 0 3508 19 240
+5 +2 120 120
+7 * 120
+3 * 120 0 120
cfi=(2)
cfn=(2)
calls=120 0x402d74 645 
* * 1560 720 240
+5 * 120 120
+6 * 120
+3 * 120
+3 * 120
+3 * 120 120
+7 * 120
+3 * 120 0 0 1 0 0 1
+3 * 120 0 120
cfi=(2)
cfn=(144)
calls=120 0x402d9a 770 
* * 1320 600 360
+5 * 120
+3 * 120
+7 * 120
+3 * 120
+3 * 120 0 120
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=120 0x402eda 901 
* * 16078 5673 4495 26 13 11 26 13 11 732 34 35
+5 +1 120 120
+7 * 120
+3 * 120 0 120
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=120 0x402f54 645 
* * 1560 720 240 0 1 0 0 1
+5 * 120 120
+6 * 120
+3 * 120
+3 * 120
+3 * 120 120
+7 * 120 0 0 1 0 0 1
+3 * 120
+3 * 120 0 120
cfi=(2)
cfn=(146)
calls=120 0x402dba 770 
* * 1320 600 360
+5 * 120
+3 * 120
+7 * 120
+3 * 120
+3 * 120 0 120
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=120 0x402f7a 901 
* * 16244 5688 4499 22 9 14 22 9 14 767 42 35
+5 +1 120 120
+7 * 120
+3 * 120 0 120
cfi=(2)
cfn=(10)
calls=120 0x402f54 645 
* * 1560 720 240
+5 * 120 120
+6 * 120
+3 * 120
+3 * 120
+3 * 120 120 0 1 0 0 1
+7 * 120
+3 * 120
+3 * 120 0 120
cfi=(2)
cfn=(146)
calls=120 0x402dba 770 
* * 1320 600 360
+5 * 120 120
+2 * 120
+4 * 120 120
+8 * 120 120
+8 * 120 0 120
+8 +1 120 120
+7 * 120
+3 * 120 0 120
cfi=(2)
cfn=(2)
calls=120 0x402d74 645 
* * 1560 720 240
+5 * 120 120 0 1 0 0 1
+6 * 120
+3 * 120
+3 * 120
+3 * 120 120
+7 * 120
+3 * 120
+3 * 120 0 120
cfi=(2)
cfn=(144)
calls=120 0x402d9a 770 
* * 1320 600 360
+5 * 120 120
+4 * 120 120
+8 * 120
+4 * 120 120
+8 * 120
+3 * 120 0 120
+8 +2 120 0 120
+7 -12 120 120
+8 * 120 120
+7 * 120 0 0 0 0 0 0 0 0 120 1
jcnd=1/120 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 120
+7 * 120
+3 * 120 0 120
cfi=(2)
cfn=(2)
calls=120 0x402d74 645 
* * 1560 720 240 2 0 1 2 0 1
+5 * 120
+3 * 120 120
+7 * 120
+3 * 120 0 120
cfi=(2)
cfn=(2)
calls=120 0x402d74 645 
* * 1560 720 240 0 1 0 0 1
+5 * 120
+3 * 120 0 0 0 0 0 0 0 0 120
+2 * 120 0 0 1 0 0 1
+5 * 120
jump=120 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 120
+2 * 120 0 0 0 0 0 0 0 0 120
jcnd=120/120 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+5 +1 120 120
+4 * 120
+3 * 120 0 120
cfi=(2)
cfn=(2)
calls=120 0x402d74 645 
* * 1560 720 240
+5 * 120
+3 * 120 0 120
+3 +1 120 120 0 1 0 0 1
+6 * 120 0 120
+3 * 120 120
+6 * 120 0 120
+3 +2 120 0 120
+7 * 120
jump=120 +86 * 
* * 
+2 +1 7380 7380
+3 * 7380
+3 * 7380 7380
+4 * 7380
+3 * 7380
+3 * 7380 0 7380
cfi=(2)
cfn=(144)
calls=7380 0x402d9a 770 
* * 81180 36900 22140
+5 * 7380 7380
+4 * 7380 7380
+5 * 7380
+4 * 7380 0 7380
+5 +1 7380 7380
+3 * 7380
+3 * 7380 7380
+4 * 7380
+3 * 7380
+3 * 7380 0 7380
cfi=(2)
cfn=(146)
calls=7380 0x402dba 770 
* * 81180 36900 22140
+5 * 7380 7380
+2 * 7380
+4 * 7380 7380
+5 * 7380
+4 * 7380 0 7380
+5 -2 7380 0 7380
+4 * 7380 7380
+3 * 7380
+3 * 7380 7380
+3 * 7380 0 0 0 0 0 0 0 0 7380 121
jcnd=7260/7380 -93 +1 
* * 
-9 * 120 120 0 1 0 0 1
+3 * 120
+3 * 120 120
+3 * 120 0 0 0 0 0 0 0 0 120
jcnd=120/120 -93 +1 
* * 
+2 +4 120 120
+3 * 120
+3 * 120 0 0 1 0 0 1
+4 * 120 120
+5 * 120
+4 * 120
+3 * 120 0 120
+5 +1 120 120
+3 * 120
+3 * 120
+4 * 120 120
+5 * 120
+4 * 120
+3 * 120 0 120
+5 +1 120 120
+5 * 120 120
+5 * 120 120
+5 * 120 0 0 1 0 0 1
+4 * 120
+3 * 120 0 120
+5 +2 120 120
+3 +1 120 0 120
+3 * 120 120
+5 * 120 120
+1 * 120 120

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 240
+4 * 240
+3 * 240 0 240
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=240 0x4044cc -35 
* * 1200 480 480
+5 * 240 240
+1 * 240 240

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240 1 0 0 1
+4 +1 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=240 0x4049d4 -35 
* * 1440 480 720 1 0 0 1
+5 * 240 240
+1 * 240 240

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 240
+4 * 240
+3 * 240 0 240
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=240 0x404520 -35 
* * 1200 480 480
+5 * 240 240
+1 * 240 240

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=240 0x404a28 -35 
* * 1440 480 720 1 0 1 1 0 1
+5 * 240 240
+1 * 240 240

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 240 0 240
+1 * 240
+3 * 240 0 240
+4 * 240 240
+4 * 240 240
+1 * 240 240

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=120 0x403df2 -87 
* * 2880 960 1080 0 9 3 0 9 3 120
+5 * 120 120
+1 * 120 120

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+4 * 240 240
+4 * 240 240
+1 * 240 240

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=120 0x40406a -87 
* * 2880 960 1080 0 8 7 0 8 7 120
+5 * 120 120
+1 * 120 120

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 300 0 300
+1 * 300
+3 * 300 0 300 0 0 1 0 0 1
+4 +1 300 300
+4 * 300 300
+1 * 300 300

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 480 0 480 1 0 0 1
+1 * 480
+3 * 480
+4 * 480 0 480
+4 +1 480
+4 * 480
+3 * 480 0 480
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=480 0x404ffe 790 
* * 2880 1440 960 1 0 0 1
+5 * 480 480
+3 * 480 480
+1 * 480 480

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 480 0 480 1 0 0 1
+1 * 480
+3 * 480 0 480
+4 +1 480 480
+4 * 480 480
+1 * 480 480

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 480 0 480 1 0 0 1
+1 * 480
+3 * 480
+4 * 480 0 480
+4 +1 480
+4 * 480
+3 * 480 0 480 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=480 0x40500c 790 
* * 2880 1440 960 1 0 0 1
+5 * 480 480
+3 * 480 480
+1 * 480 480

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 300 0 300
+1 * 300
+3 * 300 0 300
+4 +1 300 300
+4 * 300 300
+1 * 300 300

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 480 0 480 1 0 0 1
+1 * 480
+3 * 480 0 480
+4 +1 480 480 0 1 0 0 1
+4 * 480 480
+1 * 480 480

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 240 0 240
+1 * 240
+3 * 240 0 240
+4 * 240 0 240
+4 * 240 240
+4 * 240 240
+1 * 240 240

fl=(5)
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 246 0 246
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 * 246 0 246
+4 +1 246 246
+4 * 246
+3 * 246 0 246
cob=(5)
cfi=(8)
cfn=(164)
calls=246 0x387e4bb2f0 0 
* * 28496 7358 3666 23 4 0 23 4 0 6906 36 246
* * 246 246 0 1 1 0 1 1 0 0 0 246
+5 * 246 246
+1 * 246 246

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 246 0 246
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 * 246 0 246
+4 +1 246 246
+4 * 246
+3 * 246 0 246
cob=(5)
cfi=(8)
cfn=(164)
calls=246 0x387e4bb2f0 0 
* * 28564 7342 3726 0 1 0 0 1 0 6912 45 246
* * 246 246 0 0 0 0 0 0 0 0 0 246
+5 * 246 246
+1 * 246 246

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 246 0 246 1 0 0 1
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 * 246 0 246
+4 +2 246 246
+4 * 246
+3 * 246 0 246
cfn=(102)
calls=246 0x4048de +12 
* * 1476 492 492 1 0 0 1
+5 * 246 246
+4 * 246 0 0 1 0 0 1
+3 * 246
+2 * 246 0 0 0 0 0 0 0 0 246
jcnd=246/246 +7 +3 
* * 
+7 +3 246 246
+4 * 246
+4 * 246
+3 * 246 0 246
cob=(5)
cfi=(8)
cfn=(32)
calls=246 0x387e4bd0b0 0 
* * 70239 10029 9452 20 7 21 20 7 21 11875 444 246
* * 246 246 0 0 0 0 0 0 0 0 0 246
+5 +1 246 246
+1 * 246 246

fn=(18)
0x404a28 81 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240 0 0 1 0 0 1
+4 * 240 0 240
+4 * 240 240
+1 * 240 240

fn=(92)
0x4049d4 81 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+4 * 240 0 240
+4 * 240 240
+1 * 240 240

fn=(196)
0x404520 86 240 0 240
+1 * 240
+3 * 240 0 240
+4 * 240 240
+1 * 240 240

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 246 0 246 1 0 0 1
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 * 246 0 246 1 0 0 1
+4 +2 246 246
+4 * 246
+3 * 246 0 246
cfn=(28)
calls=246 0x404992 +12 
* * 1476 492 492 1 0 0 1
+5 * 246 246
+4 * 246
+3 * 246
+2 * 246 0 0 0 0 0 0 0 0 246
jcnd=246/246 +7 +3 
* * 
+7 +3 246 246
+4 * 246
+4 * 246
+3 * 246 0 246
cob=(5)
cfi=(8)
cfn=(32)
calls=246 0x387e4bd0b0 0 
* * 64459 10510 10485 18 23 18 18 23 18 10350 303 246
* * 246 246 0 1 1 0 1 1 0 0 0 246
+5 +1 246 246
+1 * 246 246

fn=(102)
0x4048de 113 258 0 258 1 0 0 1
+1 * 258
+3 * 258 0 258
+4 +1 258
+10 * 258 258
+1 * 258 258

fn=(266)
0x40406a 129 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120
+3 * 120
+5 * 120 0 120
cfi=(16)
cfn=(226)
calls=120 0x402d61 -20 
* * 840 360 360
+5 * 120
+3 * 120 0 0 0 0 0 0 0 0 120
+2 * 120 120
+4 * 120 120 0 0 8 0 0 8
+2 * 120 0 120 0 0 7 0 0 7
+2 * 120 120
+1 * 120 120

fn=(28)
0x404992 113 258 0 258 1 0 0 1
+1 * 258
+3 * 258 0 258
+4 +1 258
+10 * 258 258
+1 * 258 258

fn=(176)
0x4044cc 86 240 0 240
+1 * 240
+3 * 240 0 240
+4 * 240 240
+1 * 240 240

fn=(224)
0x403df2 129 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120
+3 * 120
+5 * 120 0 120
cfi=(16)
cfn=(226)
calls=120 0x402d61 -20 
* * 840 360 360
+5 * 120
+3 * 120 0 0 0 0 0 0 0 0 120
+2 * 120 120
+4 * 120 120 0 0 9 0 0 9
+2 * 120 0 120 0 0 3 0 0 3
+2 * 120 120
+1 * 120 120

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +2 240 240
+4 * 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=240 0x404484 107 
* * 87314 27500 26064 25 3 5 25 3 5 2992 143 476 59
+5 * 240 240
+1 * 240 240

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +2 240 240 0 1 0 0 1
+4 * 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=240 0x404a36 450 
* * 80594 25100 23664 24 3 5 24 3 5 2992 143 476 59
+5 * 240 240
+1 * 240 240

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +2 240 240
+4 * 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=240 0x40439c 107 
* * 87314 27500 26064 7 1 14 7 1 14 2992 134 476
+5 * 240 240
+1 * 240 240

fn=(116)
0x40439c 107 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +10 240 240
+4 * 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=240 0x4047d7 -26 
* * 83954 26300 24864 7 1 14 7 1 14 2992 134 476
+5 +1 240 240
+1 * 240 240

fn=(118)
0x4047d7 91 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +2 240 240
+4 * 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=240 0x4049e2 450 
* * 80594 25100 23664 7 1 14 7 1 14 2992 134 476
+5 * 240 240
+1 * 240 240

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +10 240 240
+4 * 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(52)
calls=240 0x404829 -26 
* * 83954 26300 24864 25 3 5 25 3 5 2992 143 476 59
+5 +1 240 240
+1 * 240 240

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fl=(2)
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 240 0 240
+1 * 240
+3 * 240 0 240
+1 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=240 0x4043ca -45 
* * 8640 3120 3360 4 0 4 4 0 4
+5 +1 240 240 0 1 0 0 1
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=240 0x404412 +43 
* * 78829 16266 14801 22 23 14 22 23 14 10547 273 480
+5 * 240
jump=240 +28 * 
* * 
+28 * 240
+4 * 240 240
+1 * 240 240
+1 * 240 240

fn=(14)
0x4043ca 90 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240 0 0 1 0 0 1
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfi=(4)
cfn=(16)
calls=240 0x404804 +24 
* * 4320 1440 1680 2 0 1 2 0 1
+5 * 240 240
+4 * 240 0 240 0 0 2 0 0 2
+7 * 240 240
+4 * 240 0 240 1 0 0 1
+8 * 240 240
+4 * 240 0 240
+8 +1 240 240
+1 * 240 240

fn=(80)
0x402ff4 310 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+2 * 240 0 240
+2 * 240 0 240
+1 * 240 0 0 1 0 0 1
+4 * 240 0 240
+4 * 240 0 240
+4 +2 240 240
+4 * 240
+3 * 240 0 240
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=240 0x4039fc 117 
* * 1440 720 480 2 0 0 2
+5 * 240
+3 * 240 0 240
cfi=(3)
cfn=(84)
calls=240 0x4039ed -88 
* * 1440 720 480
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(2)
calls=240 0x402d74 645 
* * 3120 1440 480
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240
+3 * 240
+3 * 240 0 240 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=240 0x403a0a 134 
* * 98669 20588 18808 32 3 16 32 3 16 12101 423 480
+5 +4 240 240
+4 * 240
+3 * 240 0 240
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=240 0x40325e 113 
* * 1440 720 480 1 0 0 1
+5 * 240
+3 * 240 240
+4 * 240 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=240 0x403a98 565 
* * 6000 2400 1920 2 0 0 2
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=240 0x403a68 547 
* * 6000 2400 1920
+5 * 240
+3 * 240
+3 * 240
+3 * 240
+3 * 240 0 240
cfi=(11)
cfn=(114)
calls=240 0x403ac9 -60 
* * 90914 28700 27504 7 1 14 7 1 14 2992 134 476
+5 -3 240 240
+4 * 240 0 240
+4 * 240
jump=240 +28 +4 
* * 
+28 +4 240
+4 * 240 240
+1 * 240 240
+2 * 240 240
+2 * 240 240
+1 * 240 240

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 246 0 246 1 0 0 1
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 * 246 0 246
+4 +2 246 246
+5 * 246 0 0 0 0 0 0 0 0 246 6
+2 +1 246 246
+4 * 246 246
+4 * 246 246
+4 * 246
+3 * 246
+3 * 246 0 246
cfi=(5)
cfn=(190)
calls=246 0x40452a -65 
* * 31516 8326 4956 0 1 0 0 1 0 6912 45 492
+5 +1 246 246
+1 * 246 246

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 246 0 246 1 0 0 1
+1 * 246
+3 * 246
+4 * 246 0 246 1 0 0 1
+4 * 246 0 246
+4 0 246 246
+5 0 246 0 0 0 0 0 0 0 0 246
+2 0 246 246
+4 0 246 246
+4 0 246
+5 0 246
+3 0 246
+3 0 246 0 246
fi=(6) ???
cfi=(5)
cfn=(26)
calls=246 0x404730 99 
* 0 70855 12478 12453 22 24 18 22 24 18 10596 303 492
+5 0 246
fi=(6)
jump=246 +7 0 
* 0 
+7 0 246 246
+1 0 246 246

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+4 * 240 0 240
+4 * 240
+4 * 240 0 0 1 0 0 1
+4 * 240
+3 * 240
+3 * 240 0 240
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=240 0x404468 726 
* * 2400 1200 960 1 0 0 1
+5 * 240 240
+4 * 240 240
+1 * 240 240

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+3 * 240 0 240
+4 * 240
+4 * 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfi=(10)
cfn=(44)
calls=240 0x404468 726 
* * 2400 1200 960
+5 * 240 240
+4 * 240 240
+1 * 240 240

fn=(86)
0x403a0a 134 240 0 240
+1 * 240
+3 * 240 0 240
+1 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=240 0x4042e2 -45 
* * 8640 3120 3360 5 0 0 5
+5 +1 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=240 0x40432a +43 
* * 84749 15788 13768 26 3 16 26 3 16 12101 423 480
+5 * 240
jump=240 +28 * 
* * 
+28 * 240
+4 * 240 240
+1 * 240 240
+1 * 240 240

fn=(88)
0x4042e2 90 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240 1 0 0 1
cfi=(4)
cfn=(90)
calls=240 0x4047b2 +24 
* * 4320 1440 1680 3 0 0 3
+5 * 240 240
+4 * 240 0 240
+7 * 240 240
+4 * 240 0 240
+8 * 240 240
+4 * 240 0 240
+8 +1 240 240
+1 * 240 240

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+1 * 240
+4 * 240 0 240
+4 +2 240 240
+4 * 240 240 0 1 0 0 1
+4 * 240
+3 * 240 240
+4 * 240 240
+3 * 240
+3 * 240
+3 * 240
+4 * 240
+3 * 240 240
+4 * 240 240
+3 -1 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=240 0x403ce6 +11 
* * 34628 9620 5994 24 5 0 24 5 0 7016 34 480
+5 +1 240 240
+4 * 240
+3 * 240 0 240
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=240 0x4031b8 -82 
* * 5520 1920 1920 1 0 0 1
+5 * 240
jump=240 +28 * 
* * 
+28 * 240
+4 * 240 240
+1 * 240 240
+1 * 240 240

fn=(172)
0x4031b8 79 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 240
+4 * 240
+3 * 240 0 240
cfi=(4)
cfn=(174)
calls=240 0x403ccc +42 
* * 3360 1200 1200
+5 * 240 240
+1 * 240 240

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10)
0x402f54 645 504 0 504 1 0 0 1
+1 * 504
+3 * 504 0 504
+4 +1 504 504
+4 * 504 504 0 0 2 0 0 2
+4 * 504
+3 * 504 504
+4 * 504 504
+3 * 504
+3 * 504
+3 * 504
+4 * 504 504
+1 * 504 504

fn=(106)
0x40325e 113 498 0 498 1 0 0 1
+1 * 498
+3 * 498 0 498
+4 +1 498 498
+4 * 498 498
+1 * 498 498

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 252 0 252 1 0 0 1
+1 * 252
+3 * 252 0 252 0 0 1 0 0 1
+4 +1 252 252
+4 * 252 252
+1 * 252 252

fn=(82)
0x4039fc 117 252 0 252 1 0 0 1
+1 * 252
+3 * 252 0 252 1 0 0 1
+4 +1 252 252
+4 * 252 252
+1 * 252 252

fn=(200)
0x402eda 901 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120 0 0 0 0 0 0 0 0 120 8
jcnd=6/120 +51 +10 
* * 
+2 +3 114 114
+4 * 114 114
+4 * 114 114
+4 -1 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(3)
cfn=(222)
calls=114 0x403373 215 
* * 4332 1482 1596 0 8 2 0 8 2 114
+5 +2 114 114
+4 * 114 114
+4 * 114
+4 * 114 114
+4 * 114 0 114
+4 * 114
jump=114 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8512 2601 2257 23 5 9 23 5 9 498 26 35
+5 +2 120 120
+1 * 120 120

fn=(4)
0x4030b2 310 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+2 * 240 0 240
+2 * 240 0 240
+1 * 240
+4 * 240 0 240 1 0 0 1
+4 * 240 0 240
+4 +2 240 240
+4 * 240
+3 * 240 0 240
cfn=(6)
calls=240 0x403b08 117 
* * 1440 720 480 1 0 1 1 0 1
+5 * 240
+3 * 240 0 240
cfi=(3)
cfn=(8)
calls=240 0x403afa -88 
* * 1440 720 480 1 0 0 1
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(10)
calls=240 0x402f54 645 
* * 3120 1440 480 1 1 0 1 1
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240
+3 * 240
+3 * 240 0 240
cfn=(12)
calls=240 0x403b16 134 
* * 92749 21066 19841 27 23 18 27 23 18 10547 273 480
+5 +4 240 240 0 1 0 0 1
+4 * 240
+3 * 240 0 240
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=240 0x40333c 113 
* * 1440 720 480 2 0 0 2
+5 * 240
+3 * 240 240
+4 * 240 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(42)
calls=240 0x403ba4 565 
* * 6000 2400 1920 3 0 0 3
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(46)
calls=240 0x403b74 547 
* * 6000 2400 1920
+5 * 240
+3 * 240
+3 * 240
+3 * 240
+3 * 240 0 240 1 0 0 1
cfi=(11)
cfn=(48)
calls=240 0x403bd5 -60 
* * 90914 28700 27504 26 3 5 26 3 5 2992 143 476 59
+5 -3 240 240
+4 * 240 0 240
+4 * 240
jump=240 +28 +4 
* * 
+28 +4 240
+4 * 240 240
+1 * 240 240
+2 * 240 240
+2 * 240 240
+1 * 240 240

fn=(108)
0x403a98 565 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+4 * 240 0 240
+4 * 240
+4 * 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=240 0x404380 726 
* * 2400 1200 960 1 0 0 1
+5 * 240 240
+4 * 240 240
+1 * 240 240

fn=(178)
0x402e74 414 240 0 240
+1 * 240
+3 * 240 0 240
+1 * 240
+4 * 240 0 240 1 0 0 1
+4 +2 240 240
+4 * 240
+3 * 240 0 240
cfn=(40)
calls=240 0x40333c 113 
* * 1440 720 480
+5 * 240
+3 * 240 240
+4 * 240 240
+4 * 240 240
+4 * 240 240
+3 -1 240
+3 * 240
+3 * 240 0 240
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=240 0x40334a 148 
* * 7440 2400 2880 2 0 0 2
+5 +1 240 240
+4 * 240
+3 * 240 0 240
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=240 0x4032ca 159 
* * 46910 14152 9170 3 1 0 3 1 0 7016 41 480
+5 * 240
jump=240 +28 * 
* * 
+28 * 240 0 0 1 0 0 1
+4 * 240 240
+1 * 240 240
+1 * 240 240

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 246 0 246 1 0 0 1
+1 * 246 0 0 1 0 0 1
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 0 246 246
+5 0 246 0 0 0 0 0 0 0 0 246
+2 0 246 246
+4 0 246 246
+4 0 246
+5 0 246
+3 0 246
+3 0 246 0 246
fi=(6)
cfi=(5)
cfn=(100)
calls=246 0x40461a 99 
* 0 76635 11997 11420 23 7 21 23 7 21 12121 444 492
+5 0 246
fi=(6)
jump=246 +7 0 
* 0 
+7 0 246 246
+1 0 246 246

fn=(144)
0x402d9a 770 22380 0 22380
+1 * 22380
+3 * 22380 0 22380
+4 * 22380 0 22380
+4 +1 22380 22380
+4 * 22380 22380
+3 * 22380 22380
+4 * 22380
+4 * 22380
+3 * 22380 22380
+1 * 22380 22380

fn=(146)
0x402dba 770 22380 0 22380
+1 * 22380
+3 * 22380 0 22380 1 0 0 1
+4 * 22380 0 22380
+4 +1 22380 22380
+4 * 22380 22380
+3 * 22380 22380
+4 * 22380
+4 * 22380
+3 * 22380 22380
+1 * 22380 22380

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 240
+4 * 240
+3 * 240 0 240
cfi=(4)
cfn=(194)
calls=240 0x403d7e +42 
* * 3360 1200 1200 1 0 0 1
+5 * 240 240
+1 * 240 240

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186)
0x4032ca 159 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+1 * 240
+4 * 240 0 240
+4 +2 240 240
+4 * 240 240
+4 * 240
+3 * 240 240
+4 * 240 240
+3 * 240
+3 * 240
+3 * 240
+4 * 240
+3 * 240 240
+4 * 240 240
+3 -1 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(188)
calls=240 0x403d98 +11 
* * 34670 9592 6050 1 1 0 1 1 0 7016 41 480
+5 +1 240 240
+4 * 240
+3 * 240 0 240
cfn=(192)
calls=240 0x403296 -82 
* * 5520 1920 1920 1 0 0 1
+5 * 240
jump=240 +28 * 
* * 
+28 * 240
+4 * 240 240
+1 * 240 240
+1 * 240 240

fn=(2)
0x402d74 645 984 0 984 1 0 0 1
+1 * 984
+3 * 984 0 984 0 0 1 0 0 1
+4 +1 984 984
+4 * 984 984 0 1 1 0 1 1
+4 * 984
+3 * 984 984
+4 * 984 984
+3 * 984
+3 * 984
+3 * 984
+4 * 984 984
+1 * 984 984

fn=(20)
0x404412 179 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 +2 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(22)
calls=240 0x404236 -14 
* * 72829 13386 13121 21 23 14 21 23 14 10547 273 480
+5 * 240 240
+4 * 240 0 240
+3 +1 240 240
+4 * 240 240 0 1 0 0 1
+3 * 240 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+3 * 240 240
+4 * 240
+4 * 240
+3 * 240 240
+4 * 240 0 240
+4 +1 240 240
+1 * 240 240

fn=(94)
0x40432a 179 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 +2 240 240
+4 * 240 240 0 1 0 0 1
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(96)
calls=240 0x403fbe -14 
* * 78749 12908 12088 25 3 16 25 3 16 12101 423 480
+5 * 240 240
+4 * 240 0 240
+3 +1 240 240
+4 * 240 240
+3 * 240 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+3 * 240 240
+4 * 240
+4 * 240
+3 * 240 240
+4 * 240 0 240
+4 +1 240 240
+1 * 240 240

fn=(244)
0x402f7a 901 120 0 120
+1 * 120
+3 * 120 0 0 1 0 0 1
+4 * 120 0 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120 0 0 0 0 0 0 0 0 120
jcnd=6/120 +51 +10 
* * 
+2 +3 114 114
+4 * 114 114
+4 * 114 114
+4 -1 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(3)
cfn=(264)
calls=114 0x4036b1 215 
* * 4332 1482 1596 0 7 4 0 7 4 114
+5 +2 114 114
+4 * 114 114
+4 * 114
+4 * 114 114
+4 * 114 0 114
+4 * 114
jump=114 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246)
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8678 2616 2261 21 2 10 21 2 10 533 42 35
+5 +2 120 120
+1 * 120 120

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40)
0x40333c 113 498 0 498 1 0 0 1
+1 * 498
+3 * 498 0 498 1 0 0 1
+4 +1 498 498
+4 * 498 498
+1 * 498 498

fn=(112)
0x403a68 547 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240 240
+3 * 240 0 240
+4 * 240
+4 * 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfi=(10)
cfn=(110)
calls=240 0x404380 726 
* * 2400 1200 960
+5 * 240 240
+4 * 240 240
+1 * 240 240

fn=(148)
0x402df4 414 240 0 240
+1 * 240
+3 * 240 0 240
+1 * 240
+4 * 240 0 240 1 0 0 1
+4 +2 240 240
+4 * 240
+3 * 240 0 240
cfn=(106)
calls=240 0x40325e 113 
* * 1440 720 480
+5 * 240
+3 * 240 240
+4 * 240 240
+4 * 240 240
+4 * 240 240
+3 -1 240
+3 * 240
+3 * 240 0 240
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=240 0x40326c 148 
* * 7440 2400 2880 4 0 0 4
+5 +1 240 240
+4 * 240
+3 * 240 0 240
cfn=(156)
calls=240 0x4031ec 159 
* * 46868 14180 9114 27 5 0 27 5 0 7016 34 480
+5 * 240
jump=240 +28 * 
* * 
+28 * 240 0 0 1 0 0 1
+4 * 240 240
+1 * 240 240
+1 * 240 240

fn=(158)
0x403ce6 171 246 0 246 1 0 0 1
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 * 246 0 246
+4 +2 246 246
+5 * 246 0 0 0 0 0 0 0 0 246
+2 +1 246 246
+4 * 246 246
+4 * 246 246
+4 * 246
+3 * 246
+3 * 246 0 246
cfi=(5)
cfn=(160)
calls=246 0x4044d6 -65 
* * 31448 8342 4896 24 5 0 24 5 0 6906 36 492
+5 +1 246 246
+1 * 246 246

fl=(12)
fn=(120)
0x4049e2 450 240 0 240
+1 * 240
+3 * 240 0 240
+1 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +10 240 240
+4 * 240
+3 * 240 0 240
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=240 0x404bc6 288 
* * 3600 1440 1200 3 0 0 3
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(122)
calls=240 0x404bc6 288 
* * 3600 1440 1200
+5 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=240 0x404be0 -36 
* * 68114 20780 19344 4 1 14 4 1 14 2992 134 476
+5 +1 240
+4 * 240 240
+1 * 240 240
+1 * 240 240

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 276 0 276
+1 * 276
+3 * 276
+4 * 276 0 276 1 0 0 1
+4 +1 276 276
+4 * 276
+3 * 276 0 276
cfi=(13)
cfn=(130)
calls=276 -33 -66 
* * 1656 828 552 0 0 1 0 0 1
+5 * 276 276
+1 * 276 276

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 480 0 480
+1 * 480
+3 * 480
+4 * 480 0 480
+4 +1 480 480
+4 * 480
+3 * 480 0 480
cfi=(13)
cfn=(134)
calls=480 0x404e98 -58 
* * 7680 2880 2400 2 0 0 2
+5 * 480 480
+1 * 480 480

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +8 240 0 240
+4 +3 240 240
+4 * 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=240 0x404eb5 -22 
* * 42194 12140 10464 1 1 14 1 1 14 2992 134 476
+5 +1 240 240
+1 * 240 240

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 480 0 480 1 0 0 1
+1 * 480
+3 * 480
+4 * 480 0 480
+4 +1 480 480
+4 * 480
+3 * 480 0 480
cfi=(13)
cfn=(124)
calls=480 0x404d36 -77 
* * 2880 1440 960 2 0 0 2
+5 * 480 480
+1 * 480 480

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 480 0 480 1 0 0 1
+1 * 480
+3 * 480
+4 * 480 0 480 1 0 0 1
+4 +1 480 480
+4 * 480
+3 * 480 0 480
cfi=(13)
cfn=(58)
calls=480 0x404d8f -77 
* * 2880 1440 960 1 0 0 1
+5 * 480 480
+1 * 480 480

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 252 0 252
+1 * 252
+3 * 252
+4 * 252 0 252 1 0 0 1
+4 * 252 0 252
+4 * 252 0 252
+4 +2 252 252
+4 * 252 252
+4 * 252
+3 * 252
+3 * 252
+4 * 252 0 252
+4 +1 252 252
+5 * 252 0 0 0 0 0 0 0 0 252
jcnd=6/252 +33 +2 
* * 
+2 +1 246 246
+4 * 246
+8 * 246 246
+4 * 246 246
+4 * 246
+3 * 246 0 0 1 0 0 1
+3 * 246 0 246 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=246 0x3877c83840 0 
* * 35984 9610 9123 11 2 6 11 2 6 2800 145 241 59
* * 246 246 0 1 1 0 1 1 0 0 0 246
+5 +1 252 252
+4 * 252
+8 * 252 252
+4 * 252
+3 +1 252 252
+1 * 252 252

fn=(140)
0x404eb5 368 252 0 252
+1 * 252
+3 * 252
+4 * 252 0 252 1 0 0 1
+4 * 252 0 252
+4 * 252 0 252 0 0 1 0 0 1
+4 +2 252 252
+4 * 252 252
+4 * 252
+3 * 252
+3 * 252
+4 * 252 0 252
+4 +1 252 252
+5 * 252 0 0 0 0 0 0 0 0 252
jcnd=6/252 +33 +2 
* * 
+2 +1 246 246
+4 * 246
+8 * 246 246
+4 * 246 246
+4 * 246
+3 * 246
+3 * 246 0 246
cob=(2)
cfi=(9)
cfn=(78)
calls=246 0x3877c83840 0 
* * 35984 9610 9123 0 1 15 0 1 15 2800 137 241
* * 246 246 0 0 0 0 0 0 0 0 0 246
+5 +1 252 252
+4 * 252
+8 * 252 252
+4 * 252
+3 +1 252 252
+1 * 252 252

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240 1 0 0 1
+4 * 240 0 240
+4 * 240 0 240
+4 +8 240 0 240
+4 +3 240 240
+4 * 240 240
+4 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(74)
calls=240 0x404f37 -22 
* * 42194 12140 10464 14 3 4 14 3 4 2992 143 476 59
+5 +1 240 240
+1 * 240 240

fn=(126)
0x404be0 424 240 0 240
+1 * 240
+3 * 240 0 240
+2 * 240 0 240
+1 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +4 240 240
+4 * 240
+3 * 240 0 240
cfn=(128)
calls=240 0x404878 277 
* * 3600 1440 1200 1 0 0 1
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(132)
calls=240 0x404d44 277 
* * 6000 2160 1920 2 0 0 2
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(132)
calls=240 0x404d44 277 
* * 6000 2160 1920
+5 * 240
+3 * 240
+3 * 240
+3 * 240 0 240
cfn=(138)
calls=240 0x404d5e -49 
* * 45794 13340 11904 1 1 14 1 1 14 2992 134 476
+5 +1 240
+4 * 240 240
+1 * 240 240
+2 * 240 240
+1 * 240 240

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 240 0 240
+1 * 240
+3 * 240 0 240
+1 * 240
+4 * 240 0 240 1 0 0 1
+4 * 240 0 240
+4 * 240 0 240
+4 +10 240 240
+4 * 240
+3 * 240 0 240
cfn=(56)
calls=240 0x404c38 288 
* * 3600 1440 1200 3 0 0 3
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(56)
calls=240 0x404c38 288 
* * 3600 1440 1200
+5 * 240 240
+4 * 240
+3 * 240
+3 * 240 0 240
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=240 0x404c52 -36 
* * 68114 20780 19344 20 3 5 20 3 5 2992 143 476 59
+5 +1 240
+4 * 240 240
+1 * 240 240
+1 * 240 240

fn=(60)
0x404c52 424 240 0 240
+1 * 240
+3 * 240 0 240
+2 * 240 0 240
+1 * 240
+4 * 240 0 240
+4 * 240 0 240
+4 * 240 0 240
+4 +4 240 240
+4 * 240
+3 * 240 0 240
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=240 0x40492d 277 
* * 3600 1440 1200 2 0 0 2
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=240 0x404d9d 277 
* * 6000 2160 1920 2 0 1 2 0 1
+5 * 240
+3 * 240 240
+4 * 240
+3 * 240 0 240
cfn=(66)
calls=240 0x404d9d 277 
* * 6000 2160 1920
+5 * 240
+3 * 240
+3 * 240
+3 * 240 0 240
cfn=(72)
calls=240 0x404db7 -49 
* * 45794 13340 11904 15 3 4 15 3 4 2992 143 476 59
+5 +1 240
+4 * 240 240
+1 * 240 240
+2 * 240 240
+1 * 240 240

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 276 0 276 1 0 0 1
+1 * 276
+3 * 276
+4 * 276 0 276
+4 +1 276 276
+4 * 276
+3 * 276 0 276 1 0 0 1
cfi=(13)
cfn=(64)
calls=276 -33 -66 
* * 1656 828 552
+5 * 276 276
+1 * 276 276

fn=(66)
0x404d9d 277 480 0 480
+1 * 480
+3 * 480
+4 * 480 0 480
+4 +1 480 480
+4 * 480
+3 * 480 0 480
cfi=(13)
cfn=(68)
calls=480 0x404f1a -58 
* * 7680 2880 2400 2 0 1 2 0 1
+5 * 480 480
+1 * 480 480

fn=(240)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 480 0 480 1 0 0 1
+1 * 480
+3 * 480 0 480
+4 +1 480 480
+4 * 480 480
+1 * 480 480

fn=(110)
0x404380 726 480 0 480 1 0 0 1
+1 * 480
+3 * 480 0 480
+4 * 480 0 480
+4 * 480 480
+4 * 480 480
+3 * 480 480
+4 * 480 0 480
+3 * 480 480
+1 * 480 480

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 480 0 480 1 0 0 1
+1 * 480
+3 * 480 0 480
+4 +1 480 480
+4 * 480 480
+1 * 480 480

fn=(44)
0x404468 726 480 0 480
+1 * 480
+3 * 480 0 480
+4 * 480 0 480
+4 * 480 480
+4 * 480 480
+3 * 480 480
+4 * 480 0 480 1 0 0 1
+3 * 480 480
+1 * 480 480

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262)
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 246 0 246 1 0 0 1
+1 * 246
+3 * 246 0 246
+4 * 246 0 246
+4 * 246 246
+1 * 246 246

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 246 0 246 1 0 0 1
+1 * 246
+3 * 246 0 246
+4 * 246 0 246 1 0 0 1
+4 * 246 246
+1 * 246 246

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 246 0 246 1 0 0 1
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 +4 246 246
+4 * 246 246
+4 * 246
+3 * 246
+3 * 246 0 246
cfn=(184)
calls=246 0x40454c -14 
* * 1476 492 738 1 0 0 1
+5 +2 246 246
+1 * 246 246

fn=(150)
0x40326c 148 246 0 246
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 * 246 0 246
+4 +3 246 246 0 1 0 0 1
+4 * 246 246
+4 * 246
+3 * 246
+3 * 246 0 246
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=246 0x403d1a -29 
* * 4428 1476 1722 3 0 0 3
+5 +1 246 246
+1 * 246 246

fn=(180)
0x40334a 148 246 0 246
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 * 246 0 246
+4 +3 246 246
+4 * 246 246
+4 * 246
+3 * 246
+3 * 246 0 246
cfn=(182)
calls=246 0x403dcc -29 
* * 4428 1476 1722 2 0 0 2
+5 +1 246 246
+1 * 246 246

fn=(152)
0x403d1a 122 246 0 246 1 0 0 1
+1 * 246
+3 * 246
+4 * 246 0 246
+4 * 246 0 246
+4 +4 246 246
+4 * 246 246
+4 * 246
+3 * 246
+3 * 246 0 246
cfn=(154)
calls=246 0x4044f8 -14 
* * 1476 492 738 2 0 0 2
+5 +2 246 246
+1 * 246 246

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1962 322 316 3 1 4 3 1 4 295 30 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 1 3 0 1 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1822 319 316 0 4 5 0 4 5 266 21 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 492 0 492 1 0 0 1
+5 0 492 0 492
+5 0 492
+3 0 492 0 492
+5 0 492
+4 0 492 492 0 0 1 0 0 1
+7 0 492 492 0 0 1 0 0 1
+3 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
+6 0 492 492 0 0 1 0 0 1
+7 0 492 492 0 1 1 0 1 1
+4 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
+2 0 492 492 0 0 1 0 0 1
+3 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
jcnd=492/492 +97 0 
* 0 
+18 0 492
+3 0 492
+3 0 492 0 492
cfn=(38) _int_malloc
calls=492 0x3877c79a00 0 
* 0 106162 13159 15509 30 23 38 30 23 38 16813 738
+5 0 492
+3 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
+2 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
+2 0 492
+3 0 492 0 0 0 0 0 0 0 0 492 1
+2 0 492 492
+7 0 492 0 0 0 0 0 0 0 0 492
jcnd=492/492 +13 0 
* 0 
+13 0 492 0 492
+2 0 492 0 0 0 0 0 0 0 0 492 8
+6 0 492
+3 0 492 492
+4 0 492 492
+5 0 492 492
+5 0 492
+4 0 492 492
+1 0 492 0 0 1 0 0 1
+5 0 492 492 0 0 1 0 0 1
+7 0 492 0 0 0 0 0 0 0 0 492
jcnd=492/492 +14 0 
* 0 
+14 0 492 0 492 1 0 0 1
+3 0 492 0 0 0 0 0 0 0 0 492
+6 0 492
jump=492 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 492 0 492 1 0 0 1
+2 0 492
+3 0 492
+3 0 492 0 492
+2 0 492
+3 0 492 0 492
+1 0 492
+3 0 492 0 492
+1 0 492
+3 0 492
+4 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
+6 0 492
+4 0 492
+3 0 492 0 0 0 0 0 0 0 0 492 4
jcnd=10/492 0x3877c838d1 0 
* 0 
+2 0 482
+3 0 482
+3 0 482
+3 0 482
+3 0 482
+3 0 482 0 0 0 0 0 0 0 0 482
jcnd=482/482 +41 0 
* 0 
+41 0 482 0 0 1 0 0 1
+3 0 482 0 0 0 0 0 0 0 0 482
jcnd=482/482 0x3877c839c0 0 
* 0 
+24 0 482
+3 0 482
+4 0 482
+3 0 482
+3 0 482
+3 0 482
+3 0 482
+3 0 482 0 0 0 0 0 0 0 0 482 237
jcnd=246/482 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 246
+10 0 246 246 0 0 2 0 0 2
+3 0 246
+4 0 246 0 246
+3 0 246
+4 0 246
+4 0 246 0 0 0 0 0 0 0 0 246
jcnd=246/246 -18 0 
* 0 
-18 0 794 794
+3 0 794
+4 0 794 0 794
+3 0 794
+4 0 794
+4 0 794 0 0 0 0 0 0 0 0 794 8
jcnd=548/794 -18 0 
* 0 
+2 0 492
+4 0 492
+3 0 492 492
+1 0 492 492
+1 0 492 492
+2 0 492 492 0 1 0 0 1
+2 0 492 492
0x3877c839c0 0 482 0 0 1 0 0 1
+3 0 482
+3 0 482
+3 0 482
+4 0 482 0 482 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=482 0x3877c89b20 0 
* 0 44034 15720 14756 6 1 20 6 1 20 2120 33 482 59
+5 0 482
jump=482 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 492 492 0 1 1 0 1 1
+7 0 492 492 0 0 1 0 0 1
+3 0 492
+3 0 492 0 0 1 0 0 1 0 0 492
+6 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
+6 0 492 492
+4 0 492
+4 0 492
+2 0 492 0 0 0 0 0 0 0 0 492
+2 0 492
+2 0 492
+7 0 492 0 0 0 0 0 0 0 0 492
jcnd=492/492 +14 0 
* 0 
+14 0 492
+2 0 492
cfn=(170) _int_free
calls=492 0x3877c78650 0 
* 0 47712 12732 7392 19 2 0 19 2 0 11358 81

fn=(170)
0x3877c78650 0 492 0 492 1 0 0 1
+2 0 492 0 492
+2 0 492 0 492
+2 0 492
+3 0 492 0 492
+2 0 492 0 492
+1 0 492 0 492
+1 0 492
+3 0 492
+4 0 492 492
+4 0 492 0 492
+4 0 492
+3 0 492
+4 0 492
+3 0 492
+3 0 492
+3 0 492 0 0 1 0 0 1 0 0 492
+6 0 492
+4 0 492 0 0 0 0 0 0 0 0 492
+6 0 492
+4 0 492 0 0 0 0 0 0 0 0 492
+6 0 492 492
+7 0 492 0 0 0 0 0 0 0 0 492 2
jcnd=368/492 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 368
+2 0 368 0 0 0 0 0 0 0 0 368
+6 0 368 368 0 1 0 0 1
+4 0 368
+3 0 368
+2 0 368 0 0 0 0 0 0 0 0 368
jcnd=368/368 0x3877c78a40 0 
* 0 
+6 0 368 368
+4 0 368
+3 0 368 0 0 0 0 0 0 0 0 368
+6 0 368 368
+5 0 368
+4 0 368 0 0 0 0 0 0 0 0 368
jcnd=368/368 0x3877c7907c 0 
* 0 
+6 0 368 368
+5 0 368
+4 0 368 0 0 0 0 0 0 0 0 368
+6 0 368
+4 0 368 0 0 1 0 0 1 0 0 368
+6 0 368
+4 0 368 368
+7 0 368 0 0 0 0 0 0 0 0 368
+6 0 368 368
+6 0 368
+2 0 368 0 0 0 0 0 0 0 0 368
+6 0 368 368
+4 0 368 0 0 0 0 0 0 0 0 368 2
jcnd=366/368 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 368 368 0 1 0 0 1
+4 0 368 0 0 0 0 0 0 0 0 368 14
jcnd=14/368 0x3877c78bf0 0 
* 0 
+6 0 354 354 0 0 1 0 0 1
+6 0 354 0 0 1 0 0 1 0 0 354 55
jcnd=40/354 0x3877c78a78 0 
* 0 
+6 0 314 314
+5 0 314 314
+5 0 314 314
+4 0 314 0 0 0 0 0 0 0 0 314
+6 0 314 314
+4 0 314 0 0 0 0 0 0 0 0 314
+6 0 314 314
+9 0 314 0 314
+4 0 314 0 314
+4 0 314 0 0 0 0 0 0 0 0 314 4
jcnd=306/314 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 314
+3 0 314
+4 0 314 314
+4 0 314 314
+4 0 314 0 0 0 0 0 0 0 0 314
-12 0 40
+4 0 40 40
+4 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 354
+7 0 354 0 354
+4 0 354 0 354
+4 0 354 0 0 0 0 0 0 0 0 354
jcnd=346/354 +18 0 
* 0 
+2 0 8 0 8
+8 0 8 0 8
+8 0 8 0 8
+4 0 8
+3 0 8 0 8 1 0 0 1
+4 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+7 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c78b20 0 
* 0 
-30 0 346 0 346
+4 0 346
+3 0 346 0 346
+4 0 346
+4 0 346 0 346
+4 0 346 0 346
+4 0 346
+7 0 346 0 0 0 0 0 0 0 0 346
jcnd=346/346 0x3877c78b20 0 
* 0 
-7 0 14
+7 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 0x3877c78b20 0 
* 0 
0x3877c78a40 0 368 0 0 1 0 0 1
+5 0 368 368
+4 0 368 368
+7 0 368 0 0 0 0 0 0 0 0 368
jcnd=368/368 +16 0 
* 0 
+16 0 368 0 368
+5 0 368 0 0 0 0 0 0 0 0 368
+6 0 368
+3 0 368
jump=368 0x3877c7878f 0 
* 0 
+10 0 40 0 40
+6 0 40 0 0 1 0 0 1
jump=40 0x3877c78885 0 
* 0 
0x3877c78b20 0 368 368 0 1 0 0 1
+4 0 368
+2 0 368 0 0 0 0 0 0 0 0 368
+6 0 368 368
+7 0 368 0 0 0 0 0 0 0 0 368
jcnd=368/368 +15 0 
* 0 
+15 0 368 0 368 1 0 0 1
+4 0 368 0 0 0 0 0 0 0 0 368 2
+6 0 368
+4 0 368 368
+1 0 368 368
+1 0 368 368
+2 0 368 368
+2 0 368 368
+2 0 368 368
+2 0 368 368
0x3877c78bf0 0 14 0 0 1 0 0 1
+3 0 14 0 14
+4 0 14
+3 0 14
+4 0 14 0 14 1 0 0 1
+4 0 14
jump=14 0x3877c788cf 0 
* 0 
0x3877c7907c 0 368 368 0 1 1 0 1 1
+4 0 368 0 0 1 0 0 1
+7 0 368
+4 0 368
+3 0 368
+3 0 368 0 0 0 0 0 0 0 0 368
jcnd=368/368 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 482 0 0 1 0 0 1
+7 0 482
+3 0 482
+3 0 482 482 0 0 1 0 0 1
+4 0 482
+4 0 482 0 0 0 0 0 0 0 0 0 0 482 59
jump=56 0x3877c89be8 0 
* 0 
jump=62 0x3877c89bd0 0 
* 0 
jump=56 0x3877c89bb8 0 
* 0 
jump=56 +11 0 
* 0 
jump=56 0x3877c89c48 0 
* 0 
jump=66 0x3877c89c30 0 
* 0 
jump=64 0x3877c89c18 0 
* 0 
jump=66 0x3877c89c00 0 
* 0 
+11 0 56 56
+3 0 56
+4 0 56
+4 0 56 56
+4 0 56
+4 0 56 0 56
+4 0 56
+9 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56
+4 0 56
+4 0 56 0 0 0 0 0 0 0 0 56
jcnd=8/56 0x3877c89c60 0 
* 0 
-40 0 1750 1750
+4 0 1750 0 1750 0 0 6 0 0 6
+4 0 1750 1750
+4 0 1750 0 1750
+4 0 1750 1750
+4 0 1750 0 1750 0 0 1 0 0 1
+4 0 1750 1750
+4 0 1750 0 1750 0 0 3 0 0 3
+4 0 1750
+4 0 1750
+4 0 1750 0 0 0 0 0 0 0 0 1750 29
jcnd=446/1750 0x3877c89c60 0 
* 0 
-32 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
jcnd=10/66 0x3877c89c60 0 
* 0 
-24 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
+4 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
jcnd=8/64 0x3877c89c60 0 
* 0 
-16 0 66 66 0 1 0 0 1
+4 0 66 0 66
+4 0 66 0 0 1 0 0 1
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66 4
jcnd=10/66 0x3877c89c60 0 
* 0 
+6 0 1520
+4 0 1520 1520
+3 0 1520 0 1520 0 0 1 0 0 1
+3 0 1520 1520
+4 0 1520 0 1520 0 0 3 0 0 3
+4 0 1520 1520
+4 0 1520 0 1520 0 0 4 0 0 4
+4 0 1520 1520
+4 0 1520 0 1520
+4 0 1520
jump=1520 -80 0 
* 0 
-30 0 56 56
+3 0 56 0 56
+3 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56 0 0 2 0 0 2
+4 0 56 56
+4 0 56 0 56
+4 0 56
jump=56 -80 0 
* 0 
-24 0 62 62
+4 0 62 0 62
+4 0 62 62
+4 0 62 0 62
+4 0 62 62
+4 0 62 0 62
+4 0 62
jump=62 -80 0 
* 0 
-16 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56
+4 0 56
jump=56 -80 0 
* 0 
+8 0 56 56
+3 0 56
+4 0 56 0 0 1 0 0 1
+4 0 56
+4 0 56
jump=56 -39 0 
* 0 
+9 0 62
+3 0 62 0 0 0 0 0 0 0 0 62
+6 0 62 62
+3 0 62
+4 0 62
jump=62 -72 0 
* 0 
+8 0 56
+4 0 56 56
+3 0 56 0 0 0 0 0 0 0 0 56
+2 0 56
+4 0 56
jump=56 -99 0 
* 0 
+11 0 66 66 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66
+4 0 66
jump=66 0x3877c89b78 0 
* 0 
+9 0 64 64
+3 0 64
+4 0 64
+4 0 64
+4 0 64
jump=64 0x3877c89b70 0 
* 0 
+9 0 66 66
+3 0 66
+4 0 66
+4 0 66
+4 0 66
jump=66 0x3877c89b68 0 
* 0 
+9 0 56 56
+3 0 56
+4 0 56
+4 0 56
+4 0 56
jump=56 0x3877c89b60 0 
* 0 
+9 0 482 0 482 1 0 0 1
+3 0 482 482

fn=(104) alloc_perturb
0x3877c77180 0 367 367 0 1 0 0 1
+6 0 367
+2 0 367 0 0 0 0 0 0 0 0 367 3
+2 0 367 367

fn=(38)
0x3877c79a00 0 492 0 492 1 0 0 1
+2 0 492
+3 0 492 0 492
+2 0 492 0 492
+2 0 492 0 492 0 0 1 0 0 1
+2 0 492
+3 0 492 0 492
+1 0 492 0 492
+1 0 492
+4 0 492
+4 0 492 0 0 0 0 0 0 0 0 492
+6 0 492
+4 0 492
+6 0 492
+3 0 492
+4 0 492
+4 0 492
+4 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
+6 0 492 492 0 1 1 0 1 1
+7 0 492 0 0 0 0 0 0 0 0 492 5
jcnd=370/492 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 125 125
+6 0 125
+4 0 125
+2 0 125 0 0 0 0 0 0 0 0 125
+6 0 125
+3 0 125
+4 0 125 125
+1 0 125 125
+1 0 125 125
+2 0 125 125
+2 0 125 125
+2 0 125 125
+2 0 125 125
-14 0 367
+4 0 367 367
+1 0 367 367
+1 0 367 367
+2 0 367 367
+2 0 367 367
+2 0 367 367
+2 0 367 367
+7 0 387
+7 0 387 0 0 1 0 0 1 0 0 387
+2 0 387
+3 0 387
+5 0 387
+3 0 387
+4 0 387 0 387
+4 0 387
+2 0 387
+5 0 387 387 0 0 5 0 0 5
+4 0 387
+3 0 387 0 0 0 0 0 0 0 0 387
jcnd=387/387 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 387 0 0 1 0 0 1
+3 0 387
+3 0 387
+3 0 387
+4 0 387
+3 0 387
+4 0 387 0 387
+5 0 387
+3 0 387 0 387
+4 0 387 0 387
+4 0 387 0 387
+5 0 387
+3 0 387
+3 0 387
+3 0 387
+3 0 387
+4 0 387
+4 0 387 0 0 1 0 0 1
+4 0 387 0 387
+4 0 387
+4 0 387 0 387
+5 0 387 0 387
+5 0 387
+3 0 387
+3 0 387 0 387
+5 0 387
+5 0 387
+3 0 387 0 387
+4 0 387 0 387
+4 0 387
+6 0 387 0 387
+4 0 387 0 387
+5 0 387 0 0 1 0 0 1
+3 0 387
+3 0 387
+3 0 387
jump=387 +87 0 
* 0 
+8 0 474
+3 0 474
+4 0 474
+2 0 474
+2 0 474
+3 0 474
+3 0 474
+3 0 474
+2 0 474
+2 0 474
+5 0 474
+2 0 474 474
+4 0 474
+3 0 474
+4 0 474 0 474
+4 0 474 0 474 0 0 1 0 0 1
+8 0 474
+7 0 474 0 474
+4 0 474 0 474 0 0 1 0 0 1
+4 0 474 0 474
+4 0 474 0 0 0 0 0 0 0 0 474
-38 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+8 0 5
+7 0 5 0 5
+4 0 5 0 5 0 0 1 0 0 1
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 32
jcnd=348/866 0x3877c79ef0 0 
* 0 
+6 0 518 518
+4 0 518 518 0 0 1 0 0 1
+4 0 518
+4 0 518 0 0 0 0 0 0 0 0 518
+6 0 518 518 0 1 1 0 1 1
+7 0 518 0 0 0 0 0 0 0 0 518
+6 0 518
+4 0 518
+7 0 518 0 0 0 0 0 0 0 0 518
+2 0 518
+3 0 518 0 0 0 0 0 0 0 0 518 135
jcnd=355/518 0x3877c79e28 0 
* 0 
+6 0 499
+3 0 499 0 499
+4 0 499 0 499
+5 0 499 0 0 0 0 0 0 0 0 499 12
jcnd=20/499 0x3877c7a090 0 
* 0 
+6 0 479
+7 0 479 0 0 0 0 0 0 0 0 479 5
jcnd=474/479 0x3877c79c50 0 
* 0 
+6 0 5 0 0 1 0 0 1
+3 0 5
+4 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5
+3 0 5
+4 0 5
+2 0 5
+2 0 5
+3 0 5
+3 0 5
+8 0 5
+3 0 5
+2 0 5
+2 0 5
+4 0 5 5 0 0 1 0 0 1
+4 0 5
+3 0 5 0 0 1 0 0 1 0 0 5 1
jcnd=5/5 0x3877c79e15 0 
* 0 
0x3877c79e15 0 5 0 5
+4 0 5 0 5
+4 0 5
+3 0 5
jump=5 0x3877c79c73 0 
* 0 
+8 0 355 355 0 1 0 0 1
+4 0 355
+3 0 355 0 0 0 0 0 0 0 0 355 22
jcnd=185/355 0x3877c79ce1 0 
* 0 
+6 0 170 170
+5 0 170 0 0 0 0 0 0 0 0 170 5
jcnd=151/170 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 1 0 0 1
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 348 0 0 1 0 0 1
+7 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
+6 0 348 348 0 1 0 0 1
+4 0 348
+3 0 348
+3 0 348
+2 0 348
+4 0 348
+3 0 348
+3 0 348
+2 0 348
+2 0 348
+2 0 348
+2 0 348 348
+8 0 348
+5 0 348
+5 0 348
+2 0 348 0 0 0 0 0 0 0 0 348
-2 0 174
+2 0 174 0 0 0 0 0 0 0 0 174
+2 0 522
+2 0 522 0 0 0 0 0 0 0 0 522 27
jcnd=334/522 +64 0 
* 0 
+2 0 188
+8 0 188
+3 0 188
+3 0 188 0 0 0 0 0 0 0 0 188 1
jcnd=1/188 0x3877c79fc0 0 
* 0 
-6 0 35
+3 0 35
+3 0 35 0 0 0 0 0 0 0 0 35 2
jcnd=14/35 0x3877c79fc0 0 
* 0 
+2 0 208
+2 0 208 208
+8 0 208
+2 0 208 0 0 0 0 0 0 0 0 208 13
jcnd=35/208 -20 0 
* 0 
+2 0 173
+2 0 173
+5 0 173
+3 0 173
+3 0 173
+2 0 173
+2 0 173
+5 0 173 0 0 0 0 0 0 0 0 173 3
jcnd=2/173 +14 0 
* 0 
+2 0 171
+2 0 171
+4 0 171
+2 0 171
+2 0 171 0 0 0 0 0 0 0 0 171
jcnd=171/171 -8 0 
* 0 
-8 0 3329
+4 0 3329
+2 0 3329
+2 0 3329 0 0 0 0 0 0 0 0 3329 246
jcnd=2862/3329 -8 0 
* 0 
-2 0 334 0 0 1 0 0 1
+2 0 334 0 0 0 0 0 0 0 0 334 24
jcnd=296/334 -8 0 
* 0 
+2 0 507 507 0 0 6 0 0 6
+4 0 507 0 0 1 0 0 1
+3 0 507 0 0 0 0 0 0 0 0 507 155
jcnd=333/507 0x3877c7a1cf 0 
* 0 
+6 0 174
+2 0 174
+4 0 174
+2 0 174
+2 0 174
+2 0 174 0 174
+8 0 174
jump=174 0x3877c79f30 0 
* 0 
+37 0 15 15 0 1 0 0 1
+5 0 15 15
+4 0 15
+4 0 15 15
+5 0 15 0 0 0 0 0 0 0 0 15
jcnd=15/15 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 20 0 0 1 0 0 1
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 333 333 0 1 1 0 1 1
+4 0 333 333 0 0 1 0 0 1
+4 0 333
+3 0 333 333
+4 0 333
+4 0 333
+3 0 333
+3 0 333 333
+4 0 333 0 0 0 0 0 0 0 0 333
+6 0 333 333 0 0 1 0 0 1
+4 0 333 0 0 0 0 0 0 0 0 333
+6 0 333 333 0 1 0 0 1
+8 0 333 0 333
+4 0 333 0 333
+4 0 333 0 0 0 0 0 0 0 0 333 5
jcnd=326/333 +38 0 
* 0 
+2 0 7 7 0 0 2 0 0 2
+4 0 7
+3 0 7 0 0 0 0 0 0 0 0 7
+2 0 7 7
+5 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 7
+4 0 7 7
+4 0 7 0 7
+4 0 7
+4 0 7 0 0 0 0 0 0 0 0 7
-4 0 326
+4 0 326 0 0 0 0 0 0 0 0 326 12
jcnd=16/326 0x3877c7a2e3 0 
* 0 
+6 0 317 317
+4 0 317 317 0 1 0 0 1
+4 0 317 0 0 0 0 0 0 0 0 317
+6 0 317
+4 0 317
+7 0 317 0 317 0 0 9 0 0 9
+4 0 317 0 317
+4 0 317 0 317
+4 0 317 0 317
+4 0 317 0 0 0 0 0 0 0 0 317
+2 0 317 0 317
+5 0 317
+7 0 317 0 0 0 0 0 0 0 0 317 1
jcnd=311/317 +18 0 
* 0 
+2 0 6 0 6
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 311 0 0 1 0 0 1
+7 0 311 0 311 0 0 1 0 0 1
+4 0 311
+3 0 311
+3 0 311
+4 0 311
+3 0 311
+4 0 311
+3 0 311
+3 0 311
+4 0 311 0 311
+4 0 311 0 311 0 0 1 0 0 1
+4 0 311
jump=311 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 16
+7 0 16 0 16
+6 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +7 0 
* 0 
+7 0 333
+4 0 333 0 0 1 0 0 1
+3 0 333
+3 0 333 0 333
cfn=(104)
calls=333 0x3877c77180 0 
* 0 1332 666 0 1 0 0 1 0 0 333 2
+5 0 333
+3 0 333
jump=333 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 15 0 0 1 0 0 1
+7 0 15
+2 0 15
+4 0 15
+3 0 15
+3 0 15 0 15
+5 0 15
+3 0 15
+4 0 15
+3 0 15 0 0 1 0 0 1
+4 0 15
+4 0 15
+3 0 15
+4 0 15 0 15
+4 0 15 0 15 0 0 3 0 0 3
+4 0 15
+3 0 15
+3 0 15 0 15
cfn=(104)
calls=15 0x3877c77180 0 
* 0 60 30 0 0 0 0 0 0 0 15 1
+5 0 15
+3 0 15
jump=15 0x3877c79ae3 0 
* 0 

totals: 1758756 675270 417876 226 63 81 226 63 81 67025 1488 2942 59
