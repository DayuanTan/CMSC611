version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 49


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 8729785 - 10588149
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1744 0 0 1 0 0 1
+3 0 1744 0 0 0 0 0 0 0 0 1744
+2 0 1744
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1744 0x3877c7b8b0 0 
* 0 196151 50183 25725 21 5 0 21 5 0 48145 770
* 0 1744 1744 0 1 1 0 1 1 0 0 0 1744

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1744 0 1744 1 0 0 1
+1 0 1744
+5 0 1744
+3 0 1744 0 1744
+1 0 1744
+4 0 1744 0 0 1 0 0 1
+3 0 1744
+4 0 1744
+3 0 1744 0 1744 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1744 0x3877c7aa50 0 
* 0 476201 69058 69257 49 38 56 49 38 56 79336 2780
* 0 1744 1744 0 1 1 0 1 1 0 0 0 1744
+5 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744
jcnd=1744/1744 +96 0 
* 0 
+96 0 1744 0 0 1 0 0 1
+4 0 1744 1744
+1 0 1744 1744
+1 0 1744 1744

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 864
+4 * 864
+3 * 864 0 864
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=864 0x4044cc -35 
* * 4320 1728 1728
+5 * 864 864
+1 * 864 864

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864 1 0 0 1
+4 +1 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=864 0x4049d4 -35 
* * 5184 1728 2592 1 0 0 1
+5 * 864 864
+1 * 864 864

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 864
+4 * 864
+3 * 864 0 864
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=864 0x404520 -35 
* * 4320 1728 1728
+5 * 864 864
+1 * 864 864

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=864 0x404a28 -35 
* * 5184 1728 2592 1 0 1 1 0 1
+5 * 864 864
+1 * 864 864

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 864 0 864
+1 * 864
+3 * 864 0 864
+4 * 864 864
+4 * 864 864
+1 * 864 864

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 432 0 432
+1 * 432
+3 * 432
+4 * 432 0 432
+4 * 432 0 432
+4 * 432 0 432
+4 +1 432 432
+4 * 432 432
+4 * 432 432
+4 * 432
+3 * 432
+3 * 432 0 432
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=432 0x403df2 -87 
* * 10368 3456 3888 0 28 3 0 28 3 432 2
+5 * 432 432
+1 * 432 432

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 864 0 864 1 0 0 1
+1 * 864
+3 * 864 0 864
+4 * 864 864
+4 * 864 864
+1 * 864 864

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 432 0 432
+1 * 432
+3 * 432
+4 * 432 0 432
+4 * 432 0 432
+4 * 432 0 432
+4 +1 432 432
+4 * 432 432
+4 * 432 432
+4 * 432
+3 * 432
+3 * 432 0 432
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=432 0x40406a -87 
* * 10368 3456 3888 0 27 19 0 27 19 432
+5 * 432 432
+1 * 432 432

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1728 0 1728 1 0 0 1
+1 * 1728
+3 * 1728 0 1728
+4 +1 1728 1728
+4 * 1728 1728
+1 * 1728 1728

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1728 0 1728 1 0 0 1
+1 * 1728
+3 * 1728
+4 * 1728 0 1728
+4 +1 1728
+4 * 1728
+3 * 1728 0 1728 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1728 0x40500c 790 
* * 10368 5184 3456 1 0 0 1
+5 * 1728 1728
+3 * 1728 1728
+1 * 1728 1728

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 944 0 944
+1 * 944
+3 * 944 0 944
+4 +1 944 944
+4 * 944 944
+1 * 944 944

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1728 0 1728 1 0 0 1
+1 * 1728
+3 * 1728 0 1728
+4 +1 1728 1728 0 1 0 0 1
+4 * 1728 1728
+1 * 1728 1728

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 944 0 944
+1 * 944
+3 * 944 0 944 0 0 1 0 0 1
+4 +1 944 944
+4 * 944 944
+1 * 944 944

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1728 0 1728 1 0 0 1
+1 * 1728
+3 * 1728
+4 * 1728 0 1728
+4 +1 1728
+4 * 1728
+3 * 1728 0 1728
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1728 0x404ffe 790 
* * 10368 5184 3456 1 0 0 1
+5 * 1728 1728
+3 * 1728 1728
+1 * 1728 1728

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 864 0 864
+1 * 864
+3 * 864 0 864
+4 * 864 0 864
+4 * 864 864
+4 * 864 864
+1 * 864 864

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 872 0 872 1 0 0 1
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 * 872 0 872 1 0 0 1
+4 +2 872 872
+4 * 872
+3 * 872 0 872
cfn=(28)
calls=872 0x404992 +12 
* * 5232 1744 1744 1 0 0 1
+5 * 872 872
+4 * 872
+3 * 872
+2 * 872 0 0 0 0 0 0 0 0 872
jcnd=872/872 +7 +3 
* * 
+7 +3 872 872
+4 * 872
+4 * 872
+3 * 872 0 872
cob=(5)
cfi=(8)
cfn=(32)
calls=872 0x387e4bd0b0 0 
* * 253348 39454 40005 30 29 15 30 29 15 40755 1178 872
* * 872 872 0 1 1 0 1 1 0 0 0 872
+5 +1 872 872
+1 * 872 872

fn=(102)
0x4048de 113 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888
+4 +1 888
+10 * 888 888
+1 * 888 888

fn=(266)
0x40406a 129 432 0 432
+1 * 432
+3 * 432
+4 * 432 0 432
+4 * 432 0 432
+4 * 432 0 432
+4 +1 432 432
+4 * 432
+3 * 432
+5 * 432 0 432
cfi=(16)
cfn=(226)
calls=432 0x402d61 -20 
* * 3024 1296 1296
+5 * 432
+3 * 432 0 0 0 0 0 0 0 0 432
+2 * 432 432
+4 * 432 432 0 0 27 0 0 27
+2 * 432 0 432 0 0 19 0 0 19
+2 * 432 432
+1 * 432 432

fn=(28)
0x404992 113 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888
+4 +1 888
+10 * 888 888
+1 * 888 888

fn=(176)
0x4044cc 86 864 0 864
+1 * 864
+3 * 864 0 864
+4 * 864 864
+1 * 864 864

fn=(224)
0x403df2 129 432 0 432
+1 * 432
+3 * 432
+4 * 432 0 432
+4 * 432 0 432
+4 * 432 0 432
+4 +1 432 432
+4 * 432
+3 * 432
+5 * 432 0 432
cfi=(16)
cfn=(226)
calls=432 0x402d61 -20 
* * 3024 1296 1296
+5 * 432
+3 * 432 0 0 0 0 0 0 0 0 432 2
+2 * 432 432
+4 * 432 432 0 0 28 0 0 28
+2 * 432 0 432 0 0 3 0 0 3
+2 * 432 432
+1 * 432 432

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 872 0 872
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 * 872 0 872
+4 +1 872 872
+4 * 872
+3 * 872 0 872
cob=(5)
cfi=(8)
cfn=(164)
calls=872 0x387e4bb2f0 0 
* * 95106 23619 10833 23 5 0 23 5 0 23170 703 872
* * 872 872 0 1 1 0 1 1 0 0 0 872
+5 * 872 872
+1 * 872 872

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 872 0 872
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 * 872 0 872
+4 +1 872 872
+4 * 872
+3 * 872 0 872
cob=(5)
cfi=(8)
cfn=(164)
calls=872 0x387e4bb2f0 0 
* * 108021 28308 14892 0 1 0 0 1 0 26719 67 872
* * 872 872 0 0 0 0 0 0 0 0 0 872
+5 * 872 872
+1 * 872 872

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 872 0 872 1 0 0 1
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 * 872 0 872
+4 +2 872 872
+4 * 872
+3 * 872 0 872
cfn=(102)
calls=872 0x4048de +12 
* * 5232 1744 1744 1 0 0 1
+5 * 872 872
+4 * 872 0 0 1 0 0 1
+3 * 872
+2 * 872 0 0 0 0 0 0 0 0 872
jcnd=872/872 +7 +3 
* * 
+7 +3 872 872
+4 * 872
+4 * 872
+3 * 872 0 872
cob=(5)
cfi=(8)
cfn=(32)
calls=872 0x387e4bd0b0 0 
* * 250757 36580 34484 23 10 42 23 10 42 40325 1602 872
* * 872 872 0 0 0 0 0 0 0 0 0 872
+5 +1 872 872
+1 * 872 872

fn=(18)
0x404a28 81 864 0 864 1 0 0 1
+1 * 864
+3 * 864 0 864 0 0 1 0 0 1
+4 * 864 0 864
+4 * 864 864
+1 * 864 864

fn=(92)
0x4049d4 81 864 0 864 1 0 0 1
+1 * 864
+3 * 864 0 864
+4 * 864 0 864
+4 * 864 864
+1 * 864 864

fn=(196)
0x404520 86 864 0 864
+1 * 864
+3 * 864 0 864
+4 * 864 864
+1 * 864 864

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=864 0x404484 107 
* * 491034 166340 161160 25 3 4 25 3 4 19136 1076 1724 215
+5 * 864 864
+1 * 864 864

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864 0 1 0 0 1
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=864 0x404a36 450 
* * 466842 157700 152520 24 3 4 24 3 4 19136 1076 1724 215
+5 * 864 864
+1 * 864 864

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=864 0x40439c 107 
* * 491034 166340 161160 7 0 40 7 0 40 19136 1060 1724
+5 * 864 864
+1 * 864 864

fn=(116)
0x40439c 107 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +10 864 864
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=864 0x4047d7 -26 
* * 478938 162020 156840 7 0 40 7 0 40 19136 1060 1724
+5 +1 864 864
+1 * 864 864

fn=(118)
0x4047d7 91 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=864 0x4049e2 450 
* * 466842 157700 152520 7 0 40 7 0 40 19136 1060 1724
+5 * 864 864
+1 * 864 864

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +10 864 864
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(52)
calls=864 0x404829 -26 
* * 478938 162020 156840 25 3 4 25 3 4 19136 1076 1724 215
+5 +1 864 864
+1 * 864 864

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 872 0 872 1 0 0 1
+1 * 872
+3 * 872
+4 * 872 0 872 1 0 0 1
+4 * 872 0 872
+4 0 872 872
+5 0 872 0 0 0 0 0 0 0 0 872
+2 0 872 872
+4 0 872 872
+4 0 872
+5 0 872
+3 0 872
+3 0 872 0 872
fi=(6) ???
cfi=(5)
cfn=(26)
calls=872 0x404730 99 
* 0 276020 46430 46981 34 30 15 34 30 15 41627 1178 1744
+5 0 872
fi=(6)
jump=872 +7 0 
* 0 
+7 0 872 872
+1 0 872 872

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+4 * 864 0 864
+4 * 864
+4 * 864 0 0 1 0 0 1
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=864 0x404468 726 
* * 8640 4320 3456 1 0 0 1
+5 * 864 864
+4 * 864 864
+1 * 864 864

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+3 * 864 0 864
+4 * 864
+4 * 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(10)
cfn=(44)
calls=864 0x404468 726 
* * 8640 4320 3456
+5 * 864 864
+4 * 864 864
+1 * 864 864

fn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
0x403a0a 134 864 0 864
+1 * 864
+3 * 864 0 864
+1 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=864 0x4042e2 -45 
* * 31104 11232 12096 5 0 0 5
+5 +1 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=864 0x40432a +43 
* * 305821 57610 50387 17 5 37 17 5 37 41574 1553 1728
+5 * 864
jump=864 +28 * 
* * 
+28 * 864
+4 * 864 864
+1 * 864 864
+1 * 864 864

fn=(88)
0x4042e2 90 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864 1 0 0 1
cfi=(4)
cfn=(90)
calls=864 0x4047b2 +24 
* * 15552 5184 6048 3 0 0 3
+5 * 864 864
+4 * 864 0 864
+7 * 864 864
+4 * 864 0 864
+8 * 864 864
+4 * 864 0 864
+8 +1 864 864
+1 * 864 864

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 864 0 864 1 0 0 1
+1 * 864
+3 * 864 0 864
+1 * 864
+4 * 864 0 864
+4 +2 864 864
+4 * 864 864 0 1 0 0 1
+4 * 864
+3 * 864 864
+4 * 864 864
+3 * 864
+3 * 864
+3 * 864
+4 * 864
+3 * 864 864
+4 * 864 864
+3 -1 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=864 0x403ce6 +11 
* * 118448 32052 19362 24 5 0 24 5 0 23840 696 1728
+5 +1 864 864
+4 * 864
+3 * 864 0 864
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=864 0x4031b8 -82 
* * 19872 6912 6912 1 0 0 1
+5 * 864
jump=864 +28 * 
* * 
+28 * 864
+4 * 864 864
+1 * 864 864
+1 * 864 864

fn=(172)
0x4031b8 79 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 864
+4 * 864
+3 * 864 0 864
cfi=(4)
cfn=(174)
calls=864 0x403ccc +42 
* * 12096 4320 4320
+5 * 864 864
+1 * 864 864

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760 0 1760
+4 +1 1760 1760
+4 * 1760 1760 0 0 2 0 0 2
+4 * 1760
+3 * 1760 1760
+4 * 1760 1760
+3 * 1760
+3 * 1760
+3 * 1760
+4 * 1760 1760
+1 * 1760 1760

fn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
0x40325e 113 1752 0 1752 1 0 0 1
+1 * 1752
+3 * 1752 0 1752
+4 +1 1752 1752
+4 * 1752 1752
+1 * 1752 1752

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880 0 0 1 0 0 1
+4 +1 880 880
+4 * 880 880
+1 * 880 880

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880 1 0 0 1
+4 +1 880 880
+4 * 880 880
+1 * 880 880

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 432 0 432
+1 * 432
+3 * 432
+4 * 432 0 432
+4 * 432 0 432
+4 +2 432 432
+4 * 432 432
+4 * 432 432
+4 * 432 432
+4 * 432
+3 * 432 0 0 0 0 0 0 0 0 432 8
jcnd=8/432 +51 +10 
* * 
+2 +3 424 424
+4 * 424 424
+4 * 424 424
+4 -1 424 424
+4 * 424
+3 * 424
+3 * 424 0 424
cfi=(3)
cfn=(222)
calls=424 0x403373 215 
* * 16112 5512 5936 0 27 2 0 27 2 424 2
+5 +2 424 424
+4 * 424 424
+4 * 424
+4 * 424 424
+4 * 424 0 424
+4 * 424
jump=424 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12588 3909 3381 35 7 9 35 7 9 845 62 47
+5 +2 432 432
+1 * 432 432

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 864 0 864 1 0 0 1
+1 * 864
+3 * 864 0 864
+2 * 864 0 864
+2 * 864 0 864
+1 * 864
+4 * 864 0 864 1 0 0 1
+4 * 864 0 864
+4 +2 864 864
+4 * 864
+3 * 864 0 864
cfn=(6)
calls=864 0x403b08 117 
* * 5184 2592 1728 1 0 1 1 0 1
+5 * 864
+3 * 864 0 864
cfi=(3)
cfn=(8)
calls=864 0x403afa -88 
* * 5184 2592 1728 1 0 0 1
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(10)
calls=864 0x402f54 645 
* * 11232 5184 1728 1 1 0 1 1
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864
+3 * 864
+3 * 864 0 864
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=864 0x403b16 134 
* * 358523 77952 74177 32 12 12 32 12 12 41978 1122 1728
+5 +4 864 864 0 1 0 0 1
+4 * 864
+3 * 864 0 864
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=864 0x40333c 113 
* * 5184 2592 1728 2 0 0 2
+5 * 864
+3 * 864 864
+4 * 864 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(42)
calls=864 0x403ba4 565 
* * 21600 8640 6912 3 0 0 3
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(46)
calls=864 0x403b74 547 
* * 21600 8640 6912
+5 * 864
+3 * 864
+3 * 864
+3 * 864
+3 * 864 0 864 1 0 0 1
cfi=(11)
cfn=(48)
calls=864 0x403bd5 -60 
* * 503994 170660 166344 26 3 4 26 3 4 19136 1076 1724 215
+5 -3 864 864
+4 * 864 0 864
+4 * 864
jump=864 +28 +4 
* * 
+28 +4 864
+4 * 864 864
+1 * 864 864
+2 * 864 864
+2 * 864 864
+1 * 864 864

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+4 * 864 0 864
+4 * 864
+4 * 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=864 0x404380 726 
* * 8640 4320 3456 1 0 0 1
+5 * 864 864
+4 * 864 864
+1 * 864 864

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 864 0 864
+1 * 864
+3 * 864 0 864
+1 * 864
+4 * 864 0 864 1 0 0 1
+4 +2 864 864
+4 * 864
+3 * 864 0 864
cfn=(40)
calls=864 0x40333c 113 
* * 5184 2592 1728
+5 * 864
+3 * 864 864
+4 * 864 864
+4 * 864 864
+4 * 864 864
+3 -1 864
+3 * 864
+3 * 864 0 864
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=864 0x40334a 148 
* * 26784 8640 10368 2 0 0 2
+5 +1 864 864
+4 * 864
+3 * 864 0 864
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=864 0x4032ca 159 
* * 175394 53140 34650 3 1 0 3 1 0 27380 58 1728
+5 * 864
jump=864 +28 * 
* * 
+28 * 864 0 0 1 0 0 1
+4 * 864 864
+1 * 864 864
+1 * 864 864

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 872 0 872 1 0 0 1
+1 * 872 0 0 1 0 0 1
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 0 872 872
+5 0 872 0 0 0 0 0 0 0 0 872
+2 0 872 872
+4 0 872 872
+4 0 872
+5 0 872
+3 0 872
+3 0 872 0 872
fi=(6)
cfi=(5)
cfn=(100)
calls=872 0x40461a 99 
* 0 273429 43556 41460 26 10 42 26 10 42 41197 1602 1744
+5 0 872
fi=(6)
jump=872 +7 0 
* 0 
+7 0 872 872
+1 0 872 872

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 282744 0 282744
+1 * 282744
+3 * 282744 0 282744
+4 * 282744 0 282744
+4 +1 282744 282744
+4 * 282744 282744
+3 * 282744 282744
+4 * 282744
+4 * 282744
+3 * 282744 282744
+1 * 282744 282744

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 282744 0 282744
+1 * 282744
+3 * 282744 0 282744 1 0 0 1
+4 * 282744 0 282744
+4 +1 282744 282744
+4 * 282744 282744
+3 * 282744 282744
+4 * 282744
+4 * 282744
+3 * 282744 282744
+1 * 282744 282744

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 864
+4 * 864
+3 * 864 0 864
cfi=(4)
cfn=(194)
calls=864 0x403d7e +42 
* * 12096 4320 4320 1 0 0 1
+5 * 864 864
+1 * 864 864

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 864 0 864 1 0 0 1
+1 * 864
+3 * 864 0 864
+1 * 864
+4 * 864 0 864
+4 +2 864 864
+4 * 864 864
+4 * 864
+3 * 864 864
+4 * 864 864
+3 * 864
+3 * 864
+3 * 864
+4 * 864
+3 * 864 864
+4 * 864 864
+3 -1 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=864 0x403d98 +11 
* * 131330 36724 23418 1 1 0 1 1 0 27380 58 1728
+5 +1 864 864
+4 * 864
+3 * 864 0 864
cfn=(192)
calls=864 0x403296 -82 
* * 19872 6912 6912 1 0 0 1
+5 * 864
jump=864 +28 * 
* * 
+28 * 864
+4 * 864 864
+1 * 864 864
+1 * 864 864

fn=(2)
0x402d74 645 3488 0 3488 1 0 0 1
+1 * 3488
+3 * 3488 0 3488 0 0 1 0 0 1
+4 +1 3488 3488
+4 * 3488 3488 0 1 1 0 1 1
+4 * 3488
+3 * 3488 3488
+4 * 3488 3488
+3 * 3488
+3 * 3488
+3 * 3488
+4 * 3488 3488
+1 * 3488 3488

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(22)
calls=864 0x404236 -14 
* * 286811 50304 49985 26 12 8 26 12 8 41978 1122 1728
+5 * 864 864
+4 * 864 0 864
+3 +1 864 864
+4 * 864 864 0 1 0 0 1
+3 * 864 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+3 * 864 864
+4 * 864
+4 * 864
+3 * 864 864
+4 * 864 0 864
+4 +1 864 864
+1 * 864 864

fn=(94)
0x40432a 179 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864
+4 * 864 864 0 1 0 0 1
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(96)
calls=864 0x403fbe -14 
* * 284221 47242 44339 16 5 37 16 5 37 41574 1553 1728
+5 * 864 864
+4 * 864 0 864
+3 +1 864 864
+4 * 864 864
+3 * 864 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+3 * 864 864
+4 * 864
+4 * 864
+3 * 864 864
+4 * 864 0 864
+4 +1 864 864
+1 * 864 864

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 432 0 432
+1 * 432
+3 * 432 0 0 1 0 0 1
+4 * 432 0 432
+4 * 432 0 432
+4 +2 432 432
+4 * 432 432
+4 * 432 432
+4 * 432 432
+4 * 432
+3 * 432 0 0 0 0 0 0 0 0 432
jcnd=8/432 +51 +10 
* * 
+2 +3 424 424
+4 * 424 424
+4 * 424 424
+4 -1 424 424
+4 * 424
+3 * 424
+3 * 424 0 424
cfi=(3)
cfn=(264)
calls=424 0x4036b1 215 
* * 16112 5512 5936 0 27 15 0 27 15 424
+5 +2 424 424
+4 * 424 424
+4 * 424
+4 * 424 424
+4 * 424 0 424
+4 * 424
jump=424 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12622 3738 3259 28 18 29 28 18 29 880 77 47
+5 +2 432 432
+1 * 432 432

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1752 0 1752 1 0 0 1
+1 * 1752
+3 * 1752 0 1752 1 0 0 1
+4 +1 1752 1752
+4 * 1752 1752
+1 * 1752 1752

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+3 * 864 0 864
+4 * 864
+4 * 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(10)
cfn=(110)
calls=864 0x404380 726 
* * 8640 4320 3456
+5 * 864 864
+4 * 864 864
+1 * 864 864

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 864 0 864
+1 * 864
+3 * 864 0 864
+1 * 864
+4 * 864 0 864 1 0 0 1
+4 +2 864 864
+4 * 864
+3 * 864 0 864
cfn=(106)
calls=864 0x40325e 113 
* * 5184 2592 1728
+5 * 864
+3 * 864 864
+4 * 864 864
+4 * 864 864
+4 * 864 864
+3 -1 864
+3 * 864
+3 * 864 0 864
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=864 0x40326c 148 
* * 26784 8640 10368 4 0 0 4
+5 +1 864 864
+4 * 864
+3 * 864 0 864
cfn=(156)
calls=864 0x4031ec 159 
* * 162512 48468 30594 27 5 0 27 5 0 23840 696 1728
+5 * 864
jump=864 +28 * 
* * 
+28 * 864 0 0 1 0 0 1
+4 * 864 864
+1 * 864 864
+1 * 864 864

fn=(158)
0x403ce6 171 872 0 872 1 0 0 1
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 * 872 0 872
+4 +2 872 872
+5 * 872 0 0 0 0 0 0 0 0 872
+2 +1 872 872
+4 * 872 872
+4 * 872 872
+4 * 872
+3 * 872
+3 * 872 0 872
cfi=(5)
cfn=(160)
calls=872 0x4044d6 -65 
* * 105570 27107 15193 24 6 0 24 6 0 23170 703 1744
+5 +1 872 872
+1 * 872 872

fn=(12)
0x403b16 134 864 0 864
+1 * 864
+3 * 864 0 864
+1 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=864 0x4043ca -45 
* * 31104 11232 12096 4 0 4 4 0 4
+5 +1 864 864 0 1 0 0 1
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(20)
calls=864 0x404412 +43 
* * 308411 60672 56033 27 12 8 27 12 8 41978 1122 1728
+5 * 864
jump=864 +28 * 
* * 
+28 * 864
+4 * 864 864
+1 * 864 864
+1 * 864 864

fn=(14)
0x4043ca 90 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864 0 0 1 0 0 1
+4 * 864 0 864
+4 +1 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(4)
cfn=(16)
calls=864 0x404804 +24 
* * 15552 5184 6048 2 0 1 2 0 1
+5 * 864 864
+4 * 864 0 864 0 0 2 0 0 2
+7 * 864 864
+4 * 864 0 864 1 0 0 1
+8 * 864 864
+4 * 864 0 864
+8 +1 864 864
+1 * 864 864

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 864 0 864 1 0 0 1
+1 * 864
+3 * 864 0 864
+2 * 864 0 864
+2 * 864 0 864
+1 * 864 0 0 1 0 0 1
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864
+4 * 864
+3 * 864 0 864
cfn=(82)
calls=864 0x4039fc 117 
* * 5184 2592 1728 2 0 0 2
+5 * 864
+3 * 864 0 864
cfi=(3)
cfn=(84)
calls=864 0x4039ed -88 
* * 5184 2592 1728
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(2)
calls=864 0x402d74 645 
* * 11232 5184 1728
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864
+3 * 864
+3 * 864 0 864 1 0 0 1
cfn=(86)
calls=864 0x403a0a 134 
* * 355933 74890 68531 23 5 37 23 5 37 41574 1553 1728
+5 +4 864 864
+4 * 864
+3 * 864 0 864
cfn=(106)
calls=864 0x40325e 113 
* * 5184 2592 1728 1 0 0 1
+5 * 864
+3 * 864 864
+4 * 864 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(108)
calls=864 0x403a98 565 
* * 21600 8640 6912 2 0 0 2
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(112)
calls=864 0x403a68 547 
* * 21600 8640 6912
+5 * 864
+3 * 864
+3 * 864
+3 * 864
+3 * 864 0 864
cfi=(11)
cfn=(114)
calls=864 0x403ac9 -60 
* * 503994 170660 166344 7 0 40 7 0 40 19136 1060 1724
+5 -3 864 864
+4 * 864 0 864
+4 * 864
jump=864 +28 +4 
* * 
+28 +4 864
+4 * 864 864
+1 * 864 864
+2 * 864 864
+2 * 864 864
+1 * 864 864

fn=(188)
0x403d98 171 872 0 872 1 0 0 1
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 * 872 0 872
+4 +2 872 872
+5 * 872 0 0 0 0 0 0 0 0 872 8
+2 +1 872 872
+4 * 872 872
+4 * 872 872
+4 * 872
+3 * 872
+3 * 872 0 872
cfi=(5)
cfn=(190)
calls=872 0x40452a -65 
* * 118485 31796 19252 0 1 0 0 1 0 26719 67 1744
+5 +1 872 872
+1 * 872 872

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864 1 0 0 1
+4 * 864 0 864
+4 * 864 0 864
+4 +8 864 0 864
+4 +3 864 864
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=864 0x404f37 -22 
* * 328602 111044 105000 14 3 3 14 3 3 19136 1076 1724 215
+5 +1 864 864
+1 * 864 864

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 864 0 864
+1 * 864
+3 * 864 0 864
+2 * 864 0 864
+1 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +4 864 864
+4 * 864
+3 * 864 0 864
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=864 0x404878 277 
* * 12960 5184 4320 1 0 0 1
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=864 0x404d44 277 
* * 21600 7776 6912 2 0 0 2
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(132)
calls=864 0x404d44 277 
* * 21600 7776 6912
+5 * 864
+3 * 864
+3 * 864
+3 * 864 0 864
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=864 0x404d5e -49 
* * 341562 115364 110184 1 0 40 1 0 40 19136 1060 1724
+5 +1 864
+4 * 864 864
+1 * 864 864
+2 * 864 864
+1 * 864 864

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 864 0 864
+1 * 864
+3 * 864 0 864
+1 * 864
+4 * 864 0 864 1 0 0 1
+4 * 864 0 864
+4 * 864 0 864
+4 +10 864 864
+4 * 864
+3 * 864 0 864
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=864 0x404c38 288 
* * 12960 5184 4320 3 0 0 3
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(56)
calls=864 0x404c38 288 
* * 12960 5184 4320
+5 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=864 0x404c52 -36 
* * 421914 142148 136968 20 3 4 20 3 4 19136 1076 1724 215
+5 +1 864
+4 * 864 864
+1 * 864 864
+1 * 864 864

fn=(60)
0x404c52 424 864 0 864
+1 * 864
+3 * 864 0 864
+2 * 864 0 864
+1 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +4 864 864
+4 * 864
+3 * 864 0 864
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=864 0x40492d 277 
* * 12960 5184 4320 2 0 0 2
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=864 0x404d9d 277 
* * 21600 7776 6912 2 0 1 2 0 1
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(66)
calls=864 0x404d9d 277 
* * 21600 7776 6912
+5 * 864
+3 * 864
+3 * 864
+3 * 864 0 864
cfn=(72)
calls=864 0x404db7 -49 
* * 341562 115364 110184 15 3 3 15 3 3 19136 1076 1724 215
+5 +1 864
+4 * 864 864
+1 * 864 864
+2 * 864 864
+1 * 864 864

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 912 0 912 1 0 0 1
+1 * 912
+3 * 912
+4 * 912 0 912
+4 +1 912 912
+4 * 912
+3 * 912 0 912 1 0 0 1
cfi=(13)
cfn=(64)
calls=912 -33 -66 
* * 5472 2736 1824
+5 * 912 912
+1 * 912 912

fn=(66)
0x404d9d 277 1728 0 1728
+1 * 1728
+3 * 1728
+4 * 1728 0 1728
+4 +1 1728 1728
+4 * 1728
+3 * 1728 0 1728
cfi=(13)
cfn=(68)
calls=1728 0x404f1a -58 
* * 27648 10368 8640 2 0 1 2 0 1
+5 * 1728 1728
+1 * 1728 1728

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 864 0 864
+1 * 864
+3 * 864 0 864
+1 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +10 864 864
+4 * 864
+3 * 864 0 864
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=864 0x404bc6 288 
* * 12960 5184 4320 3 0 0 3
+5 * 864
+3 * 864 864
+4 * 864
+3 * 864 0 864
cfn=(122)
calls=864 0x404bc6 288 
* * 12960 5184 4320
+5 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(126)
calls=864 0x404be0 -36 
* * 421914 142148 136968 4 0 40 4 0 40 19136 1060 1724
+5 +1 864
+4 * 864 864
+1 * 864 864
+1 * 864 864

fn=(128)
0x404878 277 912 0 912
+1 * 912
+3 * 912
+4 * 912 0 912 1 0 0 1
+4 +1 912 912
+4 * 912
+3 * 912 0 912
cfi=(13)
cfn=(130)
calls=912 -33 -66 
* * 5472 2736 1824 0 0 1 0 0 1
+5 * 912 912
+1 * 912 912

fn=(132)
0x404d44 277 1728 0 1728
+1 * 1728
+3 * 1728
+4 * 1728 0 1728
+4 +1 1728 1728
+4 * 1728
+3 * 1728 0 1728
cfi=(13)
cfn=(134)
calls=1728 0x404e98 -58 
* * 27648 10368 8640 2 0 0 2
+5 * 1728 1728
+1 * 1728 1728

fn=(138)
0x404d5e 379 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +8 864 0 864
+4 +3 864 864
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=864 0x404eb5 -22 
* * 328602 111044 105000 1 0 40 1 0 40 19136 1060 1724
+5 +1 864 864
+1 * 864 864

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1728 0 1728 1 0 0 1
+1 * 1728
+3 * 1728
+4 * 1728 0 1728
+4 +1 1728 1728
+4 * 1728
+3 * 1728 0 1728
cfi=(13)
cfn=(124)
calls=1728 0x404d36 -77 
* * 10368 5184 3456 2 0 0 2
+5 * 1728 1728
+1 * 1728 1728

fn=(56)
0x404c38 288 1728 0 1728 1 0 0 1
+1 * 1728
+3 * 1728
+4 * 1728 0 1728 1 0 0 1
+4 +1 1728 1728
+4 * 1728
+3 * 1728 0 1728
cfi=(13)
cfn=(58)
calls=1728 0x404d8f -77 
* * 10368 5184 3456 1 0 0 1
+5 * 1728 1728
+1 * 1728 1728

fn=(74)
0x404f37 368 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880 1 0 0 1
+4 * 880 0 880
+4 * 880 0 880
+4 +2 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880
+4 * 880 0 880
+4 +1 880 880
+5 * 880 0 0 0 0 0 0 0 0 880
jcnd=8/880 +33 +2 
* * 
+2 +1 872 872
+4 * 872
+8 * 872 872
+4 * 872 872
+4 * 872
+3 * 872 0 0 1 0 0 1
+3 * 872 0 872 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=872 0x3877c83840 0 
* * 305532 101856 100117 11 2 20 11 2 20 18356 1080 867 215
* * 872 872 0 1 1 0 1 1 0 0 0 872
+5 +1 880 880
+4 * 880
+8 * 880 880
+4 * 880
+3 +1 880 880
+1 * 880 880

fn=(140)
0x404eb5 368 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880 1 0 0 1
+4 * 880 0 880
+4 * 880 0 880 0 0 1 0 0 1
+4 +2 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880
+4 * 880 0 880
+4 +1 880 880
+5 * 880 0 0 0 0 0 0 0 0 880
jcnd=8/880 +33 +2 
* * 
+2 +1 872 872
+4 * 872
+8 * 872 872
+4 * 872 872
+4 * 872
+3 * 872
+3 * 872 0 872
cob=(2)
cfi=(9)
cfn=(78)
calls=872 0x3877c83840 0 
* * 305532 101856 100117 0 0 41 0 0 41 18356 1066 867
* * 872 872 0 0 0 0 0 0 0 0 0 872
+5 +1 880 880
+4 * 880
+8 * 880 880
+4 * 880
+3 +1 880 880
+1 * 880 880

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1728 0 1728 1 0 0 1
+1 * 1728
+3 * 1728 0 1728
+4 +1 1728 1728
+4 * 1728 1728
+1 * 1728 1728

fn=(110)
0x404380 726 1728 0 1728 1 0 0 1
+1 * 1728
+3 * 1728 0 1728
+4 * 1728 0 1728
+4 * 1728 1728
+4 * 1728 1728
+3 * 1728 1728
+4 * 1728 0 1728
+3 * 1728 1728
+1 * 1728 1728

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1728 0 1728 1 0 0 1
+1 * 1728
+3 * 1728 0 1728
+4 +1 1728 1728
+4 * 1728 1728
+1 * 1728 1728

fn=(44)
0x404468 726 1728 0 1728
+1 * 1728
+3 * 1728 0 1728
+4 * 1728 0 1728
+4 * 1728 1728
+4 * 1728 1728
+3 * 1728 1728
+4 * 1728 0 1728 1 0 0 1
+3 * 1728 1728
+1 * 1728 1728

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 872 0 872 1 0 0 1
+1 * 872
+3 * 872 0 872
+4 * 872 0 872 1 0 0 1
+4 * 872 872
+1 * 872 872

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 872 0 872 1 0 0 1
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 +4 872 872
+4 * 872 872
+4 * 872
+3 * 872
+3 * 872 0 872
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=872 0x40454c -14 
* * 5232 1744 2616 1 0 0 1
+5 +2 872 872
+1 * 872 872

fn=(150)
0x40326c 148 872 0 872
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 * 872 0 872
+4 +3 872 872 0 1 0 0 1
+4 * 872 872
+4 * 872
+3 * 872
+3 * 872 0 872
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=872 0x403d1a -29 
* * 15696 5232 6104 3 0 0 3
+5 +1 872 872
+1 * 872 872

fn=(180)
0x40334a 148 872 0 872
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 * 872 0 872
+4 +3 872 872
+4 * 872 872
+4 * 872
+3 * 872
+3 * 872 0 872
cfn=(182)
calls=872 0x403dcc -29 
* * 15696 5232 6104 2 0 0 2
+5 +1 872 872
+1 * 872 872

fn=(152)
0x403d1a 122 872 0 872 1 0 0 1
+1 * 872
+3 * 872
+4 * 872 0 872
+4 * 872 0 872
+4 +4 872 872
+4 * 872 872
+4 * 872
+3 * 872
+3 * 872 0 872
cfn=(154)
calls=872 0x4044f8 -14 
* * 5232 1744 2616 2 0 0 2
+5 +2 872 872
+1 * 872 872

fn=(184)
0x40454c 112 872 0 872 1 0 0 1
+1 * 872
+3 * 872 0 872
+4 * 872 0 872
+4 * 872 872
+1 * 872 872

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 3161 486 484 10 18 7 10 18 7 521 56 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3160 674 609 12 5 5 12 5 5 495 49 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 1 0 1 1 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 432 0 432 1 0 0 1
+1 * 432
+3 * 432
+4 * 432 0 432
+4 * 432 0 432
+4 +1 432 432
+4 * 432
+3 * 432 0 432
cfi=(2)
cfn=(2)
calls=432 0x402d74 645 
* * 5616 2592 864
+5 * 432
+3 * 432 0 432
+3 +1 432 432
+6 * 432 0 432
+3 * 432 432
+6 * 432 0 432
+3 +1 432 432
+6 * 432 0 432 1 0 0 1
+3 * 432 432
+6 * 432 0 432
+3 +2 432 0 432
+7 * 432
jump=432 +86 * 
* * 
+2 +1 93960 93960
+3 * 93960
+3 * 93960 93960
+4 * 93960
+3 * 93960
+3 * 93960 0 93960
cfi=(2)
cfn=(144)
calls=93960 0x402d9a 770 
* * 1033560 469800 281880
+5 * 93960 93960
+4 * 93960 93960
+5 * 93960
+4 * 93960 0 93960
+5 +1 93960 93960
+3 * 93960
+3 * 93960 93960
+4 * 93960
+3 * 93960
+3 * 93960 0 93960
cfi=(2)
cfn=(146)
calls=93960 0x402dba 770 
* * 1033560 469800 281880 1 0 0 1
+5 * 93960 93960
+2 * 93960
+4 * 93960 93960
+5 * 93960
+4 * 93960 0 93960
+5 -2 93960 0 93960
+4 * 93960 93960
+3 * 93960
+3 * 93960 93960
+3 * 93960 0 0 0 0 0 0 0 0 93960 433
jcnd=93528/93960 -93 +1 
* * 
-9 * 432 432 0 1 0 0 1
+3 * 432
+3 * 432 432
+3 * 432 0 0 0 0 0 0 0 0 432
jcnd=432/432 -93 +1 
* * 
+2 +4 432 432
+3 * 432
+3 * 432
+4 * 432 432 0 1 0 0 1
+5 * 432
+4 * 432
+3 * 432 0 432
+5 +1 432 432
+3 * 432
+3 * 432
+4 * 432 432
+5 * 432
+4 * 432
+3 * 432 0 432
+5 +1 432 0 432
+7 * 432
jump=432 0x4016ee * 
* * 
+2 +1 93960 93960
+3 * 93960
+3 * 93960 93960
+4 * 93960
+3 * 93960 0 0 1 0 0 1
+3 * 93960 0 93960
cfi=(2)
cfn=(146)
calls=93960 0x402dba 770 
* * 1033560 469800 281880
+5 * 93960 93960
+2 * 93960
+4 * 93960 93960
+5 * 93960 0 93960
+5 +1 93960 93960
+3 * 93960
+3 * 93960 93960
+4 * 93960
+3 * 93960
+3 * 93960 0 93960
cfi=(2)
cfn=(144)
calls=93960 0x402d9a 770 
* * 1033560 469800 281880
+5 * 93960 93960
+4 * 93960 93960
+5 * 93960 0 93960
+5 +1 93960 93960
+5 * 93960 93960
+5 * 93960 93960
+5 * 93960
+4 * 93960 0 93960
+5 +1 93960 93960
+5 * 93960 93960
+5 * 93960 93960
+5 * 93960
+4 * 93960 0 93960
+5 -4 93960 0 93960
+4 * 93960 93960
+3 * 93960
+3 * 93960 93960
+3 * 93960 0 0 0 0 0 0 0 0 93960 433
jcnd=93528/93960 0x401672 +1 
* * 
-9 * 432 432 0 1 0 0 1
+3 * 432
+3 * 432 432
+3 * 432 0 0 0 0 0 0 0 0 432
jcnd=432/432 0x401672 +1 
* * 
+6 +6 432 432 0 1 0 0 1
+5 * 432 432
+5 * 432 0 432
+5 +2 432 432
+3 +1 432 0 432
+3 * 432 432
+5 * 432 432
+1 * 432 432

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 432
+7 * 432
+7 * 432
+3 * 432
+3 * 432 0 432
cfi=(2)
cfn=(4)
calls=432 0x4030b2 310 
* * 488042 145489 137164 68 15 16 68 15 16 30575 1345 1726 215
+5 * 432
+7 * 432
+7 * 432
+3 * 432
+3 * 432 0 432
cfi=(2)
cfn=(80)
calls=432 0x402ff4 310 
* * 486977 143968 134354 38 5 75 38 5 75 30421 1565 1726
+5 * 432 0 0 1 0 0 1
+7 * 432
+7 * 432
+3 * 432
+3 * 432 0 432
cfn=(142)
calls=432 0x401585 -52 
* * 9799920 4332960 2262384 8 0 0 8 0 0 188784 866
+5 * 432 0 432
+8 * 432 432
+6 * 432 0 432
+6 * 432
+7 * 432
+3 * 432 0 432
cfi=(2)
cfn=(148)
calls=432 0x402df4 414 
* * 107608 33738 23937 33 5 0 33 5 0 11920 351 864
+5 * 432
+7 * 432
+3 * 432 0 432 1 0 0 1
cfi=(2)
cfn=(178)
calls=432 0x402e74 414 
* * 114049 36074 25965 7 1 0 7 1 0 13690 32 864
+5 +2 432
+7 * 432
+7 * 432
+3 * 432
+3 * 432 0 432
cfi=(2)
cfn=(4)
calls=432 0x4030b2 310 
* * 487659 145459 137053 2 1 1 2 1 1 30539 853 1726
+5 * 432
+7 * 432
+7 * 432
+3 * 432
+3 * 432 0 432
cfi=(2)
cfn=(80)
calls=432 0x402ff4 310 
* * 486134 143918 134217 0 0 2 0 0 2 30289 1048 1726
+5 * 432 432
+6 * 432 0 0 1 0 0 1
+7 * 432
+7 * 432 0 432
+6 * 432 432
+8 * 432
+3 * 432
+3 * 432 0 432
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=432 0x401719 -33 
* * 4535568 1888704 1040040 4 0 0 4 0 0 94392 433
+5 * 432 0 432
+8 * 432 432
+6 * 432 0 432
+6 * 432
+7 * 432 0 0 1 0 0 1
+3 * 432 0 432
cfi=(2)
cfn=(148)
calls=432 0x402df4 414 
* * 107608 33738 23937 0 0 0 0 0 0 11920 345 864
+5 * 432
+7 * 432
+3 * 432 0 432
cfi=(2)
cfn=(178)
calls=432 0x402e74 414 
* * 114049 36074 25965 0 0 0 0 0 0 13690 26 864
+5 +2 432 432
+7 * 432
+3 * 432 0 432
cfi=(2)
cfn=(2)
calls=432 0x402d74 645 
* * 5616 2592 864
+5 * 432 432
+6 * 432
+3 * 432
+3 * 432
+3 * 432 432
+7 * 432
+3 * 432 0 0 1 0 0 1
+3 * 432 0 432
cfi=(2)
cfn=(144)
calls=432 0x402d9a 770 
* * 4752 2160 1296
+5 * 432
+3 * 432
+7 * 432
+3 * 432
+3 * 432 0 432
cfi=(2)
cfn=(200)
calls=432 0x402eda 901 
* * 40084 15077 11533 38 34 11 38 34 11 1701 72 47
+5 +1 432 432
+7 * 432
+3 * 432 0 432
cfi=(2)
cfn=(10)
calls=432 0x402f54 645 
* * 5616 2592 864 0 1 0 0 1
+5 * 432 432
+6 * 432
+3 * 432
+3 * 432
+3 * 432 432
+7 * 432 0 0 1 0 0 1
+3 * 432
+3 * 432 0 432
cfi=(2)
cfn=(146)
calls=432 0x402dba 770 
* * 4752 2160 1296
+5 * 432
+3 * 432
+7 * 432
+3 * 432
+3 * 432 0 432
cfi=(2)
cfn=(244)
calls=432 0x402f7a 901 
* * 40118 14906 11411 29 45 44 29 45 44 1736 77 47
+5 +1 432 432
+7 * 432
+3 * 432 0 432
cfi=(2)
cfn=(10)
calls=432 0x402f54 645 
* * 5616 2592 864
+5 * 432 432
+6 * 432
+3 * 432
+3 * 432
+3 * 432 432 0 1 0 0 1
+7 * 432
+3 * 432
+3 * 432 0 432
cfi=(2)
cfn=(146)
calls=432 0x402dba 770 
* * 4752 2160 1296
+5 * 432 432
+2 * 432
+4 * 432 432
+8 * 432 432
+8 * 432 0 432
+8 +1 432 432
+7 * 432
+3 * 432 0 432
cfi=(2)
cfn=(2)
calls=432 0x402d74 645 
* * 5616 2592 864
+5 * 432 432 0 1 0 0 1
+6 * 432
+3 * 432
+3 * 432
+3 * 432 432
+7 * 432
+3 * 432
+3 * 432 0 432
cfi=(2)
cfn=(144)
calls=432 0x402d9a 770 
* * 4752 2160 1296
+5 * 432 432
+4 * 432 432
+8 * 432
+4 * 432 432
+8 * 432
+3 * 432 0 432
+8 +2 432 0 432
+7 -12 432 432
+8 * 432 432
+7 * 432 0 0 0 0 0 0 0 0 432 1
jcnd=1/432 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 432
+7 * 432
+3 * 432 0 432
cfi=(2)
cfn=(2)
calls=432 0x402d74 645 
* * 5616 2592 864 2 0 1 2 0 1
+5 * 432
+3 * 432 432
+7 * 432
+3 * 432 0 432
cfi=(2)
cfn=(2)
calls=432 0x402d74 645 
* * 5616 2592 864 0 1 0 0 1
+5 * 432
+3 * 432 0 0 0 0 0 0 0 0 432 1
+2 * 432 0 0 1 0 0 1
+5 * 432
jump=432 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 432
+2 * 432 0 0 0 0 0 0 0 0 432
jcnd=432/432 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 432 0 432
+1 * 432
+3 * 432
+4 * 432 0 432
+4 * 432 0 432
+4 * 432 0 432
+5 +1 432 432
+4 * 432
+3 * 432 0 432
cfi=(2)
cfn=(2)
calls=432 0x402d74 645 
* * 5616 2592 864
+5 * 432
+3 * 432 0 432
+3 +1 432 432 0 1 0 0 1
+6 * 432 0 432
+3 * 432 432
+6 * 432 0 432
+3 +2 432 0 432
+7 * 432
jump=432 +86 * 
* * 
+2 +1 93960 93960
+3 * 93960
+3 * 93960 93960
+4 * 93960
+3 * 93960
+3 * 93960 0 93960
cfi=(2)
cfn=(144)
calls=93960 0x402d9a 770 
* * 1033560 469800 281880
+5 * 93960 93960
+4 * 93960 93960
+5 * 93960
+4 * 93960 0 93960
+5 +1 93960 93960
+3 * 93960
+3 * 93960 93960
+4 * 93960
+3 * 93960
+3 * 93960 0 93960
cfi=(2)
cfn=(146)
calls=93960 0x402dba 770 
* * 1033560 469800 281880
+5 * 93960 93960
+2 * 93960
+4 * 93960 93960
+5 * 93960
+4 * 93960 0 93960
+5 -2 93960 0 93960
+4 * 93960 93960
+3 * 93960
+3 * 93960 93960
+3 * 93960 0 0 0 0 0 0 0 0 93960 433
jcnd=93528/93960 -93 +1 
* * 
-9 * 432 432 0 1 0 0 1
+3 * 432
+3 * 432 432
+3 * 432 0 0 0 0 0 0 0 0 432
jcnd=432/432 -93 +1 
* * 
+2 +4 432 432
+3 * 432
+3 * 432 0 0 1 0 0 1
+4 * 432 432
+5 * 432
+4 * 432
+3 * 432 0 432
+5 +1 432 432
+3 * 432
+3 * 432
+4 * 432 432
+5 * 432
+4 * 432
+3 * 432 0 432
+5 +1 432 432
+5 * 432 432
+5 * 432 432
+5 * 432 0 0 1 0 0 1
+4 * 432
+3 * 432 0 432
+5 +2 432 432
+3 +1 432 0 432
+3 * 432 432
+5 * 432 432
+1 * 432 432

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1744 0 1744 1 0 0 1
+2 0 1744 0 1744
+2 0 1744 0 1744
+2 0 1744
+3 0 1744 0 1744
+2 0 1744 0 1744
+1 0 1744 0 1744
+1 0 1744
+3 0 1744
+4 0 1744 1744
+4 0 1744 0 1744
+4 0 1744
+3 0 1744
+4 0 1744
+3 0 1744
+3 0 1744
+3 0 1744 0 0 1 0 0 1 0 0 1744
+6 0 1744
+4 0 1744 0 0 0 0 0 0 0 0 1744
+6 0 1744
+4 0 1744 0 0 0 0 0 0 0 0 1744
+6 0 1744 1744
+7 0 1744 0 0 0 0 0 0 0 0 1744 4
jcnd=1620/1744 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1620
+2 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620 1620 0 1 0 0 1
+4 0 1620
+3 0 1620
+2 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 0x3877c78a40 0 
* 0 
+6 0 1620 1620
+4 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620 1620
+5 0 1620
+4 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 0x3877c7907c 0 
* 0 
+6 0 1620 1620
+5 0 1620
+4 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620
+4 0 1620 0 0 1 0 0 1 0 0 1620
+6 0 1620
+4 0 1620 1620
+7 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620 1620
+6 0 1620
+2 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620 1620
+4 0 1620 0 0 0 0 0 0 0 0 1620 5
jcnd=1616/1620 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1620 1620 0 1 0 0 1
+4 0 1620 0 0 0 0 0 0 0 0 1620 618
jcnd=670/1620 0x3877c78bf0 0 
* 0 
+6 0 950 950 0 0 1 0 0 1
+6 0 950 0 0 1 0 0 1 0 0 950 64
jcnd=61/950 0x3877c78a78 0 
* 0 
+6 0 889 889
+5 0 889 889
+5 0 889 889
+4 0 889 0 0 0 0 0 0 0 0 889
+6 0 889 889
+4 0 889 0 0 0 0 0 0 0 0 889
+6 0 889 889
+9 0 889 0 889
+4 0 889 0 889
+4 0 889 0 0 0 0 0 0 0 0 889 4
jcnd=881/889 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 889
+3 0 889
+4 0 889 889
+4 0 889 889
+4 0 889 0 0 0 0 0 0 0 0 889
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 950
+7 0 950 0 950
+4 0 950 0 950
+4 0 950 0 0 0 0 0 0 0 0 950 69
jcnd=441/950 +18 0 
* 0 
+2 0 509 0 509
+8 0 509 0 509
+8 0 509 0 509
+4 0 509
+3 0 509 0 509 1 0 0 1
+4 0 509
+4 0 509 0 509
+4 0 509 0 509
+4 0 509
+7 0 509 0 0 0 0 0 0 0 0 509
jcnd=509/509 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 670
+7 0 670 0 0 0 0 0 0 0 0 670
jcnd=670/670 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1620 0 0 1 0 0 1
+5 0 1620 1620
+4 0 1620 1620
+7 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 +16 0 
* 0 
+16 0 1620 0 1620
+5 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620
+3 0 1620
jump=1620 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1620 1620 0 1 0 0 1
+4 0 1620
+2 0 1620 0 0 0 0 0 0 0 0 1620
+6 0 1620 1620
+7 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 +15 0 
* 0 
+15 0 1620 0 1620 1 0 0 1
+4 0 1620 0 0 0 0 0 0 0 0 1620 2
+6 0 1620
+4 0 1620 1620
+1 0 1620 1620
+1 0 1620 1620
+2 0 1620 1620
+2 0 1620 1620
+2 0 1620 1620
+2 0 1620 1620
0x3877c78bf0 0 670 0 0 1 0 0 1
+3 0 670 0 670
+4 0 670
+3 0 670
+4 0 670 0 670 1 0 0 1
+4 0 670
jump=670 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1620 1620 0 1 1 0 1 1
+4 0 1620 0 0 1 0 0 1
+7 0 1620
+4 0 1620
+3 0 1620
+3 0 1620 0 0 0 0 0 0 0 0 1620
jcnd=1620/1620 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1734 0 0 1 0 0 1
+7 0 1734
+3 0 1734
+3 0 1734 1734 0 0 1 0 0 1
+4 0 1734
+4 0 1734 0 0 0 0 0 0 0 0 0 0 1734 215
jump=208 0x3877c89be8 0 
* 0 
jump=226 0x3877c89bd0 0 
* 0 
jump=216 0x3877c89bb8 0 
* 0 
jump=216 +11 0 
* 0 
jump=216 0x3877c89c48 0 
* 0 
jump=218 0x3877c89c30 0 
* 0 
jump=216 0x3877c89c18 0 
* 0 
jump=218 0x3877c89c00 0 
* 0 
+11 0 216 216
+3 0 216
+4 0 216
+4 0 216 216
+4 0 216
+4 0 216 0 216
+4 0 216
+9 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216
+4 0 216
+4 0 216 0 0 0 0 0 0 0 0 216
jcnd=8/216 0x3877c89c60 0 
* 0 
-40 0 23174 23174
+4 0 23174 0 23174 0 0 3 0 0 3
+4 0 23174 23174
+4 0 23174 0 23174 0 0 15 0 0 15
+4 0 23174 23174
+4 0 23174 0 23174 0 0 19 0 0 19
+4 0 23174 23174
+4 0 23174 0 23174
+4 0 23174
+4 0 23174
+4 0 23174 0 0 0 0 0 0 0 0 23174 1260
jcnd=1698/23174 0x3877c89c60 0 
* 0 
-32 0 218 218
+4 0 218 0 218
+4 0 218 218
+4 0 218 0 218
+4 0 218 218
+4 0 218 0 218
+4 0 218
+4 0 218
+4 0 218 0 0 0 0 0 0 0 0 218
jcnd=10/218 0x3877c89c60 0 
* 0 
-24 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216
+4 0 216
+4 0 216 0 0 0 0 0 0 0 0 216
jcnd=8/216 0x3877c89c60 0 
* 0 
-16 0 218 218 0 1 0 0 1
+4 0 218 0 218
+4 0 218 0 0 1 0 0 1
+4 0 218
+4 0 218 0 0 0 0 0 0 0 0 218 4
jcnd=10/218 0x3877c89c60 0 
* 0 
+6 0 22308
+4 0 22308 22308
+3 0 22308 0 22308 0 0 1 0 0 1
+3 0 22308 22308
+4 0 22308 0 22308 0 0 3 0 0 3
+4 0 22308 22308
+4 0 22308 0 22308 0 0 18 0 0 18
+4 0 22308 22308
+4 0 22308 0 22308
+4 0 22308
jump=22308 -80 0 
* 0 
-30 0 208 208
+3 0 208 0 208
+3 0 208 208
+4 0 208 0 208
+4 0 208 208
+4 0 208 0 208 0 0 1 0 0 1
+4 0 208 208
+4 0 208 0 208
+4 0 208
jump=208 -80 0 
* 0 
-24 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226
jump=226 -80 0 
* 0 
-16 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216
jump=216 -80 0 
* 0 
+8 0 216 216
+3 0 216
+4 0 216 0 0 1 0 0 1
+4 0 216
+4 0 216
jump=216 -39 0 
* 0 
+9 0 226
+3 0 226 0 0 0 0 0 0 0 0 226
+6 0 226 226
+3 0 226
+4 0 226
jump=226 -72 0 
* 0 
+8 0 208
+4 0 208 208
+3 0 208 0 0 0 0 0 0 0 0 208
+2 0 208
+4 0 208
jump=208 -99 0 
* 0 
+11 0 218 218 0 1 0 0 1
+3 0 218
+4 0 218
+4 0 218
+4 0 218
jump=218 0x3877c89b78 0 
* 0 
+9 0 216 216
+3 0 216
+4 0 216
+4 0 216
+4 0 216
jump=216 0x3877c89b70 0 
* 0 
+9 0 218 218
+3 0 218
+4 0 218
+4 0 218
+4 0 218
jump=218 0x3877c89b68 0 
* 0 
+9 0 216 216
+3 0 216
+4 0 216
+4 0 216
+4 0 216
jump=216 0x3877c89b60 0 
* 0 
+9 0 1734 0 1734 1 0 0 1
+3 0 1734 1734

fn=(104) alloc_perturb
0x3877c77180 0 1609 1609 0 1 0 0 1
+6 0 1609
+2 0 1609 0 0 0 0 0 0 0 0 1609 1
+2 0 1609 1609

fn=(38) _int_malloc
0x3877c79a00 0 1744 0 1744 1 0 0 1
+2 0 1744
+3 0 1744 0 1744
+2 0 1744 0 1744
+2 0 1744 0 1744 0 0 1 0 0 1
+2 0 1744
+3 0 1744 0 1744
+1 0 1744 0 1744
+1 0 1744
+4 0 1744
+4 0 1744 0 0 0 0 0 0 0 0 1744
+6 0 1744
+4 0 1744
+6 0 1744
+3 0 1744
+4 0 1744
+4 0 1744
+4 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744
+6 0 1744 1744 0 1 1 0 1 1
+7 0 1744 0 0 0 0 0 0 0 0 1744 7
jcnd=1622/1744 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 23
jcnd=16/122 0x3877c79af8 0 
* 0 
+6 0 106
+4 0 106 106 0 0 2 0 0 2
+4 0 106
+3 0 106
+4 0 106 106 0 0 1 0 0 1
+9 0 106 0 0 0 0 0 0 0 0 106 2
jcnd=106/106 +3 0 
* 0 
+3 0 106 0 106 1 0 0 1
+5 0 106
+3 0 106
+3 0 106 0 0 0 0 0 0 0 0 106
+2 0 106
jump=106 0x3877c7a2db 0 
* 0 
+46 0 106 106
+4 0 106 0 0 1 0 0 1
+3 0 106
+3 0 106
+2 0 106 0 0 0 0 0 0 0 0 106
+6 0 135 135
+6 0 135
+4 0 135
+2 0 135 0 0 0 0 0 0 0 0 135
+6 0 135
+3 0 135
+4 0 135 135
+1 0 135 135
+1 0 135 135
+2 0 135 135
+2 0 135 135
+2 0 135 135
+2 0 135 135
-14 0 1609
+4 0 1609 1609
+1 0 1609 1609
+1 0 1609 1609
+2 0 1609 1609
+2 0 1609 1609
+2 0 1609 1609
+2 0 1609 1609
+7 0 1638
+7 0 1638 0 0 1 0 0 1 0 0 1638 7
jcnd=736/1638 0x3877c79b70 0 
* 0 
+2 0 902
+3 0 902
+5 0 902
+3 0 902
+4 0 902 0 902
+4 0 902
+2 0 902
+5 0 902 902 0 0 1 0 0 1
+4 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 0x3877c79bc2 0 
* 0 
+78 0 736 0 0 1 0 0 1
+3 0 736
+4 0 736
+4 0 736 0 0 1 0 0 1 0 0 736
jcnd=736/736 0x3877c7a1a4 0 
* 0 
+30 0 736 736
+6 0 736
+5 0 736 0 0 0 0 0 0 0 0 736 1
jcnd=735/736 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 911 244 193 8 2 0 8 2 0 187 20
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1637 0 0 1 0 0 1
+3 0 1637
+3 0 1637
+3 0 1637
+4 0 1637
+3 0 1637
+4 0 1637 0 1637
+5 0 1637
+3 0 1637 0 1637
+4 0 1637 0 1637
+4 0 1637 0 1637
+5 0 1637
+3 0 1637
+3 0 1637
+3 0 1637
+3 0 1637
+4 0 1637
+4 0 1637 0 0 1 0 0 1
+4 0 1637 0 1637
+4 0 1637
+4 0 1637 0 1637
+5 0 1637 0 1637
+5 0 1637
+3 0 1637
+3 0 1637 0 1637
+5 0 1637
+5 0 1637
+3 0 1637 0 1637
+4 0 1637 0 1637
+4 0 1637
+6 0 1637 0 1637
+4 0 1637 0 1637
+5 0 1637 0 0 1 0 0 1
+3 0 1637
+3 0 1637
+3 0 1637
jump=1637 +87 0 
* 0 
+8 0 1145
+3 0 1145
+4 0 1145
+2 0 1145
+2 0 1145
+3 0 1145
+3 0 1145
+3 0 1145
+2 0 1145
+2 0 1145
+5 0 1145
+2 0 1145 1145 0 0 1 0 0 1
+4 0 1145
+3 0 1145
+4 0 1145 0 1145
+4 0 1145 0 1145
+8 0 1145
+7 0 1145 0 1145
+4 0 1145 0 1145 0 0 1 0 0 1
+4 0 1145 0 1145
+4 0 1145 0 0 0 0 0 0 0 0 1145
-38 0 499
+3 0 499
+4 0 499 0 499
+4 0 499 0 499
+8 0 499
+7 0 499 0 499
+4 0 499 0 499
+4 0 499 0 499
+4 0 499 0 0 0 0 0 0 0 0 499
+6 0 3282 3282 0 1 0 0 1
+4 0 3282
+3 0 3282 0 0 0 0 0 0 0 0 3282 149
jcnd=1590/3282 0x3877c79ef0 0 
* 0 
+6 0 1692 1692
+4 0 1692 1692
+4 0 1692
+4 0 1692 0 0 0 0 0 0 0 0 1692
+6 0 1692 1692 0 1 1 0 1 1
+7 0 1692 0 0 0 0 0 0 0 0 1692
+6 0 1692
+4 0 1692
+7 0 1692 0 0 0 0 0 0 0 0 1692 6
jcnd=783/1692 +11 0 
* 0 
+2 0 909
+3 0 909 0 0 0 0 0 0 0 0 909 62
jcnd=833/909 0x3877c79e28 0 
* 0 
+6 0 1673
+3 0 1673 0 1673
+4 0 1673 0 1673
+5 0 1673 0 0 0 0 0 0 0 0 1673 17
jcnd=29/1673 0x3877c7a090 0 
* 0 
+6 0 1644
+7 0 1644 0 0 0 0 0 0 0 0 1644 350
jcnd=1145/1644 0x3877c79c50 0 
* 0 
+6 0 499 0 0 1 0 0 1
+3 0 499
+4 0 499
+4 0 499 0 0 0 0 0 0 0 0 499
+6 0 499
+3 0 499
+4 0 499
+2 0 499
+2 0 499
+3 0 499
+3 0 499
+8 0 499
+3 0 499
+2 0 499
+2 0 499
+4 0 499 499 0 0 2 0 0 2
+4 0 499
+3 0 499 0 0 1 0 0 1 0 0 499 9
jcnd=499/499 0x3877c79e15 0 
* 0 
0x3877c79e15 0 499 0 499
+4 0 499 0 499
+4 0 499
+3 0 499
jump=499 0x3877c79c73 0 
* 0 
+8 0 833 833 0 1 0 0 1
+4 0 833
+3 0 833 0 0 0 0 0 0 0 0 833 335
jcnd=428/833 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 5
jcnd=386/405 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1590 0 0 1 0 0 1
+7 0 1590
+3 0 1590 0 0 0 0 0 0 0 0 1590 4
jcnd=728/1590 0x3877c7a0b0 0 
* 0 
+6 0 1566 1566 0 1 0 0 1
+4 0 1566
+3 0 1566
+3 0 1566
+2 0 1566
+4 0 1566
+3 0 1566
+3 0 1566
+2 0 1566
+2 0 1566
+2 0 1566
+2 0 1566 1566 0 0 1 0 0 1
+8 0 1566
+5 0 1566
+5 0 1566
+2 0 1566 0 0 0 0 0 0 0 0 1566
-2 0 778
+2 0 778 0 0 0 0 0 0 0 0 778 1
jcnd=1/778 +14 0 
* 0 
+2 0 2343
+2 0 2343 0 0 0 0 0 0 0 0 2343 32
jcnd=1396/2343 +64 0 
* 0 
+2 0 947
+8 0 947
+3 0 947
+3 0 947 0 0 0 0 0 0 0 0 947 1
jcnd=1/947 0x3877c79fc0 0 
* 0 
-6 0 1096
+3 0 1096
+3 0 1096 0 0 0 0 0 0 0 0 1096 11
jcnd=671/1096 0x3877c79fc0 0 
* 0 
+2 0 1371
+2 0 1371 1371
+8 0 1371
+2 0 1371 0 0 0 0 0 0 0 0 1371 25
jcnd=1095/1371 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
jcnd=1/276 +14 0 
* 0 
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 11635
+4 0 11635
+2 0 11635
+2 0 11635 0 0 0 0 0 0 0 0 11635 842
jcnd=10174/11635 -8 0 
* 0 
-2 0 1396 0 0 1 0 0 1
+2 0 1396 0 0 0 0 0 0 0 0 1396 23
jcnd=1248/1396 -8 0 
* 0 
+2 0 1672 1672 0 0 16 0 0 16
+4 0 1672 0 0 1 0 0 1
+3 0 1672 0 0 0 0 0 0 0 0 1672 736
jcnd=894/1672 0x3877c7a1cf 0 
* 0 
+6 0 778
+2 0 778
+4 0 778
+2 0 778
+2 0 778
+2 0 778 0 778
+8 0 778
jump=778 0x3877c79f30 0 
* 0 
+37 0 672 672 0 1 0 0 1
+5 0 672 672
+4 0 672
+4 0 672 672
+5 0 672 0 0 0 0 0 0 0 0 672
jcnd=672/672 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 728 728
+4 0 728
+4 0 728
+2 0 728
+5 0 728 728 0 1 0 0 1
+4 0 728
+3 0 728 0 0 0 0 0 0 0 0 728 4
jcnd=704/728 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 736 0 0 1 0 0 1
+3 0 736 0 736
+4 0 736
jump=736 0x3877c79b99 0 
* 0 
+36 0 894 894 0 1 1 0 1 1
+4 0 894 894
+4 0 894
+3 0 894 894
+4 0 894
+4 0 894
+3 0 894
+3 0 894 894
+4 0 894 0 0 0 0 0 0 0 0 894
+6 0 894 894
+4 0 894 0 0 0 0 0 0 0 0 894
+6 0 894 894 0 1 0 0 1
+8 0 894 0 894
+4 0 894 0 894
+4 0 894 0 0 0 0 0 0 0 0 894 11
jcnd=418/894 +38 0 
* 0 
+2 0 476 476 0 0 2 0 0 2
+4 0 476
+3 0 476 0 0 0 0 0 0 0 0 476
+2 0 476 476
+5 0 476 0 0 0 0 0 0 0 0 476
+6 0 476 476
+4 0 476 0 476
+4 0 476 476
+4 0 476 0 476
+4 0 476
+4 0 476 0 0 0 0 0 0 0 0 476
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 873 873
+4 0 873 873 0 1 0 0 1
+4 0 873 0 0 0 0 0 0 0 0 873
+6 0 873
+4 0 873
+7 0 873 0 873 0 0 7 0 0 7
+4 0 873 0 873
+4 0 873 0 873
+4 0 873 0 873
+4 0 873 0 0 0 0 0 0 0 0 873 4
jcnd=408/873 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 408
+7 0 408 0 0 0 0 0 0 0 0 408
jcnd=408/408 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 882
+7 0 882 0 882
+4 0 882
+3 0 882
+3 0 882
+4 0 882
+3 0 882
+4 0 882
+3 0 882
+3 0 882
+4 0 882 0 882
+4 0 882 0 882 0 0 1 0 0 1
+4 0 882
jump=882 +71 0 
* 0 
+40 0 106 0 0 1 0 0 1
+3 0 106
jump=106 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 918
+4 0 918 0 0 1 0 0 1
+3 0 918
+3 0 918 0 918
cfn=(104)
calls=918 0x3877c77180 0 
* 0 3672 1836 0 1 0 0 1 0 0 918
+5 0 918
+3 0 918
jump=918 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 672 0 0 1 0 0 1
+7 0 672
+2 0 672
+4 0 672
+3 0 672
+3 0 672 0 672
+5 0 672
+3 0 672
+4 0 672
+3 0 672 0 0 1 0 0 1
+4 0 672
+4 0 672
+3 0 672
+4 0 672 0 672
+4 0 672 0 672 0 0 24 0 0 24
+4 0 672
+3 0 672
+3 0 672 0 672
cfn=(104)
calls=672 0x3877c77180 0 
* 0 2688 1344 0 0 0 0 0 0 0 672 1
+5 0 672
+3 0 672
jump=672 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1744 0 1744 1 0 0 1
+5 0 1744 0 1744
+5 0 1744
+3 0 1744 0 1744
+5 0 1744
+4 0 1744 1744 0 0 1 0 0 1
+7 0 1744 1744 0 0 1 0 0 1
+3 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744 2
+6 0 1744 1744 0 0 1 0 0 1
+7 0 1744 1744 0 1 1 0 1 1
+4 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744
+2 0 1744 1744 0 0 1 0 0 1
+3 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744
jcnd=1744/1744 +97 0 
* 0 
+18 0 1744
+3 0 1744
+3 0 1744 0 1744
cfn=(38)
calls=1744 0x3877c79a00 0 
* 0 402953 49874 58793 45 32 56 45 32 56 61896 2741
+5 0 1744
+3 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744
+2 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744
+2 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744 23
+2 0 1744 1744
+7 0 1744 0 0 0 0 0 0 0 0 1744
jcnd=1744/1744 +13 0 
* 0 
+13 0 1744 0 1744
+2 0 1744 0 0 0 0 0 0 0 0 1744 14
+6 0 1744
+3 0 1744 1744
+4 0 1744 1744
+5 0 1744 1744
+5 0 1744
+4 0 1744 1744
+1 0 1744 0 0 1 0 0 1
+5 0 1744 1744 0 0 1 0 0 1
+7 0 1744 0 0 0 0 0 0 0 0 1744
jcnd=1744/1744 +14 0 
* 0 
+14 0 1744 0 1744 1 0 0 1
+3 0 1744 0 0 0 0 0 0 0 0 1744
+6 0 1744
jump=1744 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1744 0 1744 1 0 0 1
+2 0 1744
+3 0 1744
+3 0 1744 0 1744
+2 0 1744
+3 0 1744 0 1744
+1 0 1744
+3 0 1744 0 1744
+1 0 1744
+3 0 1744
+4 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744
+6 0 1744
+4 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744 7
jcnd=10/1744 0x3877c838d1 0 
* 0 
+2 0 1734
+3 0 1734
+3 0 1734
+3 0 1734
+3 0 1734
+3 0 1734 0 0 0 0 0 0 0 0 1734
jcnd=1734/1734 +41 0 
* 0 
+41 0 1734 0 0 1 0 0 1
+3 0 1734 0 0 0 0 0 0 0 0 1734
jcnd=1734/1734 0x3877c839c0 0 
* 0 
+24 0 1734
+3 0 1734
+4 0 1734
+3 0 1734
+3 0 1734
+3 0 1734
+3 0 1734
+3 0 1734 0 0 0 0 0 0 0 0 1734 864
jcnd=874/1734 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 870
+10 0 870 870 0 0 1 0 0 1
+3 0 870
+4 0 870 0 870
+3 0 870
+4 0 870
+4 0 870 0 0 0 0 0 0 0 0 870
jcnd=870/870 -18 0 
* 0 
-18 0 2666 2666
+3 0 2666
+4 0 2666 0 2666
+3 0 2666
+4 0 2666
+4 0 2666 0 0 0 0 0 0 0 0 2666 11
jcnd=1796/2666 -18 0 
* 0 
+2 0 1744
+4 0 1744
+3 0 1744 1744
+1 0 1744 1744
+1 0 1744 1744
+2 0 1744 1744 0 1 0 0 1
+2 0 1744 1744
0x3877c839c0 0 1734 0 0 1 0 0 1
+3 0 1734
+3 0 1734
+3 0 1734
+4 0 1734 0 1734 0 0 1 0 0 1
cfn=(284)
calls=1734 0x3877c89b20 0 
* 0 512442 191456 187988 6 1 60 6 1 60 24476 1264 1734 215
+5 0 1734
jump=1734 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1744 1744 0 1 1 0 1 1
+7 0 1744 1744 0 0 1 0 0 1
+3 0 1744
+3 0 1744 0 0 1 0 0 1 0 0 1744
+6 0 1744
+3 0 1744 0 0 0 0 0 0 0 0 1744
+6 0 1744 1744 0 0 1 0 0 1
+4 0 1744
+4 0 1744
+2 0 1744 0 0 0 0 0 0 0 0 1744 2
+2 0 1744
+2 0 1744
+7 0 1744 0 0 0 0 0 0 0 0 1744
jcnd=1744/1744 +14 0 
* 0 
+14 0 1744
+2 0 1744
cfn=(170)
calls=1744 0x3877c78650 0 
* 0 169991 44951 25725 19 2 0 19 2 0 41169 768

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 16917986 7005100 3991289 241 110 151 241 110 151 460955 7015 10454 215
