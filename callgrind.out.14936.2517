version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2517


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2963745265 - 2964374671
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 934 0 0 1 0 0 1
+3 0 934 0 0 0 0 0 0 0 0 934
+2 0 934
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=934 0x3877c7b8b0 0 
* 0 103237 26397 13195 21 3 0 21 3 0 25219 441
* 0 934 934 0 1 1 0 1 1 0 0 0 934

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 934 0 934 1 0 0 1
+1 0 934
+5 0 934
+3 0 934 0 934
+1 0 934
+4 0 934 0 0 1 0 0 1
+3 0 934
+4 0 934
+3 0 934 0 934 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=934 0x3877c7aa50 0 
* 0 251247 35877 35601 46 40 44 46 40 44 42433 1431
* 0 934 934 0 1 1 0 1 1 0 0 0 934
+5 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
jcnd=934/934 +96 0 
* 0 
+96 0 934 0 0 1 0 0 1
+4 0 934 934
+1 0 934 934
+1 0 934 934

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(12) /usr/include/c++/4.8/bits/stl_algobase.h
fn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x4049e2 450 460 0 460
+1 * 460
+3 * 460 0 460
+1 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +10 460 460
+4 * 460
+3 * 460 0 460
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=460 0x404bc6 288 
* * 6900 2760 2300 3 0 0 3
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(122)
calls=460 0x404bc6 288 
* * 6900 2760 2300
+5 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=460 0x404be0 -36 
* * 163688 52460 49704 4 1 7 4 1 7 7296 451 916
+5 +1 460
+4 * 460 460
+1 * 460 460
+1 * 460 460

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 502 0 502
+1 * 502
+3 * 502
+4 * 502 0 502 1 0 0 1
+4 +1 502 502
+4 * 502
+3 * 502 0 502
cfi=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
cfn=(130) std::_Iter_base<float*, false>::_S_base(float*)
calls=502 -33 -66 
* * 3012 1506 1004 0 0 1 0 0 1
+5 * 502 502
+1 * 502 502

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 920 0 920
+1 * 920
+3 * 920
+4 * 920 0 920
+4 +1 920 920
+4 * 920
+3 * 920 0 920
cfi=(13)
cfn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=920 0x404e98 -58 
* * 14720 5520 4600 2 0 0 2
+5 * 920 920
+1 * 920 920

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +8 460 0 460
+4 +3 460 460
+4 * 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=460 0x404eb5 -22 
* * 114008 35900 32684 1 1 7 1 1 7 7296 451 916
+5 +1 460 460
+1 * 460 460

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276) int* std::copy<int*, int*>(int*, int*, int*)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64) std::_Iter_base<int*, false>::_S_base(int*)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 920 0 920 1 0 0 1
+1 * 920
+3 * 920
+4 * 920 0 920
+4 +1 920 920
+4 * 920
+3 * 920 0 920
cfi=(13)
cfn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=920 0x404d36 -77 
* * 5520 2760 1840 2 0 0 2
+5 * 920 920
+1 * 920 920

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 920 0 920 1 0 0 1
+1 * 920
+3 * 920
+4 * 920 0 920 1 0 0 1
+4 +1 920 920
+4 * 920
+3 * 920 0 920
cfi=(13)
cfn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=920 0x404d8f -77 
* * 5520 2760 1840 1 0 0 1
+5 * 920 920
+1 * 920 920

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474 1 0 0 1
+4 * 474 0 474
+4 * 474 0 474
+4 +2 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474
+4 * 474 0 474
+4 +1 474 474
+5 * 474 0 0 0 0 0 0 0 0 474
jcnd=7/474 +33 +2 
* * 
+2 +1 467 467
+4 * 467
+8 * 467 467
+4 * 467 467
+4 * 467
+3 * 467 0 0 1 0 0 1
+3 * 467 0 467 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=467 0x3877c83840 0 
* * 101860 31021 30092 11 2 5 11 2 5 6898 469 462 114
* * 467 467 0 1 1 0 1 1 0 0 0 467
+5 +1 474 474
+4 * 474
+8 * 474 474
+4 * 474
+3 +1 474 474
+1 * 474 474

fn=(140)
0x404eb5 368 474 0 474
+1 * 474
+3 * 474
+4 * 474 0 474 1 0 0 1
+4 * 474 0 474
+4 * 474 0 474 0 0 1 0 0 1
+4 +2 474 474
+4 * 474 474
+4 * 474
+3 * 474
+3 * 474
+4 * 474 0 474
+4 +1 474 474
+5 * 474 0 0 0 0 0 0 0 0 474
jcnd=7/474 +33 +2 
* * 
+2 +1 467 467
+4 * 467
+8 * 467 467
+4 * 467 467
+4 * 467
+3 * 467
+3 * 467 0 467
cob=(2)
cfi=(9)
cfn=(78)
calls=467 0x3877c83840 0 
* * 101860 31021 30092 0 1 8 0 1 8 6898 455 462
* * 467 467 0 0 0 0 0 0 0 0 0 467
+5 +1 474 474
+4 * 474
+8 * 474 474
+4 * 474
+3 +1 474 474
+1 * 474 474

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460 1 0 0 1
+4 * 460 0 460
+4 * 460 0 460
+4 +8 460 0 460
+4 +3 460 460
+4 * 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(74)
calls=460 0x404f37 -22 
* * 114008 35900 32684 14 3 3 14 3 3 7296 466 916 114
+5 +1 460 460
+1 * 460 460

fn=(126)
0x404be0 424 460 0 460
+1 * 460
+3 * 460 0 460
+2 * 460 0 460
+1 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +4 460 460
+4 * 460
+3 * 460 0 460
cfn=(128)
calls=460 0x404878 277 
* * 6900 2760 2300 1 0 0 1
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(132)
calls=460 0x404d44 277 
* * 11500 4140 3680 2 0 0 2
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(132)
calls=460 0x404d44 277 
* * 11500 4140 3680
+5 * 460
+3 * 460
+3 * 460
+3 * 460 0 460
cfn=(138)
calls=460 0x404d5e -49 
* * 120908 38200 35444 1 1 7 1 1 7 7296 451 916
+5 +1 460
+4 * 460 460
+1 * 460 460
+2 * 460 460
+1 * 460 460

fn=(236) float* std::copy<float*, float*>(float*, float*, float*)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404a36 450 460 0 460
+1 * 460
+3 * 460 0 460
+1 * 460
+4 * 460 0 460 1 0 0 1
+4 * 460 0 460
+4 * 460 0 460
+4 +10 460 460
+4 * 460
+3 * 460 0 460
cfn=(56)
calls=460 0x404c38 288 
* * 6900 2760 2300 3 0 0 3
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(56)
calls=460 0x404c38 288 
* * 6900 2760 2300
+5 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=460 0x404c52 -36 
* * 163688 52460 49704 20 3 4 20 3 4 7296 466 916 114
+5 +1 460
+4 * 460 460
+1 * 460 460
+1 * 460 460

fn=(60)
0x404c52 424 460 0 460
+1 * 460
+3 * 460 0 460
+2 * 460 0 460
+1 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +4 460 460
+4 * 460
+3 * 460 0 460
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=460 0x40492d 277 
* * 6900 2760 2300 2 0 0 2
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=460 0x404d9d 277 
* * 11500 4140 3680 2 0 1 2 0 1
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(66)
calls=460 0x404d9d 277 
* * 11500 4140 3680
+5 * 460
+3 * 460
+3 * 460
+3 * 460 0 460
cfn=(72)
calls=460 0x404db7 -49 
* * 120908 38200 35444 15 3 3 15 3 3 7296 466 916 114
+5 +1 460
+4 * 460 460
+1 * 460 460
+2 * 460 460
+1 * 460 460

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 502 0 502 1 0 0 1
+1 * 502
+3 * 502
+4 * 502 0 502
+4 +1 502 502
+4 * 502
+3 * 502 0 502 1 0 0 1
cfi=(13)
cfn=(64)
calls=502 -33 -66 
* * 3012 1506 1004
+5 * 502 502
+1 * 502 502

fn=(66)
0x404d9d 277 920 0 920
+1 * 920
+3 * 920
+4 * 920 0 920
+4 +1 920 920
+4 * 920
+3 * 920 0 920
cfi=(13)
cfn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=920 0x404f1a -58 
* * 14720 5520 4600 2 0 1 2 0 1
+5 * 920 920
+1 * 920 920

fn=(240)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fl=(10) /usr/include/c++/4.8/bits/stl_iterator.h
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
0x40500c 790 920 0 920 1 0 0 1
+1 * 920
+3 * 920 0 920
+4 +1 920 920
+4 * 920 920
+1 * 920 920

fn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
0x404380 726 920 0 920 1 0 0 1
+1 * 920
+3 * 920 0 920
+4 * 920 0 920
+4 * 920 920
+4 * 920 920
+3 * 920 920
+4 * 920 0 920
+3 * 920 920
+1 * 920 920

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
0x404ffe 790 920 0 920 1 0 0 1
+1 * 920
+3 * 920 0 920
+4 +1 920 920
+4 * 920 920
+1 * 920 920

fn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
0x404468 726 920 0 920
+1 * 920
+3 * 920 0 920
+4 * 920 0 920
+4 * 920 920
+4 * 920 920
+3 * 920 920
+4 * 920 0 920 1 0 0 1
+3 * 920 920
+1 * 920 920

fn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14) /usr/include/c++/4.8/bits/stl_construct.h
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 467 0 467 1 0 0 1
+1 * 467
+3 * 467 0 467
+4 * 467 0 467
+4 * 467 467
+1 * 467 467

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 467 0 467 1 0 0 1
+1 * 467
+3 * 467 0 467
+4 * 467 0 467 1 0 0 1
+4 * 467 467
+1 * 467 467

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 467 0 467 1 0 0 1
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 +4 467 467
+4 * 467 467
+4 * 467
+3 * 467
+3 * 467 0 467
cfn=(184)
calls=467 0x40454c -14 
* * 2802 934 1401 1 0 0 1
+5 +2 467 467
+1 * 467 467

fn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
0x40326c 148 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +3 467 467 0 1 0 0 1
+4 * 467 467
+4 * 467
+3 * 467
+3 * 467 0 467
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=467 0x403d1a -29 
* * 8406 2802 3269 3 0 0 3
+5 +1 467 467
+1 * 467 467

fn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
0x40334a 148 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +3 467 467
+4 * 467 467
+4 * 467
+3 * 467
+3 * 467 0 467
cfn=(182)
calls=467 0x403dcc -29 
* * 8406 2802 3269 2 0 0 2
+5 +1 467 467
+1 * 467 467

fn=(152)
0x403d1a 122 467 0 467 1 0 0 1
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 +4 467 467
+4 * 467 467
+4 * 467
+3 * 467
+3 * 467 0 467
cfn=(154)
calls=467 0x4044f8 -14 
* * 2802 934 1401 2 0 0 2
+5 +2 467 467
+1 * 467 467

fl=(15) /usr/include/c++/4.8/bits/vector.tcc
fn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258) std::vector<int, std::allocator<int> >::begin()
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=7 0x404236 167 
* * 2124 389 387 9 6 6 9 6 6 300 36 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
cfn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 13 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216) std::vector<float, std::allocator<float> >::begin()
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=7 0x403fbe 167 
* * 2969 630 580 13 9 5 13 9 5 474 52 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 230 0 230 1 0 0 1
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 +1 230 230
+4 * 230
+3 * 230 0 230
cfi=(2)
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=230 0x402d74 645 
* * 2990 1380 460
+5 * 230
+3 * 230 0 230
+3 +1 230 230
+6 * 230 0 230
+3 * 230 230
+6 * 230 0 230
+3 +1 230 230
+6 * 230 0 230 1 0 0 1
+3 * 230 230
+6 * 230 0 230
+3 +2 230 0 230
+7 * 230
jump=230 +86 * 
* * 
+2 +1 26795 26795
+3 * 26795
+3 * 26795 26795
+4 * 26795
+3 * 26795
+3 * 26795 0 26795
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=26795 0x402d9a 770 
* * 294745 133975 80385
+5 * 26795 26795
+4 * 26795 26795
+5 * 26795
+4 * 26795 0 26795
+5 +1 26795 26795
+3 * 26795
+3 * 26795 26795
+4 * 26795
+3 * 26795
+3 * 26795 0 26795
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=26795 0x402dba 770 
* * 294745 133975 80385 1 0 0 1
+5 * 26795 26795
+2 * 26795
+4 * 26795 26795
+5 * 26795
+4 * 26795 0 26795
+5 -2 26795 0 26795
+4 * 26795 26795
+3 * 26795
+3 * 26795 26795
+3 * 26795 0 0 0 0 0 0 0 0 26795 231
jcnd=26565/26795 -93 +1 
* * 
-9 * 230 230 0 1 0 0 1
+3 * 230
+3 * 230 230
+3 * 230 0 0 0 0 0 0 0 0 230
jcnd=230/230 -93 +1 
* * 
+2 +4 230 230
+3 * 230
+3 * 230
+4 * 230 230 0 1 0 0 1
+5 * 230
+4 * 230
+3 * 230 0 230
+5 +1 230 230
+3 * 230
+3 * 230
+4 * 230 230
+5 * 230
+4 * 230
+3 * 230 0 230
+5 +1 230 0 230
+7 * 230
jump=230 0x4016ee * 
* * 
+2 +1 26795 26795
+3 * 26795
+3 * 26795 26795
+4 * 26795
+3 * 26795 0 0 1 0 0 1
+3 * 26795 0 26795
cfi=(2)
cfn=(146)
calls=26795 0x402dba 770 
* * 294745 133975 80385
+5 * 26795 26795
+2 * 26795
+4 * 26795 26795
+5 * 26795 0 26795
+5 +1 26795 26795
+3 * 26795
+3 * 26795 26795
+4 * 26795
+3 * 26795
+3 * 26795 0 26795
cfi=(2)
cfn=(144)
calls=26795 0x402d9a 770 
* * 294745 133975 80385
+5 * 26795 26795
+4 * 26795 26795
+5 * 26795 0 26795
+5 +1 26795 26795
+5 * 26795 26795
+5 * 26795 26795
+5 * 26795
+4 * 26795 0 26795
+5 +1 26795 26795
+5 * 26795 26795
+5 * 26795 26795
+5 * 26795
+4 * 26795 0 26795
+5 -4 26795 0 26795
+4 * 26795 26795
+3 * 26795
+3 * 26795 26795
+3 * 26795 0 0 0 0 0 0 0 0 26795 231
jcnd=26565/26795 0x401672 +1 
* * 
-9 * 230 230 0 1 0 0 1
+3 * 230
+3 * 230 230
+3 * 230 0 0 0 0 0 0 0 0 230
jcnd=230/230 0x401672 +1 
* * 
+6 +6 230 230 0 1 0 0 1
+5 * 230 230
+5 * 230 0 230
+5 +2 230 230
+3 +1 230 0 230
+3 * 230 230
+5 * 230 230
+1 * 230 230

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 230
+7 * 230
+7 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=230 0x4030b2 310 
* * 227677 65292 60878 63 23 16 63 23 16 14628 704 918 114
+5 * 230
+7 * 230
+7 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=230 0x402ff4 310 
* * 228933 65015 59733 40 9 31 40 9 31 14982 715 918
+5 * 230 0 0 1 0 0 1
+7 * 230
+7 * 230
+3 * 230
+3 * 230 0 230
cfn=(142)
calls=230 0x401585 -52 
* * 2801630 1238320 646990 8 0 0 8 0 0 54050 462
+5 * 230 0 230
+8 * 230 230
+6 * 230 0 230
+6 * 230
+7 * 230
+3 * 230 0 230
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=230 0x402df4 414 
* * 56950 17848 12693 33 5 0 33 5 0 6214 203 460
+5 * 230
+7 * 230
+3 * 230 0 230 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=230 0x402e74 414 
* * 60199 19096 13591 7 0 0 7 0 0 7156 16 460
+5 +2 230
+7 * 230
+7 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(4)
calls=230 0x4030b2 310 
* * 227338 65268 60774 2 0 1 2 0 1 14601 426 918
+5 * 230
+7 * 230
+7 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(80)
calls=230 0x402ff4 310 
* * 228034 64961 59587 0 0 2 0 0 2 14842 415 918
+5 * 230 230
+6 * 230 0 0 1 0 0 1
+7 * 230
+7 * 230 0 230
+6 * 230 230
+8 * 230
+3 * 230
+3 * 230 0 230
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=230 0x401719 -33 
* * 1299730 540960 298195 4 0 0 4 0 0 27025 231
+5 * 230 0 230
+8 * 230 230
+6 * 230 0 230
+6 * 230
+7 * 230 0 0 1 0 0 1
+3 * 230 0 230
cfi=(2)
cfn=(148)
calls=230 0x402df4 414 
* * 56950 17848 12693 0 0 0 0 0 0 6214 199 460
+5 * 230
+7 * 230
+3 * 230 0 230
cfi=(2)
cfn=(178)
calls=230 0x402e74 414 
* * 60199 19096 13591 0 0 0 0 0 0 7156 13 460
+5 +2 230 230
+7 * 230
+3 * 230 0 230
cfi=(2)
cfn=(2)
calls=230 0x402d74 645 
* * 2990 1380 460
+5 * 230 230
+6 * 230
+3 * 230
+3 * 230
+3 * 230 230
+7 * 230
+3 * 230 0 0 1 0 0 1
+3 * 230 0 230
cfi=(2)
cfn=(144)
calls=230 0x402d9a 770 
* * 2530 1150 690
+5 * 230
+3 * 230
+7 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=230 0x402eda 901 
* * 25533 9281 7226 39 25 11 39 25 11 1214 68 41
+5 +1 230 230
+7 * 230
+3 * 230 0 230
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=230 0x402f54 645 
* * 2990 1380 460 0 1 0 0 1
+5 * 230 230
+6 * 230
+3 * 230
+3 * 230
+3 * 230 230
+7 * 230 0 0 1 0 0 1
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(146)
calls=230 0x402dba 770 
* * 2530 1150 690
+5 * 230
+3 * 230
+7 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=230 0x402f7a 901 
* * 24721 9057 7036 28 20 16 28 20 16 1049 52 41
+5 +1 230 230
+7 * 230
+3 * 230 0 230
cfi=(2)
cfn=(10)
calls=230 0x402f54 645 
* * 2990 1380 460
+5 * 230 230
+6 * 230
+3 * 230
+3 * 230
+3 * 230 230 0 1 0 0 1
+7 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(146)
calls=230 0x402dba 770 
* * 2530 1150 690
+5 * 230 230
+2 * 230
+4 * 230 230
+8 * 230 230
+8 * 230 0 230
+8 +1 230 230
+7 * 230
+3 * 230 0 230
cfi=(2)
cfn=(2)
calls=230 0x402d74 645 
* * 2990 1380 460
+5 * 230 230 0 1 0 0 1
+6 * 230
+3 * 230
+3 * 230
+3 * 230 230
+7 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(144)
calls=230 0x402d9a 770 
* * 2530 1150 690
+5 * 230 230
+4 * 230 230
+8 * 230
+4 * 230 230
+8 * 230
+3 * 230 0 230
+8 +2 230 0 230
+7 -12 230 230
+8 * 230 230
+7 * 230 0 0 0 0 0 0 0 0 230 2
jcnd=1/230 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 230
+7 * 230
+3 * 230 0 230
cfi=(2)
cfn=(2)
calls=230 0x402d74 645 
* * 2990 1380 460 2 0 1 2 0 1
+5 * 230
+3 * 230 230
+7 * 230
+3 * 230 0 230
cfi=(2)
cfn=(2)
calls=230 0x402d74 645 
* * 2990 1380 460 0 1 0 0 1
+5 * 230
+3 * 230 0 0 0 0 0 0 0 0 230
+2 * 230 0 0 1 0 0 1
+5 * 230
jump=230 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 230
+2 * 230 0 0 0 0 0 0 0 0 230
jcnd=230/230 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+5 +1 230 230
+4 * 230
+3 * 230 0 230
cfi=(2)
cfn=(2)
calls=230 0x402d74 645 
* * 2990 1380 460
+5 * 230
+3 * 230 0 230
+3 +1 230 230 0 1 0 0 1
+6 * 230 0 230
+3 * 230 230
+6 * 230 0 230
+3 +2 230 0 230
+7 * 230
jump=230 +86 * 
* * 
+2 +1 26795 26795
+3 * 26795
+3 * 26795 26795
+4 * 26795
+3 * 26795
+3 * 26795 0 26795
cfi=(2)
cfn=(144)
calls=26795 0x402d9a 770 
* * 294745 133975 80385
+5 * 26795 26795
+4 * 26795 26795
+5 * 26795
+4 * 26795 0 26795
+5 +1 26795 26795
+3 * 26795
+3 * 26795 26795
+4 * 26795
+3 * 26795
+3 * 26795 0 26795
cfi=(2)
cfn=(146)
calls=26795 0x402dba 770 
* * 294745 133975 80385
+5 * 26795 26795
+2 * 26795
+4 * 26795 26795
+5 * 26795
+4 * 26795 0 26795
+5 -2 26795 0 26795
+4 * 26795 26795
+3 * 26795
+3 * 26795 26795
+3 * 26795 0 0 0 0 0 0 0 0 26795 231
jcnd=26565/26795 -93 +1 
* * 
-9 * 230 230 0 1 0 0 1
+3 * 230
+3 * 230 230
+3 * 230 0 0 0 0 0 0 0 0 230
jcnd=230/230 -93 +1 
* * 
+2 +4 230 230
+3 * 230
+3 * 230 0 0 1 0 0 1
+4 * 230 230
+5 * 230
+4 * 230
+3 * 230 0 230
+5 +1 230 230
+3 * 230
+3 * 230
+4 * 230 230
+5 * 230
+4 * 230
+3 * 230 0 230
+5 +1 230 230
+5 * 230 230
+5 * 230 230
+5 * 230 0 0 1 0 0 1
+4 * 230
+3 * 230 0 230
+5 +2 230 230
+3 +1 230 0 230
+3 * 230 230
+5 * 230 230
+1 * 230 230

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 460 0 460 1 0 0 1
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460 1 0 0 1
+4 +1 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=460 0x4049d4 -35 
* * 2760 920 1380 1 0 0 1
+5 * 460 460
+1 * 460 460

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 460 0 460 1 0 0 1
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 460
+4 * 460
+3 * 460 0 460
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=460 0x404520 -35 
* * 2300 920 920
+5 * 460 460
+1 * 460 460

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 460 0 460 1 0 0 1
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=460 0x404a28 -35 
* * 2760 920 1380 1 0 1 1 0 1
+5 * 460 460
+1 * 460 460

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 460
+4 * 460
+3 * 460 0 460
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=460 0x4044cc -35 
* * 2300 920 920
+5 * 460 460
+1 * 460 460

fl=(3)
fn=(222)
0x403373 215 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +1 230 230
+4 * 230 230
+4 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=230 0x403df2 -87 
* * 5520 1840 2070 0 16 3 0 16 3 230
+5 * 230 230
+1 * 230 230

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 460 0 460 1 0 0 1
+1 * 460
+3 * 460 0 460
+4 * 460 460
+4 * 460 460
+1 * 460 460

fn=(264)
0x4036b1 215 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +1 230 230
+4 * 230 230
+4 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=230 0x40406a -87 
* * 5520 1840 2070 0 14 7 0 14 7 230
+5 * 230 230
+1 * 230 230

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 460 0 460
+1 * 460
+3 * 460 0 460
+4 * 460 460
+4 * 460 460
+1 * 460 460

fl=(13)
fn=(64)
0x40491f 212 530 0 530
+1 * 530
+3 * 530 0 530
+4 +1 530 530
+4 * 530 530
+1 * 530 530

fn=(124)
0x404d36 212 920 0 920 1 0 0 1
+1 * 920
+3 * 920 0 920
+4 +1 920 920 0 1 0 0 1
+4 * 920 920
+1 * 920 920

fn=(130)
0x40486a 212 530 0 530
+1 * 530
+3 * 530 0 530 0 0 1 0 0 1
+4 +1 530 530
+4 * 530 530
+1 * 530 530

fn=(134)
0x404e98 220 920 0 920 1 0 0 1
+1 * 920
+3 * 920
+4 * 920 0 920
+4 +1 920
+4 * 920
+3 * 920 0 920
cfi=(10)
cfn=(136)
calls=920 0x404ffe 790 
* * 5520 2760 1840 1 0 0 1
+5 * 920 920
+3 * 920 920
+1 * 920 920

fn=(58)
0x404d8f 212 920 0 920 1 0 0 1
+1 * 920
+3 * 920 0 920
+4 +1 920 920
+4 * 920 920
+1 * 920 920

fn=(68)
0x404f1a 220 920 0 920 1 0 0 1
+1 * 920
+3 * 920
+4 * 920 0 920
+4 +1 920
+4 * 920
+3 * 920 0 920 0 0 1 0 0 1
cfi=(10)
cfn=(70)
calls=920 0x40500c 790 
* * 5520 2760 1840 1 0 0 1
+5 * 920 920
+3 * 920 920
+1 * 920 920

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 460 0 460
+1 * 460
+3 * 460 0 460
+4 * 460 0 460
+4 * 460 460
+4 * 460 460
+1 * 460 460

fl=(5)
fn=(102)
0x4048de 113 481 0 481 1 0 0 1
+1 * 481
+3 * 481 0 481
+4 +1 481
+10 * 481 481
+1 * 481 481

fn=(266)
0x40406a 129 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +1 230 230
+4 * 230
+3 * 230
+5 * 230 0 230
cfi=(16)
cfn=(226)
calls=230 0x402d61 -20 
* * 1610 690 690
+5 * 230
+3 * 230 0 0 0 0 0 0 0 0 230
+2 * 230 230
+4 * 230 230 0 0 14 0 0 14
+2 * 230 0 230 0 0 7 0 0 7
+2 * 230 230
+1 * 230 230

fn=(28)
0x404992 113 481 0 481 1 0 0 1
+1 * 481
+3 * 481 0 481
+4 +1 481
+10 * 481 481
+1 * 481 481

fn=(176)
0x4044cc 86 460 0 460
+1 * 460
+3 * 460 0 460
+4 * 460 460
+1 * 460 460

fn=(224)
0x403df2 129 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 * 230 0 230
+4 +1 230 230
+4 * 230
+3 * 230
+5 * 230 0 230
cfi=(16)
cfn=(226)
calls=230 0x402d61 -20 
* * 1610 690 690
+5 * 230
+3 * 230 0 0 0 0 0 0 0 0 230
+2 * 230 230
+4 * 230 230 0 0 16 0 0 16
+2 * 230 0 230 0 0 3 0 0 3
+2 * 230 230
+1 * 230 230

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +1 467 467
+4 * 467
+3 * 467 0 467
cob=(5)
cfi=(8)
cfn=(164)
calls=467 0x387e4bb2f0 0 
* * 50221 12409 5698 23 4 0 23 4 0 12130 406 467
* * 467 467 0 1 1 0 1 1 0 0 0 467
+5 * 467 467
+1 * 467 467

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 467 0 467
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +1 467 467
+4 * 467
+3 * 467 0 467
cob=(5)
cfi=(8)
cfn=(164)
calls=467 0x387e4bb2f0 0 
* * 56752 14922 7497 0 0 0 0 0 0 14023 35 467
* * 467 467 0 0 0 0 0 0 0 0 0 467
+5 * 467 467
+1 * 467 467

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 467 0 467 1 0 0 1
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +2 467 467
+4 * 467
+3 * 467 0 467
cfn=(102)
calls=467 0x4048de +12 
* * 2802 934 934 1 0 0 1
+5 * 467 467
+4 * 467 0 0 1 0 0 1
+3 * 467
+2 * 467 0 0 0 0 0 0 0 0 467
jcnd=467/467 +7 +3 
* * 
+7 +3 467 467
+4 * 467
+4 * 467
+3 * 467 0 467
cob=(5)
cfi=(8)
cfn=(32)
calls=467 0x387e4bd0b0 0 
* * 134494 19635 18132 26 17 31 26 17 31 22068 731 467
* * 467 467 0 0 0 0 0 0 0 0 0 467
+5 +1 467 467
+1 * 467 467

fn=(18)
0x404a28 81 460 0 460 1 0 0 1
+1 * 460
+3 * 460 0 460 0 0 1 0 0 1
+4 * 460 0 460
+4 * 460 460
+1 * 460 460

fn=(92)
0x4049d4 81 460 0 460 1 0 0 1
+1 * 460
+3 * 460 0 460
+4 * 460 0 460
+4 * 460 460
+1 * 460 460

fn=(196)
0x404520 86 460 0 460
+1 * 460
+3 * 460 0 460
+4 * 460 460
+1 * 460 460

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 467 0 467 1 0 0 1
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467 1 0 0 1
+4 +2 467 467
+4 * 467
+3 * 467 0 467
cfn=(28)
calls=467 0x404992 +12 
* * 2802 934 934 1 0 0 1
+5 * 467 467
+4 * 467
+3 * 467
+2 * 467 0 0 0 0 0 0 0 0 467
jcnd=467/467 +7 +3 
* * 
+7 +3 467 467
+4 * 467
+4 * 467
+3 * 467 0 467
cob=(5)
cfi=(8)
cfn=(32)
calls=467 0x387e4bd0b0 0 
* * 131697 19978 20271 24 24 14 24 24 14 21299 700 467
* * 467 467 0 1 1 0 1 1 0 0 0 467
+5 +1 467 467
+1 * 467 467

fl=(11)
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +2 460 460
+4 * 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=460 0x404484 107 
* * 200488 65340 62584 25 3 4 25 3 4 7296 466 916 114
+5 * 460 460
+1 * 460 460

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +2 460 460 0 1 0 0 1
+4 * 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfi=(12)
cfn=(54)
calls=460 0x404a36 450 
* * 187608 60740 57984 24 3 4 24 3 4 7296 466 916 114
+5 * 460 460
+1 * 460 460

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +2 460 460
+4 * 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=460 0x40439c 107 
* * 200488 65340 62584 7 1 7 7 1 7 7296 451 916
+5 * 460 460
+1 * 460 460

fn=(116)
0x40439c 107 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +10 460 460
+4 * 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=460 0x4047d7 -26 
* * 194048 63040 60284 7 1 7 7 1 7 7296 451 916
+5 +1 460 460
+1 * 460 460

fn=(118)
0x4047d7 91 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +2 460 460
+4 * 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfi=(12)
cfn=(120)
calls=460 0x4049e2 450 
* * 187608 60740 57984 7 1 7 7 1 7 7296 451 916
+5 * 460 460
+1 * 460 460

fn=(268)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +10 460 460
+4 * 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(52)
calls=460 0x404829 -26 
* * 194048 63040 60284 25 3 4 25 3 4 7296 466 916 114
+5 +1 460 460
+1 * 460 460

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fl=(2)
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 460 0 460
+1 * 460
+3 * 460 0 460
+1 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=460 0x4043ca -45 
* * 16560 5980 6440 4 0 4 4 0 4
+5 +1 460 460 0 1 0 0 1
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=460 0x404412 +43 
* * 160687 31180 28708 22 19 8 22 19 8 21933 664 920
+5 * 460
jump=460 +28 * 
* * 
+28 * 460
+4 * 460 460
+1 * 460 460
+1 * 460 460

fn=(14)
0x4043ca 90 460 0 460 1 0 0 1
+1 * 460
+3 * 460
+4 * 460 0 460 0 0 1 0 0 1
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfi=(4)
cfn=(16)
calls=460 0x404804 +24 
* * 8280 2760 3220 2 0 1 2 0 1
+5 * 460 460
+4 * 460 0 460 0 0 2 0 0 2
+7 * 460 460
+4 * 460 0 460 1 0 0 1
+8 * 460 460
+4 * 460 0 460
+8 +1 460 460
+1 * 460 460

fn=(80)
0x402ff4 310 460 0 460 1 0 0 1
+1 * 460
+3 * 460 0 460
+2 * 460 0 460
+2 * 460 0 460
+1 * 460 0 0 1 0 0 1
+4 * 460 0 460
+4 * 460 0 460
+4 +2 460 460
+4 * 460
+3 * 460 0 460
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=460 0x4039fc 117 
* * 2760 1380 920 2 0 0 2
+5 * 460
+3 * 460 0 460
cfi=(3)
cfn=(84)
calls=460 0x4039ed -88 
* * 2760 1380 920
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(2)
calls=460 0x402d74 645 
* * 5980 2760 920
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460
+3 * 460
+3 * 460 0 460 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=460 0x403a0a 134 
* * 189319 39796 36036 25 8 26 25 8 26 22528 679 920
+5 +4 460 460
+4 * 460
+3 * 460 0 460
cfn=(106)
calls=460 0x40325e 113 
* * 2760 1380 920 1 0 0 1
+5 * 460
+3 * 460 460
+4 * 460 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=460 0x403a98 565 
* * 11500 4600 3680 2 0 0 2
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=460 0x403a68 547 
* * 11500 4600 3680
+5 * 460
+3 * 460
+3 * 460
+3 * 460
+3 * 460 0 460
cfi=(11)
cfn=(114)
calls=460 0x403ac9 -60 
* * 207388 67640 65344 7 1 7 7 1 7 7296 451 916
+5 -3 460 460
+4 * 460 0 460
+4 * 460
jump=460 +28 +4 
* * 
+28 +4 460
+4 * 460 460
+1 * 460 460
+2 * 460 460
+2 * 460 460
+1 * 460 460

fn=(188)
0x403d98 171 467 0 467 1 0 0 1
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +2 467 467
+5 * 467 0 0 0 0 0 0 0 0 467 7
+2 +1 467 467
+4 * 467 467
+4 * 467 467
+4 * 467
+3 * 467
+3 * 467 0 467
cfi=(5)
cfn=(190)
calls=467 0x40452a -65 
* * 62356 16790 9832 0 0 0 0 0 0 14023 35 934
+5 +1 467 467
+1 * 467 467

fn=(22)
0x404236 167 467 0 467 1 0 0 1
+1 * 467
+3 * 467
+4 * 467 0 467 1 0 0 1
+4 * 467 0 467
+4 0 467 467
+5 0 467 0 0 0 0 0 0 0 0 467
+2 0 467 467
+4 0 467 467
+4 0 467
+5 0 467
+3 0 467
+3 0 467 0 467
fi=(6) ???
cfi=(5)
cfn=(26)
calls=467 0x404730 99 
* 0 143839 23714 24007 28 25 14 28 25 14 21766 700 934
+5 0 467
fi=(6)
jump=467 +7 0 
* 0 
+7 0 467 467
+1 0 467 467

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 460 0 460 1 0 0 1
+1 * 460
+3 * 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+4 * 460 0 460
+4 * 460
+4 * 460 0 0 1 0 0 1
+4 * 460
+3 * 460
+3 * 460 0 460
cfi=(10)
cfn=(44)
calls=460 0x404468 726 
* * 4600 2300 1840 1 0 0 1
+5 * 460 460
+4 * 460 460
+1 * 460 460

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+3 * 460 0 460
+4 * 460
+4 * 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfi=(10)
cfn=(44)
calls=460 0x404468 726 
* * 4600 2300 1840
+5 * 460 460
+4 * 460 460
+1 * 460 460

fn=(86)
0x403a0a 134 460 0 460
+1 * 460
+3 * 460 0 460
+1 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=460 0x4042e2 -45 
* * 16560 5980 6440 5 0 0 5
+5 +1 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=460 0x40432a +43 
* * 162639 30596 26376 19 8 26 19 8 26 22528 679 920
+5 * 460
jump=460 +28 * 
* * 
+28 * 460
+4 * 460 460
+1 * 460 460
+1 * 460 460

fn=(88)
0x4042e2 90 460 0 460 1 0 0 1
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460 1 0 0 1
cfi=(4)
cfn=(90)
calls=460 0x4047b2 +24 
* * 8280 2760 3220 3 0 0 3
+5 * 460 460
+4 * 460 0 460
+7 * 460 460
+4 * 460 0 460
+8 * 460 460
+4 * 460 0 460
+8 +1 460 460
+1 * 460 460

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 460 0 460 1 0 0 1
+1 * 460
+3 * 460 0 460
+1 * 460
+4 * 460 0 460
+4 +2 460 460
+4 * 460 460 0 1 0 0 1
+4 * 460
+3 * 460 460
+4 * 460 460
+3 * 460
+3 * 460
+3 * 460
+4 * 460
+3 * 460 460
+4 * 460 460
+3 -1 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(158)
calls=460 0x403ce6 +11 
* * 62380 16836 10206 24 5 0 24 5 0 12428 402 920
+5 +1 460 460
+4 * 460
+3 * 460 0 460
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=460 0x4031b8 -82 
* * 10580 3680 3680 1 0 0 1
+5 * 460
jump=460 +28 * 
* * 
+28 * 460
+4 * 460 460
+1 * 460 460
+1 * 460 460

fn=(172)
0x4031b8 79 460 0 460 1 0 0 1
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 460
+4 * 460
+3 * 460 0 460
cfi=(4)
cfn=(174)
calls=460 0x403ccc +42 
* * 6440 2300 2300
+5 * 460 460
+1 * 460 460

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208)
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10)
0x402f54 645 948 0 948 1 0 0 1
+1 * 948
+3 * 948 0 948
+4 +1 948 948
+4 * 948 948 0 0 2 0 0 2
+4 * 948
+3 * 948 948
+4 * 948 948
+3 * 948
+3 * 948
+3 * 948
+4 * 948 948
+1 * 948 948

fn=(106)
0x40325e 113 941 0 941 1 0 0 1
+1 * 941
+3 * 941 0 941
+4 +1 941 941
+4 * 941 941
+1 * 941 941

fn=(216)
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252)
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 474 0 474 1 0 0 1
+1 * 474
+3 * 474 0 474 0 0 1 0 0 1
+4 +1 474 474
+4 * 474 474
+1 * 474 474

fn=(82)
0x4039fc 117 474 0 474 1 0 0 1
+1 * 474
+3 * 474 0 474 1 0 0 1
+4 +1 474 474
+4 * 474 474
+1 * 474 474

fn=(200)
0x402eda 901 230 0 230
+1 * 230
+3 * 230
+4 * 230 0 230
+4 * 230 0 230
+4 +2 230 230
+4 * 230 230
+4 * 230 230
+4 * 230 230
+4 * 230
+3 * 230 0 0 0 0 0 0 0 0 230 8
jcnd=7/230 +51 +10 
* * 
+2 +3 223 223
+4 * 223 223
+4 * 223 223
+4 -1 223 223
+4 * 223
+3 * 223
+3 * 223 0 223
cfi=(3)
cfn=(222)
calls=223 0x403373 215 
* * 8474 2899 3122 0 15 2 0 15 2 223
+5 +2 223 223
+4 * 223 223
+4 * 223
+4 * 223 223
+4 * 223 0 223
+4 * 223
jump=223 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206)
calls=7 0x4033a0 318 
* * 10946 3357 2905 36 10 9 36 10 9 761 60 41
+5 +2 230 230
+1 * 230 230

fn=(4)
0x4030b2 310 460 0 460 1 0 0 1
+1 * 460
+3 * 460 0 460
+2 * 460 0 460
+2 * 460 0 460
+1 * 460
+4 * 460 0 460 1 0 0 1
+4 * 460 0 460
+4 +2 460 460
+4 * 460
+3 * 460 0 460
cfn=(6)
calls=460 0x403b08 117 
* * 2760 1380 920 1 0 1 1 0 1
+5 * 460
+3 * 460 0 460
cfi=(3)
cfn=(8)
calls=460 0x403afa -88 
* * 2760 1380 920 1 0 0 1
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(10)
calls=460 0x402f54 645 
* * 5980 2760 920 1 1 0 1 1
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460
+3 * 460
+3 * 460 0 460
cfn=(12)
calls=460 0x403b16 134 
* * 187367 40380 38368 27 19 12 27 19 12 21933 664 920
+5 +4 460 460 0 1 0 0 1
+4 * 460
+3 * 460 0 460
cfn=(40)
calls=460 0x40333c 113 
* * 2760 1380 920 2 0 0 2
+5 * 460
+3 * 460 460
+4 * 460 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(42)
calls=460 0x403ba4 565 
* * 11500 4600 3680 3 0 0 3
+5 * 460
+3 * 460 460
+4 * 460
+3 * 460 0 460
cfn=(46)
calls=460 0x403b74 547 
* * 11500 4600 3680
+5 * 460
+3 * 460
+3 * 460
+3 * 460
+3 * 460 0 460 1 0 0 1
cfi=(11)
cfn=(48)
calls=460 0x403bd5 -60 
* * 207388 67640 65344 26 3 4 26 3 4 7296 466 916 114
+5 -3 460 460
+4 * 460 0 460
+4 * 460
jump=460 +28 +4 
* * 
+28 +4 460
+4 * 460 460
+1 * 460 460
+2 * 460 460
+2 * 460 460
+1 * 460 460

fn=(108)
0x403a98 565 460 0 460 1 0 0 1
+1 * 460
+3 * 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+4 * 460 0 460
+4 * 460
+4 * 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfi=(10)
cfn=(110)
calls=460 0x404380 726 
* * 4600 2300 1840 1 0 0 1
+5 * 460 460
+4 * 460 460
+1 * 460 460

fn=(178)
0x402e74 414 460 0 460
+1 * 460
+3 * 460 0 460
+1 * 460
+4 * 460 0 460 1 0 0 1
+4 +2 460 460
+4 * 460
+3 * 460 0 460
cfn=(40)
calls=460 0x40333c 113 
* * 2760 1380 920
+5 * 460
+3 * 460 460
+4 * 460 460
+4 * 460 460
+4 * 460 460
+3 -1 460
+3 * 460
+3 * 460 0 460
cfi=(14)
cfn=(180)
calls=460 0x40334a 148 
* * 14260 4600 5520 2 0 0 2
+5 +1 460 460
+4 * 460
+3 * 460 0 460
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=460 0x4032ca 159 
* * 92338 28072 17982 3 0 0 3 0 0 14312 29 920
+5 * 460
jump=460 +28 * 
* * 
+28 * 460 0 0 1 0 0 1
+4 * 460 460
+1 * 460 460
+1 * 460 460

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 467 0 467 1 0 0 1
+1 * 467 0 0 1 0 0 1
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 0 467 467
+5 0 467 0 0 0 0 0 0 0 0 467
+2 0 467 467
+4 0 467 467
+4 0 467
+5 0 467
+3 0 467
+3 0 467 0 467
fi=(6)
cfi=(5)
cfn=(100)
calls=467 0x40461a 99 
* 0 146636 23371 21868 29 17 31 29 17 31 22535 731 934
+5 0 467
fi=(6)
jump=467 +7 0 
* 0 
+7 0 467 467
+1 0 467 467

fn=(144)
0x402d9a 770 80845 0 80845
+1 * 80845
+3 * 80845 0 80845
+4 * 80845 0 80845
+4 +1 80845 80845
+4 * 80845 80845
+3 * 80845 80845
+4 * 80845
+4 * 80845
+3 * 80845 80845
+1 * 80845 80845

fn=(146)
0x402dba 770 80845 0 80845
+1 * 80845
+3 * 80845 0 80845 1 0 0 1
+4 * 80845 0 80845
+4 +1 80845 80845
+4 * 80845 80845
+3 * 80845 80845
+4 * 80845
+4 * 80845
+3 * 80845 80845
+1 * 80845 80845

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 460
+4 * 460
+3 * 460 0 460
cfi=(4)
cfn=(194)
calls=460 0x403d7e +42 
* * 6440 2300 2300 1 0 0 1
+5 * 460 460
+1 * 460 460

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 460 0 460 1 0 0 1
+1 * 460
+3 * 460 0 460
+1 * 460
+4 * 460 0 460
+4 +2 460 460
+4 * 460 460
+4 * 460
+3 * 460 460
+4 * 460 460
+3 * 460
+3 * 460
+3 * 460
+4 * 460
+3 * 460 460
+4 * 460 460
+3 -1 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(188)
calls=460 0x403d98 +11 
* * 68878 19332 12002 1 0 0 1 0 0 14312 29 920
+5 +1 460 460
+4 * 460
+3 * 460 0 460
cfn=(192)
calls=460 0x403296 -82 
* * 10580 3680 3680 1 0 0 1
+5 * 460
jump=460 +28 * 
* * 
+28 * 460
+4 * 460 460
+1 * 460 460
+1 * 460 460

fn=(2)
0x402d74 645 1868 0 1868 1 0 0 1
+1 * 1868
+3 * 1868 0 1868 0 0 1 0 0 1
+4 +1 1868 1868
+4 * 1868 1868 0 1 1 0 1 1
+4 * 1868
+3 * 1868 1868
+4 * 1868 1868
+3 * 1868
+3 * 1868
+3 * 1868
+4 * 1868 1868
+1 * 1868 1868

fn=(20)
0x404412 179 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 +2 460 460
+4 * 460 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(22)
calls=460 0x404236 -14 
* * 149187 25660 25488 21 19 8 21 19 8 21933 664 920
+5 * 460 460
+4 * 460 0 460
+3 +1 460 460
+4 * 460 460 0 1 0 0 1
+3 * 460 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+3 * 460 460
+4 * 460
+4 * 460
+3 * 460 460
+4 * 460 0 460
+4 +1 460 460
+1 * 460 460

fn=(94)
0x40432a 179 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 * 460 0 460
+4 +2 460 460
+4 * 460 460 0 1 0 0 1
+4 * 460
+3 * 460
+3 * 460 0 460
cfn=(96)
calls=460 0x403fbe -14 
* * 151139 25076 23156 18 8 26 18 8 26 22528 679 920
+5 * 460 460
+4 * 460 0 460
+3 +1 460 460
+4 * 460 460
+3 * 460 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+3 * 460 460
+4 * 460
+4 * 460
+3 * 460 460
+4 * 460 0 460
+4 +1 460 460
+1 * 460 460

fn=(244)
0x402f7a 901 230 0 230
+1 * 230
+3 * 230 0 0 1 0 0 1
+4 * 230 0 230
+4 * 230 0 230
+4 +2 230 230
+4 * 230 230
+4 * 230 230
+4 * 230 230
+4 * 230
+3 * 230 0 0 0 0 0 0 0 0 230
jcnd=7/230 +51 +10 
* * 
+2 +3 223 223
+4 * 223 223
+4 * 223 223
+4 -1 223 223
+4 * 223
+3 * 223
+3 * 223 0 223
cfi=(3)
cfn=(264)
calls=223 0x4036b1 215 
* * 8474 2899 3122 0 14 4 0 14 4 223
+5 +2 223 223
+4 * 223 223
+4 * 223
+4 * 223 223
+4 * 223 0 223
+4 * 223
jump=223 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246)
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(250)
calls=7 0x4036de 318 
* * 10134 3133 2715 27 6 12 27 6 12 596 52 41
+5 +2 230 230
+1 * 230 230

fn=(258)
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40)
0x40333c 113 941 0 941 1 0 0 1
+1 * 941
+3 * 941 0 941 1 0 0 1
+4 +1 941 941
+4 * 941 941
+1 * 941 941

fn=(112)
0x403a68 547 460 0 460
+1 * 460
+3 * 460
+4 * 460 0 460
+4 +1 460 460
+4 * 460 460
+3 * 460 0 460
+4 * 460
+4 * 460
+4 * 460
+3 * 460
+3 * 460 0 460
cfi=(10)
cfn=(110)
calls=460 0x404380 726 
* * 4600 2300 1840
+5 * 460 460
+4 * 460 460
+1 * 460 460

fn=(148)
0x402df4 414 460 0 460
+1 * 460
+3 * 460 0 460
+1 * 460
+4 * 460 0 460 1 0 0 1
+4 +2 460 460
+4 * 460
+3 * 460 0 460
cfn=(106)
calls=460 0x40325e 113 
* * 2760 1380 920
+5 * 460
+3 * 460 460
+4 * 460 460
+4 * 460 460
+4 * 460 460
+3 -1 460
+3 * 460
+3 * 460 0 460
cfi=(14)
cfn=(150)
calls=460 0x40326c 148 
* * 14260 4600 5520 4 0 0 4
+5 +1 460 460
+4 * 460
+3 * 460 0 460
cfn=(156)
calls=460 0x4031ec 159 
* * 85840 25576 16186 27 5 0 27 5 0 12428 402 920
+5 * 460
jump=460 +28 * 
* * 
+28 * 460 0 0 1 0 0 1
+4 * 460 460
+1 * 460 460
+1 * 460 460

fn=(158)
0x403ce6 171 467 0 467 1 0 0 1
+1 * 467
+3 * 467
+4 * 467 0 467
+4 * 467 0 467
+4 * 467 0 467
+4 +2 467 467
+5 * 467 0 0 0 0 0 0 0 0 467
+2 +1 467 467
+4 * 467 467
+4 * 467 467
+4 * 467
+3 * 467
+3 * 467 0 467
cfi=(5)
cfn=(160)
calls=467 0x4044d6 -65 
* * 55825 14277 8033 24 5 0 24 5 0 12130 406 934
+5 +1 467 467
+1 * 467 467

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 934 0 934 1 0 0 1
+2 0 934 0 934
+2 0 934 0 934
+2 0 934
+3 0 934 0 934
+2 0 934 0 934
+1 0 934 0 934
+1 0 934
+3 0 934
+4 0 934 934
+4 0 934 0 934
+4 0 934
+3 0 934
+4 0 934
+3 0 934
+3 0 934
+3 0 934 0 0 1 0 0 1 0 0 934
+6 0 934
+4 0 934 0 0 0 0 0 0 0 0 934
+6 0 934
+4 0 934 0 0 0 0 0 0 0 0 934
+6 0 934 934
+7 0 934 0 0 0 0 0 0 0 0 934 2
jcnd=810/934 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 810
+2 0 810 0 0 0 0 0 0 0 0 810
+6 0 810 810 0 1 0 0 1
+4 0 810
+3 0 810
+2 0 810 0 0 0 0 0 0 0 0 810
jcnd=810/810 0x3877c78a40 0 
* 0 
+6 0 810 810
+4 0 810
+3 0 810 0 0 0 0 0 0 0 0 810
+6 0 810 810
+5 0 810
+4 0 810 0 0 0 0 0 0 0 0 810
jcnd=810/810 0x3877c7907c 0 
* 0 
+6 0 810 810
+5 0 810
+4 0 810 0 0 0 0 0 0 0 0 810
+6 0 810
+4 0 810 0 0 1 0 0 1 0 0 810
+6 0 810
+4 0 810 810
+7 0 810 0 0 0 0 0 0 0 0 810
+6 0 810 810
+6 0 810
+2 0 810 0 0 0 0 0 0 0 0 810
+6 0 810 810
+4 0 810 0 0 0 0 0 0 0 0 810 5
jcnd=806/810 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 810 810 0 1 0 0 1
+4 0 810 0 0 0 0 0 0 0 0 810 322
jcnd=322/810 0x3877c78bf0 0 
* 0 
+6 0 488 488
+6 0 488 0 0 1 0 0 1 0 0 488 45
jcnd=29/488 0x3877c78a78 0 
* 0 
+6 0 459 459
+5 0 459 459
+5 0 459 459
+4 0 459 0 0 0 0 0 0 0 0 459
+6 0 459 459
+4 0 459 0 0 0 0 0 0 0 0 459
+6 0 459 459
+9 0 459 0 459
+4 0 459 0 459
+4 0 459 0 0 0 0 0 0 0 0 459 4
jcnd=451/459 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 459
+3 0 459
+4 0 459 459
+4 0 459 459
+4 0 459 0 0 0 0 0 0 0 0 459
-12 0 29
+4 0 29 29
+4 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 488
+7 0 488 0 488
+4 0 488 0 488
+4 0 488 0 0 0 0 0 0 0 0 488 61
jcnd=419/488 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 419 0 419
+4 0 419
+3 0 419 0 419
+4 0 419
+4 0 419 0 419
+4 0 419 0 419
+4 0 419
+7 0 419 0 0 0 0 0 0 0 0 419
jcnd=419/419 0x3877c78b20 0 
* 0 
-7 0 322
+7 0 322 0 0 0 0 0 0 0 0 322
jcnd=322/322 0x3877c78b20 0 
* 0 
0x3877c78a40 0 810 0 0 1 0 0 1
+5 0 810 810
+4 0 810 810
+7 0 810 0 0 0 0 0 0 0 0 810
jcnd=810/810 +16 0 
* 0 
+16 0 810 0 810
+5 0 810 0 0 0 0 0 0 0 0 810
+6 0 810
+3 0 810
jump=810 0x3877c7878f 0 
* 0 
+10 0 29 0 29
+6 0 29 0 0 1 0 0 1
jump=29 0x3877c78885 0 
* 0 
0x3877c78b20 0 810 810 0 1 0 0 1
+4 0 810
+2 0 810 0 0 0 0 0 0 0 0 810
+6 0 810 810
+7 0 810 0 0 0 0 0 0 0 0 810
jcnd=810/810 +15 0 
* 0 
+15 0 810 0 810 1 0 0 1
+4 0 810 0 0 0 0 0 0 0 0 810
+6 0 810
+4 0 810 810
+1 0 810 810
+1 0 810 810
+2 0 810 810
+2 0 810 810
+2 0 810 810
+2 0 810 810
0x3877c78bf0 0 322 0 0 1 0 0 1
+3 0 322 0 322
+4 0 322
+3 0 322
+4 0 322 0 322 1 0 0 1
+4 0 322
jump=322 0x3877c788cf 0 
* 0 
0x3877c7907c 0 810 810 0 1 1 0 1 1
+4 0 810 0 0 1 0 0 1
+7 0 810
+4 0 810
+3 0 810
+3 0 810 0 0 0 0 0 0 0 0 810
jcnd=810/810 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 924 0 0 1 0 0 1
+7 0 924
+3 0 924
+3 0 924 924 0 0 1 0 0 1
+4 0 924
+4 0 924 0 0 0 0 0 0 0 0 0 0 924 114
jump=112 0x3877c89be8 0 
* 0 
jump=120 0x3877c89bd0 0 
* 0 
jump=112 0x3877c89bb8 0 
* 0 
jump=112 +11 0 
* 0 
jump=112 0x3877c89c48 0 
* 0 
jump=114 0x3877c89c30 0 
* 0 
jump=120 0x3877c89c18 0 
* 0 
jump=122 0x3877c89c00 0 
* 0 
+11 0 112 112
+3 0 112
+4 0 112
+4 0 112 112
+4 0 112
+4 0 112 0 112
+4 0 112
+9 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-40 0 6526 6526
+4 0 6526 0 6526 0 0 3 0 0 3
+4 0 6526 6526
+4 0 6526 0 6526
+4 0 6526 6526
+4 0 6526 0 6526 0 0 1 0 0 1
+4 0 6526 6526
+4 0 6526 0 6526
+4 0 6526
+4 0 6526
+4 0 6526 0 0 0 0 0 0 0 0 6526 448
jcnd=888/6526 0x3877c89c60 0 
* 0 
-32 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
jcnd=10/114 0x3877c89c60 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-16 0 122 122 0 1 0 0 1
+4 0 122 0 122
+4 0 122 0 0 1 0 0 1
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122 4
jcnd=10/122 0x3877c89c60 0 
* 0 
+6 0 6070
+4 0 6070 6070
+3 0 6070 0 6070 0 0 1 0 0 1
+3 0 6070 6070
+4 0 6070 0 6070 0 0 3 0 0 3
+4 0 6070 6070
+4 0 6070 0 6070 0 0 4 0 0 4
+4 0 6070 6070
+4 0 6070 0 6070
+4 0 6070
jump=6070 -80 0 
* 0 
-30 0 112 112
+3 0 112 0 112
+3 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-16 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
+8 0 112 112
+3 0 112
+4 0 112 0 0 1 0 0 1
+4 0 112
+4 0 112
jump=112 -39 0 
* 0 
+9 0 120
+3 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+3 0 120
+4 0 120
jump=120 -72 0 
* 0 
+8 0 112
+4 0 112 112
+3 0 112 0 0 0 0 0 0 0 0 112
+2 0 112
+4 0 112
jump=112 -99 0 
* 0 
+11 0 122 122 0 1 0 0 1
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b78 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b70 0 
* 0 
+9 0 114 114
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b68 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b60 0 
* 0 
+9 0 924 0 924 1 0 0 1
+3 0 924 924

fn=(104) alloc_perturb
0x3877c77180 0 816 816 0 1 0 0 1
+6 0 816
+2 0 816 0 0 0 0 0 0 0 0 816 1
+2 0 816 816

fn=(38) _int_malloc
0x3877c79a00 0 934 0 934 1 0 0 1
+2 0 934
+3 0 934 0 934
+2 0 934 0 934
+2 0 934 0 934 0 0 1 0 0 1
+2 0 934
+3 0 934 0 934
+1 0 934 0 934
+1 0 934
+4 0 934
+4 0 934 0 0 0 0 0 0 0 0 934
+6 0 934
+4 0 934
+6 0 934
+3 0 934
+4 0 934
+4 0 934
+4 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
+6 0 934 934 0 1 1 0 1 1
+7 0 934 0 0 0 0 0 0 0 0 934 5
jcnd=812/934 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 816
+4 0 816 816
+1 0 816 816
+1 0 816 816
+2 0 816 816
+2 0 816 816
+2 0 816 816
+2 0 816 816
+7 0 829
+7 0 829 0 0 1 0 0 1 0 0 829 3
jcnd=2/829 0x3877c79b70 0 
* 0 
+2 0 827
+3 0 827
+5 0 827
+3 0 827
+4 0 827 0 827
+4 0 827
+2 0 827
+5 0 827 827 0 0 11 0 0 11
+4 0 827
+3 0 827 0 0 0 0 0 0 0 0 827
jcnd=827/827 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 911 244 193 8 3 0 8 3 0 187 23
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 828 0 0 1 0 0 1
+3 0 828
+3 0 828
+3 0 828
+4 0 828
+3 0 828
+4 0 828 0 828
+5 0 828
+3 0 828 0 828
+4 0 828 0 828
+4 0 828 0 828
+5 0 828
+3 0 828
+3 0 828
+3 0 828
+3 0 828
+4 0 828
+4 0 828 0 0 1 0 0 1
+4 0 828 0 828
+4 0 828
+4 0 828 0 828
+5 0 828 0 828
+5 0 828
+3 0 828
+3 0 828 0 828
+5 0 828
+5 0 828
+3 0 828 0 828
+4 0 828 0 828
+4 0 828
+6 0 828 0 828
+4 0 828 0 828
+5 0 828 0 0 1 0 0 1
+3 0 828
+3 0 828
+3 0 828
jump=828 +87 0 
* 0 
+8 0 786
+3 0 786
+4 0 786
+2 0 786
+2 0 786
+3 0 786
+3 0 786
+3 0 786
+2 0 786
+2 0 786
+5 0 786
+2 0 786 786 0 0 2 0 0 2
+4 0 786
+3 0 786
+4 0 786 0 786
+4 0 786 0 786
+8 0 786
+7 0 786 0 786
+4 0 786 0 786 0 0 1 0 0 1
+4 0 786 0 786
+4 0 786 0 0 0 0 0 0 0 0 786
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1683 1683 0 1 0 0 1
+4 0 1683
+3 0 1683 0 0 0 0 0 0 0 0 1683 26
jcnd=796/1683 0x3877c79ef0 0 
* 0 
+6 0 887 887
+4 0 887 887
+4 0 887
+4 0 887 0 0 0 0 0 0 0 0 887
+6 0 887 887 0 1 1 0 1 1
+7 0 887 0 0 0 0 0 0 0 0 887
+6 0 887
+4 0 887
+7 0 887 0 0 0 0 0 0 0 0 887 3
jcnd=6/887 +11 0 
* 0 
+2 0 881
+3 0 881 0 0 0 0 0 0 0 0 881 63
jcnd=805/881 0x3877c79e28 0 
* 0 
+6 0 867
+3 0 867 0 867
+4 0 867 0 867
+5 0 867 0 0 0 0 0 0 0 0 867 9
jcnd=13/867 0x3877c7a090 0 
* 0 
+6 0 854
+7 0 854 0 0 0 0 0 0 0 0 854 11
jcnd=786/854 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 5
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 805 805 0 1 0 0 1
+4 0 805
+3 0 805 0 0 0 0 0 0 0 0 805 327
jcnd=405/805 0x3877c79ce1 0 
* 0 
+6 0 400 400
+5 0 400 0 0 0 0 0 0 0 0 400 6
jcnd=380/400 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 796 0 0 1 0 0 1
+7 0 796
+3 0 796 0 0 0 0 0 0 0 0 796 1
jcnd=2/796 0x3877c7a0b0 0 
* 0 
+6 0 796 796 0 1 0 0 1
+4 0 796
+3 0 796
+3 0 796
+2 0 796
+4 0 796
+3 0 796
+3 0 796
+2 0 796
+2 0 796
+2 0 796
+2 0 796 796 0 0 1 0 0 1
+8 0 796
+5 0 796
+5 0 796
+2 0 796 0 0 0 0 0 0 0 0 796
-2 0 401
+2 0 401 0 0 0 0 0 0 0 0 401
+2 0 1197
+2 0 1197 0 0 0 0 0 0 0 0 1197 19
jcnd=600/1197 +64 0 
* 0 
+2 0 597
+8 0 597
+3 0 597
+3 0 597 0 0 0 0 0 0 0 0 597 1
jcnd=1/597 0x3877c79fc0 0 
* 0 
-6 0 708
+3 0 708
+3 0 708 0 0 0 0 0 0 0 0 708 3
jcnd=321/708 0x3877c79fc0 0 
* 0 
+2 0 983
+2 0 983 983
+8 0 983
+2 0 983 0 0 0 0 0 0 0 0 983 16
jcnd=708/983 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 7
jcnd=213/275 -8 0 
* 0 
-8 0 6640
+4 0 6640
+2 0 6640
+2 0 6640 0 0 0 0 0 0 0 0 6640 422
jcnd=5853/6640 -8 0 
* 0 
-2 0 600 0 0 1 0 0 1
+2 0 600 0 0 0 0 0 0 0 0 600 16
jcnd=574/600 -8 0 
* 0 
+2 0 875 875 0 0 7 0 0 7
+4 0 875 0 0 1 0 0 1
+3 0 875 0 0 0 0 0 0 0 0 875 392
jcnd=474/875 0x3877c7a1cf 0 
* 0 
+6 0 401
+2 0 401
+4 0 401
+2 0 401
+2 0 401
+2 0 401 0 401
+8 0 401
jump=401 0x3877c79f30 0 
* 0 
+37 0 322 322 0 1 0 0 1
+5 0 322 322
+4 0 322
+4 0 322 322
+5 0 322 0 0 0 0 0 0 0 0 322
jcnd=322/322 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 474 474 0 1 1 0 1 1
+4 0 474 474
+4 0 474
+3 0 474 474
+4 0 474
+4 0 474
+3 0 474
+3 0 474 474
+4 0 474 0 0 0 0 0 0 0 0 474
+6 0 474 474
+4 0 474 0 0 0 0 0 0 0 0 474
+6 0 474 474 0 1 0 0 1
+8 0 474 0 474
+4 0 474 0 474
+4 0 474 0 0 0 0 0 0 0 0 474 7
jcnd=404/474 +38 0 
* 0 
+2 0 70 70 0 0 2 0 0 2
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 404
+4 0 404 0 0 0 0 0 0 0 0 404 8
jcnd=13/404 0x3877c7a2e3 0 
* 0 
+6 0 461 461
+4 0 461 461 0 1 0 0 1
+4 0 461 0 0 0 0 0 0 0 0 461
+6 0 461
+4 0 461
+7 0 461 0 461 0 0 7 0 0 7
+4 0 461 0 461
+4 0 461 0 461
+4 0 461 0 461
+4 0 461 0 0 0 0 0 0 0 0 461 2
jcnd=2/461 +7 0 
* 0 
+2 0 459 0 459
+5 0 459
+7 0 459 0 0 0 0 0 0 0 0 459 4
jcnd=452/459 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 454
+7 0 454 0 454
+4 0 454
+3 0 454
+3 0 454
+4 0 454
+3 0 454
+4 0 454
+3 0 454
+3 0 454
+4 0 454 0 454
+4 0 454 0 454 0 0 1 0 0 1
+4 0 454
jump=454 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 13
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +7 0 
* 0 
+7 0 474
+4 0 474 0 0 1 0 0 1
+3 0 474
+3 0 474 0 474
cfn=(104)
calls=474 0x3877c77180 0 
* 0 1896 948 0 0 0 0 0 0 0 474
+5 0 474
+3 0 474
jump=474 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 322 0 0 1 0 0 1
+7 0 322
+2 0 322
+4 0 322
+3 0 322
+3 0 322 0 322
+5 0 322
+3 0 322
+4 0 322
+3 0 322 0 0 1 0 0 1
+4 0 322
+4 0 322
+3 0 322
+4 0 322 0 322
+4 0 322 0 322 0 0 11 0 0 11
+4 0 322
+3 0 322
+3 0 322 0 322
cfn=(104)
calls=322 0x3877c77180 0 
* 0 1288 644 0 0 0 0 0 0 0 322 1
+5 0 322
+3 0 322
jump=322 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 934 0 934 1 0 0 1
+5 0 934 0 934
+5 0 934
+3 0 934 0 934
+5 0 934
+4 0 934 934 0 0 1 0 0 1
+7 0 934 934 0 0 1 0 0 1
+3 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
+6 0 934 934 0 0 1 0 0 1
+7 0 934 934 0 1 1 0 1 1
+4 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
+2 0 934 934 0 0 1 0 0 1
+3 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
jcnd=934/934 +97 0 
* 0 
+18 0 934
+3 0 934
+3 0 934 0 934
cfn=(38)
calls=934 0x3877c79a00 0 
* 0 212019 25603 29997 42 34 44 42 34 44 33093 1412
+5 0 934
+3 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
+2 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
+2 0 934
+3 0 934 0 0 0 0 0 0 0 0 934 5
+2 0 934 934
+7 0 934 0 0 0 0 0 0 0 0 934
jcnd=934/934 +13 0 
* 0 
+13 0 934 0 934
+2 0 934 0 0 0 0 0 0 0 0 934 14
+6 0 934
+3 0 934 934
+4 0 934 934
+5 0 934 934
+5 0 934
+4 0 934 934
+1 0 934 0 0 1 0 0 1
+5 0 934 934 0 0 1 0 0 1
+7 0 934 0 0 0 0 0 0 0 0 934
jcnd=934/934 +14 0 
* 0 
+14 0 934 0 934 1 0 0 1
+3 0 934 0 0 0 0 0 0 0 0 934
+6 0 934
jump=934 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 934 0 934 1 0 0 1
+2 0 934
+3 0 934
+3 0 934 0 934
+2 0 934
+3 0 934 0 934
+1 0 934
+3 0 934 0 934
+1 0 934
+3 0 934
+4 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
+6 0 934
+4 0 934
+3 0 934 0 0 0 0 0 0 0 0 934 4
jcnd=10/934 0x3877c838d1 0 
* 0 
+2 0 924
+3 0 924
+3 0 924
+3 0 924
+3 0 924
+3 0 924 0 0 0 0 0 0 0 0 924
jcnd=924/924 +41 0 
* 0 
+41 0 924 0 0 1 0 0 1
+3 0 924 0 0 0 0 0 0 0 0 924
jcnd=924/924 0x3877c839c0 0 
* 0 
+24 0 924
+3 0 924
+4 0 924
+3 0 924
+3 0 924
+3 0 924
+3 0 924
+3 0 924 0 0 0 0 0 0 0 0 924 460
jcnd=468/924 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 466
+10 0 466 466 0 0 2 0 0 2
+3 0 466
+4 0 466 0 466
+3 0 466
+4 0 466
+4 0 466 0 0 0 0 0 0 0 0 466
jcnd=466/466 -18 0 
* 0 
-18 0 1454 1454
+3 0 1454
+4 0 1454 0 1454
+3 0 1454
+4 0 1454
+4 0 1454 0 0 0 0 0 0 0 0 1454 8
jcnd=988/1454 -18 0 
* 0 
+2 0 934
+4 0 934
+3 0 934 934
+1 0 934 934
+1 0 934 934
+2 0 934 934 0 1 0 0 1
+2 0 934 934
0x3877c839c0 0 924 0 0 1 0 0 1
+3 0 924
+3 0 924
+3 0 924
+4 0 924 0 924 0 0 1 0 0 1
cfn=(284)
calls=924 0x3877c89b20 0 
* 0 150838 55452 53604 6 1 12 6 1 12 7226 452 924 114
+5 0 924
jump=924 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 934 934 0 1 1 0 1 1
+7 0 934 934 0 0 1 0 0 1
+3 0 934
+3 0 934 0 0 1 0 0 1 0 0 934
+6 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
+6 0 934 934
+4 0 934
+4 0 934
+2 0 934 0 0 0 0 0 0 0 0 934
+2 0 934
+2 0 934
+7 0 934 0 0 0 0 0 0 0 0 934
jcnd=934/934 +14 0 
* 0 
+14 0 934
+2 0 934
cfn=(170)
calls=934 0x3877c78650 0 
* 0 89227 23595 13195 19 1 0 19 1 0 21483 441

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 10
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 3 0 0 3
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 5356554 2150675 1265408 238 86 79 238 86 79 169823 3506 5594 114
