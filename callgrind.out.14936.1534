version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1534


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1983600626 - 1984658489
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1268 0 0 1 0 0 1
+3 0 1268 0 0 0 0 0 0 0 0 1268
+2 0 1268
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1268 0x3877c7b8b0 0 
* 0 142125 36379 18585 21 4 0 21 4 0 34817 532
* 0 1268 1268 0 1 1 0 1 1 0 0 0 1268

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1268 0 1268 1 0 0 1
+1 0 1268
+5 0 1268
+3 0 1268 0 1268
+1 0 1268
+4 0 1268 0 0 1 0 0 1
+3 0 1268
+4 0 1268
+3 0 1268 0 1268 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1268 0x3877c7aa50 0 
* 0 341782 49528 49505 49 40 50 49 40 50 57262 2021
* 0 1268 1268 0 1 1 0 1 1 0 0 0 1268
+5 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 +96 0 
* 0 
+96 0 1268 0 0 1 0 0 1
+4 0 1268 1268
+1 0 1268 1268
+1 0 1268 1268

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 313 0 313 1 0 0 1
+1 * 313
+3 * 313
+4 * 313 0 313
+4 * 313 0 313
+4 +1 313 313
+4 * 313
+3 * 313 0 313
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=313 0x402d74 645 
* * 4069 1878 626
+5 * 313
+3 * 313 0 313
+3 +1 313 313
+6 * 313 0 313
+3 * 313 313
+6 * 313 0 313
+3 +1 313 313
+6 * 313 0 313 1 0 0 1
+3 * 313 313
+6 * 313 0 313
+3 +2 313 0 313
+7 * 313
jump=313 +86 * 
* * 
+2 +1 49454 49454
+3 * 49454
+3 * 49454 49454
+4 * 49454
+3 * 49454
+3 * 49454 0 49454
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=49454 0x402d9a 770 
* * 543994 247270 148362
+5 * 49454 49454
+4 * 49454 49454
+5 * 49454
+4 * 49454 0 49454
+5 +1 49454 49454
+3 * 49454
+3 * 49454 49454
+4 * 49454
+3 * 49454
+3 * 49454 0 49454
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=49454 0x402dba 770 
* * 543994 247270 148362 1 0 0 1
+5 * 49454 49454
+2 * 49454
+4 * 49454 49454
+5 * 49454
+4 * 49454 0 49454
+5 -2 49454 0 49454
+4 * 49454 49454
+3 * 49454
+3 * 49454 49454
+3 * 49454 0 0 0 0 0 0 0 0 49454 314
jcnd=49141/49454 -93 +1 
* * 
-9 * 313 313 0 1 0 0 1
+3 * 313
+3 * 313 313
+3 * 313 0 0 0 0 0 0 0 0 313
jcnd=313/313 -93 +1 
* * 
+2 +4 313 313
+3 * 313
+3 * 313
+4 * 313 313 0 1 0 0 1
+5 * 313
+4 * 313
+3 * 313 0 313
+5 +1 313 313
+3 * 313
+3 * 313
+4 * 313 313
+5 * 313
+4 * 313
+3 * 313 0 313
+5 +1 313 0 313
+7 * 313
jump=313 0x4016ee * 
* * 
+2 +1 49454 49454
+3 * 49454
+3 * 49454 49454
+4 * 49454
+3 * 49454 0 0 1 0 0 1
+3 * 49454 0 49454
cfi=(2)
cfn=(146)
calls=49454 0x402dba 770 
* * 543994 247270 148362
+5 * 49454 49454
+2 * 49454
+4 * 49454 49454
+5 * 49454 0 49454
+5 +1 49454 49454
+3 * 49454
+3 * 49454 49454
+4 * 49454
+3 * 49454
+3 * 49454 0 49454
cfi=(2)
cfn=(144)
calls=49454 0x402d9a 770 
* * 543994 247270 148362
+5 * 49454 49454
+4 * 49454 49454
+5 * 49454 0 49454
+5 +1 49454 49454
+5 * 49454 49454
+5 * 49454 49454
+5 * 49454
+4 * 49454 0 49454
+5 +1 49454 49454
+5 * 49454 49454
+5 * 49454 49454
+5 * 49454
+4 * 49454 0 49454
+5 -4 49454 0 49454
+4 * 49454 49454
+3 * 49454
+3 * 49454 49454
+3 * 49454 0 0 0 0 0 0 0 0 49454 314
jcnd=49141/49454 0x401672 +1 
* * 
-9 * 313 313 0 1 0 0 1
+3 * 313
+3 * 313 313
+3 * 313 0 0 0 0 0 0 0 0 313
jcnd=313/313 0x401672 +1 
* * 
+6 +6 313 313 0 1 0 0 1
+5 * 313 313
+5 * 313 0 313
+5 +2 313 313
+3 +1 313 0 313
+3 * 313 313
+5 * 313 313
+1 * 313 313

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 313
+7 * 313
+7 * 313
+3 * 313
+3 * 313 0 313
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=313 0x4030b2 310 
* * 327061 95656 89711 66 17 16 66 17 16 20617 993 1250 156
+5 * 313
+7 * 313
+7 * 313
+3 * 313
+3 * 313 0 313
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=313 0x402ff4 310 
* * 328408 95089 87979 40 7 69 40 7 69 21060 1057 1250
+5 * 313 0 0 1 0 0 1
+7 * 313
+7 * 313
+3 * 313
+3 * 313 0 313
cfn=(142)
calls=313 0x401585 -52 
* * 5163561 2282709 1192217 8 0 0 8 0 0 99534 628
+5 * 313 0 313
+8 * 313 313
+6 * 313 0 313
+6 * 313
+7 * 313
+3 * 313 0 313
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=313 0x402df4 414 
* * 78334 24575 17511 33 5 0 33 5 0 8707 232 626
+5 * 313
+7 * 313
+3 * 313 0 313 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=313 0x402e74 414 
* * 82038 25959 18587 7 1 0 7 1 0 9763 32 626
+5 +2 313
+7 * 313
+7 * 313
+3 * 313
+3 * 313 0 313
cfi=(2)
cfn=(4)
calls=313 0x4030b2 310 
* * 326678 95626 89600 2 1 1 2 1 1 20581 623 1250
+5 * 313
+7 * 313
+7 * 313
+3 * 313
+3 * 313 0 313
cfi=(2)
cfn=(80)
calls=313 0x402ff4 310 
* * 327533 95037 87835 0 0 2 0 0 2 20926 661 1250
+5 * 313 313
+6 * 313 0 0 1 0 0 1
+7 * 313
+7 * 313 0 313
+6 * 313 313
+8 * 313
+3 * 313
+3 * 313 0 313
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=313 0x401719 -33 
* * 2392259 995966 548689 4 0 0 4 0 0 49767 314
+5 * 313 0 313
+8 * 313 313
+6 * 313 0 313
+6 * 313
+7 * 313 0 0 1 0 0 1
+3 * 313 0 313
cfi=(2)
cfn=(148)
calls=313 0x402df4 414 
* * 78334 24575 17511 0 0 0 0 0 0 8707 226 626
+5 * 313
+7 * 313
+3 * 313 0 313
cfi=(2)
cfn=(178)
calls=313 0x402e74 414 
* * 82038 25959 18587 0 0 0 0 0 0 9763 26 626
+5 +2 313 313
+7 * 313
+3 * 313 0 313
cfi=(2)
cfn=(2)
calls=313 0x402d74 645 
* * 4069 1878 626
+5 * 313 313
+6 * 313
+3 * 313
+3 * 313
+3 * 313 313
+7 * 313
+3 * 313 0 0 1 0 0 1
+3 * 313 0 313
cfi=(2)
cfn=(144)
calls=313 0x402d9a 770 
* * 3443 1565 939
+5 * 313
+3 * 313
+7 * 313
+3 * 313
+3 * 313 0 313
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=313 0x402eda 901 
* * 32525 11987 9287 39 28 11 39 28 11 1471 73 47
+5 +1 313 313
+7 * 313
+3 * 313 0 313
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=313 0x402f54 645 
* * 4069 1878 626 0 1 0 0 1
+5 * 313 313
+6 * 313
+3 * 313
+3 * 313
+3 * 313 313
+7 * 313 0 0 1 0 0 1
+3 * 313
+3 * 313 0 313
cfi=(2)
cfn=(146)
calls=313 0x402dba 770 
* * 3443 1565 939
+5 * 313
+3 * 313
+7 * 313
+3 * 313
+3 * 313 0 313
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=313 0x402f7a 901 
* * 32254 11792 9130 28 35 37 28 35 37 1436 80 47
+5 +1 313 313
+7 * 313
+3 * 313 0 313
cfi=(2)
cfn=(10)
calls=313 0x402f54 645 
* * 4069 1878 626
+5 * 313 313
+6 * 313
+3 * 313
+3 * 313
+3 * 313 313 0 1 0 0 1
+7 * 313
+3 * 313
+3 * 313 0 313
cfi=(2)
cfn=(146)
calls=313 0x402dba 770 
* * 3443 1565 939
+5 * 313 313
+2 * 313
+4 * 313 313
+8 * 313 313
+8 * 313 0 313
+8 +1 313 313
+7 * 313
+3 * 313 0 313
cfi=(2)
cfn=(2)
calls=313 0x402d74 645 
* * 4069 1878 626
+5 * 313 313 0 1 0 0 1
+6 * 313
+3 * 313
+3 * 313
+3 * 313 313
+7 * 313
+3 * 313
+3 * 313 0 313
cfi=(2)
cfn=(144)
calls=313 0x402d9a 770 
* * 3443 1565 939
+5 * 313 313
+4 * 313 313
+8 * 313
+4 * 313 313
+8 * 313
+3 * 313 0 313
+8 +2 313 0 313
+7 -12 313 313
+8 * 313 313
+7 * 313 0 0 0 0 0 0 0 0 313 1
jcnd=1/313 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 313
+7 * 313
+3 * 313 0 313
cfi=(2)
cfn=(2)
calls=313 0x402d74 645 
* * 4069 1878 626 2 0 1 2 0 1
+5 * 313
+3 * 313 313
+7 * 313
+3 * 313 0 313
cfi=(2)
cfn=(2)
calls=313 0x402d74 645 
* * 4069 1878 626 0 1 0 0 1
+5 * 313
+3 * 313 0 0 0 0 0 0 0 0 313 2
+2 * 313 0 0 1 0 0 1
+5 * 313
jump=313 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 313
+2 * 313 0 0 0 0 0 0 0 0 313
jcnd=313/313 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 313 0 313
+1 * 313
+3 * 313
+4 * 313 0 313
+4 * 313 0 313
+4 * 313 0 313
+5 +1 313 313
+4 * 313
+3 * 313 0 313
cfi=(2)
cfn=(2)
calls=313 0x402d74 645 
* * 4069 1878 626
+5 * 313
+3 * 313 0 313
+3 +1 313 313 0 1 0 0 1
+6 * 313 0 313
+3 * 313 313
+6 * 313 0 313
+3 +2 313 0 313
+7 * 313
jump=313 +86 * 
* * 
+2 +1 49454 49454
+3 * 49454
+3 * 49454 49454
+4 * 49454
+3 * 49454
+3 * 49454 0 49454
cfi=(2)
cfn=(144)
calls=49454 0x402d9a 770 
* * 543994 247270 148362
+5 * 49454 49454
+4 * 49454 49454
+5 * 49454
+4 * 49454 0 49454
+5 +1 49454 49454
+3 * 49454
+3 * 49454 49454
+4 * 49454
+3 * 49454
+3 * 49454 0 49454
cfi=(2)
cfn=(146)
calls=49454 0x402dba 770 
* * 543994 247270 148362
+5 * 49454 49454
+2 * 49454
+4 * 49454 49454
+5 * 49454
+4 * 49454 0 49454
+5 -2 49454 0 49454
+4 * 49454 49454
+3 * 49454
+3 * 49454 49454
+3 * 49454 0 0 0 0 0 0 0 0 49454 314
jcnd=49141/49454 -93 +1 
* * 
-9 * 313 313 0 1 0 0 1
+3 * 313
+3 * 313 313
+3 * 313 0 0 0 0 0 0 0 0 313
jcnd=313/313 -93 +1 
* * 
+2 +4 313 313
+3 * 313
+3 * 313 0 0 1 0 0 1
+4 * 313 313
+5 * 313
+4 * 313
+3 * 313 0 313
+5 +1 313 313
+3 * 313
+3 * 313
+4 * 313 313
+5 * 313
+4 * 313
+3 * 313 0 313
+5 +1 313 313
+5 * 313 313
+5 * 313 313
+5 * 313 0 0 1 0 0 1
+4 * 313
+3 * 313 0 313
+5 +2 313 313
+3 +1 313 0 313
+3 * 313 313
+5 * 313 313
+1 * 313 313

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 626 0 626 1 0 0 1
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=626 0x404a28 -35 
* * 3756 1252 1878 1 0 1 1 0 1
+5 * 626 626
+1 * 626 626

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 626
+4 * 626
+3 * 626 0 626
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=626 0x4044cc -35 
* * 3130 1252 1252
+5 * 626 626
+1 * 626 626

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 626 0 626 1 0 0 1
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626 1 0 0 1
+4 +1 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=626 0x4049d4 -35 
* * 3756 1252 1878 1 0 0 1
+5 * 626 626
+1 * 626 626

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 626 0 626 1 0 0 1
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 626
+4 * 626
+3 * 626 0 626
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=626 0x404520 -35 
* * 3130 1252 1252
+5 * 626 626
+1 * 626 626

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 626 0 626 1 0 0 1
+1 * 626
+3 * 626 0 626
+4 * 626 626
+4 * 626 626
+1 * 626 626

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 313 0 313
+1 * 313
+3 * 313
+4 * 313 0 313
+4 * 313 0 313
+4 * 313 0 313
+4 +1 313 313
+4 * 313 313
+4 * 313 313
+4 * 313
+3 * 313
+3 * 313 0 313
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=313 0x40406a -87 
* * 7512 2504 2817 0 20 12 0 20 12 313
+5 * 313 313
+1 * 313 313

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 626 0 626
+1 * 626
+3 * 626 0 626
+4 * 626 626
+4 * 626 626
+1 * 626 626

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 313 0 313
+1 * 313
+3 * 313
+4 * 313 0 313
+4 * 313 0 313
+4 * 313 0 313
+4 +1 313 313
+4 * 313 313
+4 * 313 313
+4 * 313
+3 * 313
+3 * 313 0 313
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=313 0x403df2 -87 
* * 7512 2504 2817 0 21 3 0 21 3 313 2
+5 * 313 313
+1 * 313 313

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 706 0 706
+1 * 706
+3 * 706 0 706
+4 +1 706 706
+4 * 706 706
+1 * 706 706

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1252 0 1252 1 0 0 1
+1 * 1252
+3 * 1252 0 1252
+4 +1 1252 1252 0 1 0 0 1
+4 * 1252 1252
+1 * 1252 1252

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 706 0 706
+1 * 706
+3 * 706 0 706 0 0 1 0 0 1
+4 +1 706 706
+4 * 706 706
+1 * 706 706

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1252 0 1252 1 0 0 1
+1 * 1252
+3 * 1252
+4 * 1252 0 1252
+4 +1 1252
+4 * 1252
+3 * 1252 0 1252
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1252 0x404ffe 790 
* * 7512 3756 2504 1 0 0 1
+5 * 1252 1252
+3 * 1252 1252
+1 * 1252 1252

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1252 0 1252 1 0 0 1
+1 * 1252
+3 * 1252 0 1252
+4 +1 1252 1252
+4 * 1252 1252
+1 * 1252 1252

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1252 0 1252 1 0 0 1
+1 * 1252
+3 * 1252
+4 * 1252 0 1252
+4 +1 1252
+4 * 1252
+3 * 1252 0 1252 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1252 0x40500c 790 
* * 7512 3756 2504 1 0 0 1
+5 * 1252 1252
+3 * 1252 1252
+1 * 1252 1252

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 626 0 626
+1 * 626
+3 * 626 0 626
+4 * 626 0 626
+4 * 626 626
+4 * 626 626
+1 * 626 626

fl=(5)
fn=(102)
0x4048de 113 650 0 650 1 0 0 1
+1 * 650
+3 * 650 0 650
+4 +1 650
+10 * 650 650
+1 * 650 650

fn=(266)
0x40406a 129 313 0 313
+1 * 313
+3 * 313
+4 * 313 0 313
+4 * 313 0 313
+4 * 313 0 313
+4 +1 313 313
+4 * 313
+3 * 313
+5 * 313 0 313
cfi=(16)
cfn=(226)
calls=313 0x402d61 -20 
* * 2191 939 939
+5 * 313
+3 * 313 0 0 0 0 0 0 0 0 313
+2 * 313 313
+4 * 313 313 0 0 20 0 0 20
+2 * 313 0 313 0 0 12 0 0 12
+2 * 313 313
+1 * 313 313

fn=(28)
0x404992 113 650 0 650 1 0 0 1
+1 * 650
+3 * 650 0 650
+4 +1 650
+10 * 650 650
+1 * 650 650

fn=(176)
0x4044cc 86 626 0 626
+1 * 626
+3 * 626 0 626
+4 * 626 626
+1 * 626 626

fn=(224)
0x403df2 129 313 0 313
+1 * 313
+3 * 313
+4 * 313 0 313
+4 * 313 0 313
+4 * 313 0 313
+4 +1 313 313
+4 * 313
+3 * 313
+5 * 313 0 313
cfi=(16)
cfn=(226)
calls=313 0x402d61 -20 
* * 2191 939 939
+5 * 313
+3 * 313 0 0 0 0 0 0 0 0 313 2
+2 * 313 313
+4 * 313 313 0 0 21 0 0 21
+2 * 313 0 313 0 0 3 0 0 3
+2 * 313 313
+1 * 313 313

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634
+3 * 634 0 634
cob=(5)
cfi=(8)
cfn=(164)
calls=634 0x387e4bb2f0 0 
* * 69878 17431 8215 23 4 0 23 4 0 16982 465 634
* * 634 634 0 1 1 0 1 1 0 0 0 634
+5 * 634 634
+1 * 634 634

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634
+3 * 634 0 634
cob=(5)
cfi=(8)
cfn=(164)
calls=634 0x387e4bb2f0 0 
* * 77319 20216 10370 0 1 0 0 1 0 19103 67 634
* * 634 634 0 0 0 0 0 0 0 0 0 634
+5 * 634 634
+1 * 634 634

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634
+4 * 634
+3 * 634 0 634
cfn=(102)
calls=634 0x4048de +12 
* * 3804 1268 1268 1 0 0 1
+5 * 634 634
+4 * 634 0 0 1 0 0 1
+3 * 634
+2 * 634 0 0 0 0 0 0 0 0 634
jcnd=634/634 +7 +3 
* * 
+7 +3 634 634
+4 * 634
+4 * 634
+3 * 634 0 634
cob=(5)
cfi=(8)
cfn=(32)
calls=634 0x387e4bd0b0 0 
* * 182288 26828 24986 26 13 36 26 13 36 29681 1065 634
* * 634 634 0 0 0 0 0 0 0 0 0 634
+5 +1 634 634
+1 * 634 634

fn=(18)
0x404a28 81 626 0 626 1 0 0 1
+1 * 626
+3 * 626 0 626 0 0 1 0 0 1
+4 * 626 0 626
+4 * 626 626
+1 * 626 626

fn=(92)
0x4049d4 81 626 0 626 1 0 0 1
+1 * 626
+3 * 626 0 626
+4 * 626 0 626
+4 * 626 626
+1 * 626 626

fn=(196)
0x404520 86 626 0 626
+1 * 626
+3 * 626 0 626
+4 * 626 626
+1 * 626 626

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634 1 0 0 1
+4 +2 634 634
+4 * 634
+3 * 634 0 634
cfn=(28)
calls=634 0x404992 +12 
* * 3804 1268 1268 1 0 0 1
+5 * 634 634
+4 * 634
+3 * 634
+2 * 634 0 0 0 0 0 0 0 0 634
jcnd=634/634 +7 +3 
* * 
+7 +3 634 634
+4 * 634
+4 * 634
+3 * 634 0 634
cob=(5)
cfi=(8)
cfn=(32)
calls=634 0x387e4bd0b0 0 
* * 179782 27772 28323 27 28 15 27 28 15 28849 956 634
* * 634 634 0 1 1 0 1 1 0 0 0 634
+5 +1 634 634
+1 * 634 634

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +10 626 626
+4 * 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=626 0x404829 -26 
* * 298124 98768 95016 25 3 4 25 3 4 11540 719 1248 156
+5 +1 626 626
+1 * 626 626

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +2 626 626
+4 * 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626 1 0 0 1
cfn=(50)
calls=626 0x404484 107 
* * 306888 101898 98146 25 3 4 25 3 4 11540 719 1248 156
+5 * 626 626
+1 * 626 626

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52)
0x404829 91 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +2 626 626 0 1 0 0 1
+4 * 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=626 0x404a36 450 
* * 289360 95638 91886 24 3 4 24 3 4 11540 719 1248 156
+5 * 626 626
+1 * 626 626

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +2 626 626
+4 * 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=626 0x40439c 107 
* * 306888 101898 98146 7 1 40 7 1 40 11540 703 1248
+5 * 626 626
+1 * 626 626

fn=(116)
0x40439c 107 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +10 626 626
+4 * 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=626 0x4047d7 -26 
* * 298124 98768 95016 7 1 40 7 1 40 11540 703 1248
+5 +1 626 626
+1 * 626 626

fn=(118)
0x4047d7 91 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +2 626 626
+4 * 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=626 0x4049e2 450 
* * 289360 95638 91886 7 1 40 7 1 40 11540 703 1248
+5 * 626 626
+1 * 626 626

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 626 0 626 1 0 0 1
+1 * 626
+3 * 626 0 626
+1 * 626
+4 * 626 0 626
+4 +2 626 626
+4 * 626 626
+4 * 626
+3 * 626 626
+4 * 626 626
+3 * 626
+3 * 626
+3 * 626
+4 * 626
+3 * 626 626
+4 * 626 626
+3 -1 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=626 0x403d98 +11 
* * 93964 26252 16516 1 1 0 1 1 0 19526 58 1252
+5 +1 626 626
+4 * 626
+3 * 626 0 626
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=626 0x403296 -82 
* * 14398 5008 5008 1 0 0 1
+5 * 626
jump=626 +28 * 
* * 
+28 * 626
+4 * 626 626
+1 * 626 626
+1 * 626 626

fn=(2)
0x402d74 645 2536 0 2536 1 0 0 1
+1 * 2536
+3 * 2536 0 2536 0 0 1 0 0 1
+4 +1 2536 2536
+4 * 2536 2536 0 1 1 0 1 1
+4 * 2536
+3 * 2536 2536
+4 * 2536 2536
+3 * 2536
+3 * 2536
+3 * 2536
+4 * 2536 2536
+1 * 2536 2536

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 +2 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=626 0x404236 -14 
* * 203497 35548 35467 24 14 8 24 14 8 29658 897 1252
+5 * 626 626
+4 * 626 0 626
+3 +1 626 626
+4 * 626 626 0 1 0 0 1
+3 * 626 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+3 * 626 626
+4 * 626
+4 * 626
+3 * 626 626
+4 * 626 0 626
+4 +1 626 626
+1 * 626 626

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 +2 626 626
+4 * 626 626 0 1 0 0 1
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=626 0x403fbe -14 
* * 205699 34392 31970 18 6 31 18 6 31 30446 1015 1252
+5 * 626 626
+4 * 626 0 626
+3 +1 626 626
+4 * 626 626
+3 * 626 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+3 * 626 626
+4 * 626
+4 * 626
+3 * 626 626
+4 * 626 0 626
+4 +1 626 626
+1 * 626 626

fn=(244)
0x402f7a 901 313 0 313
+1 * 313
+3 * 313 0 0 1 0 0 1
+4 * 313 0 313
+4 * 313 0 313
+4 +2 313 313
+4 * 313 313
+4 * 313 313
+4 * 313 313
+4 * 313
+3 * 313 0 0 0 0 0 0 0 0 313
jcnd=8/313 +51 +10 
* * 
+2 +3 305 305
+4 * 305 305
+4 * 305 305
+4 -1 305 305
+4 * 305
+3 * 305
+3 * 305 0 305
cfi=(3)
cfn=(264)
calls=305 0x4036b1 215 
* * 11590 3965 4270 0 20 8 0 20 8 305
+5 +2 305 305
+4 * 305 305
+4 * 305
+4 * 305 305
+4 * 305 0 305
+4 * 305
jump=305 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12374 3718 3239 27 15 29 27 15 29 818 80 47
+5 +2 313 313
+1 * 313 313

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1276 0 1276 1 0 0 1
+1 * 1276
+3 * 1276 0 1276 1 0 0 1
+4 +1 1276 1276
+4 * 1276 1276
+1 * 1276 1276

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+3 * 626 0 626
+4 * 626
+4 * 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=626 0x404380 726 
* * 6260 3130 2504
+5 * 626 626
+4 * 626 626
+1 * 626 626

fn=(148)
0x402df4 414 626 0 626
+1 * 626
+3 * 626 0 626
+1 * 626
+4 * 626 0 626 1 0 0 1
+4 +2 626 626
+4 * 626
+3 * 626 0 626
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=626 0x40325e 113 
* * 3756 1878 1252
+5 * 626
+3 * 626 626
+4 * 626 626
+4 * 626 626
+4 * 626 626
+3 -1 626
+3 * 626
+3 * 626 0 626
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=626 0x40326c 148 
* * 19406 6260 7512 4 0 0 4
+5 +1 626 626
+4 * 626
+3 * 626 0 626
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=626 0x4031ec 159 
* * 118482 35378 22502 27 5 0 27 5 0 17414 458 1252
+5 * 626
jump=626 +28 * 
* * 
+28 * 626 0 0 1 0 0 1
+4 * 626 626
+1 * 626 626
+1 * 626 626

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634
+5 * 634 0 0 0 0 0 0 0 0 634
+2 +1 634 634
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(5)
cfn=(160)
calls=634 0x4044d6 -65 
* * 77486 19967 11385 24 5 0 24 5 0 16982 465 1268
+5 +1 634 634
+1 * 634 634

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 626 0 626
+1 * 626
+3 * 626 0 626
+1 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=626 0x4043ca -45 
* * 22536 8138 8764 4 0 4 4 0 4
+5 +1 626 626 0 1 0 0 1
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(20)
calls=626 0x404412 +43 
* * 219147 43060 39849 25 14 8 25 14 8 29658 897 1252
+5 * 626
jump=626 +28 * 
* * 
+28 * 626
+4 * 626 626
+1 * 626 626
+1 * 626 626

fn=(14)
0x4043ca 90 626 0 626 1 0 0 1
+1 * 626
+3 * 626
+4 * 626 0 626 0 0 1 0 0 1
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfi=(4)
cfn=(16)
calls=626 0x404804 +24 
* * 11268 3756 4382 2 0 1 2 0 1
+5 * 626 626
+4 * 626 0 626 0 0 2 0 0 2
+7 * 626 626
+4 * 626 0 626 1 0 0 1
+8 * 626 626
+4 * 626 0 626
+8 +1 626 626
+1 * 626 626

fn=(80)
0x402ff4 310 626 0 626 1 0 0 1
+1 * 626
+3 * 626 0 626
+2 * 626 0 626
+2 * 626 0 626
+1 * 626 0 0 1 0 0 1
+4 * 626 0 626
+4 * 626 0 626
+4 +2 626 626
+4 * 626
+3 * 626 0 626
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=626 0x4039fc 117 
* * 3756 1878 1252 2 0 0 2
+5 * 626
+3 * 626 0 626
cfi=(3)
cfn=(84)
calls=626 0x4039ed -88 
* * 3756 1878 1252
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(2)
calls=626 0x402d74 645 
* * 8138 3756 1252
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626
+3 * 626
+3 * 626 0 626 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=626 0x403a0a 134 
* * 257657 54424 49498 25 6 31 25 6 31 30446 1015 1252
+5 +4 626 626
+4 * 626
+3 * 626 0 626
cfn=(106)
calls=626 0x40325e 113 
* * 3756 1878 1252 1 0 0 1
+5 * 626
+3 * 626 626
+4 * 626 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=626 0x403a98 565 
* * 15650 6260 5008 2 0 0 2
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(112)
calls=626 0x403a68 547 
* * 15650 6260 5008
+5 * 626
+3 * 626
+3 * 626
+3 * 626
+3 * 626 0 626
cfi=(11)
cfn=(114)
calls=626 0x403ac9 -60 
* * 316278 105028 101902 7 1 40 7 1 40 11540 703 1248
+5 -3 626 626
+4 * 626 0 626
+4 * 626
jump=626 +28 +4 
* * 
+28 +4 626
+4 * 626 626
+1 * 626 626
+2 * 626 626
+2 * 626 626
+1 * 626 626

fn=(188)
0x403d98 171 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634
+5 * 634 0 0 0 0 0 0 0 0 634 8
+2 +1 634 634
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(5)
cfn=(190)
calls=634 0x40452a -65 
* * 84927 22752 13540 0 1 0 0 1 0 19103 67 1268
+5 +1 634 634
+1 * 634 634

fn=(22)
0x404236 167 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634 1 0 0 1
+4 * 634 0 634
+4 0 634 634
+5 0 634 0 0 0 0 0 0 0 0 634
+2 0 634 634
+4 0 634 634
+4 0 634
+5 0 634
+3 0 634
+3 0 634 0 634
fi=(6) ???
cfi=(5)
cfn=(26)
calls=634 0x404730 99 
* 0 196266 32844 33395 31 29 15 31 29 15 29483 956 1268
+5 0 634
fi=(6)
jump=634 +7 0 
* 0 
+7 0 634 634
+1 0 634 634

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 626 0 626 1 0 0 1
+1 * 626
+3 * 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+4 * 626 0 626
+4 * 626
+4 * 626 0 0 1 0 0 1
+4 * 626
+3 * 626
+3 * 626 0 626
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=626 0x404468 726 
* * 6260 3130 2504 1 0 0 1
+5 * 626 626
+4 * 626 626
+1 * 626 626

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+3 * 626 0 626
+4 * 626
+4 * 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfi=(10)
cfn=(44)
calls=626 0x404468 726 
* * 6260 3130 2504
+5 * 626 626
+4 * 626 626
+1 * 626 626

fn=(86)
0x403a0a 134 626 0 626
+1 * 626
+3 * 626 0 626
+1 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=626 0x4042e2 -45 
* * 22536 8138 8764 5 0 0 5
+5 +1 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626 1 0 0 1
cfn=(94)
calls=626 0x40432a +43 
* * 221349 41904 36352 19 6 31 19 6 31 30446 1015 1252
+5 * 626
jump=626 +28 * 
* * 
+28 * 626
+4 * 626 626
+1 * 626 626
+1 * 626 626

fn=(88)
0x4042e2 90 626 0 626 1 0 0 1
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626 1 0 0 1
cfi=(4)
cfn=(90)
calls=626 0x4047b2 +24 
* * 11268 3756 4382 3 0 0 3
+5 * 626 626
+4 * 626 0 626
+7 * 626 626
+4 * 626 0 626
+8 * 626 626
+4 * 626 0 626
+8 +1 626 626
+1 * 626 626

fn=(156)
0x4031ec 159 626 0 626 1 0 0 1
+1 * 626
+3 * 626 0 626
+1 * 626
+4 * 626 0 626
+4 +2 626 626
+4 * 626 626 0 1 0 0 1
+4 * 626
+3 * 626 626
+4 * 626 626
+3 * 626
+3 * 626
+3 * 626
+4 * 626
+3 * 626 626
+4 * 626 626
+3 -1 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(158)
calls=626 0x403ce6 +11 
* * 86556 23484 14364 24 5 0 24 5 0 17414 458 1252
+5 +1 626 626
+4 * 626
+3 * 626 0 626
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=626 0x4031b8 -82 
* * 14398 5008 5008 1 0 0 1
+5 * 626
jump=626 +28 * 
* * 
+28 * 626
+4 * 626 626
+1 * 626 626
+1 * 626 626

fn=(172)
0x4031b8 79 626 0 626 1 0 0 1
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 626
+4 * 626
+3 * 626 0 626
cfi=(4)
cfn=(174)
calls=626 0x403ccc +42 
* * 8764 3130 3130
+5 * 626 626
+1 * 626 626

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1284 0 1284 1 0 0 1
+1 * 1284
+3 * 1284 0 1284
+4 +1 1284 1284
+4 * 1284 1284 0 0 2 0 0 2
+4 * 1284
+3 * 1284 1284
+4 * 1284 1284
+3 * 1284
+3 * 1284
+3 * 1284
+4 * 1284 1284
+1 * 1284 1284

fn=(106)
0x40325e 113 1276 0 1276 1 0 0 1
+1 * 1276
+3 * 1276 0 1276
+4 +1 1276 1276
+4 * 1276 1276
+1 * 1276 1276

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 642 0 642 1 0 0 1
+1 * 642
+3 * 642 0 642 0 0 1 0 0 1
+4 +1 642 642
+4 * 642 642
+1 * 642 642

fn=(82)
0x4039fc 117 642 0 642 1 0 0 1
+1 * 642
+3 * 642 0 642 1 0 0 1
+4 +1 642 642
+4 * 642 642
+1 * 642 642

fn=(200)
0x402eda 901 313 0 313
+1 * 313
+3 * 313
+4 * 313 0 313
+4 * 313 0 313
+4 +2 313 313
+4 * 313 313
+4 * 313 313
+4 * 313 313
+4 * 313
+3 * 313 0 0 0 0 0 0 0 0 313 8
jcnd=8/313 +51 +10 
* * 
+2 +3 305 305
+4 * 305 305
+4 * 305 305
+4 -1 305 305
+4 * 305
+3 * 305
+3 * 305 0 305
cfi=(3)
cfn=(222)
calls=305 0x403373 215 
* * 11590 3965 4270 0 20 2 0 20 2 305 2
+5 +2 305 305
+4 * 305 305
+4 * 305
+4 * 305 305
+4 * 305 0 305
+4 * 305
jump=305 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12645 3913 3396 36 8 9 36 8 9 853 63 47
+5 +2 313 313
+1 * 313 313

fn=(4)
0x4030b2 310 626 0 626 1 0 0 1
+1 * 626
+3 * 626 0 626
+2 * 626 0 626
+2 * 626 0 626
+1 * 626
+4 * 626 0 626 1 0 0 1
+4 * 626 0 626
+4 +2 626 626
+4 * 626
+3 * 626 0 626
cfn=(6)
calls=626 0x403b08 117 
* * 3756 1878 1252 1 0 1 1 0 1
+5 * 626
+3 * 626 0 626
cfi=(3)
cfn=(8)
calls=626 0x403afa -88 
* * 3756 1878 1252 1 0 0 1
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(10)
calls=626 0x402f54 645 
* * 8138 3756 1252 1 1 0 1 1
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626
+3 * 626
+3 * 626 0 626
cfn=(12)
calls=626 0x403b16 134 
* * 255455 55580 52995 30 14 12 30 14 12 29658 897 1252
+5 +4 626 626 0 1 0 0 1
+4 * 626
+3 * 626 0 626
cfn=(40)
calls=626 0x40333c 113 
* * 3756 1878 1252 2 0 0 2
+5 * 626
+3 * 626 626
+4 * 626 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(42)
calls=626 0x403ba4 565 
* * 15650 6260 5008 3 0 0 3
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(46)
calls=626 0x403b74 547 
* * 15650 6260 5008
+5 * 626
+3 * 626
+3 * 626
+3 * 626
+3 * 626 0 626 1 0 0 1
cfi=(11)
cfn=(48)
calls=626 0x403bd5 -60 
* * 316278 105028 101902 26 3 4 26 3 4 11540 719 1248 156
+5 -3 626 626
+4 * 626 0 626
+4 * 626
jump=626 +28 +4 
* * 
+28 +4 626
+4 * 626 626
+1 * 626 626
+2 * 626 626
+2 * 626 626
+1 * 626 626

fn=(108)
0x403a98 565 626 0 626 1 0 0 1
+1 * 626
+3 * 626
+4 * 626 0 626
+4 +1 626 626
+4 * 626 626
+4 * 626 0 626
+4 * 626
+4 * 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfi=(10)
cfn=(110)
calls=626 0x404380 726 
* * 6260 3130 2504 1 0 0 1
+5 * 626 626
+4 * 626 626
+1 * 626 626

fn=(178)
0x402e74 414 626 0 626
+1 * 626
+3 * 626 0 626
+1 * 626
+4 * 626 0 626 1 0 0 1
+4 +2 626 626
+4 * 626
+3 * 626 0 626
cfn=(40)
calls=626 0x40333c 113 
* * 3756 1878 1252
+5 * 626
+3 * 626 626
+4 * 626 626
+4 * 626 626
+4 * 626 626
+3 -1 626
+3 * 626
+3 * 626 0 626
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=626 0x40334a 148 
* * 19406 6260 7512 2 0 0 2
+5 +1 626 626
+4 * 626
+3 * 626 0 626
cfn=(186)
calls=626 0x4032ca 159 
* * 125890 38146 24654 3 1 0 3 1 0 19526 58 1252
+5 * 626
jump=626 +28 * 
* * 
+28 * 626 0 0 1 0 0 1
+4 * 626 626
+1 * 626 626
+1 * 626 626

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 634 0 634 1 0 0 1
+1 * 634 0 0 1 0 0 1
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 0 634 634
+5 0 634 0 0 0 0 0 0 0 0 634
+2 0 634 634
+4 0 634 634
+4 0 634
+5 0 634
+3 0 634
+3 0 634 0 634
fi=(6)
cfi=(5)
cfn=(100)
calls=634 0x40461a 99 
* 0 198772 31900 30058 29 13 36 29 13 36 30315 1065 1268
+5 0 634
fi=(6)
jump=634 +7 0 
* 0 
+7 0 634 634
+1 0 634 634

fn=(144)
0x402d9a 770 148988 0 148988
+1 * 148988
+3 * 148988 0 148988
+4 * 148988 0 148988
+4 +1 148988 148988
+4 * 148988 148988
+3 * 148988 148988
+4 * 148988
+4 * 148988
+3 * 148988 148988
+1 * 148988 148988

fn=(146)
0x402dba 770 148988 0 148988
+1 * 148988
+3 * 148988 0 148988 1 0 0 1
+4 * 148988 0 148988
+4 +1 148988 148988
+4 * 148988 148988
+3 * 148988 148988
+4 * 148988
+4 * 148988
+3 * 148988 148988
+1 * 148988 148988

fn=(192)
0x403296 79 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 626
+4 * 626
+3 * 626 0 626
cfi=(4)
cfn=(194)
calls=626 0x403d7e +42 
* * 8764 3130 3130 1 0 0 1
+5 * 626 626
+1 * 626 626

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626 1 0 0 1
+4 * 626 0 626
+4 * 626 0 626
+4 +8 626 0 626
+4 +3 626 626
+4 * 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=626 0x404f37 -22 
* * 189200 61834 57456 14 3 3 14 3 3 11540 719 1248 156
+5 +1 626 626
+1 * 626 626

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 626 0 626
+1 * 626
+3 * 626 0 626
+2 * 626 0 626
+1 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +4 626 626
+4 * 626
+3 * 626 0 626
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=626 0x404878 277 
* * 9390 3756 3130 1 0 0 1
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=626 0x404d44 277 
* * 15650 5634 5008 2 0 0 2
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(132)
calls=626 0x404d44 277 
* * 15650 5634 5008
+5 * 626
+3 * 626
+3 * 626
+3 * 626 0 626
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=626 0x404d5e -49 
* * 198590 64964 61212 1 1 40 1 1 40 11540 703 1248
+5 +1 626
+4 * 626 626
+1 * 626 626
+2 * 626 626
+1 * 626 626

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 626 0 626
+1 * 626
+3 * 626 0 626
+1 * 626
+4 * 626 0 626 1 0 0 1
+4 * 626 0 626
+4 * 626 0 626
+4 +10 626 626
+4 * 626
+3 * 626 0 626
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=626 0x404c38 288 
* * 9390 3756 3130 3 0 0 3
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(56)
calls=626 0x404c38 288 
* * 9390 3756 3130
+5 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=626 0x404c52 -36 
* * 256808 84370 80618 20 3 4 20 3 4 11540 719 1248 156
+5 +1 626
+4 * 626 626
+1 * 626 626
+1 * 626 626

fn=(60)
0x404c52 424 626 0 626
+1 * 626
+3 * 626 0 626
+2 * 626 0 626
+1 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +4 626 626
+4 * 626
+3 * 626 0 626
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=626 0x40492d 277 
* * 9390 3756 3130 2 0 0 2
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=626 0x404d9d 277 
* * 15650 5634 5008 2 0 1 2 0 1
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(66)
calls=626 0x404d9d 277 
* * 15650 5634 5008
+5 * 626
+3 * 626
+3 * 626
+3 * 626 0 626
cfn=(72)
calls=626 0x404db7 -49 
* * 198590 64964 61212 15 3 3 15 3 3 11540 719 1248 156
+5 +1 626
+4 * 626 626
+1 * 626 626
+2 * 626 626
+1 * 626 626

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 674 0 674 1 0 0 1
+1 * 674
+3 * 674
+4 * 674 0 674
+4 +1 674 674
+4 * 674
+3 * 674 0 674 1 0 0 1
cfi=(13)
cfn=(64)
calls=674 -33 -66 
* * 4044 2022 1348
+5 * 674 674
+1 * 674 674

fn=(66)
0x404d9d 277 1252 0 1252
+1 * 1252
+3 * 1252
+4 * 1252 0 1252
+4 +1 1252 1252
+4 * 1252
+3 * 1252 0 1252
cfi=(13)
cfn=(68)
calls=1252 0x404f1a -58 
* * 20032 7512 6260 2 0 1 2 0 1
+5 * 1252 1252
+1 * 1252 1252

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 626 0 626
+1 * 626
+3 * 626 0 626
+1 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +10 626 626
+4 * 626
+3 * 626 0 626
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=626 0x404bc6 288 
* * 9390 3756 3130 3 0 0 3
+5 * 626
+3 * 626 626
+4 * 626
+3 * 626 0 626
cfn=(122)
calls=626 0x404bc6 288 
* * 9390 3756 3130
+5 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(126)
calls=626 0x404be0 -36 
* * 256808 84370 80618 4 1 40 4 1 40 11540 703 1248
+5 +1 626
+4 * 626 626
+1 * 626 626
+1 * 626 626

fn=(128)
0x404878 277 674 0 674
+1 * 674
+3 * 674
+4 * 674 0 674 1 0 0 1
+4 +1 674 674
+4 * 674
+3 * 674 0 674
cfi=(13)
cfn=(130)
calls=674 -33 -66 
* * 4044 2022 1348 0 0 1 0 0 1
+5 * 674 674
+1 * 674 674

fn=(132)
0x404d44 277 1252 0 1252
+1 * 1252
+3 * 1252
+4 * 1252 0 1252
+4 +1 1252 1252
+4 * 1252
+3 * 1252 0 1252
cfi=(13)
cfn=(134)
calls=1252 0x404e98 -58 
* * 20032 7512 6260 2 0 0 2
+5 * 1252 1252
+1 * 1252 1252

fn=(138)
0x404d5e 379 626 0 626
+1 * 626
+3 * 626
+4 * 626 0 626
+4 * 626 0 626
+4 * 626 0 626
+4 +8 626 0 626
+4 +3 626 626
+4 * 626 626
+4 * 626 626
+4 * 626
+3 * 626
+3 * 626 0 626
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=626 0x404eb5 -22 
* * 189200 61834 57456 1 1 40 1 1 40 11540 703 1248
+5 +1 626 626
+1 * 626 626

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1252 0 1252 1 0 0 1
+1 * 1252
+3 * 1252
+4 * 1252 0 1252
+4 +1 1252 1252
+4 * 1252
+3 * 1252 0 1252
cfi=(13)
cfn=(124)
calls=1252 0x404d36 -77 
* * 7512 3756 2504 2 0 0 2
+5 * 1252 1252
+1 * 1252 1252

fn=(56)
0x404c38 288 1252 0 1252 1 0 0 1
+1 * 1252
+3 * 1252
+4 * 1252 0 1252 1 0 0 1
+4 +1 1252 1252
+4 * 1252
+3 * 1252 0 1252
cfi=(13)
cfn=(58)
calls=1252 0x404d8f -77 
* * 7512 3756 2504 1 0 0 1
+5 * 1252 1252
+1 * 1252 1252

fn=(74)
0x404f37 368 642 0 642
+1 * 642
+3 * 642
+4 * 642 0 642 1 0 0 1
+4 * 642 0 642
+4 * 642 0 642
+4 +2 642 642
+4 * 642 642
+4 * 642
+3 * 642
+3 * 642
+4 * 642 0 642
+4 +1 642 642
+5 * 642 0 0 0 0 0 0 0 0 642
jcnd=8/642 +33 +2 
* * 
+2 +1 634 634
+4 * 634
+8 * 634 634
+4 * 634 634
+4 * 634
+3 * 634 0 0 1 0 0 1
+3 * 634 0 634 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=634 0x3877c83840 0 
* * 172794 55264 54001 11 2 20 11 2 20 10998 723 629 156
* * 634 634 0 1 1 0 1 1 0 0 0 634
+5 +1 642 642
+4 * 642
+8 * 642 642
+4 * 642
+3 +1 642 642
+1 * 642 642

fn=(140)
0x404eb5 368 642 0 642
+1 * 642
+3 * 642
+4 * 642 0 642 1 0 0 1
+4 * 642 0 642
+4 * 642 0 642 0 0 1 0 0 1
+4 +2 642 642
+4 * 642 642
+4 * 642
+3 * 642
+3 * 642
+4 * 642 0 642
+4 +1 642 642
+5 * 642 0 0 0 0 0 0 0 0 642
jcnd=8/642 +33 +2 
* * 
+2 +1 634 634
+4 * 634
+8 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cob=(2)
cfi=(9)
cfn=(78)
calls=634 0x3877c83840 0 
* * 172794 55264 54001 0 1 41 0 1 41 10998 709 629
* * 634 634 0 0 0 0 0 0 0 0 0 634
+5 +1 642 642
+4 * 642
+8 * 642 642
+4 * 642
+3 +1 642 642
+1 * 642 642

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1252 0 1252 1 0 0 1
+1 * 1252
+3 * 1252 0 1252
+4 +1 1252 1252
+4 * 1252 1252
+1 * 1252 1252

fn=(110)
0x404380 726 1252 0 1252 1 0 0 1
+1 * 1252
+3 * 1252 0 1252
+4 * 1252 0 1252
+4 * 1252 1252
+4 * 1252 1252
+3 * 1252 1252
+4 * 1252 0 1252
+3 * 1252 1252
+1 * 1252 1252

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1252 0 1252 1 0 0 1
+1 * 1252
+3 * 1252 0 1252
+4 +1 1252 1252
+4 * 1252 1252
+1 * 1252 1252

fn=(44)
0x404468 726 1252 0 1252
+1 * 1252
+3 * 1252 0 1252
+4 * 1252 0 1252
+4 * 1252 1252
+4 * 1252 1252
+3 * 1252 1252
+4 * 1252 0 1252 1 0 0 1
+3 * 1252 1252
+1 * 1252 1252

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 634 0 634 1 0 0 1
+1 * 634
+3 * 634 0 634
+4 * 634 0 634 1 0 0 1
+4 * 634 634
+1 * 634 634

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 +4 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=634 0x40454c -14 
* * 3804 1268 1902 1 0 0 1
+5 +2 634 634
+1 * 634 634

fn=(150)
0x40326c 148 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +3 634 634 0 1 0 0 1
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=634 0x403d1a -29 
* * 11412 3804 4438 3 0 0 3
+5 +1 634 634
+1 * 634 634

fn=(180)
0x40334a 148 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +3 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(182)
calls=634 0x403dcc -29 
* * 11412 3804 4438 2 0 0 2
+5 +1 634 634
+1 * 634 634

fn=(152)
0x403d1a 122 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 +4 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(154)
calls=634 0x4044f8 -14 
* * 3804 1268 1902 2 0 0 2
+5 +2 634 634
+1 * 634 634

fn=(184)
0x40454c 112 634 0 634 1 0 0 1
+1 * 634
+3 * 634 0 634
+4 * 634 0 634
+4 * 634 634
+1 * 634 634

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2913 466 464 9 15 7 9 15 7 459 59 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3217 678 624 13 7 5 13 7 5 503 50 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1268 0 1268 1 0 0 1
+2 0 1268 0 1268
+2 0 1268 0 1268
+2 0 1268
+3 0 1268 0 1268
+2 0 1268 0 1268
+1 0 1268 0 1268
+1 0 1268
+3 0 1268
+4 0 1268 1268
+4 0 1268 0 1268
+4 0 1268
+3 0 1268
+4 0 1268
+3 0 1268
+3 0 1268
+3 0 1268 0 0 1 0 0 1 0 0 1268
+6 0 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268
+7 0 1268 0 0 0 0 0 0 0 0 1268 4
jcnd=1144/1268 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1144
+2 0 1144 0 0 0 0 0 0 0 0 1144
+6 0 1144 1144 0 1 0 0 1
+4 0 1144
+3 0 1144
+2 0 1144 0 0 0 0 0 0 0 0 1144
jcnd=1144/1144 0x3877c78a40 0 
* 0 
+6 0 1144 1144
+4 0 1144
+3 0 1144 0 0 0 0 0 0 0 0 1144
+6 0 1144 1144
+5 0 1144
+4 0 1144 0 0 0 0 0 0 0 0 1144
jcnd=1144/1144 0x3877c7907c 0 
* 0 
+6 0 1144 1144
+5 0 1144
+4 0 1144 0 0 0 0 0 0 0 0 1144
+6 0 1144
+4 0 1144 0 0 1 0 0 1 0 0 1144
+6 0 1144
+4 0 1144 1144
+7 0 1144 0 0 0 0 0 0 0 0 1144
+6 0 1144 1144
+6 0 1144
+2 0 1144 0 0 0 0 0 0 0 0 1144
+6 0 1144 1144
+4 0 1144 0 0 0 0 0 0 0 0 1144 5
jcnd=1140/1144 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1144 1144 0 1 0 0 1
+4 0 1144 0 0 0 0 0 0 0 0 1144 380
jcnd=432/1144 0x3877c78bf0 0 
* 0 
+6 0 712 712 0 0 1 0 0 1
+6 0 712 0 0 1 0 0 1 0 0 712 64
jcnd=61/712 0x3877c78a78 0 
* 0 
+6 0 651 651
+5 0 651 651
+5 0 651 651
+4 0 651 0 0 0 0 0 0 0 0 651
+6 0 651 651
+4 0 651 0 0 0 0 0 0 0 0 651
+6 0 651 651
+9 0 651 0 651
+4 0 651 0 651
+4 0 651 0 0 0 0 0 0 0 0 651 4
jcnd=643/651 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 651
+3 0 651
+4 0 651 651
+4 0 651 651
+4 0 651 0 0 0 0 0 0 0 0 651
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 712
+7 0 712 0 712
+4 0 712 0 712
+4 0 712 0 0 0 0 0 0 0 0 712 69
jcnd=441/712 +18 0 
* 0 
+2 0 271 0 271
+8 0 271 0 271
+8 0 271 0 271
+4 0 271
+3 0 271 0 271 1 0 0 1
+4 0 271
+4 0 271 0 271
+4 0 271 0 271
+4 0 271
+7 0 271 0 0 0 0 0 0 0 0 271
jcnd=271/271 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 432
+7 0 432 0 0 0 0 0 0 0 0 432
jcnd=432/432 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1144 0 0 1 0 0 1
+5 0 1144 1144
+4 0 1144 1144
+7 0 1144 0 0 0 0 0 0 0 0 1144
jcnd=1144/1144 +16 0 
* 0 
+16 0 1144 0 1144
+5 0 1144 0 0 0 0 0 0 0 0 1144
+6 0 1144
+3 0 1144
jump=1144 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1144 1144 0 1 0 0 1
+4 0 1144
+2 0 1144 0 0 0 0 0 0 0 0 1144
+6 0 1144 1144
+7 0 1144 0 0 0 0 0 0 0 0 1144
jcnd=1144/1144 +15 0 
* 0 
+15 0 1144 0 1144 1 0 0 1
+4 0 1144 0 0 0 0 0 0 0 0 1144 2
+6 0 1144
+4 0 1144 1144
+1 0 1144 1144
+1 0 1144 1144
+2 0 1144 1144
+2 0 1144 1144
+2 0 1144 1144
+2 0 1144 1144
0x3877c78bf0 0 432 0 0 1 0 0 1
+3 0 432 0 432
+4 0 432
+3 0 432
+4 0 432 0 432 1 0 0 1
+4 0 432
jump=432 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1144 1144 0 1 1 0 1 1
+4 0 1144 0 0 1 0 0 1
+7 0 1144
+4 0 1144
+3 0 1144
+3 0 1144 0 0 0 0 0 0 0 0 1144
jcnd=1144/1144 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1258 0 0 1 0 0 1
+7 0 1258
+3 0 1258
+3 0 1258 1258 0 0 1 0 0 1
+4 0 1258
+4 0 1258 0 0 0 0 0 0 0 0 0 0 1258 156
jump=152 0x3877c89be8 0 
* 0 
jump=162 0x3877c89bd0 0 
* 0 
jump=152 0x3877c89bb8 0 
* 0 
jump=152 +11 0 
* 0 
jump=156 0x3877c89c48 0 
* 0 
jump=162 0x3877c89c30 0 
* 0 
jump=160 0x3877c89c18 0 
* 0 
jump=162 0x3877c89c00 0 
* 0 
+11 0 152 152
+3 0 152
+4 0 152
+4 0 152 152
+4 0 152
+4 0 152 0 152
+4 0 152
+9 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-40 0 12150 12150
+4 0 12150 0 12150 0 0 3 0 0 3
+4 0 12150 12150
+4 0 12150 0 12150 0 0 15 0 0 15
+4 0 12150 12150
+4 0 12150 0 12150 0 0 19 0 0 19
+4 0 12150 12150
+4 0 12150 0 12150
+4 0 12150
+4 0 12150
+4 0 12150 0 0 0 0 0 0 0 0 12150 784
jcnd=1222/12150 0x3877c89c60 0 
* 0 
-32 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162
jcnd=10/162 0x3877c89c60 0 
* 0 
-24 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
jcnd=8/160 0x3877c89c60 0 
* 0 
-16 0 162 162 0 1 0 0 1
+4 0 162 0 162
+4 0 162 0 0 1 0 0 1
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162 4
jcnd=10/162 0x3877c89c60 0 
* 0 
+6 0 11528
+4 0 11528 11528
+3 0 11528 0 11528 0 0 1 0 0 1
+3 0 11528 11528
+4 0 11528 0 11528 0 0 3 0 0 3
+4 0 11528 11528
+4 0 11528 0 11528 0 0 18 0 0 18
+4 0 11528 11528
+4 0 11528 0 11528
+4 0 11528
jump=11528 -80 0 
* 0 
-30 0 152 152
+3 0 152 0 152
+3 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152 0 0 1 0 0 1
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
-24 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
jump=162 -80 0 
* 0 
-16 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
+8 0 152 152
+3 0 152
+4 0 152 0 0 1 0 0 1
+4 0 152
+4 0 152
jump=152 -39 0 
* 0 
+9 0 162
+3 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+3 0 162
+4 0 162
jump=162 -72 0 
* 0 
+8 0 152
+4 0 152 152
+3 0 152 0 0 0 0 0 0 0 0 152
+2 0 152
+4 0 152
jump=152 -99 0 
* 0 
+11 0 162 162 0 1 0 0 1
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b78 0 
* 0 
+9 0 160 160
+3 0 160
+4 0 160
+4 0 160
+4 0 160
jump=160 0x3877c89b70 0 
* 0 
+9 0 162 162
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b68 0 
* 0 
+9 0 156 156
+3 0 156
+4 0 156
+4 0 156
+4 0 156
jump=156 0x3877c89b60 0 
* 0 
+9 0 1258 0 1258 1 0 0 1
+3 0 1258 1258

fn=(104) alloc_perturb
0x3877c77180 0 1134 1134 0 1 0 0 1
+6 0 1134
+2 0 1134 0 0 0 0 0 0 0 0 1134 1
+2 0 1134 1134

fn=(38) _int_malloc
0x3877c79a00 0 1268 0 1268 1 0 0 1
+2 0 1268
+3 0 1268 0 1268
+2 0 1268 0 1268
+2 0 1268 0 1268 0 0 1 0 0 1
+2 0 1268
+3 0 1268 0 1268
+1 0 1268 0 1268
+1 0 1268
+4 0 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268
+4 0 1268
+6 0 1268
+3 0 1268
+4 0 1268
+4 0 1268
+4 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268 0 1 1 0 1 1
+7 0 1268 0 0 0 0 0 0 0 0 1268 7
jcnd=1146/1268 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1134
+4 0 1134 1134
+1 0 1134 1134
+1 0 1134 1134
+2 0 1134 1134
+2 0 1134 1134
+2 0 1134 1134
+2 0 1134 1134
+7 0 1163
+7 0 1163 0 0 1 0 0 1 0 0 1163 7
jcnd=260/1163 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 4 0 0 4
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 260 0 0 1 0 0 1
+3 0 260
+4 0 260
+4 0 260 0 0 1 0 0 1 0 0 260
jcnd=260/260 0x3877c7a1a4 0 
* 0 
+30 0 260 260
+6 0 260
+5 0 260 0 0 0 0 0 0 0 0 260 1
jcnd=259/260 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 911 244 193 8 3 0 8 3 0 187 19
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1162 0 0 1 0 0 1
+3 0 1162
+3 0 1162
+3 0 1162
+4 0 1162
+3 0 1162
+4 0 1162 0 1162
+5 0 1162
+3 0 1162 0 1162
+4 0 1162 0 1162
+4 0 1162 0 1162
+5 0 1162
+3 0 1162
+3 0 1162
+3 0 1162
+3 0 1162
+4 0 1162
+4 0 1162 0 0 1 0 0 1
+4 0 1162 0 1162
+4 0 1162
+4 0 1162 0 1162
+5 0 1162 0 1162
+5 0 1162
+3 0 1162
+3 0 1162 0 1162
+5 0 1162
+5 0 1162
+3 0 1162 0 1162
+4 0 1162 0 1162
+4 0 1162
+6 0 1162 0 1162
+4 0 1162 0 1162
+5 0 1162 0 0 1 0 0 1
+3 0 1162
+3 0 1162
+3 0 1162
jump=1162 +87 0 
* 0 
+8 0 907
+3 0 907
+4 0 907
+2 0 907
+2 0 907
+3 0 907
+3 0 907
+3 0 907
+2 0 907
+2 0 907
+5 0 907
+2 0 907 907 0 0 2 0 0 2
+4 0 907
+3 0 907
+4 0 907 0 907
+4 0 907 0 907
+8 0 907
+7 0 907 0 907
+4 0 907 0 907 0 0 1 0 0 1
+4 0 907 0 907
+4 0 907 0 0 0 0 0 0 0 0 907
-38 0 261
+3 0 261
+4 0 261 0 261
+4 0 261 0 261
+8 0 261
+7 0 261 0 261
+4 0 261 0 261
+4 0 261 0 261
+4 0 261 0 0 0 0 0 0 0 0 261
+6 0 2331 2331 0 1 0 0 1
+4 0 2331
+3 0 2331 0 0 0 0 0 0 0 0 2331 149
jcnd=1114/2331 0x3877c79ef0 0 
* 0 
+6 0 1217 1217
+4 0 1217 1217
+4 0 1217
+4 0 1217 0 0 0 0 0 0 0 0 1217
+6 0 1217 1217 0 1 1 0 1 1
+7 0 1217 0 0 0 0 0 0 0 0 1217
+6 0 1217
+4 0 1217
+7 0 1217 0 0 0 0 0 0 0 0 1217 6
jcnd=307/1217 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1197
+3 0 1197 0 1197
+4 0 1197 0 1197
+5 0 1197 0 0 0 0 0 0 0 0 1197 17
jcnd=29/1197 0x3877c7a090 0 
* 0 
+6 0 1168
+7 0 1168 0 0 0 0 0 0 0 0 1168 112
jcnd=907/1168 0x3877c79c50 0 
* 0 
+6 0 261 0 0 1 0 0 1
+3 0 261
+4 0 261
+4 0 261 0 0 0 0 0 0 0 0 261
+6 0 261
+3 0 261
+4 0 261
+2 0 261
+2 0 261
+3 0 261
+3 0 261
+8 0 261
+3 0 261
+2 0 261
+2 0 261
+4 0 261 261 0 0 2 0 0 2
+4 0 261
+3 0 261 0 0 1 0 0 1 0 0 261 9
jcnd=261/261 0x3877c79e15 0 
* 0 
0x3877c79e15 0 261 0 261
+4 0 261 0 261
+4 0 261
+3 0 261
jump=261 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 6
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 1114 0 0 1 0 0 1
+7 0 1114
+3 0 1114 0 0 0 0 0 0 0 0 1114 4
jcnd=252/1114 0x3877c7a0b0 0 
* 0 
+6 0 1090 1090 0 1 0 0 1
+4 0 1090
+3 0 1090
+3 0 1090
+2 0 1090
+4 0 1090
+3 0 1090
+3 0 1090
+2 0 1090
+2 0 1090
+2 0 1090
+2 0 1090 1090 0 0 1 0 0 1
+8 0 1090
+5 0 1090
+5 0 1090
+2 0 1090 0 0 0 0 0 0 0 0 1090
-2 0 521
+2 0 521 0 0 0 0 0 0 0 0 521
+2 0 1611
+2 0 1611 0 0 0 0 0 0 0 0 1611 33
jcnd=901/1611 +64 0 
* 0 
+2 0 710
+8 0 710
+3 0 710
+3 0 710 0 0 0 0 0 0 0 0 710 1
jcnd=1/710 0x3877c79fc0 0 
* 0 
-6 0 857
+3 0 857
+3 0 857 0 0 0 0 0 0 0 0 857 11
jcnd=433/857 0x3877c79fc0 0 
* 0 
+2 0 1133
+2 0 1133 1133
+8 0 1133
+2 0 1133 0 0 0 0 0 0 0 0 1133 26
jcnd=857/1133 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
+2 0 276
+2 0 276
+4 0 276
+2 0 276
+2 0 276 0 0 0 0 0 0 0 0 276 6
jcnd=214/276 -8 0 
* 0 
-8 0 8430
+4 0 8430
+2 0 8430
+2 0 8430 0 0 0 0 0 0 0 0 8430 575
jcnd=7443/8430 -8 0 
* 0 
-2 0 901 0 0 1 0 0 1
+2 0 901 0 0 0 0 0 0 0 0 901 26
jcnd=773/901 -8 0 
* 0 
+2 0 1177 1177 0 0 13 0 0 13
+4 0 1177 0 0 1 0 0 1
+3 0 1177 0 0 0 0 0 0 0 0 1177 475
jcnd=656/1177 0x3877c7a1cf 0 
* 0 
+6 0 521
+2 0 521
+4 0 521
+2 0 521
+2 0 521
+2 0 521 0 521
+8 0 521
jump=521 0x3877c79f30 0 
* 0 
+37 0 434 434 0 1 0 0 1
+5 0 434 434
+4 0 434
+4 0 434 434
+5 0 434 0 0 0 0 0 0 0 0 434
jcnd=434/434 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 252 252
+4 0 252
+4 0 252
+2 0 252
+5 0 252 252 0 1 0 0 1
+4 0 252
+3 0 252 0 0 0 0 0 0 0 0 252 4
jcnd=228/252 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 260 0 0 1 0 0 1
+3 0 260 0 260
+4 0 260
jump=260 0x3877c79b99 0 
* 0 
+36 0 656 656 0 1 1 0 1 1
+4 0 656 656
+4 0 656
+3 0 656 656
+4 0 656
+4 0 656
+3 0 656
+3 0 656 656
+4 0 656 0 0 0 0 0 0 0 0 656
+6 0 656 656
+4 0 656 0 0 0 0 0 0 0 0 656
+6 0 656 656 0 1 0 0 1
+8 0 656 0 656
+4 0 656 0 656
+4 0 656 0 0 0 0 0 0 0 0 656 11
jcnd=418/656 +38 0 
* 0 
+2 0 238 238 0 0 2 0 0 2
+4 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
+2 0 238 238
+5 0 238 0 0 0 0 0 0 0 0 238
+6 0 238 238
+4 0 238 0 238
+4 0 238 238
+4 0 238 0 238
+4 0 238
+4 0 238 0 0 0 0 0 0 0 0 238
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 635 635
+4 0 635 635 0 1 0 0 1
+4 0 635 0 0 0 0 0 0 0 0 635
+6 0 635
+4 0 635
+7 0 635 0 635 0 0 7 0 0 7
+4 0 635 0 635
+4 0 635 0 635
+4 0 635 0 635
+4 0 635 0 0 0 0 0 0 0 0 635 4
jcnd=170/635 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 170
+7 0 170 0 0 0 0 0 0 0 0 170
jcnd=170/170 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 644
+7 0 644 0 644
+4 0 644
+3 0 644
+3 0 644
+4 0 644
+3 0 644
+4 0 644
+3 0 644
+3 0 644
+4 0 644 0 644
+4 0 644 0 644 0 0 1 0 0 1
+4 0 644
jump=644 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 680
+4 0 680 0 0 1 0 0 1
+3 0 680
+3 0 680 0 680
cfn=(104)
calls=680 0x3877c77180 0 
* 0 2720 1360 0 0 0 0 0 0 0 680
+5 0 680
+3 0 680
jump=680 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 434 0 0 1 0 0 1
+7 0 434
+2 0 434
+4 0 434
+3 0 434
+3 0 434 0 434
+5 0 434
+3 0 434
+4 0 434
+3 0 434 0 0 1 0 0 1
+4 0 434
+4 0 434
+3 0 434
+4 0 434 0 434
+4 0 434 0 434 0 0 17 0 0 17
+4 0 434
+3 0 434
+3 0 434 0 434
cfn=(104)
calls=434 0x3877c77180 0 
* 0 1736 868 0 0 0 0 0 0 0 434 1
+5 0 434
+3 0 434
jump=434 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1268 0 1268 1 0 0 1
+5 0 1268 0 1268
+5 0 1268
+3 0 1268 0 1268
+5 0 1268
+4 0 1268 1268 0 0 1 0 0 1
+7 0 1268 1268 0 0 1 0 0 1
+3 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268 2
+6 0 1268 1268 0 0 1 0 0 1
+7 0 1268 1268 0 1 1 0 1 1
+4 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
+2 0 1268 1268 0 0 1 0 0 1
+3 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 +97 0 
* 0 
+18 0 1268
+3 0 1268
+3 0 1268 0 1268
cfn=(38)
calls=1268 0x3877c79a00 0 
* 0 288526 35580 41897 45 34 50 45 34 50 44582 1982
+5 0 1268
+3 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
+2 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
+2 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268 23
+2 0 1268 1268
+7 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 +13 0 
* 0 
+13 0 1268 0 1268
+2 0 1268 0 0 0 0 0 0 0 0 1268 14
+6 0 1268
+3 0 1268 1268
+4 0 1268 1268
+5 0 1268 1268
+5 0 1268
+4 0 1268 1268
+1 0 1268 0 0 1 0 0 1
+5 0 1268 1268 0 0 1 0 0 1
+7 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 +14 0 
* 0 
+14 0 1268 0 1268 1 0 0 1
+3 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268
jump=1268 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1268 0 1268 1 0 0 1
+2 0 1268
+3 0 1268
+3 0 1268 0 1268
+2 0 1268
+3 0 1268 0 1268
+1 0 1268
+3 0 1268 0 1268
+1 0 1268
+3 0 1268
+4 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268
+4 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268 7
jcnd=10/1268 0x3877c838d1 0 
* 0 
+2 0 1258
+3 0 1258
+3 0 1258
+3 0 1258
+3 0 1258
+3 0 1258 0 0 0 0 0 0 0 0 1258
jcnd=1258/1258 +41 0 
* 0 
+41 0 1258 0 0 1 0 0 1
+3 0 1258 0 0 0 0 0 0 0 0 1258
jcnd=1258/1258 0x3877c839c0 0 
* 0 
+24 0 1258
+3 0 1258
+4 0 1258
+3 0 1258
+3 0 1258
+3 0 1258
+3 0 1258
+3 0 1258 0 0 0 0 0 0 0 0 1258 626
jcnd=638/1258 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 630
+10 0 630 630 0 0 2 0 0 2
+3 0 630
+4 0 630 0 630
+3 0 630
+4 0 630
+4 0 630 0 0 0 0 0 0 0 0 630
jcnd=630/630 -18 0 
* 0 
-18 0 1946 1946
+3 0 1946
+4 0 1946 0 1946
+3 0 1946
+4 0 1946
+4 0 1946 0 0 0 0 0 0 0 0 1946 11
jcnd=1316/1946 -18 0 
* 0 
+2 0 1268
+4 0 1268
+3 0 1268 1268
+1 0 1268 1268
+1 0 1268 1268
+2 0 1268 1268 0 1 0 0 1
+2 0 1268 1268
0x3877c839c0 0 1258 0 0 1 0 0 1
+3 0 1258
+3 0 1258
+3 0 1258
+4 0 1258 0 1258 0 0 1 0 0 1
cfn=(284)
calls=1258 0x3877c89b20 0 
* 0 273910 101612 99096 6 1 60 6 1 60 13100 788 1258 156
+5 0 1258
jump=1258 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1268 1268 0 1 1 0 1 1
+7 0 1268 1268 0 0 1 0 0 1
+3 0 1268
+3 0 1268 0 0 1 0 0 1 0 0 1268
+6 0 1268
+3 0 1268 0 0 0 0 0 0 0 0 1268
+6 0 1268 1268
+4 0 1268
+4 0 1268
+2 0 1268 0 0 0 0 0 0 0 0 1268 2
+2 0 1268
+2 0 1268
+7 0 1268 0 0 0 0 0 0 0 0 1268
jcnd=1268/1268 +14 0 
* 0 
+14 0 1268
+2 0 1268
cfn=(170)
calls=1268 0x3877c78650 0 
* 0 123105 32575 18585 19 2 0 19 2 0 29745 530

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 3 0 0 3
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 9330848 3810286 2203547 241 98 138 241 98 138 273273 4948 7598 156
