version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2504


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2959442461 - 2960305970
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1128 0 0 1 0 0 1
+3 0 1128 0 0 0 0 0 0 0 0 1128
+2 0 1128
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1128 0x3877c7b8b0 0 
* 0 125505 32095 16197 21 6 0 21 6 0 30717 477
* 0 1128 1128 0 1 1 0 1 1 0 0 0 1128

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1128 0 1128 1 0 0 1
+1 0 1128
+5 0 1128
+3 0 1128 0 1128
+1 0 1128
+4 0 1128 0 0 1 0 0 1
+3 0 1128
+4 0 1128
+3 0 1128 0 1128 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1128 0x3877c7aa50 0 
* 0 300705 43520 43365 46 38 48 46 38 48 50294 1682
* 0 1128 1128 0 1 1 0 1 1 0 0 0 1128
+5 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128
jcnd=1128/1128 +96 0 
* 0 
+96 0 1128 0 0 1 0 0 1
+4 0 1128 1128
+1 0 1128 1128
+1 0 1128 1128

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 636 0 636
+1 * 636
+3 * 636 0 636
+4 +1 636 636
+4 * 636 636
+1 * 636 636

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1112 0 1112 1 0 0 1
+1 * 1112
+3 * 1112 0 1112
+4 +1 1112 1112 0 1 0 0 1
+4 * 1112 1112
+1 * 1112 1112

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 636 0 636
+1 * 636
+3 * 636 0 636 0 0 1 0 0 1
+4 +1 636 636
+4 * 636 636
+1 * 636 636

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1112 0 1112 1 0 0 1
+1 * 1112
+3 * 1112
+4 * 1112 0 1112
+4 +1 1112
+4 * 1112
+3 * 1112 0 1112
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1112 0x404ffe 790 
* * 6672 3336 2224 1 0 0 1
+5 * 1112 1112
+3 * 1112 1112
+1 * 1112 1112

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1112 0 1112 1 0 0 1
+1 * 1112
+3 * 1112 0 1112
+4 +1 1112 1112
+4 * 1112 1112
+1 * 1112 1112

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1112 0 1112 1 0 0 1
+1 * 1112
+3 * 1112
+4 * 1112 0 1112
+4 +1 1112
+4 * 1112
+3 * 1112 0 1112 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1112 0x40500c 790 
* * 6672 3336 2224 1 0 0 1
+5 * 1112 1112
+3 * 1112 1112
+1 * 1112 1112

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 556 0 556
+1 * 556
+3 * 556 0 556
+4 * 556 0 556
+4 * 556 556
+4 * 556 556
+1 * 556 556

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 564 0 564 1 0 0 1
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 * 564 0 564
+4 +2 564 564
+4 * 564
+3 * 564 0 564
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=564 0x4048de +12 
* * 3384 1128 1128 1 0 0 1
+5 * 564 564
+4 * 564 0 0 1 0 0 1
+3 * 564
+2 * 564 0 0 0 0 0 0 0 0 564
jcnd=564/564 +7 +3 
* * 
+7 +3 564 564
+4 * 564
+4 * 564
+3 * 564 0 564
cob=(5)
cfi=(8)
cfn=(32)
calls=564 0x387e4bd0b0 0 
* * 161032 23733 22039 33 16 34 33 16 34 26204 857 564
* * 564 564 0 0 0 0 0 0 0 0 0 564
+5 +1 564 564
+1 * 564 564

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 556 0 556 1 0 0 1
+1 * 556
+3 * 556 0 556 0 0 1 0 0 1
+4 * 556 0 556
+4 * 556 556
+1 * 556 556

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 556 0 556 1 0 0 1
+1 * 556
+3 * 556 0 556
+4 * 556 0 556
+4 * 556 556
+1 * 556 556

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 556 0 556
+1 * 556
+3 * 556 0 556
+4 * 556 556
+1 * 556 556

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 564 0 564 1 0 0 1
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 * 564 0 564 1 0 0 1
+4 +2 564 564
+4 * 564
+3 * 564 0 564
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=564 0x404992 +12 
* * 3384 1128 1128 1 0 0 1
+5 * 564 564
+4 * 564
+3 * 564
+2 * 564 0 0 0 0 0 0 0 0 564
jcnd=564/564 +7 +3 
* * 
+7 +3 564 564
+4 * 564
+4 * 564
+3 * 564 0 564
cob=(5)
cfi=(8)
cfn=(32)
calls=564 0x387e4bd0b0 0 
* * 157721 24299 24710 17 23 15 17 23 15 25218 825 564
* * 564 564 0 1 1 0 1 1 0 0 0 564
+5 +1 564 564
+1 * 564 564

fn=(102)
0x4048de 113 580 0 580 1 0 0 1
+1 * 580
+3 * 580 0 580
+4 +1 580
+10 * 580 580
+1 * 580 580

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 278 0 278
+1 * 278
+3 * 278
+4 * 278 0 278
+4 * 278 0 278
+4 * 278 0 278
+4 +1 278 278
+4 * 278
+3 * 278
+5 * 278 0 278
cfi=(16)
cfn=(226)
calls=278 0x402d61 -20 
* * 1946 834 834
+5 * 278
+3 * 278 0 0 0 0 0 0 0 0 278
+2 * 278 278
+4 * 278 278 0 0 17 0 0 17
+2 * 278 0 278 0 0 9 0 0 9
+2 * 278 278
+1 * 278 278

fn=(28)
0x404992 113 580 0 580 1 0 0 1
+1 * 580
+3 * 580 0 580
+4 +1 580
+10 * 580 580
+1 * 580 580

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 556 0 556
+1 * 556
+3 * 556 0 556
+4 * 556 556
+1 * 556 556

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 278 0 278
+1 * 278
+3 * 278
+4 * 278 0 278
+4 * 278 0 278
+4 * 278 0 278
+4 +1 278 278
+4 * 278
+3 * 278
+5 * 278 0 278
cfi=(16)
cfn=(226)
calls=278 0x402d61 -20 
* * 1946 834 834
+5 * 278
+3 * 278 0 0 0 0 0 0 0 0 278 2
+2 * 278 278
+4 * 278 278 0 0 19 0 0 19
+2 * 278 0 278 0 0 3 0 0 3
+2 * 278 278
+1 * 278 278

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 564 0 564
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 * 564 0 564
+4 +1 564 564
+4 * 564
+3 * 564 0 564
cob=(5)
cfi=(8)
cfn=(164)
calls=564 0x387e4bb2f0 0 
* * 61584 15307 7141 23 6 0 23 6 0 14934 431 564
* * 564 564 0 1 1 0 1 1 0 0 0 564
+5 * 564 564
+1 * 564 564

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 564 0 564
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 * 564 0 564
+4 +1 564 564
+4 * 564
+3 * 564 0 564
cob=(5)
cfi=(8)
cfn=(164)
calls=564 0x387e4bb2f0 0 
* * 68433 17916 9056 0 1 0 0 1 0 16911 46 564
* * 564 564 0 0 0 0 0 0 0 0 0 564
+5 * 564 564
+1 * 564 564

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +2 556 556
+4 * 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=556 0x404484 107 
* * 259828 85644 82312 25 3 4 25 3 4 9648 611 1108 137
+5 * 556 556
+1 * 556 556

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +2 556 556 0 1 0 0 1
+4 * 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=556 0x404a36 450 
* * 244260 80084 76752 24 3 4 24 3 4 9648 611 1108 137
+5 * 556 556
+1 * 556 556

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +2 556 556
+4 * 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=556 0x40439c 107 
* * 259828 85644 82312 7 1 22 7 1 22 9648 596 1108
+5 * 556 556
+1 * 556 556

fn=(116)
0x40439c 107 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +10 556 556
+4 * 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=556 0x4047d7 -26 
* * 252044 82864 79532 7 1 22 7 1 22 9648 596 1108
+5 +1 556 556
+1 * 556 556

fn=(118)
0x4047d7 91 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +2 556 556
+4 * 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=556 0x4049e2 450 
* * 244260 80084 76752 7 1 22 7 1 22 9648 596 1108
+5 * 556 556
+1 * 556 556

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +10 556 556
+4 * 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(52)
calls=556 0x404829 -26 
* * 252044 82864 79532 25 3 4 25 3 4 9648 611 1108 137
+5 +1 556 556
+1 * 556 556

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 556 0 556 1 0 0 1
+1 * 556
+3 * 556 0 556
+1 * 556
+4 * 556 0 556
+4 +2 556 556
+4 * 556 556
+4 * 556
+3 * 556 556
+4 * 556 556
+3 * 556
+3 * 556
+3 * 556
+4 * 556
+3 * 556 556
+4 * 556 556
+3 -1 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=556 0x403d98 +11 
* * 83118 23252 14502 1 1 0 1 1 0 17264 37 1112
+5 +1 556 556
+4 * 556
+3 * 556 0 556
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=556 0x403296 -82 
* * 12788 4448 4448 1 0 0 1
+5 * 556
jump=556 +28 * 
* * 
+28 * 556
+4 * 556 556
+1 * 556 556
+1 * 556 556

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2256 0 2256 1 0 0 1
+1 * 2256
+3 * 2256 0 2256 0 0 1 0 0 1
+4 +1 2256 2256
+4 * 2256 2256 0 1 1 0 1 1
+4 * 2256
+3 * 2256 2256
+4 * 2256 2256
+3 * 2256
+3 * 2256
+3 * 2256
+4 * 2256 2256
+1 * 2256 2256

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 +2 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=556 0x404236 -14 
* * 179008 31189 31038 23 19 8 23 19 8 26013 785 1112
+5 * 556 556
+4 * 556 0 556
+3 +1 556 556
+4 * 556 556 0 1 0 0 1
+3 * 556 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+3 * 556 556
+4 * 556
+4 * 556
+3 * 556 556
+4 * 556 0 556
+4 +1 556 556
+1 * 556 556

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 +2 556 556
+4 * 556 556 0 1 0 0 1
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=556 0x403fbe -14 
* * 181508 30393 28188 26 8 29 26 8 29 26829 806 1112
+5 * 556 556
+4 * 556 0 556
+3 +1 556 556
+4 * 556 556
+3 * 556 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+3 * 556 556
+4 * 556
+4 * 556
+3 * 556 556
+4 * 556 0 556
+4 +1 556 556
+1 * 556 556

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 278 0 278
+1 * 278
+3 * 278 0 0 1 0 0 1
+4 * 278 0 278
+4 * 278 0 278
+4 +2 278 278
+4 * 278 278
+4 * 278 278
+4 * 278 278
+4 * 278
+3 * 278 0 0 0 0 0 0 0 0 278
jcnd=8/278 +51 +10 
* * 
+2 +3 270 270
+4 * 270 270
+4 * 270 270
+4 -1 270 270
+4 * 270
+3 * 270
+3 * 270 0 270
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=270 0x4036b1 215 
* * 10260 3510 3780 0 17 5 0 17 5 270
+5 +2 270 270
+4 * 270 270
+4 * 270
+4 * 270 270
+4 * 270 0 270
+4 * 270
jump=270 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11862 3694 3215 18 5 29 18 5 29 692 61 47
+5 +2 278 278
+1 * 278 278

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1136 0 1136 1 0 0 1
+1 * 1136
+3 * 1136 0 1136 1 0 0 1
+4 +1 1136 1136
+4 * 1136 1136
+1 * 1136 1136

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+3 * 556 0 556
+4 * 556
+4 * 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=556 0x404380 726 
* * 5560 2780 2224
+5 * 556 556
+4 * 556 556
+1 * 556 556

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 556 0 556
+1 * 556
+3 * 556 0 556
+1 * 556
+4 * 556 0 556 1 0 0 1
+4 +2 556 556
+4 * 556
+3 * 556 0 556
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=556 0x40325e 113 
* * 3336 1668 1112
+5 * 556
+3 * 556 556
+4 * 556 556
+4 * 556 556
+4 * 556 556
+3 -1 556
+3 * 556
+3 * 556 0 556
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=556 0x40326c 148 
* * 17236 5560 6672 4 0 0 4
+5 +1 556 556
+4 * 556
+3 * 556 0 556
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=556 0x4031ec 159 
* * 104658 31224 19818 27 6 0 27 6 0 15296 425 1112
+5 * 556
jump=556 +28 * 
* * 
+28 * 556 0 0 1 0 0 1
+4 * 556 556
+1 * 556 556
+1 * 556 556

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 564 0 564 1 0 0 1
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 * 564 0 564
+4 +2 564 564
+5 * 564 0 0 0 0 0 0 0 0 564
+2 +1 564 564
+4 * 564 564
+4 * 564 564
+4 * 564
+3 * 564
+3 * 564 0 564
cfi=(5)
cfn=(160)
calls=564 0x4044d6 -65 
* * 68352 17563 9961 24 7 0 24 7 0 14934 431 1128
+5 +1 564 564
+1 * 564 564

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 556 0 556
+1 * 556
+3 * 556 0 556
+1 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=556 0x4043ca -45 
* * 20016 7228 7784 4 0 4 4 0 4
+5 +1 556 556 0 1 0 0 1
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(20)
calls=556 0x404412 +43 
* * 192908 37861 34930 24 19 8 24 19 8 26013 785 1112
+5 * 556
jump=556 +28 * 
* * 
+28 * 556
+4 * 556 556
+1 * 556 556
+1 * 556 556

fn=(14)
0x4043ca 90 556 0 556 1 0 0 1
+1 * 556
+3 * 556
+4 * 556 0 556 0 0 1 0 0 1
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=556 0x404804 +24 
* * 10008 3336 3892 2 0 1 2 0 1
+5 * 556 556
+4 * 556 0 556 0 0 2 0 0 2
+7 * 556 556
+4 * 556 0 556 1 0 0 1
+8 * 556 556
+4 * 556 0 556
+8 +1 556 556
+1 * 556 556

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 556 0 556 1 0 0 1
+1 * 556
+3 * 556 0 556
+2 * 556 0 556
+2 * 556 0 556
+1 * 556 0 0 1 0 0 1
+4 * 556 0 556
+4 * 556 0 556
+4 +2 556 556
+4 * 556
+3 * 556 0 556
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=556 0x4039fc 117 
* * 3336 1668 1112 2 0 0 2
+5 * 556
+3 * 556 0 556
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=556 0x4039ed -88 
* * 3336 1668 1112
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(2)
calls=556 0x402d74 645 
* * 7228 3336 1112
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556
+3 * 556
+3 * 556 0 556 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=556 0x403a0a 134 
* * 227656 48185 43756 33 8 29 33 8 29 26829 806 1112
+5 +4 556 556
+4 * 556
+3 * 556 0 556
cfn=(106)
calls=556 0x40325e 113 
* * 3336 1668 1112 1 0 0 1
+5 * 556
+3 * 556 556
+4 * 556 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=556 0x403a98 565 
* * 13900 5560 4448 2 0 0 2
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(112)
calls=556 0x403a68 547 
* * 13900 5560 4448
+5 * 556
+3 * 556
+3 * 556
+3 * 556
+3 * 556 0 556
cfi=(11)
cfn=(114)
calls=556 0x403ac9 -60 
* * 268168 88424 85648 7 1 22 7 1 22 9648 596 1108
+5 -3 556 556
+4 * 556 0 556
+4 * 556
jump=556 +28 +4 
* * 
+28 +4 556
+4 * 556 556
+1 * 556 556
+2 * 556 556
+2 * 556 556
+1 * 556 556

fn=(188)
0x403d98 171 564 0 564 1 0 0 1
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 * 564 0 564
+4 +2 564 564
+5 * 564 0 0 0 0 0 0 0 0 564 8
+2 +1 564 564
+4 * 564 564
+4 * 564 564
+4 * 564
+3 * 564
+3 * 564 0 564
cfi=(5)
cfn=(190)
calls=564 0x40452a -65 
* * 75201 20172 11876 0 1 0 0 1 0 16911 46 1128
+5 +1 564 564
+1 * 564 564

fn=(22)
0x404236 167 564 0 564 1 0 0 1
+1 * 564
+3 * 564
+4 * 564 0 564 1 0 0 1
+4 * 564 0 564
+4 0 564 564
+5 0 564 0 0 0 0 0 0 0 0 564
+2 0 564 564
+4 0 564 564
+4 0 564
+5 0 564
+3 0 564
+3 0 564 0 564
fi=(6) ???
cfi=(5)
cfn=(26)
calls=564 0x404730 99 
* 0 172385 28811 29222 21 24 15 21 24 15 25782 825 1128
+5 0 564
fi=(6)
jump=564 +7 0 
* 0 
+7 0 564 564
+1 0 564 564

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 556 0 556 1 0 0 1
+1 * 556
+3 * 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+4 * 556 0 556
+4 * 556
+4 * 556 0 0 1 0 0 1
+4 * 556
+3 * 556
+3 * 556 0 556
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=556 0x404468 726 
* * 5560 2780 2224 1 0 0 1
+5 * 556 556
+4 * 556 556
+1 * 556 556

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+3 * 556 0 556
+4 * 556
+4 * 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfi=(10)
cfn=(44)
calls=556 0x404468 726 
* * 5560 2780 2224
+5 * 556 556
+4 * 556 556
+1 * 556 556

fn=(86)
0x403a0a 134 556 0 556
+1 * 556
+3 * 556 0 556
+1 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=556 0x4042e2 -45 
* * 20016 7228 7784 5 0 0 5
+5 +1 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556 1 0 0 1
cfn=(94)
calls=556 0x40432a +43 
* * 195408 37065 32080 27 8 29 27 8 29 26829 806 1112
+5 * 556
jump=556 +28 * 
* * 
+28 * 556
+4 * 556 556
+1 * 556 556
+1 * 556 556

fn=(88)
0x4042e2 90 556 0 556 1 0 0 1
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=556 0x4047b2 +24 
* * 10008 3336 3892 3 0 0 3
+5 * 556 556
+4 * 556 0 556
+7 * 556 556
+4 * 556 0 556
+8 * 556 556
+4 * 556 0 556
+8 +1 556 556
+1 * 556 556

fn=(156)
0x4031ec 159 556 0 556 1 0 0 1
+1 * 556
+3 * 556 0 556
+1 * 556
+4 * 556 0 556
+4 +2 556 556
+4 * 556 556 0 1 0 0 1
+4 * 556
+3 * 556 556
+4 * 556 556
+3 * 556
+3 * 556
+3 * 556
+4 * 556
+3 * 556 556
+4 * 556 556
+3 -1 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(158)
calls=556 0x403ce6 +11 
* * 76302 20660 12590 24 6 0 24 6 0 15296 425 1112
+5 +1 556 556
+4 * 556
+3 * 556 0 556
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=556 0x4031b8 -82 
* * 12788 4448 4448 1 0 0 1
+5 * 556
jump=556 +28 * 
* * 
+28 * 556
+4 * 556 556
+1 * 556 556
+1 * 556 556

fn=(172)
0x4031b8 79 556 0 556 1 0 0 1
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 556
+4 * 556
+3 * 556 0 556
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=556 0x403ccc +42 
* * 7784 2780 2780
+5 * 556 556
+1 * 556 556

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1144 0 1144 1 0 0 1
+1 * 1144
+3 * 1144 0 1144
+4 +1 1144 1144
+4 * 1144 1144 0 0 2 0 0 2
+4 * 1144
+3 * 1144 1144
+4 * 1144 1144
+3 * 1144
+3 * 1144
+3 * 1144
+4 * 1144 1144
+1 * 1144 1144

fn=(106)
0x40325e 113 1136 0 1136 1 0 0 1
+1 * 1136
+3 * 1136 0 1136
+4 +1 1136 1136
+4 * 1136 1136
+1 * 1136 1136

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 572 0 572 1 0 0 1
+1 * 572
+3 * 572 0 572 0 0 1 0 0 1
+4 +1 572 572
+4 * 572 572
+1 * 572 572

fn=(82)
0x4039fc 117 572 0 572 1 0 0 1
+1 * 572
+3 * 572 0 572 1 0 0 1
+4 +1 572 572
+4 * 572 572
+1 * 572 572

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 278 0 278
+1 * 278
+3 * 278
+4 * 278 0 278
+4 * 278 0 278
+4 +2 278 278
+4 * 278 278
+4 * 278 278
+4 * 278 278
+4 * 278
+3 * 278 0 0 0 0 0 0 0 0 278 9
jcnd=8/278 +51 +10 
* * 
+2 +3 270 270
+4 * 270 270
+4 * 270 270
+4 -1 270 270
+4 * 270
+3 * 270
+3 * 270 0 270
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=270 0x403373 215 
* * 10260 3510 3780 0 18 2 0 18 2 270 2
+5 +2 270 270
+4 * 270 270
+4 * 270
+4 * 270 270
+4 * 270 0 270
+4 * 270
jump=270 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12640 3907 3391 35 10 9 35 10 9 853 62 47
+5 +2 278 278
+1 * 278 278

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 556 0 556 1 0 0 1
+1 * 556
+3 * 556 0 556
+2 * 556 0 556
+2 * 556 0 556
+1 * 556
+4 * 556 0 556 1 0 0 1
+4 * 556 0 556
+4 +2 556 556
+4 * 556
+3 * 556 0 556
cfn=(6)
calls=556 0x403b08 117 
* * 3336 1668 1112 1 0 1 1 0 1
+5 * 556
+3 * 556 0 556
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=556 0x403afa -88 
* * 3336 1668 1112 1 0 0 1
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(10)
calls=556 0x402f54 645 
* * 7228 3336 1112 1 1 0 1 1
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556
+3 * 556
+3 * 556 0 556
cfn=(12)
calls=556 0x403b16 134 
* * 225156 48981 46606 29 19 12 29 19 12 26013 785 1112
+5 +4 556 556 0 1 0 0 1
+4 * 556
+3 * 556 0 556
cfn=(40)
calls=556 0x40333c 113 
* * 3336 1668 1112 2 0 0 2
+5 * 556
+3 * 556 556
+4 * 556 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(42)
calls=556 0x403ba4 565 
* * 13900 5560 4448 3 0 0 3
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(46)
calls=556 0x403b74 547 
* * 13900 5560 4448
+5 * 556
+3 * 556
+3 * 556
+3 * 556
+3 * 556 0 556 1 0 0 1
cfi=(11)
cfn=(48)
calls=556 0x403bd5 -60 
* * 268168 88424 85648 26 3 4 26 3 4 9648 611 1108 137
+5 -3 556 556
+4 * 556 0 556
+4 * 556
jump=556 +28 +4 
* * 
+28 +4 556
+4 * 556 556
+1 * 556 556
+2 * 556 556
+2 * 556 556
+1 * 556 556

fn=(108)
0x403a98 565 556 0 556 1 0 0 1
+1 * 556
+3 * 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+4 * 556 0 556
+4 * 556
+4 * 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfi=(10)
cfn=(110)
calls=556 0x404380 726 
* * 5560 2780 2224 1 0 0 1
+5 * 556 556
+4 * 556 556
+1 * 556 556

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 556 0 556
+1 * 556
+3 * 556 0 556
+1 * 556
+4 * 556 0 556 1 0 0 1
+4 +2 556 556
+4 * 556
+3 * 556 0 556
cfn=(40)
calls=556 0x40333c 113 
* * 3336 1668 1112
+5 * 556
+3 * 556 556
+4 * 556 556
+4 * 556 556
+4 * 556 556
+3 -1 556
+3 * 556
+3 * 556 0 556
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=556 0x40334a 148 
* * 17236 5560 6672 2 0 0 2
+5 +1 556 556
+4 * 556
+3 * 556 0 556
cfn=(186)
calls=556 0x4032ca 159 
* * 111474 33816 21730 3 1 0 3 1 0 17264 37 1112
+5 * 556
jump=556 +28 * 
* * 
+28 * 556 0 0 1 0 0 1
+4 * 556 556
+1 * 556 556
+1 * 556 556

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 564 0 564 1 0 0 1
+1 * 564 0 0 1 0 0 1
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 0 564 564
+5 0 564 0 0 0 0 0 0 0 0 564
+2 0 564 564
+4 0 564 564
+4 0 564
+5 0 564
+3 0 564
+3 0 564 0 564
fi=(6)
cfi=(5)
cfn=(100)
calls=564 0x40461a 99 
* 0 175696 28245 26551 36 16 34 36 16 34 26768 857 1128
+5 0 564
fi=(6)
jump=564 +7 0 
* 0 
+7 0 564 564
+1 0 564 564

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 117733 0 117733
+1 * 117733
+3 * 117733 0 117733
+4 * 117733 0 117733
+4 +1 117733 117733
+4 * 117733 117733
+3 * 117733 117733
+4 * 117733
+4 * 117733
+3 * 117733 117733
+1 * 117733 117733

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 117733 0 117733
+1 * 117733
+3 * 117733 0 117733 1 0 0 1
+4 * 117733 0 117733
+4 +1 117733 117733
+4 * 117733 117733
+3 * 117733 117733
+4 * 117733
+4 * 117733
+3 * 117733 117733
+1 * 117733 117733

fn=(192)
0x403296 79 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 556
+4 * 556
+3 * 556 0 556
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=556 0x403d7e +42 
* * 7784 2780 2780 1 0 0 1
+5 * 556 556
+1 * 556 556

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(54)
0x404a36 450 556 0 556
+1 * 556
+3 * 556 0 556
+1 * 556
+4 * 556 0 556 1 0 0 1
+4 * 556 0 556
+4 * 556 0 556
+4 +10 556 556
+4 * 556
+3 * 556 0 556
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=556 0x404c38 288 
* * 8340 3336 2780 3 0 0 3
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(56)
calls=556 0x404c38 288 
* * 8340 3336 2780
+5 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=556 0x404c52 -36 
* * 215348 70076 66744 20 3 4 20 3 4 9648 611 1108 137
+5 +1 556
+4 * 556 556
+1 * 556 556
+1 * 556 556

fn=(60)
0x404c52 424 556 0 556
+1 * 556
+3 * 556 0 556
+2 * 556 0 556
+1 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +4 556 556
+4 * 556
+3 * 556 0 556
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=556 0x40492d 277 
* * 8340 3336 2780 2 0 0 2
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=556 0x404d9d 277 
* * 13900 5004 4448 2 0 1 2 0 1
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(66)
calls=556 0x404d9d 277 
* * 13900 5004 4448
+5 * 556
+3 * 556
+3 * 556
+3 * 556 0 556
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=556 0x404db7 -49 
* * 163640 52840 49508 15 3 3 15 3 3 9648 611 1108 137
+5 +1 556
+4 * 556 556
+1 * 556 556
+2 * 556 556
+1 * 556 556

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 604 0 604 1 0 0 1
+1 * 604
+3 * 604
+4 * 604 0 604
+4 +1 604 604
+4 * 604
+3 * 604 0 604 1 0 0 1
cfi=(13)
cfn=(64)
calls=604 -33 -66 
* * 3624 1812 1208
+5 * 604 604
+1 * 604 604

fn=(66)
0x404d9d 277 1112 0 1112
+1 * 1112
+3 * 1112
+4 * 1112 0 1112
+4 +1 1112 1112
+4 * 1112
+3 * 1112 0 1112
cfi=(13)
cfn=(68)
calls=1112 0x404f1a -58 
* * 17792 6672 5560 2 0 1 2 0 1
+5 * 1112 1112
+1 * 1112 1112

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 556 0 556
+1 * 556
+3 * 556 0 556
+1 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +10 556 556
+4 * 556
+3 * 556 0 556
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=556 0x404bc6 288 
* * 8340 3336 2780 3 0 0 3
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(122)
calls=556 0x404bc6 288 
* * 8340 3336 2780
+5 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=556 0x404be0 -36 
* * 215348 70076 66744 4 1 22 4 1 22 9648 596 1108
+5 +1 556
+4 * 556 556
+1 * 556 556
+1 * 556 556

fn=(128)
0x404878 277 604 0 604
+1 * 604
+3 * 604
+4 * 604 0 604 1 0 0 1
+4 +1 604 604
+4 * 604
+3 * 604 0 604
cfi=(13)
cfn=(130)
calls=604 -33 -66 
* * 3624 1812 1208 0 0 1 0 0 1
+5 * 604 604
+1 * 604 604

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1112 0 1112
+1 * 1112
+3 * 1112
+4 * 1112 0 1112
+4 +1 1112 1112
+4 * 1112
+3 * 1112 0 1112
cfi=(13)
cfn=(134)
calls=1112 0x404e98 -58 
* * 17792 6672 5560 2 0 0 2
+5 * 1112 1112
+1 * 1112 1112

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +8 556 0 556
+4 +3 556 556
+4 * 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=556 0x404eb5 -22 
* * 155300 50060 46172 1 1 22 1 1 22 9648 596 1108
+5 +1 556 556
+1 * 556 556

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1112 0 1112 1 0 0 1
+1 * 1112
+3 * 1112
+4 * 1112 0 1112
+4 +1 1112 1112
+4 * 1112
+3 * 1112 0 1112
cfi=(13)
cfn=(124)
calls=1112 0x404d36 -77 
* * 6672 3336 2224 2 0 0 2
+5 * 1112 1112
+1 * 1112 1112

fn=(56)
0x404c38 288 1112 0 1112 1 0 0 1
+1 * 1112
+3 * 1112
+4 * 1112 0 1112 1 0 0 1
+4 +1 1112 1112
+4 * 1112
+3 * 1112 0 1112
cfi=(13)
cfn=(58)
calls=1112 0x404d8f -77 
* * 6672 3336 2224 1 0 0 1
+5 * 1112 1112
+1 * 1112 1112

fn=(74)
0x404f37 368 572 0 572
+1 * 572
+3 * 572
+4 * 572 0 572 1 0 0 1
+4 * 572 0 572
+4 * 572 0 572
+4 +2 572 572
+4 * 572 572
+4 * 572
+3 * 572
+3 * 572
+4 * 572 0 572
+4 +1 572 572
+5 * 572 0 0 0 0 0 0 0 0 572
jcnd=8/572 +33 +2 
* * 
+2 +1 564 564
+4 * 564
+8 * 564 564
+4 * 564 564
+4 * 564
+3 * 564 0 0 1 0 0 1
+3 * 564 0 564 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=564 0x3877c83840 0 
* * 140854 44260 43137 11 2 20 11 2 20 9176 615 559 137
* * 564 564 0 1 1 0 1 1 0 0 0 564
+5 +1 572 572
+4 * 572
+8 * 572 572
+4 * 572
+3 +1 572 572
+1 * 572 572

fn=(140)
0x404eb5 368 572 0 572
+1 * 572
+3 * 572
+4 * 572 0 572 1 0 0 1
+4 * 572 0 572
+4 * 572 0 572 0 0 1 0 0 1
+4 +2 572 572
+4 * 572 572
+4 * 572
+3 * 572
+3 * 572
+4 * 572 0 572
+4 +1 572 572
+5 * 572 0 0 0 0 0 0 0 0 572
jcnd=8/572 +33 +2 
* * 
+2 +1 564 564
+4 * 564
+8 * 564 564
+4 * 564 564
+4 * 564
+3 * 564
+3 * 564 0 564
cob=(2)
cfi=(9)
cfn=(78)
calls=564 0x3877c83840 0 
* * 140854 44260 43137 0 1 23 0 1 23 9176 601 559
* * 564 564 0 0 0 0 0 0 0 0 0 564
+5 +1 572 572
+4 * 572
+8 * 572 572
+4 * 572
+3 +1 572 572
+1 * 572 572

fn=(72)
0x404db7 379 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556 1 0 0 1
+4 * 556 0 556
+4 * 556 0 556
+4 +8 556 0 556
+4 +3 556 556
+4 * 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfn=(74)
calls=556 0x404f37 -22 
* * 155300 50060 46172 14 3 3 14 3 3 9648 611 1108 137
+5 +1 556 556
+1 * 556 556

fn=(126)
0x404be0 424 556 0 556
+1 * 556
+3 * 556 0 556
+2 * 556 0 556
+1 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 * 556 0 556
+4 +4 556 556
+4 * 556
+3 * 556 0 556
cfn=(128)
calls=556 0x404878 277 
* * 8340 3336 2780 1 0 0 1
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(132)
calls=556 0x404d44 277 
* * 13900 5004 4448 2 0 0 2
+5 * 556
+3 * 556 556
+4 * 556
+3 * 556 0 556
cfn=(132)
calls=556 0x404d44 277 
* * 13900 5004 4448
+5 * 556
+3 * 556
+3 * 556
+3 * 556 0 556
cfn=(138)
calls=556 0x404d5e -49 
* * 163640 52840 49508 1 1 22 1 1 22 9648 596 1108
+5 +1 556
+4 * 556 556
+1 * 556 556
+2 * 556 556
+1 * 556 556

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1112 0 1112 1 0 0 1
+1 * 1112
+3 * 1112 0 1112
+4 +1 1112 1112
+4 * 1112 1112
+1 * 1112 1112

fn=(110)
0x404380 726 1112 0 1112 1 0 0 1
+1 * 1112
+3 * 1112 0 1112
+4 * 1112 0 1112
+4 * 1112 1112
+4 * 1112 1112
+3 * 1112 1112
+4 * 1112 0 1112
+3 * 1112 1112
+1 * 1112 1112

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1112 0 1112 1 0 0 1
+1 * 1112
+3 * 1112 0 1112
+4 +1 1112 1112
+4 * 1112 1112
+1 * 1112 1112

fn=(44)
0x404468 726 1112 0 1112
+1 * 1112
+3 * 1112 0 1112
+4 * 1112 0 1112
+4 * 1112 1112
+4 * 1112 1112
+3 * 1112 1112
+4 * 1112 0 1112 1 0 0 1
+3 * 1112 1112
+1 * 1112 1112

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 564 0 564 1 0 0 1
+1 * 564
+3 * 564 0 564
+4 * 564 0 564 1 0 0 1
+4 * 564 564
+1 * 564 564

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 564 0 564 1 0 0 1
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 +4 564 564
+4 * 564 564
+4 * 564
+3 * 564
+3 * 564 0 564
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=564 0x40454c -14 
* * 3384 1128 1692 1 0 0 1
+5 +2 564 564
+1 * 564 564

fn=(150)
0x40326c 148 564 0 564
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 * 564 0 564
+4 +3 564 564 0 1 0 0 1
+4 * 564 564
+4 * 564
+3 * 564
+3 * 564 0 564
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=564 0x403d1a -29 
* * 10152 3384 3948 3 0 0 3
+5 +1 564 564
+1 * 564 564

fn=(180)
0x40334a 148 564 0 564
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 * 564 0 564
+4 +3 564 564
+4 * 564 564
+4 * 564
+3 * 564
+3 * 564 0 564
cfn=(182)
calls=564 0x403dcc -29 
* * 10152 3384 3948 2 0 0 2
+5 +1 564 564
+1 * 564 564

fn=(152)
0x403d1a 122 564 0 564 1 0 0 1
+1 * 564
+3 * 564
+4 * 564 0 564
+4 * 564 0 564
+4 +4 564 564
+4 * 564 564
+4 * 564
+3 * 564
+3 * 564 0 564
cfn=(154)
calls=564 0x4044f8 -14 
* * 3384 1128 1692 2 0 0 2
+5 +2 564 564
+1 * 564 564

fn=(184)
0x40454c 112 564 0 564 1 0 0 1
+1 * 564
+3 * 564 0 564
+4 * 564 0 564
+4 * 564 564
+1 * 564 564

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2401 442 440 0 5 7 0 5 7 333 40 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3212 672 619 12 8 5 12 8 5 503 51 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 1 0 1 1 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 278 0 278 1 0 0 1
+1 * 278
+3 * 278
+4 * 278 0 278
+4 * 278 0 278
+4 +1 278 278
+4 * 278
+3 * 278 0 278
cfi=(2)
cfn=(2)
calls=278 0x402d74 645 
* * 3614 1668 556
+5 * 278
+3 * 278 0 278
+3 +1 278 278
+6 * 278 0 278
+3 * 278 278
+6 * 278 0 278
+3 +1 278 278
+6 * 278 0 278 1 0 0 1
+3 * 278 278
+6 * 278 0 278
+3 +2 278 0 278
+7 * 278
jump=278 +86 * 
* * 
+2 +1 39059 39059
+3 * 39059
+3 * 39059 39059
+4 * 39059
+3 * 39059
+3 * 39059 0 39059
cfi=(2)
cfn=(144)
calls=39059 0x402d9a 770 
* * 429649 195295 117177
+5 * 39059 39059
+4 * 39059 39059
+5 * 39059
+4 * 39059 0 39059
+5 +1 39059 39059
+3 * 39059
+3 * 39059 39059
+4 * 39059
+3 * 39059
+3 * 39059 0 39059
cfi=(2)
cfn=(146)
calls=39059 0x402dba 770 
* * 429649 195295 117177 1 0 0 1
+5 * 39059 39059
+2 * 39059
+4 * 39059 39059
+5 * 39059
+4 * 39059 0 39059
+5 -2 39059 0 39059
+4 * 39059 39059
+3 * 39059
+3 * 39059 39059
+3 * 39059 0 0 0 0 0 0 0 0 39059 279
jcnd=38781/39059 -93 +1 
* * 
-9 * 278 278 0 1 0 0 1
+3 * 278
+3 * 278 278
+3 * 278 0 0 0 0 0 0 0 0 278
jcnd=278/278 -93 +1 
* * 
+2 +4 278 278
+3 * 278
+3 * 278
+4 * 278 278 0 1 0 0 1
+5 * 278
+4 * 278
+3 * 278 0 278
+5 +1 278 278
+3 * 278
+3 * 278
+4 * 278 278
+5 * 278
+4 * 278
+3 * 278 0 278
+5 +1 278 0 278
+7 * 278
jump=278 0x4016ee * 
* * 
+2 +1 39059 39059
+3 * 39059
+3 * 39059 39059
+4 * 39059
+3 * 39059 0 0 1 0 0 1
+3 * 39059 0 39059
cfi=(2)
cfn=(146)
calls=39059 0x402dba 770 
* * 429649 195295 117177
+5 * 39059 39059
+2 * 39059
+4 * 39059 39059
+5 * 39059 0 39059
+5 +1 39059 39059
+3 * 39059
+3 * 39059 39059
+4 * 39059
+3 * 39059
+3 * 39059 0 39059
cfi=(2)
cfn=(144)
calls=39059 0x402d9a 770 
* * 429649 195295 117177
+5 * 39059 39059
+4 * 39059 39059
+5 * 39059 0 39059
+5 +1 39059 39059
+5 * 39059 39059
+5 * 39059 39059
+5 * 39059
+4 * 39059 0 39059
+5 +1 39059 39059
+5 * 39059 39059
+5 * 39059 39059
+5 * 39059
+4 * 39059 0 39059
+5 -4 39059 0 39059
+4 * 39059 39059
+3 * 39059
+3 * 39059 39059
+3 * 39059 0 0 0 0 0 0 0 0 39059 279
jcnd=38781/39059 0x401672 +1 
* * 
-9 * 278 278 0 1 0 0 1
+3 * 278
+3 * 278 278
+3 * 278 0 0 0 0 0 0 0 0 278
jcnd=278/278 0x401672 +1 
* * 
+6 +6 278 278 0 1 0 0 1
+5 * 278 278
+5 * 278 0 278
+5 +2 278 278
+3 +1 278 0 278
+3 * 278 278
+5 * 278 278
+1 * 278 278

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 278
+7 * 278
+7 * 278
+3 * 278
+3 * 278 0 278
cfi=(2)
cfn=(4)
calls=278 0x4030b2 310 
* * 283247 82337 77020 65 22 16 65 22 16 17844 863 1110 137
+5 * 278
+7 * 278
+7 * 278
+3 * 278
+3 * 278 0 278
cfi=(2)
cfn=(80)
calls=278 0x402ff4 310 
* * 284819 81958 75625 48 9 49 48 9 49 18314 879 1110
+5 * 278 0 0 1 0 0 1
+7 * 278
+7 * 278
+3 * 278
+3 * 278 0 278
cfn=(142)
calls=278 0x401585 -52 
* * 4080206 1803664 942142 8 0 0 8 0 0 78674 558
+5 * 278 0 278
+8 * 278 278
+6 * 278 0 278
+6 * 278
+7 * 278
+3 * 278 0 278
cfi=(2)
cfn=(148)
calls=278 0x402df4 414 
* * 69287 21728 15469 33 6 0 33 6 0 7648 215 556
+5 * 278
+7 * 278
+3 * 278 0 278 1 0 0 1
cfi=(2)
cfn=(178)
calls=278 0x402e74 414 
* * 72695 23024 16425 7 1 0 7 1 0 8632 21 556
+5 +2 278
+7 * 278
+7 * 278
+3 * 278
+3 * 278 0 278
cfi=(2)
cfn=(4)
calls=278 0x4030b2 310 
* * 282913 82312 76918 2 1 1 2 1 1 17817 533 1110
+5 * 278
+7 * 278
+7 * 278
+3 * 278
+3 * 278 0 278
cfi=(2)
cfn=(80)
calls=278 0x402ff4 310 
* * 283841 81895 75463 0 0 2 0 0 2 18163 523 1110
+5 * 278 278
+6 * 278 0 0 1 0 0 1
+7 * 278
+7 * 278 0 278
+6 * 278 278
+8 * 278
+3 * 278
+3 * 278 0 278
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=278 0x401719 -33 
* * 1891234 787296 433819 4 0 0 4 0 0 39337 279
+5 * 278 0 278
+8 * 278 278
+6 * 278 0 278
+6 * 278
+7 * 278 0 0 1 0 0 1
+3 * 278 0 278
cfi=(2)
cfn=(148)
calls=278 0x402df4 414 
* * 69287 21728 15469 0 0 0 0 0 0 7648 210 556
+5 * 278
+7 * 278
+3 * 278 0 278
cfi=(2)
cfn=(178)
calls=278 0x402e74 414 
* * 72695 23024 16425 0 0 0 0 0 0 8632 16 556
+5 +2 278 278
+7 * 278
+3 * 278 0 278
cfi=(2)
cfn=(2)
calls=278 0x402d74 645 
* * 3614 1668 556
+5 * 278 278
+6 * 278
+3 * 278
+3 * 278
+3 * 278 278
+7 * 278
+3 * 278 0 0 1 0 0 1
+3 * 278 0 278
cfi=(2)
cfn=(144)
calls=278 0x402d9a 770 
* * 3058 1390 834
+5 * 278
+3 * 278
+7 * 278
+3 * 278
+3 * 278 0 278
cfi=(2)
cfn=(200)
calls=278 0x402eda 901 
* * 30280 11071 8617 38 28 11 38 28 11 1401 73 47
+5 +1 278 278
+7 * 278
+3 * 278 0 278
cfi=(2)
cfn=(10)
calls=278 0x402f54 645 
* * 3614 1668 556 0 1 0 0 1
+5 * 278 278
+6 * 278
+3 * 278
+3 * 278
+3 * 278 278
+7 * 278 0 0 1 0 0 1
+3 * 278
+3 * 278 0 278
cfi=(2)
cfn=(146)
calls=278 0x402dba 770 
* * 3058 1390 834
+5 * 278
+3 * 278
+7 * 278
+3 * 278
+3 * 278 0 278
cfi=(2)
cfn=(244)
calls=278 0x402f7a 901 
* * 29502 10858 8441 19 22 34 19 22 34 1240 61 47
+5 +1 278 278
+7 * 278
+3 * 278 0 278
cfi=(2)
cfn=(10)
calls=278 0x402f54 645 
* * 3614 1668 556
+5 * 278 278
+6 * 278
+3 * 278
+3 * 278
+3 * 278 278 0 1 0 0 1
+7 * 278
+3 * 278
+3 * 278 0 278
cfi=(2)
cfn=(146)
calls=278 0x402dba 770 
* * 3058 1390 834
+5 * 278 278
+2 * 278
+4 * 278 278
+8 * 278 278
+8 * 278 0 278
+8 +1 278 278
+7 * 278
+3 * 278 0 278
cfi=(2)
cfn=(2)
calls=278 0x402d74 645 
* * 3614 1668 556
+5 * 278 278 0 1 0 0 1
+6 * 278
+3 * 278
+3 * 278
+3 * 278 278
+7 * 278
+3 * 278
+3 * 278 0 278
cfi=(2)
cfn=(144)
calls=278 0x402d9a 770 
* * 3058 1390 834
+5 * 278 278
+4 * 278 278
+8 * 278
+4 * 278 278
+8 * 278
+3 * 278 0 278
+8 +2 278 0 278
+7 -12 278 278
+8 * 278 278
+7 * 278 0 0 0 0 0 0 0 0 278 3
jcnd=1/278 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 278
+7 * 278
+3 * 278 0 278
cfi=(2)
cfn=(2)
calls=278 0x402d74 645 
* * 3614 1668 556 2 0 1 2 0 1
+5 * 278
+3 * 278 278
+7 * 278
+3 * 278 0 278
cfi=(2)
cfn=(2)
calls=278 0x402d74 645 
* * 3614 1668 556 0 1 0 0 1
+5 * 278
+3 * 278 0 0 0 0 0 0 0 0 278 1
+2 * 278 0 0 1 0 0 1
+5 * 278
jump=278 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 278
+2 * 278 0 0 0 0 0 0 0 0 278
jcnd=278/278 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 278 0 278
+1 * 278
+3 * 278
+4 * 278 0 278
+4 * 278 0 278
+4 * 278 0 278
+5 +1 278 278
+4 * 278
+3 * 278 0 278
cfi=(2)
cfn=(2)
calls=278 0x402d74 645 
* * 3614 1668 556
+5 * 278
+3 * 278 0 278
+3 +1 278 278 0 1 0 0 1
+6 * 278 0 278
+3 * 278 278
+6 * 278 0 278
+3 +2 278 0 278
+7 * 278
jump=278 +86 * 
* * 
+2 +1 39059 39059
+3 * 39059
+3 * 39059 39059
+4 * 39059
+3 * 39059
+3 * 39059 0 39059
cfi=(2)
cfn=(144)
calls=39059 0x402d9a 770 
* * 429649 195295 117177
+5 * 39059 39059
+4 * 39059 39059
+5 * 39059
+4 * 39059 0 39059
+5 +1 39059 39059
+3 * 39059
+3 * 39059 39059
+4 * 39059
+3 * 39059
+3 * 39059 0 39059
cfi=(2)
cfn=(146)
calls=39059 0x402dba 770 
* * 429649 195295 117177
+5 * 39059 39059
+2 * 39059
+4 * 39059 39059
+5 * 39059
+4 * 39059 0 39059
+5 -2 39059 0 39059
+4 * 39059 39059
+3 * 39059
+3 * 39059 39059
+3 * 39059 0 0 0 0 0 0 0 0 39059 279
jcnd=38781/39059 -93 +1 
* * 
-9 * 278 278 0 1 0 0 1
+3 * 278
+3 * 278 278
+3 * 278 0 0 0 0 0 0 0 0 278
jcnd=278/278 -93 +1 
* * 
+2 +4 278 278
+3 * 278
+3 * 278 0 0 1 0 0 1
+4 * 278 278
+5 * 278
+4 * 278
+3 * 278 0 278
+5 +1 278 278
+3 * 278
+3 * 278
+4 * 278 278
+5 * 278
+4 * 278
+3 * 278 0 278
+5 +1 278 278
+5 * 278 278
+5 * 278 278
+5 * 278 0 0 1 0 0 1
+4 * 278
+3 * 278 0 278
+5 +2 278 278
+3 +1 278 0 278
+3 * 278 278
+5 * 278 278
+1 * 278 278

fl=(4)
fn=(16)
0x404804 115 556 0 556 1 0 0 1
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556
+4 +1 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfi=(5)
cfn=(18)
calls=556 0x404a28 -35 
* * 3336 1112 1668 1 0 1 1 0 1
+5 * 556 556
+1 * 556 556

fn=(174)
0x403ccc 121 556 0 556
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 556
+4 * 556
+3 * 556 0 556
cfi=(5)
cfn=(176)
calls=556 0x4044cc -35 
* * 2780 1112 1112
+5 * 556 556
+1 * 556 556

fn=(90)
0x4047b2 115 556 0 556 1 0 0 1
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 0 556 1 0 0 1
+4 +1 556 556
+4 * 556 556
+4 * 556
+3 * 556
+3 * 556 0 556
cfi=(5)
cfn=(92)
calls=556 0x4049d4 -35 
* * 3336 1112 1668 1 0 0 1
+5 * 556 556
+1 * 556 556

fn=(194)
0x403d7e 121 556 0 556 1 0 0 1
+1 * 556
+3 * 556
+4 * 556 0 556
+4 * 556 556
+4 * 556
+3 * 556 0 556
cfi=(5)
cfn=(196)
calls=556 0x404520 -35 
* * 2780 1112 1112
+5 * 556 556
+1 * 556 556

fl=(3)
fn=(8)
0x403afa 224 556 0 556 1 0 0 1
+1 * 556
+3 * 556 0 556
+4 * 556 556
+4 * 556 556
+1 * 556 556

fn=(264)
0x4036b1 215 278 0 278
+1 * 278
+3 * 278
+4 * 278 0 278
+4 * 278 0 278
+4 * 278 0 278
+4 +1 278 278
+4 * 278 278
+4 * 278 278
+4 * 278
+3 * 278
+3 * 278 0 278
cfi=(5)
cfn=(266)
calls=278 0x40406a -87 
* * 6672 2224 2502 0 17 9 0 17 9 278
+5 * 278 278
+1 * 278 278

fn=(212)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102)
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28)
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84)
0x4039ed 224 556 0 556
+1 * 556
+3 * 556 0 556
+4 * 556 556
+4 * 556 556
+1 * 556 556

fn=(222)
0x403373 215 278 0 278
+1 * 278
+3 * 278
+4 * 278 0 278
+4 * 278 0 278
+4 * 278 0 278
+4 +1 278 278
+4 * 278 278
+4 * 278 278
+4 * 278
+3 * 278
+3 * 278 0 278
cfi=(5)
cfn=(224)
calls=278 0x403df2 -87 
* * 6672 2224 2502 0 19 3 0 19 3 278 2
+5 * 278 278
+1 * 278 278

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1128 0 1128 1 0 0 1
+2 0 1128 0 1128
+2 0 1128 0 1128
+2 0 1128
+3 0 1128 0 1128
+2 0 1128 0 1128
+1 0 1128 0 1128
+1 0 1128
+3 0 1128
+4 0 1128 1128
+4 0 1128 0 1128
+4 0 1128
+3 0 1128
+4 0 1128
+3 0 1128
+3 0 1128
+3 0 1128 0 0 1 0 0 1 0 0 1128
+6 0 1128
+4 0 1128 0 0 0 0 0 0 0 0 1128
+6 0 1128
+4 0 1128 0 0 0 0 0 0 0 0 1128
+6 0 1128 1128
+7 0 1128 0 0 0 0 0 0 0 0 1128 2
jcnd=1004/1128 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1004
+2 0 1004 0 0 0 0 0 0 0 0 1004
+6 0 1004 1004 0 1 0 0 1
+4 0 1004
+3 0 1004
+2 0 1004 0 0 0 0 0 0 0 0 1004
jcnd=1004/1004 0x3877c78a40 0 
* 0 
+6 0 1004 1004
+4 0 1004
+3 0 1004 0 0 0 0 0 0 0 0 1004
+6 0 1004 1004
+5 0 1004
+4 0 1004 0 0 0 0 0 0 0 0 1004
jcnd=1004/1004 0x3877c7907c 0 
* 0 
+6 0 1004 1004
+5 0 1004
+4 0 1004 0 0 0 0 0 0 0 0 1004
+6 0 1004
+4 0 1004 0 0 1 0 0 1 0 0 1004
+6 0 1004
+4 0 1004 1004
+7 0 1004 0 0 0 0 0 0 0 0 1004
+6 0 1004 1004
+6 0 1004
+2 0 1004 0 0 0 0 0 0 0 0 1004
+6 0 1004 1004
+4 0 1004 0 0 0 0 0 0 0 0 1004 5
jcnd=1000/1004 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1004 1004 0 1 0 0 1
+4 0 1004 0 0 0 0 0 0 0 0 1004 348
jcnd=400/1004 0x3877c78bf0 0 
* 0 
+6 0 604 604 0 0 1 0 0 1
+6 0 604 0 0 1 0 0 1 0 0 604 48
jcnd=45/604 0x3877c78a78 0 
* 0 
+6 0 559 559
+5 0 559 559
+5 0 559 559
+4 0 559 0 0 0 0 0 0 0 0 559
+6 0 559 559
+4 0 559 0 0 0 0 0 0 0 0 559
+6 0 559 559
+9 0 559 0 559
+4 0 559 0 559
+4 0 559 0 0 0 0 0 0 0 0 559 4
jcnd=551/559 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 559
+3 0 559
+4 0 559 559
+4 0 559 559
+4 0 559 0 0 0 0 0 0 0 0 559
-12 0 45
+4 0 45 45
+4 0 45 45
+4 0 45 0 0 0 0 0 0 0 0 45
+6 0 604
+7 0 604 0 604
+4 0 604 0 604
+4 0 604 0 0 0 0 0 0 0 0 604 66
jcnd=441/604 +18 0 
* 0 
+2 0 163 0 163
+8 0 163 0 163
+8 0 163 0 163
+4 0 163
+3 0 163 0 163 1 0 0 1
+4 0 163
+4 0 163 0 163
+4 0 163 0 163
+4 0 163
+7 0 163 0 0 0 0 0 0 0 0 163
jcnd=163/163 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 400
+7 0 400 0 0 0 0 0 0 0 0 400
jcnd=400/400 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1004 0 0 1 0 0 1
+5 0 1004 1004
+4 0 1004 1004
+7 0 1004 0 0 0 0 0 0 0 0 1004
jcnd=1004/1004 +16 0 
* 0 
+16 0 1004 0 1004
+5 0 1004 0 0 0 0 0 0 0 0 1004
+6 0 1004
+3 0 1004
jump=1004 0x3877c7878f 0 
* 0 
+10 0 45 0 45
+6 0 45 0 0 1 0 0 1
jump=45 0x3877c78885 0 
* 0 
0x3877c78b20 0 1004 1004 0 1 0 0 1
+4 0 1004
+2 0 1004 0 0 0 0 0 0 0 0 1004
+6 0 1004 1004
+7 0 1004 0 0 0 0 0 0 0 0 1004
jcnd=1004/1004 +15 0 
* 0 
+15 0 1004 0 1004 1 0 0 1
+4 0 1004 0 0 0 0 0 0 0 0 1004 2
+6 0 1004
+4 0 1004 1004
+1 0 1004 1004
+1 0 1004 1004
+2 0 1004 1004
+2 0 1004 1004
+2 0 1004 1004
+2 0 1004 1004
0x3877c78bf0 0 400 0 0 1 0 0 1
+3 0 400 0 400
+4 0 400
+3 0 400
+4 0 400 0 400 1 0 0 1
+4 0 400
jump=400 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1004 1004 0 1 1 0 1 1
+4 0 1004 0 0 1 0 0 1
+7 0 1004
+4 0 1004
+3 0 1004
+3 0 1004 0 0 0 0 0 0 0 0 1004
jcnd=1004/1004 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1118 0 0 1 0 0 1
+7 0 1118
+3 0 1118
+3 0 1118 1118 0 0 1 0 0 1
+4 0 1118
+4 0 1118 0 0 0 0 0 0 0 0 0 0 1118 137
jump=136 0x3877c89be8 0 
* 0 
jump=146 0x3877c89bd0 0 
* 0 
jump=136 0x3877c89bb8 0 
* 0 
jump=136 +11 0 
* 0 
jump=136 0x3877c89c48 0 
* 0 
jump=138 0x3877c89c30 0 
* 0 
jump=144 0x3877c89c18 0 
* 0 
jump=146 0x3877c89c00 0 
* 0 
+11 0 136 136
+3 0 136
+4 0 136
+4 0 136 136
+4 0 136
+4 0 136 0 136
+4 0 136
+9 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136
+4 0 136
+4 0 136 0 0 0 0 0 0 0 0 136
jcnd=8/136 0x3877c89c60 0 
* 0 
-40 0 9582 9582
+4 0 9582 0 9582 0 0 3 0 0 3
+4 0 9582 9582
+4 0 9582 0 9582 0 0 15 0 0 15
+4 0 9582 9582
+4 0 9582 0 9582 0 0 1 0 0 1
+4 0 9582 9582
+4 0 9582 0 9582
+4 0 9582
+4 0 9582
+4 0 9582 0 0 0 0 0 0 0 0 9582 644
jcnd=1082/9582 0x3877c89c60 0 
* 0 
-32 0 138 138
+4 0 138 0 138
+4 0 138 138
+4 0 138 0 138
+4 0 138 138
+4 0 138 0 138
+4 0 138
+4 0 138
+4 0 138 0 0 0 0 0 0 0 0 138
jcnd=10/138 0x3877c89c60 0 
* 0 
-24 0 144 144
+4 0 144 0 144
+4 0 144 144
+4 0 144 0 144
+4 0 144
+4 0 144
+4 0 144 0 0 0 0 0 0 0 0 144
jcnd=8/144 0x3877c89c60 0 
* 0 
-16 0 146 146 0 1 0 0 1
+4 0 146 0 146
+4 0 146 0 0 1 0 0 1
+4 0 146
+4 0 146 0 0 0 0 0 0 0 0 146 4
jcnd=10/146 0x3877c89c60 0 
* 0 
+6 0 9028
+4 0 9028 9028
+3 0 9028 0 9028 0 0 1 0 0 1
+3 0 9028 9028
+4 0 9028 0 9028 0 0 3 0 0 3
+4 0 9028 9028
+4 0 9028 0 9028 0 0 18 0 0 18
+4 0 9028 9028
+4 0 9028 0 9028
+4 0 9028
jump=9028 -80 0 
* 0 
-30 0 136 136
+3 0 136 0 136
+3 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136 0 0 1 0 0 1
+4 0 136 136
+4 0 136 0 136
+4 0 136
jump=136 -80 0 
* 0 
-24 0 146 146
+4 0 146 0 146
+4 0 146 146
+4 0 146 0 146
+4 0 146 146
+4 0 146 0 146
+4 0 146
jump=146 -80 0 
* 0 
-16 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136
+4 0 136
jump=136 -80 0 
* 0 
+8 0 136 136
+3 0 136
+4 0 136 0 0 1 0 0 1
+4 0 136
+4 0 136
jump=136 -39 0 
* 0 
+9 0 146
+3 0 146 0 0 0 0 0 0 0 0 146
+6 0 146 146
+3 0 146
+4 0 146
jump=146 -72 0 
* 0 
+8 0 136
+4 0 136 136
+3 0 136 0 0 0 0 0 0 0 0 136
+2 0 136
+4 0 136
jump=136 -99 0 
* 0 
+11 0 146 146 0 1 0 0 1
+3 0 146
+4 0 146
+4 0 146
+4 0 146
jump=146 0x3877c89b78 0 
* 0 
+9 0 144 144
+3 0 144
+4 0 144
+4 0 144
+4 0 144
jump=144 0x3877c89b70 0 
* 0 
+9 0 138 138
+3 0 138
+4 0 138
+4 0 138
+4 0 138
jump=138 0x3877c89b68 0 
* 0 
+9 0 136 136
+3 0 136
+4 0 136
+4 0 136
+4 0 136
jump=136 0x3877c89b60 0 
* 0 
+9 0 1118 0 1118 1 0 0 1
+3 0 1118 1118

fn=(104) alloc_perturb
0x3877c77180 0 1002 1002 0 1 0 0 1
+6 0 1002
+2 0 1002 0 0 0 0 0 0 0 0 1002 1
+2 0 1002 1002

fn=(38) _int_malloc
0x3877c79a00 0 1128 0 1128 1 0 0 1
+2 0 1128
+3 0 1128 0 1128
+2 0 1128 0 1128
+2 0 1128 0 1128 0 0 1 0 0 1
+2 0 1128
+3 0 1128 0 1128
+1 0 1128 0 1128
+1 0 1128
+4 0 1128
+4 0 1128 0 0 0 0 0 0 0 0 1128
+6 0 1128
+4 0 1128
+6 0 1128
+3 0 1128
+4 0 1128
+4 0 1128
+4 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128
+6 0 1128 1128 0 1 1 0 1 1
+7 0 1128 0 0 0 0 0 0 0 0 1128 5
jcnd=1006/1128 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 1002
+4 0 1002 1002
+1 0 1002 1002
+1 0 1002 1002
+2 0 1002 1002
+2 0 1002 1002
+2 0 1002 1002
+2 0 1002 1002
+7 0 1023
+7 0 1023 0 0 1 0 0 1 0 0 1023 7
jcnd=120/1023 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 11 0 0 11
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 120 0 0 1 0 0 1
+3 0 120
+4 0 120
+4 0 120 0 0 1 0 0 1 0 0 120
jcnd=120/120 0x3877c7a1a4 0 
* 0 
+30 0 120 120
+6 0 120
+5 0 120 0 0 0 0 0 0 0 0 120 1
jcnd=119/120 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 885 232 189 8 2 0 8 2 0 181 23
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1022 0 0 1 0 0 1
+3 0 1022
+3 0 1022
+3 0 1022
+4 0 1022
+3 0 1022
+4 0 1022 0 1022
+5 0 1022
+3 0 1022 0 1022
+4 0 1022 0 1022
+4 0 1022 0 1022
+5 0 1022
+3 0 1022
+3 0 1022
+3 0 1022
+3 0 1022
+4 0 1022
+4 0 1022 0 0 1 0 0 1
+4 0 1022 0 1022
+4 0 1022
+4 0 1022 0 1022
+5 0 1022 0 1022
+5 0 1022
+3 0 1022
+3 0 1022 0 1022
+5 0 1022
+5 0 1022
+3 0 1022 0 1022
+4 0 1022 0 1022
+4 0 1022
+6 0 1022 0 1022
+4 0 1022 0 1022
+5 0 1022 0 0 1 0 0 1
+3 0 1022
+3 0 1022
+3 0 1022
jump=1022 +87 0 
* 0 
+8 0 855
+3 0 855
+4 0 855
+2 0 855
+2 0 855
+3 0 855
+3 0 855
+3 0 855
+2 0 855
+2 0 855
+5 0 855
+2 0 855 855 0 0 2 0 0 2
+4 0 855
+3 0 855
+4 0 855 0 855
+4 0 855 0 855
+8 0 855
+7 0 855 0 855
+4 0 855 0 855 0 0 1 0 0 1
+4 0 855 0 855
+4 0 855 0 0 0 0 0 0 0 0 855
-38 0 160
+3 0 160
+4 0 160 0 160
+4 0 160 0 160
+8 0 160
+7 0 160 0 160
+4 0 160 0 160
+4 0 160 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
+6 0 2038 2038 0 1 0 0 1
+4 0 2038
+3 0 2038 0 0 0 0 0 0 0 0 2038 97
jcnd=983/2038 0x3877c79ef0 0 
* 0 
+6 0 1055 1055
+4 0 1055 1055
+4 0 1055
+4 0 1055 0 0 0 0 0 0 0 0 1055
+6 0 1055 1055 0 1 0 0 1
+7 0 1055 0 0 0 0 0 0 0 0 1055
+6 0 1055
+4 0 1055
+7 0 1055 0 0 0 0 0 0 0 0 1055 6
jcnd=146/1055 +11 0 
* 0 
+2 0 909
+3 0 909 0 0 0 0 0 0 0 0 909 62
jcnd=833/909 0x3877c79e28 0 
* 0 
+6 0 1036
+3 0 1036 0 1036
+4 0 1036 0 1036
+5 0 1036 0 0 0 0 0 0 0 0 1036 13
jcnd=21/1036 0x3877c7a090 0 
* 0 
+6 0 1015
+7 0 1015 0 0 0 0 0 0 0 0 1015 61
jcnd=855/1015 0x3877c79c50 0 
* 0 
+6 0 160 0 0 1 0 0 1
+3 0 160
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
+6 0 160
+3 0 160
+4 0 160
+2 0 160
+2 0 160
+3 0 160
+3 0 160
+8 0 160
+3 0 160
+2 0 160
+2 0 160
+4 0 160 160 0 0 2 0 0 2
+4 0 160
+3 0 160 0 0 1 0 0 1 0 0 160 9
jcnd=160/160 0x3877c79e15 0 
* 0 
0x3877c79e15 0 160 0 160
+4 0 160 0 160
+4 0 160
+3 0 160
jump=160 0x3877c79c73 0 
* 0 
+8 0 833 833 0 1 0 0 1
+4 0 833
+3 0 833 0 0 0 0 0 0 0 0 833 335
jcnd=428/833 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 5
jcnd=386/405 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 983 0 0 1 0 0 1
+7 0 983
+3 0 983 0 0 0 0 0 0 0 0 983 4
jcnd=120/983 0x3877c7a0b0 0 
* 0 
+6 0 983 983 0 1 0 0 1
+4 0 983
+3 0 983
+3 0 983
+2 0 983
+4 0 983
+3 0 983
+3 0 983
+2 0 983
+2 0 983
+2 0 983
+2 0 983 983 0 0 1 0 0 1
+8 0 983
+5 0 983
+5 0 983
+2 0 983 0 0 0 0 0 0 0 0 983
-2 0 460
+2 0 460 0 0 0 0 0 0 0 0 460
+2 0 1443
+2 0 1443 0 0 0 0 0 0 0 0 1443 24
jcnd=766/1443 +64 0 
* 0 
+2 0 677
+8 0 677
+3 0 677
+3 0 677 0 0 0 0 0 0 0 0 677 1
jcnd=1/677 0x3877c79fc0 0 
* 0 
-6 0 826
+3 0 826
+3 0 826 0 0 0 0 0 0 0 0 826 7
jcnd=401/826 0x3877c79fc0 0 
* 0 
+2 0 1101
+2 0 1101 1101
+8 0 1101
+2 0 1101 0 0 0 0 0 0 0 0 1101 24
jcnd=826/1101 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 7241
+4 0 7241
+2 0 7241
+2 0 7241 0 0 0 0 0 0 0 0 7241 464
jcnd=6359/7241 -8 0 
* 0 
-2 0 766 0 0 1 0 0 1
+2 0 766 0 0 0 0 0 0 0 0 766 19
jcnd=669/766 -8 0 
* 0 
+2 0 1041 1041 0 0 5 0 0 5
+4 0 1041 0 0 1 0 0 1
+3 0 1041 0 0 0 0 0 0 0 0 1041 435
jcnd=581/1041 0x3877c7a1cf 0 
* 0 
+6 0 460
+2 0 460
+4 0 460
+2 0 460
+2 0 460
+2 0 460 0 460
+8 0 460
jump=460 0x3877c79f30 0 
* 0 
+37 0 402 402 0 1 0 0 1
+5 0 402 402
+4 0 402
+4 0 402 402
+5 0 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 120 120
+4 0 120
+4 0 120
+2 0 120
+5 0 120 120 0 1 1 0 1 1
+4 0 120
+3 0 120 0 0 0 0 0 0 0 0 120
jcnd=120/120 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 120 0 0 1 0 0 1
+3 0 120 0 120
+4 0 120
jump=120 0x3877c79b99 0 
* 0 
+36 0 581 581 0 1 2 0 1 2
+4 0 581 581
+4 0 581
+3 0 581 581
+4 0 581
+4 0 581
+3 0 581
+3 0 581 581
+4 0 581 0 0 0 0 0 0 0 0 581
+6 0 581 581
+4 0 581 0 0 0 0 0 0 0 0 581
+6 0 581 581 0 1 0 0 1
+8 0 581 0 581
+4 0 581 0 581
+4 0 581 0 0 0 0 0 0 0 0 581 11
jcnd=419/581 +38 0 
* 0 
+2 0 162 162 0 0 2 0 0 2
+4 0 162
+3 0 162 0 0 0 0 0 0 0 0 162
+2 0 162 162
+5 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 9
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 560 560
+4 0 560 560 0 1 0 0 1
+4 0 560 0 0 0 0 0 0 0 0 560
+6 0 560
+4 0 560
+7 0 560 0 560 0 0 8 0 0 8
+4 0 560 0 560
+4 0 560 0 560
+4 0 560 0 560
+4 0 560 0 0 0 0 0 0 0 0 560 4
jcnd=94/560 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 94
+7 0 94 0 0 0 0 0 0 0 0 94
jcnd=94/94 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 553 0 0 1 0 0 1
+7 0 553 0 553
+4 0 553
+3 0 553
+3 0 553
+4 0 553
+3 0 553
+4 0 553
+3 0 553
+3 0 553
+4 0 553 0 553
+4 0 553 0 553 0 0 1 0 0 1
+4 0 553
jump=553 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 21
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 +7 0 
* 0 
+7 0 581
+4 0 581 0 0 1 0 0 1
+3 0 581
+3 0 581 0 581
cfn=(104)
calls=581 0x3877c77180 0 
* 0 2324 1162 0 1 0 0 1 0 0 581
+5 0 581
+3 0 581
jump=581 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 402 0 0 1 0 0 1
+7 0 402
+2 0 402
+4 0 402
+3 0 402
+3 0 402 0 402
+5 0 402
+3 0 402
+4 0 402
+3 0 402 0 0 1 0 0 1
+4 0 402
+4 0 402
+3 0 402
+4 0 402 0 402
+4 0 402 0 402 0 0 15 0 0 15
+4 0 402
+3 0 402
+3 0 402 0 402
cfn=(104)
calls=402 0x3877c77180 0 
* 0 1608 804 0 0 0 0 0 0 0 402 1
+5 0 402
+3 0 402
jump=402 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 1128 0 1128 1 0 0 1
+5 0 1128 0 1128
+5 0 1128
+3 0 1128 0 1128
+5 0 1128
+4 0 1128 1128 0 0 1 0 0 1
+7 0 1128 1128 0 0 1 0 0 1
+3 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128
+6 0 1128 1128 0 0 1 0 0 1
+7 0 1128 1128 0 1 1 0 1 1
+4 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128
+2 0 1128 1128 0 0 1 0 0 1
+3 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128
jcnd=1128/1128 +97 0 
* 0 
+18 0 1128
+3 0 1128
+3 0 1128 0 1128
cfn=(38)
calls=1128 0x3877c79a00 0 
* 0 253329 31112 36597 42 32 48 42 32 48 39014 1665
+5 0 1128
+3 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128
+2 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128
+2 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128 5
+2 0 1128 1128
+7 0 1128 0 0 0 0 0 0 0 0 1128
jcnd=1128/1128 +13 0 
* 0 
+13 0 1128 0 1128
+2 0 1128 0 0 0 0 0 0 0 0 1128 12
+6 0 1128
+3 0 1128 1128
+4 0 1128 1128
+5 0 1128 1128
+5 0 1128
+4 0 1128 1128
+1 0 1128 0 0 1 0 0 1
+5 0 1128 1128 0 0 1 0 0 1
+7 0 1128 0 0 0 0 0 0 0 0 1128
jcnd=1128/1128 +14 0 
* 0 
+14 0 1128 0 1128 1 0 0 1
+3 0 1128 0 0 0 0 0 0 0 0 1128
+6 0 1128
jump=1128 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1128 0 1128 1 0 0 1
+2 0 1128
+3 0 1128
+3 0 1128 0 1128
+2 0 1128
+3 0 1128 0 1128
+1 0 1128
+3 0 1128 0 1128
+1 0 1128
+3 0 1128
+4 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128
+6 0 1128
+4 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128 4
jcnd=10/1128 0x3877c838d1 0 
* 0 
+2 0 1118
+3 0 1118
+3 0 1118
+3 0 1118
+3 0 1118
+3 0 1118 0 0 0 0 0 0 0 0 1118
jcnd=1118/1118 +41 0 
* 0 
+41 0 1118 0 0 1 0 0 1
+3 0 1118 0 0 0 0 0 0 0 0 1118
jcnd=1118/1118 0x3877c839c0 0 
* 0 
+24 0 1118
+3 0 1118
+4 0 1118
+3 0 1118
+3 0 1118
+3 0 1118
+3 0 1118
+3 0 1118 0 0 0 0 0 0 0 0 1118 556
jcnd=566/1118 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 562
+10 0 562 562 0 0 2 0 0 2
+3 0 562
+4 0 562 0 562
+3 0 562
+4 0 562
+4 0 562 0 0 0 0 0 0 0 0 562
jcnd=562/562 -18 0 
* 0 
-18 0 1742 1742
+3 0 1742
+4 0 1742 0 1742
+3 0 1742
+4 0 1742
+4 0 1742 0 0 0 0 0 0 0 0 1742 8
jcnd=1180/1742 -18 0 
* 0 
+2 0 1128
+4 0 1128
+3 0 1128 1128
+1 0 1128 1128
+1 0 1128 1128
+2 0 1128 1128 0 1 0 0 1
+2 0 1128 1128
0x3877c839c0 0 1118 0 0 1 0 0 1
+3 0 1118
+3 0 1118
+3 0 1118
+4 0 1118 0 1118 0 0 1 0 0 1
cfn=(284)
calls=1118 0x3877c89b20 0 
* 0 217890 80576 78340 6 1 42 6 1 42 10428 648 1118 137
+5 0 1118
jump=1118 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1128 1128 0 1 1 0 1 1
+7 0 1128 1128 0 0 1 0 0 1
+3 0 1128
+3 0 1128 0 0 1 0 0 1 0 0 1128
+6 0 1128
+3 0 1128 0 0 0 0 0 0 0 0 1128
+6 0 1128 1128 0 0 1 0 0 1
+4 0 1128
+4 0 1128
+2 0 1128 0 0 0 0 0 0 0 0 1128
+2 0 1128
+2 0 1128
+7 0 1128 0 0 0 0 0 0 0 0 1128
jcnd=1128/1128 +14 0 
* 0 
+14 0 1128
+2 0 1128
cfn=(170)
calls=1128 0x3877c78650 0 
* 0 108585 28711 16197 19 3 0 19 3 0 26205 477

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 9
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=11/12 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 7520906 3053416 1776846 238 93 115 238 93 115 226186 4235 6758 137
