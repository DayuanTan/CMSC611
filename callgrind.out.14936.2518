version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2518


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2964374671 - 2965026704
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 235 0 235 1 0 0 1
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235
+3 * 235 0 235
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=235 0x402d74 645 
* * 3055 1410 470
+5 * 235
+3 * 235 0 235
+3 +1 235 235
+6 * 235 0 235
+3 * 235 235
+6 * 235 0 235
+3 +1 235 235
+6 * 235 0 235 1 0 0 1
+3 * 235 235
+6 * 235 0 235
+3 +2 235 0 235
+7 * 235
jump=235 +86 * 
* * 
+2 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=27965 0x402d9a 770 
* * 307615 139825 83895
+5 * 27965 27965
+4 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=27965 0x402dba 770 
* * 307615 139825 83895 1 0 0 1
+5 * 27965 27965
+2 * 27965
+4 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 -2 27965 0 27965
+4 * 27965 27965
+3 * 27965
+3 * 27965 27965
+3 * 27965 0 0 0 0 0 0 0 0 27965 236
jcnd=27730/27965 -93 +1 
* * 
-9 * 235 235 0 1 0 0 1
+3 * 235
+3 * 235 235
+3 * 235 0 0 0 0 0 0 0 0 235
jcnd=235/235 -93 +1 
* * 
+2 +4 235 235
+3 * 235
+3 * 235
+4 * 235 235 0 1 0 0 1
+5 * 235
+4 * 235
+3 * 235 0 235
+5 +1 235 235
+3 * 235
+3 * 235
+4 * 235 235
+5 * 235
+4 * 235
+3 * 235 0 235
+5 +1 235 0 235
+7 * 235
jump=235 0x4016ee * 
* * 
+2 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965 0 0 1 0 0 1
+3 * 27965 0 27965
cfi=(2)
cfn=(146)
calls=27965 0x402dba 770 
* * 307615 139825 83895
+5 * 27965 27965
+2 * 27965
+4 * 27965 27965
+5 * 27965 0 27965
+5 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(144)
calls=27965 0x402d9a 770 
* * 307615 139825 83895
+5 * 27965 27965
+4 * 27965 27965
+5 * 27965 0 27965
+5 +1 27965 27965
+5 * 27965 27965
+5 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 +1 27965 27965
+5 * 27965 27965
+5 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 -4 27965 0 27965
+4 * 27965 27965
+3 * 27965
+3 * 27965 27965
+3 * 27965 0 0 0 0 0 0 0 0 27965 236
jcnd=27730/27965 0x401672 +1 
* * 
-9 * 235 235 0 1 0 0 1
+3 * 235
+3 * 235 235
+3 * 235 0 0 0 0 0 0 0 0 235
jcnd=235/235 0x401672 +1 
* * 
+6 +6 235 235 0 1 0 0 1
+5 * 235 235
+5 * 235 0 235
+5 +2 235 235
+3 +1 235 0 235
+3 * 235 235
+5 * 235 235
+1 * 235 235

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 235
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=235 0x4030b2 310 
* * 233243 67005 62491 63 19 16 63 19 16 14945 720 938 117
+5 * 235
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=235 0x402ff4 310 
* * 234462 66706 61314 40 7 32 40 7 32 15287 728 938
+5 * 235 0 0 1 0 0 1
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfn=(142)
calls=235 0x401585 -52 
* * 2923635 1292265 675155 8 0 0 8 0 0 56400 472
+5 * 235 0 235
+8 * 235 235
+6 * 235 0 235
+6 * 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=235 0x402df4 414 
* * 58180 18233 12963 33 5 0 33 5 0 6349 209 470
+5 * 235
+7 * 235
+3 * 235 0 235 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=235 0x402e74 414 
* * 61516 19511 13889 7 1 0 7 1 0 7315 21 470
+5 +2 235
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(4)
calls=235 0x4030b2 310 
* * 232904 66981 62387 2 1 1 2 1 1 14918 437 938
+5 * 235
+7 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(80)
calls=235 0x402ff4 310 
* * 233587 66654 61170 0 0 2 0 0 2 15153 419 938
+5 * 235 235
+6 * 235 0 0 1 0 0 1
+7 * 235
+7 * 235 0 235
+6 * 235 235
+8 * 235
+3 * 235
+3 * 235 0 235
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=235 0x401719 -33 
* * 1356185 564470 311140 4 0 0 4 0 0 28200 236
+5 * 235 0 235
+8 * 235 235
+6 * 235 0 235
+6 * 235
+7 * 235 0 0 1 0 0 1
+3 * 235 0 235
cfi=(2)
cfn=(148)
calls=235 0x402df4 414 
* * 58180 18233 12963 0 0 0 0 0 0 6349 204 470
+5 * 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(178)
calls=235 0x402e74 414 
* * 61516 19511 13889 0 0 0 0 0 0 7315 16 470
+5 +2 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470
+5 * 235 235
+6 * 235
+3 * 235
+3 * 235
+3 * 235 235
+7 * 235
+3 * 235 0 0 1 0 0 1
+3 * 235 0 235
cfi=(2)
cfn=(144)
calls=235 0x402d9a 770 
* * 2585 1175 705
+5 * 235
+3 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=235 0x402eda 901 
* * 25853 9411 7321 39 24 11 39 24 11 1224 61 41
+5 +1 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=235 0x402f54 645 
* * 3055 1410 470 0 1 0 0 1
+5 * 235 235
+6 * 235
+3 * 235
+3 * 235
+3 * 235 235
+7 * 235 0 0 1 0 0 1
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(146)
calls=235 0x402dba 770 
* * 2585 1175 705
+5 * 235
+3 * 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=235 0x402f7a 901 
* * 25345 9206 7150 28 27 16 28 27 16 1135 60 41
+5 +1 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(10)
calls=235 0x402f54 645 
* * 3055 1410 470
+5 * 235 235
+6 * 235
+3 * 235
+3 * 235
+3 * 235 235 0 1 0 0 1
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(146)
calls=235 0x402dba 770 
* * 2585 1175 705
+5 * 235 235
+2 * 235
+4 * 235 235
+8 * 235 235
+8 * 235 0 235
+8 +1 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470
+5 * 235 235 0 1 0 0 1
+6 * 235
+3 * 235
+3 * 235
+3 * 235 235
+7 * 235
+3 * 235
+3 * 235 0 235
cfi=(2)
cfn=(144)
calls=235 0x402d9a 770 
* * 2585 1175 705
+5 * 235 235
+4 * 235 235
+8 * 235
+4 * 235 235
+8 * 235
+3 * 235 0 235
+8 +2 235 0 235
+7 -12 235 235
+8 * 235 235
+7 * 235 0 0 0 0 0 0 0 0 235 1
jcnd=1/235 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470 2 0 1 2 0 1
+5 * 235
+3 * 235 235
+7 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470 0 1 0 0 1
+5 * 235
+3 * 235 0 0 0 0 0 0 0 0 235 1
+2 * 235 0 0 1 0 0 1
+5 * 235
jump=235 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 235
+2 * 235 0 0 0 0 0 0 0 0 235
jcnd=235/235 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+5 +1 235 235
+4 * 235
+3 * 235 0 235
cfi=(2)
cfn=(2)
calls=235 0x402d74 645 
* * 3055 1410 470
+5 * 235
+3 * 235 0 235
+3 +1 235 235 0 1 0 0 1
+6 * 235 0 235
+3 * 235 235
+6 * 235 0 235
+3 +2 235 0 235
+7 * 235
jump=235 +86 * 
* * 
+2 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(144)
calls=27965 0x402d9a 770 
* * 307615 139825 83895
+5 * 27965 27965
+4 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 +1 27965 27965
+3 * 27965
+3 * 27965 27965
+4 * 27965
+3 * 27965
+3 * 27965 0 27965
cfi=(2)
cfn=(146)
calls=27965 0x402dba 770 
* * 307615 139825 83895
+5 * 27965 27965
+2 * 27965
+4 * 27965 27965
+5 * 27965
+4 * 27965 0 27965
+5 -2 27965 0 27965
+4 * 27965 27965
+3 * 27965
+3 * 27965 27965
+3 * 27965 0 0 0 0 0 0 0 0 27965 236
jcnd=27730/27965 -93 +1 
* * 
-9 * 235 235 0 1 0 0 1
+3 * 235
+3 * 235 235
+3 * 235 0 0 0 0 0 0 0 0 235
jcnd=235/235 -93 +1 
* * 
+2 +4 235 235
+3 * 235
+3 * 235 0 0 1 0 0 1
+4 * 235 235
+5 * 235
+4 * 235
+3 * 235 0 235
+5 +1 235 235
+3 * 235
+3 * 235
+4 * 235 235
+5 * 235
+4 * 235
+3 * 235 0 235
+5 +1 235 235
+5 * 235 235
+5 * 235 235
+5 * 235 0 0 1 0 0 1
+4 * 235
+3 * 235 0 235
+5 +2 235 235
+3 +1 235 0 235
+3 * 235 235
+5 * 235 235
+1 * 235 235

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 470
+4 * 470
+3 * 470 0 470
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=470 0x4044cc -35 
* * 2350 940 940
+5 * 470 470
+1 * 470 470

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470 1 0 0 1
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=470 0x4049d4 -35 
* * 2820 940 1410 1 0 0 1
+5 * 470 470
+1 * 470 470

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 470
+4 * 470
+3 * 470 0 470
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=470 0x404520 -35 
* * 2350 940 940
+5 * 470 470
+1 * 470 470

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=470 0x404a28 -35 
* * 2820 940 1410 1 0 1 1 0 1
+5 * 470 470
+1 * 470 470

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 470 0 470
+1 * 470
+3 * 470 0 470
+4 * 470 470
+4 * 470 470
+1 * 470 470

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235 235
+4 * 235 235
+4 * 235
+3 * 235
+3 * 235 0 235
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=235 0x403df2 -87 
* * 5640 1880 2115 0 16 3 0 16 3 235 1
+5 * 235 235
+1 * 235 235

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+4 * 470 470
+4 * 470 470
+1 * 470 470

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235 235
+4 * 235 235
+4 * 235
+3 * 235
+3 * 235 0 235
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=235 0x40406a -87 
* * 5640 1880 2115 0 15 7 0 15 7 235
+5 * 235 235
+1 * 235 235

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 +1 940 940
+4 * 940 940
+1 * 940 940

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 940 0 940 1 0 0 1
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940
+4 * 940
+3 * 940 0 940 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=940 0x40500c 790 
* * 5640 2820 1880 1 0 0 1
+5 * 940 940
+3 * 940 940
+1 * 940 940

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 540 0 540
+1 * 540
+3 * 540 0 540
+4 +1 540 540
+4 * 540 540
+1 * 540 540

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 +1 940 940 0 1 0 0 1
+4 * 940 940
+1 * 940 940

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 540 0 540
+1 * 540
+3 * 540 0 540 0 0 1 0 0 1
+4 +1 540 540
+4 * 540 540
+1 * 540 540

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 940 0 940 1 0 0 1
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940
+4 * 940
+3 * 940 0 940
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=940 0x404ffe 790 
* * 5640 2820 1880 1 0 0 1
+5 * 940 940
+3 * 940 940
+1 * 940 940

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 470 0 470
+1 * 470
+3 * 470 0 470
+4 * 470 0 470
+4 * 470 470
+4 * 470 470
+1 * 470 470

fl=(5)
fn=(28)
0x404992 113 491 0 491 1 0 0 1
+1 * 491
+3 * 491 0 491
+4 +1 491
+10 * 491 491
+1 * 491 491

fn=(176)
0x4044cc 86 470 0 470
+1 * 470
+3 * 470 0 470
+4 * 470 470
+1 * 470 470

fn=(224)
0x403df2 129 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235
+3 * 235
+5 * 235 0 235
cfi=(16)
cfn=(226)
calls=235 0x402d61 -20 
* * 1645 705 705
+5 * 235
+3 * 235 0 0 0 0 0 0 0 0 235 1
+2 * 235 235
+4 * 235 235 0 0 16 0 0 16
+2 * 235 0 235 0 0 3 0 0 3
+2 * 235 235
+1 * 235 235

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 477 0 477
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +1 477 477
+4 * 477
+3 * 477 0 477
cob=(5) /usr/lib64/libstdc++.so.6.0.13
cfi=(8) ???
cfn=(164) operator delete(void*)
calls=477 0x387e4bb2f0 0 
* * 51281 12669 5808 23 4 0 23 4 0 12390 418 477
* * 477 477 0 1 1 0 1 1 0 0 0 477
+5 * 477 477
+1 * 477 477

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 477 0 477
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +1 477 477
+4 * 477
+3 * 477 0 477
cob=(5)
cfi=(8)
cfn=(164)
calls=477 0x387e4bb2f0 0 
* * 57986 15242 7663 0 1 0 0 1 0 14331 44 477
* * 477 477 0 0 0 0 0 0 0 0 0 477
+5 * 477 477
+1 * 477 477

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +2 477 477
+4 * 477
+3 * 477 0 477
cfn=(102)
calls=477 0x4048de +12 
* * 2862 954 954 1 0 0 1
+5 * 477 477
+4 * 477 0 0 1 0 0 1
+3 * 477
+2 * 477 0 0 0 0 0 0 0 0 477
jcnd=477/477 +7 +3 
* * 
+7 +3 477 477
+4 * 477
+4 * 477
+3 * 477 0 477
cob=(5)
cfi=(8)
cfn=(32) operator new(unsigned long)
calls=477 0x387e4bd0b0 0 
* * 136990 20025 18502 26 14 32 26 14 32 22438 721 477
* * 477 477 0 0 0 0 0 0 0 0 0 477
+5 +1 477 477
+1 * 477 477

fn=(18)
0x404a28 81 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470 0 0 1 0 0 1
+4 * 470 0 470
+4 * 470 470
+1 * 470 470

fn=(92)
0x4049d4 81 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+4 * 470 0 470
+4 * 470 470
+1 * 470 470

fn=(196)
0x404520 86 470 0 470
+1 * 470
+3 * 470 0 470
+4 * 470 470
+1 * 470 470

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477 1 0 0 1
+4 +2 477 477
+4 * 477
+3 * 477 0 477
cfn=(28)
calls=477 0x404992 +12 
* * 2862 954 954 1 0 0 1
+5 * 477 477
+4 * 477
+3 * 477
+2 * 477 0 0 0 0 0 0 0 0 477
jcnd=477/477 +7 +3 
* * 
+7 +3 477 477
+4 * 477
+4 * 477
+3 * 477 0 477
cob=(5)
cfi=(8)
cfn=(32)
calls=477 0x387e4bd0b0 0 
* * 134547 20429 20722 24 27 14 24 27 14 21763 715 477
* * 477 477 0 1 1 0 1 1 0 0 0 477
+5 +1 477 477
+1 * 477 477

fn=(102)
0x4048de 113 491 0 491 1 0 0 1
+1 * 491
+3 * 491 0 491
+4 +1 491
+10 * 491 491
+1 * 491 491

fn=(266)
0x40406a 129 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 * 235 0 235
+4 +1 235 235
+4 * 235
+3 * 235
+5 * 235 0 235
cfi=(16)
cfn=(226)
calls=235 0x402d61 -20 
* * 1645 705 705
+5 * 235
+3 * 235 0 0 0 0 0 0 0 0 235
+2 * 235 235
+4 * 235 235 0 0 15 0 0 15
+2 * 235 0 235 0 0 7 0 0 7
+2 * 235 235
+1 * 235 235

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +10 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=470 0x404829 -26 
* * 199784 64994 62178 25 3 4 25 3 4 7522 485 936 117
+5 +1 470 470
+1 * 470 470

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfn=(50)
calls=470 0x404484 107 
* * 206364 67344 64528 25 3 4 25 3 4 7522 485 936 117
+5 * 470 470
+1 * 470 470

fn=(230)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 5 13
+5 * 14 14
+1 * 14 14

fn=(52)
0x404829 91 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470 0 1 0 0 1
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=470 0x404a36 450 
* * 193204 62644 59828 24 3 4 24 3 4 7522 485 936 117
+5 * 470 470
+1 * 470 470

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=470 0x40439c 107 
* * 206364 67344 64528 7 1 7 7 1 7 7522 469 936
+5 * 470 470
+1 * 470 470

fn=(116)
0x40439c 107 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +10 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=470 0x4047d7 -26 
* * 199784 64994 62178 7 1 7 7 1 7 7522 469 936
+5 +1 470 470
+1 * 470 470

fn=(118)
0x4047d7 91 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=470 0x4049e2 450 
* * 193204 62644 59828 7 1 7 7 1 7 7522 469 936
+5 * 470 470
+1 * 470 470

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fl=(2)
fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 961 0 961 1 0 0 1
+1 * 961
+3 * 961 0 961 1 0 0 1
+4 +1 961 961
+4 * 961 961
+1 * 961 961

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+3 * 470 0 470
+4 * 470
+4 * 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=470 0x404380 726 
* * 4700 2350 1880
+5 * 470 470
+4 * 470 470
+1 * 470 470

fn=(148)
0x402df4 414 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470 1 0 0 1
+4 +2 470 470
+4 * 470
+3 * 470 0 470
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=470 0x40325e 113 
* * 2820 1410 940
+5 * 470
+3 * 470 470
+4 * 470 470
+4 * 470 470
+4 * 470 470
+3 -1 470
+3 * 470
+3 * 470 0 470
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=470 0x40326c 148 
* * 14570 4700 5640 4 0 0 4
+5 +1 470 470
+4 * 470
+3 * 470 0 470
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=470 0x4031ec 159 
* * 87690 26126 16526 27 5 0 27 5 0 12698 413 940
+5 * 470
jump=470 +28 * 
* * 
+28 * 470 0 0 1 0 0 1
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +2 477 477
+5 * 477 0 0 0 0 0 0 0 0 477
+2 +1 477 477
+4 * 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfi=(5)
cfn=(160)
calls=477 0x4044d6 -65 
* * 57005 14577 8193 24 5 0 24 5 0 12390 418 954
+5 +1 477 477
+1 * 477 477

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=470 0x4043ca -45 
* * 16920 6110 6580 4 0 4 4 0 4
+5 +1 470 470 0 1 0 0 1
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=470 0x404412 +43 
* * 163903 31862 29330 22 16 8 22 16 8 22341 672 940
+5 * 470
jump=470 +28 * 
* * 
+28 * 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(14)
0x4043ca 90 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470 0 0 1 0 0 1
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(4)
cfn=(16)
calls=470 0x404804 +24 
* * 8460 2820 3290 2 0 1 2 0 1
+5 * 470 470
+4 * 470 0 470 0 0 2 0 0 2
+7 * 470 470
+4 * 470 0 470 1 0 0 1
+8 * 470 470
+4 * 470 0 470
+8 +1 470 470
+1 * 470 470

fn=(80)
0x402ff4 310 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+2 * 470 0 470
+2 * 470 0 470
+1 * 470 0 0 1 0 0 1
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470
+3 * 470 0 470
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=470 0x4039fc 117 
* * 2820 1410 940 2 0 0 2
+5 * 470
+3 * 470 0 470
cfi=(3)
cfn=(84)
calls=470 0x4039ed -88 
* * 2820 1410 940
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(2)
calls=470 0x402d74 645 
* * 6110 2820 940
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=470 0x403a0a 134 
* * 193065 40636 36806 25 6 27 25 6 27 22918 678 940
+5 +4 470 470
+4 * 470
+3 * 470 0 470
cfn=(106)
calls=470 0x40325e 113 
* * 2820 1410 940 1 0 0 1
+5 * 470
+3 * 470 470
+4 * 470 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=470 0x403a98 565 
* * 11750 4700 3760 2 0 0 2
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(112)
calls=470 0x403a68 547 
* * 11750 4700 3760
+5 * 470
+3 * 470
+3 * 470
+3 * 470
+3 * 470 0 470
cfi=(11)
cfn=(114)
calls=470 0x403ac9 -60 
* * 213414 69694 67348 7 1 7 7 1 7 7522 469 936
+5 -3 470 470
+4 * 470 0 470
+4 * 470
jump=470 +28 +4 
* * 
+28 +4 470
+4 * 470 470
+1 * 470 470
+2 * 470 470
+2 * 470 470
+1 * 470 470

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +2 477 477
+5 * 477 0 0 0 0 0 0 0 0 477 7
+2 +1 477 477
+4 * 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfi=(5)
cfn=(190)
calls=477 0x40452a -65 
* * 63710 17150 10048 0 1 0 0 1 0 14331 44 954
+5 +1 477 477
+1 * 477 477

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477 1 0 0 1
+4 * 477 0 477
+4 0 477 477
+5 0 477 0 0 0 0 0 0 0 0 477
+2 0 477 477
+4 0 477 477
+4 0 477
+5 0 477
+3 0 477
+3 0 477 0 477
fi=(6) ???
cfi=(5)
cfn=(26)
calls=477 0x404730 99 
* 0 146949 24245 24538 28 28 14 28 28 14 22240 715 954
+5 0 477
fi=(6)
jump=477 +7 0 
* 0 
+7 0 477 477
+1 0 477 477

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470 0 470
+4 * 470
+4 * 470 0 0 1 0 0 1
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=470 0x404468 726 
* * 4700 2350 1880 1 0 0 1
+5 * 470 470
+4 * 470 470
+1 * 470 470

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+3 * 470 0 470
+4 * 470
+4 * 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(10)
cfn=(44)
calls=470 0x404468 726 
* * 4700 2350 1880
+5 * 470 470
+4 * 470 470
+1 * 470 470

fn=(86)
0x403a0a 134 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=470 0x4042e2 -45 
* * 16920 6110 6580 5 0 0 5
+5 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=470 0x40432a +43 
* * 165805 31236 26936 19 6 27 19 6 27 22918 678 940
+5 * 470
jump=470 +28 * 
* * 
+28 * 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(88)
0x4042e2 90 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfi=(4)
cfn=(90)
calls=470 0x4047b2 +24 
* * 8460 2820 3290 3 0 0 3
+5 * 470 470
+4 * 470 0 470
+7 * 470 470
+4 * 470 0 470
+8 * 470 470
+4 * 470 0 470
+8 +1 470 470
+1 * 470 470

fn=(156)
0x4031ec 159 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470 0 1 0 0 1
+4 * 470
+3 * 470 470
+4 * 470 470
+3 * 470
+3 * 470
+3 * 470
+4 * 470
+3 * 470 470
+4 * 470 470
+3 -1 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(158)
calls=470 0x403ce6 +11 
* * 63720 17196 10416 24 5 0 24 5 0 12698 413 940
+5 +1 470 470
+4 * 470
+3 * 470 0 470
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=470 0x4031b8 -82 
* * 10810 3760 3760 1 0 0 1
+5 * 470
jump=470 +28 * 
* * 
+28 * 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(172)
0x4031b8 79 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 470
+4 * 470
+3 * 470 0 470
cfi=(4)
cfn=(174)
calls=470 0x403ccc +42 
* * 6580 2350 2350
+5 * 470 470
+1 * 470 470

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10)
0x402f54 645 968 0 968 1 0 0 1
+1 * 968
+3 * 968 0 968
+4 +1 968 968
+4 * 968 968 0 0 2 0 0 2
+4 * 968
+3 * 968 968
+4 * 968 968
+3 * 968
+3 * 968
+3 * 968
+4 * 968 968
+1 * 968 968

fn=(106)
0x40325e 113 961 0 961 1 0 0 1
+1 * 961
+3 * 961 0 961
+4 +1 961 961
+4 * 961 961
+1 * 961 961

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 484 0 484 1 0 0 1
+1 * 484
+3 * 484 0 484 0 0 1 0 0 1
+4 +1 484 484
+4 * 484 484
+1 * 484 484

fn=(82)
0x4039fc 117 484 0 484 1 0 0 1
+1 * 484
+3 * 484 0 484 1 0 0 1
+4 +1 484 484
+4 * 484 484
+1 * 484 484

fn=(200)
0x402eda 901 235 0 235
+1 * 235
+3 * 235
+4 * 235 0 235
+4 * 235 0 235
+4 +2 235 235
+4 * 235 235
+4 * 235 235
+4 * 235 235
+4 * 235
+3 * 235 0 0 0 0 0 0 0 0 235 7
jcnd=7/235 +51 +10 
* * 
+2 +3 228 228
+4 * 228 228
+4 * 228 228
+4 -1 228 228
+4 * 228
+3 * 228
+3 * 228 0 228
cfi=(3)
cfn=(222)
calls=228 0x403373 215 
* * 8664 2964 3192 0 15 2 0 15 2 228 1
+5 +2 228 228
+4 * 228 228
+4 * 228
+4 * 228 228
+4 * 228 0 228
+4 * 228
jump=228 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 10946 3357 2905 36 9 9 36 9 9 761 53 41
+5 +2 235 235
+1 * 235 235

fn=(4)
0x4030b2 310 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+2 * 470 0 470
+2 * 470 0 470
+1 * 470
+4 * 470 0 470 1 0 0 1
+4 * 470 0 470
+4 +2 470 470
+4 * 470
+3 * 470 0 470
cfn=(6)
calls=470 0x403b08 117 
* * 2820 1410 940 1 0 1 1 0 1
+5 * 470
+3 * 470 0 470
cfi=(3)
cfn=(8)
calls=470 0x403afa -88 
* * 2820 1410 940 1 0 0 1
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(10)
calls=470 0x402f54 645 
* * 6110 2820 940 1 1 0 1 1
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470
+3 * 470
+3 * 470 0 470
cfn=(12)
calls=470 0x403b16 134 
* * 191163 41262 39200 27 16 12 27 16 12 22341 672 940
+5 +4 470 470 0 1 0 0 1
+4 * 470
+3 * 470 0 470
cfn=(40)
calls=470 0x40333c 113 
* * 2820 1410 940 2 0 0 2
+5 * 470
+3 * 470 470
+4 * 470 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(42)
calls=470 0x403ba4 565 
* * 11750 4700 3760 3 0 0 3
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(46)
calls=470 0x403b74 547 
* * 11750 4700 3760
+5 * 470
+3 * 470
+3 * 470
+3 * 470
+3 * 470 0 470 1 0 0 1
cfi=(11)
cfn=(48)
calls=470 0x403bd5 -60 
* * 213414 69694 67348 26 3 4 26 3 4 7522 485 936 117
+5 -3 470 470
+4 * 470 0 470
+4 * 470
jump=470 +28 +4 
* * 
+28 +4 470
+4 * 470 470
+1 * 470 470
+2 * 470 470
+2 * 470 470
+1 * 470 470

fn=(108)
0x403a98 565 470 0 470 1 0 0 1
+1 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+4 * 470 0 470
+4 * 470
+4 * 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfi=(10)
cfn=(110)
calls=470 0x404380 726 
* * 4700 2350 1880 1 0 0 1
+5 * 470 470
+4 * 470 470
+1 * 470 470

fn=(178)
0x402e74 414 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470 1 0 0 1
+4 +2 470 470
+4 * 470
+3 * 470 0 470
cfn=(40)
calls=470 0x40333c 113 
* * 2820 1410 940
+5 * 470
+3 * 470 470
+4 * 470 470
+4 * 470 470
+4 * 470 470
+3 -1 470
+3 * 470
+3 * 470 0 470
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=470 0x40334a 148 
* * 14570 4700 5640 2 0 0 2
+5 +1 470 470
+4 * 470
+3 * 470 0 470
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=470 0x4032ca 159 
* * 94362 28682 18378 3 1 0 3 1 0 14630 37 940
+5 * 470
jump=470 +28 * 
* * 
+28 * 470 0 0 1 0 0 1
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 477 0 477 1 0 0 1
+1 * 477 0 0 1 0 0 1
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 0 477 477
+5 0 477 0 0 0 0 0 0 0 0 477
+2 0 477 477
+4 0 477 477
+4 0 477
+5 0 477
+3 0 477
+3 0 477 0 477
fi=(6)
cfi=(5)
cfn=(100)
calls=477 0x40461a 99 
* 0 149392 23841 22318 29 14 32 29 14 32 22915 721 954
+5 0 477
fi=(6)
jump=477 +7 0 
* 0 
+7 0 477 477
+1 0 477 477

fn=(144)
0x402d9a 770 84365 0 84365
+1 * 84365
+3 * 84365 0 84365
+4 * 84365 0 84365
+4 +1 84365 84365
+4 * 84365 84365
+3 * 84365 84365
+4 * 84365
+4 * 84365
+3 * 84365 84365
+1 * 84365 84365

fn=(146)
0x402dba 770 84365 0 84365
+1 * 84365
+3 * 84365 0 84365 1 0 0 1
+4 * 84365 0 84365
+4 +1 84365 84365
+4 * 84365 84365
+3 * 84365 84365
+4 * 84365
+4 * 84365
+3 * 84365 84365
+1 * 84365 84365

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 470
+4 * 470
+3 * 470 0 470
cfi=(4)
cfn=(194)
calls=470 0x403d7e +42 
* * 6580 2350 2350 1 0 0 1
+5 * 470 470
+1 * 470 470

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470
+3 * 470 470
+4 * 470 470
+3 * 470
+3 * 470
+3 * 470
+4 * 470
+3 * 470 470
+4 * 470 470
+3 -1 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(188)
calls=470 0x403d98 +11 
* * 70392 19752 12268 1 1 0 1 1 0 14630 37 940
+5 +1 470 470
+4 * 470
+3 * 470 0 470
cfn=(192)
calls=470 0x403296 -82 
* * 10810 3760 3760 1 0 0 1
+5 * 470
jump=470 +28 * 
* * 
+28 * 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(2)
0x402d74 645 1908 0 1908 1 0 0 1
+1 * 1908
+3 * 1908 0 1908 0 0 1 0 0 1
+4 +1 1908 1908
+4 * 1908 1908 0 1 1 0 1 1
+4 * 1908
+3 * 1908 1908
+4 * 1908 1908
+3 * 1908
+3 * 1908
+3 * 1908
+4 * 1908 1908
+1 * 1908 1908

fn=(20)
0x404412 179 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(22)
calls=470 0x404236 -14 
* * 152153 26222 26040 21 16 8 21 16 8 22341 672 940
+5 * 470 470
+4 * 470 0 470
+3 +1 470 470
+4 * 470 470 0 1 0 0 1
+3 * 470 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+3 * 470 470
+4 * 470
+4 * 470
+3 * 470 470
+4 * 470 0 470
+4 +1 470 470
+1 * 470 470

fn=(94)
0x40432a 179 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470 0 1 0 0 1
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(96)
calls=470 0x403fbe -14 
* * 154055 25596 23646 18 6 27 18 6 27 22918 678 940
+5 * 470 470
+4 * 470 0 470
+3 +1 470 470
+4 * 470 470
+3 * 470 470
+4 * 470 0 470
+4 +1 470 470
+4 * 470 470
+3 * 470 470
+4 * 470
+4 * 470
+3 * 470 470
+4 * 470 0 470
+4 +1 470 470
+1 * 470 470

fn=(244)
0x402f7a 901 235 0 235
+1 * 235
+3 * 235 0 0 1 0 0 1
+4 * 235 0 235
+4 * 235 0 235
+4 +2 235 235
+4 * 235 235
+4 * 235 235
+4 * 235 235
+4 * 235
+3 * 235 0 0 0 0 0 0 0 0 235
jcnd=7/235 +51 +10 
* * 
+2 +3 228 228
+4 * 228 228
+4 * 228 228
+4 -1 228 228
+4 * 228
+3 * 228
+3 * 228 0 228
cfi=(3)
cfn=(264)
calls=228 0x4036b1 215 
* * 8664 2964 3192 0 15 4 0 15 4 228
+5 +2 228 228
+4 * 228 228
+4 * 228
+4 * 228 228
+4 * 228 0 228
+4 * 228
jump=228 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246)
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10438 3152 2734 27 12 12 27 12 12 672 60 41
+5 +2 235 235
+1 * 235 235

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 512 0 512 1 0 0 1
+1 * 512
+3 * 512
+4 * 512 0 512
+4 +1 512 512
+4 * 512
+3 * 512 0 512 1 0 0 1
cfi=(13)
cfn=(64)
calls=512 -33 -66 
* * 3072 1536 1024
+5 * 512 512
+1 * 512 512

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 940 0 940
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940 940
+4 * 940
+3 * 940 0 940
cfi=(13)
cfn=(68)
calls=940 0x404f1a -58 
* * 15040 5640 4700 2 0 1 2 0 1
+5 * 940 940
+1 * 940 940

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +10 470 470
+4 * 470
+3 * 470 0 470
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=470 0x404bc6 288 
* * 7050 2820 2350 3 0 0 3
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(122)
calls=470 0x404bc6 288 
* * 7050 2820 2350
+5 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=470 0x404be0 -36 
* * 168764 54184 51368 4 1 7 4 1 7 7522 469 936
+5 +1 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(128)
0x404878 277 512 0 512
+1 * 512
+3 * 512
+4 * 512 0 512 1 0 0 1
+4 +1 512 512
+4 * 512
+3 * 512 0 512
cfi=(13)
cfn=(130)
calls=512 -33 -66 
* * 3072 1536 1024 0 0 1 0 0 1
+5 * 512 512
+1 * 512 512

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 940 0 940
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940 940
+4 * 940
+3 * 940 0 940
cfi=(13)
cfn=(134)
calls=940 0x404e98 -58 
* * 15040 5640 4700 2 0 0 2
+5 * 940 940
+1 * 940 940

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +8 470 0 470
+4 +3 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=470 0x404eb5 -22 
* * 118004 37264 33978 1 1 7 1 1 7 7522 469 936
+5 +1 470 470
+1 * 470 470

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 5 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 940 0 940 1 0 0 1
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940 940
+4 * 940
+3 * 940 0 940
cfi=(13)
cfn=(124)
calls=940 0x404d36 -77 
* * 5640 2820 1880 2 0 0 2
+5 * 940 940
+1 * 940 940

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 940 0 940 1 0 0 1
+1 * 940
+3 * 940
+4 * 940 0 940 1 0 0 1
+4 +1 940 940
+4 * 940
+3 * 940 0 940
cfi=(13)
cfn=(58)
calls=940 0x404d8f -77 
* * 5640 2820 1880 1 0 0 1
+5 * 940 940
+1 * 940 940

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 484 0 484
+1 * 484
+3 * 484
+4 * 484 0 484 1 0 0 1
+4 * 484 0 484
+4 * 484 0 484
+4 +2 484 484
+4 * 484 484
+4 * 484
+3 * 484
+3 * 484
+4 * 484 0 484
+4 +1 484 484
+5 * 484 0 0 0 0 0 0 0 0 484
jcnd=7/484 +33 +2 
* * 
+2 +1 477 477
+4 * 477
+8 * 477 477
+4 * 477 477
+4 * 477
+3 * 477 0 0 1 0 0 1
+3 * 477 0 477 0 0 1 0 0 1
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(78) memmove
calls=477 0x3877c83840 0 
* * 105576 32275 31326 11 2 5 11 2 5 7114 488 472 117
* * 477 477 0 1 1 0 1 1 0 0 0 477
+5 +1 484 484
+4 * 484
+8 * 484 484
+4 * 484
+3 +1 484 484
+1 * 484 484

fn=(140)
0x404eb5 368 484 0 484
+1 * 484
+3 * 484
+4 * 484 0 484 1 0 0 1
+4 * 484 0 484
+4 * 484 0 484 0 0 1 0 0 1
+4 +2 484 484
+4 * 484 484
+4 * 484
+3 * 484
+3 * 484
+4 * 484 0 484
+4 +1 484 484
+5 * 484 0 0 0 0 0 0 0 0 484
jcnd=7/484 +33 +2 
* * 
+2 +1 477 477
+4 * 477
+8 * 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cob=(2)
cfi=(9)
cfn=(78)
calls=477 0x3877c83840 0 
* * 105576 32275 31326 0 1 8 0 1 8 7114 474 472
* * 477 477 0 0 0 0 0 0 0 0 0 477
+5 +1 484 484
+4 * 484
+8 * 484 484
+4 * 484
+3 +1 484 484
+1 * 484 484

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470 1 0 0 1
+4 * 470 0 470
+4 * 470 0 470
+4 +8 470 0 470
+4 +3 470 470
+4 * 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(74)
calls=470 0x404f37 -22 
* * 118004 37264 33978 14 3 3 14 3 3 7522 485 936 117
+5 +1 470 470
+1 * 470 470

fn=(126)
0x404be0 424 470 0 470
+1 * 470
+3 * 470 0 470
+2 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +4 470 470
+4 * 470
+3 * 470 0 470
cfn=(128)
calls=470 0x404878 277 
* * 7050 2820 2350 1 0 0 1
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(132)
calls=470 0x404d44 277 
* * 11750 4230 3760 2 0 0 2
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(132)
calls=470 0x404d44 277 
* * 11750 4230 3760
+5 * 470
+3 * 470
+3 * 470
+3 * 470 0 470
cfn=(138)
calls=470 0x404d5e -49 
* * 125054 39614 36798 1 1 7 1 1 7 7522 469 936
+5 +1 470
+4 * 470 470
+1 * 470 470
+2 * 470 470
+1 * 470 470

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 5 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 470 0 470
+1 * 470
+3 * 470 0 470
+1 * 470
+4 * 470 0 470 1 0 0 1
+4 * 470 0 470
+4 * 470 0 470
+4 +10 470 470
+4 * 470
+3 * 470 0 470
cfn=(56)
calls=470 0x404c38 288 
* * 7050 2820 2350 3 0 0 3
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(56)
calls=470 0x404c38 288 
* * 7050 2820 2350
+5 * 470 470
+4 * 470
+3 * 470
+3 * 470 0 470
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=470 0x404c52 -36 
* * 168764 54184 51368 20 3 4 20 3 4 7522 485 936 117
+5 +1 470
+4 * 470 470
+1 * 470 470
+1 * 470 470

fn=(60)
0x404c52 424 470 0 470
+1 * 470
+3 * 470 0 470
+2 * 470 0 470
+1 * 470
+4 * 470 0 470
+4 * 470 0 470
+4 * 470 0 470
+4 +4 470 470
+4 * 470
+3 * 470 0 470
cfn=(62)
calls=470 0x40492d 277 
* * 7050 2820 2350 2 0 0 2
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470 1 0 0 1
cfn=(66)
calls=470 0x404d9d 277 
* * 11750 4230 3760 2 0 1 2 0 1
+5 * 470
+3 * 470 470
+4 * 470
+3 * 470 0 470
cfn=(66)
calls=470 0x404d9d 277 
* * 11750 4230 3760
+5 * 470
+3 * 470
+3 * 470
+3 * 470 0 470
cfn=(72)
calls=470 0x404db7 -49 
* * 125054 39614 36798 15 3 3 15 3 3 7522 485 936 117
+5 +1 470
+4 * 470 470
+1 * 470 470
+2 * 470 470
+1 * 470 470

fn=(282)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 +1 940 940
+4 * 940 940
+1 * 940 940

fn=(110)
0x404380 726 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 * 940 0 940
+4 * 940 940
+4 * 940 940
+3 * 940 940
+4 * 940 0 940
+3 * 940 940
+1 * 940 940

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 +1 940 940
+4 * 940 940
+1 * 940 940

fn=(44)
0x404468 726 940 0 940
+1 * 940
+3 * 940 0 940
+4 * 940 0 940
+4 * 940 940
+4 * 940 940
+3 * 940 940
+4 * 940 0 940 1 0 0 1
+3 * 940 940
+1 * 940 940

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 477 0 477 1 0 0 1
+1 * 477
+3 * 477 0 477
+4 * 477 0 477
+4 * 477 477
+1 * 477 477

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 477 0 477 1 0 0 1
+1 * 477
+3 * 477 0 477
+4 * 477 0 477 1 0 0 1
+4 * 477 477
+1 * 477 477

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 +4 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfn=(184)
calls=477 0x40454c -14 
* * 2862 954 1431 1 0 0 1
+5 +2 477 477
+1 * 477 477

fn=(150)
0x40326c 148 477 0 477
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +3 477 477 0 1 0 0 1
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=477 0x403d1a -29 
* * 8586 2862 3339 3 0 0 3
+5 +1 477 477
+1 * 477 477

fn=(180)
0x40334a 148 477 0 477
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 * 477 0 477
+4 +3 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfn=(182)
calls=477 0x403dcc -29 
* * 8586 2862 3339 2 0 0 2
+5 +1 477 477
+1 * 477 477

fn=(152)
0x403d1a 122 477 0 477 1 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
+4 * 477 0 477
+4 +4 477 477
+4 * 477 477
+4 * 477
+3 * 477
+3 * 477 0 477
cfn=(154)
calls=477 0x4044f8 -14 
* * 2862 954 1431 2 0 0 2
+5 +2 477 477
+1 * 477 477

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2428 408 406 9 12 6 9 12 6 376 43 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 14 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 2969 630 580 13 8 5 13 8 5 474 43 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 5 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 5 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

ob=(2)
fl=(9)
fn=(36) malloc
0x3877c7aa50 0 954 0 954 1 0 0 1
+5 0 954 0 954
+5 0 954
+3 0 954 0 954
+5 0 954
+4 0 954 954 0 0 1 0 0 1
+7 0 954 954 0 0 1 0 0 1
+3 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+6 0 954 954 0 0 1 0 0 1
+7 0 954 954 0 1 1 0 1 1
+4 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+2 0 954 954 0 0 1 0 0 1
+3 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +97 0 
* 0 
+18 0 954
+3 0 954
+3 0 954 0 954
cfn=(38) _int_malloc
calls=954 0x3877c79a00 0 
* 0 216205 26144 30638 42 34 45 42 34 45 33707 1419
+5 0 954
+3 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+2 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+2 0 954
+3 0 954 0 0 0 0 0 0 0 0 954 5
+2 0 954 954
+7 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +13 0 
* 0 
+13 0 954 0 954
+2 0 954 0 0 0 0 0 0 0 0 954 12
+6 0 954
+3 0 954 954
+4 0 954 954
+5 0 954 954
+5 0 954
+4 0 954 954
+1 0 954 0 0 1 0 0 1
+5 0 954 954 0 0 1 0 0 1
+7 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +14 0 
* 0 
+14 0 954 0 954 1 0 0 1
+3 0 954 0 0 0 0 0 0 0 0 954
+6 0 954
jump=954 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 954 0 954 1 0 0 1
+2 0 954
+3 0 954
+3 0 954 0 954
+2 0 954
+3 0 954 0 954
+1 0 954
+3 0 954 0 954
+1 0 954
+3 0 954
+4 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+6 0 954
+4 0 954
+3 0 954 0 0 0 0 0 0 0 0 954 7
jcnd=10/954 0x3877c838d1 0 
* 0 
+2 0 944
+3 0 944
+3 0 944
+3 0 944
+3 0 944
+3 0 944 0 0 0 0 0 0 0 0 944
jcnd=944/944 +41 0 
* 0 
+41 0 944 0 0 1 0 0 1
+3 0 944 0 0 0 0 0 0 0 0 944
jcnd=944/944 0x3877c839c0 0 
* 0 
+24 0 944
+3 0 944
+4 0 944
+3 0 944
+3 0 944
+3 0 944
+3 0 944
+3 0 944 0 0 0 0 0 0 0 0 944 470
jcnd=480/944 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 474
+10 0 474 474 0 0 2 0 0 2
+3 0 474
+4 0 474 0 474
+3 0 474
+4 0 474
+4 0 474 0 0 0 0 0 0 0 0 474
jcnd=474/474 -18 0 
* 0 
-18 0 1478 1478
+3 0 1478
+4 0 1478 0 1478
+3 0 1478
+4 0 1478
+4 0 1478 0 0 0 0 0 0 0 0 1478 11
jcnd=1004/1478 -18 0 
* 0 
+2 0 954
+4 0 954
+3 0 954 954
+1 0 954 954
+1 0 954 954
+2 0 954 954 0 1 0 0 1
+2 0 954 954
0x3877c839c0 0 944 0 0 1 0 0 1
+3 0 944
+3 0 944
+3 0 944
+4 0 944 0 944 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=944 0x3877c89b20 0 
* 0 157190 57828 55940 6 1 12 6 1 12 7526 474 944 117
+5 0 944
jump=944 0x3877c838be 0 
* 0 

fn=(168) free
0x3877c7b8b0 0 954 954 0 1 1 0 1 1
+7 0 954 954 0 0 1 0 0 1
+3 0 954
+3 0 954 0 0 1 0 0 1 0 0 954
+6 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+6 0 954 954
+4 0 954
+4 0 954
+2 0 954 0 0 0 0 0 0 0 0 954 2
+2 0 954
+2 0 954
+7 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +14 0 
* 0 
+14 0 954
+2 0 954
cfn=(170) _int_free
calls=954 0x3877c78650 0 
* 0 91141 24095 13471 19 2 0 19 2 0 21951 460

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 3 0 0 3
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 954 0 954 1 0 0 1
+2 0 954 0 954
+2 0 954 0 954
+2 0 954
+3 0 954 0 954
+2 0 954 0 954
+1 0 954 0 954
+1 0 954
+3 0 954
+4 0 954 954
+4 0 954 0 954
+4 0 954
+3 0 954
+4 0 954
+3 0 954
+3 0 954
+3 0 954 0 0 1 0 0 1 0 0 954
+6 0 954
+4 0 954 0 0 0 0 0 0 0 0 954
+6 0 954
+4 0 954 0 0 0 0 0 0 0 0 954
+6 0 954 954
+7 0 954 0 0 0 0 0 0 0 0 954 4
jcnd=830/954 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 830
+2 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830 0 1 0 0 1
+4 0 830
+3 0 830
+2 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 0x3877c78a40 0 
* 0 
+6 0 830 830
+4 0 830
+3 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830
+5 0 830
+4 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 0x3877c7907c 0 
* 0 
+6 0 830 830
+5 0 830
+4 0 830 0 0 0 0 0 0 0 0 830
+6 0 830
+4 0 830 0 0 1 0 0 1 0 0 830
+6 0 830
+4 0 830 830
+7 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830
+6 0 830
+2 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830
+4 0 830 0 0 0 0 0 0 0 0 830 5
jcnd=826/830 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 830 830 0 1 0 0 1
+4 0 830 0 0 0 0 0 0 0 0 830 332
jcnd=332/830 0x3877c78bf0 0 
* 0 
+6 0 498 498 0 0 1 0 0 1
+6 0 498 0 0 1 0 0 1 0 0 498 46
jcnd=33/498 0x3877c78a78 0 
* 0 
+6 0 465 465
+5 0 465 465
+5 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+9 0 465 0 465
+4 0 465 0 465
+4 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=457/465 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 465
+3 0 465
+4 0 465 465
+4 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
-12 0 33
+4 0 33 33
+4 0 33 33
+4 0 33 0 0 0 0 0 0 0 0 33
+6 0 498
+7 0 498 0 498
+4 0 498 0 498
+4 0 498 0 0 0 0 0 0 0 0 498 65
jcnd=429/498 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 429 0 429
+4 0 429
+3 0 429 0 429
+4 0 429
+4 0 429 0 429
+4 0 429 0 429
+4 0 429
+7 0 429 0 0 0 0 0 0 0 0 429
jcnd=429/429 0x3877c78b20 0 
* 0 
-7 0 332
+7 0 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 0x3877c78b20 0 
* 0 
0x3877c78a40 0 830 0 0 1 0 0 1
+5 0 830 830
+4 0 830 830
+7 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 +16 0 
* 0 
+16 0 830 0 830
+5 0 830 0 0 0 0 0 0 0 0 830
+6 0 830
+3 0 830
jump=830 0x3877c7878f 0 
* 0 
+10 0 33 0 33
+6 0 33 0 0 1 0 0 1
jump=33 0x3877c78885 0 
* 0 
0x3877c78b20 0 830 830 0 1 0 0 1
+4 0 830
+2 0 830 0 0 0 0 0 0 0 0 830
+6 0 830 830
+7 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 +15 0 
* 0 
+15 0 830 0 830 1 0 0 1
+4 0 830 0 0 0 0 0 0 0 0 830 2
+6 0 830
+4 0 830 830
+1 0 830 830
+1 0 830 830
+2 0 830 830
+2 0 830 830
+2 0 830 830
+2 0 830 830
0x3877c78bf0 0 332 0 0 1 0 0 1
+3 0 332 0 332
+4 0 332
+3 0 332
+4 0 332 0 332 1 0 0 1
+4 0 332
jump=332 0x3877c788cf 0 
* 0 
0x3877c7907c 0 830 830 0 1 1 0 1 1
+4 0 830 0 0 1 0 0 1
+7 0 830
+4 0 830
+3 0 830
+3 0 830 0 0 0 0 0 0 0 0 830
jcnd=830/830 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 944 0 0 1 0 0 1
+7 0 944
+3 0 944
+3 0 944 944 0 0 1 0 0 1
+4 0 944
+4 0 944 0 0 0 0 0 0 0 0 0 0 944 117
jump=112 0x3877c89be8 0 
* 0 
jump=120 0x3877c89bd0 0 
* 0 
jump=112 0x3877c89bb8 0 
* 0 
jump=116 +11 0 
* 0 
jump=120 0x3877c89c48 0 
* 0 
jump=122 0x3877c89c30 0 
* 0 
jump=120 0x3877c89c18 0 
* 0 
jump=122 0x3877c89c00 0 
* 0 
+11 0 116 116
+3 0 116
+4 0 116
+4 0 116 116
+4 0 116
+4 0 116 0 116
+4 0 116
+9 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116
+4 0 116
+4 0 116 0 0 0 0 0 0 0 0 116
jcnd=8/116 0x3877c89c60 0 
* 0 
-40 0 6814 6814
+4 0 6814 0 6814 0 0 3 0 0 3
+4 0 6814 6814
+4 0 6814 0 6814
+4 0 6814 6814
+4 0 6814 0 6814 0 0 1 0 0 1
+4 0 6814 6814
+4 0 6814 0 6814
+4 0 6814
+4 0 6814
+4 0 6814 0 0 0 0 0 0 0 0 6814 470
jcnd=908/6814 0x3877c89c60 0 
* 0 
-32 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122
jcnd=10/122 0x3877c89c60 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-16 0 122 122 0 1 0 0 1
+4 0 122 0 122
+4 0 122 0 0 1 0 0 1
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122 4
jcnd=10/122 0x3877c89c60 0 
* 0 
+6 0 6350
+4 0 6350 6350
+3 0 6350 0 6350 0 0 1 0 0 1
+3 0 6350 6350
+4 0 6350 0 6350 0 0 3 0 0 3
+4 0 6350 6350
+4 0 6350 0 6350 0 0 4 0 0 4
+4 0 6350 6350
+4 0 6350 0 6350
+4 0 6350
jump=6350 -80 0 
* 0 
-30 0 112 112
+3 0 112 0 112
+3 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-16 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
+8 0 112 112
+3 0 112
+4 0 112 0 0 1 0 0 1
+4 0 112
+4 0 112
jump=112 -39 0 
* 0 
+9 0 120
+3 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+3 0 120
+4 0 120
jump=120 -72 0 
* 0 
+8 0 112
+4 0 112 112
+3 0 112 0 0 0 0 0 0 0 0 112
+2 0 112
+4 0 112
jump=112 -99 0 
* 0 
+11 0 122 122 0 1 0 0 1
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b78 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b70 0 
* 0 
+9 0 122 122
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b68 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b60 0 
* 0 
+9 0 944 0 944 1 0 0 1
+3 0 944 944

fn=(104) alloc_perturb
0x3877c77180 0 836 836 0 1 0 0 1
+6 0 836
+2 0 836 0 0 0 0 0 0 0 0 836 1
+2 0 836 836

fn=(38)
0x3877c79a00 0 954 0 954 1 0 0 1
+2 0 954
+3 0 954 0 954
+2 0 954 0 954
+2 0 954 0 954 0 0 1 0 0 1
+2 0 954
+3 0 954 0 954
+1 0 954 0 954
+1 0 954
+4 0 954
+4 0 954 0 0 0 0 0 0 0 0 954
+6 0 954
+4 0 954
+6 0 954
+3 0 954
+4 0 954
+4 0 954
+4 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
+6 0 954 954 0 1 1 0 1 1
+7 0 954 0 0 0 0 0 0 0 0 954 7
jcnd=832/954 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 836
+4 0 836 836
+1 0 836 836
+1 0 836 836
+2 0 836 836
+2 0 836 836
+2 0 836 836
+2 0 836 836
+7 0 849
+7 0 849 0 0 1 0 0 1 0 0 849 3
jcnd=2/849 0x3877c79b70 0 
* 0 
+2 0 847
+3 0 847
+5 0 847
+3 0 847
+4 0 847 0 847
+4 0 847
+2 0 847
+5 0 847 847 0 0 6 0 0 6
+4 0 847
+3 0 847 0 0 0 0 0 0 0 0 847
jcnd=847/847 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 911 244 193 8 3 0 8 3 0 187 17
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 848 0 0 1 0 0 1
+3 0 848
+3 0 848
+3 0 848
+4 0 848
+3 0 848
+4 0 848 0 848
+5 0 848
+3 0 848 0 848
+4 0 848 0 848
+4 0 848 0 848
+5 0 848
+3 0 848
+3 0 848
+3 0 848
+3 0 848
+4 0 848
+4 0 848 0 0 1 0 0 1
+4 0 848 0 848
+4 0 848
+4 0 848 0 848
+5 0 848 0 848
+5 0 848
+3 0 848
+3 0 848 0 848
+5 0 848
+5 0 848
+3 0 848 0 848
+4 0 848 0 848
+4 0 848
+6 0 848 0 848
+4 0 848 0 848
+5 0 848 0 0 1 0 0 1
+3 0 848
+3 0 848
+3 0 848
jump=848 +87 0 
* 0 
+8 0 802
+3 0 802
+4 0 802
+2 0 802
+2 0 802
+3 0 802
+3 0 802
+3 0 802
+2 0 802
+2 0 802
+5 0 802
+2 0 802 802 0 0 2 0 0 2
+4 0 802
+3 0 802
+4 0 802 0 802
+4 0 802 0 802
+8 0 802
+7 0 802 0 802
+4 0 802 0 802 0 0 1 0 0 1
+4 0 802 0 802
+4 0 802 0 0 0 0 0 0 0 0 802
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1719 1719 0 1 0 0 1
+4 0 1719
+3 0 1719 0 0 0 0 0 0 0 0 1719 30
jcnd=816/1719 0x3877c79ef0 0 
* 0 
+6 0 903 903
+4 0 903 903
+4 0 903
+4 0 903 0 0 0 0 0 0 0 0 903
+6 0 903 903 0 1 1 0 1 1
+7 0 903 0 0 0 0 0 0 0 0 903
+6 0 903
+4 0 903
+7 0 903 0 0 0 0 0 0 0 0 903 3
jcnd=6/903 +11 0 
* 0 
+2 0 897
+3 0 897 0 0 0 0 0 0 0 0 897 62
jcnd=821/897 0x3877c79e28 0 
* 0 
+6 0 883
+3 0 883 0 883
+4 0 883 0 883
+5 0 883 0 0 0 0 0 0 0 0 883 9
jcnd=13/883 0x3877c7a090 0 
* 0 
+6 0 870
+7 0 870 0 0 0 0 0 0 0 0 870 10
jcnd=802/870 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 7
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 821 821 0 1 0 0 1
+4 0 821
+3 0 821 0 0 0 0 0 0 0 0 821 334
jcnd=415/821 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 6
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 816 0 0 1 0 0 1
+7 0 816
+3 0 816 0 0 0 0 0 0 0 0 816 1
jcnd=2/816 0x3877c7a0b0 0 
* 0 
+6 0 816 816 0 1 0 0 1
+4 0 816
+3 0 816
+3 0 816
+2 0 816
+4 0 816
+3 0 816
+3 0 816
+2 0 816
+2 0 816
+2 0 816
+2 0 816 816 0 0 1 0 0 1
+8 0 816
+5 0 816
+5 0 816
+2 0 816 0 0 0 0 0 0 0 0 816
-2 0 428
+2 0 428 0 0 0 0 0 0 0 0 428
+2 0 1244
+2 0 1244 0 0 0 0 0 0 0 0 1244 21
jcnd=637/1244 +64 0 
* 0 
+2 0 607
+8 0 607
+3 0 607
+3 0 607 0 0 0 0 0 0 0 0 607 1
jcnd=1/607 0x3877c79fc0 0 
* 0 
-6 0 728
+3 0 728
+3 0 728 0 0 0 0 0 0 0 0 728 3
jcnd=331/728 0x3877c79fc0 0 
* 0 
+2 0 1003
+2 0 1003 1003
+8 0 1003
+2 0 1003 0 0 0 0 0 0 0 0 1003 16
jcnd=728/1003 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 6654
+4 0 6654
+2 0 6654
+2 0 6654 0 0 0 0 0 0 0 0 6654 419
jcnd=5857/6654 -8 0 
* 0 
-2 0 637 0 0 1 0 0 1
+2 0 637 0 0 0 0 0 0 0 0 637 19
jcnd=584/637 -8 0 
* 0 
+2 0 912 912 0 0 10 0 0 10
+4 0 912 0 0 1 0 0 1
+3 0 912 0 0 0 0 0 0 0 0 912 390
jcnd=484/912 0x3877c7a1cf 0 
* 0 
+6 0 428
+2 0 428
+4 0 428
+2 0 428
+2 0 428
+2 0 428 0 428
+8 0 428
jump=428 0x3877c79f30 0 
* 0 
+37 0 332 332 0 1 0 0 1
+5 0 332 332
+4 0 332
+4 0 332 332
+5 0 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 484 484 0 1 1 0 1 1
+4 0 484 484
+4 0 484
+3 0 484 484
+4 0 484
+4 0 484
+3 0 484
+3 0 484 484
+4 0 484 0 0 0 0 0 0 0 0 484
+6 0 484 484
+4 0 484 0 0 0 0 0 0 0 0 484
+6 0 484 484 0 1 0 0 1
+8 0 484 0 484
+4 0 484 0 484
+4 0 484 0 0 0 0 0 0 0 0 484 7
jcnd=414/484 +38 0 
* 0 
+2 0 70 70 0 0 2 0 0 2
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 414
+4 0 414 0 0 0 0 0 0 0 0 414 7
jcnd=17/414 0x3877c7a2e3 0 
* 0 
+6 0 467 467
+4 0 467 467 0 1 0 0 1
+4 0 467 0 0 0 0 0 0 0 0 467
+6 0 467
+4 0 467
+7 0 467 0 467 0 0 7 0 0 7
+4 0 467 0 467
+4 0 467 0 467
+4 0 467 0 467
+4 0 467 0 0 0 0 0 0 0 0 467 3
jcnd=2/467 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 460
+7 0 460 0 460
+4 0 460
+3 0 460
+3 0 460
+4 0 460
+3 0 460
+4 0 460
+3 0 460
+3 0 460
+4 0 460 0 460
+4 0 460 0 460 0 0 1 0 0 1
+4 0 460
jump=460 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 17
+7 0 17 0 17
+6 0 17
+3 0 17 0 0 0 0 0 0 0 0 17
jcnd=17/17 +7 0 
* 0 
+7 0 484
+4 0 484 0 0 1 0 0 1
+3 0 484
+3 0 484 0 484
cfn=(104)
calls=484 0x3877c77180 0 
* 0 1936 968 0 0 0 0 0 0 0 484
+5 0 484
+3 0 484
jump=484 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 332 0 0 1 0 0 1
+7 0 332
+2 0 332
+4 0 332
+3 0 332
+3 0 332 0 332
+5 0 332
+3 0 332
+4 0 332
+3 0 332 0 0 1 0 0 1
+4 0 332
+4 0 332
+3 0 332
+4 0 332 0 332
+4 0 332 0 332 0 0 12 0 0 12
+4 0 332
+3 0 332
+3 0 332 0 332
cfn=(104)
calls=332 0x3877c77180 0 
* 0 1328 664 0 0 0 0 0 0 0 332 1
+5 0 332
+3 0 332
jump=332 0x3877c79ae3 0 
* 0 

ob=(5)
fl=(8)
fn=(164)
0x387e4bb2f0 0 954 0 0 1 0 0 1
+3 0 954 0 0 0 0 0 0 0 0 954
+2 0 954
cob=(2)
cfi=(9)
cfn=(168)
calls=954 0x3877c7b8b0 0 
* 0 105451 26957 13471 21 4 0 21 4 0 25767 462
* 0 954 954 0 1 1 0 1 1 0 0 0 954

fn=(32)
0x387e4bd0b0 0 954 0 954 1 0 0 1
+1 0 954
+5 0 954
+3 0 954 0 954
+1 0 954
+4 0 954 0 0 1 0 0 1
+3 0 954
+4 0 954
+3 0 954 0 954 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36)
calls=954 0x3877c7aa50 0 
* 0 256273 36638 36362 46 40 45 46 40 45 43247 1436
* 0 954 954 0 1 1 0 1 1 0 0 0 954
+5 0 954
+3 0 954 0 0 0 0 0 0 0 0 954
jcnd=954/954 +96 0 
* 0 
+96 0 954 0 0 1 0 0 1
+4 0 954 954
+1 0 954 954
+1 0 954 954

totals: 5564541 2237224 1314523 238 88 80 238 88 80 175297 3585 5714 117
