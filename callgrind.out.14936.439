version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 439


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 489999139 - 491827118
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1728 0 0 1 0 0 1
+3 0 1728 0 0 0 0 0 0 0 0 1728
+2 0 1728
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1728 0x3877c7b8b0 0 
* 0 194335 49719 25485 21 5 0 21 5 0 47697 762
* 0 1728 1728 0 1 1 0 1 1 0 0 0 1728

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1728 0 1728 1 0 0 1
+1 0 1728
+5 0 1728
+3 0 1728 0 1728
+1 0 1728
+4 0 1728 0 0 1 0 0 1
+3 0 1728
+4 0 1728
+3 0 1728 0 1728 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1728 0x3877c7aa50 0 
* 0 472106 68421 68624 49 36 59 49 36 59 78685 2740
* 0 1728 1728 0 1 1 0 1 1 0 0 0 1728
+5 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728
jcnd=1728/1728 +96 0 
* 0 
+96 0 1728 0 0 1 0 0 1
+4 0 1728 1728
+1 0 1728 1728
+1 0 1728 1728

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 428 0 428 1 0 0 1
+1 * 428
+3 * 428
+4 * 428 0 428
+4 * 428 0 428
+4 +1 428 428
+4 * 428
+3 * 428 0 428
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=428 0x402d74 645 
* * 5564 2568 856
+5 * 428
+3 * 428 0 428
+3 +1 428 428
+6 * 428 0 428
+3 * 428 428
+6 * 428 0 428
+3 +1 428 428
+6 * 428 0 428 1 0 0 1
+3 * 428 428
+6 * 428 0 428
+3 +2 428 0 428
+7 * 428
jump=428 +86 * 
* * 
+2 +1 92234 92234
+3 * 92234
+3 * 92234 92234
+4 * 92234
+3 * 92234
+3 * 92234 0 92234
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=92234 0x402d9a 770 
* * 1014574 461170 276702
+5 * 92234 92234
+4 * 92234 92234
+5 * 92234
+4 * 92234 0 92234
+5 +1 92234 92234
+3 * 92234
+3 * 92234 92234
+4 * 92234
+3 * 92234
+3 * 92234 0 92234
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=92234 0x402dba 770 
* * 1014574 461170 276702 1 0 0 1
+5 * 92234 92234
+2 * 92234
+4 * 92234 92234
+5 * 92234
+4 * 92234 0 92234
+5 -2 92234 0 92234
+4 * 92234 92234
+3 * 92234
+3 * 92234 92234
+3 * 92234 0 0 0 0 0 0 0 0 92234 429
jcnd=91806/92234 -93 +1 
* * 
-9 * 428 428 0 1 0 0 1
+3 * 428
+3 * 428 428
+3 * 428 0 0 0 0 0 0 0 0 428
jcnd=428/428 -93 +1 
* * 
+2 +4 428 428
+3 * 428
+3 * 428
+4 * 428 428 0 1 0 0 1
+5 * 428
+4 * 428
+3 * 428 0 428
+5 +1 428 428
+3 * 428
+3 * 428
+4 * 428 428
+5 * 428
+4 * 428
+3 * 428 0 428
+5 +1 428 0 428
+7 * 428
jump=428 0x4016ee * 
* * 
+2 +1 92234 92234
+3 * 92234
+3 * 92234 92234
+4 * 92234
+3 * 92234 0 0 1 0 0 1
+3 * 92234 0 92234
cfi=(2)
cfn=(146)
calls=92234 0x402dba 770 
* * 1014574 461170 276702
+5 * 92234 92234
+2 * 92234
+4 * 92234 92234
+5 * 92234 0 92234
+5 +1 92234 92234
+3 * 92234
+3 * 92234 92234
+4 * 92234
+3 * 92234
+3 * 92234 0 92234
cfi=(2)
cfn=(144)
calls=92234 0x402d9a 770 
* * 1014574 461170 276702
+5 * 92234 92234
+4 * 92234 92234
+5 * 92234 0 92234
+5 +1 92234 92234
+5 * 92234 92234
+5 * 92234 92234
+5 * 92234
+4 * 92234 0 92234
+5 +1 92234 92234
+5 * 92234 92234
+5 * 92234 92234
+5 * 92234
+4 * 92234 0 92234
+5 -4 92234 0 92234
+4 * 92234 92234
+3 * 92234
+3 * 92234 92234
+3 * 92234 0 0 0 0 0 0 0 0 92234 429
jcnd=91806/92234 0x401672 +1 
* * 
-9 * 428 428 0 1 0 0 1
+3 * 428
+3 * 428 428
+3 * 428 0 0 0 0 0 0 0 0 428
jcnd=428/428 0x401672 +1 
* * 
+6 +6 428 428 0 1 0 0 1
+5 * 428 428
+5 * 428 0 428
+5 +2 428 428
+3 +1 428 0 428
+3 * 428 428
+5 * 428 428
+1 * 428 428

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 428
+7 * 428
+7 * 428
+3 * 428
+3 * 428 0 428
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=428 0x4030b2 310 
* * 482392 143699 135454 68 16 16 68 16 16 30241 1278 1710 213
+5 * 428
+7 * 428
+7 * 428
+3 * 428
+3 * 428 0 428
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=428 0x402ff4 310 
* * 481564 142228 132710 48 5 78 48 5 78 30130 1600 1710
+5 * 428 0 0 1 0 0 1
+7 * 428
+7 * 428
+3 * 428
+3 * 428 0 428
cfn=(142)
calls=428 0x401585 -52 
* * 9620156 4253464 2220892 8 0 0 8 0 0 185324 858
+5 * 428 0 428
+8 * 428 428
+6 * 428 0 428
+6 * 428
+7 * 428
+3 * 428 0 428
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=428 0x402df4 414 
* * 106624 33430 23721 33 5 0 33 5 0 11812 347 856
+5 * 428
+7 * 428
+3 * 428 0 428 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=428 0x402e74 414 
* * 112973 35734 25717 7 1 0 7 1 0 13558 32 856
+5 +2 428
+7 * 428
+7 * 428
+3 * 428
+3 * 428 0 428
cfi=(2)
cfn=(4)
calls=428 0x4030b2 310 
* * 482009 143669 135343 2 1 1 2 1 1 30205 789 1710
+5 * 428
+7 * 428
+7 * 428
+3 * 428
+3 * 428 0 428
cfi=(2)
cfn=(80)
calls=428 0x402ff4 310 
* * 480564 142160 132543 0 0 2 0 0 2 29975 1081 1710
+5 * 428 428
+6 * 428 0 0 1 0 0 1
+7 * 428
+7 * 428 0 428
+6 * 428 428
+8 * 428
+3 * 428
+3 * 428 0 428
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=428 0x401719 -33 
* * 4452484 1854096 1020994 4 0 0 4 0 0 92662 429
+5 * 428 0 428
+8 * 428 428
+6 * 428 0 428
+6 * 428
+7 * 428 0 0 1 0 0 1
+3 * 428 0 428
cfi=(2)
cfn=(148)
calls=428 0x402df4 414 
* * 106624 33430 23721 0 0 0 0 0 0 11812 341 856
+5 * 428
+7 * 428
+3 * 428 0 428
cfi=(2)
cfn=(178)
calls=428 0x402e74 414 
* * 112973 35734 25717 0 0 0 0 0 0 13558 26 856
+5 +2 428 428
+7 * 428
+3 * 428 0 428
cfi=(2)
cfn=(2)
calls=428 0x402d74 645 
* * 5564 2568 856
+5 * 428 428
+6 * 428
+3 * 428
+3 * 428
+3 * 428 428
+7 * 428
+3 * 428 0 0 1 0 0 1
+3 * 428 0 428
cfi=(2)
cfn=(144)
calls=428 0x402d9a 770 
* * 4708 2140 1284
+5 * 428
+3 * 428
+7 * 428
+3 * 428
+3 * 428 0 428
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=428 0x402eda 901 
* * 39824 14972 11456 38 33 11 38 33 11 1693 72 47
+5 +1 428 428
+7 * 428
+3 * 428 0 428
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=428 0x402f54 645 
* * 5564 2568 856 0 1 0 0 1
+5 * 428 428
+6 * 428
+3 * 428
+3 * 428
+3 * 428 428
+7 * 428 0 0 1 0 0 1
+3 * 428
+3 * 428 0 428
cfi=(2)
cfn=(146)
calls=428 0x402dba 770 
* * 4708 2140 1284
+5 * 428
+3 * 428
+7 * 428
+3 * 428
+3 * 428 0 428
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=428 0x402f7a 901 
* * 39886 14804 11337 19 43 44 19 43 44 1734 76 47
+5 +1 428 428
+7 * 428
+3 * 428 0 428
cfi=(2)
cfn=(10)
calls=428 0x402f54 645 
* * 5564 2568 856
+5 * 428 428
+6 * 428
+3 * 428
+3 * 428
+3 * 428 428 0 1 0 0 1
+7 * 428
+3 * 428
+3 * 428 0 428
cfi=(2)
cfn=(146)
calls=428 0x402dba 770 
* * 4708 2140 1284
+5 * 428 428
+2 * 428
+4 * 428 428
+8 * 428 428
+8 * 428 0 428
+8 +1 428 428
+7 * 428
+3 * 428 0 428
cfi=(2)
cfn=(2)
calls=428 0x402d74 645 
* * 5564 2568 856
+5 * 428 428 0 1 0 0 1
+6 * 428
+3 * 428
+3 * 428
+3 * 428 428
+7 * 428
+3 * 428
+3 * 428 0 428
cfi=(2)
cfn=(144)
calls=428 0x402d9a 770 
* * 4708 2140 1284
+5 * 428 428
+4 * 428 428
+8 * 428
+4 * 428 428
+8 * 428
+3 * 428 0 428
+8 +2 428 0 428
+7 -12 428 428
+8 * 428 428
+7 * 428 0 0 0 0 0 0 0 0 428 1
jcnd=1/428 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 428
+7 * 428
+3 * 428 0 428
cfi=(2)
cfn=(2)
calls=428 0x402d74 645 
* * 5564 2568 856 2 0 1 2 0 1
+5 * 428
+3 * 428 428
+7 * 428
+3 * 428 0 428
cfi=(2)
cfn=(2)
calls=428 0x402d74 645 
* * 5564 2568 856 0 1 0 0 1
+5 * 428
+3 * 428 0 0 0 0 0 0 0 0 428 1
+2 * 428 0 0 1 0 0 1
+5 * 428
jump=428 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 428
+2 * 428 0 0 0 0 0 0 0 0 428
jcnd=428/428 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 428 0 428
+1 * 428
+3 * 428
+4 * 428 0 428
+4 * 428 0 428
+4 * 428 0 428
+5 +1 428 428
+4 * 428
+3 * 428 0 428
cfi=(2)
cfn=(2)
calls=428 0x402d74 645 
* * 5564 2568 856
+5 * 428
+3 * 428 0 428
+3 +1 428 428 0 1 0 0 1
+6 * 428 0 428
+3 * 428 428
+6 * 428 0 428
+3 +2 428 0 428
+7 * 428
jump=428 +86 * 
* * 
+2 +1 92234 92234
+3 * 92234
+3 * 92234 92234
+4 * 92234
+3 * 92234
+3 * 92234 0 92234
cfi=(2)
cfn=(144)
calls=92234 0x402d9a 770 
* * 1014574 461170 276702
+5 * 92234 92234
+4 * 92234 92234
+5 * 92234
+4 * 92234 0 92234
+5 +1 92234 92234
+3 * 92234
+3 * 92234 92234
+4 * 92234
+3 * 92234
+3 * 92234 0 92234
cfi=(2)
cfn=(146)
calls=92234 0x402dba 770 
* * 1014574 461170 276702
+5 * 92234 92234
+2 * 92234
+4 * 92234 92234
+5 * 92234
+4 * 92234 0 92234
+5 -2 92234 0 92234
+4 * 92234 92234
+3 * 92234
+3 * 92234 92234
+3 * 92234 0 0 0 0 0 0 0 0 92234 429
jcnd=91806/92234 -93 +1 
* * 
-9 * 428 428 0 1 0 0 1
+3 * 428
+3 * 428 428
+3 * 428 0 0 0 0 0 0 0 0 428
jcnd=428/428 -93 +1 
* * 
+2 +4 428 428
+3 * 428
+3 * 428 0 0 1 0 0 1
+4 * 428 428
+5 * 428
+4 * 428
+3 * 428 0 428
+5 +1 428 428
+3 * 428
+3 * 428
+4 * 428 428
+5 * 428
+4 * 428
+3 * 428 0 428
+5 +1 428 428
+5 * 428 428
+5 * 428 428
+5 * 428 0 0 1 0 0 1
+4 * 428
+3 * 428 0 428
+5 +2 428 428
+3 +1 428 0 428
+3 * 428 428
+5 * 428 428
+1 * 428 428

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 856
+4 * 856
+3 * 856 0 856
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=856 0x4044cc -35 
* * 4280 1712 1712
+5 * 856 856
+1 * 856 856

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 856 0 856 1 0 0 1
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856 1 0 0 1
+4 +1 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=856 0x4049d4 -35 
* * 5136 1712 2568 1 0 0 1
+5 * 856 856
+1 * 856 856

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 856 0 856 1 0 0 1
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 856
+4 * 856
+3 * 856 0 856
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=856 0x404520 -35 
* * 4280 1712 1712
+5 * 856 856
+1 * 856 856

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 856 0 856 1 0 0 1
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=856 0x404a28 -35 
* * 5136 1712 2568 1 0 1 1 0 1
+5 * 856 856
+1 * 856 856

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 856 0 856
+1 * 856
+3 * 856 0 856
+4 * 856 856
+4 * 856 856
+1 * 856 856

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 428 0 428
+1 * 428
+3 * 428
+4 * 428 0 428
+4 * 428 0 428
+4 * 428 0 428
+4 +1 428 428
+4 * 428 428
+4 * 428 428
+4 * 428
+3 * 428
+3 * 428 0 428
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=428 0x403df2 -87 
* * 10272 3424 3852 0 28 3 0 28 3 428 2
+5 * 428 428
+1 * 428 428

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 856 0 856 1 0 0 1
+1 * 856
+3 * 856 0 856
+4 * 856 856
+4 * 856 856
+1 * 856 856

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 428 0 428
+1 * 428
+3 * 428
+4 * 428 0 428
+4 * 428 0 428
+4 * 428 0 428
+4 +1 428 428
+4 * 428 428
+4 * 428 428
+4 * 428
+3 * 428
+3 * 428 0 428
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=428 0x40406a -87 
* * 10272 3424 3852 0 27 19 0 27 19 428
+5 * 428 428
+1 * 428 428

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 936 0 936
+1 * 936
+3 * 936 0 936 0 0 1 0 0 1
+4 +1 936 936
+4 * 936 936
+1 * 936 936

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1712 0 1712 1 0 0 1
+1 * 1712
+3 * 1712
+4 * 1712 0 1712
+4 +1 1712
+4 * 1712
+3 * 1712 0 1712
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1712 0x404ffe 790 
* * 10272 5136 3424 1 0 0 1
+5 * 1712 1712
+3 * 1712 1712
+1 * 1712 1712

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1712 0 1712 1 0 0 1
+1 * 1712
+3 * 1712 0 1712
+4 +1 1712 1712
+4 * 1712 1712
+1 * 1712 1712

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1712 0 1712 1 0 0 1
+1 * 1712
+3 * 1712
+4 * 1712 0 1712
+4 +1 1712
+4 * 1712
+3 * 1712 0 1712 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1712 0x40500c 790 
* * 10272 5136 3424 1 0 0 1
+5 * 1712 1712
+3 * 1712 1712
+1 * 1712 1712

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 936 0 936
+1 * 936
+3 * 936 0 936
+4 +1 936 936
+4 * 936 936
+1 * 936 936

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1712 0 1712 1 0 0 1
+1 * 1712
+3 * 1712 0 1712
+4 +1 1712 1712 0 1 0 0 1
+4 * 1712 1712
+1 * 1712 1712

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 856 0 856
+1 * 856
+3 * 856 0 856
+4 * 856 0 856
+4 * 856 856
+4 * 856 856
+1 * 856 856

fl=(5)
fn=(102)
0x4048de 113 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880
+4 +1 880
+10 * 880 880
+1 * 880 880

fn=(266)
0x40406a 129 428 0 428
+1 * 428
+3 * 428
+4 * 428 0 428
+4 * 428 0 428
+4 * 428 0 428
+4 +1 428 428
+4 * 428
+3 * 428
+5 * 428 0 428
cfi=(16)
cfn=(226)
calls=428 0x402d61 -20 
* * 2996 1284 1284
+5 * 428
+3 * 428 0 0 0 0 0 0 0 0 428
+2 * 428 428
+4 * 428 428 0 0 27 0 0 27
+2 * 428 0 428 0 0 19 0 0 19
+2 * 428 428
+1 * 428 428

fn=(28)
0x404992 113 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880
+4 +1 880
+10 * 880 880
+1 * 880 880

fn=(176)
0x4044cc 86 856 0 856
+1 * 856
+3 * 856 0 856
+4 * 856 856
+1 * 856 856

fn=(224)
0x403df2 129 428 0 428
+1 * 428
+3 * 428
+4 * 428 0 428
+4 * 428 0 428
+4 * 428 0 428
+4 +1 428 428
+4 * 428
+3 * 428
+5 * 428 0 428
cfi=(16)
cfn=(226)
calls=428 0x402d61 -20 
* * 2996 1284 1284
+5 * 428
+3 * 428 0 0 0 0 0 0 0 0 428 2
+2 * 428 428
+4 * 428 428 0 0 28 0 0 28
+2 * 428 0 428 0 0 3 0 0 3
+2 * 428 428
+1 * 428 428

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864
+3 * 864 0 864
cob=(5)
cfi=(8)
cfn=(164)
calls=864 0x387e4bb2f0 0 
* * 94258 23411 10745 23 5 0 23 5 0 22962 695 864
* * 864 864 0 1 1 0 1 1 0 0 0 864
+5 * 864 864
+1 * 864 864

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +1 864 864
+4 * 864
+3 * 864 0 864
cob=(5)
cfi=(8)
cfn=(164)
calls=864 0x387e4bb2f0 0 
* * 106989 28036 14740 0 1 0 0 1 0 26463 67 864
* * 864 864 0 0 0 0 0 0 0 0 0 864
+5 * 864 864
+1 * 864 864

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864
+4 * 864
+3 * 864 0 864
cfn=(102)
calls=864 0x4048de +12 
* * 5184 1728 1728 1 0 0 1
+5 * 864 864
+4 * 864 0 0 1 0 0 1
+3 * 864
+2 * 864 0 0 0 0 0 0 0 0 864
jcnd=864/864 +7 +3 
* * 
+7 +3 864 864
+4 * 864
+4 * 864
+3 * 864 0 864
cob=(5)
cfi=(8)
cfn=(32)
calls=864 0x387e4bd0b0 0 
* * 248726 36269 34193 33 9 45 33 9 45 40020 1682 864
* * 864 864 0 0 0 0 0 0 0 0 0 864
+5 +1 864 864
+1 * 864 864

fn=(18)
0x404a28 81 856 0 856 1 0 0 1
+1 * 856
+3 * 856 0 856 0 0 1 0 0 1
+4 * 856 0 856
+4 * 856 856
+1 * 856 856

fn=(92)
0x4049d4 81 856 0 856 1 0 0 1
+1 * 856
+3 * 856 0 856
+4 * 856 0 856
+4 * 856 856
+1 * 856 856

fn=(196)
0x404520 86 856 0 856
+1 * 856
+3 * 856 0 856
+4 * 856 856
+1 * 856 856

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864 1 0 0 1
+4 +2 864 864
+4 * 864
+3 * 864 0 864
cfn=(28)
calls=864 0x404992 +12 
* * 5184 1728 1728 1 0 0 1
+5 * 864 864
+4 * 864
+3 * 864
+2 * 864 0 0 0 0 0 0 0 0 864
jcnd=864/864 +7 +3 
* * 
+7 +3 864 864
+4 * 864
+4 * 864
+3 * 864 0 864
cob=(5)
cfi=(8)
cfn=(32)
calls=864 0x387e4bd0b0 0 
* * 251028 39064 39615 20 28 15 20 28 15 40393 1058 864
* * 864 864 0 1 1 0 1 1 0 0 0 864
+5 +1 864 864
+1 * 864 864

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +2 856 856
+4 * 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=856 0x404484 107 
* * 484246 163944 158812 25 3 4 25 3 4 18852 1064 1708 213
+5 * 856 856
+1 * 856 856

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +2 856 856 0 1 0 0 1
+4 * 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=856 0x404a36 450 
* * 460278 155384 150252 24 3 4 24 3 4 18852 1064 1708 213
+5 * 856 856
+1 * 856 856

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +2 856 856
+4 * 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=856 0x40439c 107 
* * 484246 163944 158812 7 0 40 7 0 40 18852 1048 1708
+5 * 856 856
+1 * 856 856

fn=(116)
0x40439c 107 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +10 856 856
+4 * 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=856 0x4047d7 -26 
* * 472262 159664 154532 7 0 40 7 0 40 18852 1048 1708
+5 +1 856 856
+1 * 856 856

fn=(118)
0x4047d7 91 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +2 856 856
+4 * 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=856 0x4049e2 450 
* * 460278 155384 150252 7 0 40 7 0 40 18852 1048 1708
+5 * 856 856
+1 * 856 856

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +10 856 856
+4 * 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(52)
calls=856 0x404829 -26 
* * 472262 159664 154532 25 3 4 25 3 4 18852 1064 1708 213
+5 +1 856 856
+1 * 856 856

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(4)
0x4030b2 310 856 0 856 1 0 0 1
+1 * 856
+3 * 856 0 856
+2 * 856 0 856
+2 * 856 0 856
+1 * 856
+4 * 856 0 856 1 0 0 1
+4 * 856 0 856
+4 +2 856 856
+4 * 856
+3 * 856 0 856
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=856 0x403b08 117 
* * 5136 2568 1712 1 0 1 1 0 1
+5 * 856
+3 * 856 0 856
cfi=(3)
cfn=(8)
calls=856 0x403afa -88 
* * 5136 2568 1712 1 0 0 1
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(10)
calls=856 0x402f54 645 
* * 11128 5136 1712 1 1 0 1 1
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856
+3 * 856
+3 * 856 0 856
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=856 0x403b16 134 
* * 355179 77200 73465 32 13 12 32 13 12 41594 1003 1712
+5 +4 856 856 0 1 0 0 1
+4 * 856
+3 * 856 0 856
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=856 0x40333c 113 
* * 5136 2568 1712 2 0 0 2
+5 * 856
+3 * 856 856
+4 * 856 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=856 0x403ba4 565 
* * 21400 8560 6848 3 0 0 3
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=856 0x403b74 547 
* * 21400 8560 6848
+5 * 856
+3 * 856
+3 * 856
+3 * 856
+3 * 856 0 856 1 0 0 1
cfi=(11)
cfn=(48)
calls=856 0x403bd5 -60 
* * 497086 168224 163948 26 3 4 26 3 4 18852 1064 1708 213
+5 -3 856 856
+4 * 856 0 856
+4 * 856
jump=856 +28 +4 
* * 
+28 +4 856
+4 * 856 856
+1 * 856 856
+2 * 856 856
+2 * 856 856
+1 * 856 856

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 856 0 856 1 0 0 1
+1 * 856
+3 * 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+4 * 856 0 856
+4 * 856
+4 * 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=856 0x404380 726 
* * 8560 4280 3424 1 0 0 1
+5 * 856 856
+4 * 856 856
+1 * 856 856

fn=(178)
0x402e74 414 856 0 856
+1 * 856
+3 * 856 0 856
+1 * 856
+4 * 856 0 856 1 0 0 1
+4 +2 856 856
+4 * 856
+3 * 856 0 856
cfn=(40)
calls=856 0x40333c 113 
* * 5136 2568 1712
+5 * 856
+3 * 856 856
+4 * 856 856
+4 * 856 856
+4 * 856 856
+3 -1 856
+3 * 856
+3 * 856 0 856
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=856 0x40334a 148 
* * 26536 8560 10272 2 0 0 2
+5 +1 856 856
+4 * 856
+3 * 856 0 856
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=856 0x4032ca 159 
* * 173730 52636 34314 3 1 0 3 1 0 27116 58 1712
+5 * 856
jump=856 +28 * 
* * 
+28 * 856 0 0 1 0 0 1
+4 * 856 856
+1 * 856 856
+1 * 856 856

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 864 0 864 1 0 0 1
+1 * 864 0 0 1 0 0 1
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 0 864 864
+5 0 864 0 0 0 0 0 0 0 0 864
+2 0 864 864
+4 0 864 864
+4 0 864
+5 0 864
+3 0 864
+3 0 864 0 864
fi=(6) ???
cfi=(5)
cfn=(100)
calls=864 0x40461a 99 
* 0 271190 43181 41105 36 9 45 36 9 45 40884 1682 1728
+5 0 864
fi=(6)
jump=864 +7 0 
* 0 
+7 0 864 864
+1 0 864 864

fn=(144)
0x402d9a 770 277558 0 277558
+1 * 277558
+3 * 277558 0 277558
+4 * 277558 0 277558
+4 +1 277558 277558
+4 * 277558 277558
+3 * 277558 277558
+4 * 277558
+4 * 277558
+3 * 277558 277558
+1 * 277558 277558

fn=(146)
0x402dba 770 277558 0 277558
+1 * 277558
+3 * 277558 0 277558 1 0 0 1
+4 * 277558 0 277558
+4 +1 277558 277558
+4 * 277558 277558
+3 * 277558 277558
+4 * 277558
+4 * 277558
+3 * 277558 277558
+1 * 277558 277558

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 856
+4 * 856
+3 * 856 0 856
cfi=(4)
cfn=(194)
calls=856 0x403d7e +42 
* * 11984 4280 4280 1 0 0 1
+5 * 856 856
+1 * 856 856

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 856 0 856 1 0 0 1
+1 * 856
+3 * 856 0 856
+1 * 856
+4 * 856 0 856
+4 +2 856 856
+4 * 856 856
+4 * 856
+3 * 856 856
+4 * 856 856
+3 * 856
+3 * 856
+3 * 856
+4 * 856
+3 * 856 856
+4 * 856 856
+3 -1 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=856 0x403d98 +11 
* * 130074 36372 23186 1 1 0 1 1 0 27116 58 1712
+5 +1 856 856
+4 * 856
+3 * 856 0 856
cfn=(192)
calls=856 0x403296 -82 
* * 19688 6848 6848 1 0 0 1
+5 * 856
jump=856 +28 * 
* * 
+28 * 856
+4 * 856 856
+1 * 856 856
+1 * 856 856

fn=(2)
0x402d74 645 3456 0 3456 1 0 0 1
+1 * 3456
+3 * 3456 0 3456 0 0 1 0 0 1
+4 +1 3456 3456
+4 * 3456 3456 0 1 1 0 1 1
+4 * 3456
+3 * 3456 3456
+4 * 3456 3456
+3 * 3456
+3 * 3456
+3 * 3456
+4 * 3456 3456
+1 * 3456 3456

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 +2 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=856 0x404236 -14 
* * 284131 49808 49497 26 13 8 26 13 8 41594 1003 1712
+5 * 856 856
+4 * 856 0 856
+3 +1 856 856
+4 * 856 856 0 1 0 0 1
+3 * 856 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+3 * 856 856
+4 * 856
+4 * 856
+3 * 856 856
+4 * 856 0 856
+4 +1 856 856
+1 * 856 856

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 +2 856 856
+4 * 856 856 0 1 0 0 1
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(96)
calls=856 0x403fbe -14 
* * 281858 46828 43953 26 5 40 26 5 40 41253 1633 1712
+5 * 856 856
+4 * 856 0 856
+3 +1 856 856
+4 * 856 856
+3 * 856 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+3 * 856 856
+4 * 856
+4 * 856
+3 * 856 856
+4 * 856 0 856
+4 +1 856 856
+1 * 856 856

fn=(244)
0x402f7a 901 428 0 428
+1 * 428
+3 * 428 0 0 1 0 0 1
+4 * 428 0 428
+4 * 428 0 428
+4 +2 428 428
+4 * 428 428
+4 * 428 428
+4 * 428 428
+4 * 428
+3 * 428 0 0 0 0 0 0 0 0 428
jcnd=8/428 +51 +10 
* * 
+2 +3 420 420
+4 * 420 420
+4 * 420 420
+4 -1 420 420
+4 * 420
+3 * 420
+3 * 420 0 420
cfi=(3)
cfn=(264)
calls=420 0x4036b1 215 
* * 15960 5460 5880 0 27 15 0 27 15 420
+5 +2 420 420
+4 * 420 420
+4 * 420
+4 * 420 420
+4 * 420 0 420
+4 * 420
jump=420 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12646 3740 3261 18 16 29 18 16 29 886 76 47
+5 +2 428 428
+1 * 428 428

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1736 0 1736 1 0 0 1
+1 * 1736
+3 * 1736 0 1736 1 0 0 1
+4 +1 1736 1736
+4 * 1736 1736
+1 * 1736 1736

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+3 * 856 0 856
+4 * 856
+4 * 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfi=(10)
cfn=(110)
calls=856 0x404380 726 
* * 8560 4280 3424
+5 * 856 856
+4 * 856 856
+1 * 856 856

fn=(148)
0x402df4 414 856 0 856
+1 * 856
+3 * 856 0 856
+1 * 856
+4 * 856 0 856 1 0 0 1
+4 +2 856 856
+4 * 856
+3 * 856 0 856
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=856 0x40325e 113 
* * 5136 2568 1712
+5 * 856
+3 * 856 856
+4 * 856 856
+4 * 856 856
+4 * 856 856
+3 -1 856
+3 * 856
+3 * 856 0 856
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=856 0x40326c 148 
* * 26536 8560 10272 4 0 0 4
+5 +1 856 856
+4 * 856
+3 * 856 0 856
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=856 0x4031ec 159 
* * 161032 48028 30322 27 5 0 27 5 0 23624 688 1712
+5 * 856
jump=856 +28 * 
* * 
+28 * 856 0 0 1 0 0 1
+4 * 856 856
+1 * 856 856
+1 * 856 856

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864
+5 * 864 0 0 0 0 0 0 0 0 864
+2 +1 864 864
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(5)
cfn=(160)
calls=864 0x4044d6 -65 
* * 104626 26867 15065 24 6 0 24 6 0 22962 695 1728
+5 +1 864 864
+1 * 864 864

fn=(12)
0x403b16 134 856 0 856
+1 * 856
+3 * 856 0 856
+1 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=856 0x4043ca -45 
* * 30816 11128 11984 4 0 4 4 0 4
+5 +1 856 856 0 1 0 0 1
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(20)
calls=856 0x404412 +43 
* * 305531 60080 55489 27 13 8 27 13 8 41594 1003 1712
+5 * 856
jump=856 +28 * 
* * 
+28 * 856
+4 * 856 856
+1 * 856 856
+1 * 856 856

fn=(14)
0x4043ca 90 856 0 856 1 0 0 1
+1 * 856
+3 * 856
+4 * 856 0 856 0 0 1 0 0 1
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfi=(4)
cfn=(16)
calls=856 0x404804 +24 
* * 15408 5136 5992 2 0 1 2 0 1
+5 * 856 856
+4 * 856 0 856 0 0 2 0 0 2
+7 * 856 856
+4 * 856 0 856 1 0 0 1
+8 * 856 856
+4 * 856 0 856
+8 +1 856 856
+1 * 856 856

fn=(80)
0x402ff4 310 856 0 856 1 0 0 1
+1 * 856
+3 * 856 0 856
+2 * 856 0 856
+2 * 856 0 856
+1 * 856 0 0 1 0 0 1
+4 * 856 0 856
+4 * 856 0 856
+4 +2 856 856
+4 * 856
+3 * 856 0 856
cfn=(82)
calls=856 0x4039fc 117 
* * 5136 2568 1712 2 0 0 2
+5 * 856
+3 * 856 0 856
cfi=(3)
cfn=(84)
calls=856 0x4039ed -88 
* * 5136 2568 1712
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(2)
calls=856 0x402d74 645 
* * 11128 5136 1712
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856
+3 * 856
+3 * 856 0 856 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=856 0x403a0a 134 
* * 352906 74220 67921 33 5 40 33 5 40 41253 1633 1712
+5 +4 856 856
+4 * 856
+3 * 856 0 856
cfn=(106)
calls=856 0x40325e 113 
* * 5136 2568 1712 1 0 0 1
+5 * 856
+3 * 856 856
+4 * 856 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(108)
calls=856 0x403a98 565 
* * 21400 8560 6848 2 0 0 2
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(112)
calls=856 0x403a68 547 
* * 21400 8560 6848
+5 * 856
+3 * 856
+3 * 856
+3 * 856
+3 * 856 0 856
cfi=(11)
cfn=(114)
calls=856 0x403ac9 -60 
* * 497086 168224 163948 7 0 40 7 0 40 18852 1048 1708
+5 -3 856 856
+4 * 856 0 856
+4 * 856
jump=856 +28 +4 
* * 
+28 +4 856
+4 * 856 856
+1 * 856 856
+2 * 856 856
+2 * 856 856
+1 * 856 856

fn=(188)
0x403d98 171 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +2 864 864
+5 * 864 0 0 0 0 0 0 0 0 864 8
+2 +1 864 864
+4 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfi=(5)
cfn=(190)
calls=864 0x40452a -65 
* * 117357 31492 19060 0 1 0 0 1 0 26463 67 1728
+5 +1 864 864
+1 * 864 864

fn=(22)
0x404236 167 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864 1 0 0 1
+4 * 864 0 864
+4 0 864 864
+5 0 864 0 0 0 0 0 0 0 0 864
+2 0 864 864
+4 0 864 864
+4 0 864
+5 0 864
+3 0 864
+3 0 864 0 864
fi=(6)
cfi=(5)
cfn=(26)
calls=864 0x404730 99 
* 0 273492 45976 46527 24 29 15 24 29 15 41257 1058 1728
+5 0 864
fi=(6)
jump=864 +7 0 
* 0 
+7 0 864 864
+1 0 864 864

fn=(42)
0x403ba4 565 856 0 856 1 0 0 1
+1 * 856
+3 * 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+4 * 856 0 856
+4 * 856
+4 * 856 0 0 1 0 0 1
+4 * 856
+3 * 856
+3 * 856 0 856
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=856 0x404468 726 
* * 8560 4280 3424 1 0 0 1
+5 * 856 856
+4 * 856 856
+1 * 856 856

fn=(46)
0x403b74 547 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+3 * 856 0 856
+4 * 856
+4 * 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfi=(10)
cfn=(44)
calls=856 0x404468 726 
* * 8560 4280 3424
+5 * 856 856
+4 * 856 856
+1 * 856 856

fn=(86)
0x403a0a 134 856 0 856
+1 * 856
+3 * 856 0 856
+1 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=856 0x4042e2 -45 
* * 30816 11128 11984 5 0 0 5
+5 +1 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856 1 0 0 1
cfn=(94)
calls=856 0x40432a +43 
* * 303258 57100 49945 27 5 40 27 5 40 41253 1633 1712
+5 * 856
jump=856 +28 * 
* * 
+28 * 856
+4 * 856 856
+1 * 856 856
+1 * 856 856

fn=(88)
0x4042e2 90 856 0 856 1 0 0 1
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 +1 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856 1 0 0 1
cfi=(4)
cfn=(90)
calls=856 0x4047b2 +24 
* * 15408 5136 5992 3 0 0 3
+5 * 856 856
+4 * 856 0 856
+7 * 856 856
+4 * 856 0 856
+8 * 856 856
+4 * 856 0 856
+8 +1 856 856
+1 * 856 856

fn=(156)
0x4031ec 159 856 0 856 1 0 0 1
+1 * 856
+3 * 856 0 856
+1 * 856
+4 * 856 0 856
+4 +2 856 856
+4 * 856 856 0 1 0 0 1
+4 * 856
+3 * 856 856
+4 * 856 856
+3 * 856
+3 * 856
+3 * 856
+4 * 856
+3 * 856 856
+4 * 856 856
+3 -1 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(158)
calls=856 0x403ce6 +11 
* * 117376 31764 19194 24 5 0 24 5 0 23624 688 1712
+5 +1 856 856
+4 * 856
+3 * 856 0 856
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=856 0x4031b8 -82 
* * 19688 6848 6848 1 0 0 1
+5 * 856
jump=856 +28 * 
* * 
+28 * 856
+4 * 856 856
+1 * 856 856
+1 * 856 856

fn=(172)
0x4031b8 79 856 0 856 1 0 0 1
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 856
+4 * 856
+3 * 856 0 856
cfi=(4)
cfn=(174)
calls=856 0x403ccc +42 
* * 11984 4280 4280
+5 * 856 856
+1 * 856 856

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1744 0 1744 1 0 0 1
+1 * 1744
+3 * 1744 0 1744
+4 +1 1744 1744
+4 * 1744 1744 0 0 2 0 0 2
+4 * 1744
+3 * 1744 1744
+4 * 1744 1744
+3 * 1744
+3 * 1744
+3 * 1744
+4 * 1744 1744
+1 * 1744 1744

fn=(106)
0x40325e 113 1736 0 1736 1 0 0 1
+1 * 1736
+3 * 1736 0 1736
+4 +1 1736 1736
+4 * 1736 1736
+1 * 1736 1736

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 872 0 872 1 0 0 1
+1 * 872
+3 * 872 0 872 0 0 1 0 0 1
+4 +1 872 872
+4 * 872 872
+1 * 872 872

fn=(82)
0x4039fc 117 872 0 872 1 0 0 1
+1 * 872
+3 * 872 0 872 1 0 0 1
+4 +1 872 872
+4 * 872 872
+1 * 872 872

fn=(200)
0x402eda 901 428 0 428
+1 * 428
+3 * 428
+4 * 428 0 428
+4 * 428 0 428
+4 +2 428 428
+4 * 428 428
+4 * 428 428
+4 * 428 428
+4 * 428
+3 * 428 0 0 0 0 0 0 0 0 428 8
jcnd=8/428 +51 +10 
* * 
+2 +3 420 420
+4 * 420 420
+4 * 420 420
+4 -1 420 420
+4 * 420
+3 * 420
+3 * 420 0 420
cfi=(3)
cfn=(222)
calls=420 0x403373 215 
* * 15960 5460 5880 0 27 2 0 27 2 420 2
+5 +2 420 420
+4 * 420 420
+4 * 420
+4 * 420 420
+4 * 420 0 420
+4 * 420
jump=420 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12584 3908 3380 35 6 9 35 6 9 845 62 47
+5 +2 428 428
+1 * 428 428

fl=(12)
fn=(54)
0x404a36 450 856 0 856
+1 * 856
+3 * 856 0 856
+1 * 856
+4 * 856 0 856 1 0 0 1
+4 * 856 0 856
+4 * 856 0 856
+4 +10 856 856
+4 * 856
+3 * 856 0 856
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=856 0x404c38 288 
* * 12840 5136 4280 3 0 0 3
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(56)
calls=856 0x404c38 288 
* * 12840 5136 4280
+5 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=856 0x404c52 -36 
* * 415766 139976 134844 20 3 4 20 3 4 18852 1064 1708 213
+5 +1 856
+4 * 856 856
+1 * 856 856
+1 * 856 856

fn=(60)
0x404c52 424 856 0 856
+1 * 856
+3 * 856 0 856
+2 * 856 0 856
+1 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +4 856 856
+4 * 856
+3 * 856 0 856
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=856 0x40492d 277 
* * 12840 5136 4280 2 0 0 2
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=856 0x404d9d 277 
* * 21400 7704 6848 2 0 1 2 0 1
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(66)
calls=856 0x404d9d 277 
* * 21400 7704 6848
+5 * 856
+3 * 856
+3 * 856
+3 * 856 0 856
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=856 0x404db7 -49 
* * 336158 113440 108308 15 3 3 15 3 3 18852 1064 1708 213
+5 +1 856
+4 * 856 856
+1 * 856 856
+2 * 856 856
+1 * 856 856

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 904 0 904 1 0 0 1
+1 * 904
+3 * 904
+4 * 904 0 904
+4 +1 904 904
+4 * 904
+3 * 904 0 904 1 0 0 1
cfi=(13)
cfn=(64)
calls=904 -33 -66 
* * 5424 2712 1808
+5 * 904 904
+1 * 904 904

fn=(66)
0x404d9d 277 1712 0 1712
+1 * 1712
+3 * 1712
+4 * 1712 0 1712
+4 +1 1712 1712
+4 * 1712
+3 * 1712 0 1712
cfi=(13)
cfn=(68)
calls=1712 0x404f1a -58 
* * 27392 10272 8560 2 0 1 2 0 1
+5 * 1712 1712
+1 * 1712 1712

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 856 0 856
+1 * 856
+3 * 856 0 856
+1 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +10 856 856
+4 * 856
+3 * 856 0 856
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=856 0x404bc6 288 
* * 12840 5136 4280 3 0 0 3
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(122)
calls=856 0x404bc6 288 
* * 12840 5136 4280
+5 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=856 0x404be0 -36 
* * 415766 139976 134844 4 0 40 4 0 40 18852 1048 1708
+5 +1 856
+4 * 856 856
+1 * 856 856
+1 * 856 856

fn=(128)
0x404878 277 904 0 904
+1 * 904
+3 * 904
+4 * 904 0 904 1 0 0 1
+4 +1 904 904
+4 * 904
+3 * 904 0 904
cfi=(13)
cfn=(130)
calls=904 -33 -66 
* * 5424 2712 1808 0 0 1 0 0 1
+5 * 904 904
+1 * 904 904

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1712 0 1712
+1 * 1712
+3 * 1712
+4 * 1712 0 1712
+4 +1 1712 1712
+4 * 1712
+3 * 1712 0 1712
cfi=(13)
cfn=(134)
calls=1712 0x404e98 -58 
* * 27392 10272 8560 2 0 0 2
+5 * 1712 1712
+1 * 1712 1712

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +8 856 0 856
+4 +3 856 856
+4 * 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=856 0x404eb5 -22 
* * 323318 109160 103172 1 0 40 1 0 40 18852 1048 1708
+5 +1 856 856
+1 * 856 856

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1712 0 1712 1 0 0 1
+1 * 1712
+3 * 1712
+4 * 1712 0 1712
+4 +1 1712 1712
+4 * 1712
+3 * 1712 0 1712
cfi=(13)
cfn=(124)
calls=1712 0x404d36 -77 
* * 10272 5136 3424 2 0 0 2
+5 * 1712 1712
+1 * 1712 1712

fn=(56)
0x404c38 288 1712 0 1712 1 0 0 1
+1 * 1712
+3 * 1712
+4 * 1712 0 1712 1 0 0 1
+4 +1 1712 1712
+4 * 1712
+3 * 1712 0 1712
cfi=(13)
cfn=(58)
calls=1712 0x404d8f -77 
* * 10272 5136 3424 1 0 0 1
+5 * 1712 1712
+1 * 1712 1712

fn=(74)
0x404f37 368 872 0 872
+1 * 872
+3 * 872
+4 * 872 0 872 1 0 0 1
+4 * 872 0 872
+4 * 872 0 872
+4 +2 872 872
+4 * 872 872
+4 * 872
+3 * 872
+3 * 872
+4 * 872 0 872
+4 +1 872 872
+5 * 872 0 0 0 0 0 0 0 0 872
jcnd=8/872 +33 +2 
* * 
+2 +1 864 864
+4 * 864
+8 * 864 864
+4 * 864 864
+4 * 864
+3 * 864 0 0 1 0 0 1
+3 * 864 0 864 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=864 0x3877c83840 0 
* * 300472 100060 98337 11 2 20 11 2 20 18080 1068 859 213
* * 864 864 0 1 1 0 1 1 0 0 0 864
+5 +1 872 872
+4 * 872
+8 * 872 872
+4 * 872
+3 +1 872 872
+1 * 872 872

fn=(140)
0x404eb5 368 872 0 872
+1 * 872
+3 * 872
+4 * 872 0 872 1 0 0 1
+4 * 872 0 872
+4 * 872 0 872 0 0 1 0 0 1
+4 +2 872 872
+4 * 872 872
+4 * 872
+3 * 872
+3 * 872
+4 * 872 0 872
+4 +1 872 872
+5 * 872 0 0 0 0 0 0 0 0 872
jcnd=8/872 +33 +2 
* * 
+2 +1 864 864
+4 * 864
+8 * 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cob=(2)
cfi=(9)
cfn=(78)
calls=864 0x3877c83840 0 
* * 300472 100060 98337 0 0 41 0 0 41 18080 1054 859
* * 864 864 0 0 0 0 0 0 0 0 0 864
+5 +1 872 872
+4 * 872
+8 * 872 872
+4 * 872
+3 +1 872 872
+1 * 872 872

fn=(72)
0x404db7 379 856 0 856
+1 * 856
+3 * 856
+4 * 856 0 856 1 0 0 1
+4 * 856 0 856
+4 * 856 0 856
+4 +8 856 0 856
+4 +3 856 856
+4 * 856 856
+4 * 856 856
+4 * 856
+3 * 856
+3 * 856 0 856
cfn=(74)
calls=856 0x404f37 -22 
* * 323318 109160 103172 14 3 3 14 3 3 18852 1064 1708 213
+5 +1 856 856
+1 * 856 856

fn=(126)
0x404be0 424 856 0 856
+1 * 856
+3 * 856 0 856
+2 * 856 0 856
+1 * 856
+4 * 856 0 856
+4 * 856 0 856
+4 * 856 0 856
+4 +4 856 856
+4 * 856
+3 * 856 0 856
cfn=(128)
calls=856 0x404878 277 
* * 12840 5136 4280 1 0 0 1
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(132)
calls=856 0x404d44 277 
* * 21400 7704 6848 2 0 0 2
+5 * 856
+3 * 856 856
+4 * 856
+3 * 856 0 856
cfn=(132)
calls=856 0x404d44 277 
* * 21400 7704 6848
+5 * 856
+3 * 856
+3 * 856
+3 * 856 0 856
cfn=(138)
calls=856 0x404d5e -49 
* * 336158 113440 108308 1 0 40 1 0 40 18852 1048 1708
+5 +1 856
+4 * 856 856
+1 * 856 856
+2 * 856 856
+1 * 856 856

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1712 0 1712 1 0 0 1
+1 * 1712
+3 * 1712 0 1712
+4 +1 1712 1712
+4 * 1712 1712
+1 * 1712 1712

fn=(110)
0x404380 726 1712 0 1712 1 0 0 1
+1 * 1712
+3 * 1712 0 1712
+4 * 1712 0 1712
+4 * 1712 1712
+4 * 1712 1712
+3 * 1712 1712
+4 * 1712 0 1712
+3 * 1712 1712
+1 * 1712 1712

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1712 0 1712 1 0 0 1
+1 * 1712
+3 * 1712 0 1712
+4 +1 1712 1712
+4 * 1712 1712
+1 * 1712 1712

fn=(44)
0x404468 726 1712 0 1712
+1 * 1712
+3 * 1712 0 1712
+4 * 1712 0 1712
+4 * 1712 1712
+4 * 1712 1712
+3 * 1712 1712
+4 * 1712 0 1712 1 0 0 1
+3 * 1712 1712
+1 * 1712 1712

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 864 0 864 1 0 0 1
+1 * 864
+3 * 864 0 864
+4 * 864 0 864 1 0 0 1
+4 * 864 864
+1 * 864 864

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 +4 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=864 0x40454c -14 
* * 5184 1728 2592 1 0 0 1
+5 +2 864 864
+1 * 864 864

fn=(150)
0x40326c 148 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +3 864 864 0 1 0 0 1
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=864 0x403d1a -29 
* * 15552 5184 6048 3 0 0 3
+5 +1 864 864
+1 * 864 864

fn=(180)
0x40334a 148 864 0 864
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 * 864 0 864
+4 +3 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(182)
calls=864 0x403dcc -29 
* * 15552 5184 6048 2 0 0 2
+5 +1 864 864
+1 * 864 864

fn=(152)
0x403d1a 122 864 0 864 1 0 0 1
+1 * 864
+3 * 864
+4 * 864 0 864
+4 * 864 0 864
+4 +4 864 864
+4 * 864 864
+4 * 864
+3 * 864
+3 * 864 0 864
cfn=(154)
calls=864 0x4044f8 -14 
* * 5184 1728 2592 2 0 0 2
+5 +2 864 864
+1 * 864 864

fn=(184)
0x40454c 112 864 0 864 1 0 0 1
+1 * 864
+3 * 864 0 864
+4 * 864 0 864
+4 * 864 864
+1 * 864 864

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 3185 488 486 0 16 7 0 16 7 527 55 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3156 673 608 12 4 5 12 4 5 495 49 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 1 0 1 1 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1728 0 1728 1 0 0 1
+2 0 1728 0 1728
+2 0 1728 0 1728
+2 0 1728
+3 0 1728 0 1728
+2 0 1728 0 1728
+1 0 1728 0 1728
+1 0 1728
+3 0 1728
+4 0 1728 1728
+4 0 1728 0 1728
+4 0 1728
+3 0 1728
+4 0 1728
+3 0 1728
+3 0 1728
+3 0 1728 0 0 1 0 0 1 0 0 1728
+6 0 1728
+4 0 1728 0 0 0 0 0 0 0 0 1728
+6 0 1728
+4 0 1728 0 0 0 0 0 0 0 0 1728
+6 0 1728 1728
+7 0 1728 0 0 0 0 0 0 0 0 1728 4
jcnd=1604/1728 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1604
+2 0 1604 0 0 0 0 0 0 0 0 1604
+6 0 1604 1604 0 1 0 0 1
+4 0 1604
+3 0 1604
+2 0 1604 0 0 0 0 0 0 0 0 1604
jcnd=1604/1604 0x3877c78a40 0 
* 0 
+6 0 1604 1604
+4 0 1604
+3 0 1604 0 0 0 0 0 0 0 0 1604
+6 0 1604 1604
+5 0 1604
+4 0 1604 0 0 0 0 0 0 0 0 1604
jcnd=1604/1604 0x3877c7907c 0 
* 0 
+6 0 1604 1604
+5 0 1604
+4 0 1604 0 0 0 0 0 0 0 0 1604
+6 0 1604
+4 0 1604 0 0 1 0 0 1 0 0 1604
+6 0 1604
+4 0 1604 1604
+7 0 1604 0 0 0 0 0 0 0 0 1604
+6 0 1604 1604
+6 0 1604
+2 0 1604 0 0 0 0 0 0 0 0 1604
+6 0 1604 1604
+4 0 1604 0 0 0 0 0 0 0 0 1604 5
jcnd=1600/1604 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1604 1604 0 1 0 0 1
+4 0 1604 0 0 0 0 0 0 0 0 1604 610
jcnd=662/1604 0x3877c78bf0 0 
* 0 
+6 0 942 942 0 0 1 0 0 1
+6 0 942 0 0 1 0 0 1 0 0 942 64
jcnd=61/942 0x3877c78a78 0 
* 0 
+6 0 881 881
+5 0 881 881
+5 0 881 881
+4 0 881 0 0 0 0 0 0 0 0 881
+6 0 881 881
+4 0 881 0 0 0 0 0 0 0 0 881
+6 0 881 881
+9 0 881 0 881
+4 0 881 0 881
+4 0 881 0 0 0 0 0 0 0 0 881 4
jcnd=873/881 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 881
+3 0 881
+4 0 881 881
+4 0 881 881
+4 0 881 0 0 0 0 0 0 0 0 881
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 942
+7 0 942 0 942
+4 0 942 0 942
+4 0 942 0 0 0 0 0 0 0 0 942 69
jcnd=441/942 +18 0 
* 0 
+2 0 501 0 501
+8 0 501 0 501
+8 0 501 0 501
+4 0 501
+3 0 501 0 501 1 0 0 1
+4 0 501
+4 0 501 0 501
+4 0 501 0 501
+4 0 501
+7 0 501 0 0 0 0 0 0 0 0 501
jcnd=501/501 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 662
+7 0 662 0 0 0 0 0 0 0 0 662
jcnd=662/662 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1604 0 0 1 0 0 1
+5 0 1604 1604
+4 0 1604 1604
+7 0 1604 0 0 0 0 0 0 0 0 1604
jcnd=1604/1604 +16 0 
* 0 
+16 0 1604 0 1604
+5 0 1604 0 0 0 0 0 0 0 0 1604
+6 0 1604
+3 0 1604
jump=1604 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1604 1604 0 1 0 0 1
+4 0 1604
+2 0 1604 0 0 0 0 0 0 0 0 1604
+6 0 1604 1604
+7 0 1604 0 0 0 0 0 0 0 0 1604
jcnd=1604/1604 +15 0 
* 0 
+15 0 1604 0 1604 1 0 0 1
+4 0 1604 0 0 0 0 0 0 0 0 1604 2
+6 0 1604
+4 0 1604 1604
+1 0 1604 1604
+1 0 1604 1604
+2 0 1604 1604
+2 0 1604 1604
+2 0 1604 1604
+2 0 1604 1604
0x3877c78bf0 0 662 0 0 1 0 0 1
+3 0 662 0 662
+4 0 662
+3 0 662
+4 0 662 0 662 1 0 0 1
+4 0 662
jump=662 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1604 1604 0 1 1 0 1 1
+4 0 1604 0 0 1 0 0 1
+7 0 1604
+4 0 1604
+3 0 1604
+3 0 1604 0 0 0 0 0 0 0 0 1604
jcnd=1604/1604 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1718 0 0 1 0 0 1
+7 0 1718
+3 0 1718
+3 0 1718 1718 0 0 1 0 0 1
+4 0 1718
+4 0 1718 0 0 0 0 0 0 0 0 0 0 1718 213
jump=208 0x3877c89be8 0 
* 0 
jump=218 0x3877c89bd0 0 
* 0 
jump=208 0x3877c89bb8 0 
* 0 
jump=216 +11 0 
* 0 
jump=216 0x3877c89c48 0 
* 0 
jump=218 0x3877c89c30 0 
* 0 
jump=216 0x3877c89c18 0 
* 0 
jump=218 0x3877c89c00 0 
* 0 
+11 0 216 216
+3 0 216
+4 0 216
+4 0 216 216
+4 0 216
+4 0 216 0 216
+4 0 216
+9 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216
+4 0 216
+4 0 216 0 0 0 0 0 0 0 0 216
jcnd=8/216 0x3877c89c60 0 
* 0 
-40 0 22742 22742
+4 0 22742 0 22742 0 0 3 0 0 3
+4 0 22742 22742
+4 0 22742 0 22742 0 0 15 0 0 15
+4 0 22742 22742
+4 0 22742 0 22742 0 0 19 0 0 19
+4 0 22742 22742
+4 0 22742 0 22742
+4 0 22742
+4 0 22742
+4 0 22742 0 0 0 0 0 0 0 0 22742 1244
jcnd=1682/22742 0x3877c89c60 0 
* 0 
-32 0 218 218
+4 0 218 0 218
+4 0 218 218
+4 0 218 0 218
+4 0 218 218
+4 0 218 0 218
+4 0 218
+4 0 218
+4 0 218 0 0 0 0 0 0 0 0 218
jcnd=10/218 0x3877c89c60 0 
* 0 
-24 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216
+4 0 216
+4 0 216 0 0 0 0 0 0 0 0 216
jcnd=8/216 0x3877c89c60 0 
* 0 
-16 0 218 218 0 1 0 0 1
+4 0 218 0 218
+4 0 218 0 0 1 0 0 1
+4 0 218
+4 0 218 0 0 0 0 0 0 0 0 218 4
jcnd=10/218 0x3877c89c60 0 
* 0 
+6 0 21892
+4 0 21892 21892
+3 0 21892 0 21892 0 0 1 0 0 1
+3 0 21892 21892
+4 0 21892 0 21892 0 0 3 0 0 3
+4 0 21892 21892
+4 0 21892 0 21892 0 0 18 0 0 18
+4 0 21892 21892
+4 0 21892 0 21892
+4 0 21892
jump=21892 -80 0 
* 0 
-30 0 208 208
+3 0 208 0 208
+3 0 208 208
+4 0 208 0 208
+4 0 208 208
+4 0 208 0 208 0 0 1 0 0 1
+4 0 208 208
+4 0 208 0 208
+4 0 208
jump=208 -80 0 
* 0 
-24 0 218 218
+4 0 218 0 218
+4 0 218 218
+4 0 218 0 218
+4 0 218 218
+4 0 218 0 218
+4 0 218
jump=218 -80 0 
* 0 
-16 0 208 208
+4 0 208 0 208
+4 0 208 208
+4 0 208 0 208
+4 0 208
jump=208 -80 0 
* 0 
+8 0 208 208
+3 0 208
+4 0 208 0 0 1 0 0 1
+4 0 208
+4 0 208
jump=208 -39 0 
* 0 
+9 0 218
+3 0 218 0 0 0 0 0 0 0 0 218
+6 0 218 218
+3 0 218
+4 0 218
jump=218 -72 0 
* 0 
+8 0 208
+4 0 208 208
+3 0 208 0 0 0 0 0 0 0 0 208
+2 0 208
+4 0 208
jump=208 -99 0 
* 0 
+11 0 218 218 0 1 0 0 1
+3 0 218
+4 0 218
+4 0 218
+4 0 218
jump=218 0x3877c89b78 0 
* 0 
+9 0 216 216
+3 0 216
+4 0 216
+4 0 216
+4 0 216
jump=216 0x3877c89b70 0 
* 0 
+9 0 218 218
+3 0 218
+4 0 218
+4 0 218
+4 0 218
jump=218 0x3877c89b68 0 
* 0 
+9 0 216 216
+3 0 216
+4 0 216
+4 0 216
+4 0 216
jump=216 0x3877c89b60 0 
* 0 
+9 0 1718 0 1718 1 0 0 1
+3 0 1718 1718

fn=(104) alloc_perturb
0x3877c77180 0 1594 1594 0 1 0 0 1
+6 0 1594
+2 0 1594 0 0 0 0 0 0 0 0 1594 1
+2 0 1594 1594

fn=(38) _int_malloc
0x3877c79a00 0 1728 0 1728 1 0 0 1
+2 0 1728
+3 0 1728 0 1728
+2 0 1728 0 1728
+2 0 1728 0 1728 0 0 1 0 0 1
+2 0 1728
+3 0 1728 0 1728
+1 0 1728 0 1728
+1 0 1728
+4 0 1728
+4 0 1728 0 0 0 0 0 0 0 0 1728
+6 0 1728
+4 0 1728
+6 0 1728
+3 0 1728
+4 0 1728
+4 0 1728
+4 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728
+6 0 1728 1728 0 1 1 0 1 1
+7 0 1728 0 0 0 0 0 0 0 0 1728 7
jcnd=1606/1728 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1594
+4 0 1594 1594
+1 0 1594 1594
+1 0 1594 1594
+2 0 1594 1594
+2 0 1594 1594
+2 0 1594 1594
+2 0 1594 1594
+7 0 1623
+7 0 1623 0 0 1 0 0 1 0 0 1623 7
jcnd=720/1623 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 1 0 0 1
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 720 0 0 1 0 0 1
+3 0 720
+4 0 720
+4 0 720 0 0 1 0 0 1 0 0 720
jcnd=720/720 0x3877c7a1a4 0 
* 0 
+30 0 720 720
+6 0 720
+5 0 720 0 0 0 0 0 0 0 0 720 1
jcnd=719/720 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 907 243 192 8 2 0 8 2 0 187 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1622 0 0 1 0 0 1
+3 0 1622
+3 0 1622
+3 0 1622
+4 0 1622
+3 0 1622
+4 0 1622 0 1622
+5 0 1622
+3 0 1622 0 1622
+4 0 1622 0 1622
+4 0 1622 0 1622
+5 0 1622
+3 0 1622
+3 0 1622
+3 0 1622
+3 0 1622
+4 0 1622
+4 0 1622 0 0 1 0 0 1
+4 0 1622 0 1622
+4 0 1622
+4 0 1622 0 1622
+5 0 1622 0 1622
+5 0 1622
+3 0 1622
+3 0 1622 0 1622
+5 0 1622
+5 0 1622
+3 0 1622 0 1622
+4 0 1622 0 1622
+4 0 1622
+6 0 1622 0 1622
+4 0 1622 0 1622
+5 0 1622 0 0 1 0 0 1
+3 0 1622
+3 0 1622
+3 0 1622
jump=1622 +87 0 
* 0 
+8 0 1138
+3 0 1138
+4 0 1138
+2 0 1138
+2 0 1138
+3 0 1138
+3 0 1138
+3 0 1138
+2 0 1138
+2 0 1138
+5 0 1138
+2 0 1138 1138 0 0 1 0 0 1
+4 0 1138
+3 0 1138
+4 0 1138 0 1138
+4 0 1138 0 1138 0 0 1 0 0 1
+8 0 1138
+7 0 1138 0 1138
+4 0 1138 0 1138 0 0 2 0 0 2
+4 0 1138 0 1138
+4 0 1138 0 0 0 0 0 0 0 0 1138
-38 0 491
+3 0 491
+4 0 491 0 491
+4 0 491 0 491
+8 0 491
+7 0 491 0 491
+4 0 491 0 491
+4 0 491 0 491
+4 0 491 0 0 0 0 0 0 0 0 491
+6 0 3252 3252 0 1 0 0 1
+4 0 3252
+3 0 3252 0 0 0 0 0 0 0 0 3252 149
jcnd=1575/3252 0x3877c79ef0 0 
* 0 
+6 0 1677 1677
+4 0 1677 1677
+4 0 1677
+4 0 1677 0 0 0 0 0 0 0 0 1677
+6 0 1677 1677 0 1 1 0 1 1
+7 0 1677 0 0 0 0 0 0 0 0 1677
+6 0 1677
+4 0 1677
+7 0 1677 0 0 0 0 0 0 0 0 1677 6
jcnd=767/1677 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1658
+3 0 1658 0 1658
+4 0 1658 0 1658
+5 0 1658 0 0 0 0 0 0 0 0 1658 17
jcnd=29/1658 0x3877c7a090 0 
* 0 
+6 0 1629
+7 0 1629 0 0 0 0 0 0 0 0 1629 342
jcnd=1138/1629 0x3877c79c50 0 
* 0 
+6 0 491 0 0 1 0 0 1
+3 0 491
+4 0 491
+4 0 491 0 0 0 0 0 0 0 0 491
+6 0 491
+3 0 491
+4 0 491
+2 0 491
+2 0 491
+3 0 491
+3 0 491
+8 0 491
+3 0 491
+2 0 491
+2 0 491
+4 0 491 491 0 0 2 0 0 2
+4 0 491
+3 0 491 0 0 1 0 0 1 0 0 491 9
jcnd=491/491 0x3877c79e15 0 
* 0 
0x3877c79e15 0 491 0 491
+4 0 491 0 491
+4 0 491
+3 0 491
jump=491 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=387/406 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1575 0 0 1 0 0 1
+7 0 1575
+3 0 1575 0 0 0 0 0 0 0 0 1575 4
jcnd=712/1575 0x3877c7a0b0 0 
* 0 
+6 0 1551 1551 0 1 0 0 1
+4 0 1551
+3 0 1551
+3 0 1551
+2 0 1551
+4 0 1551
+3 0 1551
+3 0 1551
+2 0 1551
+2 0 1551
+2 0 1551
+2 0 1551 1551
+8 0 1551
+5 0 1551
+5 0 1551
+2 0 1551 0 0 0 0 0 0 0 0 1551
-2 0 772
+2 0 772 0 0 0 0 0 0 0 0 772 1
jcnd=1/772 +14 0 
* 0 
+2 0 2322
+2 0 2322 0 0 0 0 0 0 0 0 2322 32
jcnd=1383/2322 +64 0 
* 0 
+2 0 939
+8 0 939
+3 0 939
+3 0 939 0 0 0 0 0 0 0 0 939 1
jcnd=1/939 0x3877c79fc0 0 
* 0 
-6 0 1088
+3 0 1088
+3 0 1088 0 0 0 0 0 0 0 0 1088 11
jcnd=663/1088 0x3877c79fc0 0 
* 0 
+2 0 1363
+2 0 1363 1363
+8 0 1363
+2 0 1363 0 0 0 0 0 0 0 0 1363 25
jcnd=1087/1363 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
jcnd=1/276 +14 0 
* 0 
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 11586
+4 0 11586
+2 0 11586
+2 0 11586 0 0 0 0 0 0 0 0 11586 842
jcnd=10140/11586 -8 0 
* 0 
-2 0 1383 0 0 1 0 0 1
+2 0 1383 0 0 0 0 0 0 0 0 1383 24
jcnd=1233/1383 -8 0 
* 0 
+2 0 1659 1659 0 0 15 0 0 15
+4 0 1659 0 0 1 0 0 1
+3 0 1659 0 0 0 0 0 0 0 0 1659 702
jcnd=887/1659 0x3877c7a1cf 0 
* 0 
+6 0 772
+2 0 772
+4 0 772
+2 0 772
+2 0 772
+2 0 772 0 772
+8 0 772
jump=772 0x3877c79f30 0 
* 0 
+37 0 664 664 0 1 0 0 1
+5 0 664 664
+4 0 664
+4 0 664 664
+5 0 664 0 0 0 0 0 0 0 0 664
jcnd=664/664 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 712 712
+4 0 712
+4 0 712
+2 0 712
+5 0 712 712 0 1 0 0 1
+4 0 712
+3 0 712 0 0 0 0 0 0 0 0 712 4
jcnd=688/712 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 720 0 0 1 0 0 1
+3 0 720 0 720
+4 0 720
jump=720 0x3877c79b99 0 
* 0 
+36 0 887 887 0 1 1 0 1 1
+4 0 887 887
+4 0 887
+3 0 887 887
+4 0 887
+4 0 887
+3 0 887
+3 0 887 887
+4 0 887 0 0 0 0 0 0 0 0 887
+6 0 887 887
+4 0 887 0 0 0 0 0 0 0 0 887
+6 0 887 887 0 1 0 0 1
+8 0 887 0 887
+4 0 887 0 887
+4 0 887 0 0 0 0 0 0 0 0 887 11
jcnd=419/887 +38 0 
* 0 
+2 0 468 468 0 0 2 0 0 2
+4 0 468
+3 0 468 0 0 0 0 0 0 0 0 468
+2 0 468 468
+5 0 468 0 0 0 0 0 0 0 0 468
+6 0 468 468
+4 0 468 0 468
+4 0 468 468
+4 0 468 0 468
+4 0 468
+4 0 468 0 0 0 0 0 0 0 0 468
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 866 866
+4 0 866 866 0 1 0 0 1
+4 0 866 0 0 0 0 0 0 0 0 866
+6 0 866
+4 0 866
+7 0 866 0 866 0 0 8 0 0 8
+4 0 866 0 866
+4 0 866 0 866
+4 0 866 0 866
+4 0 866 0 0 0 0 0 0 0 0 866 4
jcnd=400/866 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 400
+7 0 400 0 0 0 0 0 0 0 0 400
jcnd=400/400 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 875 0 0 1 0 0 1
+7 0 875 0 875
+4 0 875
+3 0 875
+3 0 875
+4 0 875
+3 0 875
+4 0 875
+3 0 875
+3 0 875
+4 0 875 0 875
+4 0 875 0 875 0 0 1 0 0 1
+4 0 875
jump=875 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 911
+4 0 911 0 0 1 0 0 1
+3 0 911
+3 0 911 0 911
cfn=(104)
calls=911 0x3877c77180 0 
* 0 3644 1822 0 1 0 0 1 0 0 911
+5 0 911
+3 0 911
jump=911 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 664 0 0 1 0 0 1
+7 0 664
+2 0 664
+4 0 664
+3 0 664
+3 0 664 0 664
+5 0 664
+3 0 664
+4 0 664
+3 0 664 0 0 1 0 0 1
+4 0 664
+4 0 664
+3 0 664
+4 0 664 0 664
+4 0 664 0 664 0 0 24 0 0 24
+4 0 664
+3 0 664
+3 0 664 0 664
cfn=(104)
calls=664 0x3877c77180 0 
* 0 2656 1328 0 0 0 0 0 0 0 664 1
+5 0 664
+3 0 664
jump=664 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1728 0 1728 1 0 0 1
+5 0 1728 0 1728
+5 0 1728
+3 0 1728 0 1728
+5 0 1728
+4 0 1728 1728 0 0 1 0 0 1
+7 0 1728 1728 0 0 1 0 0 1
+3 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728 2
+6 0 1728 1728 0 0 1 0 0 1
+7 0 1728 1728 0 1 1 0 1 1
+4 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728
+2 0 1728 1728 0 0 1 0 0 1
+3 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728
jcnd=1728/1728 +97 0 
* 0 
+18 0 1728
+3 0 1728
+3 0 1728 0 1728
cfn=(38)
calls=1728 0x3877c79a00 0 
* 0 399530 49413 58256 45 30 59 45 30 59 61405 2703
+5 0 1728
+3 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728
+2 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728
+2 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728 23
+2 0 1728 1728
+7 0 1728 0 0 0 0 0 0 0 0 1728
jcnd=1728/1728 +13 0 
* 0 
+13 0 1728 0 1728
+2 0 1728 0 0 0 0 0 0 0 0 1728 12
+6 0 1728
+3 0 1728 1728
+4 0 1728 1728
+5 0 1728 1728
+5 0 1728
+4 0 1728 1728
+1 0 1728 0 0 1 0 0 1
+5 0 1728 1728 0 0 1 0 0 1
+7 0 1728 0 0 0 0 0 0 0 0 1728
jcnd=1728/1728 +14 0 
* 0 
+14 0 1728 0 1728 1 0 0 1
+3 0 1728 0 0 0 0 0 0 0 0 1728
+6 0 1728
jump=1728 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1728 0 1728 1 0 0 1
+2 0 1728
+3 0 1728
+3 0 1728 0 1728
+2 0 1728
+3 0 1728 0 1728
+1 0 1728
+3 0 1728 0 1728
+1 0 1728
+3 0 1728
+4 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728
+6 0 1728
+4 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728 7
jcnd=10/1728 0x3877c838d1 0 
* 0 
+2 0 1718
+3 0 1718
+3 0 1718
+3 0 1718
+3 0 1718
+3 0 1718 0 0 0 0 0 0 0 0 1718
jcnd=1718/1718 +41 0 
* 0 
+41 0 1718 0 0 1 0 0 1
+3 0 1718 0 0 0 0 0 0 0 0 1718
jcnd=1718/1718 0x3877c839c0 0 
* 0 
+24 0 1718
+3 0 1718
+4 0 1718
+3 0 1718
+3 0 1718
+3 0 1718
+3 0 1718
+3 0 1718 0 0 0 0 0 0 0 0 1718 856
jcnd=866/1718 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 862
+10 0 862 862 0 0 1 0 0 1
+3 0 862
+4 0 862 0 862
+3 0 862
+4 0 862
+4 0 862 0 0 0 0 0 0 0 0 862
jcnd=862/862 -18 0 
* 0 
-18 0 2642 2642
+3 0 2642
+4 0 2642 0 2642
+3 0 2642
+4 0 2642
+4 0 2642 0 0 0 0 0 0 0 0 2642 11
jcnd=1780/2642 -18 0 
* 0 
+2 0 1728
+4 0 1728
+3 0 1728 1728
+1 0 1728 1728
+1 0 1728 1728
+2 0 1728 1728 0 1 0 0 1
+2 0 1728 1728
0x3877c839c0 0 1718 0 0 1 0 0 1
+3 0 1718
+3 0 1718
+3 0 1718
+4 0 1718 0 1718 0 0 1 0 0 1
cfn=(284)
calls=1718 0x3877c89b20 0 
* 0 503226 187976 184540 6 1 60 6 1 60 24036 1248 1718 213
+5 0 1718
jump=1718 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1728 1728 0 1 1 0 1 1
+7 0 1728 1728 0 0 1 0 0 1
+3 0 1728
+3 0 1728 0 0 1 0 0 1 0 0 1728
+6 0 1728
+3 0 1728 0 0 0 0 0 0 0 0 1728
+6 0 1728 1728
+4 0 1728
+4 0 1728
+2 0 1728 0 0 0 0 0 0 0 0 1728 2
+2 0 1728
+2 0 1728
+7 0 1728 0 0 0 0 0 0 0 0 1728
jcnd=1728/1728 +14 0 
* 0 
+14 0 1728
+2 0 1728
cfn=(170)
calls=1728 0x3877c78650 0 
* 0 168415 44535 25485 19 3 0 19 3 0 40785 760

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 9
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 16627223 6882091 3922718 241 108 154 241 108 154 453990 6931 10358 213
