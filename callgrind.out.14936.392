version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 392


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 424602264 - 425642347
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 310 0 310 1 0 0 1
+1 * 310
+3 * 310
+4 * 310 0 310
+4 * 310 0 310
+4 +1 310 310
+4 * 310
+3 * 310 0 310
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=310 0x402d74 645 
* * 4030 1860 620
+5 * 310
+3 * 310 0 310
+3 +1 310 310
+6 * 310 0 310
+3 * 310 310
+6 * 310 0 310
+3 +1 310 310
+6 * 310 0 310 1 0 0 1
+3 * 310 310
+6 * 310 0 310
+3 +2 310 0 310
+7 * 310
jump=310 +86 * 
* * 
+2 +1 48515 48515
+3 * 48515
+3 * 48515 48515
+4 * 48515
+3 * 48515
+3 * 48515 0 48515
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=48515 0x402d9a 770 
* * 533665 242575 145545
+5 * 48515 48515
+4 * 48515 48515
+5 * 48515
+4 * 48515 0 48515
+5 +1 48515 48515
+3 * 48515
+3 * 48515 48515
+4 * 48515
+3 * 48515
+3 * 48515 0 48515
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=48515 0x402dba 770 
* * 533665 242575 145545 1 0 0 1
+5 * 48515 48515
+2 * 48515
+4 * 48515 48515
+5 * 48515
+4 * 48515 0 48515
+5 -2 48515 0 48515
+4 * 48515 48515
+3 * 48515
+3 * 48515 48515
+3 * 48515 0 0 0 0 0 0 0 0 48515 311
jcnd=48205/48515 -93 +1 
* * 
-9 * 310 310 0 1 0 0 1
+3 * 310
+3 * 310 310
+3 * 310 0 0 0 0 0 0 0 0 310
jcnd=310/310 -93 +1 
* * 
+2 +4 310 310
+3 * 310
+3 * 310
+4 * 310 310 0 1 0 0 1
+5 * 310
+4 * 310
+3 * 310 0 310
+5 +1 310 310
+3 * 310
+3 * 310
+4 * 310 310
+5 * 310
+4 * 310
+3 * 310 0 310
+5 +1 310 0 310
+7 * 310
jump=310 0x4016ee * 
* * 
+2 +1 48515 48515
+3 * 48515
+3 * 48515 48515
+4 * 48515
+3 * 48515 0 0 1 0 0 1
+3 * 48515 0 48515
cfi=(2)
cfn=(146)
calls=48515 0x402dba 770 
* * 533665 242575 145545
+5 * 48515 48515
+2 * 48515
+4 * 48515 48515
+5 * 48515 0 48515
+5 +1 48515 48515
+3 * 48515
+3 * 48515 48515
+4 * 48515
+3 * 48515
+3 * 48515 0 48515
cfi=(2)
cfn=(144)
calls=48515 0x402d9a 770 
* * 533665 242575 145545
+5 * 48515 48515
+4 * 48515 48515
+5 * 48515 0 48515
+5 +1 48515 48515
+5 * 48515 48515
+5 * 48515 48515
+5 * 48515
+4 * 48515 0 48515
+5 +1 48515 48515
+5 * 48515 48515
+5 * 48515 48515
+5 * 48515
+4 * 48515 0 48515
+5 -4 48515 0 48515
+4 * 48515 48515
+3 * 48515
+3 * 48515 48515
+3 * 48515 0 0 0 0 0 0 0 0 48515 311
jcnd=48205/48515 0x401672 +1 
* * 
-9 * 310 310 0 1 0 0 1
+3 * 310
+3 * 310 310
+3 * 310 0 0 0 0 0 0 0 0 310
jcnd=310/310 0x401672 +1 
* * 
+6 +6 310 310 0 1 0 0 1
+5 * 310 310
+5 * 310 0 310
+5 +2 310 310
+3 +1 310 0 310
+3 * 310 310
+5 * 310 310
+1 * 310 310

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 310
+7 * 310
+7 * 310
+3 * 310
+3 * 310 0 310
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=310 0x4030b2 310 
* * 323338 94357 88363 64 16 19 64 16 19 20480 943 1238 154
+5 * 310
+7 * 310
+7 * 310
+3 * 310
+3 * 310 0 310
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=310 0x402ff4 310 
* * 324917 93774 86731 45 21 68 45 21 68 20885 1121 1238
+5 * 310 0 0 1 0 0 1
+7 * 310
+7 * 310
+3 * 310
+3 * 310 0 310
cfn=(142)
calls=310 0x401585 -52 
* * 5065710 2239440 1169630 8 0 0 8 0 0 97650 622
+5 * 310 0 310
+8 * 310 310
+6 * 310 0 310
+6 * 310
+7 * 310
+3 * 310 0 310
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=310 0x402df4 414 
* * 76952 24120 17125 33 6 0 33 6 0 8458 257 620
+5 * 310
+7 * 310
+3 * 310 0 310 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=310 0x402e74 414 
* * 81231 25704 18401 7 1 0 7 1 0 9664 32 620
+5 +2 310
+7 * 310
+7 * 310
+3 * 310
+3 * 310 0 310
cfi=(2)
cfn=(4)
calls=310 0x4030b2 310 
* * 322968 94335 88245 2 1 1 2 1 1 20447 574 1238
+5 * 310
+7 * 310
+7 * 310
+3 * 310
+3 * 310 0 310
cfi=(2)
cfn=(80)
calls=310 0x402ff4 310 
* * 323208 93665 86524 0 0 0 0 0 0 20564 691 1238
+5 * 310 310
+6 * 310 0 0 1 0 0 1
+7 * 310
+7 * 310 0 310
+6 * 310 310
+8 * 310
+3 * 310
+3 * 310 0 310
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=310 0x401719 -33 
* * 2347010 977120 538315 4 0 0 4 0 0 48825 311
+5 * 310 0 310
+8 * 310 310
+6 * 310 0 310
+6 * 310
+7 * 310 0 0 1 0 0 1
+3 * 310 0 310
cfi=(2)
cfn=(148)
calls=310 0x402df4 414 
* * 76952 24120 17125 0 0 0 0 0 0 8458 251 620
+5 * 310
+7 * 310
+3 * 310 0 310
cfi=(2)
cfn=(178)
calls=310 0x402e74 414 
* * 81231 25704 18401 0 0 0 0 0 0 9664 26 620
+5 +2 310 310
+7 * 310
+3 * 310 0 310
cfi=(2)
cfn=(2)
calls=310 0x402d74 645 
* * 4030 1860 620
+5 * 310 310
+6 * 310
+3 * 310
+3 * 310
+3 * 310 310
+7 * 310
+3 * 310 0 0 1 0 0 1
+3 * 310 0 310
cfi=(2)
cfn=(144)
calls=310 0x402d9a 770 
* * 3410 1550 930
+5 * 310
+3 * 310
+7 * 310
+3 * 310
+3 * 310 0 310
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=310 0x402eda 901 
* * 32332 11907 9232 42 26 11 42 26 11 1461 81 47
+5 +1 310 310
+7 * 310
+3 * 310 0 310
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=310 0x402f54 645 
* * 4030 1860 620 0 1 0 0 1
+5 * 310 310
+6 * 310
+3 * 310
+3 * 310
+3 * 310 310
+7 * 310 0 0 1 0 0 1
+3 * 310
+3 * 310 0 310
cfi=(2)
cfn=(146)
calls=310 0x402dba 770 
* * 3410 1550 930
+5 * 310
+3 * 310
+7 * 310
+3 * 310
+3 * 310 0 310
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=310 0x402f7a 901 
* * 31459 11677 9042 19 20 36 19 20 36 1286 57 47
+5 +1 310 310
+7 * 310
+3 * 310 0 310
cfi=(2)
cfn=(10)
calls=310 0x402f54 645 
* * 4030 1860 620
+5 * 310 310
+6 * 310
+3 * 310
+3 * 310
+3 * 310 310 0 1 0 0 1
+7 * 310
+3 * 310
+3 * 310 0 310
cfi=(2)
cfn=(146)
calls=310 0x402dba 770 
* * 3410 1550 930
+5 * 310 310
+2 * 310
+4 * 310 310
+8 * 310 310
+8 * 310 0 310
+8 +1 310 310
+7 * 310
+3 * 310 0 310
cfi=(2)
cfn=(2)
calls=310 0x402d74 645 
* * 4030 1860 620
+5 * 310 310 0 1 0 0 1
+6 * 310
+3 * 310
+3 * 310
+3 * 310 310
+7 * 310
+3 * 310
+3 * 310 0 310
cfi=(2)
cfn=(144)
calls=310 0x402d9a 770 
* * 3410 1550 930
+5 * 310 310
+4 * 310 310
+8 * 310
+4 * 310 310
+8 * 310
+3 * 310 0 310
+8 +2 310 0 310
+7 -12 310 310
+8 * 310 310
+7 * 310 0 0 0 0 0 0 0 0 310 1
jcnd=1/310 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 310
+7 * 310
+3 * 310 0 310
cfi=(2)
cfn=(2)
calls=310 0x402d74 645 
* * 4030 1860 620 2 0 1 2 0 1
+5 * 310
+3 * 310 310
+7 * 310
+3 * 310 0 310
cfi=(2)
cfn=(2)
calls=310 0x402d74 645 
* * 4030 1860 620 0 1 0 0 1
+5 * 310
+3 * 310 0 0 0 0 0 0 0 0 310 2
+2 * 310 0 0 1 0 0 1
+5 * 310
jump=310 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 310
+2 * 310 0 0 0 0 0 0 0 0 310
jcnd=310/310 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 310 0 310
+1 * 310
+3 * 310
+4 * 310 0 310
+4 * 310 0 310
+4 * 310 0 310
+5 +1 310 310
+4 * 310
+3 * 310 0 310
cfi=(2)
cfn=(2)
calls=310 0x402d74 645 
* * 4030 1860 620
+5 * 310
+3 * 310 0 310
+3 +1 310 310 0 1 0 0 1
+6 * 310 0 310
+3 * 310 310
+6 * 310 0 310
+3 +2 310 0 310
+7 * 310
jump=310 +86 * 
* * 
+2 +1 48515 48515
+3 * 48515
+3 * 48515 48515
+4 * 48515
+3 * 48515
+3 * 48515 0 48515
cfi=(2)
cfn=(144)
calls=48515 0x402d9a 770 
* * 533665 242575 145545
+5 * 48515 48515
+4 * 48515 48515
+5 * 48515
+4 * 48515 0 48515
+5 +1 48515 48515
+3 * 48515
+3 * 48515 48515
+4 * 48515
+3 * 48515
+3 * 48515 0 48515
cfi=(2)
cfn=(146)
calls=48515 0x402dba 770 
* * 533665 242575 145545
+5 * 48515 48515
+2 * 48515
+4 * 48515 48515
+5 * 48515
+4 * 48515 0 48515
+5 -2 48515 0 48515
+4 * 48515 48515
+3 * 48515
+3 * 48515 48515
+3 * 48515 0 0 0 0 0 0 0 0 48515 311
jcnd=48205/48515 -93 +1 
* * 
-9 * 310 310 0 1 0 0 1
+3 * 310
+3 * 310 310
+3 * 310 0 0 0 0 0 0 0 0 310
jcnd=310/310 -93 +1 
* * 
+2 +4 310 310
+3 * 310
+3 * 310 0 0 1 0 0 1
+4 * 310 310
+5 * 310
+4 * 310
+3 * 310 0 310
+5 +1 310 310
+3 * 310
+3 * 310
+4 * 310 310
+5 * 310
+4 * 310
+3 * 310 0 310
+5 +1 310 310
+5 * 310 310
+5 * 310 310
+5 * 310 0 0 1 0 0 1
+4 * 310
+3 * 310 0 310
+5 +2 310 310
+3 +1 310 0 310
+3 * 310 310
+5 * 310 310
+1 * 310 310

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 620 0 620 1 0 0 1
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=620 0x404a28 -35 
* * 3720 1240 1860 1 0 1 1 0 1
+5 * 620 620
+1 * 620 620

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 620
+4 * 620
+3 * 620 0 620
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=620 0x4044cc -35 
* * 3100 1240 1240
+5 * 620 620
+1 * 620 620

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 620 0 620 1 0 0 1
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620 1 0 0 1
+4 +1 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=620 0x4049d4 -35 
* * 3720 1240 1860 1 0 0 1
+5 * 620 620
+1 * 620 620

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 620 0 620 1 0 0 1
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 620
+4 * 620
+3 * 620 0 620
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=620 0x404520 -35 
* * 3100 1240 1240
+5 * 620 620
+1 * 620 620

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 310 0 310
+1 * 310
+3 * 310
+4 * 310 0 310
+4 * 310 0 310
+4 * 310 0 310
+4 +1 310 310
+4 * 310 310
+4 * 310 310
+4 * 310
+3 * 310
+3 * 310 0 310
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=310 0x403df2 -87 
* * 7440 2480 2790 0 21 4 0 21 4 310 2
+5 * 310 310
+1 * 310 310

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 620 0 620 1 0 0 1
+1 * 620
+3 * 620 0 620
+4 * 620 620
+4 * 620 620
+1 * 620 620

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 310 0 310
+1 * 310
+3 * 310
+4 * 310 0 310
+4 * 310 0 310
+4 * 310 0 310
+4 +1 310 310
+4 * 310 310
+4 * 310 310
+4 * 310
+3 * 310
+3 * 310 0 310
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=310 0x40406a -87 
* * 7440 2480 2790 0 19 11 0 19 11 310
+5 * 310 310
+1 * 310 310

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 620 0 620
+1 * 620
+3 * 620 0 620
+4 * 620 620
+4 * 620 620
+1 * 620 620

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 +1 1240
+4 * 1240
+3 * 1240 0 1240 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1240 0x40500c 790 
* * 7440 3720 2480 1 0 0 1
+5 * 1240 1240
+3 * 1240 1240
+1 * 1240 1240

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 700 0 700
+1 * 700
+3 * 700 0 700
+4 +1 700 700
+4 * 700 700
+1 * 700 700

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+4 +1 1240 1240 0 1 0 0 1
+4 * 1240 1240
+1 * 1240 1240

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 700 0 700
+1 * 700
+3 * 700 0 700 0 0 1 0 0 1
+4 +1 700 700
+4 * 700 700
+1 * 700 700

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 +1 1240
+4 * 1240
+3 * 1240 0 1240
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1240 0x404ffe 790 
* * 7440 3720 2480 1 0 0 1
+5 * 1240 1240
+3 * 1240 1240
+1 * 1240 1240

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 620 0 620
+1 * 620
+3 * 620 0 620
+4 * 620 0 620
+4 * 620 620
+4 * 620 620
+1 * 620 620

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628 1 0 0 1
+4 +2 628 628
+4 * 628
+3 * 628 0 628
cfn=(28)
calls=628 0x404992 +12 
* * 3768 1256 1256 1 0 0 1
+5 * 628 628
+4 * 628
+3 * 628
+2 * 628 0 0 0 0 0 0 0 0 628
jcnd=628/628 +7 +3 
* * 
+7 +3 628 628
+4 * 628
+4 * 628
+3 * 628 0 628
cob=(5) /usr/lib64/libstdc++.so.6.0.13
cfi=(8) ???
cfn=(32) operator new(unsigned long)
calls=628 0x387e4bd0b0 0 
* * 177512 27177 27501 16 13 16 16 13 16 28610 843 628
* * 628 628 0 1 1 0 1 1 0 0 0 628
+5 +1 628 628
+1 * 628 628

fn=(102)
0x4048de 113 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644
+4 +1 644
+10 * 644 644
+1 * 644 644

fn=(266)
0x40406a 129 310 0 310
+1 * 310
+3 * 310
+4 * 310 0 310
+4 * 310 0 310
+4 * 310 0 310
+4 +1 310 310
+4 * 310
+3 * 310
+5 * 310 0 310
cfi=(16)
cfn=(226)
calls=310 0x402d61 -20 
* * 2170 930 930
+5 * 310
+3 * 310 0 0 0 0 0 0 0 0 310
+2 * 310 310
+4 * 310 310 0 0 19 0 0 19
+2 * 310 0 310 0 0 11 0 0 11
+2 * 310 310
+1 * 310 310

fn=(28)
0x404992 113 644 0 644 1 0 0 1
+1 * 644
+3 * 644 0 644
+4 +1 644
+10 * 644 644
+1 * 644 644

fn=(176)
0x4044cc 86 620 0 620
+1 * 620
+3 * 620 0 620
+4 * 620 620
+1 * 620 620

fn=(224)
0x403df2 129 310 0 310
+1 * 310
+3 * 310
+4 * 310 0 310
+4 * 310 0 310
+4 * 310 0 310
+4 +1 310 310
+4 * 310
+3 * 310
+5 * 310 0 310
cfi=(16)
cfn=(226)
calls=310 0x402d61 -20 
* * 2170 930 930
+5 * 310
+3 * 310 0 0 0 0 0 0 0 0 310 2
+2 * 310 310
+4 * 310 310 0 0 21 0 0 21
+2 * 310 0 310 0 0 4 0 0 4
+2 * 310 310
+1 * 310 310

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628
+3 * 628 0 628
cob=(5)
cfi=(8)
cfn=(164) operator delete(void*)
calls=628 0x387e4bb2f0 0 
* * 67954 16827 7701 23 5 0 23 5 0 16490 515 628
* * 628 628 0 1 1 0 1 1 0 0 0 628
+5 * 628 628
+1 * 628 628

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +1 628 628
+4 * 628
+3 * 628 0 628
cob=(5)
cfi=(8)
cfn=(164)
calls=628 0x387e4bb2f0 0 
* * 76545 20012 10256 0 1 0 0 1 0 18911 67 628
* * 628 628 0 0 0 0 0 0 0 0 0 628
+5 * 628 628
+1 * 628 628

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628
+4 * 628
+3 * 628 0 628
cfn=(102)
calls=628 0x4048de +12 
* * 3768 1256 1256 1 0 0 1
+5 * 628 628
+4 * 628 0 0 1 0 0 1
+3 * 628
+2 * 628 0 0 0 0 0 0 0 0 628
jcnd=628/628 +7 +3 
* * 
+7 +3 628 628
+4 * 628
+4 * 628
+3 * 628 0 628
cob=(5)
cfi=(8)
cfn=(32)
calls=628 0x387e4bd0b0 0 
* * 180237 26171 24341 34 26 36 34 26 36 29316 1176 628
* * 628 628 0 0 0 0 0 0 0 0 0 628
+5 +1 628 628
+1 * 628 628

fn=(18)
0x404a28 81 620 0 620 1 0 0 1
+1 * 620
+3 * 620 0 620 0 0 1 0 0 1
+4 * 620 0 620
+4 * 620 620
+1 * 620 620

fn=(92)
0x4049d4 81 620 0 620 1 0 0 1
+1 * 620
+3 * 620 0 620
+4 * 620 0 620
+4 * 620 620
+1 * 620 620

fn=(196)
0x404520 86 620 0 620
+1 * 620
+3 * 620 0 620
+4 * 620 620
+1 * 620 620

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=620 0x404484 107 
* * 302748 100460 96744 25 3 6 25 3 6 11376 710 1236 154
+5 * 620 620
+1 * 620 620

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620 0 1 0 0 1
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=620 0x404a36 450 
* * 285388 94260 90544 24 3 6 24 3 6 11376 710 1236 154
+5 * 620 620
+1 * 620 620

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=620 0x40439c 107 
* * 302748 100460 96744 7 0 36 7 0 36 11376 694 1236
+5 * 620 620
+1 * 620 620

fn=(116)
0x40439c 107 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +10 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=620 0x4047d7 -26 
* * 294068 97360 93644 7 0 36 7 0 36 11376 694 1236
+5 +1 620 620
+1 * 620 620

fn=(118)
0x4047d7 91 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=620 0x4049e2 450 
* * 285388 94260 90544 7 0 36 7 0 36 11376 694 1236
+5 * 620 620
+1 * 620 620

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +10 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(52)
calls=620 0x404829 -26 
* * 294068 97360 93644 25 3 6 25 3 6 11376 710 1236 154
+5 +1 620 620
+1 * 620 620

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 628 0 628 1 0 0 1
+1 * 628 0 0 1 0 0 1
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 0 628 628
+5 0 628 0 0 0 0 0 0 0 0 628
+2 0 628 628
+4 0 628 628
+4 0 628
+5 0 628
+3 0 628
+3 0 628 0 628
fi=(6) ???
cfi=(5)
cfn=(100)
calls=628 0x40461a 99 
* 0 196565 31195 29365 37 26 36 37 26 36 29944 1176 1256
+5 0 628
fi=(6)
jump=628 +7 0 
* 0 
+7 0 628 628
+1 0 628 628

fn=(144)
0x402d9a 770 146165 0 146165
+1 * 146165
+3 * 146165 0 146165
+4 * 146165 0 146165
+4 +1 146165 146165
+4 * 146165 146165
+3 * 146165 146165
+4 * 146165
+4 * 146165
+3 * 146165 146165
+1 * 146165 146165

fn=(146)
0x402dba 770 146165 0 146165
+1 * 146165
+3 * 146165 0 146165 1 0 0 1
+4 * 146165 0 146165
+4 +1 146165 146165
+4 * 146165 146165
+3 * 146165 146165
+4 * 146165
+4 * 146165
+3 * 146165 146165
+1 * 146165 146165

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 620
+4 * 620
+3 * 620 0 620
cfi=(4)
cfn=(194)
calls=620 0x403d7e +42 
* * 8680 3100 3100 1 0 0 1
+5 * 620 620
+1 * 620 620

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 620 0 620 1 0 0 1
+1 * 620
+3 * 620 0 620
+1 * 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620
+4 * 620
+3 * 620 620
+4 * 620 620
+3 * 620
+3 * 620
+3 * 620
+4 * 620
+3 * 620 620
+4 * 620 620
+3 -1 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=620 0x403d98 +11 
* * 93022 25988 16342 1 1 0 1 1 0 19328 58 1240
+5 +1 620 620
+4 * 620
+3 * 620 0 620
cfn=(192)
calls=620 0x403296 -82 
* * 14260 4960 4960 1 0 0 1
+5 * 620
jump=620 +28 * 
* * 
+28 * 620
+4 * 620 620
+1 * 620 620
+1 * 620 620

fn=(2)
0x402d74 645 2512 0 2512 1 0 0 1
+1 * 2512
+3 * 2512 0 2512 0 0 1 0 0 1
+4 +1 2512 2512
+4 * 2512 2512 0 1 1 0 1 1
+4 * 2512
+3 * 2512 2512
+4 * 2512 2512
+3 * 2512
+3 * 2512
+3 * 2512
+4 * 2512 2512
+1 * 2512 2512

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=620 0x404236 -14 
* * 201578 34912 34604 22 13 9 22 13 9 29551 807 1240
+5 * 620 620
+4 * 620 0 620
+3 +1 620 620
+4 * 620 620 0 1 0 0 1
+3 * 620 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+3 * 620 620
+4 * 620
+4 * 620
+3 * 620 620
+4 * 620 0 620
+4 +1 620 620
+1 * 620 620

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620 0 1 0 0 1
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(96)
calls=620 0x403fbe -14 
* * 203397 33659 31251 23 21 32 23 21 32 30073 1118 1240
+5 * 620 620
+4 * 620 0 620
+3 +1 620 620
+4 * 620 620
+3 * 620 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+3 * 620 620
+4 * 620
+4 * 620
+3 * 620 620
+4 * 620 0 620
+4 +1 620 620
+1 * 620 620

fn=(244)
0x402f7a 901 310 0 310
+1 * 310
+3 * 310 0 0 1 0 0 1
+4 * 310 0 310
+4 * 310 0 310
+4 +2 310 310
+4 * 310 310
+4 * 310 310
+4 * 310 310
+4 * 310
+3 * 310 0 0 0 0 0 0 0 0 310
jcnd=8/310 +51 +10 
* * 
+2 +3 302 302
+4 * 302 302
+4 * 302 302
+4 -1 302 302
+4 * 302
+3 * 302
+3 * 302 0 302
cfi=(3)
cfn=(264)
calls=302 0x4036b1 215 
* * 11476 3926 4228 0 19 7 0 19 7 302
+5 +2 302 302
+4 * 302 302
+4 * 302
+4 * 302 302
+4 * 302 0 302
+4 * 302
jump=302 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11771 3681 3208 18 1 29 18 1 29 674 57 47
+5 +2 310 310
+1 * 310 310

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1264 0 1264 1 0 0 1
+1 * 1264
+3 * 1264 0 1264 1 0 0 1
+4 +1 1264 1264
+4 * 1264 1264
+1 * 1264 1264

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+3 * 620 0 620
+4 * 620
+4 * 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=620 0x404380 726 
* * 6200 3100 2480
+5 * 620 620
+4 * 620 620
+1 * 620 620

fn=(148)
0x402df4 414 620 0 620
+1 * 620
+3 * 620 0 620
+1 * 620
+4 * 620 0 620 1 0 0 1
+4 +2 620 620
+4 * 620
+3 * 620 0 620
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=620 0x40325e 113 
* * 3720 1860 1240
+5 * 620
+3 * 620 620
+4 * 620 620
+4 * 620 620
+4 * 620 620
+3 -1 620
+3 * 620
+3 * 620 0 620
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=620 0x40326c 148 
* * 19220 6200 7440 4 0 0 4
+5 +1 620 620
+4 * 620
+3 * 620 0 620
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=620 0x4031ec 159 
* * 116084 34600 21850 27 6 0 27 6 0 16916 508 1240
+5 * 620
jump=620 +28 * 
* * 
+28 * 620 0 0 1 0 0 1
+4 * 620 620
+1 * 620 620
+1 * 620 620

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628
+5 * 628 0 0 0 0 0 0 0 0 628
+2 +1 628 628
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(5)
cfn=(160)
calls=628 0x4044d6 -65 
* * 75490 19339 10841 24 6 0 24 6 0 16490 515 1256
+5 +1 628 628
+1 * 628 628

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 620 0 620
+1 * 620
+3 * 620 0 620
+1 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=620 0x4043ca -45 
* * 22320 8060 8680 4 0 4 4 0 4
+5 +1 620 620 0 1 0 0 1
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(20)
calls=620 0x404412 +43 
* * 217078 42352 38944 23 13 9 23 13 9 29551 807 1240
+5 * 620
jump=620 +28 * 
* * 
+28 * 620
+4 * 620 620
+1 * 620 620
+1 * 620 620

fn=(14)
0x4043ca 90 620 0 620 1 0 0 1
+1 * 620
+3 * 620
+4 * 620 0 620 0 0 1 0 0 1
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(4)
cfn=(16)
calls=620 0x404804 +24 
* * 11160 3720 4340 2 0 1 2 0 1
+5 * 620 620
+4 * 620 0 620 0 0 2 0 0 2
+7 * 620 620
+4 * 620 0 620 1 0 0 1
+8 * 620 620
+4 * 620 0 620
+8 +1 620 620
+1 * 620 620

fn=(80)
0x402ff4 310 620 0 620 1 0 0 1
+1 * 620
+3 * 620 0 620
+2 * 620 0 620
+2 * 620 0 620
+1 * 620 0 0 1 0 0 1
+4 * 620 0 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620
+3 * 620 0 620
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=620 0x4039fc 117 
* * 3720 1860 1240 2 0 0 2
+5 * 620
+3 * 620 0 620
cfi=(3)
cfn=(84)
calls=620 0x4039ed -88 
* * 3720 1860 1240
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(2)
calls=620 0x402d74 645 
* * 8060 3720 1240
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620
+3 * 620
+3 * 620 0 620 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=620 0x403a0a 134 
* * 254857 53499 48611 30 21 32 30 21 32 30073 1118 1240
+5 +4 620 620
+4 * 620
+3 * 620 0 620
cfn=(106)
calls=620 0x40325e 113 
* * 3720 1860 1240 1 0 0 1
+5 * 620
+3 * 620 620
+4 * 620 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=620 0x403a98 565 
* * 15500 6200 4960 2 0 0 2
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(112)
calls=620 0x403a68 547 
* * 15500 6200 4960
+5 * 620
+3 * 620
+3 * 620
+3 * 620
+3 * 620 0 620
cfi=(11)
cfn=(114)
calls=620 0x403ac9 -60 
* * 312048 103560 100464 7 0 36 7 0 36 11376 694 1236
+5 -3 620 620
+4 * 620 0 620
+4 * 620
jump=620 +28 +4 
* * 
+28 +4 620
+4 * 620 620
+1 * 620 620
+2 * 620 620
+2 * 620 620
+1 * 620 620

fn=(188)
0x403d98 171 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +2 628 628
+5 * 628 0 0 0 0 0 0 0 0 628 8
+2 +1 628 628
+4 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfi=(5)
cfn=(190)
calls=628 0x40452a -65 
* * 84081 22524 13396 0 1 0 0 1 0 18911 67 1256
+5 +1 628 628
+1 * 628 628

fn=(22)
0x404236 167 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628 1 0 0 1
+4 * 628 0 628
+4 0 628 628
+5 0 628 0 0 0 0 0 0 0 0 628
+2 0 628 628
+4 0 628 628
+4 0 628
+5 0 628
+3 0 628
+3 0 628 0 628
fi=(6)
cfi=(5)
cfn=(26)
calls=628 0x404730 99 
* 0 193840 32201 32525 20 14 16 20 14 16 29238 843 1256
+5 0 628
fi=(6)
jump=628 +7 0 
* 0 
+7 0 628 628
+1 0 628 628

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 620 0 620 1 0 0 1
+1 * 620
+3 * 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620 0 620
+4 * 620
+4 * 620 0 0 1 0 0 1
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=620 0x404468 726 
* * 6200 3100 2480 1 0 0 1
+5 * 620 620
+4 * 620 620
+1 * 620 620

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+3 * 620 0 620
+4 * 620
+4 * 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(10)
cfn=(44)
calls=620 0x404468 726 
* * 6200 3100 2480
+5 * 620 620
+4 * 620 620
+1 * 620 620

fn=(86)
0x403a0a 134 620 0 620
+1 * 620
+3 * 620 0 620
+1 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=620 0x4042e2 -45 
* * 22320 8060 8680 5 0 0 5
+5 +1 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620 1 0 0 1
cfn=(94)
calls=620 0x40432a +43 
* * 218897 41099 35591 24 21 32 24 21 32 30073 1118 1240
+5 * 620
jump=620 +28 * 
* * 
+28 * 620
+4 * 620 620
+1 * 620 620
+1 * 620 620

fn=(88)
0x4042e2 90 620 0 620 1 0 0 1
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620 1 0 0 1
cfi=(4)
cfn=(90)
calls=620 0x4047b2 +24 
* * 11160 3720 4340 3 0 0 3
+5 * 620 620
+4 * 620 0 620
+7 * 620 620
+4 * 620 0 620
+8 * 620 620
+4 * 620 0 620
+8 +1 620 620
+1 * 620 620

fn=(156)
0x4031ec 159 620 0 620 1 0 0 1
+1 * 620
+3 * 620 0 620
+1 * 620
+4 * 620 0 620
+4 +2 620 620
+4 * 620 620 0 1 0 0 1
+4 * 620
+3 * 620 620
+4 * 620 620
+3 * 620
+3 * 620
+3 * 620
+4 * 620
+3 * 620 620
+4 * 620 620
+3 -1 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(158)
calls=620 0x403ce6 +11 
* * 84464 22820 13790 24 6 0 24 6 0 16916 508 1240
+5 +1 620 620
+4 * 620
+3 * 620 0 620
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=620 0x4031b8 -82 
* * 14260 4960 4960 1 0 0 1
+5 * 620
jump=620 +28 * 
* * 
+28 * 620
+4 * 620 620
+1 * 620 620
+1 * 620 620

fn=(172)
0x4031b8 79 620 0 620 1 0 0 1
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 620
+4 * 620
+3 * 620 0 620
cfi=(4)
cfn=(174)
calls=620 0x403ccc +42 
* * 8680 3100 3100
+5 * 620 620
+1 * 620 620

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1272 0 1272 1 0 0 1
+1 * 1272
+3 * 1272 0 1272
+4 +1 1272 1272
+4 * 1272 1272 0 0 2 0 0 2
+4 * 1272
+3 * 1272 1272
+4 * 1272 1272
+3 * 1272
+3 * 1272
+3 * 1272
+4 * 1272 1272
+1 * 1272 1272

fn=(106)
0x40325e 113 1264 0 1264 1 0 0 1
+1 * 1264
+3 * 1264 0 1264
+4 +1 1264 1264
+4 * 1264 1264
+1 * 1264 1264

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 636 0 636 1 0 0 1
+1 * 636
+3 * 636 0 636 0 0 1 0 0 1
+4 +1 636 636
+4 * 636 636
+1 * 636 636

fn=(82)
0x4039fc 117 636 0 636 1 0 0 1
+1 * 636
+3 * 636 0 636 1 0 0 1
+4 +1 636 636
+4 * 636 636
+1 * 636 636

fn=(200)
0x402eda 901 310 0 310
+1 * 310
+3 * 310
+4 * 310 0 310
+4 * 310 0 310
+4 +2 310 310
+4 * 310 310
+4 * 310 310
+4 * 310 310
+4 * 310
+3 * 310 0 0 0 0 0 0 0 0 310 8
jcnd=8/310 +51 +10 
* * 
+2 +3 302 302
+4 * 302 302
+4 * 302 302
+4 -1 302 302
+4 * 302
+3 * 302
+3 * 302 0 302
cfi=(3)
cfn=(222)
calls=302 0x403373 215 
* * 11476 3926 4228 0 20 3 0 20 3 302 2
+5 +2 302 302
+4 * 302 302
+4 * 302
+4 * 302 302
+4 * 302 0 302
+4 * 302
jump=302 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12644 3911 3398 39 6 8 39 6 8 849 71 47
+5 +2 310 310
+1 * 310 310

fn=(4)
0x4030b2 310 620 0 620 1 0 0 1
+1 * 620
+3 * 620 0 620
+2 * 620 0 620
+2 * 620 0 620
+1 * 620
+4 * 620 0 620 1 0 0 1
+4 * 620 0 620
+4 +2 620 620
+4 * 620
+3 * 620 0 620
cfn=(6)
calls=620 0x403b08 117 
* * 3720 1860 1240 1 0 1 1 0 1
+5 * 620
+3 * 620 0 620
cfi=(3)
cfn=(8)
calls=620 0x403afa -88 
* * 3720 1860 1240 1 0 0 1
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(10)
calls=620 0x402f54 645 
* * 8060 3720 1240 1 1 0 1 1
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620
+3 * 620
+3 * 620 0 620
cfn=(12)
calls=620 0x403b16 134 
* * 253038 54752 51964 28 13 13 28 13 13 29551 807 1240
+5 +4 620 620 0 1 0 0 1
+4 * 620
+3 * 620 0 620
cfn=(40)
calls=620 0x40333c 113 
* * 3720 1860 1240 2 0 0 2
+5 * 620
+3 * 620 620
+4 * 620 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(42)
calls=620 0x403ba4 565 
* * 15500 6200 4960 3 0 0 3
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(46)
calls=620 0x403b74 547 
* * 15500 6200 4960
+5 * 620
+3 * 620
+3 * 620
+3 * 620
+3 * 620 0 620 1 0 0 1
cfi=(11)
cfn=(48)
calls=620 0x403bd5 -60 
* * 312048 103560 100464 26 3 6 26 3 6 11376 710 1236 154
+5 -3 620 620
+4 * 620 0 620
+4 * 620
jump=620 +28 +4 
* * 
+28 +4 620
+4 * 620 620
+1 * 620 620
+2 * 620 620
+2 * 620 620
+1 * 620 620

fn=(108)
0x403a98 565 620 0 620 1 0 0 1
+1 * 620
+3 * 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620 0 620
+4 * 620
+4 * 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfi=(10)
cfn=(110)
calls=620 0x404380 726 
* * 6200 3100 2480 1 0 0 1
+5 * 620 620
+4 * 620 620
+1 * 620 620

fn=(178)
0x402e74 414 620 0 620
+1 * 620
+3 * 620 0 620
+1 * 620
+4 * 620 0 620 1 0 0 1
+4 +2 620 620
+4 * 620
+3 * 620 0 620
cfn=(40)
calls=620 0x40333c 113 
* * 3720 1860 1240
+5 * 620
+3 * 620 620
+4 * 620 620
+4 * 620 620
+4 * 620 620
+3 -1 620
+3 * 620
+3 * 620 0 620
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=620 0x40334a 148 
* * 19220 6200 7440 2 0 0 2
+5 +1 620 620
+4 * 620
+3 * 620 0 620
cfn=(186)
calls=620 0x4032ca 159 
* * 124642 37768 24402 3 1 0 3 1 0 19328 58 1240
+5 * 620
jump=620 +28 * 
* * 
+28 * 620 0 0 1 0 0 1
+4 * 620 620
+1 * 620 620
+1 * 620 620

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620 1 0 0 1
+4 * 620 0 620
+4 * 620 0 620
+4 +8 620 0 620
+4 +3 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=620 0x404f37 -22 
* * 186188 60780 56444 14 3 5 14 3 5 11376 710 1236 154
+5 +1 620 620
+1 * 620 620

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 620 0 620
+1 * 620
+3 * 620 0 620
+2 * 620 0 620
+1 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +4 620 620
+4 * 620
+3 * 620 0 620
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=620 0x404878 277 
* * 9300 3720 3100 1 0 0 1
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=620 0x404d44 277 
* * 15500 5580 4960 2 0 0 2
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(132)
calls=620 0x404d44 277 
* * 15500 5580 4960
+5 * 620
+3 * 620
+3 * 620
+3 * 620 0 620
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=620 0x404d5e -49 
* * 195488 63880 60164 1 0 36 1 0 36 11376 694 1236
+5 +1 620
+4 * 620 620
+1 * 620 620
+2 * 620 620
+1 * 620 620

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 620 0 620
+1 * 620
+3 * 620 0 620
+1 * 620
+4 * 620 0 620 1 0 0 1
+4 * 620 0 620
+4 * 620 0 620
+4 +10 620 620
+4 * 620
+3 * 620 0 620
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=620 0x404c38 288 
* * 9300 3720 3100 3 0 0 3
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(56)
calls=620 0x404c38 288 
* * 9300 3720 3100
+5 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=620 0x404c52 -36 
* * 253148 83100 79384 20 3 6 20 3 6 11376 710 1236 154
+5 +1 620
+4 * 620 620
+1 * 620 620
+1 * 620 620

fn=(60)
0x404c52 424 620 0 620
+1 * 620
+3 * 620 0 620
+2 * 620 0 620
+1 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +4 620 620
+4 * 620
+3 * 620 0 620
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=620 0x40492d 277 
* * 9300 3720 3100 2 0 0 2
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=620 0x404d9d 277 
* * 15500 5580 4960 2 0 1 2 0 1
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(66)
calls=620 0x404d9d 277 
* * 15500 5580 4960
+5 * 620
+3 * 620
+3 * 620
+3 * 620 0 620
cfn=(72)
calls=620 0x404db7 -49 
* * 195488 63880 60164 15 3 5 15 3 5 11376 710 1236 154
+5 +1 620
+4 * 620 620
+1 * 620 620
+2 * 620 620
+1 * 620 620

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 668 0 668 1 0 0 1
+1 * 668
+3 * 668
+4 * 668 0 668
+4 +1 668 668
+4 * 668
+3 * 668 0 668 1 0 0 1
cfi=(13)
cfn=(64)
calls=668 -33 -66 
* * 4008 2004 1336
+5 * 668 668
+1 * 668 668

fn=(66)
0x404d9d 277 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfi=(13)
cfn=(68)
calls=1240 0x404f1a -58 
* * 19840 7440 6200 2 0 1 2 0 1
+5 * 1240 1240
+1 * 1240 1240

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 620 0 620
+1 * 620
+3 * 620 0 620
+1 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +10 620 620
+4 * 620
+3 * 620 0 620
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=620 0x404bc6 288 
* * 9300 3720 3100 3 0 0 3
+5 * 620
+3 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(122)
calls=620 0x404bc6 288 
* * 9300 3720 3100
+5 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(126)
calls=620 0x404be0 -36 
* * 253148 83100 79384 4 0 36 4 0 36 11376 694 1236
+5 +1 620
+4 * 620 620
+1 * 620 620
+1 * 620 620

fn=(128)
0x404878 277 668 0 668
+1 * 668
+3 * 668
+4 * 668 0 668 1 0 0 1
+4 +1 668 668
+4 * 668
+3 * 668 0 668
cfi=(13)
cfn=(130)
calls=668 -33 -66 
* * 4008 2004 1336 0 0 1 0 0 1
+5 * 668 668
+1 * 668 668

fn=(132)
0x404d44 277 1240 0 1240
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfi=(13)
cfn=(134)
calls=1240 0x404e98 -58 
* * 19840 7440 6200 2 0 0 2
+5 * 1240 1240
+1 * 1240 1240

fn=(138)
0x404d5e 379 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
+4 * 620 0 620
+4 * 620 0 620
+4 +8 620 0 620
+4 +3 620 620
+4 * 620 620
+4 * 620 620
+4 * 620
+3 * 620
+3 * 620 0 620
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=620 0x404eb5 -22 
* * 186188 60780 56444 1 0 36 1 0 36 11376 694 1236
+5 +1 620 620
+1 * 620 620

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfi=(13)
cfn=(124)
calls=1240 0x404d36 -77 
* * 7440 3720 2480 2 0 0 2
+5 * 1240 1240
+1 * 1240 1240

fn=(56)
0x404c38 288 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240
+4 * 1240 0 1240 1 0 0 1
+4 +1 1240 1240
+4 * 1240
+3 * 1240 0 1240
cfi=(13)
cfn=(58)
calls=1240 0x404d8f -77 
* * 7440 3720 2480 1 0 0 1
+5 * 1240 1240
+1 * 1240 1240

fn=(74)
0x404f37 368 636 0 636
+1 * 636
+3 * 636
+4 * 636 0 636 1 0 0 1
+4 * 636 0 636
+4 * 636 0 636
+4 +2 636 636
+4 * 636 636
+4 * 636
+3 * 636
+3 * 636
+4 * 636 0 636
+4 +1 636 636
+5 * 636 0 0 0 0 0 0 0 0 636
jcnd=8/636 +33 +2 
* * 
+2 +1 628 628
+4 * 628
+8 * 628 628
+4 * 628 628
+4 * 628
+3 * 628 0 0 1 0 0 1
+3 * 628 0 628 0 0 1 0 0 1
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(78) memmove
calls=628 0x3877c83840 0 
* * 169950 54276 53025 11 2 22 11 2 22 10840 714 623 154
* * 628 628 0 1 1 0 1 1 0 0 0 628
+5 +1 636 636
+4 * 636
+8 * 636 636
+4 * 636
+3 +1 636 636
+1 * 636 636

fn=(140)
0x404eb5 368 636 0 636
+1 * 636
+3 * 636
+4 * 636 0 636 1 0 0 1
+4 * 636 0 636
+4 * 636 0 636 0 0 1 0 0 1
+4 +2 636 636
+4 * 636 636
+4 * 636
+3 * 636
+3 * 636
+4 * 636 0 636
+4 +1 636 636
+5 * 636 0 0 0 0 0 0 0 0 636
jcnd=8/636 +33 +2 
* * 
+2 +1 628 628
+4 * 628
+8 * 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cob=(2)
cfi=(9)
cfn=(78)
calls=628 0x3877c83840 0 
* * 169950 54276 53025 0 0 37 0 0 37 10840 700 623
* * 628 628 0 0 0 0 0 0 0 0 0 628
+5 +1 636 636
+4 * 636
+8 * 636 636
+4 * 636
+3 +1 636 636
+1 * 636 636

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(110)
0x404380 726 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 1240
+4 * 1240 1240
+3 * 1240 1240
+4 * 1240 0 1240
+3 * 1240 1240
+1 * 1240 1240

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1240 0 1240 1 0 0 1
+1 * 1240
+3 * 1240 0 1240
+4 +1 1240 1240
+4 * 1240 1240
+1 * 1240 1240

fn=(44)
0x404468 726 1240 0 1240
+1 * 1240
+3 * 1240 0 1240
+4 * 1240 0 1240
+4 * 1240 1240
+4 * 1240 1240
+3 * 1240 1240
+4 * 1240 0 1240 1 0 0 1
+3 * 1240 1240
+1 * 1240 1240

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(150)
0x40326c 148 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +3 628 628 0 1 0 0 1
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=628 0x403d1a -29 
* * 11304 3768 4396 3 0 0 3
+5 +1 628 628
+1 * 628 628

fn=(180)
0x40334a 148 628 0 628
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 * 628 0 628
+4 +3 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(182) void std::_Destroy<int*>(int*, int*)
calls=628 0x403dcc -29 
* * 11304 3768 4396 2 0 0 2
+5 +1 628 628
+1 * 628 628

fn=(152)
0x403d1a 122 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 +4 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
calls=628 0x4044f8 -14 
* * 3768 1256 1884 2 0 0 2
+5 +2 628 628
+1 * 628 628

fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+4 * 628 0 628
+4 * 628 628
+1 * 628 628

fn=(154)
0x4044f8 112 628 0 628 1 0 0 1
+1 * 628
+3 * 628 0 628
+4 * 628 0 628 1 0 0 1
+4 * 628 628
+1 * 628 628

fn=(182)
0x403dcc 122 628 0 628 1 0 0 1
+1 * 628
+3 * 628
+4 * 628 0 628
+4 * 628 0 628
+4 +4 628 628
+4 * 628 628
+4 * 628
+3 * 628
+3 * 628 0 628
cfn=(184)
calls=628 0x40454c -14 
* * 3768 1256 1884 1 0 0 1
+5 +2 628 628
+1 * 628 628

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2310 429 433 0 1 7 0 1 7 315 36 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3216 676 626 16 5 4 16 5 4 499 58 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 1121 1121 0 1 0 0 1
+6 0 1121
+2 0 1121 0 0 0 0 0 0 0 0 1121 1
+2 0 1121 1121

fn=(38) _int_malloc
0x3877c79a00 0 1256 0 1256 1 0 0 1
+2 0 1256
+3 0 1256 0 1256
+2 0 1256 0 1256
+2 0 1256 0 1256 0 0 1 0 0 1
+2 0 1256
+3 0 1256 0 1256
+1 0 1256 0 1256
+1 0 1256
+4 0 1256
+4 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256
+4 0 1256
+6 0 1256
+3 0 1256
+4 0 1256
+4 0 1256
+4 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256 1256 0 1 1 0 1 1
+7 0 1256 0 0 0 0 0 0 0 0 1256 7
jcnd=1134/1256 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 135 135
+6 0 135
+4 0 135
+2 0 135 0 0 0 0 0 0 0 0 135
+6 0 135
+3 0 135
+4 0 135 135
+1 0 135 135
+1 0 135 135
+2 0 135 135
+2 0 135 135
+2 0 135 135
+2 0 135 135
-14 0 1121
+4 0 1121 1121
+1 0 1121 1121
+1 0 1121 1121
+2 0 1121 1121
+2 0 1121 1121
+2 0 1121 1121
+2 0 1121 1121
+7 0 1151
+7 0 1151 0 0 1 0 0 1 0 0 1151 7
jcnd=248/1151 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 3 0 0 3
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 248 0 0 1 0 0 1
+3 0 248
+4 0 248
+4 0 248 0 0 1 0 0 1 0 0 248
jcnd=248/248 0x3877c7a1a4 0 
* 0 
+30 0 248 248
+6 0 248
+5 0 248 0 0 0 0 0 0 0 0 248 1
jcnd=247/248 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 898 241 189 8 3 0 8 3 0 186 27
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1150 0 0 1 0 0 1
+3 0 1150
+3 0 1150
+3 0 1150
+4 0 1150
+3 0 1150
+4 0 1150 0 1150
+5 0 1150
+3 0 1150 0 1150
+4 0 1150 0 1150
+4 0 1150 0 1150
+5 0 1150
+3 0 1150
+3 0 1150
+3 0 1150
+3 0 1150
+4 0 1150
+4 0 1150 0 0 1 0 0 1
+4 0 1150 0 1150
+4 0 1150
+4 0 1150 0 1150
+5 0 1150 0 1150
+5 0 1150
+3 0 1150
+3 0 1150 0 1150
+5 0 1150
+5 0 1150
+3 0 1150 0 1150
+4 0 1150 0 1150
+4 0 1150
+6 0 1150 0 1150
+4 0 1150 0 1150
+5 0 1150 0 0 1 0 0 1
+3 0 1150
+3 0 1150
+3 0 1150
jump=1150 +87 0 
* 0 
+8 0 900
+3 0 900
+4 0 900
+2 0 900
+2 0 900
+3 0 900
+3 0 900
+3 0 900
+2 0 900
+2 0 900
+5 0 900
+2 0 900 900
+4 0 900
+3 0 900
+4 0 900 0 900
+4 0 900 0 900
+8 0 900
+7 0 900 0 900
+4 0 900 0 900 0 0 1 0 0 1
+4 0 900 0 900
+4 0 900 0 0 0 0 0 0 0 0 900
-38 0 199
+3 0 199
+4 0 199 0 199
+4 0 199 0 199
+8 0 199
+7 0 199 0 199
+4 0 199 0 199
+4 0 199 0 199
+4 0 199 0 0 0 0 0 0 0 0 199
+6 0 2250 2250 0 1 0 0 1
+4 0 2250
+3 0 2250 0 0 0 0 0 0 0 0 2250 92
jcnd=1102/2250 0x3877c79ef0 0 
* 0 
+6 0 1148 1148
+4 0 1148 1148
+4 0 1148
+4 0 1148 0 0 0 0 0 0 0 0 1148
+6 0 1148 1148 0 1 0 0 1
+7 0 1148 0 0 0 0 0 0 0 0 1148
+6 0 1148
+4 0 1148
+7 0 1148 0 0 0 0 0 0 0 0 1148 6
jcnd=239/1148 +11 0 
* 0 
+2 0 909
+3 0 909 0 0 0 0 0 0 0 0 909 62
jcnd=833/909 0x3877c79e28 0 
* 0 
+6 0 1129
+3 0 1129 0 1129
+4 0 1129 0 1129
+5 0 1129 0 0 0 0 0 0 0 0 1129 16
jcnd=30/1129 0x3877c7a090 0 
* 0 
+6 0 1099
+7 0 1099 0 0 0 0 0 0 0 0 1099 107
jcnd=900/1099 0x3877c79c50 0 
* 0 
+6 0 199 0 0 1 0 0 1
+3 0 199
+4 0 199
+4 0 199 0 0 0 0 0 0 0 0 199
+6 0 199
+3 0 199
+4 0 199
+2 0 199
+2 0 199
+3 0 199
+3 0 199
+8 0 199
+3 0 199
+2 0 199
+2 0 199
+4 0 199 199 0 0 2 0 0 2
+4 0 199
+3 0 199 0 0 1 0 0 1 0 0 199 9
jcnd=199/199 0x3877c79e15 0 
* 0 
0x3877c79e15 0 199 0 199
+4 0 199 0 199
+4 0 199
+3 0 199
jump=199 0x3877c79c73 0 
* 0 
+8 0 833 833 0 1 0 0 1
+4 0 833
+3 0 833 0 0 0 0 0 0 0 0 833 335
jcnd=428/833 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 7
jcnd=386/405 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 15 0 0 15
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=12/19 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7
+4 0 7
+3 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7 0 0 1 0 0 1
+4 0 7
+4 0 7
+3 0 7 0 7
cfn=(104)
calls=7 0x3877c77180 0 
* 0 28 14 0 0 0 0 0 0 0 7
-56 0 12
+7 0 12 0 12 1 0 0 1
+4 0 12
+3 0 12
+3 0 12
+3 0 12
+4 0 12
+3 0 12
+4 0 12
+3 0 12
+3 0 12
+4 0 12 0 12
+4 0 12 0 12 0 0 1 0 0 1
+4 0 12
+4 0 12
+3 0 12 0 12
cfn=(104)
calls=12 0x3877c77180 0 
* 0 48 24 0 0 0 0 0 0 0 12
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1102 0 0 1 0 0 1
+7 0 1102
+3 0 1102 0 0 0 0 0 0 0 0 1102 4
jcnd=240/1102 0x3877c7a0b0 0 
* 0 
+6 0 1102 1102 0 1 0 0 1
+4 0 1102
+3 0 1102
+3 0 1102
+2 0 1102
+4 0 1102
+3 0 1102
+3 0 1102
+2 0 1102
+2 0 1102
+2 0 1102
+2 0 1102 1102 0 0 1 0 0 1
+8 0 1102
+5 0 1102
+5 0 1102
+2 0 1102 0 0 0 0 0 0 0 0 1102
-2 0 548
+2 0 548 0 0 0 0 0 0 0 0 548
+2 0 1650
+2 0 1650 0 0 0 0 0 0 0 0 1650 38
jcnd=890/1650 +64 0 
* 0 
+2 0 760
+8 0 760
+3 0 760
+3 0 760 0 0 0 0 0 0 0 0 760 1
jcnd=1/760 0x3877c79fc0 0 
* 0 
-6 0 907
+3 0 907
+3 0 907 0 0 0 0 0 0 0 0 907 11
jcnd=483/907 0x3877c79fc0 0 
* 0 
+2 0 1183
+2 0 1183 1183
+8 0 1183
+2 0 1183 0 0 0 0 0 0 0 0 1183 27
jcnd=907/1183 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
+2 0 276
+2 0 276
+4 0 276
+2 0 276
+2 0 276 0 0 0 0 0 0 0 0 276 7
jcnd=212/276 -8 0 
* 0 
-8 0 8996
+4 0 8996
+2 0 8996
+2 0 8996 0 0 0 0 0 0 0 0 8996 616
jcnd=8008/8996 -8 0 
* 0 
-2 0 890 0 0 1 0 0 1
+2 0 890 0 0 0 0 0 0 0 0 890 32
jcnd=776/890 -8 0 
* 0 
+2 0 1166 1166 0 0 15 0 0 15
+4 0 1166 0 0 1 0 0 1
+3 0 1166 0 0 0 0 0 0 0 0 1166 519
jcnd=618/1166 0x3877c7a1cf 0 
* 0 
+6 0 548
+2 0 548
+4 0 548
+2 0 548
+2 0 548
+2 0 548 0 548
+8 0 548
jump=548 0x3877c79f30 0 
* 0 
+37 0 484 484 0 1 0 0 1
+5 0 484 484
+4 0 484
+4 0 484 484
+5 0 484 0 0 0 0 0 0 0 0 484
jcnd=484/484 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 30 0 0 1 0 0 1
+7 0 30 0 30
+6 0 30
+3 0 30 0 0 0 0 0 0 0 0 30
jcnd=30/30 0x3877c79ace 0 
* 0 
+16 0 240 240
+4 0 240
+4 0 240
+2 0 240
+5 0 240 240 0 1 0 0 1
+4 0 240
+3 0 240 0 0 0 0 0 0 0 0 240 8
jcnd=192/240 0x3877c79f00 0 
* 0 
+6 0 48 48
+4 0 48 0 0 0 0 0 0 0 0 48
jcnd=48/48 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 248 0 0 1 0 0 1
+3 0 248 0 248
+4 0 248
jump=248 0x3877c79b99 0 
* 0 
+36 0 618 618 0 1 2 0 1 2
+4 0 618 618 0 0 1 0 0 1
+4 0 618
+3 0 618 618
+4 0 618
+4 0 618
+3 0 618
+3 0 618 618
+4 0 618 0 0 0 0 0 0 0 0 618
+6 0 618 618
+4 0 618 0 0 0 0 0 0 0 0 618
+6 0 618 618 0 1 0 0 1
+8 0 618 0 618
+4 0 618 0 618
+4 0 618 0 0 0 0 0 0 0 0 618 5
jcnd=418/618 +38 0 
* 0 
+2 0 200 200 0 0 1 0 0 1
+4 0 200
+3 0 200 0 0 0 0 0 0 0 0 200
+2 0 200 200
+5 0 200 0 0 0 0 0 0 0 0 200
+6 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200 8
jcnd=8/200 0x3877c7a2e3 0 
* 0 
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 8
jcnd=20/418 0x3877c7a2e3 0 
* 0 
+6 0 590 590
+4 0 590 590 0 1 0 0 1
+4 0 590 0 0 0 0 0 0 0 0 590
+6 0 590
+4 0 590
+7 0 590 0 590 0 0 8 0 0 8
+4 0 590 0 590
+4 0 590 0 590
+4 0 590 0 590
+4 0 590 0 0 0 0 0 0 0 0 590 4
jcnd=124/590 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 124
+7 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +18 0 
* 0 
+2 0 7 0 7
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7 0 0 1 0 0 1
+4 0 7
jump=7 +71 0 
* 0 
-46 0 583 0 0 1 0 0 1
+7 0 583 0 583 0 0 1 0 0 1
+4 0 583
+3 0 583
+3 0 583
+4 0 583
+3 0 583
+4 0 583
+3 0 583
+3 0 583
+4 0 583 0 583
+4 0 583 0 583
+4 0 583
jump=583 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 28
+7 0 28 0 28
+6 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
jcnd=28/28 +7 0 
* 0 
+7 0 618
+4 0 618 0 0 1 0 0 1
+3 0 618
+3 0 618 0 618
cfn=(104)
calls=618 0x3877c77180 0 
* 0 2472 1236 0 1 0 0 1 0 0 618
+5 0 618
+3 0 618
jump=618 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 484 0 0 1 0 0 1
+7 0 484
+2 0 484
+4 0 484
+3 0 484
+3 0 484 0 484
+5 0 484
+3 0 484
+4 0 484
+3 0 484 0 0 1 0 0 1
+4 0 484
+4 0 484
+3 0 484
+4 0 484 0 484
+4 0 484 0 484 0 0 19 0 0 19
+4 0 484
+3 0 484
+3 0 484 0 484
cfn=(104)
calls=484 0x3877c77180 0 
* 0 1936 968 0 0 0 0 0 0 0 484 1
+5 0 484
+3 0 484
jump=484 0x3877c79ae3 0 
* 0 

fn=(36) malloc
0x3877c7aa50 0 1256 0 1256 1 0 0 1
+5 0 1256 0 1256
+5 0 1256
+3 0 1256 0 1256
+5 0 1256
+4 0 1256 1256 0 0 1 0 0 1
+7 0 1256 1256 0 0 1 0 0 1
+3 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256 1256 0 0 1 0 0 1
+7 0 1256 1256 0 1 1 0 1 1
+4 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
+2 0 1256 1256 0 0 1 0 0 1
+3 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 +97 0 
* 0 
+18 0 1256
+3 0 1256
+3 0 1256 0 1256
cfn=(38)
calls=1256 0x3877c79a00 0 
* 0 284901 34508 40538 42 32 51 42 32 51 44110 2000
+5 0 1256
+3 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
+2 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
+2 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256 7
+2 0 1256 1256
+7 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 +13 0 
* 0 
+13 0 1256 0 1256
+2 0 1256 0 0 0 0 0 0 0 0 1256 12
+6 0 1256
+3 0 1256 1256
+4 0 1256 1256
+5 0 1256 1256
+5 0 1256
+4 0 1256 1256
+1 0 1256 0 0 1 0 0 1
+5 0 1256 1256 0 0 1 0 0 1
+7 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 +14 0 
* 0 
+14 0 1256 0 1256 1 0 0 1
+3 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256
jump=1256 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1256 0 1256 1 0 0 1
+2 0 1256
+3 0 1256
+3 0 1256 0 1256
+2 0 1256
+3 0 1256 0 1256
+1 0 1256
+3 0 1256 0 1256
+1 0 1256
+3 0 1256
+4 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256
+4 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256 7
jcnd=10/1256 0x3877c838d1 0 
* 0 
+2 0 1246
+3 0 1246
+3 0 1246
+3 0 1246
+3 0 1246
+3 0 1246 0 0 0 0 0 0 0 0 1246
jcnd=1246/1246 +41 0 
* 0 
+41 0 1246 0 0 1 0 0 1
+3 0 1246 0 0 0 0 0 0 0 0 1246
jcnd=1246/1246 0x3877c839c0 0 
* 0 
+24 0 1246
+3 0 1246
+4 0 1246
+3 0 1246
+3 0 1246
+3 0 1246
+3 0 1246
+3 0 1246 0 0 0 0 0 0 0 0 1246 620
jcnd=630/1246 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 626
+10 0 626 626 0 0 1 0 0 1
+3 0 626
+4 0 626 0 626
+3 0 626
+4 0 626
+4 0 626 0 0 0 0 0 0 0 0 626
jcnd=626/626 -18 0 
* 0 
-18 0 1934 1934
+3 0 1934
+4 0 1934 0 1934
+3 0 1934
+4 0 1934
+4 0 1934 0 0 0 0 0 0 0 0 1934 11
jcnd=1308/1934 -18 0 
* 0 
+2 0 1256
+4 0 1256
+3 0 1256 1256
+1 0 1256 1256
+1 0 1256 1256
+2 0 1256 1256 0 1 0 0 1
+2 0 1256 1256
0x3877c839c0 0 1246 0 0 1 0 0 1
+3 0 1246
+3 0 1246
+3 0 1246
+4 0 1246 0 1246 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1246 0x3877c89b20 0 
* 0 268850 99712 97220 6 1 58 6 1 58 12860 776 1246 154
+5 0 1246
jump=1246 0x3877c838be 0 
* 0 

fn=(168) free
0x3877c7b8b0 0 1256 1256 0 1 1 0 1 1
+7 0 1256 1256 0 0 1 0 0 1
+3 0 1256
+3 0 1256 0 0 1 0 0 1 0 0 1256
+6 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256 1256
+4 0 1256
+4 0 1256
+2 0 1256 0 0 0 0 0 0 0 0 1256 2
+2 0 1256
+2 0 1256
+7 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 +14 0 
* 0 
+14 0 1256
+2 0 1256
cfn=(170) _int_free
calls=1256 0x3877c78650 0 
* 0 120635 31815 17957 19 3 0 19 3 0 29121 580

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=19/20 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
-29 0 19
+3 0 19 0 19
+4 0 19 0 19
+4 0 19
+4 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19
+3 0 19 0 0 0 0 0 0 0 0 19 7
jcnd=7/19 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 3 0 0 3
+6 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1256 0 1256 1 0 0 1
+2 0 1256 0 1256
+2 0 1256 0 1256
+2 0 1256
+3 0 1256 0 1256
+2 0 1256 0 1256
+1 0 1256 0 1256
+1 0 1256
+3 0 1256
+4 0 1256 1256
+4 0 1256 0 1256
+4 0 1256
+3 0 1256
+4 0 1256
+3 0 1256
+3 0 1256
+3 0 1256 0 0 1 0 0 1 0 0 1256
+6 0 1256
+4 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256
+4 0 1256 0 0 0 0 0 0 0 0 1256
+6 0 1256 1256
+7 0 1256 0 0 0 0 0 0 0 0 1256 4
jcnd=1132/1256 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1132
+2 0 1132 0 0 0 0 0 0 0 0 1132
+6 0 1132 1132 0 1 0 0 1
+4 0 1132
+3 0 1132
+2 0 1132 0 0 0 0 0 0 0 0 1132
jcnd=1132/1132 0x3877c78a40 0 
* 0 
+6 0 1132 1132
+4 0 1132
+3 0 1132 0 0 0 0 0 0 0 0 1132
+6 0 1132 1132
+5 0 1132
+4 0 1132 0 0 0 0 0 0 0 0 1132
jcnd=1132/1132 0x3877c7907c 0 
* 0 
+6 0 1132 1132
+5 0 1132
+4 0 1132 0 0 0 0 0 0 0 0 1132
+6 0 1132
+4 0 1132 0 0 1 0 0 1 0 0 1132
+6 0 1132
+4 0 1132 1132
+7 0 1132 0 0 0 0 0 0 0 0 1132
+6 0 1132 1132
+6 0 1132
+2 0 1132 0 0 0 0 0 0 0 0 1132
+6 0 1132 1132
+4 0 1132 0 0 0 0 0 0 0 0 1132 5
jcnd=1128/1132 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1132 1132 0 1 0 0 1
+4 0 1132 0 0 0 0 0 0 0 0 1132 430
jcnd=482/1132 0x3877c78bf0 0 
* 0 
+6 0 650 650 0 0 1 0 0 1
+6 0 650 0 0 1 0 0 1 0 0 650 64
jcnd=61/650 0x3877c78a78 0 
* 0 
+6 0 589 589
+5 0 589 589
+5 0 589 589
+4 0 589 0 0 0 0 0 0 0 0 589
+6 0 589 589
+4 0 589 0 0 0 0 0 0 0 0 589
+6 0 589 589
+9 0 589 0 589
+4 0 589 0 589
+4 0 589 0 0 0 0 0 0 0 0 589 4
jcnd=581/589 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 589
+3 0 589
+4 0 589 589
+4 0 589 589
+4 0 589 0 0 0 0 0 0 0 0 589
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 650
+7 0 650 0 650
+4 0 650 0 650
+4 0 650 0 0 0 0 0 0 0 0 650 69
jcnd=441/650 +18 0 
* 0 
+2 0 209 0 209
+8 0 209 0 209
+8 0 209 0 209
+4 0 209
+3 0 209 0 209 1 0 0 1
+4 0 209
+4 0 209 0 209
+4 0 209 0 209
+4 0 209
+7 0 209 0 0 0 0 0 0 0 0 209
jcnd=209/209 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 482
+7 0 482 0 0 0 0 0 0 0 0 482
jcnd=482/482 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1132 0 0 1 0 0 1
+5 0 1132 1132
+4 0 1132 1132
+7 0 1132 0 0 0 0 0 0 0 0 1132
jcnd=1132/1132 +16 0 
* 0 
+16 0 1132 0 1132
+5 0 1132 0 0 0 0 0 0 0 0 1132
+6 0 1132
+3 0 1132
jump=1132 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1132 1132 0 1 0 0 1
+4 0 1132
+2 0 1132 0 0 0 0 0 0 0 0 1132
+6 0 1132 1132
+7 0 1132 0 0 0 0 0 0 0 0 1132
jcnd=1132/1132 +15 0 
* 0 
+15 0 1132 0 1132 1 0 0 1
+4 0 1132 0 0 0 0 0 0 0 0 1132 2
+6 0 1132
+4 0 1132 1132
+1 0 1132 1132
+1 0 1132 1132
+2 0 1132 1132
+2 0 1132 1132
+2 0 1132 1132
+2 0 1132 1132
0x3877c78bf0 0 482 0 0 1 0 0 1
+3 0 482 0 482
+4 0 482
+3 0 482
+4 0 482 0 482 1 0 0 1
+4 0 482
jump=482 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1132 1132 0 1 1 0 1 1
+4 0 1132 0 0 1 0 0 1
+7 0 1132
+4 0 1132
+3 0 1132
+3 0 1132 0 0 0 0 0 0 0 0 1132
jcnd=1132/1132 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1246 0 0 1 0 0 1
+7 0 1246
+3 0 1246
+3 0 1246 1246 0 0 1 0 0 1
+4 0 1246
+4 0 1246 0 0 0 0 0 0 0 0 0 0 1246 154
jump=152 0x3877c89be8 0 
* 0 
jump=162 0x3877c89bd0 0 
* 0 
jump=152 0x3877c89bb8 0 
* 0 
jump=152 +11 0 
* 0 
jump=152 0x3877c89c48 0 
* 0 
jump=154 0x3877c89c30 0 
* 0 
jump=160 0x3877c89c18 0 
* 0 
jump=162 0x3877c89c00 0 
* 0 
+11 0 152 152
+3 0 152
+4 0 152
+4 0 152 152
+4 0 152
+4 0 152 0 152
+4 0 152
+9 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
+4 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
jcnd=8/152 0x3877c89c60 0 
* 0 
-40 0 11918 11918
+4 0 11918 0 11918 0 0 19 0 0 19
+4 0 11918 11918
+4 0 11918 0 11918 0 0 15 0 0 15
+4 0 11918 11918
+4 0 11918 0 11918 0 0 1 0 0 1
+4 0 11918 11918
+4 0 11918 0 11918 0 0 3 0 0 3
+4 0 11918
+4 0 11918
+4 0 11918 0 0 0 0 0 0 0 0 11918 772
jcnd=1210/11918 0x3877c89c60 0 
* 0 
-32 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154
+4 0 154
+4 0 154 0 0 0 0 0 0 0 0 154
jcnd=10/154 0x3877c89c60 0 
* 0 
-24 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
jcnd=8/160 0x3877c89c60 0 
* 0 
-16 0 162 162 0 1 0 0 1
+4 0 162 0 162
+4 0 162 0 0 1 0 0 1
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162 4
jcnd=10/162 0x3877c89c60 0 
* 0 
+6 0 11300
+4 0 11300 11300
+3 0 11300 0 11300 0 0 4 0 0 4
+3 0 11300 11300
+4 0 11300 0 11300
+4 0 11300 11300
+4 0 11300 0 11300 0 0 14 0 0 14
+4 0 11300 11300
+4 0 11300 0 11300
+4 0 11300
jump=11300 -80 0 
* 0 
-30 0 152 152
+3 0 152 0 152
+3 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152 0 0 2 0 0 2
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
-24 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
jump=162 -80 0 
* 0 
-16 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
+8 0 152 152
+3 0 152
+4 0 152 0 0 1 0 0 1
+4 0 152
+4 0 152
jump=152 -39 0 
* 0 
+9 0 162
+3 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+3 0 162
+4 0 162
jump=162 -72 0 
* 0 
+8 0 152
+4 0 152 152
+3 0 152 0 0 0 0 0 0 0 0 152
+2 0 152
+4 0 152
jump=152 -99 0 
* 0 
+11 0 162 162 0 1 0 0 1
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b78 0 
* 0 
+9 0 160 160
+3 0 160
+4 0 160
+4 0 160
+4 0 160
jump=160 0x3877c89b70 0 
* 0 
+9 0 154 154
+3 0 154
+4 0 154
+4 0 154
+4 0 154
jump=154 0x3877c89b68 0 
* 0 
+9 0 152 152
+3 0 152
+4 0 152
+4 0 152
+4 0 152
jump=152 0x3877c89b60 0 
* 0 
+9 0 1246 0 1246 1 0 0 1
+3 0 1246 1246

ob=(5)
fl=(8)
fn=(164)
0x387e4bb2f0 0 1256 0 0 1 0 0 1
+3 0 1256 0 0 0 0 0 0 0 0 1256
+2 0 1256
cob=(2)
cfi=(9)
cfn=(168)
calls=1256 0x3877c7b8b0 0 
* 0 139475 35583 17957 21 5 0 21 5 0 34145 582
* 0 1256 1256 0 1 1 0 1 1 0 0 0 1256

fn=(32)
0x387e4bd0b0 0 1256 0 1256 1 0 0 1
+1 0 1256
+5 0 1256
+3 0 1256 0 1256
+1 0 1256
+4 0 1256 0 0 1 0 0 1
+3 0 1256
+4 0 1256
+3 0 1256 0 1256 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36)
calls=1256 0x3877c7aa50 0 
* 0 337653 48324 48074 46 38 51 46 38 51 56670 2019
* 0 1256 1256 0 1 1 0 1 1 0 0 0 1256
+5 0 1256
+3 0 1256 0 0 0 0 0 0 0 0 1256
jcnd=1256/1256 +96 0 
* 0 
+96 0 1256 0 0 1 0 0 1
+4 0 1256 1256
+1 0 1256 1256
+1 0 1256 1256

totals: 9166368 3741036 2163875 238 95 137 238 95 137 268774 4969 7526 154
