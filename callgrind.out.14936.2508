version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2508


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2961389574 - 2962470858
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1284 0 0 1 0 0 1
+3 0 1284 0 0 0 0 0 0 0 0 1284
+2 0 1284
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1284 0x3877c7b8b0 0 
* 0 143941 36843 18825 21 6 0 21 6 0 35265 539
* 0 1284 1284 0 1 1 0 1 1 0 0 0 1284

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1284 0 1284 1 0 0 1
+1 0 1284
+5 0 1284
+3 0 1284 0 1284
+1 0 1284
+4 0 1284 0 0 1 0 0 1
+3 0 1284
+4 0 1284
+3 0 1284 0 1284 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1284 0x3877c7aa50 0 
* 0 346672 50195 50188 49 38 50 49 38 50 58089 2057
* 0 1284 1284 0 1 1 0 1 1 0 0 0 1284
+5 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284
jcnd=1284/1284 +96 0 
* 0 
+96 0 1284 0 0 1 0 0 1
+4 0 1284 1284
+1 0 1284 1284
+1 0 1284 1284

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=634 0x404a28 -35 
* * 3804 1268 1902 1 0 1 1 0 1
+5 * 634 634
+1 * 634 634

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 634
+4 * 634
+3 * 634 0 634
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=634 0x4044cc -35 
* * 3170 1268 1268
+5 * 634 634
+1 * 634 634

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634 1 0 0 1
+4 +1 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=634 0x4049d4 -35 
* * 3804 1268 1902 1 0 0 1
+5 * 634 634
+1 * 634 634

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 634
+4 * 634
+3 * 634 0 634
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=634 0x404520 -35 
* * 3170 1268 1268
+5 * 634 634
+1 * 634 634

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 317 0 317
+1 * 317
+3 * 317
+4 * 317 0 317
+4 * 317 0 317
+4 * 317 0 317
+4 +1 317 317
+4 * 317 317
+4 * 317 317
+4 * 317
+3 * 317
+3 * 317 0 317
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=317 0x403df2 -87 
* * 7608 2536 2853 0 21 3 0 21 3 317 2
+5 * 317 317
+1 * 317 317

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 634 0 634 1 0 0 1
+1 * 634
+3 * 634 0 634
+4 * 634 634
+4 * 634 634
+1 * 634 634

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 317 0 317
+1 * 317
+3 * 317
+4 * 317 0 317
+4 * 317 0 317
+4 * 317 0 317
+4 +1 317 317
+4 * 317 317
+4 * 317 317
+4 * 317
+3 * 317
+3 * 317 0 317
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=317 0x40406a -87 
* * 7608 2536 2853 0 20 12 0 20 12 317
+5 * 317 317
+1 * 317 317

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 634 0 634
+1 * 634
+3 * 634 0 634
+4 * 634 634
+4 * 634 634
+1 * 634 634

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 714 0 714
+1 * 714
+3 * 714 0 714
+4 +1 714 714
+4 * 714 714
+1 * 714 714

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1268 0 1268 1 0 0 1
+1 * 1268
+3 * 1268 0 1268
+4 +1 1268 1268 0 1 0 0 1
+4 * 1268 1268
+1 * 1268 1268

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 714 0 714
+1 * 714
+3 * 714 0 714 0 0 1 0 0 1
+4 +1 714 714
+4 * 714 714
+1 * 714 714

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1268 0 1268 1 0 0 1
+1 * 1268
+3 * 1268
+4 * 1268 0 1268
+4 +1 1268
+4 * 1268
+3 * 1268 0 1268
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1268 0x404ffe 790 
* * 7608 3804 2536 1 0 0 1
+5 * 1268 1268
+3 * 1268 1268
+1 * 1268 1268

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1268 0 1268 1 0 0 1
+1 * 1268
+3 * 1268 0 1268
+4 +1 1268 1268
+4 * 1268 1268
+1 * 1268 1268

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1268 0 1268 1 0 0 1
+1 * 1268
+3 * 1268
+4 * 1268 0 1268
+4 +1 1268
+4 * 1268
+3 * 1268 0 1268 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1268 0x40500c 790 
* * 7608 3804 2536 1 0 0 1
+5 * 1268 1268
+3 * 1268 1268
+1 * 1268 1268

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 634 0 634
+1 * 634
+3 * 634 0 634
+4 * 634 0 634
+4 * 634 634
+4 * 634 634
+1 * 634 634

fl=(5)
fn=(102)
0x4048de 113 658 0 658 1 0 0 1
+1 * 658
+3 * 658 0 658
+4 +1 658
+10 * 658 658
+1 * 658 658

fn=(266)
0x40406a 129 317 0 317
+1 * 317
+3 * 317
+4 * 317 0 317
+4 * 317 0 317
+4 * 317 0 317
+4 +1 317 317
+4 * 317
+3 * 317
+5 * 317 0 317
cfi=(16)
cfn=(226)
calls=317 0x402d61 -20 
* * 2219 951 951
+5 * 317
+3 * 317 0 0 0 0 0 0 0 0 317
+2 * 317 317
+4 * 317 317 0 0 20 0 0 20
+2 * 317 0 317 0 0 12 0 0 12
+2 * 317 317
+1 * 317 317

fn=(28)
0x404992 113 658 0 658 1 0 0 1
+1 * 658
+3 * 658 0 658
+4 +1 658
+10 * 658 658
+1 * 658 658

fn=(176)
0x4044cc 86 634 0 634
+1 * 634
+3 * 634 0 634
+4 * 634 634
+1 * 634 634

fn=(224)
0x403df2 129 317 0 317
+1 * 317
+3 * 317
+4 * 317 0 317
+4 * 317 0 317
+4 * 317 0 317
+4 +1 317 317
+4 * 317
+3 * 317
+5 * 317 0 317
cfi=(16)
cfn=(226)
calls=317 0x402d61 -20 
* * 2219 951 951
+5 * 317
+3 * 317 0 0 0 0 0 0 0 0 317 2
+2 * 317 317
+4 * 317 317 0 0 21 0 0 21
+2 * 317 0 317 0 0 3 0 0 3
+2 * 317 317
+1 * 317 317

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 642 0 642
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 * 642 0 642
+4 +1 642 642
+4 * 642
+3 * 642 0 642
cob=(5)
cfi=(8)
cfn=(164)
calls=642 0x387e4bb2f0 0 
* * 70726 17639 8303 23 6 0 23 6 0 17190 472 642
* * 642 642 0 1 1 0 1 1 0 0 0 642
+5 * 642 642
+1 * 642 642

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 642 0 642
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 * 642 0 642
+4 +1 642 642
+4 * 642
+3 * 642 0 642
cob=(5)
cfi=(8)
cfn=(164)
calls=642 0x387e4bb2f0 0 
* * 78351 20488 10522 0 1 0 0 1 0 19359 67 642
* * 642 642 0 0 0 0 0 0 0 0 0 642
+5 * 642 642
+1 * 642 642

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 642 0 642 1 0 0 1
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 * 642 0 642
+4 +2 642 642
+4 * 642
+3 * 642 0 642
cfn=(102)
calls=642 0x4048de +12 
* * 3852 1284 1284 1 0 0 1
+5 * 642 642
+4 * 642 0 0 1 0 0 1
+3 * 642
+2 * 642 0 0 0 0 0 0 0 0 642
jcnd=642/642 +7 +3 
* * 
+7 +3 642 642
+4 * 642
+4 * 642
+3 * 642 0 642
cob=(5)
cfi=(8)
cfn=(32)
calls=642 0x387e4bd0b0 0 
* * 184794 27161 25319 33 13 36 33 13 36 30082 1070 642
* * 642 642 0 0 0 0 0 0 0 0 0 642
+5 +1 642 642
+1 * 642 642

fn=(18)
0x404a28 81 634 0 634 1 0 0 1
+1 * 634
+3 * 634 0 634 0 0 1 0 0 1
+4 * 634 0 634
+4 * 634 634
+1 * 634 634

fn=(92)
0x4049d4 81 634 0 634 1 0 0 1
+1 * 634
+3 * 634 0 634
+4 * 634 0 634
+4 * 634 634
+1 * 634 634

fn=(196)
0x404520 86 634 0 634
+1 * 634
+3 * 634 0 634
+4 * 634 634
+1 * 634 634

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 642 0 642 1 0 0 1
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 * 642 0 642 1 0 0 1
+4 +2 642 642
+4 * 642
+3 * 642 0 642
cfn=(28)
calls=642 0x404992 +12 
* * 3852 1284 1284 1 0 0 1
+5 * 642 642
+4 * 642
+3 * 642
+2 * 642 0 0 0 0 0 0 0 0 642
jcnd=642/642 +7 +3 
* * 
+7 +3 642 642
+4 * 642
+4 * 642
+3 * 642 0 642
cob=(5)
cfi=(8)
cfn=(32)
calls=642 0x387e4bd0b0 0 
* * 182422 28170 28721 20 26 15 20 26 15 29291 987 642
* * 642 642 0 1 1 0 1 1 0 0 0 642
+5 +1 642 642
+1 * 642 642

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=634 0x404484 107 
* * 312470 103834 100034 25 3 4 25 3 4 11764 731 1264 158
+5 * 634 634
+1 * 634 634

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634 0 1 0 0 1
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=634 0x404a36 450 
* * 294718 97494 93694 24 3 4 24 3 4 11764 731 1264 158
+5 * 634 634
+1 * 634 634

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=634 0x40439c 107 
* * 312470 103834 100034 7 1 40 7 1 40 11764 715 1264
+5 * 634 634
+1 * 634 634

fn=(116)
0x40439c 107 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +10 634 634
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=634 0x4047d7 -26 
* * 303594 100664 96864 7 1 40 7 1 40 11764 715 1264
+5 +1 634 634
+1 * 634 634

fn=(118)
0x4047d7 91 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=634 0x4049e2 450 
* * 294718 97494 93694 7 1 40 7 1 40 11764 715 1264
+5 * 634 634
+1 * 634 634

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +10 634 634
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(52)
calls=634 0x404829 -26 
* * 303594 100664 96864 25 3 4 25 3 4 11764 731 1264 158
+5 +1 634 634
+1 * 634 634

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2568 0 2568 1 0 0 1
+1 * 2568
+3 * 2568 0 2568 0 0 1 0 0 1
+4 +1 2568 2568
+4 * 2568 2568 0 1 1 0 1 1
+4 * 2568
+3 * 2568 2568
+4 * 2568 2568
+3 * 2568
+3 * 2568
+3 * 2568
+4 * 2568 2568
+1 * 2568 2568

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=634 0x404236 -14 
* * 206401 36044 35955 26 13 8 26 13 8 30098 930 1268
+5 * 634 634
+4 * 634 0 634
+3 +1 634 634
+4 * 634 634 0 1 0 0 1
+3 * 634 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+3 * 634 634
+4 * 634
+4 * 634
+3 * 634 634
+4 * 634 0 634
+4 +1 634 634
+1 * 634 634

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634
+4 * 634 634 0 1 0 0 1
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=634 0x403fbe -14 
* * 208546 34835 32404 26 8 31 26 8 31 30863 1020 1268
+5 * 634 634
+4 * 634 0 634
+3 +1 634 634
+4 * 634 634
+3 * 634 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+3 * 634 634
+4 * 634
+4 * 634
+3 * 634 634
+4 * 634 0 634
+4 +1 634 634
+1 * 634 634

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 317 0 317
+1 * 317
+3 * 317 0 0 1 0 0 1
+4 * 317 0 317
+4 * 317 0 317
+4 +2 317 317
+4 * 317 317
+4 * 317 317
+4 * 317 317
+4 * 317
+3 * 317 0 0 0 0 0 0 0 0 317
jcnd=8/317 +51 +10 
* * 
+2 +3 309 309
+4 * 309 309
+4 * 309 309
+4 -1 309 309
+4 * 309
+3 * 309
+3 * 309 0 309
cfi=(3)
cfn=(264)
calls=309 0x4036b1 215 
* * 11742 4017 4326 0 20 8 0 20 8 309
+5 +2 309 309
+4 * 309 309
+4 * 309
+4 * 309 309
+4 * 309 0 309
+4 * 309
jump=309 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12446 3724 3245 18 14 29 18 14 29 836 78 47
+5 +2 317 317
+1 * 317 317

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1292 0 1292 1 0 0 1
+1 * 1292
+3 * 1292 0 1292 1 0 0 1
+4 +1 1292 1292
+4 * 1292 1292
+1 * 1292 1292

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+3 * 634 0 634
+4 * 634
+4 * 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=634 0x404380 726 
* * 6340 3170 2536
+5 * 634 634
+4 * 634 634
+1 * 634 634

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 634 0 634
+1 * 634
+3 * 634 0 634
+1 * 634
+4 * 634 0 634 1 0 0 1
+4 +2 634 634
+4 * 634
+3 * 634 0 634
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=634 0x40325e 113 
* * 3804 1902 1268
+5 * 634
+3 * 634 634
+4 * 634 634
+4 * 634 634
+4 * 634 634
+3 -1 634
+3 * 634
+3 * 634 0 634
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=634 0x40326c 148 
* * 19654 6340 7608 4 0 0 4
+5 +1 634 634
+4 * 634
+3 * 634 0 634
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=634 0x4031ec 159 
* * 119962 35818 22774 27 6 0 27 6 0 17630 466 1268
+5 * 634
jump=634 +28 * 
* * 
+28 * 634 0 0 1 0 0 1
+4 * 634 634
+1 * 634 634
+1 * 634 634

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 642 0 642 1 0 0 1
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 * 642 0 642
+4 +2 642 642
+5 * 642 0 0 0 0 0 0 0 0 642
+2 +1 642 642
+4 * 642 642
+4 * 642 642
+4 * 642
+3 * 642
+3 * 642 0 642
cfi=(5)
cfn=(160)
calls=642 0x4044d6 -65 
* * 78430 20207 11513 24 7 0 24 7 0 17190 472 1284
+5 +1 642 642
+1 * 642 642

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 634 0 634
+1 * 634
+3 * 634 0 634
+1 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=634 0x4043ca -45 
* * 22824 8242 8876 4 0 4 4 0 4
+5 +1 634 634 0 1 0 0 1
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(20)
calls=634 0x404412 +43 
* * 222251 43652 40393 27 13 8 27 13 8 30098 930 1268
+5 * 634
jump=634 +28 * 
* * 
+28 * 634
+4 * 634 634
+1 * 634 634
+1 * 634 634

fn=(14)
0x4043ca 90 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634 0 0 1 0 0 1
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(4)
cfn=(16)
calls=634 0x404804 +24 
* * 11412 3804 4438 2 0 1 2 0 1
+5 * 634 634
+4 * 634 0 634 0 0 2 0 0 2
+7 * 634 634
+4 * 634 0 634 1 0 0 1
+8 * 634 634
+4 * 634 0 634
+8 +1 634 634
+1 * 634 634

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 634 0 634 1 0 0 1
+1 * 634
+3 * 634 0 634
+2 * 634 0 634
+2 * 634 0 634
+1 * 634 0 0 1 0 0 1
+4 * 634 0 634
+4 * 634 0 634
+4 +2 634 634
+4 * 634
+3 * 634 0 634
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=634 0x4039fc 117 
* * 3804 1902 1268 2 0 0 2
+5 * 634
+3 * 634 0 634
cfi=(3)
cfn=(84)
calls=634 0x4039ed -88 
* * 3804 1902 1268
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(2)
calls=634 0x402d74 645 
* * 8242 3804 1268
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634
+3 * 634
+3 * 634 0 634 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=634 0x403a0a 134 
* * 261168 55123 50156 33 8 31 33 8 31 30863 1020 1268
+5 +4 634 634
+4 * 634
+3 * 634 0 634
cfn=(106)
calls=634 0x40325e 113 
* * 3804 1902 1268 1 0 0 1
+5 * 634
+3 * 634 634
+4 * 634 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=634 0x403a98 565 
* * 15850 6340 5072 2 0 0 2
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(112)
calls=634 0x403a68 547 
* * 15850 6340 5072
+5 * 634
+3 * 634
+3 * 634
+3 * 634
+3 * 634 0 634
cfi=(11)
cfn=(114)
calls=634 0x403ac9 -60 
* * 321980 107004 103838 7 1 40 7 1 40 11764 715 1264
+5 -3 634 634
+4 * 634 0 634
+4 * 634
jump=634 +28 +4 
* * 
+28 +4 634
+4 * 634 634
+1 * 634 634
+2 * 634 634
+2 * 634 634
+1 * 634 634

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 642 0 642 1 0 0 1
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 * 642 0 642
+4 +2 642 642
+5 * 642 0 0 0 0 0 0 0 0 642 8
+2 +1 642 642
+4 * 642 642
+4 * 642 642
+4 * 642
+3 * 642
+3 * 642 0 642
cfi=(5)
cfn=(190)
calls=642 0x40452a -65 
* * 86055 23056 13732 0 1 0 0 1 0 19359 67 1284
+5 +1 642 642
+1 * 642 642

fn=(22)
0x404236 167 642 0 642 1 0 0 1
+1 * 642
+3 * 642
+4 * 642 0 642 1 0 0 1
+4 * 642 0 642
+4 0 642 642
+5 0 642 0 0 0 0 0 0 0 0 642
+2 0 642 642
+4 0 642 642
+4 0 642
+5 0 642
+3 0 642
+3 0 642 0 642
fi=(6) ???
cfi=(5)
cfn=(26)
calls=642 0x404730 99 
* 0 199114 33306 33857 24 27 15 24 27 15 29933 987 1284
+5 0 642
fi=(6)
jump=642 +7 0 
* 0 
+7 0 642 642
+1 0 642 642

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+4 * 634 0 634
+4 * 634
+4 * 634 0 0 1 0 0 1
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=634 0x404468 726 
* * 6340 3170 2536 1 0 0 1
+5 * 634 634
+4 * 634 634
+1 * 634 634

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+3 * 634 0 634
+4 * 634
+4 * 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(10)
cfn=(44)
calls=634 0x404468 726 
* * 6340 3170 2536
+5 * 634 634
+4 * 634 634
+1 * 634 634

fn=(86)
0x403a0a 134 634 0 634
+1 * 634
+3 * 634 0 634
+1 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=634 0x4042e2 -45 
* * 22824 8242 8876 5 0 0 5
+5 +1 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634 1 0 0 1
cfn=(94)
calls=634 0x40432a +43 
* * 224396 42443 36842 27 8 31 27 8 31 30863 1020 1268
+5 * 634
jump=634 +28 * 
* * 
+28 * 634
+4 * 634 634
+1 * 634 634
+1 * 634 634

fn=(88)
0x4042e2 90 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634 1 0 0 1
cfi=(4)
cfn=(90)
calls=634 0x4047b2 +24 
* * 11412 3804 4438 3 0 0 3
+5 * 634 634
+4 * 634 0 634
+7 * 634 634
+4 * 634 0 634
+8 * 634 634
+4 * 634 0 634
+8 +1 634 634
+1 * 634 634

fn=(156)
0x4031ec 159 634 0 634 1 0 0 1
+1 * 634
+3 * 634 0 634
+1 * 634
+4 * 634 0 634
+4 +2 634 634
+4 * 634 634 0 1 0 0 1
+4 * 634
+3 * 634 634
+4 * 634 634
+3 * 634
+3 * 634
+3 * 634
+4 * 634
+3 * 634 634
+4 * 634 634
+3 -1 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(158)
calls=634 0x403ce6 +11 
* * 87628 23772 14532 24 6 0 24 6 0 17630 466 1268
+5 +1 634 634
+4 * 634
+3 * 634 0 634
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=634 0x4031b8 -82 
* * 14582 5072 5072 1 0 0 1
+5 * 634
jump=634 +28 * 
* * 
+28 * 634
+4 * 634 634
+1 * 634 634
+1 * 634 634

fn=(172)
0x4031b8 79 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 634
+4 * 634
+3 * 634 0 634
cfi=(4)
cfn=(174)
calls=634 0x403ccc +42 
* * 8876 3170 3170
+5 * 634 634
+1 * 634 634

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1300 0 1300 1 0 0 1
+1 * 1300
+3 * 1300 0 1300
+4 +1 1300 1300
+4 * 1300 1300 0 0 2 0 0 2
+4 * 1300
+3 * 1300 1300
+4 * 1300 1300
+3 * 1300
+3 * 1300
+3 * 1300
+4 * 1300 1300
+1 * 1300 1300

fn=(106)
0x40325e 113 1292 0 1292 1 0 0 1
+1 * 1292
+3 * 1292 0 1292
+4 +1 1292 1292
+4 * 1292 1292
+1 * 1292 1292

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 650 0 650 1 0 0 1
+1 * 650
+3 * 650 0 650 0 0 1 0 0 1
+4 +1 650 650
+4 * 650 650
+1 * 650 650

fn=(82)
0x4039fc 117 650 0 650 1 0 0 1
+1 * 650
+3 * 650 0 650 1 0 0 1
+4 +1 650 650
+4 * 650 650
+1 * 650 650

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 317 0 317
+1 * 317
+3 * 317
+4 * 317 0 317
+4 * 317 0 317
+4 +2 317 317
+4 * 317 317
+4 * 317 317
+4 * 317 317
+4 * 317
+3 * 317 0 0 0 0 0 0 0 0 317 8
jcnd=8/317 +51 +10 
* * 
+2 +3 309 309
+4 * 309 309
+4 * 309 309
+4 -1 309 309
+4 * 309
+3 * 309
+3 * 309 0 309
cfi=(3)
cfn=(222)
calls=309 0x403373 215 
* * 11742 4017 4326 0 20 2 0 20 2 309 2
+5 +2 309 309
+4 * 309 309
+4 * 309
+4 * 309 309
+4 * 309 0 309
+4 * 309
jump=309 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12640 3907 3391 35 7 9 35 7 9 853 62 47
+5 +2 317 317
+1 * 317 317

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 634 0 634 1 0 0 1
+1 * 634
+3 * 634 0 634
+2 * 634 0 634
+2 * 634 0 634
+1 * 634
+4 * 634 0 634 1 0 0 1
+4 * 634 0 634
+4 +2 634 634
+4 * 634
+3 * 634 0 634
cfn=(6)
calls=634 0x403b08 117 
* * 3804 1902 1268 1 0 1 1 0 1
+5 * 634
+3 * 634 0 634
cfi=(3)
cfn=(8)
calls=634 0x403afa -88 
* * 3804 1902 1268 1 0 0 1
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(10)
calls=634 0x402f54 645 
* * 8242 3804 1268 1 1 0 1 1
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634
+3 * 634
+3 * 634 0 634
cfn=(12)
calls=634 0x403b16 134 
* * 259023 56332 53707 32 13 12 32 13 12 30098 930 1268
+5 +4 634 634 0 1 0 0 1
+4 * 634
+3 * 634 0 634
cfn=(40)
calls=634 0x40333c 113 
* * 3804 1902 1268 2 0 0 2
+5 * 634
+3 * 634 634
+4 * 634 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(42)
calls=634 0x403ba4 565 
* * 15850 6340 5072 3 0 0 3
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(46)
calls=634 0x403b74 547 
* * 15850 6340 5072
+5 * 634
+3 * 634
+3 * 634
+3 * 634
+3 * 634 0 634 1 0 0 1
cfi=(11)
cfn=(48)
calls=634 0x403bd5 -60 
* * 321980 107004 103838 26 3 4 26 3 4 11764 731 1264 158
+5 -3 634 634
+4 * 634 0 634
+4 * 634
jump=634 +28 +4 
* * 
+28 +4 634
+4 * 634 634
+1 * 634 634
+2 * 634 634
+2 * 634 634
+1 * 634 634

fn=(108)
0x403a98 565 634 0 634 1 0 0 1
+1 * 634
+3 * 634
+4 * 634 0 634
+4 +1 634 634
+4 * 634 634
+4 * 634 0 634
+4 * 634
+4 * 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfi=(10)
cfn=(110)
calls=634 0x404380 726 
* * 6340 3170 2536 1 0 0 1
+5 * 634 634
+4 * 634 634
+1 * 634 634

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 634 0 634
+1 * 634
+3 * 634 0 634
+1 * 634
+4 * 634 0 634 1 0 0 1
+4 +2 634 634
+4 * 634
+3 * 634 0 634
cfn=(40)
calls=634 0x40333c 113 
* * 3804 1902 1268
+5 * 634
+3 * 634 634
+4 * 634 634
+4 * 634 634
+4 * 634 634
+3 -1 634
+3 * 634
+3 * 634 0 634
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=634 0x40334a 148 
* * 19654 6340 7608 2 0 0 2
+5 +1 634 634
+4 * 634
+3 * 634 0 634
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=634 0x4032ca 159 
* * 127554 38650 24990 3 1 0 3 1 0 19790 58 1268
+5 * 634
jump=634 +28 * 
* * 
+28 * 634 0 0 1 0 0 1
+4 * 634 634
+1 * 634 634
+1 * 634 634

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 642 0 642 1 0 0 1
+1 * 642 0 0 1 0 0 1
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 0 642 642
+5 0 642 0 0 0 0 0 0 0 0 642
+2 0 642 642
+4 0 642 642
+4 0 642
+5 0 642
+3 0 642
+3 0 642 0 642
fi=(6)
cfi=(5)
cfn=(100)
calls=642 0x40461a 99 
* 0 201486 32297 30455 36 13 36 36 13 36 30724 1070 1284
+5 0 642
fi=(6)
jump=642 +7 0 
* 0 
+7 0 642 642
+1 0 642 642

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 152794 0 152794
+1 * 152794
+3 * 152794 0 152794
+4 * 152794 0 152794
+4 +1 152794 152794
+4 * 152794 152794
+3 * 152794 152794
+4 * 152794
+4 * 152794
+3 * 152794 152794
+1 * 152794 152794

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 152794 0 152794
+1 * 152794
+3 * 152794 0 152794 1 0 0 1
+4 * 152794 0 152794
+4 +1 152794 152794
+4 * 152794 152794
+3 * 152794 152794
+4 * 152794
+4 * 152794
+3 * 152794 152794
+1 * 152794 152794

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 634
+4 * 634
+3 * 634 0 634
cfi=(4)
cfn=(194)
calls=634 0x403d7e +42 
* * 8876 3170 3170 1 0 0 1
+5 * 634 634
+1 * 634 634

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 634 0 634 1 0 0 1
+1 * 634
+3 * 634 0 634
+1 * 634
+4 * 634 0 634
+4 +2 634 634
+4 * 634 634
+4 * 634
+3 * 634 634
+4 * 634 634
+3 * 634
+3 * 634
+3 * 634
+4 * 634
+3 * 634 634
+4 * 634 634
+3 -1 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(188)
calls=634 0x403d98 +11 
* * 95220 26604 16748 1 1 0 1 1 0 19790 58 1268
+5 +1 634 634
+4 * 634
+3 * 634 0 634
cfn=(192)
calls=634 0x403296 -82 
* * 14582 5072 5072 1 0 0 1
+5 * 634
jump=634 +28 * 
* * 
+28 * 634
+4 * 634 634
+1 * 634 634
+1 * 634 634

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1268 0 1268 1 0 0 1
+1 * 1268
+3 * 1268
+4 * 1268 0 1268 1 0 0 1
+4 +1 1268 1268
+4 * 1268
+3 * 1268 0 1268
cfi=(13)
cfn=(58)
calls=1268 0x404d8f -77 
* * 7608 3804 2536 1 0 0 1
+5 * 1268 1268
+1 * 1268 1268

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 650 0 650
+1 * 650
+3 * 650
+4 * 650 0 650 1 0 0 1
+4 * 650 0 650
+4 * 650 0 650
+4 +2 650 650
+4 * 650 650
+4 * 650
+3 * 650
+3 * 650
+4 * 650 0 650
+4 +1 650 650
+5 * 650 0 0 0 0 0 0 0 0 650
jcnd=8/650 +33 +2 
* * 
+2 +1 642 642
+4 * 642
+8 * 642 642
+4 * 642 642
+4 * 642
+3 * 642 0 0 1 0 0 1
+3 * 642 0 642 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=642 0x3877c83840 0 
* * 176648 56600 55321 11 2 20 11 2 20 11214 735 637 158
* * 642 642 0 1 1 0 1 1 0 0 0 642
+5 +1 650 650
+4 * 650
+8 * 650 650
+4 * 650
+3 +1 650 650
+1 * 650 650

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 650 0 650
+1 * 650
+3 * 650
+4 * 650 0 650 1 0 0 1
+4 * 650 0 650
+4 * 650 0 650 0 0 1 0 0 1
+4 +2 650 650
+4 * 650 650
+4 * 650
+3 * 650
+3 * 650
+4 * 650 0 650
+4 +1 650 650
+5 * 650 0 0 0 0 0 0 0 0 650
jcnd=8/650 +33 +2 
* * 
+2 +1 642 642
+4 * 642
+8 * 642 642
+4 * 642 642
+4 * 642
+3 * 642
+3 * 642 0 642
cob=(2)
cfi=(9)
cfn=(78)
calls=642 0x3877c83840 0 
* * 176648 56600 55321 0 1 41 0 1 41 11214 721 637
* * 642 642 0 0 0 0 0 0 0 0 0 642
+5 +1 650 650
+4 * 650
+8 * 650 650
+4 * 650
+3 +1 650 650
+1 * 650 650

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634 1 0 0 1
+4 * 634 0 634
+4 * 634 0 634
+4 +8 634 0 634
+4 +3 634 634
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(74)
calls=634 0x404f37 -22 
* * 193278 63258 58824 14 3 3 14 3 3 11764 731 1264 158
+5 +1 634 634
+1 * 634 634

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 634 0 634
+1 * 634
+3 * 634 0 634
+2 * 634 0 634
+1 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +4 634 634
+4 * 634
+3 * 634 0 634
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=634 0x404878 277 
* * 9510 3804 3170 1 0 0 1
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=634 0x404d44 277 
* * 15850 5706 5072 2 0 0 2
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(132)
calls=634 0x404d44 277 
* * 15850 5706 5072
+5 * 634
+3 * 634
+3 * 634
+3 * 634 0 634
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=634 0x404d5e -49 
* * 202788 66428 62628 1 1 40 1 1 40 11764 715 1264
+5 +1 634
+4 * 634 634
+1 * 634 634
+2 * 634 634
+1 * 634 634

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 634 0 634
+1 * 634
+3 * 634 0 634
+1 * 634
+4 * 634 0 634 1 0 0 1
+4 * 634 0 634
+4 * 634 0 634
+4 +10 634 634
+4 * 634
+3 * 634 0 634
cfn=(56)
calls=634 0x404c38 288 
* * 9510 3804 3170 3 0 0 3
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(56)
calls=634 0x404c38 288 
* * 9510 3804 3170
+5 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=634 0x404c52 -36 
* * 261750 86082 82282 20 3 4 20 3 4 11764 731 1264 158
+5 +1 634
+4 * 634 634
+1 * 634 634
+1 * 634 634

fn=(60)
0x404c52 424 634 0 634
+1 * 634
+3 * 634 0 634
+2 * 634 0 634
+1 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +4 634 634
+4 * 634
+3 * 634 0 634
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=634 0x40492d 277 
* * 9510 3804 3170 2 0 0 2
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=634 0x404d9d 277 
* * 15850 5706 5072 2 0 1 2 0 1
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(66)
calls=634 0x404d9d 277 
* * 15850 5706 5072
+5 * 634
+3 * 634
+3 * 634
+3 * 634 0 634
cfn=(72)
calls=634 0x404db7 -49 
* * 202788 66428 62628 15 3 3 15 3 3 11764 731 1264 158
+5 +1 634
+4 * 634 634
+1 * 634 634
+2 * 634 634
+1 * 634 634

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 682 0 682 1 0 0 1
+1 * 682
+3 * 682
+4 * 682 0 682
+4 +1 682 682
+4 * 682
+3 * 682 0 682 1 0 0 1
cfi=(13)
cfn=(64)
calls=682 -33 -66 
* * 4092 2046 1364
+5 * 682 682
+1 * 682 682

fn=(66)
0x404d9d 277 1268 0 1268
+1 * 1268
+3 * 1268
+4 * 1268 0 1268
+4 +1 1268 1268
+4 * 1268
+3 * 1268 0 1268
cfi=(13)
cfn=(68)
calls=1268 0x404f1a -58 
* * 20288 7608 6340 2 0 1 2 0 1
+5 * 1268 1268
+1 * 1268 1268

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 634 0 634
+1 * 634
+3 * 634 0 634
+1 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +10 634 634
+4 * 634
+3 * 634 0 634
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=634 0x404bc6 288 
* * 9510 3804 3170 3 0 0 3
+5 * 634
+3 * 634 634
+4 * 634
+3 * 634 0 634
cfn=(122)
calls=634 0x404bc6 288 
* * 9510 3804 3170
+5 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(126)
calls=634 0x404be0 -36 
* * 261750 86082 82282 4 1 40 4 1 40 11764 715 1264
+5 +1 634
+4 * 634 634
+1 * 634 634
+1 * 634 634

fn=(128)
0x404878 277 682 0 682
+1 * 682
+3 * 682
+4 * 682 0 682 1 0 0 1
+4 +1 682 682
+4 * 682
+3 * 682 0 682
cfi=(13)
cfn=(130)
calls=682 -33 -66 
* * 4092 2046 1364 0 0 1 0 0 1
+5 * 682 682
+1 * 682 682

fn=(132)
0x404d44 277 1268 0 1268
+1 * 1268
+3 * 1268
+4 * 1268 0 1268
+4 +1 1268 1268
+4 * 1268
+3 * 1268 0 1268
cfi=(13)
cfn=(134)
calls=1268 0x404e98 -58 
* * 20288 7608 6340 2 0 0 2
+5 * 1268 1268
+1 * 1268 1268

fn=(138)
0x404d5e 379 634 0 634
+1 * 634
+3 * 634
+4 * 634 0 634
+4 * 634 0 634
+4 * 634 0 634
+4 +8 634 0 634
+4 +3 634 634
+4 * 634 634
+4 * 634 634
+4 * 634
+3 * 634
+3 * 634 0 634
cfn=(140)
calls=634 0x404eb5 -22 
* * 193278 63258 58824 1 1 40 1 1 40 11764 715 1264
+5 +1 634 634
+1 * 634 634

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1268 0 1268 1 0 0 1
+1 * 1268
+3 * 1268
+4 * 1268 0 1268
+4 +1 1268 1268
+4 * 1268
+3 * 1268 0 1268
cfi=(13)
cfn=(124)
calls=1268 0x404d36 -77 
* * 7608 3804 2536 2 0 0 2
+5 * 1268 1268
+1 * 1268 1268

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1268 0 1268 1 0 0 1
+1 * 1268
+3 * 1268 0 1268
+4 +1 1268 1268
+4 * 1268 1268
+1 * 1268 1268

fn=(110)
0x404380 726 1268 0 1268 1 0 0 1
+1 * 1268
+3 * 1268 0 1268
+4 * 1268 0 1268
+4 * 1268 1268
+4 * 1268 1268
+3 * 1268 1268
+4 * 1268 0 1268
+3 * 1268 1268
+1 * 1268 1268

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1268 0 1268 1 0 0 1
+1 * 1268
+3 * 1268 0 1268
+4 +1 1268 1268
+4 * 1268 1268
+1 * 1268 1268

fn=(44)
0x404468 726 1268 0 1268
+1 * 1268
+3 * 1268 0 1268
+4 * 1268 0 1268
+4 * 1268 1268
+4 * 1268 1268
+3 * 1268 1268
+4 * 1268 0 1268 1 0 0 1
+3 * 1268 1268
+1 * 1268 1268

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 642 0 642 1 0 0 1
+1 * 642
+3 * 642 0 642
+4 * 642 0 642 1 0 0 1
+4 * 642 642
+1 * 642 642

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 642 0 642 1 0 0 1
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 +4 642 642
+4 * 642 642
+4 * 642
+3 * 642
+3 * 642 0 642
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=642 0x40454c -14 
* * 3852 1284 1926 1 0 0 1
+5 +2 642 642
+1 * 642 642

fn=(150)
0x40326c 148 642 0 642
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 * 642 0 642
+4 +3 642 642 0 1 0 0 1
+4 * 642 642
+4 * 642
+3 * 642
+3 * 642 0 642
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=642 0x403d1a -29 
* * 11556 3852 4494 3 0 0 3
+5 +1 642 642
+1 * 642 642

fn=(180)
0x40334a 148 642 0 642
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 * 642 0 642
+4 +3 642 642
+4 * 642 642
+4 * 642
+3 * 642
+3 * 642 0 642
cfn=(182)
calls=642 0x403dcc -29 
* * 11556 3852 4494 2 0 0 2
+5 +1 642 642
+1 * 642 642

fn=(152)
0x403d1a 122 642 0 642 1 0 0 1
+1 * 642
+3 * 642
+4 * 642 0 642
+4 * 642 0 642
+4 +4 642 642
+4 * 642 642
+4 * 642
+3 * 642
+3 * 642 0 642
cfn=(154)
calls=642 0x4044f8 -14 
* * 3852 1284 1926 2 0 0 2
+5 +2 642 642
+1 * 642 642

fn=(184)
0x40454c 112 642 0 642 1 0 0 1
+1 * 642
+3 * 642 0 642
+4 * 642 0 642
+4 * 642 642
+1 * 642 642

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2985 472 470 0 14 7 0 14 7 477 57 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3212 672 619 12 5 5 12 5 5 503 50 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 1 0 1 1 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 317 0 317 1 0 0 1
+1 * 317
+3 * 317
+4 * 317 0 317
+4 * 317 0 317
+4 +1 317 317
+4 * 317
+3 * 317 0 317
cfi=(2)
cfn=(2)
calls=317 0x402d74 645 
* * 4121 1902 634
+5 * 317
+3 * 317 0 317
+3 +1 317 317
+6 * 317 0 317
+3 * 317 317
+6 * 317 0 317
+3 +1 317 317
+6 * 317 0 317 1 0 0 1
+3 * 317 317
+6 * 317 0 317
+3 +2 317 0 317
+7 * 317
jump=317 +86 * 
* * 
+2 +1 50720 50720
+3 * 50720
+3 * 50720 50720
+4 * 50720
+3 * 50720
+3 * 50720 0 50720
cfi=(2)
cfn=(144)
calls=50720 0x402d9a 770 
* * 557920 253600 152160
+5 * 50720 50720
+4 * 50720 50720
+5 * 50720
+4 * 50720 0 50720
+5 +1 50720 50720
+3 * 50720
+3 * 50720 50720
+4 * 50720
+3 * 50720
+3 * 50720 0 50720
cfi=(2)
cfn=(146)
calls=50720 0x402dba 770 
* * 557920 253600 152160 1 0 0 1
+5 * 50720 50720
+2 * 50720
+4 * 50720 50720
+5 * 50720
+4 * 50720 0 50720
+5 -2 50720 0 50720
+4 * 50720 50720
+3 * 50720
+3 * 50720 50720
+3 * 50720 0 0 0 0 0 0 0 0 50720 318
jcnd=50403/50720 -93 +1 
* * 
-9 * 317 317 0 1 0 0 1
+3 * 317
+3 * 317 317
+3 * 317 0 0 0 0 0 0 0 0 317
jcnd=317/317 -93 +1 
* * 
+2 +4 317 317
+3 * 317
+3 * 317
+4 * 317 317 0 1 0 0 1
+5 * 317
+4 * 317
+3 * 317 0 317
+5 +1 317 317
+3 * 317
+3 * 317
+4 * 317 317
+5 * 317
+4 * 317
+3 * 317 0 317
+5 +1 317 0 317
+7 * 317
jump=317 0x4016ee * 
* * 
+2 +1 50720 50720
+3 * 50720
+3 * 50720 50720
+4 * 50720
+3 * 50720 0 0 1 0 0 1
+3 * 50720 0 50720
cfi=(2)
cfn=(146)
calls=50720 0x402dba 770 
* * 557920 253600 152160
+5 * 50720 50720
+2 * 50720
+4 * 50720 50720
+5 * 50720 0 50720
+5 +1 50720 50720
+3 * 50720
+3 * 50720 50720
+4 * 50720
+3 * 50720
+3 * 50720 0 50720
cfi=(2)
cfn=(144)
calls=50720 0x402d9a 770 
* * 557920 253600 152160
+5 * 50720 50720
+4 * 50720 50720
+5 * 50720 0 50720
+5 +1 50720 50720
+5 * 50720 50720
+5 * 50720 50720
+5 * 50720
+4 * 50720 0 50720
+5 +1 50720 50720
+5 * 50720 50720
+5 * 50720 50720
+5 * 50720
+4 * 50720 0 50720
+5 -4 50720 0 50720
+4 * 50720 50720
+3 * 50720
+3 * 50720 50720
+3 * 50720 0 0 0 0 0 0 0 0 50720 318
jcnd=50403/50720 0x401672 +1 
* * 
-9 * 317 317 0 1 0 0 1
+3 * 317
+3 * 317 317
+3 * 317 0 0 0 0 0 0 0 0 317
jcnd=317/317 0x401672 +1 
* * 
+6 +6 317 317 0 1 0 0 1
+5 * 317 317
+5 * 317 0 317
+5 +2 317 317
+3 +1 317 0 317
+3 * 317 317
+5 * 317 317
+1 * 317 317

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 317
+7 * 317
+7 * 317
+3 * 317
+3 * 317 0 317
cfi=(2)
cfn=(4)
calls=317 0x4030b2 310 
* * 332220 97216 91191 68 16 16 68 16 16 20949 1017 1266 158
+5 * 317
+7 * 317
+7 * 317
+3 * 317
+3 * 317 0 317
cfi=(2)
cfn=(80)
calls=317 0x402ff4 310 
* * 333590 96628 89441 48 9 69 48 9 69 21389 1070 1266
+5 * 317 0 0 1 0 0 1
+7 * 317
+7 * 317
+3 * 317
+3 * 317 0 317
cfn=(142)
calls=317 0x401585 -52 
* * 5295485 2341045 1222669 8 0 0 8 0 0 102074 636
+5 * 317 0 317
+8 * 317 317
+6 * 317 0 317
+6 * 317
+7 * 317
+3 * 317 0 317
cfi=(2)
cfn=(148)
calls=317 0x402df4 414 
* * 79318 24883 17727 33 6 0 33 6 0 8815 236 634
+5 * 317
+7 * 317
+3 * 317 0 317 1 0 0 1
cfi=(2)
cfn=(178)
calls=317 0x402e74 414 
* * 83114 26299 18835 7 1 0 7 1 0 9895 32 634
+5 +2 317
+7 * 317
+7 * 317
+3 * 317
+3 * 317 0 317
cfi=(2)
cfn=(4)
calls=317 0x4030b2 310 
* * 331837 97186 91080 2 1 1 2 1 1 20913 644 1266
+5 * 317
+7 * 317
+7 * 317
+3 * 317
+3 * 317 0 317
cfi=(2)
cfn=(80)
calls=317 0x402ff4 310 
* * 332612 96565 89279 0 0 2 0 0 2 21238 665 1266
+5 * 317 317
+6 * 317 0 0 1 0 0 1
+7 * 317
+7 * 317 0 317
+6 * 317 317
+8 * 317
+3 * 317
+3 * 317 0 317
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=317 0x401719 -33 
* * 2453263 1021374 562675 4 0 0 4 0 0 51037 318
+5 * 317 0 317
+8 * 317 317
+6 * 317 0 317
+6 * 317
+7 * 317 0 0 1 0 0 1
+3 * 317 0 317
cfi=(2)
cfn=(148)
calls=317 0x402df4 414 
* * 79318 24883 17727 0 0 0 0 0 0 8815 230 634
+5 * 317
+7 * 317
+3 * 317 0 317
cfi=(2)
cfn=(178)
calls=317 0x402e74 414 
* * 83114 26299 18835 0 0 0 0 0 0 9895 26 634
+5 +2 317 317
+7 * 317
+3 * 317 0 317
cfi=(2)
cfn=(2)
calls=317 0x402d74 645 
* * 4121 1902 634
+5 * 317 317
+6 * 317
+3 * 317
+3 * 317
+3 * 317 317
+7 * 317
+3 * 317 0 0 1 0 0 1
+3 * 317 0 317
cfi=(2)
cfn=(144)
calls=317 0x402d9a 770 
* * 3487 1585 951
+5 * 317
+3 * 317
+7 * 317
+3 * 317
+3 * 317 0 317
cfi=(2)
cfn=(200)
calls=317 0x402eda 901 
* * 32776 12085 9358 38 27 11 38 27 11 1479 72 47
+5 +1 317 317
+7 * 317
+3 * 317 0 317
cfi=(2)
cfn=(10)
calls=317 0x402f54 645 
* * 4121 1902 634 0 1 0 0 1
+5 * 317 317
+6 * 317
+3 * 317
+3 * 317
+3 * 317 317
+7 * 317 0 0 1 0 0 1
+3 * 317
+3 * 317 0 317
cfi=(2)
cfn=(146)
calls=317 0x402dba 770 
* * 3487 1585 951
+5 * 317
+3 * 317
+7 * 317
+3 * 317
+3 * 317 0 317
cfi=(2)
cfn=(244)
calls=317 0x402f7a 901 
* * 32582 11902 9212 19 34 37 19 34 37 1462 78 47
+5 +1 317 317
+7 * 317
+3 * 317 0 317
cfi=(2)
cfn=(10)
calls=317 0x402f54 645 
* * 4121 1902 634
+5 * 317 317
+6 * 317
+3 * 317
+3 * 317
+3 * 317 317 0 1 0 0 1
+7 * 317
+3 * 317
+3 * 317 0 317
cfi=(2)
cfn=(146)
calls=317 0x402dba 770 
* * 3487 1585 951
+5 * 317 317
+2 * 317
+4 * 317 317
+8 * 317 317
+8 * 317 0 317
+8 +1 317 317
+7 * 317
+3 * 317 0 317
cfi=(2)
cfn=(2)
calls=317 0x402d74 645 
* * 4121 1902 634
+5 * 317 317 0 1 0 0 1
+6 * 317
+3 * 317
+3 * 317
+3 * 317 317
+7 * 317
+3 * 317
+3 * 317 0 317
cfi=(2)
cfn=(144)
calls=317 0x402d9a 770 
* * 3487 1585 951
+5 * 317 317
+4 * 317 317
+8 * 317
+4 * 317 317
+8 * 317
+3 * 317 0 317
+8 +2 317 0 317
+7 -12 317 317
+8 * 317 317
+7 * 317 0 0 0 0 0 0 0 0 317 1
jcnd=1/317 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 317
+7 * 317
+3 * 317 0 317
cfi=(2)
cfn=(2)
calls=317 0x402d74 645 
* * 4121 1902 634 2 0 1 2 0 1
+5 * 317
+3 * 317 317
+7 * 317
+3 * 317 0 317
cfi=(2)
cfn=(2)
calls=317 0x402d74 645 
* * 4121 1902 634 0 1 0 0 1
+5 * 317
+3 * 317 0 0 0 0 0 0 0 0 317 2
+2 * 317 0 0 1 0 0 1
+5 * 317
jump=317 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 317
+2 * 317 0 0 0 0 0 0 0 0 317
jcnd=317/317 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 317 0 317
+1 * 317
+3 * 317
+4 * 317 0 317
+4 * 317 0 317
+4 * 317 0 317
+5 +1 317 317
+4 * 317
+3 * 317 0 317
cfi=(2)
cfn=(2)
calls=317 0x402d74 645 
* * 4121 1902 634
+5 * 317
+3 * 317 0 317
+3 +1 317 317 0 1 0 0 1
+6 * 317 0 317
+3 * 317 317
+6 * 317 0 317
+3 +2 317 0 317
+7 * 317
jump=317 +86 * 
* * 
+2 +1 50720 50720
+3 * 50720
+3 * 50720 50720
+4 * 50720
+3 * 50720
+3 * 50720 0 50720
cfi=(2)
cfn=(144)
calls=50720 0x402d9a 770 
* * 557920 253600 152160
+5 * 50720 50720
+4 * 50720 50720
+5 * 50720
+4 * 50720 0 50720
+5 +1 50720 50720
+3 * 50720
+3 * 50720 50720
+4 * 50720
+3 * 50720
+3 * 50720 0 50720
cfi=(2)
cfn=(146)
calls=50720 0x402dba 770 
* * 557920 253600 152160
+5 * 50720 50720
+2 * 50720
+4 * 50720 50720
+5 * 50720
+4 * 50720 0 50720
+5 -2 50720 0 50720
+4 * 50720 50720
+3 * 50720
+3 * 50720 50720
+3 * 50720 0 0 0 0 0 0 0 0 50720 318
jcnd=50403/50720 -93 +1 
* * 
-9 * 317 317 0 1 0 0 1
+3 * 317
+3 * 317 317
+3 * 317 0 0 0 0 0 0 0 0 317
jcnd=317/317 -93 +1 
* * 
+2 +4 317 317
+3 * 317
+3 * 317 0 0 1 0 0 1
+4 * 317 317
+5 * 317
+4 * 317
+3 * 317 0 317
+5 +1 317 317
+3 * 317
+3 * 317
+4 * 317 317
+5 * 317
+4 * 317
+3 * 317 0 317
+5 +1 317 317
+5 * 317 317
+5 * 317 317
+5 * 317 0 0 1 0 0 1
+4 * 317
+3 * 317 0 317
+5 +2 317 317
+3 +1 317 0 317
+3 * 317 317
+5 * 317 317
+1 * 317 317

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1284 0 1284 1 0 0 1
+2 0 1284 0 1284
+2 0 1284 0 1284
+2 0 1284
+3 0 1284 0 1284
+2 0 1284 0 1284
+1 0 1284 0 1284
+1 0 1284
+3 0 1284
+4 0 1284 1284
+4 0 1284 0 1284
+4 0 1284
+3 0 1284
+4 0 1284
+3 0 1284
+3 0 1284
+3 0 1284 0 0 1 0 0 1 0 0 1284
+6 0 1284
+4 0 1284 0 0 0 0 0 0 0 0 1284
+6 0 1284
+4 0 1284 0 0 0 0 0 0 0 0 1284
+6 0 1284 1284
+7 0 1284 0 0 0 0 0 0 0 0 1284 4
jcnd=1160/1284 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1160
+2 0 1160 0 0 0 0 0 0 0 0 1160
+6 0 1160 1160 0 1 0 0 1
+4 0 1160
+3 0 1160
+2 0 1160 0 0 0 0 0 0 0 0 1160
jcnd=1160/1160 0x3877c78a40 0 
* 0 
+6 0 1160 1160
+4 0 1160
+3 0 1160 0 0 0 0 0 0 0 0 1160
+6 0 1160 1160
+5 0 1160
+4 0 1160 0 0 0 0 0 0 0 0 1160
jcnd=1160/1160 0x3877c7907c 0 
* 0 
+6 0 1160 1160
+5 0 1160
+4 0 1160 0 0 0 0 0 0 0 0 1160
+6 0 1160
+4 0 1160 0 0 1 0 0 1 0 0 1160
+6 0 1160
+4 0 1160 1160
+7 0 1160 0 0 0 0 0 0 0 0 1160
+6 0 1160 1160
+6 0 1160
+2 0 1160 0 0 0 0 0 0 0 0 1160
+6 0 1160 1160
+4 0 1160 0 0 0 0 0 0 0 0 1160 5
jcnd=1156/1160 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1160 1160 0 1 0 0 1
+4 0 1160 0 0 0 0 0 0 0 0 1160 388
jcnd=440/1160 0x3877c78bf0 0 
* 0 
+6 0 720 720 0 0 1 0 0 1
+6 0 720 0 0 1 0 0 1 0 0 720 64
jcnd=61/720 0x3877c78a78 0 
* 0 
+6 0 659 659
+5 0 659 659
+5 0 659 659
+4 0 659 0 0 0 0 0 0 0 0 659
+6 0 659 659
+4 0 659 0 0 0 0 0 0 0 0 659
+6 0 659 659
+9 0 659 0 659
+4 0 659 0 659
+4 0 659 0 0 0 0 0 0 0 0 659 4
jcnd=651/659 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 659
+3 0 659
+4 0 659 659
+4 0 659 659
+4 0 659 0 0 0 0 0 0 0 0 659
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 720
+7 0 720 0 720
+4 0 720 0 720
+4 0 720 0 0 0 0 0 0 0 0 720 68
jcnd=441/720 +18 0 
* 0 
+2 0 279 0 279
+8 0 279 0 279
+8 0 279 0 279
+4 0 279
+3 0 279 0 279 1 0 0 1
+4 0 279
+4 0 279 0 279
+4 0 279 0 279
+4 0 279
+7 0 279 0 0 0 0 0 0 0 0 279
jcnd=279/279 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 440
+7 0 440 0 0 0 0 0 0 0 0 440
jcnd=440/440 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1160 0 0 1 0 0 1
+5 0 1160 1160
+4 0 1160 1160
+7 0 1160 0 0 0 0 0 0 0 0 1160
jcnd=1160/1160 +16 0 
* 0 
+16 0 1160 0 1160
+5 0 1160 0 0 0 0 0 0 0 0 1160
+6 0 1160
+3 0 1160
jump=1160 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1160 1160 0 1 0 0 1
+4 0 1160
+2 0 1160 0 0 0 0 0 0 0 0 1160
+6 0 1160 1160
+7 0 1160 0 0 0 0 0 0 0 0 1160
jcnd=1160/1160 +15 0 
* 0 
+15 0 1160 0 1160 1 0 0 1
+4 0 1160 0 0 0 0 0 0 0 0 1160 2
+6 0 1160
+4 0 1160 1160
+1 0 1160 1160
+1 0 1160 1160
+2 0 1160 1160
+2 0 1160 1160
+2 0 1160 1160
+2 0 1160 1160
0x3877c78bf0 0 440 0 0 1 0 0 1
+3 0 440 0 440
+4 0 440
+3 0 440
+4 0 440 0 440 1 0 0 1
+4 0 440
jump=440 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1160 1160 0 1 1 0 1 1
+4 0 1160 0 0 1 0 0 1
+7 0 1160
+4 0 1160
+3 0 1160
+3 0 1160 0 0 0 0 0 0 0 0 1160
jcnd=1160/1160 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1274 0 0 1 0 0 1
+7 0 1274
+3 0 1274
+3 0 1274 1274 0 0 1 0 0 1
+4 0 1274
+4 0 1274 0 0 0 0 0 0 0 0 0 0 1274 158
jump=152 0x3877c89be8 0 
* 0 
jump=162 0x3877c89bd0 0 
* 0 
jump=156 0x3877c89bb8 0 
* 0 
jump=160 +11 0 
* 0 
jump=160 0x3877c89c48 0 
* 0 
jump=162 0x3877c89c30 0 
* 0 
jump=160 0x3877c89c18 0 
* 0 
jump=162 0x3877c89c00 0 
* 0 
+11 0 160 160
+3 0 160
+4 0 160
+4 0 160 160
+4 0 160
+4 0 160 0 160
+4 0 160
+9 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
jcnd=8/160 0x3877c89c60 0 
* 0 
-40 0 12462 12462
+4 0 12462 0 12462 0 0 3 0 0 3
+4 0 12462 12462
+4 0 12462 0 12462 0 0 15 0 0 15
+4 0 12462 12462
+4 0 12462 0 12462 0 0 19 0 0 19
+4 0 12462 12462
+4 0 12462 0 12462
+4 0 12462
+4 0 12462
+4 0 12462 0 0 0 0 0 0 0 0 12462 800
jcnd=1238/12462 0x3877c89c60 0 
* 0 
-32 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162
jcnd=10/162 0x3877c89c60 0 
* 0 
-24 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
+4 0 160
+4 0 160 0 0 0 0 0 0 0 0 160
jcnd=8/160 0x3877c89c60 0 
* 0 
-16 0 162 162 0 1 0 0 1
+4 0 162 0 162
+4 0 162 0 0 1 0 0 1
+4 0 162
+4 0 162 0 0 0 0 0 0 0 0 162 4
jcnd=10/162 0x3877c89c60 0 
* 0 
+6 0 11832
+4 0 11832 11832
+3 0 11832 0 11832 0 0 1 0 0 1
+3 0 11832 11832
+4 0 11832 0 11832 0 0 3 0 0 3
+4 0 11832 11832
+4 0 11832 0 11832 0 0 18 0 0 18
+4 0 11832 11832
+4 0 11832 0 11832
+4 0 11832
jump=11832 -80 0 
* 0 
-30 0 152 152
+3 0 152 0 152
+3 0 152 152
+4 0 152 0 152
+4 0 152 152
+4 0 152 0 152 0 0 1 0 0 1
+4 0 152 152
+4 0 152 0 152
+4 0 152
jump=152 -80 0 
* 0 
-24 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162 162
+4 0 162 0 162
+4 0 162
jump=162 -80 0 
* 0 
-16 0 156 156
+4 0 156 0 156
+4 0 156 156
+4 0 156 0 156
+4 0 156
jump=156 -80 0 
* 0 
+8 0 156 156
+3 0 156
+4 0 156 0 0 1 0 0 1
+4 0 156
+4 0 156
jump=156 -39 0 
* 0 
+9 0 162
+3 0 162 0 0 0 0 0 0 0 0 162
+6 0 162 162
+3 0 162
+4 0 162
jump=162 -72 0 
* 0 
+8 0 152
+4 0 152 152
+3 0 152 0 0 0 0 0 0 0 0 152
+2 0 152
+4 0 152
jump=152 -99 0 
* 0 
+11 0 162 162 0 1 0 0 1
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b78 0 
* 0 
+9 0 160 160
+3 0 160
+4 0 160
+4 0 160
+4 0 160
jump=160 0x3877c89b70 0 
* 0 
+9 0 162 162
+3 0 162
+4 0 162
+4 0 162
+4 0 162
jump=162 0x3877c89b68 0 
* 0 
+9 0 160 160
+3 0 160
+4 0 160
+4 0 160
+4 0 160
jump=160 0x3877c89b60 0 
* 0 
+9 0 1274 0 1274 1 0 0 1
+3 0 1274 1274

fn=(104) alloc_perturb
0x3877c77180 0 1150 1150 0 1 0 0 1
+6 0 1150
+2 0 1150 0 0 0 0 0 0 0 0 1150 1
+2 0 1150 1150

fn=(38) _int_malloc
0x3877c79a00 0 1284 0 1284 1 0 0 1
+2 0 1284
+3 0 1284 0 1284
+2 0 1284 0 1284
+2 0 1284 0 1284 0 0 1 0 0 1
+2 0 1284
+3 0 1284 0 1284
+1 0 1284 0 1284
+1 0 1284
+4 0 1284
+4 0 1284 0 0 0 0 0 0 0 0 1284
+6 0 1284
+4 0 1284
+6 0 1284
+3 0 1284
+4 0 1284
+4 0 1284
+4 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284
+6 0 1284 1284 0 1 1 0 1 1
+7 0 1284 0 0 0 0 0 0 0 0 1284 7
jcnd=1162/1284 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1150
+4 0 1150 1150
+1 0 1150 1150
+1 0 1150 1150
+2 0 1150 1150
+2 0 1150 1150
+2 0 1150 1150
+2 0 1150 1150
+7 0 1179
+7 0 1179 0 0 1 0 0 1 0 0 1179 7
jcnd=276/1179 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 3 0 0 3
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 276 0 0 1 0 0 1
+3 0 276
+4 0 276
+4 0 276 0 0 1 0 0 1 0 0 276
jcnd=276/276 0x3877c7a1a4 0 
* 0 
+30 0 276 276
+6 0 276
+5 0 276 0 0 0 0 0 0 0 0 276 1
jcnd=275/276 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 885 232 189 8 2 0 8 2 0 181 21
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1178 0 0 1 0 0 1
+3 0 1178
+3 0 1178
+3 0 1178
+4 0 1178
+3 0 1178
+4 0 1178 0 1178
+5 0 1178
+3 0 1178 0 1178
+4 0 1178 0 1178
+4 0 1178 0 1178
+5 0 1178
+3 0 1178
+3 0 1178
+3 0 1178
+3 0 1178
+4 0 1178
+4 0 1178 0 0 1 0 0 1
+4 0 1178 0 1178
+4 0 1178
+4 0 1178 0 1178
+5 0 1178 0 1178
+5 0 1178
+3 0 1178
+3 0 1178 0 1178
+5 0 1178
+5 0 1178
+3 0 1178 0 1178
+4 0 1178 0 1178
+4 0 1178
+6 0 1178 0 1178
+4 0 1178 0 1178
+5 0 1178 0 0 1 0 0 1
+3 0 1178
+3 0 1178
+3 0 1178
jump=1178 +87 0 
* 0 
+8 0 917
+3 0 917
+4 0 917
+2 0 917
+2 0 917
+3 0 917
+3 0 917
+3 0 917
+2 0 917
+2 0 917
+5 0 917
+2 0 917 917 0 0 2 0 0 2
+4 0 917
+3 0 917
+4 0 917 0 917
+4 0 917 0 917
+8 0 917
+7 0 917 0 917
+4 0 917 0 917 0 0 1 0 0 1
+4 0 917 0 917
+4 0 917 0 0 0 0 0 0 0 0 917
-38 0 269
+3 0 269
+4 0 269 0 269
+4 0 269 0 269
+8 0 269
+7 0 269 0 269
+4 0 269 0 269
+4 0 269 0 269
+4 0 269 0 0 0 0 0 0 0 0 269
+6 0 2365 2365 0 1 0 0 1
+4 0 2365
+3 0 2365 0 0 0 0 0 0 0 0 2365 150
jcnd=1131/2365 0x3877c79ef0 0 
* 0 
+6 0 1234 1234
+4 0 1234 1234
+4 0 1234
+4 0 1234 0 0 0 0 0 0 0 0 1234
+6 0 1234 1234 0 1 0 0 1
+7 0 1234 0 0 0 0 0 0 0 0 1234
+6 0 1234
+4 0 1234
+7 0 1234 0 0 0 0 0 0 0 0 1234 6
jcnd=325/1234 +11 0 
* 0 
+2 0 909
+3 0 909 0 0 0 0 0 0 0 0 909 62
jcnd=833/909 0x3877c79e28 0 
* 0 
+6 0 1215
+3 0 1215 0 1215
+4 0 1215 0 1215
+5 0 1215 0 0 0 0 0 0 0 0 1215 17
jcnd=29/1215 0x3877c7a090 0 
* 0 
+6 0 1186
+7 0 1186 0 0 0 0 0 0 0 0 1186 123
jcnd=917/1186 0x3877c79c50 0 
* 0 
+6 0 269 0 0 1 0 0 1
+3 0 269
+4 0 269
+4 0 269 0 0 0 0 0 0 0 0 269
+6 0 269
+3 0 269
+4 0 269
+2 0 269
+2 0 269
+3 0 269
+3 0 269
+8 0 269
+3 0 269
+2 0 269
+2 0 269
+4 0 269 269 0 0 2 0 0 2
+4 0 269
+3 0 269 0 0 1 0 0 1 0 0 269 9
jcnd=269/269 0x3877c79e15 0 
* 0 
0x3877c79e15 0 269 0 269
+4 0 269 0 269
+4 0 269
+3 0 269
jump=269 0x3877c79c73 0 
* 0 
+8 0 833 833 0 1 0 0 1
+4 0 833
+3 0 833 0 0 0 0 0 0 0 0 833 335
jcnd=428/833 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 5
jcnd=386/405 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1131 0 0 1 0 0 1
+7 0 1131
+3 0 1131 0 0 0 0 0 0 0 0 1131 4
jcnd=268/1131 0x3877c7a0b0 0 
* 0 
+6 0 1107 1107 0 1 0 0 1
+4 0 1107
+3 0 1107
+3 0 1107
+2 0 1107
+4 0 1107
+3 0 1107
+3 0 1107
+2 0 1107
+2 0 1107
+2 0 1107
+2 0 1107 1107 0 0 1 0 0 1
+8 0 1107
+5 0 1107
+5 0 1107
+2 0 1107 0 0 0 0 0 0 0 0 1107
-2 0 536
+2 0 536 0 0 0 0 0 0 0 0 536
+2 0 1643
+2 0 1643 0 0 0 0 0 0 0 0 1643 34
jcnd=925/1643 +64 0 
* 0 
+2 0 718
+8 0 718
+3 0 718
+3 0 718 0 0 0 0 0 0 0 0 718 1
jcnd=1/718 0x3877c79fc0 0 
* 0 
-6 0 865
+3 0 865
+3 0 865 0 0 0 0 0 0 0 0 865 11
jcnd=441/865 0x3877c79fc0 0 
* 0 
+2 0 1141
+2 0 1141 1141
+8 0 1141
+2 0 1141 0 0 0 0 0 0 0 0 1141 26
jcnd=865/1141 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
+2 0 276
+2 0 276
+4 0 276
+2 0 276
+2 0 276 0 0 0 0 0 0 0 0 276 6
jcnd=214/276 -8 0 
* 0 
-8 0 8584
+4 0 8584
+2 0 8584
+2 0 8584 0 0 0 0 0 0 0 0 8584 590
jcnd=7582/8584 -8 0 
* 0 
-2 0 925 0 0 1 0 0 1
+2 0 925 0 0 0 0 0 0 0 0 925 23
jcnd=788/925 -8 0 
* 0 
+2 0 1201 1201 0 0 14 0 0 14
+4 0 1201 0 0 1 0 0 1
+3 0 1201 0 0 0 0 0 0 0 0 1201 486
jcnd=665/1201 0x3877c7a1cf 0 
* 0 
+6 0 536
+2 0 536
+4 0 536
+2 0 536
+2 0 536
+2 0 536 0 536
+8 0 536
jump=536 0x3877c79f30 0 
* 0 
+37 0 442 442 0 1 0 0 1
+5 0 442 442
+4 0 442
+4 0 442 442
+5 0 442 0 0 0 0 0 0 0 0 442
jcnd=442/442 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 268 268
+4 0 268
+4 0 268
+2 0 268
+5 0 268 268 0 1 0 0 1
+4 0 268
+3 0 268 0 0 0 0 0 0 0 0 268 4
jcnd=244/268 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 276 0 0 1 0 0 1
+3 0 276 0 276
+4 0 276
jump=276 0x3877c79b99 0 
* 0 
+36 0 665 665 0 1 2 0 1 2
+4 0 665 665
+4 0 665
+3 0 665 665
+4 0 665
+4 0 665
+3 0 665
+3 0 665 665
+4 0 665 0 0 0 0 0 0 0 0 665
+6 0 665 665
+4 0 665 0 0 0 0 0 0 0 0 665
+6 0 665 665 0 1 0 0 1
+8 0 665 0 665
+4 0 665 0 665
+4 0 665 0 0 0 0 0 0 0 0 665 11
jcnd=419/665 +38 0 
* 0 
+2 0 246 246 0 0 2 0 0 2
+4 0 246
+3 0 246 0 0 0 0 0 0 0 0 246
+2 0 246 246
+5 0 246 0 0 0 0 0 0 0 0 246
+6 0 246 246
+4 0 246 0 246
+4 0 246 246
+4 0 246 0 246
+4 0 246
+4 0 246 0 0 0 0 0 0 0 0 246
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 8
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 644 644
+4 0 644 644 0 1 0 0 1
+4 0 644 0 0 0 0 0 0 0 0 644
+6 0 644
+4 0 644
+7 0 644 0 644 0 0 8 0 0 8
+4 0 644 0 644
+4 0 644 0 644
+4 0 644 0 644
+4 0 644 0 0 0 0 0 0 0 0 644 4
jcnd=178/644 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 178
+7 0 178 0 0 0 0 0 0 0 0 178
jcnd=178/178 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 653 0 0 1 0 0 1
+7 0 653 0 653
+4 0 653
+3 0 653
+3 0 653
+4 0 653
+3 0 653
+4 0 653
+3 0 653
+3 0 653
+4 0 653 0 653
+4 0 653 0 653 0 0 1 0 0 1
+4 0 653
jump=653 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 689
+4 0 689 0 0 1 0 0 1
+3 0 689
+3 0 689 0 689
cfn=(104)
calls=689 0x3877c77180 0 
* 0 2756 1378 0 1 0 0 1 0 0 689
+5 0 689
+3 0 689
jump=689 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 442 0 0 1 0 0 1
+7 0 442
+2 0 442
+4 0 442
+3 0 442
+3 0 442 0 442
+5 0 442
+3 0 442
+4 0 442
+3 0 442 0 0 1 0 0 1
+4 0 442
+4 0 442
+3 0 442
+4 0 442 0 442
+4 0 442 0 442 0 0 17 0 0 17
+4 0 442
+3 0 442
+3 0 442 0 442
cfn=(104)
calls=442 0x3877c77180 0 
* 0 1768 884 0 0 0 0 0 0 0 442 1
+5 0 442
+3 0 442
jump=442 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1284 0 1284 1 0 0 1
+5 0 1284 0 1284
+5 0 1284
+3 0 1284 0 1284
+5 0 1284
+4 0 1284 1284 0 0 1 0 0 1
+7 0 1284 1284 0 0 1 0 0 1
+3 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284 2
+6 0 1284 1284 0 0 1 0 0 1
+7 0 1284 1284 0 1 1 0 1 1
+4 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284
+2 0 1284 1284 0 0 1 0 0 1
+3 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284
jcnd=1284/1284 +97 0 
* 0 
+18 0 1284
+3 0 1284
+3 0 1284 0 1284
cfn=(38)
calls=1284 0x3877c79a00 0 
* 0 292744 36071 42484 45 32 50 45 32 50 45249 2018
+5 0 1284
+3 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284
+2 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284
+2 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284 23
+2 0 1284 1284
+7 0 1284 0 0 0 0 0 0 0 0 1284
jcnd=1284/1284 +13 0 
* 0 
+13 0 1284 0 1284
+2 0 1284 0 0 0 0 0 0 0 0 1284 14
+6 0 1284
+3 0 1284 1284
+4 0 1284 1284
+5 0 1284 1284
+5 0 1284
+4 0 1284 1284
+1 0 1284 0 0 1 0 0 1
+5 0 1284 1284 0 0 1 0 0 1
+7 0 1284 0 0 0 0 0 0 0 0 1284
jcnd=1284/1284 +14 0 
* 0 
+14 0 1284 0 1284 1 0 0 1
+3 0 1284 0 0 0 0 0 0 0 0 1284
+6 0 1284
jump=1284 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1284 0 1284 1 0 0 1
+2 0 1284
+3 0 1284
+3 0 1284 0 1284
+2 0 1284
+3 0 1284 0 1284
+1 0 1284
+3 0 1284 0 1284
+1 0 1284
+3 0 1284
+4 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284
+6 0 1284
+4 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284 7
jcnd=10/1284 0x3877c838d1 0 
* 0 
+2 0 1274
+3 0 1274
+3 0 1274
+3 0 1274
+3 0 1274
+3 0 1274 0 0 0 0 0 0 0 0 1274
jcnd=1274/1274 +41 0 
* 0 
+41 0 1274 0 0 1 0 0 1
+3 0 1274 0 0 0 0 0 0 0 0 1274
jcnd=1274/1274 0x3877c839c0 0 
* 0 
+24 0 1274
+3 0 1274
+4 0 1274
+3 0 1274
+3 0 1274
+3 0 1274
+3 0 1274
+3 0 1274 0 0 0 0 0 0 0 0 1274 634
jcnd=646/1274 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 638
+10 0 638 638 0 0 2 0 0 2
+3 0 638
+4 0 638 0 638
+3 0 638
+4 0 638
+4 0 638 0 0 0 0 0 0 0 0 638
jcnd=638/638 -18 0 
* 0 
-18 0 1970 1970
+3 0 1970
+4 0 1970 0 1970
+3 0 1970
+4 0 1970
+4 0 1970 0 0 0 0 0 0 0 0 1970 11
jcnd=1332/1970 -18 0 
* 0 
+2 0 1284
+4 0 1284
+3 0 1284 1284
+1 0 1284 1284
+1 0 1284 1284
+2 0 1284 1284 0 1 0 0 1
+2 0 1284 1284
0x3877c839c0 0 1274 0 0 1 0 0 1
+3 0 1274
+3 0 1274
+3 0 1274
+4 0 1274 0 1274 0 0 1 0 0 1
cfn=(284)
calls=1274 0x3877c89b20 0 
* 0 280714 104172 101624 6 1 60 6 1 60 13420 804 1274 158
+5 0 1274
jump=1274 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1284 1284 0 1 1 0 1 1
+7 0 1284 1284 0 0 1 0 0 1
+3 0 1284
+3 0 1284 0 0 1 0 0 1 0 0 1284
+6 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284
+6 0 1284 1284 0 0 1 0 0 1
+4 0 1284
+4 0 1284
+2 0 1284 0 0 0 0 0 0 0 0 1284 2
+2 0 1284
+2 0 1284
+7 0 1284 0 0 0 0 0 0 0 0 1284
jcnd=1284/1284 +14 0 
* 0 
+14 0 1284
+2 0 1284
cfn=(170)
calls=1284 0x3877c78650 0 
* 0 124681 32991 18825 19 3 0 19 3 0 30129 537

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=11/12 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 9550074 3902045 2255148 241 98 138 241 98 138 278914 5027 7694 158
