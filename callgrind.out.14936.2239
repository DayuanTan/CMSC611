version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2239


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2654737800 - 2654816592
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 238 0 0 1 0 0 1
+3 0 238 0 0 0 0 0 0 0 0 238
+2 0 238
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=238 0x3877c7b8b0 0 
* 0 24437 6102 3190 19 3 0 19 3 0 5635 19
* 0 238 238 0 1 1 0 1 1 0 0 0 238

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 238 0 238 1 0 0 1
+1 0 238
+5 0 238
+3 0 238 0 238
+1 0 238
+4 0 238 0 0 1 0 0 1
+3 0 238
+4 0 238
+3 0 238 0 238 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=238 0x3877c7aa50 0 
* 0 53427 8002 7282 31 26 29 31 26 29 9439 322
* 0 238 238 0 1 1 0 1 1 0 0 0 238
+5 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
jcnd=238/238 +96 0 
* 0 
+96 0 238 0 0 1 0 0 1
+4 0 238 238
+1 0 238 238
+1 0 238 238

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 114 0 114 1 0 0 1
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114 1 0 0 1
+4 +1 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=114 0x4049d4 -35 
* * 684 228 342 1 0 0 1
+5 * 114 114
+1 * 114 114

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 114 0 114 1 0 0 1
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 114
+4 * 114
+3 * 114 0 114
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=114 0x404520 -35 
* * 570 228 228
+5 * 114 114
+1 * 114 114

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 114 0 114 1 0 0 1
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=114 0x404a28 -35 
* * 684 228 342 1 0 1 1 0 1
+5 * 114 114
+1 * 114 114

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 114
+4 * 114
+3 * 114 0 114
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=114 0x4044cc -35 
* * 570 228 228
+5 * 114 114
+1 * 114 114

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 57 0 57
+1 * 57
+3 * 57
+4 * 57 0 57
+4 * 57 0 57
+4 * 57 0 57
+4 +1 57 57
+4 * 57 57
+4 * 57 57
+4 * 57
+3 * 57
+3 * 57 0 57
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=57 0x403df2 -87 
* * 1368 456 513 0 5 1 0 5 1 57
+5 * 57 57
+1 * 57 57

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 114 0 114 1 0 0 1
+1 * 114
+3 * 114 0 114
+4 * 114 114
+4 * 114 114
+1 * 114 114

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 57 0 57
+1 * 57
+3 * 57
+4 * 57 0 57
+4 * 57 0 57
+4 * 57 0 57
+4 +1 57 57
+4 * 57 57
+4 * 57 57
+4 * 57
+3 * 57
+3 * 57 0 57
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=57 0x40406a -87 
* * 1368 456 513 0 4 3 0 4 3 57
+5 * 57 57
+1 * 57 57

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=10 +8 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=10 +7 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 114 0 114
+1 * 114
+3 * 114 0 114
+4 * 114 114
+4 * 114 114
+1 * 114 114

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 164 0 164
+1 * 164
+3 * 164 0 164
+4 +1 164 164
+4 * 164 164
+1 * 164 164

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 228 0 228 1 0 0 1
+1 * 228
+3 * 228 0 228
+4 +1 228 228 0 1 0 0 1
+4 * 228 228
+1 * 228 228

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 164 0 164
+1 * 164
+3 * 164 0 164 0 0 1 0 0 1
+4 +1 164 164
+4 * 164 164
+1 * 164 164

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 228 0 228 1 0 0 1
+1 * 228
+3 * 228
+4 * 228 0 228
+4 +1 228
+4 * 228
+3 * 228 0 228
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=228 0x404ffe 790 
* * 1368 684 456 1 0 0 1
+5 * 228 228
+3 * 228 228
+1 * 228 228

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 228 0 228 1 0 0 1
+1 * 228
+3 * 228 0 228
+4 +1 228 228
+4 * 228 228
+1 * 228 228

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 228 0 228 1 0 0 1
+1 * 228
+3 * 228
+4 * 228 0 228
+4 +1 228
+4 * 228
+3 * 228 0 228 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=228 0x40500c 790 
* * 1368 684 456 1 0 0 1
+5 * 228 228
+3 * 228 228
+1 * 228 228

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 114 0 114
+1 * 114
+3 * 114 0 114
+4 * 114 0 114
+4 * 114 114
+4 * 114 114
+1 * 114 114

fl=(5)
fn=(28)
0x404992 113 129 0 129 1 0 0 1
+1 * 129
+3 * 129 0 129
+4 +1 129
+10 * 129 129
+1 * 129 129

fn=(176)
0x4044cc 86 114 0 114
+1 * 114
+3 * 114 0 114
+4 * 114 114
+1 * 114 114

fn=(224)
0x403df2 129 57 0 57
+1 * 57
+3 * 57
+4 * 57 0 57
+4 * 57 0 57
+4 * 57 0 57
+4 +1 57 57
+4 * 57
+3 * 57
+5 * 57 0 57
cfi=(16)
cfn=(226)
calls=57 0x402d61 -20 
* * 399 171 171
+5 * 57
+3 * 57 0 0 0 0 0 0 0 0 57
+2 * 57 57
+4 * 57 57 0 0 5 0 0 5
+2 * 57 0 57 0 0 1 0 0 1
+2 * 57 57
+1 * 57 57

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 119 0 119
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 * 119 0 119
+4 +1 119 119
+4 * 119
+3 * 119 0 119
cob=(5)
cfi=(8)
cfn=(164)
calls=119 0x387e4bb2f0 0 
* * 12670 3157 1592 21 4 0 21 4 0 2929 8 119
* * 119 119 0 1 1 0 1 1 0 0 0 119
+5 * 119 119
+1 * 119 119

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 119 0 119
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 * 119 0 119
+4 +1 119 119
+4 * 119
+3 * 119 0 119
cob=(5)
cfi=(8)
cfn=(164)
calls=119 0x387e4bb2f0 0 
* * 12719 3183 1598 0 0 0 0 0 0 2944 11 119
* * 119 119 0 0 0 0 0 0 0 0 0 119
+5 * 119 119
+1 * 119 119

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 119 0 119 1 0 0 1
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 * 119 0 119
+4 +2 119 119
+4 * 119
+3 * 119 0 119
cfn=(102)
calls=119 0x4048de +12 
* * 714 238 238 1 0 0 1
+5 * 119 119
+4 * 119 0 0 1 0 0 1
+3 * 119
+2 * 119 0 0 0 0 0 0 0 0 119
jcnd=119/119 +7 +3 
* * 
+7 +3 119 119
+4 * 119
+4 * 119
+3 * 119 0 119
cob=(5)
cfi=(8)
cfn=(32)
calls=119 0x387e4bd0b0 0 
* * 31005 4387 3817 18 12 15 18 12 15 5484 165 119
* * 119 119 0 0 0 0 0 0 0 0 0 119
+5 +1 119 119
+1 * 119 119

fn=(18)
0x404a28 81 114 0 114 1 0 0 1
+1 * 114
+3 * 114 0 114 0 0 1 0 0 1
+4 * 114 0 114
+4 * 114 114
+1 * 114 114

fn=(92)
0x4049d4 81 114 0 114 1 0 0 1
+1 * 114
+3 * 114 0 114
+4 * 114 0 114
+4 * 114 114
+1 * 114 114

fn=(196)
0x404520 86 114 0 114
+1 * 114
+3 * 114 0 114
+4 * 114 114
+1 * 114 114

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 119 0 119 1 0 0 1
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 * 119 0 119 1 0 0 1
+4 +2 119 119
+4 * 119
+3 * 119 0 119
cfn=(28)
calls=119 0x404992 +12 
* * 714 238 238 1 0 0 1
+5 * 119 119
+4 * 119
+3 * 119
+2 * 119 0 0 0 0 0 0 0 0 119
jcnd=119/119 +7 +3 
* * 
+7 +3 119 119
+4 * 119
+4 * 119
+3 * 119 0 119
cob=(5)
cfi=(8)
cfn=(32)
calls=119 0x387e4bd0b0 0 
* * 26230 4567 4179 17 15 15 17 15 15 4193 157 119
* * 119 119 0 1 1 0 1 1 0 0 0 119
+5 +1 119 119
+1 * 119 119

fn=(102)
0x4048de 113 129 0 129 1 0 0 1
+1 * 129
+3 * 129 0 129
+4 +1 129
+10 * 129 129
+1 * 129 129

fn=(266)
0x40406a 129 57 0 57
+1 * 57
+3 * 57
+4 * 57 0 57
+4 * 57 0 57
+4 * 57 0 57
+4 +1 57 57
+4 * 57
+3 * 57
+5 * 57 0 57
cfi=(16)
cfn=(226)
calls=57 0x402d61 -20 
* * 399 171 171
+5 * 57
+3 * 57 0 0 0 0 0 0 0 0 57
+2 * 57 57
+4 * 57 57 0 0 4 0 0 4
+2 * 57 0 57 0 0 3 0 0 3
+2 * 57 57
+1 * 57 57

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=10 0x404caa 450 
* * 2012 641 607 2 0 3 2 0 3 48 4 9
+5 * 10 10
+1 * 10 10

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +2 114 114
+4 * 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=114 0x404484 107 
* * 36776 11274 10594 25 3 4 25 3 4 1204 70 224 28
+5 * 114 114
+1 * 114 114

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=10 0x4048f2 107 
* * 2292 741 707 4 0 3 4 0 3 48 4 9
+5 * 10 10
+1 * 10 10

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +2 114 114 0 1 0 0 1
+4 * 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=114 0x404a36 450 
* * 33584 10134 9454 24 3 4 24 3 4 1204 70 224 28
+5 * 114 114
+1 * 114 114

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +2 114 114
+4 * 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=114 0x40439c 107 
* * 36776 11274 10594 7 1 5 7 1 5 1204 67 224
+5 * 114 114
+1 * 114 114

fn=(116)
0x40439c 107 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +10 114 114
+4 * 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=114 0x4047d7 -26 
* * 35180 10704 10024 7 1 5 7 1 5 1204 67 224
+5 +1 114 114
+1 * 114 114

fn=(118)
0x4047d7 91 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +2 114 114
+4 * 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=114 0x4049e2 450 
* * 33584 10134 9454 7 1 5 7 1 5 1204 67 224
+5 * 114 114
+1 * 114 114

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=10 0x404772 -25 
* * 2442 791 767 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(230)
calls=10 0x40465c -25 
* * 2442 791 767 5 0 3 5 0 3 48 4 9
+5 +1 10 10
+1 * 10 10

fn=(232)
0x4048f2 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(234)
calls=10 0x404af4 -26 
* * 2152 691 657 4 0 3 4 0 3 48 4 9
+5 +1 10 10
+1 * 10 10

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=10 0x404b99 -26 
* * 2152 691 657 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(274)
0x404b99 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=10 0x404cf0 450 
* * 2012 641 607 1 0 0 1 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fn=(50)
0x404484 107 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +10 114 114
+4 * 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(52)
calls=114 0x404829 -26 
* * 35180 10704 10024 25 3 4 25 3 4 1204 70 224 28
+5 +1 114 114
+1 * 114 114

fn=(270)
0x404772 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(272)
calls=10 0x4049a6 107 
* * 2292 741 707 2 0 0 2 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 119 0 119 1 0 0 1
+1 * 119 0 0 1 0 0 1
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 0 119 119
+5 0 119 0 0 0 0 0 0 0 0 119
+2 0 119 119
+4 0 119 119
+4 0 119
+5 0 119
+3 0 119
+3 0 119 0 119
fi=(6) ???
cfi=(5)
cfn=(100)
calls=119 0x40461a 99 
* 0 34099 5339 4769 21 12 15 21 12 15 5603 165 238
+5 0 119
fi=(6)
jump=119 +7 0 
* 0 
+7 0 119 119
+1 0 119 119

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 5244 0 5244
+1 * 5244
+3 * 5244 0 5244
+4 * 5244 0 5244
+4 +1 5244 5244
+4 * 5244 5244
+3 * 5244 5244
+4 * 5244
+4 * 5244
+3 * 5244 5244
+1 * 5244 5244

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 5244 0 5244
+1 * 5244
+3 * 5244 0 5244 1 0 0 1
+4 * 5244 0 5244
+4 +1 5244 5244
+4 * 5244 5244
+3 * 5244 5244
+4 * 5244
+4 * 5244
+3 * 5244 5244
+1 * 5244 5244

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 114
+4 * 114
+3 * 114 0 114
cfi=(4)
cfn=(194)
calls=114 0x403d7e +42 
* * 1596 570 570 1 0 0 1
+5 * 114 114
+1 * 114 114

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=10 0x403b08 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(256)
calls=10 0x404978 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 114 0 114 1 0 0 1
+1 * 114
+3 * 114 0 114
+1 * 114
+4 * 114 0 114
+4 +2 114 114
+4 * 114 114
+4 * 114
+3 * 114 114
+4 * 114 114
+3 * 114
+3 * 114
+3 * 114
+4 * 114
+3 * 114 114
+4 * 114 114
+3 -1 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=114 0x403d98 +11 
* * 15428 4208 2680 1 0 0 1 0 0 2954 9 228
+5 +1 114 114
+4 * 114
+3 * 114 0 114
cfn=(192)
calls=114 0x403296 -82 
* * 2622 912 912 1 0 0 1
+5 * 114
jump=114 +28 * 
* * 
+28 * 114
+4 * 114 114
+1 * 114 114
+1 * 114 114

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 476 0 476 1 0 0 1
+1 * 476
+3 * 476 0 476 0 0 1 0 0 1
+4 +1 476 476
+4 * 476 476 0 1 1 0 1 1
+4 * 476
+3 * 476 476
+4 * 476 476
+3 * 476
+3 * 476
+3 * 476
+4 * 476 476
+1 * 476 476

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 +2 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=114 0x404236 -14 
* * 29971 5868 5363 21 16 10 21 16 10 4267 142 228
+5 * 114 114
+4 * 114 0 114
+3 +1 114 114
+4 * 114 114 0 1 0 0 1
+3 * 114 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+3 * 114 114
+4 * 114
+4 * 114
+3 * 114 114
+4 * 114 0 114
+4 +1 114 114
+1 * 114 114

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 +2 114 114
+4 * 114 114 0 1 0 0 1
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(96)
calls=114 0x403fbe -14 
* * 34337 5661 4986 13 2 10 13 2 10 5464 146 228
+5 * 114 114
+4 * 114 0 114
+3 +1 114 114
+4 * 114 114
+3 * 114 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+3 * 114 114
+4 * 114
+4 * 114
+3 * 114 114
+4 * 114 0 114
+4 +1 114 114
+1 * 114 114

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 57 0 57
+1 * 57
+3 * 57 0 0 1 0 0 1
+4 * 57 0 57
+4 * 57 0 57
+4 +2 57 57
+4 * 57 57
+4 * 57 57
+4 * 57 57
+4 * 57
+3 * 57 0 0 0 0 0 0 0 0 57
jcnd=5/57 +51 +10 
* * 
+2 +3 52 52
+4 * 52 52
+4 * 52 52
+4 -1 52 52
+4 * 52
+3 * 52
+3 * 52 0 52
cfi=(3)
cfn=(264)
calls=52 0x4036b1 215 
* * 1976 676 728 0 4 1 0 4 1 52
+5 +2 52 52
+4 * 52 52
+4 * 52
+4 * 52 52
+4 * 52 0 52
+4 * 52
jump=52 +36 +8 
* * 
+2 +6 5 5
+4 * 5
+3 * 5 0 5
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=5 0x4039c4 556 
* * 115 45 35
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=5 0x4036de 318 
* * 6772 2127 1839 20 0 7 20 0 7 351 24 29
+5 +2 57 57
+1 * 57 57

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 243 0 243 1 0 0 1
+1 * 243
+3 * 243 0 243 1 0 0 1
+4 +1 243 243
+4 * 243 243
+1 * 243 243

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+3 * 114 0 114
+4 * 114
+4 * 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=114 0x404380 726 
* * 1140 570 456
+5 * 114 114
+4 * 114 114
+1 * 114 114

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 114 0 114
+1 * 114
+3 * 114 0 114
+1 * 114
+4 * 114 0 114 1 0 0 1
+4 +2 114 114
+4 * 114
+3 * 114 0 114
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=114 0x40325e 113 
* * 684 342 228
+5 * 114
+3 * 114 114
+4 * 114 114
+4 * 114 114
+4 * 114 114
+3 -1 114
+3 * 114
+3 * 114 0 114
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=114 0x40326c 148 
* * 3534 1140 1368 4 0 0 4
+5 +1 114 114
+4 * 114
+3 * 114 0 114
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=114 0x4031ec 159 
* * 21206 6354 4158 25 5 0 25 5 0 2942 7 228
+5 * 114
jump=114 +28 * 
* * 
+28 * 114 0 0 1 0 0 1
+4 * 114 114
+1 * 114 114
+1 * 114 114

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 119 0 119 1 0 0 1
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 * 119 0 119
+4 +2 119 119
+5 * 119 0 0 0 0 0 0 0 0 119
+2 +1 119 119
+4 * 119 119
+4 * 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfi=(5)
cfn=(160)
calls=119 0x4044d6 -65 
* * 14098 3633 2187 22 5 0 22 5 0 2929 8 238
+5 +1 119 119
+1 * 119 119

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 114 0 114
+1 * 114
+3 * 114 0 114
+1 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=114 0x4043ca -45 
* * 4104 1482 1596 4 0 4 4 0 4
+5 +1 114 114 0 1 0 0 1
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(20)
calls=114 0x404412 +43 
* * 32821 7236 6161 22 16 10 22 16 10 4267 142 228
+5 * 114
jump=114 +28 * 
* * 
+28 * 114
+4 * 114 114
+1 * 114 114
+1 * 114 114

fn=(14)
0x4043ca 90 114 0 114 1 0 0 1
+1 * 114
+3 * 114
+4 * 114 0 114 0 0 1 0 0 1
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(4)
cfn=(16)
calls=114 0x404804 +24 
* * 2052 684 798 2 0 1 2 0 1
+5 * 114 114
+4 * 114 0 114 0 0 2 0 0 2
+7 * 114 114
+4 * 114 0 114 1 0 0 1
+8 * 114 114
+4 * 114 0 114
+8 +1 114 114
+1 * 114 114

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 114 0 114 1 0 0 1
+1 * 114
+3 * 114 0 114
+2 * 114 0 114
+2 * 114 0 114
+1 * 114 0 0 1 0 0 1
+4 * 114 0 114
+4 * 114 0 114
+4 +2 114 114
+4 * 114
+3 * 114 0 114
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=114 0x4039fc 117 
* * 684 342 228 2 0 0 2
+5 * 114
+3 * 114 0 114
cfi=(3)
cfn=(84)
calls=114 0x4039ed -88 
* * 684 342 228
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(2)
calls=114 0x402d74 645 
* * 1482 684 228
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114
+3 * 114
+3 * 114 0 114 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=114 0x403a0a 134 
* * 43799 9309 8178 20 2 10 20 2 10 5464 146 228
+5 +4 114 114
+4 * 114
+3 * 114 0 114
cfn=(106)
calls=114 0x40325e 113 
* * 684 342 228 1 0 0 1
+5 * 114
+3 * 114 114
+4 * 114 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=114 0x403a98 565 
* * 2850 1140 912 2 0 0 2
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(112)
calls=114 0x403a68 547 
* * 2850 1140 912
+5 * 114
+3 * 114
+3 * 114
+3 * 114
+3 * 114 0 114
cfi=(11)
cfn=(114)
calls=114 0x403ac9 -60 
* * 38486 11844 11278 7 1 5 7 1 5 1204 67 224
+5 -3 114 114
+4 * 114 0 114
+4 * 114
jump=114 +28 +4 
* * 
+28 +4 114
+4 * 114 114
+1 * 114 114
+2 * 114 114
+2 * 114 114
+1 * 114 114

fn=(188)
0x403d98 171 119 0 119 1 0 0 1
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 * 119 0 119
+4 +2 119 119
+5 * 119 0 0 0 0 0 0 0 0 119 5
+2 +1 119 119
+4 * 119 119
+4 * 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfi=(5)
cfn=(190)
calls=119 0x40452a -65 
* * 14147 3659 2193 0 0 0 0 0 0 2944 11 238
+5 +1 119 119
+1 * 119 119

fn=(22)
0x404236 167 119 0 119 1 0 0 1
+1 * 119
+3 * 119
+4 * 119 0 119 1 0 0 1
+4 * 119 0 119
+4 0 119 119
+5 0 119 0 0 0 0 0 0 0 0 119
+2 0 119 119
+4 0 119 119
+4 0 119
+5 0 119
+3 0 119
+3 0 119 0 119
fi=(6)
cfi=(5)
cfn=(26)
calls=119 0x404730 99 
* 0 29324 5519 5131 21 16 15 21 16 15 4312 157 238
+5 0 119
fi=(6)
jump=119 +7 0 
* 0 
+7 0 119 119
+1 0 119 119

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 114 0 114 1 0 0 1
+1 * 114
+3 * 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+4 * 114 0 114
+4 * 114
+4 * 114 0 0 1 0 0 1
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=114 0x404468 726 
* * 1140 570 456 1 0 0 1
+5 * 114 114
+4 * 114 114
+1 * 114 114

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+3 * 114 0 114
+4 * 114
+4 * 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(10)
cfn=(44)
calls=114 0x404468 726 
* * 1140 570 456
+5 * 114 114
+4 * 114 114
+1 * 114 114

fn=(86)
0x403a0a 134 114 0 114
+1 * 114
+3 * 114 0 114
+1 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=114 0x4042e2 -45 
* * 4104 1482 1596 5 0 0 5
+5 +1 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114 1 0 0 1
cfn=(94)
calls=114 0x40432a +43 
* * 37187 7029 5784 14 2 10 14 2 10 5464 146 228
+5 * 114
jump=114 +28 * 
* * 
+28 * 114
+4 * 114 114
+1 * 114 114
+1 * 114 114

fn=(88)
0x4042e2 90 114 0 114 1 0 0 1
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114 1 0 0 1
cfi=(4)
cfn=(90)
calls=114 0x4047b2 +24 
* * 2052 684 798 3 0 0 3
+5 * 114 114
+4 * 114 0 114
+7 * 114 114
+4 * 114 0 114
+8 * 114 114
+4 * 114 0 114
+8 +1 114 114
+1 * 114 114

fn=(156)
0x4031ec 159 114 0 114 1 0 0 1
+1 * 114
+3 * 114 0 114
+1 * 114
+4 * 114 0 114
+4 +2 114 114
+4 * 114 114 0 1 0 0 1
+4 * 114
+3 * 114 114
+4 * 114 114
+3 * 114
+3 * 114
+3 * 114
+4 * 114
+3 * 114 114
+4 * 114 114
+3 -1 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(158)
calls=114 0x403ce6 +11 
* * 15392 4188 2676 22 5 0 22 5 0 2942 7 228
+5 +1 114 114
+4 * 114
+3 * 114 0 114
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=114 0x4031b8 -82 
* * 2622 912 912 1 0 0 1
+5 * 114
jump=114 +28 * 
* * 
+28 * 114
+4 * 114 114
+1 * 114 114
+1 * 114 114

fn=(172)
0x4031b8 79 114 0 114 1 0 0 1
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 114
+4 * 114
+3 * 114 0 114
cfi=(4)
cfn=(174)
calls=114 0x403ccc +42 
* * 1596 570 570
+5 * 114 114
+1 * 114 114

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=5 0x40404e 726 
* * 50 25 20 1 0 0 1
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=5 0x4045cc 650 
* * 160 55 55 1 0 0 1
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 5
+4 * 5
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(210)
calls=5 0x4045cc 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(246)
0x4039c4 556 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 248 0 248 1 0 0 1
+1 * 248
+3 * 248 0 248
+4 +1 248 248
+4 * 248 248 0 0 2 0 0 2
+4 * 248
+3 * 248 248
+4 * 248 248
+3 * 248
+3 * 248
+3 * 248
+4 * 248 248
+1 * 248 248

fn=(106)
0x40325e 113 243 0 243 1 0 0 1
+1 * 243
+3 * 243 0 243
+4 +1 243 243
+4 * 243 243
+1 * 243 243

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204)
calls=5 0x40404e 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(254)
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5
+3 * 5 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(12)
cfn=(214)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(254)
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(6)
0x403b08 117 124 0 124 1 0 0 1
+1 * 124
+3 * 124 0 124 0 0 1 0 0 1
+4 +1 124 124
+4 * 124 124
+1 * 124 124

fn=(82)
0x4039fc 117 124 0 124 1 0 0 1
+1 * 124
+3 * 124 0 124 1 0 0 1
+4 +1 124 124
+4 * 124 124
+1 * 124 124

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 57 0 57
+1 * 57
+3 * 57
+4 * 57 0 57
+4 * 57 0 57
+4 +2 57 57
+4 * 57 57
+4 * 57 57
+4 * 57 57
+4 * 57
+3 * 57 0 0 0 0 0 0 0 0 57 5
jcnd=5/57 +51 +10 
* * 
+2 +3 52 52
+4 * 52 52
+4 * 52 52
+4 -1 52 52
+4 * 52
+3 * 52
+3 * 52 0 52
cfi=(3)
cfn=(222)
calls=52 0x403373 215 
* * 1976 676 728 0 4 0 0 4 0 52
+5 +2 52 52
+4 * 52 52
+4 * 52
+4 * 52 52
+4 * 52 0 52
+4 * 52
jump=52 +36 +8 
* * 
+2 +6 5 5 0 1 0 0 1
+4 * 5
+3 * 5 0 5
cfn=(202)
calls=5 0x403688 556 
* * 115 45 35 2 0 0 2
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=5 0x4033a0 318 
* * 7168 2148 1852 33 11 9 33 11 9 442 24 29
+5 +2 57 57
+1 * 57 57

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 114 0 114 1 0 0 1
+1 * 114
+3 * 114 0 114
+2 * 114 0 114
+2 * 114 0 114
+1 * 114
+4 * 114 0 114 1 0 0 1
+4 * 114 0 114
+4 +2 114 114
+4 * 114
+3 * 114 0 114
cfn=(6)
calls=114 0x403b08 117 
* * 684 342 228 1 0 1 1 0 1
+5 * 114
+3 * 114 0 114
cfi=(3)
cfn=(8)
calls=114 0x403afa -88 
* * 684 342 228 1 0 0 1
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(10)
calls=114 0x402f54 645 
* * 1482 684 228 1 1 0 1 1
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114
+3 * 114
+3 * 114 0 114
cfn=(12)
calls=114 0x403b16 134 
* * 39433 9516 8555 27 16 14 27 16 14 4267 142 228
+5 +4 114 114 0 1 0 0 1
+4 * 114
+3 * 114 0 114
cfn=(40)
calls=114 0x40333c 113 
* * 684 342 228 2 0 0 2
+5 * 114
+3 * 114 114
+4 * 114 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(42)
calls=114 0x403ba4 565 
* * 2850 1140 912 3 0 0 3
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(46)
calls=114 0x403b74 547 
* * 2850 1140 912
+5 * 114
+3 * 114
+3 * 114
+3 * 114
+3 * 114 0 114 1 0 0 1
cfi=(11)
cfn=(48)
calls=114 0x403bd5 -60 
* * 38486 11844 11278 26 3 4 26 3 4 1204 70 224 28
+5 -3 114 114
+4 * 114 0 114
+4 * 114
jump=114 +28 +4 
* * 
+28 +4 114
+4 * 114 114
+1 * 114 114
+2 * 114 114
+2 * 114 114
+1 * 114 114

fn=(108)
0x403a98 565 114 0 114 1 0 0 1
+1 * 114
+3 * 114
+4 * 114 0 114
+4 +1 114 114
+4 * 114 114
+4 * 114 0 114
+4 * 114
+4 * 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfi=(10)
cfn=(110)
calls=114 0x404380 726 
* * 1140 570 456 1 0 0 1
+5 * 114 114
+4 * 114 114
+1 * 114 114

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 114 0 114
+1 * 114
+3 * 114 0 114
+1 * 114
+4 * 114 0 114 1 0 0 1
+4 +2 114 114
+4 * 114
+3 * 114 0 114
cfn=(40)
calls=114 0x40333c 113 
* * 684 342 228
+5 * 114
+3 * 114 114
+4 * 114 114
+4 * 114 114
+4 * 114 114
+3 -1 114
+3 * 114
+3 * 114 0 114
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=114 0x40334a 148 
* * 3534 1140 1368 2 0 0 2
+5 +1 114 114
+4 * 114
+3 * 114 0 114
cfn=(186)
calls=114 0x4032ca 159 
* * 21242 6374 4162 3 0 0 3 0 0 2954 9 228
+5 * 114
jump=114 +28 * 
* * 
+28 * 114 0 0 1 0 0 1
+4 * 114 114
+1 * 114 114
+1 * 114 114

fn=(210)
0x4045cc 650 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(82)
calls=10 0x4039fc 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(212)
calls=10 0x4048c3 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fl=(12)
fn=(54)
0x404a36 450 114 0 114
+1 * 114
+3 * 114 0 114
+1 * 114
+4 * 114 0 114 1 0 0 1
+4 * 114 0 114
+4 * 114 0 114
+4 +10 114 114
+4 * 114
+3 * 114 0 114
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=114 0x404c38 288 
* * 1710 684 570 3 0 0 3
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(56)
calls=114 0x404c38 288 
* * 1710 684 570
+5 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=114 0x404c52 -36 
* * 27656 8082 7402 20 3 4 20 3 4 1204 70 224 28
+5 +1 114
+4 * 114 114
+1 * 114 114
+1 * 114 114

fn=(60)
0x404c52 424 114 0 114
+1 * 114
+3 * 114 0 114
+2 * 114 0 114
+1 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +4 114 114
+4 * 114
+3 * 114 0 114
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=114 0x40492d 277 
* * 1710 684 570 2 0 0 2
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=114 0x404d9d 277 
* * 2850 1026 912 2 0 1 2 0 1
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(66)
calls=114 0x404d9d 277 
* * 2850 1026 912
+5 * 114
+3 * 114
+3 * 114
+3 * 114 0 114
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=114 0x404db7 -49 
* * 17054 4548 3868 15 3 3 15 3 3 1204 70 224 28
+5 +1 114
+4 * 114 114
+1 * 114 114
+2 * 114 114
+1 * 114 114

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=10 0x404f37 -22 
* * 612 161 117 0 0 0 0 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(62)
0x40492d 277 144 0 144 1 0 0 1
+1 * 144
+3 * 144
+4 * 144 0 144
+4 +1 144 144
+4 * 144
+3 * 144 0 144 1 0 0 1
cfi=(13)
cfn=(64)
calls=144 -33 -66 
* * 864 432 288
+5 * 144 144
+1 * 144 144

fn=(66)
0x404d9d 277 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228
+4 +1 228 228
+4 * 228
+3 * 228 0 228
cfi=(13)
cfn=(68)
calls=228 0x404f1a -58 
* * 3648 1368 1140 2 0 1 2 0 1
+5 * 228 228
+1 * 228 228

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 10 0 10
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=10 0x404878 277 
* * 150 60 50 0 0 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=10 0x404f9c -49 
* * 762 211 177 0 0 2 0 0 2 48 4 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(214)
0x4045ee 216 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 +5 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +8 +2 
* * 
+8 +2 10 10
+4 +1 10 10
+1 * 10 10

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(130)
calls=20 0x40486a -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(282)
calls=10 0x404fcd -49 
* * 762 211 177 0 0 0 0 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(120)
0x4049e2 450 114 0 114
+1 * 114
+3 * 114 0 114
+1 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +10 114 114
+4 * 114
+3 * 114 0 114
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=114 0x404bc6 288 
* * 1710 684 570 3 0 0 3
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(122)
calls=114 0x404bc6 288 
* * 1710 684 570
+5 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=114 0x404be0 -36 
* * 27656 8082 7402 4 1 5 4 1 5 1204 67 224
+5 +1 114
+4 * 114 114
+1 * 114 114
+1 * 114 114

fn=(128)
0x404878 277 144 0 144
+1 * 144
+3 * 144
+4 * 144 0 144 1 0 0 1
+4 +1 144 144
+4 * 144
+3 * 144 0 144
cfi=(13)
cfn=(130)
calls=144 -33 -66 
* * 864 432 288 0 0 1 0 0 1
+5 * 144 144
+1 * 144 144

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228
+4 +1 228 228
+4 * 228
+3 * 228 0 228
cfi=(13)
cfn=(134)
calls=228 0x404e98 -58 
* * 3648 1368 1140 2 0 0 2
+5 * 228 228
+1 * 228 228

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +8 114 0 114
+4 +3 114 114
+4 * 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=114 0x404eb5 -22 
* * 15344 3978 3184 1 1 5 1 1 5 1204 67 224
+5 +1 114 114
+1 * 114 114

fn=(242)
0x404f9c 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(140)
calls=10 0x404eb5 -22 
* * 612 161 117 0 0 2 0 0 2 48 4 9
+5 +1 10 10
+1 * 10 10

fn=(276)
0x404cf0 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10
+3 * 10 0 10
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(278)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(280)
calls=10 0x404e40 -36 
* * 1492 461 427 1 0 0 1 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(278)
0x40469c 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(64)
calls=20 0x40491f -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(122)
0x404bc6 288 228 0 228 1 0 0 1
+1 * 228
+3 * 228
+4 * 228 0 228
+4 +1 228 228
+4 * 228
+3 * 228 0 228
cfi=(13)
cfn=(124)
calls=228 0x404d36 -77 
* * 1368 684 456 2 0 0 2
+5 * 228 228
+1 * 228 228

fn=(56)
0x404c38 288 228 0 228 1 0 0 1
+1 * 228
+3 * 228
+4 * 228 0 228 1 0 0 1
+4 +1 228 228
+4 * 228
+3 * 228 0 228
cfi=(13)
cfn=(58)
calls=228 0x404d8f -77 
* * 1368 684 456 1 0 0 1
+5 * 228 228
+1 * 228 228

fn=(74)
0x404f37 368 124 0 124
+1 * 124
+3 * 124
+4 * 124 0 124 1 0 0 1
+4 * 124 0 124
+4 * 124 0 124
+4 +2 124 124
+4 * 124 124
+4 * 124
+3 * 124
+3 * 124
+4 * 124 0 124
+4 +1 124 124
+5 * 124 0 0 0 0 0 0 0 0 124
jcnd=5/124 +33 +2 
* * 
+2 +1 119 119
+4 * 119
+8 * 119 119
+4 * 119 119
+4 * 119
+3 * 119 0 0 1 0 0 1
+3 * 119 0 119 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=119 0x3877c83840 0 
* * 12524 2795 2562 11 2 2 11 2 2 1128 72 114 28
* * 119 119 0 1 1 0 1 1 0 0 0 119
+5 +1 124 124
+4 * 124
+8 * 124 124
+4 * 124
+3 +1 124 124
+1 * 124 124

fn=(140)
0x404eb5 368 124 0 124
+1 * 124
+3 * 124
+4 * 124 0 124 1 0 0 1
+4 * 124 0 124
+4 * 124 0 124 0 0 1 0 0 1
+4 +2 124 124
+4 * 124 124
+4 * 124
+3 * 124
+3 * 124
+4 * 124 0 124
+4 +1 124 124
+5 * 124 0 0 0 0 0 0 0 0 124
jcnd=5/124 +33 +2 
* * 
+2 +1 119 119
+4 * 119
+8 * 119 119
+4 * 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cob=(2)
cfi=(9)
cfn=(78)
calls=119 0x3877c83840 0 
* * 12524 2795 2562 0 1 6 0 1 6 1128 71 114
* * 119 119 0 0 0 0 0 0 0 0 0 119
+5 +1 124 124
+4 * 124
+8 * 124 124
+4 * 124
+3 +1 124 124
+1 * 124 124

fn=(72)
0x404db7 379 114 0 114
+1 * 114
+3 * 114
+4 * 114 0 114 1 0 0 1
+4 * 114 0 114
+4 * 114 0 114
+4 +8 114 0 114
+4 +3 114 114
+4 * 114 114
+4 * 114 114
+4 * 114
+3 * 114
+3 * 114 0 114
cfn=(74)
calls=114 0x404f37 -22 
* * 15344 3978 3184 14 3 3 14 3 3 1204 70 224 28
+5 +1 114 114
+1 * 114 114

fn=(126)
0x404be0 424 114 0 114
+1 * 114
+3 * 114 0 114
+2 * 114 0 114
+1 * 114
+4 * 114 0 114
+4 * 114 0 114
+4 * 114 0 114
+4 +4 114 114
+4 * 114
+3 * 114 0 114
cfn=(128)
calls=114 0x404878 277 
* * 1710 684 570 1 0 0 1
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(132)
calls=114 0x404d44 277 
* * 2850 1026 912 2 0 0 2
+5 * 114
+3 * 114 114
+4 * 114
+3 * 114 0 114
cfn=(132)
calls=114 0x404d44 277 
* * 2850 1026 912
+5 * 114
+3 * 114
+3 * 114
+3 * 114 0 114
cfn=(138)
calls=114 0x404d5e -49 
* * 17054 4548 3868 1 1 5 1 1 5 1204 67 224
+5 +1 114
+4 * 114 114
+1 * 114 114
+2 * 114 114
+1 * 114 114

fn=(236)
0x404caa 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(240)
calls=10 0x404de8 -36 
* * 1492 461 427 1 0 3 1 0 3 48 4 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(204)
0x40404e 726 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=5 0x403e26 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(70)
0x40500c 790 228 0 228 1 0 0 1
+1 * 228
+3 * 228 0 228
+4 +1 228 228
+4 * 228 228
+1 * 228 228

fn=(110)
0x404380 726 228 0 228 1 0 0 1
+1 * 228
+3 * 228 0 228
+4 * 228 0 228
+4 * 228 228
+4 * 228 228
+3 * 228 228
+4 * 228 0 228
+3 * 228 228
+1 * 228 228

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(136)
0x404ffe 790 228 0 228 1 0 0 1
+1 * 228
+3 * 228 0 228
+4 +1 228 228
+4 * 228 228
+1 * 228 228

fn=(44)
0x404468 726 228 0 228
+1 * 228
+3 * 228 0 228
+4 * 228 0 228
+4 * 228 228
+4 * 228 228
+3 * 228 228
+4 * 228 0 228 1 0 0 1
+3 * 228 228
+1 * 228 228

fn=(248)
0x4042c6 726 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(220)
0x403e26 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 119 0 119 1 0 0 1
+1 * 119
+3 * 119 0 119
+4 * 119 0 119
+4 * 119 119
+1 * 119 119

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 119 0 119 1 0 0 1
+1 * 119
+3 * 119 0 119
+4 * 119 0 119 1 0 0 1
+4 * 119 119
+1 * 119 119

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 119 0 119 1 0 0 1
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 +4 119 119
+4 * 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfn=(184)
calls=119 0x40454c -14 
* * 714 238 357 1 0 0 1
+5 +2 119 119
+1 * 119 119

fn=(150)
0x40326c 148 119 0 119
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 * 119 0 119
+4 +3 119 119 0 1 0 0 1
+4 * 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=119 0x403d1a -29 
* * 2142 714 833 3 0 0 3
+5 +1 119 119
+1 * 119 119

fn=(180)
0x40334a 148 119 0 119
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 * 119 0 119
+4 +3 119 119
+4 * 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfn=(182)
calls=119 0x403dcc -29 
* * 2142 714 833 2 0 0 2
+5 +1 119 119
+1 * 119 119

fn=(152)
0x403d1a 122 119 0 119 1 0 0 1
+1 * 119
+3 * 119
+4 * 119 0 119
+4 * 119 0 119
+4 +4 119 119
+4 * 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfn=(154)
calls=119 0x4044f8 -14 
* * 714 238 357 2 0 0 2
+5 +2 119 119
+1 * 119 119

fl=(15)
fn=(250)
0x4036de 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x403799 +21 
* * 
0x403799 +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(252)
calls=5 0x404104 1336 
* * 905 335 235 4 0 0 4 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(258)
calls=5 0x4041ce 538 
* * 110 45 35
+5 * 5 0 5 1 0 0 1
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(260)
calls=5 0x4041f3 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(22)
calls=5 0x404236 167 
* * 1257 246 244 2 0 5 2 0 5 164 15 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5
+4 * 5 0 0 1 0 0 1
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(264)
calls=5 0x4036b1 215 
* * 190 65 70 0 0 2 0 0 2 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -88 
* * 1502 471 447 3 0 0 3 0 0 43 2 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 5
+3 -1 5 0 0 1 0 0 1
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(180)
calls=5 0x40334a 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(188)
calls=5 0x403d98 171 
* * 623 165 108 0 0 0 0 0 0 109 7 10
+5 +3 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x4039ba * 
* * 
0x4039ba * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fn=(206)
0x4033a0 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x40345e +21 
* * 
0x40345e +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(208)
calls=5 0x403e8c 1336 
* * 905 335 235 5 0 0 5 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(216)
calls=5 0x403f56 538 
* * 110 45 35
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(218)
calls=5 0x403f7b 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(96)
calls=5 0x403fbe 167 
* * 1666 273 259 10 10 5 10 10 5 258 19 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5 0 1 0 0 1
+4 * 5
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(222)
calls=5 0x403373 215 
* * 190 65 70 0 1 1 0 1 1 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -88 
* * 1502 471 447 6 0 3 6 0 3 43 4 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5
+4 * 5
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+3 -1 5
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(150)
calls=5 0x40326c 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(158)
calls=5 0x403ce6 171 
* * 610 159 106 1 0 0 1 0 0 106 1 10
+5 +3 5 5
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x40367f * 
* * 
0x40367f * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 57 0 57 1 0 0 1
+1 * 57
+3 * 57
+4 * 57 0 57
+4 * 57 0 57
+4 +1 57 57
+4 * 57
+3 * 57 0 57
cfi=(2)
cfn=(2)
calls=57 0x402d74 645 
* * 741 342 114
+5 * 57
+3 * 57 0 57
+3 +1 57 57
+6 * 57 0 57
+3 * 57 57
+6 * 57 0 57
+3 +1 57 57
+6 * 57 0 57 1 0 0 1
+3 * 57 57
+6 * 57 0 57
+3 +2 57 0 57
+7 * 57
jump=57 +86 * 
* * 
+2 +1 1710 1710
+3 * 1710
+3 * 1710 1710
+4 * 1710
+3 * 1710
+3 * 1710 0 1710
cfi=(2)
cfn=(144)
calls=1710 0x402d9a 770 
* * 18810 8550 5130
+5 * 1710 1710
+4 * 1710 1710
+5 * 1710
+4 * 1710 0 1710
+5 +1 1710 1710
+3 * 1710
+3 * 1710 1710
+4 * 1710
+3 * 1710
+3 * 1710 0 1710
cfi=(2)
cfn=(146)
calls=1710 0x402dba 770 
* * 18810 8550 5130 1 0 0 1
+5 * 1710 1710
+2 * 1710
+4 * 1710 1710
+5 * 1710
+4 * 1710 0 1710
+5 -2 1710 0 1710
+4 * 1710 1710
+3 * 1710
+3 * 1710 1710
+3 * 1710 0 0 0 0 0 0 0 0 1710 58
jcnd=1653/1710 -93 +1 
* * 
-9 * 57 57 0 1 0 0 1
+3 * 57
+3 * 57 57
+3 * 57 0 0 0 0 0 0 0 0 57
jcnd=57/57 -93 +1 
* * 
+2 +4 57 57
+3 * 57
+3 * 57
+4 * 57 57 0 1 0 0 1
+5 * 57
+4 * 57
+3 * 57 0 57
+5 +1 57 57
+3 * 57
+3 * 57
+4 * 57 57
+5 * 57
+4 * 57
+3 * 57 0 57
+5 +1 57 0 57
+7 * 57
jump=57 0x4016ee * 
* * 
+2 +1 1710 1710
+3 * 1710
+3 * 1710 1710
+4 * 1710
+3 * 1710 0 0 1 0 0 1
+3 * 1710 0 1710
cfi=(2)
cfn=(146)
calls=1710 0x402dba 770 
* * 18810 8550 5130
+5 * 1710 1710
+2 * 1710
+4 * 1710 1710
+5 * 1710 0 1710
+5 +1 1710 1710
+3 * 1710
+3 * 1710 1710
+4 * 1710
+3 * 1710
+3 * 1710 0 1710
cfi=(2)
cfn=(144)
calls=1710 0x402d9a 770 
* * 18810 8550 5130
+5 * 1710 1710
+4 * 1710 1710
+5 * 1710 0 1710
+5 +1 1710 1710
+5 * 1710 1710
+5 * 1710 1710
+5 * 1710
+4 * 1710 0 1710
+5 +1 1710 1710
+5 * 1710 1710
+5 * 1710 1710
+5 * 1710
+4 * 1710 0 1710
+5 -4 1710 0 1710
+4 * 1710 1710
+3 * 1710
+3 * 1710 1710
+3 * 1710 0 0 0 0 0 0 0 0 1710 58
jcnd=1653/1710 0x401672 +1 
* * 
-9 * 57 57 0 1 0 0 1
+3 * 57
+3 * 57 57
+3 * 57 0 0 0 0 0 0 0 0 57
jcnd=57/57 0x401672 +1 
* * 
+6 +6 57 57 0 1 0 0 1
+5 * 57 57
+5 * 57 0 57
+5 +2 57 57
+3 +1 57 0 57
+3 * 57 57
+5 * 57 57
+1 * 57 57

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 57
+7 * 57
+7 * 57
+3 * 57
+3 * 57 0 57
cfi=(2)
cfn=(4)
calls=57 0x4030b2 310 
* * 46687 13490 12205 63 19 18 63 19 18 2764 152 226 28
+5 * 57
+7 * 57
+7 * 57
+3 * 57
+3 * 57 0 57
cfi=(2)
cfn=(80)
calls=57 0x402ff4 310 
* * 48911 13393 12028 35 3 15 35 3 15 3367 149 226
+5 * 57 0 0 1 0 0 1
+7 * 57
+7 * 57
+3 * 57
+3 * 57 0 57
cfn=(142)
calls=57 0x401585 -52 
* * 181545 80085 42009 8 0 0 8 0 0 3534 116
+5 * 57 0 57
+8 * 57 57
+6 * 57 0 57
+6 * 57
+7 * 57
+3 * 57 0 57
cfi=(2)
cfn=(148)
calls=57 0x402df4 414 
* * 14080 4431 3219 31 5 0 31 5 0 1471 5 114
+5 * 57
+7 * 57
+3 * 57 0 57 1 0 0 1
cfi=(2)
cfn=(178)
calls=57 0x402e74 414 
* * 14098 4441 3221 7 0 0 7 0 0 1477 6 114
+5 +2 57
+7 * 57
+7 * 57
+3 * 57
+3 * 57 0 57
cfi=(2)
cfn=(4)
calls=57 0x4030b2 310 
* * 46166 13456 12074 2 1 1 2 1 1 2707 60 226
+5 * 57
+7 * 57
+7 * 57
+3 * 57
+3 * 57 0 57
cfi=(2)
cfn=(80)
calls=57 0x402ff4 310 
* * 48308 13346 11874 0 0 0 0 0 0 3301 64 226
+5 * 57 57
+6 * 57 0 0 1 0 0 1
+7 * 57
+7 * 57 0 57
+6 * 57 57
+8 * 57
+3 * 57
+3 * 57 0 57
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=57 0x401719 -33 
* * 85443 35454 19665 4 0 0 4 0 0 1767 58
+5 * 57 0 57
+8 * 57 57
+6 * 57 0 57
+6 * 57
+7 * 57 0 0 1 0 0 1
+3 * 57 0 57
cfi=(2)
cfn=(148)
calls=57 0x402df4 414 
* * 14080 4431 3219 0 0 0 0 0 0 1471 2 114
+5 * 57
+7 * 57
+3 * 57 0 57
cfi=(2)
cfn=(178)
calls=57 0x402e74 414 
* * 14098 4441 3221 0 0 0 0 0 0 1477 3 114
+5 +2 57 57
+7 * 57
+3 * 57 0 57
cfi=(2)
cfn=(2)
calls=57 0x402d74 645 
* * 741 342 114
+5 * 57 57
+6 * 57
+3 * 57
+3 * 57
+3 * 57 57
+7 * 57
+3 * 57 0 0 1 0 0 1
+3 * 57 0 57
cfi=(2)
cfn=(144)
calls=57 0x402d9a 770 
* * 627 285 171
+5 * 57
+3 * 57
+7 * 57
+3 * 57
+3 * 57 0 57
cfi=(2)
cfn=(200)
calls=57 0x402eda 901 
* * 10721 3590 2900 36 15 9 36 15 9 551 29 29
+5 +1 57 57
+7 * 57
+3 * 57 0 57
cfi=(2)
cfn=(10)
calls=57 0x402f54 645 
* * 741 342 114 0 1 0 0 1
+5 * 57 57
+6 * 57
+3 * 57
+3 * 57
+3 * 57 57
+7 * 57 0 0 1 0 0 1
+3 * 57
+3 * 57 0 57
cfi=(2)
cfn=(146)
calls=57 0x402dba 770 
* * 627 285 171
+5 * 57
+3 * 57
+7 * 57
+3 * 57
+3 * 57 0 57
cfi=(2)
cfn=(244)
calls=57 0x402f7a 901 
* * 10325 3569 2887 21 4 8 21 4 8 460 24 29
+5 +1 57 57
+7 * 57
+3 * 57 0 57
cfi=(2)
cfn=(10)
calls=57 0x402f54 645 
* * 741 342 114
+5 * 57 57
+6 * 57
+3 * 57
+3 * 57
+3 * 57 57 0 1 0 0 1
+7 * 57
+3 * 57
+3 * 57 0 57
cfi=(2)
cfn=(146)
calls=57 0x402dba 770 
* * 627 285 171
+5 * 57 57
+2 * 57
+4 * 57 57
+8 * 57 57
+8 * 57 0 57
+8 +1 57 57
+7 * 57
+3 * 57 0 57
cfi=(2)
cfn=(2)
calls=57 0x402d74 645 
* * 741 342 114
+5 * 57 57 0 1 0 0 1
+6 * 57
+3 * 57
+3 * 57
+3 * 57 57
+7 * 57
+3 * 57
+3 * 57 0 57
cfi=(2)
cfn=(144)
calls=57 0x402d9a 770 
* * 627 285 171
+5 * 57 57
+4 * 57 57
+8 * 57
+4 * 57 57
+8 * 57
+3 * 57 0 57
+8 +2 57 0 57
+7 -12 57 57
+8 * 57 57
+7 * 57 0 0 0 0 0 0 0 0 57 1
jcnd=1/57 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 57
+7 * 57
+3 * 57 0 57
cfi=(2)
cfn=(2)
calls=57 0x402d74 645 
* * 741 342 114 2 0 1 2 0 1
+5 * 57
+3 * 57 57
+7 * 57
+3 * 57 0 57
cfi=(2)
cfn=(2)
calls=57 0x402d74 645 
* * 741 342 114 0 1 0 0 1
+5 * 57
+3 * 57 0 0 0 0 0 0 0 0 57
+2 * 57 0 0 1 0 0 1
+5 * 57
jump=57 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 57
+2 * 57 0 0 0 0 0 0 0 0 57
jcnd=57/57 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 57 0 57
+1 * 57
+3 * 57
+4 * 57 0 57
+4 * 57 0 57
+4 * 57 0 57
+5 +1 57 57
+4 * 57
+3 * 57 0 57
cfi=(2)
cfn=(2)
calls=57 0x402d74 645 
* * 741 342 114
+5 * 57
+3 * 57 0 57
+3 +1 57 57 0 1 0 0 1
+6 * 57 0 57
+3 * 57 57
+6 * 57 0 57
+3 +2 57 0 57
+7 * 57
jump=57 +86 * 
* * 
+2 +1 1710 1710
+3 * 1710
+3 * 1710 1710
+4 * 1710
+3 * 1710
+3 * 1710 0 1710
cfi=(2)
cfn=(144)
calls=1710 0x402d9a 770 
* * 18810 8550 5130
+5 * 1710 1710
+4 * 1710 1710
+5 * 1710
+4 * 1710 0 1710
+5 +1 1710 1710
+3 * 1710
+3 * 1710 1710
+4 * 1710
+3 * 1710
+3 * 1710 0 1710
cfi=(2)
cfn=(146)
calls=1710 0x402dba 770 
* * 18810 8550 5130
+5 * 1710 1710
+2 * 1710
+4 * 1710 1710
+5 * 1710
+4 * 1710 0 1710
+5 -2 1710 0 1710
+4 * 1710 1710
+3 * 1710
+3 * 1710 1710
+3 * 1710 0 0 0 0 0 0 0 0 1710 58
jcnd=1653/1710 -93 +1 
* * 
-9 * 57 57 0 1 0 0 1
+3 * 57
+3 * 57 57
+3 * 57 0 0 0 0 0 0 0 0 57
jcnd=57/57 -93 +1 
* * 
+2 +4 57 57
+3 * 57
+3 * 57 0 0 1 0 0 1
+4 * 57 57
+5 * 57
+4 * 57
+3 * 57 0 57
+5 +1 57 57
+3 * 57
+3 * 57
+4 * 57 57
+5 * 57
+4 * 57
+3 * 57 0 57
+5 +1 57 57
+5 * 57 57
+5 * 57 57
+5 * 57 0 0 1 0 0 1
+4 * 57
+3 * 57 0 57
+5 +2 57 57
+3 +1 57 0 57
+3 * 57 57
+5 * 57 57
+1 * 57 57

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 238 0 238 1 0 0 1
+2 0 238 0 238
+2 0 238 0 238
+2 0 238
+3 0 238 0 238
+2 0 238 0 238
+1 0 238 0 238
+1 0 238
+3 0 238
+4 0 238 238
+4 0 238 0 238
+4 0 238
+3 0 238
+4 0 238
+3 0 238
+3 0 238
+3 0 238 0 0 1 0 0 1 0 0 238
+6 0 238
+4 0 238 0 0 0 0 0 0 0 0 238
+6 0 238
+4 0 238 0 0 0 0 0 0 0 0 238
+6 0 238 238
+7 0 238 0 0 0 0 0 0 0 0 238 4
jcnd=114/238 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 114
+2 0 114 0 0 0 0 0 0 0 0 114
+6 0 114 114 0 1 0 0 1
+4 0 114
+3 0 114
+2 0 114 0 0 0 0 0 0 0 0 114
jcnd=114/114 0x3877c78a40 0 
* 0 
+6 0 114 114
+4 0 114
+3 0 114 0 0 0 0 0 0 0 0 114
+6 0 114 114
+5 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
jcnd=114/114 0x3877c7907c 0 
* 0 
+6 0 114 114
+5 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
+6 0 114
+4 0 114 0 0 1 0 0 1 0 0 114
+6 0 114
+4 0 114 114
+7 0 114 0 0 0 0 0 0 0 0 114
+6 0 114 114
+6 0 114
+2 0 114 0 0 0 0 0 0 0 0 114
+6 0 114 114
+4 0 114 0 0 0 0 0 0 0 0 114 1
jcnd=113/114 +70 0 
* 0 
+2 0 1 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +15 0 
* 0 
+15 0 114 114 0 1 0 0 1
+4 0 114 0 0 0 0 0 0 0 0 114
+6 0 114 114
+6 0 114 0 0 1 0 0 1 0 0 114 9
jcnd=6/114 0x3877c78a78 0 
* 0 
+6 0 108 108
+5 0 108 108
+5 0 108 108
+4 0 108 0 0 0 0 0 0 0 0 108
+6 0 108 108
+4 0 108 0 0 0 0 0 0 0 0 108
+6 0 108 108
+9 0 108 0 108
+4 0 108 0 108
+4 0 108 0 0 0 0 0 0 0 0 108 4
jcnd=100/108 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 108
+3 0 108
+4 0 108 108
+4 0 108 108
+4 0 108 0 0 0 0 0 0 0 0 108
-12 0 6
+4 0 6 6
+4 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 114
+7 0 114 0 114
+4 0 114 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
jcnd=106/114 +18 0 
* 0 
+2 0 8 0 8
+8 0 8 0 8
+8 0 8 0 8
+4 0 8
+3 0 8 0 8 1 0 0 1
+4 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+7 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c78b20 0 
* 0 
-30 0 106 0 106
+4 0 106
+3 0 106 0 106
+4 0 106
+4 0 106 0 106
+4 0 106 0 106
+4 0 106
+7 0 106 0 0 0 0 0 0 0 0 106
jcnd=106/106 0x3877c78b20 0 
* 0 
0x3877c78a40 0 114 0 0 1 0 0 1
+5 0 114 114
+4 0 114 114
+7 0 114 0 0 0 0 0 0 0 0 114
jcnd=114/114 +16 0 
* 0 
+16 0 114 0 114
+5 0 114 0 0 0 0 0 0 0 0 114
+6 0 114
+3 0 114
jump=114 0x3877c7878f 0 
* 0 
+10 0 6 0 6
+6 0 6 0 0 1 0 0 1
jump=6 0x3877c78885 0 
* 0 
0x3877c78b20 0 114 114 0 1 0 0 1
+4 0 114
+2 0 114 0 0 0 0 0 0 0 0 114
+6 0 114 114
+7 0 114 0 0 0 0 0 0 0 0 114
jcnd=114/114 +15 0 
* 0 
+15 0 114 0 114 1 0 0 1
+4 0 114 0 0 0 0 0 0 0 0 114
+6 0 114
+4 0 114 114
+1 0 114 114
+1 0 114 114
+2 0 114 114
+2 0 114 114
+2 0 114 114
+2 0 114 114
0x3877c7907c 0 114 114 0 1 1 0 1 1
+4 0 114 0 0 1 0 0 1
+7 0 114
+4 0 114
+3 0 114
+3 0 114 0 0 0 0 0 0 0 0 114
jcnd=114/114 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 228 0 0 1 0 0 1
+7 0 228
+3 0 228
+3 0 228 228 0 0 1 0 0 1
+4 0 228
+4 0 228 0 0 0 0 0 0 0 0 0 0 228 28
jump=24 0x3877c89be8 0 
* 0 
jump=28 0x3877c89bd0 0 
* 0 
jump=24 0x3877c89bb8 0 
* 0 
jump=24 +11 0 
* 0 
jump=28 0x3877c89c48 0 
* 0 
jump=34 0x3877c89c30 0 
* 0 
jump=32 0x3877c89c18 0 
* 0 
jump=34 0x3877c89c00 0 
* 0 
+11 0 24 24
+3 0 24
+4 0 24
+4 0 24 24
+4 0 24
+4 0 24 0 24
+4 0 24
+9 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
+4 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=8/24 0x3877c89c60 0 
* 0 
-40 0 382 382
+4 0 382 0 382
+4 0 382 382
+4 0 382 0 382
+4 0 382 382
+4 0 382 0 382 0 0 1 0 0 1
+4 0 382 382
+4 0 382 0 382
+4 0 382
+4 0 382
+4 0 382 0 0 0 0 0 0 0 0 382 11
jcnd=192/382 0x3877c89c60 0 
* 0 
-32 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
jcnd=10/34 0x3877c89c60 0 
* 0 
-24 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-16 0 34 34 0 1 0 0 1
+4 0 34 0 34
+4 0 34 0 0 1 0 0 1
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34 4
jcnd=10/34 0x3877c89c60 0 
* 0 
+6 0 278
+4 0 278 278
+3 0 278 0 278 0 0 1 0 0 1
+3 0 278 278
+4 0 278 0 278
+4 0 278 278
+4 0 278 0 278 0 0 4 0 0 4
+4 0 278 278
+4 0 278 0 278
+4 0 278
jump=278 -80 0 
* 0 
-30 0 24 24
+3 0 24 0 24
+3 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24 0 0 1 0 0 1
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
-24 0 28 28
+4 0 28 0 28
+4 0 28 28
+4 0 28 0 28
+4 0 28 28
+4 0 28 0 28
+4 0 28
jump=28 -80 0 
* 0 
-16 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
+8 0 24 24
+3 0 24
+4 0 24 0 0 1 0 0 1
+4 0 24
+4 0 24
jump=24 -39 0 
* 0 
+9 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
+6 0 28 28
+3 0 28
+4 0 28
jump=28 -72 0 
* 0 
+8 0 24
+4 0 24 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24
+4 0 24
jump=24 -99 0 
* 0 
+11 0 34 34 0 1 0 0 1
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b78 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b70 0 
* 0 
+9 0 34 34
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b68 0 
* 0 
+9 0 28 28
+3 0 28
+4 0 28
+4 0 28
+4 0 28
jump=28 0x3877c89b60 0 
* 0 
+9 0 228 0 228 1 0 0 1
+3 0 228 228

fn=(104) alloc_perturb
0x3877c77180 0 128 128 0 1 0 0 1
+6 0 128
+2 0 128 0 0 0 0 0 0 0 0 128
+2 0 128 128

fn=(38) _int_malloc
0x3877c79a00 0 238 0 238 1 0 0 1
+2 0 238
+3 0 238 0 238
+2 0 238 0 238
+2 0 238 0 238 0 0 1 0 0 1
+2 0 238
+3 0 238 0 238
+1 0 238 0 238
+1 0 238
+4 0 238
+4 0 238 0 0 0 0 0 0 0 0 238
+6 0 238
+4 0 238
+6 0 238
+3 0 238
+4 0 238
+4 0 238
+4 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
+6 0 238 238 0 1 1 0 1 1
+7 0 238 0 0 0 0 0 0 0 0 238 7
jcnd=116/238 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 110 110
+6 0 110
+4 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+3 0 110
+4 0 110 110
+1 0 110 110
+1 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
-14 0 128
+4 0 128 128
+1 0 128 128
+1 0 128 128
+2 0 128 128
+2 0 128 128
+2 0 128 128
+2 0 128 128
+7 0 133
+7 0 133 0 0 1 0 0 1 0 0 133
+2 0 133
+3 0 133
+5 0 133
+3 0 133
+4 0 133 0 133
+4 0 133
+2 0 133
+5 0 133 133 0 0 2 0 0 2
+4 0 133
+3 0 133 0 0 0 0 0 0 0 0 133
jcnd=133/133 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 133 0 0 1 0 0 1
+3 0 133
+3 0 133
+3 0 133
+4 0 133
+3 0 133
+4 0 133 0 133
+5 0 133
+3 0 133 0 133
+4 0 133 0 133
+4 0 133 0 133
+5 0 133
+3 0 133
+3 0 133
+3 0 133
+3 0 133
+4 0 133
+4 0 133 0 0 1 0 0 1
+4 0 133 0 133
+4 0 133
+4 0 133 0 133
+5 0 133 0 133
+5 0 133
+3 0 133
+3 0 133 0 133
+5 0 133
+5 0 133
+3 0 133 0 133
+4 0 133 0 133
+4 0 133
+6 0 133 0 133
+4 0 133 0 133
+5 0 133 0 0 1 0 0 1
+3 0 133
+3 0 133
+3 0 133
jump=133 +87 0 
* 0 
+8 0 152
+3 0 152
+4 0 152
+2 0 152
+2 0 152
+3 0 152
+3 0 152
+3 0 152
+2 0 152
+2 0 152
+5 0 152
+2 0 152 152
+4 0 152
+3 0 152
+4 0 152 0 152
+4 0 152 0 152
+8 0 152
+7 0 152 0 152
+4 0 152 0 152
+4 0 152 0 152
+4 0 152 0 0 0 0 0 0 0 0 152
-38 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+8 0 5
+7 0 5 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 290 290 0 1 0 0 1
+4 0 290
+3 0 290 0 0 0 0 0 0 0 0 290 1
jcnd=109/290 0x3877c79ef0 0 
* 0 
+6 0 181 181
+4 0 181 181
+4 0 181
+4 0 181 0 0 0 0 0 0 0 0 181
+6 0 181 181 0 1 1 0 1 1
+7 0 181 0 0 0 0 0 0 0 0 181
+6 0 181
+4 0 181
+7 0 181 0 0 0 0 0 0 0 0 181
+2 0 181
+3 0 181 0 0 0 0 0 0 0 0 181 50
jcnd=132/181 0x3877c79e28 0 
* 0 
+6 0 162
+3 0 162 0 162
+4 0 162 0 162
+5 0 162 0 0 0 0 0 0 0 0 162 5
jcnd=5/162 0x3877c7a090 0 
* 0 
+6 0 157
+7 0 157 0 0 0 0 0 0 0 0 157 5
jcnd=152/157 0x3877c79c50 0 
* 0 
+6 0 5 0 0 1 0 0 1
+3 0 5
+4 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5
+3 0 5
+4 0 5
+2 0 5
+2 0 5
+3 0 5
+3 0 5
+8 0 5
+3 0 5
+2 0 5
+2 0 5
+4 0 5 5 0 0 1 0 0 1
+4 0 5
+3 0 5 0 0 1 0 0 1 0 0 5 1
jcnd=5/5 0x3877c79e15 0 
* 0 
0x3877c79e15 0 5 0 5
+4 0 5 0 5
+4 0 5
+3 0 5
jump=5 0x3877c79c73 0 
* 0 
+8 0 132 132 0 1 0 0 1
+4 0 132
+3 0 132 0 0 0 0 0 0 0 0 132 8
jcnd=57/132 0x3877c79ce1 0 
* 0 
+6 0 75 75
+5 0 75 0 0 0 0 0 0 0 0 75 8
jcnd=56/75 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 15 0 0 15
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 109 0 0 1 0 0 1
+7 0 109
+3 0 109 0 0 0 0 0 0 0 0 109
+6 0 109 109 0 1 0 0 1
+4 0 109
+3 0 109
+3 0 109
+2 0 109
+4 0 109
+3 0 109
+3 0 109
+2 0 109
+2 0 109
+2 0 109
+2 0 109 109 0 0 1 0 0 1
+8 0 109
+5 0 109
+5 0 109
+2 0 109 0 0 0 0 0 0 0 0 109
-2 0 58
+2 0 58 0 0 0 0 0 0 0 0 58
+2 0 167
+2 0 167 0 0 0 0 0 0 0 0 167 5
jcnd=111/167 +64 0 
* 0 
+2 0 56
+8 0 56
+3 0 56
+3 0 56 0 0 0 0 0 0 0 0 56
-6 0 6
+3 0 6
+3 0 6 0 0 0 0 0 0 0 0 6
+2 0 62
+2 0 62 62
+8 0 62
+2 0 62 0 0 0 0 0 0 0 0 62
jcnd=6/62 -20 0 
* 0 
+2 0 56
+2 0 56
+5 0 56
+3 0 56
+3 0 56
+2 0 56
+2 0 56
+5 0 56 0 0 0 0 0 0 0 0 56 2
jcnd=2/56 +14 0 
* 0 
+2 0 54
+2 0 54
+4 0 54
+2 0 54
+2 0 54 0 0 0 0 0 0 0 0 54
jcnd=54/54 -8 0 
* 0 
-8 0 1941
+4 0 1941
+2 0 1941
+2 0 1941 0 0 0 0 0 0 0 0 1941 137
jcnd=1780/1941 -8 0 
* 0 
-2 0 111 0 0 1 0 0 1
+2 0 111 0 0 0 0 0 0 0 0 111 3
jcnd=107/111 -8 0 
* 0 
+2 0 167 167 0 0 7 0 0 7
+4 0 167 0 0 1 0 0 1
+3 0 167 0 0 0 0 0 0 0 0 167 53
jcnd=109/167 0x3877c7a1cf 0 
* 0 
+6 0 58
+2 0 58
+4 0 58
+2 0 58
+2 0 58
+2 0 58 0 58
+8 0 58
jump=58 0x3877c79f30 0 
* 0 
0x3877c7a090 0 5 0 0 1 0 0 1
+7 0 5 0 5
+6 0 5
+3 0 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 109 109 0 1 2 0 1 2
+4 0 109 109
+4 0 109
+3 0 109 109
+4 0 109
+4 0 109
+3 0 109
+3 0 109 109
+4 0 109 0 0 0 0 0 0 0 0 109
+6 0 109 109
+4 0 109 0 0 0 0 0 0 0 0 109
+6 0 109 109 0 1 0 0 1
+8 0 109 0 109
+4 0 109 0 109
+4 0 109 0 0 0 0 0 0 0 0 109 5
jcnd=102/109 +38 0 
* 0 
+2 0 7 7 0 0 1 0 0 1
+4 0 7
+3 0 7 0 0 0 0 0 0 0 0 7
+2 0 7 7
+5 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 7
+4 0 7 7
+4 0 7 0 7
+4 0 7
+4 0 7 0 0 0 0 0 0 0 0 7
-4 0 102
+4 0 102 0 0 0 0 0 0 0 0 102
+6 0 109 109
+4 0 109 109 0 1 0 0 1
+4 0 109 0 0 0 0 0 0 0 0 109
+6 0 109
+4 0 109
+7 0 109 0 109 0 0 6 0 0 6
+4 0 109 0 109
+4 0 109 0 109
+4 0 109 0 109
+4 0 109 0 0 0 0 0 0 0 0 109
+2 0 109 0 109
+5 0 109
+7 0 109 0 0 0 0 0 0 0 0 109 3
jcnd=104/109 +18 0 
* 0 
+2 0 5 0 5
+8 0 5 0 5
+8 0 5
+7 0 5 0 5 0 0 1 0 0 1
+4 0 5
+3 0 5
+3 0 5
+4 0 5
+3 0 5
+4 0 5
+3 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5
jump=5 +71 0 
* 0 
-46 0 104 0 0 1 0 0 1
+7 0 104 0 104 0 0 2 0 0 2
+4 0 104
+3 0 104
+3 0 104
+4 0 104
+3 0 104
+4 0 104
+3 0 104
+3 0 104
+4 0 104 0 104
+4 0 104 0 104
+4 0 104
jump=104 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+28 0 109
+4 0 109 0 0 1 0 0 1
+3 0 109
+3 0 109 0 109
cfn=(104)
calls=109 0x3877c77180 0 
* 0 436 218 0 1 0 0 1 0 0 109
+5 0 109
+3 0 109
jump=109 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 238 0 238 1 0 0 1
+5 0 238 0 238
+5 0 238
+3 0 238 0 238
+5 0 238
+4 0 238 238 0 0 1 0 0 1
+7 0 238 238 0 0 1 0 0 1
+3 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
+6 0 238 238 0 0 1 0 0 1
+7 0 238 238 0 1 1 0 1 1
+4 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
+2 0 238 238 0 0 1 0 0 1
+3 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
jcnd=238/238 +97 0 
* 0 
+18 0 238
+3 0 238
+3 0 238 0 238
cfn=(38)
calls=238 0x3877c79a00 0 
* 0 43431 5384 5854 27 20 29 27 20 29 7059 322
+5 0 238
+3 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
+2 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
+2 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
+2 0 238 238
+7 0 238 0 0 0 0 0 0 0 0 238
jcnd=238/238 +13 0 
* 0 
+13 0 238 0 238
+2 0 238 0 0 0 0 0 0 0 0 238
+6 0 238
+3 0 238 238
+4 0 238 238
+5 0 238 238
+5 0 238
+4 0 238 238
+1 0 238 0 0 1 0 0 1
+5 0 238 238 0 0 1 0 0 1
+7 0 238 0 0 0 0 0 0 0 0 238
jcnd=238/238 +14 0 
* 0 
+14 0 238 0 238 1 0 0 1
+3 0 238 0 0 0 0 0 0 0 0 238
+6 0 238
jump=238 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 238 0 238 1 0 0 1
+2 0 238
+3 0 238
+3 0 238 0 238
+2 0 238
+3 0 238 0 238
+1 0 238
+3 0 238 0 238
+1 0 238
+3 0 238
+4 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
+6 0 238
+4 0 238
+3 0 238 0 0 0 0 0 0 0 0 238 7
jcnd=10/238 0x3877c838d1 0 
* 0 
+2 0 228
+3 0 228
+3 0 228
+3 0 228
+3 0 228
+3 0 228 0 0 0 0 0 0 0 0 228
jcnd=228/228 +41 0 
* 0 
+41 0 228 0 0 1 0 0 1
+3 0 228 0 0 0 0 0 0 0 0 228
jcnd=228/228 0x3877c839c0 0 
* 0 
+24 0 228
+3 0 228
+4 0 228
+3 0 228
+3 0 228
+3 0 228
+3 0 228
+3 0 228 0 0 0 0 0 0 0 0 228 110
jcnd=120/228 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 118
+10 0 118 118 0 0 2 0 0 2
+3 0 118
+4 0 118 0 118
+3 0 118
+4 0 118
+4 0 118 0 0 0 0 0 0 0 0 118
jcnd=118/118 -18 0 
* 0 
-18 0 410 410
+3 0 410
+4 0 410 0 410
+3 0 410
+4 0 410
+4 0 410 0 0 0 0 0 0 0 0 410 11
jcnd=292/410 -18 0 
* 0 
+2 0 238
+4 0 238
+3 0 238 238
+1 0 238 238
+1 0 238 238
+2 0 238 238 0 1 0 0 1
+2 0 238 238
0x3877c839c0 0 228 0 0 1 0 0 1
+3 0 228
+3 0 228
+3 0 228
+4 0 228 0 228 0 0 1 0 0 1
cfn=(284)
calls=228 0x3877c89b20 0 
* 0 11490 3872 3416 6 1 7 6 1 7 558 15 228 28
+5 0 228
jump=228 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 238 238 0 1 1 0 1 1
+7 0 238 238 0 0 1 0 0 1
+3 0 238
+3 0 238 0 0 1 0 0 1 0 0 238
+6 0 238
+3 0 238 0 0 0 0 0 0 0 0 238
+6 0 238 238
+4 0 238
+4 0 238
+2 0 238 0 0 0 0 0 0 0 0 238
+2 0 238
+2 0 238
+7 0 238 0 0 0 0 0 0 0 0 238
jcnd=238/238 +14 0 
* 0 
+14 0 238
+2 0 238
cfn=(170)
calls=238 0x3877c78650 0 
* 0 20867 5388 3190 17 1 0 17 1 0 4683 19

totals: 549007 198747 131601 221 51 53 221 51 53 24520 669 1418 28
