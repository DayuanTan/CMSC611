version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1857


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2419502004 - 2420687536
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1344 0 0 1 0 0 1
+3 0 1344 0 0 0 0 0 0 0 0 1344
+2 0 1344
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1344 0x3877c7b8b0 0 
* 0 162977 42847 23501 19 5 0 19 5 0 40237 488
* 0 1344 1344 0 1 1 0 1 1 0 0 0 1344

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1344 0 1344 1 0 0 1
+1 0 1344
+5 0 1344
+3 0 1344 0 1344
+1 0 1344
+4 0 1344 0 0 1 0 0 1
+3 0 1344
+4 0 1344
+3 0 1344 0 1344 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1344 0x3877c7aa50 0 
* 0 414260 59684 62036 48 42 53 48 42 53 71253 3026
* 0 1344 1344 0 1 1 0 1 1 0 0 0 1344
+5 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344
jcnd=1344/1344 +96 0 
* 0 
+96 0 1344 0 0 1 0 0 1
+4 0 1344 1344
+1 0 1344 1344
+1 0 1344 1344

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 664 0 664 1 0 0 1
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664 1 0 0 1
+4 +1 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=664 0x4049d4 -35 
* * 3984 1328 1992 1 0 0 1
+5 * 664 664
+1 * 664 664

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 664 0 664 1 0 0 1
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 664
+4 * 664
+3 * 664 0 664
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=664 0x404520 -35 
* * 3320 1328 1328
+5 * 664 664
+1 * 664 664

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 664 0 664 1 0 0 1
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=664 0x404a28 -35 
* * 3984 1328 1992 1 0 1 1 0 1
+5 * 664 664
+1 * 664 664

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 664
+4 * 664
+3 * 664 0 664
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=664 0x4044cc -35 
* * 3320 1328 1328
+5 * 664 664
+1 * 664 664

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 332 0 332
+1 * 332
+3 * 332
+4 * 332 0 332
+4 * 332 0 332
+4 * 332 0 332
+4 +1 332 332
+4 * 332 332
+4 * 332 332
+4 * 332
+3 * 332
+3 * 332 0 332
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=332 0x403df2 -87 
* * 7968 2656 2988 0 21 4 0 21 4 332 2
+5 * 332 332
+1 * 332 332

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 664 0 664 1 0 0 1
+1 * 664
+3 * 664 0 664
+4 * 664 664
+4 * 664 664
+1 * 664 664

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 332 0 332
+1 * 332
+3 * 332
+4 * 332 0 332
+4 * 332 0 332
+4 * 332 0 332
+4 +1 332 332
+4 * 332 332
+4 * 332 332
+4 * 332
+3 * 332
+3 * 332 0 332
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=332 0x40406a -87 
* * 7968 2656 2988 0 22 13 0 22 13 332
+5 * 332 332
+1 * 332 332

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 664 0 664
+1 * 664
+3 * 664 0 664
+4 * 664 664
+4 * 664 664
+1 * 664 664

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 744 0 744
+1 * 744
+3 * 744 0 744
+4 +1 744 744
+4 * 744 744
+1 * 744 744

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1328 0 1328 1 0 0 1
+1 * 1328
+3 * 1328 0 1328
+4 +1 1328 1328 0 1 0 0 1
+4 * 1328 1328
+1 * 1328 1328

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 744 0 744
+1 * 744
+3 * 744 0 744 0 0 1 0 0 1
+4 +1 744 744
+4 * 744 744
+1 * 744 744

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1328 0 1328 1 0 0 1
+1 * 1328
+3 * 1328
+4 * 1328 0 1328
+4 +1 1328
+4 * 1328
+3 * 1328 0 1328
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1328 0x404ffe 790 
* * 7968 3984 2656 1 0 0 1
+5 * 1328 1328
+3 * 1328 1328
+1 * 1328 1328

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1328 0 1328 1 0 0 1
+1 * 1328
+3 * 1328 0 1328
+4 +1 1328 1328
+4 * 1328 1328
+1 * 1328 1328

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1328 0 1328 1 0 0 1
+1 * 1328
+3 * 1328
+4 * 1328 0 1328
+4 +1 1328
+4 * 1328
+3 * 1328 0 1328 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1328 0x40500c 790 
* * 7968 3984 2656 1 0 0 1
+5 * 1328 1328
+3 * 1328 1328
+1 * 1328 1328

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 664 0 664
+1 * 664
+3 * 664 0 664
+4 * 664 0 664
+4 * 664 664
+4 * 664 664
+1 * 664 664

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672 1 0 0 1
+4 +2 672 672
+4 * 672
+3 * 672 0 672
cfn=(28)
calls=672 0x404992 +12 
* * 4032 1344 1344 1 0 0 1
+5 * 672 672
+4 * 672
+3 * 672
+2 * 672 0 0 0 0 0 0 0 0 672
jcnd=672/672 +7 +3 
* * 
+7 +3 672 672
+4 * 672
+4 * 672
+3 * 672 0 672
cob=(5)
cfi=(8)
cfn=(32)
calls=672 0x387e4bd0b0 0 
* * 217151 32307 34665 22 24 21 22 24 21 35604 1555 672
* * 672 672 0 1 1 0 1 1 0 0 0 672
+5 +1 672 672
+1 * 672 672

fn=(102)
0x4048de 113 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+4 +1 688
+10 * 688 688
+1 * 688 688

fn=(266)
0x40406a 129 332 0 332
+1 * 332
+3 * 332
+4 * 332 0 332
+4 * 332 0 332
+4 * 332 0 332
+4 +1 332 332
+4 * 332
+3 * 332
+5 * 332 0 332
cfi=(16)
cfn=(226)
calls=332 0x402d61 -20 
* * 2324 996 996
+5 * 332
+3 * 332 0 0 0 0 0 0 0 0 332
+2 * 332 332
+4 * 332 332 0 0 22 0 0 22
+2 * 332 0 332 0 0 13 0 0 13
+2 * 332 332
+1 * 332 332

fn=(28)
0x404992 113 688 0 688 1 0 0 1
+1 * 688
+3 * 688 0 688
+4 +1 688
+10 * 688 688
+1 * 688 688

fn=(176)
0x4044cc 86 664 0 664
+1 * 664
+3 * 664 0 664
+4 * 664 664
+1 * 664 664

fn=(224)
0x403df2 129 332 0 332
+1 * 332
+3 * 332
+4 * 332 0 332
+4 * 332 0 332
+4 * 332 0 332
+4 +1 332 332
+4 * 332
+3 * 332
+5 * 332 0 332
cfi=(16)
cfn=(226)
calls=332 0x402d61 -20 
* * 2324 996 996
+5 * 332
+3 * 332 0 0 0 0 0 0 0 0 332 2
+2 * 332 332
+4 * 332 332 0 0 21 0 0 21
+2 * 332 0 332 0 0 4 0 0 4
+2 * 332 332
+1 * 332 332

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672
+3 * 672 0 672
cob=(5)
cfi=(8)
cfn=(164)
calls=672 0x387e4bb2f0 0 
* * 85260 22351 12169 21 5 0 21 5 0 21018 200 672
* * 672 672 0 1 1 0 1 1 0 0 0 672
+5 * 672 672
+1 * 672 672

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +1 672 672
+4 * 672
+3 * 672 0 672
cob=(5)
cfi=(8)
cfn=(164)
calls=672 0x387e4bb2f0 0 
* * 83093 21840 11332 0 1 0 0 1 0 20563 288 672
* * 672 672 0 0 0 0 0 0 0 0 0 672
+5 * 672 672
+1 * 672 672

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672
+4 * 672
+3 * 672 0 672
cfn=(102)
calls=672 0x4048de +12 
* * 4032 1344 1344 1 0 0 1
+5 * 672 672
+4 * 672 0 0 1 0 0 1
+3 * 672
+2 * 672 0 0 0 0 0 0 0 0 672
jcnd=672/672 +7 +3 
* * 
+7 +3 672 672
+4 * 672
+4 * 672
+3 * 672 0 672
cob=(5)
cfi=(8)
cfn=(32)
calls=672 0x387e4bd0b0 0 
* * 218613 32753 31403 30 19 33 30 19 33 36993 1471 672
* * 672 672 0 0 0 0 0 0 0 0 0 672
+5 +1 672 672
+1 * 672 672

fn=(18)
0x404a28 81 664 0 664 1 0 0 1
+1 * 664
+3 * 664 0 664 0 0 1 0 0 1
+4 * 664 0 664
+4 * 664 664
+1 * 664 664

fn=(92)
0x4049d4 81 664 0 664 1 0 0 1
+1 * 664
+3 * 664 0 664
+4 * 664 0 664
+4 * 664 664
+1 * 664 664

fn=(196)
0x404520 86 664 0 664
+1 * 664
+3 * 664 0 664
+4 * 664 664
+1 * 664 664

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 4 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +2 664 664 0 1 0 0 1
+4 * 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=664 0x404a36 450 
* * 315222 104600 100620 24 3 3 24 3 3 12636 840 1324 165
+5 * 664 664
+1 * 664 664

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +2 664 664
+4 * 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=664 0x40439c 107 
* * 333814 111240 107260 7 1 19 7 1 19 12636 758 1324
+5 * 664 664
+1 * 664 664

fn=(116)
0x40439c 107 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +10 664 664
+4 * 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=664 0x4047d7 -26 
* * 324518 107920 103940 7 1 19 7 1 19 12636 758 1324
+5 +1 664 664
+1 * 664 664

fn=(118)
0x4047d7 91 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +2 664 664
+4 * 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=664 0x4049e2 450 
* * 315222 104600 100620 7 1 19 7 1 19 12636 758 1324
+5 * 664 664
+1 * 664 664

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +10 664 664
+4 * 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(52)
calls=664 0x404829 -26 
* * 324518 107920 103940 25 3 3 25 3 3 12636 840 1324 165
+5 +1 664 664
+1 * 664 664

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 4 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +2 664 664
+4 * 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664 1 0 0 1
cfn=(50)
calls=664 0x404484 107 
* * 333814 111240 107260 25 3 3 25 3 3 12636 840 1324 165
+5 * 664 664
+1 * 664 664

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 664 0 664
+1 * 664
+3 * 664 0 664
+1 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=664 0x4043ca -45 
* * 23904 8632 9296 4 0 4 4 0 4
+5 +1 664 664 0 1 0 0 1
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=664 0x404412 +43 
* * 259526 48569 46924 27 23 15 27 23 15 36602 1503 1328
+5 * 664
jump=664 +28 * 
* * 
+28 * 664
+4 * 664 664
+1 * 664 664
+1 * 664 664

fn=(14)
0x4043ca 90 664 0 664 1 0 0 1
+1 * 664
+3 * 664
+4 * 664 0 664 0 0 1 0 0 1
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfi=(4)
cfn=(16)
calls=664 0x404804 +24 
* * 11952 3984 4648 2 0 1 2 0 1
+5 * 664 664
+4 * 664 0 664 0 0 2 0 0 2
+7 * 664 664
+4 * 664 0 664 1 0 0 1
+8 * 664 664
+4 * 664 0 664
+8 +1 664 664
+1 * 664 664

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 664 0 664 1 0 0 1
+1 * 664
+3 * 664 0 664
+2 * 664 0 664
+2 * 664 0 664
+1 * 664 0 0 1 0 0 1
+4 * 664 0 664
+4 * 664 0 664
+4 +2 664 664
+4 * 664
+3 * 664 0 664
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=664 0x4039fc 117 
* * 3984 1992 1328 2 0 0 2
+5 * 664
+3 * 664 0 664
cfi=(3)
cfn=(84)
calls=664 0x4039ed -88 
* * 3984 1992 1328
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=664 0x402d74 645 
* * 8632 3984 1328
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664
+3 * 664
+3 * 664 0 664 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=664 0x403a0a 134 
* * 298355 62018 57381 20 9 28 20 9 28 37761 1400 1328
+5 +4 664 664
+4 * 664
+3 * 664 0 664
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=664 0x40325e 113 
* * 3984 1992 1328 1 0 0 1
+5 * 664
+3 * 664 664
+4 * 664 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=664 0x403a98 565 
* * 16600 6640 5312 2 0 0 2
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=664 0x403a68 547 
* * 16600 6640 5312
+5 * 664
+3 * 664
+3 * 664
+3 * 664
+3 * 664 0 664
cfi=(11)
cfn=(114)
calls=664 0x403ac9 -60 
* * 343774 114560 111244 7 1 19 7 1 19 12636 758 1324
+5 -3 664 664
+4 * 664 0 664
+4 * 664
jump=664 +28 +4 
* * 
+28 +4 664
+4 * 664 664
+1 * 664 664
+2 * 664 664
+2 * 664 664
+1 * 664 664

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672
+5 * 672 0 0 0 0 0 0 0 0 672 8
+2 +1 672 672
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(5)
cfn=(190)
calls=672 0x40452a -65 
* * 91157 24528 14692 0 1 0 0 1 0 20563 288 1344
+5 +1 672 672
+1 * 672 672

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672 1 0 0 1
+4 * 672 0 672
+4 0 672 672
+5 0 672 0 0 0 0 0 0 0 0 672
+2 0 672 672
+4 0 672 672
+4 0 672
+5 0 672
+3 0 672
+3 0 672 0 672
fi=(6) ???
cfi=(5)
cfn=(26)
calls=672 0x404730 99 
* 0 234623 37683 40041 26 25 21 26 25 21 36276 1555 1344
+5 0 672
fi=(6)
jump=672 +7 0 
* 0 
+7 0 672 672
+1 0 672 672

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 664 0 664 1 0 0 1
+1 * 664
+3 * 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+4 * 664 0 664
+4 * 664
+4 * 664 0 0 1 0 0 1
+4 * 664
+3 * 664
+3 * 664 0 664
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=664 0x404468 726 
* * 6640 3320 2656 1 0 0 1
+5 * 664 664
+4 * 664 664
+1 * 664 664

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+3 * 664 0 664
+4 * 664
+4 * 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfi=(10)
cfn=(44)
calls=664 0x404468 726 
* * 6640 3320 2656
+5 * 664 664
+4 * 664 664
+1 * 664 664

fn=(86)
0x403a0a 134 664 0 664
+1 * 664
+3 * 664 0 664
+1 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=664 0x4042e2 -45 
* * 23904 8632 9296 5 0 0 5
+5 +1 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=664 0x40432a +43 
* * 259843 48738 43437 14 9 28 14 9 28 37761 1400 1328
+5 * 664
jump=664 +28 * 
* * 
+28 * 664
+4 * 664 664
+1 * 664 664
+1 * 664 664

fn=(88)
0x4042e2 90 664 0 664 1 0 0 1
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664 1 0 0 1
cfi=(4)
cfn=(90)
calls=664 0x4047b2 +24 
* * 11952 3984 4648 3 0 0 3
+5 * 664 664
+4 * 664 0 664
+7 * 664 664
+4 * 664 0 664
+8 * 664 664
+4 * 664 0 664
+8 +1 664 664
+1 * 664 664

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 664 0 664 1 0 0 1
+1 * 664
+3 * 664 0 664
+1 * 664
+4 * 664 0 664
+4 +2 664 664
+4 * 664 664 0 1 0 0 1
+4 * 664
+3 * 664 664
+4 * 664 664
+3 * 664
+3 * 664
+3 * 664
+4 * 664
+3 * 664 664
+4 * 664 664
+3 -1 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=664 0x403ce6 +11 
* * 103002 28784 18698 22 5 0 22 5 0 21488 194 1328
+5 +1 664 664
+4 * 664
+3 * 664 0 664
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=664 0x4031b8 -82 
* * 15272 5312 5312 1 0 0 1
+5 * 664
jump=664 +28 * 
* * 
+28 * 664
+4 * 664 664
+1 * 664 664
+1 * 664 664

fn=(172)
0x4031b8 79 664 0 664 1 0 0 1
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 664
+4 * 664
+3 * 664 0 664
cfi=(4)
cfn=(174)
calls=664 0x403ccc +42 
* * 9296 3320 3320
+5 * 664 664
+1 * 664 664

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1360 0 1360 1 0 0 1
+1 * 1360
+3 * 1360 0 1360
+4 +1 1360 1360
+4 * 1360 1360 0 0 2 0 0 2
+4 * 1360
+3 * 1360 1360
+4 * 1360 1360
+3 * 1360
+3 * 1360
+3 * 1360
+4 * 1360 1360
+1 * 1360 1360

fn=(106)
0x40325e 113 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352 0 1352
+4 +1 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680 0 0 1 0 0 1
+4 +1 680 680
+4 * 680 680
+1 * 680 680

fn=(82)
0x4039fc 117 680 0 680 1 0 0 1
+1 * 680
+3 * 680 0 680 1 0 0 1
+4 +1 680 680
+4 * 680 680
+1 * 680 680

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 332 0 332
+1 * 332
+3 * 332
+4 * 332 0 332
+4 * 332 0 332
+4 +2 332 332
+4 * 332 332
+4 * 332 332
+4 * 332 332
+4 * 332
+3 * 332 0 0 0 0 0 0 0 0 332 9
jcnd=8/332 +51 +10 
* * 
+2 +3 324 324
+4 * 324 324
+4 * 324 324
+4 -1 324 324
+4 * 324
+3 * 324
+3 * 324 0 324
cfi=(3)
cfn=(222)
calls=324 0x403373 215 
* * 12312 4212 4536 0 20 3 0 20 3 324 2
+5 +2 324 324
+4 * 324 324
+4 * 324
+4 * 324 324
+4 * 324 0 324
+4 * 324
jump=324 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 13022 3954 3450 45 12 9 45 12 9 926 81 47
+5 +2 332 332
+1 * 332 332

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 664 0 664 1 0 0 1
+1 * 664
+3 * 664 0 664
+2 * 664 0 664
+2 * 664 0 664
+1 * 664
+4 * 664 0 664 1 0 0 1
+4 * 664 0 664
+4 +2 664 664
+4 * 664
+3 * 664 0 664
cfn=(6)
calls=664 0x403b08 117 
* * 3984 1992 1328 1 0 1 1 0 1
+5 * 664
+3 * 664 0 664
cfi=(3)
cfn=(8)
calls=664 0x403afa -88 
* * 3984 1992 1328 1 0 0 1
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(10)
calls=664 0x402f54 645 
* * 8632 3984 1328 1 1 0 1 1
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664
+3 * 664
+3 * 664 0 664
cfn=(12)
calls=664 0x403b16 134 
* * 298038 61849 60868 32 23 19 32 23 19 36602 1503 1328
+5 +4 664 664 0 1 0 0 1
+4 * 664
+3 * 664 0 664
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=664 0x40333c 113 
* * 3984 1992 1328 2 0 0 2
+5 * 664
+3 * 664 664
+4 * 664 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(42)
calls=664 0x403ba4 565 
* * 16600 6640 5312 3 0 0 3
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(46)
calls=664 0x403b74 547 
* * 16600 6640 5312
+5 * 664
+3 * 664
+3 * 664
+3 * 664
+3 * 664 0 664 1 0 0 1
cfi=(11)
cfn=(48)
calls=664 0x403bd5 -60 
* * 343774 114560 111244 26 3 3 26 3 3 12636 840 1324 165
+5 -3 664 664
+4 * 664 0 664
+4 * 664
jump=664 +28 +4 
* * 
+28 +4 664
+4 * 664 664
+1 * 664 664
+2 * 664 664
+2 * 664 664
+1 * 664 664

fn=(108)
0x403a98 565 664 0 664 1 0 0 1
+1 * 664
+3 * 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+4 * 664 0 664
+4 * 664
+4 * 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=664 0x404380 726 
* * 6640 3320 2656 1 0 0 1
+5 * 664 664
+4 * 664 664
+1 * 664 664

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 664 0 664
+1 * 664
+3 * 664 0 664
+1 * 664
+4 * 664 0 664 1 0 0 1
+4 +2 664 664
+4 * 664
+3 * 664 0 664
cfn=(40)
calls=664 0x40333c 113 
* * 3984 1992 1328
+5 * 664
+3 * 664 664
+4 * 664 664
+4 * 664 664
+4 * 664 664
+3 -1 664
+3 * 664
+3 * 664 0 664
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=664 0x40334a 148 
* * 20584 6640 7968 2 0 0 2
+5 +1 664 664
+4 * 664
+3 * 664 0 664
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=664 0x4032ca 159 
* * 134666 40872 26490 3 1 0 3 1 0 21024 278 1328
+5 * 664
jump=664 +28 * 
* * 
+28 * 664 0 0 1 0 0 1
+4 * 664 664
+1 * 664 664
+1 * 664 664

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 672 0 672 1 0 0 1
+1 * 672 0 0 1 0 0 1
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 0 672 672
+5 0 672 0 0 0 0 0 0 0 0 672
+2 0 672 672
+4 0 672 672
+4 0 672
+5 0 672
+3 0 672
+3 0 672 0 672
fi=(6)
cfi=(5)
cfn=(100)
calls=672 0x40461a 99 
* 0 236085 38129 36779 33 19 33 33 19 33 37665 1471 1344
+5 0 672
fi=(6)
jump=672 +7 0 
* 0 
+7 0 672 672
+1 0 672 672

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 167494 0 167494
+1 * 167494
+3 * 167494 0 167494
+4 * 167494 0 167494
+4 +1 167494 167494
+4 * 167494 167494
+3 * 167494 167494
+4 * 167494
+4 * 167494
+3 * 167494 167494
+1 * 167494 167494

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 167494 0 167494
+1 * 167494
+3 * 167494 0 167494 1 0 0 1
+4 * 167494 0 167494
+4 +1 167494 167494
+4 * 167494 167494
+3 * 167494 167494
+4 * 167494
+4 * 167494
+3 * 167494 167494
+1 * 167494 167494

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 664
+4 * 664
+3 * 664 0 664
cfi=(4)
cfn=(194)
calls=664 0x403d7e +42 
* * 9296 3320 3320 1 0 0 1
+5 * 664 664
+1 * 664 664

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 664 0 664 1 0 0 1
+1 * 664
+3 * 664 0 664
+1 * 664
+4 * 664 0 664
+4 +2 664 664
+4 * 664 664
+4 * 664
+3 * 664 664
+4 * 664 664
+3 * 664
+3 * 664
+3 * 664
+4 * 664
+3 * 664 664
+4 * 664 664
+3 -1 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(188)
calls=664 0x403d98 +11 
* * 100802 28256 17858 1 1 0 1 1 0 21024 278 1328
+5 +1 664 664
+4 * 664
+3 * 664 0 664
cfn=(192)
calls=664 0x403296 -82 
* * 15272 5312 5312 1 0 0 1
+5 * 664
jump=664 +28 * 
* * 
+28 * 664
+4 * 664 664
+1 * 664 664
+1 * 664 664

fn=(2)
0x402d74 645 2688 0 2688 1 0 0 1
+1 * 2688
+3 * 2688 0 2688 0 0 1 0 0 1
+4 +1 2688 2688
+4 * 2688 2688 0 1 1 0 1 1
+4 * 2688
+3 * 2688 2688
+4 * 2688 2688
+3 * 2688
+3 * 2688
+3 * 2688
+4 * 2688 2688
+1 * 2688 2688

fn=(20)
0x404412 179 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 +2 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(22)
calls=664 0x404236 -14 
* * 242926 40601 42276 26 23 15 26 23 15 36602 1503 1328
+5 * 664 664
+4 * 664 0 664
+3 +1 664 664
+4 * 664 664 0 1 0 0 1
+3 * 664 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+3 * 664 664
+4 * 664
+4 * 664
+3 * 664 664
+4 * 664 0 664
+4 +1 664 664
+1 * 664 664

fn=(94)
0x40432a 179 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 +2 664 664
+4 * 664 664 0 1 0 0 1
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(96)
calls=664 0x403fbe -14 
* * 243243 40770 38789 13 9 28 13 9 28 37761 1400 1328
+5 * 664 664
+4 * 664 0 664
+3 +1 664 664
+4 * 664 664
+3 * 664 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+3 * 664 664
+4 * 664
+4 * 664
+3 * 664 664
+4 * 664 0 664
+4 +1 664 664
+1 * 664 664

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 332 0 332
+1 * 332
+3 * 332 0 0 1 0 0 1
+4 * 332 0 332
+4 * 332 0 332
+4 +2 332 332
+4 * 332 332
+4 * 332 332
+4 * 332 332
+4 * 332
+3 * 332 0 0 0 0 0 0 0 0 332
jcnd=8/332 +51 +10 
* * 
+2 +3 324 324
+4 * 324 324
+4 * 324 324
+4 -1 324 324
+4 * 324
+3 * 324
+3 * 324 0 324
cfi=(3)
cfn=(264)
calls=324 0x4036b1 215 
* * 12312 4212 4536 0 21 9 0 21 9 324
+5 +2 324 324
+4 * 324 324
+4 * 324
+4 * 324 324
+4 * 324 0 324
+4 * 324
jump=324 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11910 3694 3228 20 3 29 20 3 29 705 74 47
+5 +2 332 332
+1 * 332 332

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1352 0 1352 1 0 0 1
+1 * 1352
+3 * 1352 0 1352 1 0 0 1
+4 +1 1352 1352
+4 * 1352 1352
+1 * 1352 1352

fn=(112)
0x403a68 547 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 +1 664 664
+4 * 664 664
+3 * 664 0 664
+4 * 664
+4 * 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfi=(10)
cfn=(110)
calls=664 0x404380 726 
* * 6640 3320 2656
+5 * 664 664
+4 * 664 664
+1 * 664 664

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 664 0 664
+1 * 664
+3 * 664 0 664
+1 * 664
+4 * 664 0 664 1 0 0 1
+4 +2 664 664
+4 * 664
+3 * 664 0 664
cfn=(106)
calls=664 0x40325e 113 
* * 3984 1992 1328
+5 * 664
+3 * 664 664
+4 * 664 664
+4 * 664 664
+4 * 664 664
+3 -1 664
+3 * 664
+3 * 664 0 664
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=664 0x40326c 148 
* * 20584 6640 7968 4 0 0 4
+5 +1 664 664
+4 * 664
+3 * 664 0 664
cfn=(156)
calls=664 0x4031ec 159 
* * 136866 41400 27330 25 5 0 25 5 0 21488 194 1328
+5 * 664
jump=664 +28 * 
* * 
+28 * 664 0 0 1 0 0 1
+4 * 664 664
+1 * 664 664
+1 * 664 664

fn=(158)
0x403ce6 171 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +2 672 672
+5 * 672 0 0 0 0 0 0 0 0 672
+2 +1 672 672
+4 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfi=(5)
cfn=(160)
calls=672 0x4044d6 -65 
* * 93324 25039 15529 22 6 0 22 6 0 21018 200 1344
+5 +1 672 672
+1 * 672 672

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 712 0 712 1 0 0 1
+1 * 712
+3 * 712
+4 * 712 0 712
+4 +1 712 712
+4 * 712
+3 * 712 0 712 1 0 0 1
cfi=(13)
cfn=(64)
calls=712 -33 -66 
* * 4272 2136 1424
+5 * 712 712
+1 * 712 712

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 1328 0 1328
+1 * 1328
+3 * 1328
+4 * 1328 0 1328
+4 +1 1328 1328
+4 * 1328
+3 * 1328 0 1328
cfi=(13)
cfn=(68)
calls=1328 0x404f1a -58 
* * 21248 7968 6640 2 0 1 2 0 1
+5 * 1328 1328
+1 * 1328 1328

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 664 0 664
+1 * 664
+3 * 664 0 664
+1 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +10 664 664
+4 * 664
+3 * 664 0 664
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=664 0x404bc6 288 
* * 9960 3984 3320 3 0 0 3
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(122)
calls=664 0x404bc6 288 
* * 9960 3984 3320
+5 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=664 0x404be0 -36 
* * 280694 92648 88668 4 1 19 4 1 19 12636 758 1324
+5 +1 664
+4 * 664 664
+1 * 664 664
+1 * 664 664

fn=(128)
0x404878 277 712 0 712
+1 * 712
+3 * 712
+4 * 712 0 712 1 0 0 1
+4 +1 712 712
+4 * 712
+3 * 712 0 712
cfi=(13)
cfn=(130)
calls=712 -33 -66 
* * 4272 2136 1424 0 0 1 0 0 1
+5 * 712 712
+1 * 712 712

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1328 0 1328
+1 * 1328
+3 * 1328
+4 * 1328 0 1328
+4 +1 1328 1328
+4 * 1328
+3 * 1328 0 1328
cfi=(13)
cfn=(134)
calls=1328 0x404e98 -58 
* * 21248 7968 6640 2 0 0 2
+5 * 1328 1328
+1 * 1328 1328

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +8 664 0 664
+4 +3 664 664
+4 * 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=664 0x404eb5 -22 
* * 208982 68744 64100 1 1 19 1 1 19 12636 758 1324
+5 +1 664 664
+1 * 664 664

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1328 0 1328 1 0 0 1
+1 * 1328
+3 * 1328
+4 * 1328 0 1328
+4 +1 1328 1328
+4 * 1328
+3 * 1328 0 1328
cfi=(13)
cfn=(124)
calls=1328 0x404d36 -77 
* * 7968 3984 2656 2 0 0 2
+5 * 1328 1328
+1 * 1328 1328

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1328 0 1328 1 0 0 1
+1 * 1328
+3 * 1328
+4 * 1328 0 1328 1 0 0 1
+4 +1 1328 1328
+4 * 1328
+3 * 1328 0 1328
cfi=(13)
cfn=(58)
calls=1328 0x404d8f -77 
* * 7968 3984 2656 1 0 0 1
+5 * 1328 1328
+1 * 1328 1328

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680 1 0 0 1
+4 * 680 0 680
+4 * 680 0 680
+4 +2 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680
+4 * 680 0 680
+4 +1 680 680
+5 * 680 0 0 0 0 0 0 0 0 680
jcnd=8/680 +33 +2 
* * 
+2 +1 672 672
+4 * 672
+8 * 672 672
+4 * 672 672
+4 * 672
+3 * 672 0 0 1 0 0 1
+3 * 672 0 672 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=672 0x3877c83840 0 
* * 191512 61756 60417 11 2 20 11 2 20 12056 844 667 165
* * 672 672 0 1 1 0 1 1 0 0 0 672
+5 +1 680 680
+4 * 680
+8 * 680 680
+4 * 680
+3 +1 680 680
+1 * 680 680

fn=(140)
0x404eb5 368 680 0 680
+1 * 680
+3 * 680
+4 * 680 0 680 1 0 0 1
+4 * 680 0 680
+4 * 680 0 680 0 0 1 0 0 1
+4 +2 680 680
+4 * 680 680
+4 * 680
+3 * 680
+3 * 680
+4 * 680 0 680
+4 +1 680 680
+5 * 680 0 0 0 0 0 0 0 0 680
jcnd=8/680 +33 +2 
* * 
+2 +1 672 672
+4 * 672
+8 * 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cob=(2)
cfi=(9)
cfn=(78)
calls=672 0x3877c83840 0 
* * 191512 61756 60417 0 1 20 0 1 20 12056 762 667
* * 672 672 0 0 0 0 0 0 0 0 0 672
+5 +1 680 680
+4 * 680
+8 * 680 680
+4 * 680
+3 +1 680 680
+1 * 680 680

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 664 0 664
+1 * 664
+3 * 664
+4 * 664 0 664 1 0 0 1
+4 * 664 0 664
+4 * 664 0 664
+4 +8 664 0 664
+4 +3 664 664
+4 * 664 664
+4 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(74)
calls=664 0x404f37 -22 
* * 208982 68744 64100 14 3 2 14 3 2 12636 840 1324 165
+5 +1 664 664
+1 * 664 664

fn=(126)
0x404be0 424 664 0 664
+1 * 664
+3 * 664 0 664
+2 * 664 0 664
+1 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +4 664 664
+4 * 664
+3 * 664 0 664
cfn=(128)
calls=664 0x404878 277 
* * 9960 3984 3320 1 0 0 1
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(132)
calls=664 0x404d44 277 
* * 16600 5976 5312 2 0 0 2
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(132)
calls=664 0x404d44 277 
* * 16600 5976 5312
+5 * 664
+3 * 664
+3 * 664
+3 * 664 0 664
cfn=(138)
calls=664 0x404d5e -49 
* * 218942 72064 68084 1 1 19 1 1 19 12636 758 1324
+5 +1 664
+4 * 664 664
+1 * 664 664
+2 * 664 664
+1 * 664 664

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 664 0 664
+1 * 664
+3 * 664 0 664
+1 * 664
+4 * 664 0 664 1 0 0 1
+4 * 664 0 664
+4 * 664 0 664
+4 +10 664 664
+4 * 664
+3 * 664 0 664
cfn=(56)
calls=664 0x404c38 288 
* * 9960 3984 3320 3 0 0 3
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(56)
calls=664 0x404c38 288 
* * 9960 3984 3320
+5 * 664 664
+4 * 664
+3 * 664
+3 * 664 0 664
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=664 0x404c52 -36 
* * 280694 92648 88668 20 3 3 20 3 3 12636 840 1324 165
+5 +1 664
+4 * 664 664
+1 * 664 664
+1 * 664 664

fn=(60)
0x404c52 424 664 0 664
+1 * 664
+3 * 664 0 664
+2 * 664 0 664
+1 * 664
+4 * 664 0 664
+4 * 664 0 664
+4 * 664 0 664
+4 +4 664 664
+4 * 664
+3 * 664 0 664
cfn=(62)
calls=664 0x40492d 277 
* * 9960 3984 3320 2 0 0 2
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664 1 0 0 1
cfn=(66)
calls=664 0x404d9d 277 
* * 16600 5976 5312 2 0 1 2 0 1
+5 * 664
+3 * 664 664
+4 * 664
+3 * 664 0 664
cfn=(66)
calls=664 0x404d9d 277 
* * 16600 5976 5312
+5 * 664
+3 * 664
+3 * 664
+3 * 664 0 664
cfn=(72)
calls=664 0x404db7 -49 
* * 218942 72064 68084 15 3 2 15 3 2 12636 840 1324 165
+5 +1 664
+4 * 664 664
+1 * 664 664
+2 * 664 664
+1 * 664 664

fn=(282)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(10)
fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1328 0 1328 1 0 0 1
+1 * 1328
+3 * 1328 0 1328
+4 +1 1328 1328
+4 * 1328 1328
+1 * 1328 1328

fn=(110)
0x404380 726 1328 0 1328 1 0 0 1
+1 * 1328
+3 * 1328 0 1328
+4 * 1328 0 1328
+4 * 1328 1328
+4 * 1328 1328
+3 * 1328 1328
+4 * 1328 0 1328
+3 * 1328 1328
+1 * 1328 1328

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1328 0 1328 1 0 0 1
+1 * 1328
+3 * 1328 0 1328
+4 +1 1328 1328
+4 * 1328 1328
+1 * 1328 1328

fn=(44)
0x404468 726 1328 0 1328
+1 * 1328
+3 * 1328 0 1328
+4 * 1328 0 1328
+4 * 1328 1328
+4 * 1328 1328
+3 * 1328 1328
+4 * 1328 0 1328 1 0 0 1
+3 * 1328 1328
+1 * 1328 1328

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 672 0 672 1 0 0 1
+1 * 672
+3 * 672 0 672
+4 * 672 0 672
+4 * 672 672
+1 * 672 672

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 672 0 672 1 0 0 1
+1 * 672
+3 * 672 0 672
+4 * 672 0 672 1 0 0 1
+4 * 672 672
+1 * 672 672

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 +4 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(184)
calls=672 0x40454c -14 
* * 4032 1344 2016 1 0 0 1
+5 +2 672 672
+1 * 672 672

fn=(150)
0x40326c 148 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +3 672 672 0 1 0 0 1
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=672 0x403d1a -29 
* * 12096 4032 4704 3 0 0 3
+5 +1 672 672
+1 * 672 672

fn=(180)
0x40334a 148 672 0 672
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 * 672 0 672
+4 +3 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(182)
calls=672 0x403dcc -29 
* * 12096 4032 4704 2 0 0 2
+5 +1 672 672
+1 * 672 672

fn=(152)
0x403d1a 122 672 0 672 1 0 0 1
+1 * 672
+3 * 672
+4 * 672 0 672
+4 * 672 0 672
+4 +4 672 672
+4 * 672 672
+4 * 672
+3 * 672
+3 * 672 0 672
cfn=(154)
calls=672 0x4044f8 -14 
* * 4032 1344 2016 2 0 0 2
+5 +2 672 672
+1 * 672 672

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2449 442 453 2 2 6 2 2 6 346 52 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 18 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3594 719 678 22 10 5 22 10 5 576 71 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 1 0 1 1 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 332 0 332 1 0 0 1
+1 * 332
+3 * 332
+4 * 332 0 332
+4 * 332 0 332
+4 +1 332 332
+4 * 332
+3 * 332 0 332
cfi=(2)
cfn=(2)
calls=332 0x402d74 645 
* * 4316 1992 664
+5 * 332
+3 * 332 0 332
+3 +1 332 332
+6 * 332 0 332
+3 * 332 332
+6 * 332 0 332
+3 +1 332 332
+6 * 332 0 332 1 0 0 1
+3 * 332 332
+6 * 332 0 332
+3 +2 332 0 332
+7 * 332
jump=332 +86 * 
* * 
+2 +1 55610 55610
+3 * 55610
+3 * 55610 55610
+4 * 55610
+3 * 55610
+3 * 55610 0 55610
cfi=(2)
cfn=(144)
calls=55610 0x402d9a 770 
* * 611710 278050 166830
+5 * 55610 55610
+4 * 55610 55610
+5 * 55610
+4 * 55610 0 55610
+5 +1 55610 55610
+3 * 55610
+3 * 55610 55610
+4 * 55610
+3 * 55610
+3 * 55610 0 55610
cfi=(2)
cfn=(146)
calls=55610 0x402dba 770 
* * 611710 278050 166830 1 0 0 1
+5 * 55610 55610
+2 * 55610
+4 * 55610 55610
+5 * 55610
+4 * 55610 0 55610
+5 -2 55610 0 55610
+4 * 55610 55610
+3 * 55610
+3 * 55610 55610
+3 * 55610 0 0 0 0 0 0 0 0 55610 333
jcnd=55278/55610 -93 +1 
* * 
-9 * 332 332 0 1 0 0 1
+3 * 332
+3 * 332 332
+3 * 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 -93 +1 
* * 
+2 +4 332 332
+3 * 332
+3 * 332
+4 * 332 332 0 1 0 0 1
+5 * 332
+4 * 332
+3 * 332 0 332
+5 +1 332 332
+3 * 332
+3 * 332
+4 * 332 332
+5 * 332
+4 * 332
+3 * 332 0 332
+5 +1 332 0 332
+7 * 332
jump=332 0x4016ee * 
* * 
+2 +1 55610 55610
+3 * 55610
+3 * 55610 55610
+4 * 55610
+3 * 55610 0 0 1 0 0 1
+3 * 55610 0 55610
cfi=(2)
cfn=(146)
calls=55610 0x402dba 770 
* * 611710 278050 166830
+5 * 55610 55610
+2 * 55610
+4 * 55610 55610
+5 * 55610 0 55610
+5 +1 55610 55610
+3 * 55610
+3 * 55610 55610
+4 * 55610
+3 * 55610
+3 * 55610 0 55610
cfi=(2)
cfn=(144)
calls=55610 0x402d9a 770 
* * 611710 278050 166830
+5 * 55610 55610
+4 * 55610 55610
+5 * 55610 0 55610
+5 +1 55610 55610
+5 * 55610 55610
+5 * 55610 55610
+5 * 55610
+4 * 55610 0 55610
+5 +1 55610 55610
+5 * 55610 55610
+5 * 55610 55610
+5 * 55610
+4 * 55610 0 55610
+5 -4 55610 0 55610
+4 * 55610 55610
+3 * 55610
+3 * 55610 55610
+3 * 55610 0 0 0 0 0 0 0 0 55610 333
jcnd=55278/55610 0x401672 +1 
* * 
-9 * 332 332 0 1 0 0 1
+3 * 332
+3 * 332 332
+3 * 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 0x401672 +1 
* * 
+6 +6 332 332 0 1 0 0 1
+5 * 332 332
+5 * 332 0 332
+5 +2 332 332
+3 +1 332 0 332
+3 * 332 332
+5 * 332 332
+1 * 332 332

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 332
+7 * 332
+7 * 332
+3 * 332
+3 * 332 0 332
cfi=(2)
cfn=(4)
calls=332 0x4030b2 310 
* * 364629 104489 99066 66 26 22 66 26 22 24641 1331 1326 165
+5 * 332
+7 * 332
+7 * 332
+3 * 332
+3 * 332 0 332
cfi=(2)
cfn=(80)
calls=332 0x402ff4 310 
* * 364996 104585 97342 35 10 47 35 10 47 25264 1174 1326
+5 * 332 0 0 1 0 0 1
+7 * 332
+7 * 332
+3 * 332
+3 * 332 0 332
cfn=(142)
calls=332 0x401585 -52 
* * 5805020 2566360 1340284 8 0 0 8 0 0 111884 666
+5 * 332 0 332
+8 * 332 332
+6 * 332 0 332
+6 * 332
+7 * 332
+3 * 332 0 332
cfi=(2)
cfn=(148)
calls=332 0x402df4 414 
* * 88685 28004 20305 31 5 0 31 5 0 10744 99 664
+5 * 332
+7 * 332
+3 * 332 0 332 1 0 0 1
cfi=(2)
cfn=(178)
calls=332 0x402e74 414 
* * 87585 27740 19885 7 1 0 7 1 0 10512 140 664
+5 +2 332
+7 * 332
+7 * 332
+3 * 332
+3 * 332 0 332
cfi=(2)
cfn=(4)
calls=332 0x4030b2 310 
* * 364167 104456 98942 4 1 1 4 1 1 24597 1012 1326
+5 * 332
+7 * 332
+7 * 332
+3 * 332
+3 * 332 0 332
cfi=(2)
cfn=(80)
calls=332 0x402ff4 310 
* * 364117 104529 97179 0 0 0 0 0 0 25133 984 1326
+5 * 332 332
+6 * 332 0 0 1 0 0 1
+7 * 332
+7 * 332 0 332
+6 * 332 332
+8 * 332
+3 * 332
+3 * 332 0 332
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=332 0x401719 -33 
* * 2688868 1119504 616690 4 0 0 4 0 0 55942 333
+5 * 332 0 332
+8 * 332 332
+6 * 332 0 332
+6 * 332
+7 * 332 0 0 1 0 0 1
+3 * 332 0 332
cfi=(2)
cfn=(148)
calls=332 0x402df4 414 
* * 88685 28004 20305 0 0 0 0 0 0 10744 95 664
+5 * 332
+7 * 332
+3 * 332 0 332
cfi=(2)
cfn=(178)
calls=332 0x402e74 414 
* * 87585 27740 19885 0 0 0 0 0 0 10512 138 664
+5 +2 332 332
+7 * 332
+3 * 332 0 332
cfi=(2)
cfn=(2)
calls=332 0x402d74 645 
* * 4316 1992 664
+5 * 332 332
+6 * 332
+3 * 332
+3 * 332
+3 * 332 332
+7 * 332
+3 * 332 0 0 1 0 0 1
+3 * 332 0 332
cfi=(2)
cfn=(144)
calls=332 0x402d9a 770 
* * 3652 1660 996
+5 * 332
+3 * 332
+7 * 332
+3 * 332
+3 * 332 0 332
cfi=(2)
cfn=(200)
calls=332 0x402eda 901 
* * 34118 12522 9702 48 32 12 48 32 12 1582 92 47
+5 +1 332 332
+7 * 332
+3 * 332 0 332
cfi=(2)
cfn=(10)
calls=332 0x402f54 645 
* * 4316 1992 664 0 1 0 0 1
+5 * 332 332
+6 * 332
+3 * 332
+3 * 332
+3 * 332 332
+7 * 332 0 0 1 0 0 1
+3 * 332
+3 * 332 0 332
cfi=(2)
cfn=(146)
calls=332 0x402dba 770 
* * 3652 1660 996
+5 * 332
+3 * 332
+7 * 332
+3 * 332
+3 * 332 0 332
cfi=(2)
cfn=(244)
calls=332 0x402f7a 901 
* * 33006 12262 9480 21 24 38 21 24 38 1361 74 47
+5 +1 332 332
+7 * 332
+3 * 332 0 332
cfi=(2)
cfn=(10)
calls=332 0x402f54 645 
* * 4316 1992 664
+5 * 332 332
+6 * 332
+3 * 332
+3 * 332
+3 * 332 332 0 1 0 0 1
+7 * 332
+3 * 332
+3 * 332 0 332
cfi=(2)
cfn=(146)
calls=332 0x402dba 770 
* * 3652 1660 996
+5 * 332 332
+2 * 332
+4 * 332 332
+8 * 332 332
+8 * 332 0 332
+8 +1 332 332
+7 * 332
+3 * 332 0 332
cfi=(2)
cfn=(2)
calls=332 0x402d74 645 
* * 4316 1992 664
+5 * 332 332 0 1 0 0 1
+6 * 332
+3 * 332
+3 * 332
+3 * 332 332
+7 * 332
+3 * 332
+3 * 332 0 332
cfi=(2)
cfn=(144)
calls=332 0x402d9a 770 
* * 3652 1660 996
+5 * 332 332
+4 * 332 332
+8 * 332
+4 * 332 332
+8 * 332
+3 * 332 0 332
+8 +2 332 0 332
+7 -12 332 332
+8 * 332 332
+7 * 332 0 0 0 0 0 0 0 0 332 3
jcnd=1/332 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 332
+7 * 332
+3 * 332 0 332
cfi=(2)
cfn=(2)
calls=332 0x402d74 645 
* * 4316 1992 664 2 0 1 2 0 1
+5 * 332
+3 * 332 332
+7 * 332
+3 * 332 0 332
cfi=(2)
cfn=(2)
calls=332 0x402d74 645 
* * 4316 1992 664 0 1 0 0 1
+5 * 332
+3 * 332 0 0 0 0 0 0 0 0 332 1
+2 * 332 0 0 1 0 0 1
+5 * 332
jump=332 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 332
+2 * 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 332 0 332
+1 * 332
+3 * 332
+4 * 332 0 332
+4 * 332 0 332
+4 * 332 0 332
+5 +1 332 332
+4 * 332
+3 * 332 0 332
cfi=(2)
cfn=(2)
calls=332 0x402d74 645 
* * 4316 1992 664
+5 * 332
+3 * 332 0 332
+3 +1 332 332 0 1 0 0 1
+6 * 332 0 332
+3 * 332 332
+6 * 332 0 332
+3 +2 332 0 332
+7 * 332
jump=332 +86 * 
* * 
+2 +1 55610 55610
+3 * 55610
+3 * 55610 55610
+4 * 55610
+3 * 55610
+3 * 55610 0 55610
cfi=(2)
cfn=(144)
calls=55610 0x402d9a 770 
* * 611710 278050 166830
+5 * 55610 55610
+4 * 55610 55610
+5 * 55610
+4 * 55610 0 55610
+5 +1 55610 55610
+3 * 55610
+3 * 55610 55610
+4 * 55610
+3 * 55610
+3 * 55610 0 55610
cfi=(2)
cfn=(146)
calls=55610 0x402dba 770 
* * 611710 278050 166830
+5 * 55610 55610
+2 * 55610
+4 * 55610 55610
+5 * 55610
+4 * 55610 0 55610
+5 -2 55610 0 55610
+4 * 55610 55610
+3 * 55610
+3 * 55610 55610
+3 * 55610 0 0 0 0 0 0 0 0 55610 333
jcnd=55278/55610 -93 +1 
* * 
-9 * 332 332 0 1 0 0 1
+3 * 332
+3 * 332 332
+3 * 332 0 0 0 0 0 0 0 0 332
jcnd=332/332 -93 +1 
* * 
+2 +4 332 332
+3 * 332
+3 * 332 0 0 1 0 0 1
+4 * 332 332
+5 * 332
+4 * 332
+3 * 332 0 332
+5 +1 332 332
+3 * 332
+3 * 332
+4 * 332 332
+5 * 332
+4 * 332
+3 * 332 0 332
+5 +1 332 332
+5 * 332 332
+5 * 332 332
+5 * 332 0 0 1 0 0 1
+4 * 332
+3 * 332 0 332
+5 +2 332 332
+3 +1 332 0 332
+3 * 332 332
+5 * 332 332
+1 * 332 332

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 1218 1218 0 1 0 0 1
+6 0 1218
+2 0 1218 0 0 0 0 0 0 0 0 1218 33
+2 0 1218 1218

fn=(38) _int_malloc
0x3877c79a00 0 1344 0 1344 1 0 0 1
+2 0 1344
+3 0 1344 0 1344
+2 0 1344 0 1344
+2 0 1344 0 1344 0 0 1 0 0 1
+2 0 1344
+3 0 1344 0 1344
+1 0 1344 0 1344
+1 0 1344
+4 0 1344
+4 0 1344 0 0 0 0 0 0 0 0 1344
+6 0 1344
+4 0 1344
+6 0 1344
+3 0 1344
+4 0 1344
+4 0 1344
+4 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344
+6 0 1344 1344 0 1 1 0 1 1
+7 0 1344 0 0 0 0 0 0 0 0 1344 5
jcnd=1222/1344 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 1218
+4 0 1218 1218
+1 0 1218 1218
+1 0 1218 1218
+2 0 1218 1218
+2 0 1218 1218
+2 0 1218 1218
+2 0 1218 1218
+7 0 1239
+7 0 1239 0 0 1 0 0 1 0 0 1239 5
jcnd=336/1239 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 12 0 0 12
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 336 0 0 1 0 0 1
+3 0 336
+4 0 336
+4 0 336 0 0 1 0 0 1 0 0 336
jcnd=336/336 0x3877c7a1a4 0 
* 0 
+30 0 336 336
+6 0 336
+5 0 336 0 0 0 0 0 0 0 0 336 1
jcnd=335/336 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 913 244 195 8 0 0 8 0 0 189 32
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1238 0 0 1 0 0 1
+3 0 1238
+3 0 1238
+3 0 1238
+4 0 1238
+3 0 1238
+4 0 1238 0 1238
+5 0 1238
+3 0 1238 0 1238
+4 0 1238 0 1238
+4 0 1238 0 1238
+5 0 1238
+3 0 1238
+3 0 1238
+3 0 1238
+3 0 1238
+4 0 1238
+4 0 1238 0 0 1 0 0 1
+4 0 1238 0 1238
+4 0 1238
+4 0 1238 0 1238
+5 0 1238 0 1238
+5 0 1238
+3 0 1238
+3 0 1238 0 1238
+5 0 1238
+5 0 1238
+3 0 1238 0 1238
+4 0 1238 0 1238
+4 0 1238
+6 0 1238 0 1238
+4 0 1238 0 1238
+5 0 1238 0 0 1 0 0 1
+3 0 1238
+3 0 1238
+3 0 1238
jump=1238 +87 0 
* 0 
+8 0 964
+3 0 964
+4 0 964
+2 0 964
+2 0 964
+3 0 964
+3 0 964
+3 0 964
+2 0 964
+2 0 964
+5 0 964
+2 0 964 964 0 0 2 0 0 2
+4 0 964
+3 0 964
+4 0 964 0 964
+4 0 964 0 964
+8 0 964
+7 0 964 0 964
+4 0 964 0 964
+4 0 964 0 964
+4 0 964 0 0 0 0 0 0 0 0 964
-38 0 761
+3 0 761
+4 0 761 0 761
+4 0 761 0 761
+8 0 761
+7 0 761 0 761
+4 0 761 0 761 0 0 1 0 0 1
+4 0 761 0 761
+4 0 761 0 0 0 0 0 0 0 0 761
+6 0 2964 2964 0 1 0 0 1
+4 0 2964
+3 0 2964 0 0 0 0 0 0 0 0 2964 200
jcnd=1182/2964 0x3877c79ef0 0 
* 0 
+6 0 1782 1782
+4 0 1782 1782 0 0 1 0 0 1
+4 0 1782
+4 0 1782 0 0 0 0 0 0 0 0 1782
+6 0 1782 1782 0 1 1 0 1 1
+7 0 1782 0 0 0 0 0 0 0 0 1782 2
+6 0 1782
+4 0 1782
+7 0 1782 0 0 0 0 0 0 0 0 1782 9
jcnd=497/1782 +11 0 
* 0 
+2 0 1285
+3 0 1285 0 0 0 0 0 0 0 0 1285 599
jcnd=866/1285 0x3877c79e28 0 
* 0 
+6 0 1746
+3 0 1746 0 1746
+4 0 1746 0 1746
+5 0 1746 0 0 0 0 0 0 0 0 1746 14
jcnd=21/1746 0x3877c7a090 0 
* 0 
+6 0 1725
+7 0 1725 0 0 0 0 0 0 0 0 1725 322
jcnd=964/1725 0x3877c79c50 0 
* 0 
+6 0 761 0 0 1 0 0 1
+3 0 761
+4 0 761
+4 0 761 0 0 0 0 0 0 0 0 761 10
jcnd=384/761 0x3877c79db0 0 
* 0 
+6 0 377
+3 0 377
+4 0 377
+2 0 377
+2 0 377
+3 0 377
+3 0 377
+8 0 377
+3 0 377
+2 0 377
+2 0 377
+4 0 377 377 0 0 3 0 0 3
+4 0 377
+3 0 377 0 0 1 0 0 1 0 0 377 33
jcnd=377/377 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 761 0 761
+4 0 761 0 761
+4 0 761
+3 0 761
jump=761 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 24
jcnd=443/866 0x3877c79ce1 0 
* 0 
+6 0 423 423
+5 0 423 0 0 0 0 0 0 0 0 423 9
jcnd=387/423 0x3877c79ce1 0 
* 0 
+6 0 36 0 0 1 0 0 1
+3 0 36
+3 0 36
+3 0 36
+7 0 36 0 36
+4 0 36 0 36
+4 0 36
+3 0 36 0 36
+4 0 36 0 36 0 0 17 0 0 17
+4 0 36 0 36
+4 0 36 0 0 0 0 0 0 0 0 36 6
jcnd=9/36 +18 0 
* 0 
+2 0 27 0 27 0 0 1 0 0 1
+8 0 27 0 27
+8 0 27
+7 0 27 0 27 1 0 0 1
+4 0 27
+3 0 27
+3 0 27
+3 0 27
+4 0 27
+3 0 27
+4 0 27
+3 0 27
+3 0 27
+4 0 27 0 27
+4 0 27 0 27 0 0 2 0 0 2
+4 0 27
+4 0 27
+3 0 27 0 27
cfn=(104)
calls=27 0x3877c77180 0 
* 0 108 54 0 0 0 0 0 0 0 27
-56 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9 0 0 2 0 0 2
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
+5 0 36
+3 0 36
jump=36 0x3877c79ae3 0 
* 0 
+55 0 1182 0 0 1 0 0 1
+7 0 1182
+3 0 1182 0 0 0 0 0 0 0 0 1182 8
jcnd=336/1182 0x3877c7a0b0 0 
* 0 
+6 0 1176 1176 0 1 0 0 1
+4 0 1176
+3 0 1176
+3 0 1176
+2 0 1176
+4 0 1176
+3 0 1176
+3 0 1176
+2 0 1176
+2 0 1176
+2 0 1176
+2 0 1176 1176 0 0 1 0 0 1
+8 0 1176
+5 0 1176
+5 0 1176
+2 0 1176 0 0 0 0 0 0 0 0 1176
-2 0 574
+2 0 574 0 0 0 0 0 0 0 0 574
+2 0 1750
+2 0 1750 0 0 0 0 0 0 0 0 1750 42
jcnd=1091/1750 +64 0 
* 0 
+2 0 659
+8 0 659
+3 0 659
+3 0 659 0 0 0 0 0 0 0 0 659
-6 0 417
+3 0 417
+3 0 417 0 0 0 0 0 0 0 0 417
+2 0 1076
+2 0 1076 1076
+8 0 1076
+2 0 1076 0 0 0 0 0 0 0 0 1076 23
jcnd=417/1076 -20 0 
* 0 
+2 0 659
+2 0 659
+5 0 659
+3 0 659
+3 0 659
+2 0 659
+2 0 659
+5 0 659 0 0 0 0 0 0 0 0 659
+2 0 659
+2 0 659
+4 0 659
+2 0 659
+2 0 659 0 0 0 0 0 0 0 0 659
jcnd=659/659 -8 0 
* 0 
-8 0 9851
+4 0 9851
+2 0 9851
+2 0 9851 0 0 0 0 0 0 0 0 9851 624
jcnd=8210/9851 -8 0 
* 0 
-2 0 1091 0 0 1 0 0 1
+2 0 1091 0 0 0 0 0 0 0 0 1091 23
jcnd=982/1091 -8 0 
* 0 
+2 0 1750 1750 0 0 6 0 0 6
+4 0 1750 0 0 1 0 0 1
+3 0 1750 0 0 0 0 0 0 0 0 1750 615
jcnd=1176/1750 0x3877c7a1cf 0 
* 0 
+6 0 574
+2 0 574
+4 0 574
+2 0 574
+2 0 574
+2 0 574 0 574
+8 0 574
jump=574 0x3877c79f30 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 336 336
+4 0 336
+4 0 336
+2 0 336
+5 0 336 336 0 1 1 0 1 1
+4 0 336
+3 0 336 0 0 0 0 0 0 0 0 336 2
jcnd=330/336 0x3877c79f00 0 
* 0 
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6 2
+6 0 6
+3 0 6 6
+4 0 6 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6 0 0 0 0 0 0 0 0 6
+2 0 6 6
+4 0 6
+3 0 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x3877c7a650 0 
* 0 
+26 0 6 0 0 1 0 0 1
+3 0 6 6
+4 0 6
+3 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6 2
+6 0 6 6
+8 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6
+2 0 6 6 0 1 0 0 1
+4 0 6
+3 0 6 0 0 0 0 0 0 0 0 6 6
jcnd=6/6 0x3877c7a659 0 
* 0 
+6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6
+7 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6
+4 0 6
+7 0 6 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x3877c7a285 0 
* 0 
+31 0 336 0 0 1 0 0 1
+3 0 336 0 336
+4 0 336
jump=336 0x3877c79b99 0 
* 0 
+36 0 1176 1176 0 1 1 0 1 1
+4 0 1176 1176 0 0 2 0 0 2
+4 0 1176
+3 0 1176 1176
+4 0 1176
+4 0 1176
+3 0 1176
+3 0 1176 1176
+4 0 1176 0 0 0 0 0 0 0 0 1176
+6 0 1176 1176 0 0 1 0 0 1
+4 0 1176 0 0 0 0 0 0 0 0 1176
+6 0 1176 1176 0 1 0 0 1
+8 0 1176 0 1176
+4 0 1176 0 1176
+4 0 1176 0 0 0 0 0 0 0 0 1176 235
jcnd=418/1176 +38 0 
* 0 
+2 0 758 758 0 0 1 0 0 1
+4 0 758
+3 0 758 0 0 0 0 0 0 0 0 758
+2 0 758 758
+5 0 758 0 0 0 0 0 0 0 0 758
+6 0 758 758
+4 0 758 0 758
+4 0 758 758
+4 0 758 0 758
+4 0 758
+4 0 758 0 0 0 0 0 0 0 0 758
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=20/418 0x3877c7a2e3 0 
* 0 
+6 0 1156 1156
+4 0 1156 1156 0 1 0 0 1
+4 0 1156 0 0 0 0 0 0 0 0 1156
+6 0 1156
+4 0 1156
+7 0 1156 0 1156 0 0 11 0 0 11
+4 0 1156 0 1156
+4 0 1156 0 1156
+4 0 1156 0 1156
+4 0 1156 0 0 0 0 0 0 0 0 1156 5
jcnd=330/1156 +7 0 
* 0 
+2 0 826 0 826
+5 0 826
+7 0 826 0 0 0 0 0 0 0 0 826 4
jcnd=435/826 +18 0 
* 0 
-7 0 330
+7 0 330 0 0 0 0 0 0 0 0 330 5
jcnd=305/330 +18 0 
* 0 
+2 0 416 0 416 0 0 14 0 0 14
+8 0 416 0 416 1 0 0 1
+8 0 416
+7 0 416 0 416 0 0 3 0 0 3
+4 0 416
+3 0 416
+3 0 416
+4 0 416
+3 0 416
+4 0 416
+3 0 416
+3 0 416
+4 0 416 0 416
+4 0 416 0 416
+4 0 416
jump=416 +71 0 
* 0 
-46 0 746
+7 0 746 0 746
+4 0 746
+3 0 746
+3 0 746
+4 0 746
+3 0 746
+4 0 746
+3 0 746
+3 0 746
+4 0 746 0 746
+4 0 746 0 746 0 0 1 0 0 1
+4 0 746
jump=746 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 20
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 +7 0 
* 0 
+7 0 1182
+4 0 1182 0 0 1 0 0 1
+3 0 1182
+3 0 1182 0 1182
cfn=(104)
calls=1182 0x3877c77180 0 
* 0 4728 2364 0 1 0 0 1 0 0 1182 33
+5 0 1182
+3 0 1182
jump=1182 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 6 6 0 1 0 0 1
+4 0 6
jump=6 0x3877c7a10e 0 
* 0 
+5 0 6 6
+5 0 6 0 0 0 0 0 0 0 0 6
+2 0 6 6
+4 0 6 0 6
+4 0 6 6
+4 0 6 0 6
+4 0 6
jump=6 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1344 0 1344 1 0 0 1
+5 0 1344 0 1344
+5 0 1344
+3 0 1344 0 1344
+5 0 1344
+4 0 1344 1344 0 0 1 0 0 1
+7 0 1344 1344 0 0 1 0 0 1
+3 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344
+6 0 1344 1344 0 0 1 0 0 1
+7 0 1344 1344 0 1 1 0 1 1
+4 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344
+2 0 1344 1344 0 0 1 0 0 1
+3 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344
jcnd=1344/1344 +97 0 
* 0 
+18 0 1344
+3 0 1344
+3 0 1344 0 1344
cfn=(38)
calls=1344 0x3877c79a00 0 
* 0 357812 44900 53972 44 36 53 44 36 53 57813 2932
+5 0 1344
+3 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344
+2 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344
+2 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344 11
+2 0 1344 1344
+7 0 1344 0 0 0 0 0 0 0 0 1344
jcnd=1344/1344 +13 0 
* 0 
+13 0 1344 0 1344
+2 0 1344 0 0 0 0 0 0 0 0 1344 83
+6 0 1344
+3 0 1344 1344
+4 0 1344 1344
+5 0 1344 1344
+5 0 1344
+4 0 1344 1344
+1 0 1344 0 0 1 0 0 1
+5 0 1344 1344 0 0 1 0 0 1
+7 0 1344 0 0 0 0 0 0 0 0 1344
jcnd=1344/1344 +14 0 
* 0 
+14 0 1344 0 1344 1 0 0 1
+3 0 1344 0 0 0 0 0 0 0 0 1344
+6 0 1344
jump=1344 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1344 0 1344 1 0 0 1
+2 0 1344
+3 0 1344
+3 0 1344 0 1344
+2 0 1344
+3 0 1344 0 1344
+1 0 1344
+3 0 1344 0 1344
+1 0 1344
+3 0 1344
+4 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344
+6 0 1344
+4 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344 4
jcnd=10/1344 0x3877c838d1 0 
* 0 
+2 0 1334
+3 0 1334
+3 0 1334
+3 0 1334
+3 0 1334
+3 0 1334 0 0 0 0 0 0 0 0 1334
jcnd=1334/1334 +41 0 
* 0 
+41 0 1334 0 0 1 0 0 1
+3 0 1334 0 0 0 0 0 0 0 0 1334
jcnd=1334/1334 0x3877c839c0 0 
* 0 
+24 0 1334
+3 0 1334
+4 0 1334
+3 0 1334
+3 0 1334
+3 0 1334
+3 0 1334
+3 0 1334 0 0 0 0 0 0 0 0 1334 732
jcnd=674/1334 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 670
+10 0 670 670 0 0 2 0 0 2
+3 0 670
+4 0 670 0 670
+3 0 670
+4 0 670
+4 0 670 0 0 0 0 0 0 0 0 670
jcnd=670/670 -18 0 
* 0 
-18 0 2066 2066
+3 0 2066
+4 0 2066 0 2066
+3 0 2066
+4 0 2066
+4 0 2066 0 0 0 0 0 0 0 0 2066 8
jcnd=1396/2066 -18 0 
* 0 
+2 0 1344
+4 0 1344
+3 0 1344 1344
+1 0 1344 1344
+1 0 1344 1344
+2 0 1344 1344 0 1 0 0 1
+2 0 1344 1344
0x3877c839c0 0 1334 0 0 1 0 0 1
+3 0 1334
+3 0 1334
+3 0 1334
+4 0 1334 0 1334 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1334 0x3877c89b20 0 
* 0 307002 114056 111388 6 1 39 6 1 39 14676 862 1334 165
+5 0 1334
jump=1334 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1344 1344 0 1 1 0 1 1
+7 0 1344 1344 0 0 1 0 0 1
+3 0 1344
+3 0 1344 0 0 1 0 0 1 0 0 1344
+6 0 1344
+3 0 1344 0 0 0 0 0 0 0 0 1344
+6 0 1344 1344
+4 0 1344
+4 0 1344
+2 0 1344 0 0 0 0 0 0 0 0 1344
+2 0 1344
+2 0 1344
+7 0 1344 0 0 0 0 0 0 0 0 1344
jcnd=1344/1344 +14 0 
* 0 
+14 0 1344
+2 0 1344
cfn=(170) _int_free
calls=1344 0x3877c78650 0 
* 0 142817 38815 23501 17 3 0 17 3 0 34861 488

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=16/20 +18 0 
* 0 
+2 0 4 0 4
+8 0 4 0 4
+8 0 4
+3 0 4 0 4
+4 0 4 0 4
+4 0 4
+4 0 4 0 4
+4 0 4 0 4
+4 0 4
+3 0 4
+3 0 4 0 0 0 0 0 0 0 0 4 2
jcnd=2/4 0x3877c75f78 0 
* 0 
-29 0 16
+3 0 16 0 16
+4 0 16 0 16
+4 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 7
jcnd=5/16 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=9/12 +15 0 
* 0 
+2 0 3 3
+4 0 3
+3 0 3 0 0 0 0 0 0 0 0 3
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20
+6 0 20 0 0 0 0 0 0 0 0 20 9
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1344 0 1344 1 0 0 1
+2 0 1344 0 1344
+2 0 1344 0 1344
+2 0 1344
+3 0 1344 0 1344
+2 0 1344 0 1344
+1 0 1344 0 1344
+1 0 1344
+3 0 1344
+4 0 1344 1344
+4 0 1344 0 1344
+4 0 1344
+3 0 1344
+4 0 1344
+3 0 1344
+3 0 1344
+3 0 1344 0 0 1 0 0 1 0 0 1344
+6 0 1344
+4 0 1344 0 0 0 0 0 0 0 0 1344
+6 0 1344
+4 0 1344 0 0 0 0 0 0 0 0 1344
+6 0 1344 1344
+7 0 1344 0 0 0 0 0 0 0 0 1344 2
jcnd=1220/1344 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1220
+2 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220 1220 0 1 0 0 1
+4 0 1220
+3 0 1220
+2 0 1220 0 0 0 0 0 0 0 0 1220
jcnd=1220/1220 0x3877c78a40 0 
* 0 
+6 0 1220 1220
+4 0 1220
+3 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220 1220
+5 0 1220
+4 0 1220 0 0 0 0 0 0 0 0 1220
jcnd=1220/1220 0x3877c7907c 0 
* 0 
+6 0 1220 1220
+5 0 1220
+4 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220
+4 0 1220 0 0 1 0 0 1 0 0 1220
+6 0 1220
+4 0 1220 1220
+7 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220 1220
+6 0 1220
+2 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220 1220
+4 0 1220 0 0 0 0 0 0 0 0 1220 5
jcnd=1216/1220 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1220 1220 0 1 0 0 1
+4 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220 1220 0 0 1 0 0 1
+6 0 1220 0 0 1 0 0 1 0 0 1220 60
jcnd=45/1220 0x3877c78a78 0 
* 0 
+6 0 1175 1175
+5 0 1175 1175
+5 0 1175 1175
+4 0 1175 0 0 0 0 0 0 0 0 1175
+6 0 1175 1175
+4 0 1175 0 0 0 0 0 0 0 0 1175
+6 0 1175 1175
+9 0 1175 0 1175
+4 0 1175 0 1175
+4 0 1175 0 0 0 0 0 0 0 0 1175 355
jcnd=743/1175 +16 0 
* 0 
+2 0 432 432
+5 0 432
+3 0 432 0 0 1 0 0 1 0 0 432 2
+6 0 1175
+3 0 1175
+4 0 1175 1175
+4 0 1175 1175
+4 0 1175 0 0 0 0 0 0 0 0 1175
-12 0 45
+4 0 45 45
+4 0 45 45
+4 0 45 0 0 0 0 0 0 0 0 45
+6 0 1220
+7 0 1220 0 1220
+4 0 1220 0 1220
+4 0 1220 0 0 0 0 0 0 0 0 1220 62
jcnd=441/1220 +18 0 
* 0 
+2 0 779 0 779
+8 0 779 0 779
+8 0 779 0 779
+4 0 779
+3 0 779 0 779 1 0 0 1
+4 0 779
+4 0 779 0 779
+4 0 779 0 779
+4 0 779
+7 0 779 0 0 0 0 0 0 0 0 779
jcnd=779/779 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1220 0 0 1 0 0 1
+5 0 1220 1220
+4 0 1220 1220
+7 0 1220 0 0 0 0 0 0 0 0 1220
jcnd=1220/1220 +16 0 
* 0 
+16 0 1220 0 1220
+5 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220
+3 0 1220
jump=1220 0x3877c7878f 0 
* 0 
+10 0 45 0 45
+6 0 45 0 0 1 0 0 1
jump=45 0x3877c78885 0 
* 0 
0x3877c78b20 0 1220 1220 0 1 0 0 1
+4 0 1220
+2 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220 1220
+7 0 1220 0 0 0 0 0 0 0 0 1220
jcnd=1220/1220 +15 0 
* 0 
+15 0 1220 0 1220 1 0 0 1
+4 0 1220 0 0 0 0 0 0 0 0 1220
+6 0 1220
+4 0 1220 1220
+1 0 1220 1220
+1 0 1220 1220
+2 0 1220 1220
+2 0 1220 1220
+2 0 1220 1220
+2 0 1220 1220
0x3877c7907c 0 1220 1220 0 1 1 0 1 1
+4 0 1220 0 0 1 0 0 1
+7 0 1220
+4 0 1220
+3 0 1220
+3 0 1220 0 0 0 0 0 0 0 0 1220
jcnd=1220/1220 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1334 0 0 1 0 0 1
+7 0 1334
+3 0 1334
+3 0 1334 1334 0 0 1 0 0 1
+4 0 1334
+4 0 1334 0 0 0 0 0 0 0 0 0 0 1334 165
jump=160 0x3877c89be8 0 
* 0 
jump=170 0x3877c89bd0 0 
* 0 
jump=160 0x3877c89bb8 0 
* 0 
jump=168 +11 0 
* 0 
jump=168 0x3877c89c48 0 
* 0 
jump=170 0x3877c89c30 0 
* 0 
jump=168 0x3877c89c18 0 
* 0 
jump=170 0x3877c89c00 0 
* 0 
+11 0 168 168
+3 0 168
+4 0 168
+4 0 168 168
+4 0 168
+4 0 168 0 168
+4 0 168
+9 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-40 0 13670 13670
+4 0 13670 0 13670 0 0 14 0 0 14
+4 0 13670 13670
+4 0 13670 0 13670 0 0 3 0 0 3
+4 0 13670 13670
+4 0 13670 0 13670 0 0 4 0 0 4
+4 0 13670 13670
+4 0 13670 0 13670 0 0 15 0 0 15
+4 0 13670
+4 0 13670
+4 0 13670 0 0 0 0 0 0 0 0 13670 858
jcnd=1298/13670 0x3877c89c60 0 
* 0 
-32 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
jcnd=10/170 0x3877c89c60 0 
* 0 
-24 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-16 0 170 170 0 1 0 0 1
+4 0 170 0 170
+4 0 170 0 0 1 0 0 1
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170 4
jcnd=10/170 0x3877c89c60 0 
* 0 
+6 0 13012
+4 0 13012 13012
+3 0 13012 0 13012
+3 0 13012 13012
+4 0 13012 0 13012 0 0 1 0 0 1
+4 0 13012 13012
+4 0 13012 0 13012 0 0 2 0 0 2
+4 0 13012 13012
+4 0 13012 0 13012
+4 0 13012
jump=13012 -80 0 
* 0 
-30 0 160 160
+3 0 160 0 160
+3 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
jump=160 -80 0 
* 0 
-24 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
jump=170 -80 0 
* 0 
-16 0 160 160
+4 0 160 0 160
+4 0 160 160
+4 0 160 0 160
+4 0 160
jump=160 -80 0 
* 0 
+8 0 160 160
+3 0 160
+4 0 160 0 0 1 0 0 1
+4 0 160
+4 0 160
jump=160 -39 0 
* 0 
+9 0 170
+3 0 170 0 0 0 0 0 0 0 0 170
+6 0 170 170
+3 0 170
+4 0 170
jump=170 -72 0 
* 0 
+8 0 160
+4 0 160 160
+3 0 160 0 0 0 0 0 0 0 0 160
+2 0 160
+4 0 160
jump=160 -99 0 
* 0 
+11 0 170 170 0 1 0 0 1
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b78 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b70 0 
* 0 
+9 0 170 170
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b68 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b60 0 
* 0 
+9 0 1334 0 1334 1 0 0 1
+3 0 1334 1334

totals: 10456131 4267090 2466994 238 103 122 238 103 122 313914 6142 8054 165
