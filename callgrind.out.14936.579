version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 579


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 724615214 - 726006855
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1480 0 0 1 0 0 1
+3 0 1480 0 0 0 0 0 0 0 0 1480
+2 0 1480
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1480 0x3877c7b8b0 0 
* 0 172131 44595 23633 23 6 0 23 6 0 42267 650
* 0 1480 1480 0 1 1 0 1 1 0 0 0 1480

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1480 0 1480 1 0 0 1
+1 0 1480
+5 0 1480
+3 0 1480 0 1480
+1 0 1480
+4 0 1480 0 0 1 0 0 1
+3 0 1480
+4 0 1480
+3 0 1480 0 1480 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1480 0x3877c7aa50 0 
* 0 416120 60471 61844 50 39 53 50 39 53 69617 2484
* 0 1480 1480 0 1 1 0 1 1 0 0 0 1480
+5 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480
jcnd=1480/1480 +96 0 
* 0 
+96 0 1480 0 0 1 0 0 1
+4 0 1480 1480
+1 0 1480 1480
+1 0 1480 1480

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 812 0 812
+1 * 812
+3 * 812 0 812
+4 +1 812 812
+4 * 812 812
+1 * 812 812

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1464 0 1464 1 0 0 1
+1 * 1464
+3 * 1464 0 1464
+4 +1 1464 1464 0 1 0 0 1
+4 * 1464 1464
+1 * 1464 1464

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 812 0 812
+1 * 812
+3 * 812 0 812 0 0 1 0 0 1
+4 +1 812 812
+4 * 812 812
+1 * 812 812

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1464 0 1464 1 0 0 1
+1 * 1464
+3 * 1464
+4 * 1464 0 1464
+4 +1 1464
+4 * 1464
+3 * 1464 0 1464
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1464 0x404ffe 790 
* * 8784 4392 2928 1 0 0 1
+5 * 1464 1464
+3 * 1464 1464
+1 * 1464 1464

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1464 0 1464 1 0 0 1
+1 * 1464
+3 * 1464 0 1464
+4 +1 1464 1464
+4 * 1464 1464
+1 * 1464 1464

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1464 0 1464 1 0 0 1
+1 * 1464
+3 * 1464
+4 * 1464 0 1464
+4 +1 1464
+4 * 1464
+3 * 1464 0 1464 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1464 0x40500c 790 
* * 8784 4392 2928 1 0 0 1
+5 * 1464 1464
+3 * 1464 1464
+1 * 1464 1464

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 732 0 732
+1 * 732
+3 * 732 0 732
+4 * 732 0 732
+4 * 732 732
+4 * 732 732
+1 * 732 732

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 740 0 740
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 * 740 0 740
+4 +1 740 740
+4 * 740
+3 * 740 0 740
cob=(5)
cfi=(8)
cfn=(164)
calls=740 0x387e4bb2f0 0 
* * 84962 21619 10405 23 6 0 23 6 0 20850 491 740
* * 740 740 0 1 1 0 1 1 0 0 0 740
+5 * 740 740
+1 * 740 740

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 740 0 740
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 * 740 0 740
+4 +1 740 740
+4 * 740
+3 * 740 0 740
cob=(5)
cfi=(8)
cfn=(164)
calls=740 0x387e4bb2f0 0 
* * 93089 24456 13228 2 1 0 2 1 0 22897 159 740
* * 740 740 0 0 0 0 0 0 0 0 0 740
+5 * 740 740
+1 * 740 740

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 740 0 740 1 0 0 1
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 * 740 0 740
+4 +2 740 740
+4 * 740
+3 * 740 0 740
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=740 0x4048de +12 
* * 4440 1480 1480 1 0 0 1
+5 * 740 740
+4 * 740 0 0 1 0 0 1
+3 * 740
+2 * 740 0 0 0 0 0 0 0 0 740
jcnd=740/740 +7 +3 
* * 
+7 +3 740 740
+4 * 740
+4 * 740
+3 * 740 0 740
cob=(5)
cfi=(8)
cfn=(32)
calls=740 0x387e4bd0b0 0 
* * 213676 31349 30503 34 19 38 34 19 38 34502 1406 740
* * 740 740 0 0 0 0 0 0 0 0 0 740
+5 +1 740 740
+1 * 740 740

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 732 0 732 1 0 0 1
+1 * 732
+3 * 732 0 732 0 0 1 0 0 1
+4 * 732 0 732
+4 * 732 732
+1 * 732 732

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 732 0 732 1 0 0 1
+1 * 732
+3 * 732 0 732
+4 * 732 0 732
+4 * 732 732
+1 * 732 732

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 732 0 732
+1 * 732
+3 * 732 0 732
+4 * 732 732
+1 * 732 732

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 740 0 740 1 0 0 1
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 * 740 0 740 1 0 0 1
+4 +2 740 740
+4 * 740
+3 * 740 0 740
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=740 0x404992 +12 
* * 4440 1480 1480 1 0 0 1
+5 * 740 740
+4 * 740
+3 * 740
+2 * 740 0 0 0 0 0 0 0 0 740
jcnd=740/740 +7 +3 
* * 
+7 +3 740 740
+4 * 740
+4 * 740
+3 * 740 0 740
cob=(5)
cfi=(8)
cfn=(32)
calls=740 0x387e4bd0b0 0 
* * 226124 35042 35781 20 21 16 20 21 16 36595 1078 740
* * 740 740 0 1 1 0 1 1 0 0 0 740
+5 +1 740 740
+1 * 740 740

fn=(102)
0x4048de 113 756 0 756 1 0 0 1
+1 * 756
+3 * 756 0 756
+4 +1 756
+10 * 756 756
+1 * 756 756

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 366 0 366
+1 * 366
+3 * 366
+4 * 366 0 366
+4 * 366 0 366
+4 * 366 0 366
+4 +1 366 366
+4 * 366
+3 * 366
+5 * 366 0 366
cfi=(16)
cfn=(226)
calls=366 0x402d61 -20 
* * 2562 1098 1098
+5 * 366
+3 * 366 0 0 0 0 0 0 0 0 366
+2 * 366 366
+4 * 366 366 0 0 24 0 0 24
+2 * 366 0 366 0 0 15 0 0 15
+2 * 366 366
+1 * 366 366

fn=(28)
0x404992 113 756 0 756 1 0 0 1
+1 * 756
+3 * 756 0 756
+4 +1 756
+10 * 756 756
+1 * 756 756

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 732 0 732
+1 * 732
+3 * 732 0 732
+4 * 732 732
+1 * 732 732

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 366 0 366
+1 * 366
+3 * 366
+4 * 366 0 366
+4 * 366 0 366
+4 * 366 0 366
+4 +1 366 366
+4 * 366
+3 * 366
+5 * 366 0 366
cfi=(16)
cfn=(226)
calls=366 0x402d61 -20 
* * 2562 1098 1098
+5 * 366
+3 * 366 0 0 0 0 0 0 0 0 366 2
+2 * 366 366
+4 * 366 366 0 0 23 0 0 23
+2 * 366 0 366 0 0 10 0 0 10
+2 * 366 366
+1 * 366 366

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +2 732 732
+4 * 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=732 0x404484 107 
* * 384324 128852 124464 25 3 6 25 3 6 14704 874 1460 182
+5 * 732 732
+1 * 732 732

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +2 732 732 0 1 0 0 1
+4 * 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=732 0x404a36 450 
* * 363828 121532 117144 24 3 6 24 3 6 14704 874 1460 182
+5 * 732 732
+1 * 732 732

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +2 732 732
+4 * 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=732 0x40439c 107 
* * 384324 128852 124464 7 0 34 7 0 34 14704 863 1460
+5 * 732 732
+1 * 732 732

fn=(116)
0x40439c 107 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +10 732 732
+4 * 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=732 0x4047d7 -26 
* * 374076 125192 120804 7 0 34 7 0 34 14704 863 1460
+5 +1 732 732
+1 * 732 732

fn=(118)
0x4047d7 91 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +2 732 732
+4 * 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=732 0x4049e2 450 
* * 363828 121532 117144 7 0 34 7 0 34 14704 863 1460
+5 * 732 732
+1 * 732 732

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +10 732 732
+4 * 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(52)
calls=732 0x404829 -26 
* * 374076 125192 120804 25 3 6 25 3 6 14704 874 1460 182
+5 +1 732 732
+1 * 732 732

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 748 0 748 1 0 0 1
+1 * 748
+3 * 748 0 748 0 0 1 0 0 1
+4 +1 748 748
+4 * 748 748
+1 * 748 748

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 748 0 748 1 0 0 1
+1 * 748
+3 * 748 0 748 1 0 0 1
+4 +1 748 748
+4 * 748 748
+1 * 748 748

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 366 0 366
+1 * 366
+3 * 366
+4 * 366 0 366
+4 * 366 0 366
+4 +2 366 366
+4 * 366 366
+4 * 366 366
+4 * 366 366
+4 * 366
+3 * 366 0 0 0 0 0 0 0 0 366 8
jcnd=8/366 +51 +10 
* * 
+2 +3 358 358
+4 * 358 358
+4 * 358 358
+4 -1 358 358
+4 * 358
+3 * 358
+3 * 358 0 358
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=358 0x403373 215 
* * 13604 4654 5012 0 17 9 0 17 9 358 2
+5 +2 358 358
+4 * 358 358
+4 * 358
+4 * 358 358
+4 * 358 0 358
+4 * 358
jump=358 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202) std::vector<float, std::allocator<float> >::end()
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12942 3945 3434 37 8 10 37 8 10 910 67 47
+5 +2 366 366
+1 * 366 366

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 732 0 732 1 0 0 1
+1 * 732
+3 * 732 0 732
+2 * 732 0 732
+2 * 732 0 732
+1 * 732
+4 * 732 0 732 1 0 0 1
+4 * 732 0 732
+4 +2 732 732
+4 * 732
+3 * 732 0 732
cfn=(6)
calls=732 0x403b08 117 
* * 4392 2196 1464 1 0 1 1 0 1
+5 * 732
+3 * 732 0 732
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=732 0x403afa -88 
* * 4392 2196 1464 1 0 0 1
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=732 0x402f54 645 
* * 9516 4392 1464 1 1 0 1 1
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732
+3 * 732
+3 * 732 0 732
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=732 0x403b16 134 
* * 315236 67622 64694 32 16 12 32 16 12 37663 1036 1464
+5 +4 732 732 0 1 0 0 1
+4 * 732
+3 * 732 0 732
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=732 0x40333c 113 
* * 4392 2196 1464 2 0 0 2
+5 * 732
+3 * 732 732
+4 * 732 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=732 0x403ba4 565 
* * 18300 7320 5856 3 0 0 3
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=732 0x403b74 547 
* * 18300 7320 5856
+5 * 732
+3 * 732
+3 * 732
+3 * 732
+3 * 732 0 732 1 0 0 1
cfi=(11)
cfn=(48)
calls=732 0x403bd5 -60 
* * 395304 132512 128856 26 3 6 26 3 6 14704 874 1460 182
+5 -3 732 732
+4 * 732 0 732
+4 * 732
jump=732 +28 +4 
* * 
+28 +4 732
+4 * 732 732
+1 * 732 732
+2 * 732 732
+2 * 732 732
+1 * 732 732

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 732 0 732 1 0 0 1
+1 * 732
+3 * 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+4 * 732 0 732
+4 * 732
+4 * 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=732 0x404380 726 
* * 7320 3660 2928 1 0 0 1
+5 * 732 732
+4 * 732 732
+1 * 732 732

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 732 0 732
+1 * 732
+3 * 732 0 732
+1 * 732
+4 * 732 0 732 1 0 0 1
+4 +2 732 732
+4 * 732
+3 * 732 0 732
cfn=(40)
calls=732 0x40333c 113 
* * 4392 2196 1464
+5 * 732
+3 * 732 732
+4 * 732 732
+4 * 732 732
+4 * 732 732
+3 -1 732
+3 * 732
+3 * 732 0 732
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=732 0x40334a 148 
* * 22692 7320 8784 2 0 0 2
+5 +1 732 732
+4 * 732
+3 * 732 0 732
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=732 0x4032ca 159 
* * 150022 45456 29946 3 1 0 3 1 0 23424 150 1464
+5 * 732
jump=732 +28 * 
* * 
+28 * 732 0 0 1 0 0 1
+4 * 732 732
+1 * 732 732
+1 * 732 732

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 740 0 740 1 0 0 1
+1 * 740 0 0 1 0 0 1
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 0 740 740
+5 0 740 0 0 0 0 0 0 0 0 740
+2 0 740 740
+4 0 740 740
+4 0 740
+5 0 740
+3 0 740
+3 0 740 0 740
fi=(6) ???
cfi=(5)
cfn=(100)
calls=740 0x40461a 99 
* 0 232916 37269 36423 37 19 38 37 19 38 35242 1406 1480
+5 0 740
fi=(6)
jump=740 +7 0 
* 0 
+7 0 740 740
+1 0 740 740

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 203313 0 203313
+1 * 203313
+3 * 203313 0 203313
+4 * 203313 0 203313
+4 +1 203313 203313
+4 * 203313 203313
+3 * 203313 203313
+4 * 203313
+4 * 203313
+3 * 203313 203313
+1 * 203313 203313

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 203313 0 203313
+1 * 203313
+3 * 203313 0 203313 1 0 0 1
+4 * 203313 0 203313
+4 +1 203313 203313
+4 * 203313 203313
+3 * 203313 203313
+4 * 203313
+4 * 203313
+3 * 203313 203313
+1 * 203313 203313

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 732
+4 * 732
+3 * 732 0 732
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(194) std::allocator<int>::~allocator()
calls=732 0x403d7e +42 
* * 10248 3660 3660 1 0 0 1
+5 * 732 732
+1 * 732 732

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 732 0 732 1 0 0 1
+1 * 732
+3 * 732 0 732
+1 * 732
+4 * 732 0 732
+4 +2 732 732
+4 * 732 732
+4 * 732
+3 * 732 732
+4 * 732 732
+3 * 732
+3 * 732
+3 * 732
+4 * 732
+3 * 732 732
+4 * 732 732
+3 -1 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=732 0x403d98 +11 
* * 112690 31548 20430 1 1 0 1 1 0 23424 150 1464
+5 +1 732 732
+4 * 732
+3 * 732 0 732
cfn=(192)
calls=732 0x403296 -82 
* * 16836 5856 5856 1 0 0 1
+5 * 732
jump=732 +28 * 
* * 
+28 * 732
+4 * 732 732
+1 * 732 732
+1 * 732 732

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2960 0 2960 1 0 0 1
+1 * 2960
+3 * 2960 0 2960 0 0 1 0 0 1
+4 +1 2960 2960
+4 * 2960 2960 0 1 1 0 1 1
+4 * 2960
+3 * 2960 2960
+4 * 2960 2960
+3 * 2960
+3 * 2960
+3 * 2960
+4 * 2960 2960
+1 * 2960 2960

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 +2 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=732 0x404236 -14 
* * 254480 44198 44198 26 16 8 26 16 8 37663 1036 1464
+5 * 732 732
+4 * 732 0 732
+3 +1 732 732
+4 * 732 732 0 1 0 0 1
+3 * 732 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+3 * 732 732
+4 * 732
+4 * 732
+3 * 732 732
+4 * 732 0 732
+4 +1 732 732
+1 * 732 732

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 +2 732 732
+4 * 732 732 0 1 0 0 1
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(96)
calls=732 0x403fbe -14 
* * 241242 40259 38721 25 17 32 25 17 32 35422 1348 1464
+5 * 732 732
+4 * 732 0 732
+3 +1 732 732
+4 * 732 732
+3 * 732 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+3 * 732 732
+4 * 732
+4 * 732
+3 * 732 732
+4 * 732 0 732
+4 +1 732 732
+1 * 732 732

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 366 0 366
+1 * 366
+3 * 366 0 0 1 0 0 1
+4 * 366 0 366
+4 * 366 0 366
+4 +2 366 366
+4 * 366 366
+4 * 366 366
+4 * 366 366
+4 * 366
+3 * 366 0 0 0 0 0 0 0 0 366
jcnd=8/366 +51 +10 
* * 
+2 +3 358 358
+4 * 358 358
+4 * 358 358
+4 -1 358 358
+4 * 358
+3 * 358
+3 * 358 0 358
cfi=(3)
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=358 0x4036b1 215 
* * 13604 4654 5012 0 22 11 0 22 11 358
+5 +2 358 358
+4 * 358 358
+4 * 358
+4 * 358 358
+4 * 358 0 358
+4 * 358
jump=358 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12197 3720 3242 20 8 30 20 8 30 773 63 47
+5 +2 366 366
+1 * 366 366

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1488 0 1488 1 0 0 1
+1 * 1488
+3 * 1488 0 1488 1 0 0 1
+4 +1 1488 1488
+4 * 1488 1488
+1 * 1488 1488

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+3 * 732 0 732
+4 * 732
+4 * 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfi=(10)
cfn=(110)
calls=732 0x404380 726 
* * 7320 3660 2928
+5 * 732 732
+4 * 732 732
+1 * 732 732

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 732 0 732
+1 * 732
+3 * 732 0 732
+1 * 732
+4 * 732 0 732 1 0 0 1
+4 +2 732 732
+4 * 732
+3 * 732 0 732
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=732 0x40325e 113 
* * 4392 2196 1464
+5 * 732
+3 * 732 732
+4 * 732 732
+4 * 732 732
+4 * 732 732
+3 -1 732
+3 * 732
+3 * 732 0 732
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=732 0x40326c 148 
* * 22692 7320 8784 4 0 0 4
+5 +1 732 732
+4 * 732
+3 * 732 0 732
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=732 0x4031ec 159 
* * 141940 42640 27130 27 7 0 27 7 0 21388 488 1464
+5 * 732
jump=732 +28 * 
* * 
+28 * 732 0 0 1 0 0 1
+4 * 732 732
+1 * 732 732
+1 * 732 732

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 740 0 740 1 0 0 1
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 * 740 0 740
+4 +2 740 740
+5 * 740 0 0 0 0 0 0 0 0 740
+2 +1 740 740
+4 * 740 740
+4 * 740 740
+4 * 740
+3 * 740
+3 * 740 0 740
cfi=(5)
cfn=(160)
calls=740 0x4044d6 -65 
* * 93842 24579 14105 24 7 0 24 7 0 20850 491 1480
+5 +1 740 740
+1 * 740 740

fn=(12)
0x403b16 134 732 0 732
+1 * 732
+3 * 732 0 732
+1 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=732 0x4043ca -45 
* * 26352 9516 10248 4 0 4 4 0 4
+5 +1 732 732 0 1 0 0 1
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(20)
calls=732 0x404412 +43 
* * 272780 52982 49322 27 16 8 27 16 8 37663 1036 1464
+5 * 732
jump=732 +28 * 
* * 
+28 * 732
+4 * 732 732
+1 * 732 732
+1 * 732 732

fn=(14)
0x4043ca 90 732 0 732 1 0 0 1
+1 * 732
+3 * 732
+4 * 732 0 732 0 0 1 0 0 1
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=732 0x404804 +24 
* * 13176 4392 5124 2 0 1 2 0 1
+5 * 732 732
+4 * 732 0 732 0 0 2 0 0 2
+7 * 732 732
+4 * 732 0 732 1 0 0 1
+8 * 732 732
+4 * 732 0 732
+8 +1 732 732
+1 * 732 732

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 732 0 732 1 0 0 1
+1 * 732
+3 * 732 0 732
+2 * 732 0 732
+2 * 732 0 732
+1 * 732 0 0 1 0 0 1
+4 * 732 0 732
+4 * 732 0 732
+4 +2 732 732
+4 * 732
+3 * 732 0 732
cfn=(82)
calls=732 0x4039fc 117 
* * 4392 2196 1464 2 0 0 2
+5 * 732
+3 * 732 0 732
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=732 0x4039ed -88 
* * 4392 2196 1464
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(2)
calls=732 0x402d74 645 
* * 9516 4392 1464
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732
+3 * 732
+3 * 732 0 732 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=732 0x403a0a 134 
* * 301998 63683 59217 32 17 32 32 17 32 35422 1348 1464
+5 +4 732 732
+4 * 732
+3 * 732 0 732
cfn=(106)
calls=732 0x40325e 113 
* * 4392 2196 1464 1 0 0 1
+5 * 732
+3 * 732 732
+4 * 732 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(108)
calls=732 0x403a98 565 
* * 18300 7320 5856 2 0 0 2
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(112)
calls=732 0x403a68 547 
* * 18300 7320 5856
+5 * 732
+3 * 732
+3 * 732
+3 * 732
+3 * 732 0 732
cfi=(11)
cfn=(114)
calls=732 0x403ac9 -60 
* * 395304 132512 128856 7 0 34 7 0 34 14704 863 1460
+5 -3 732 732
+4 * 732 0 732
+4 * 732
jump=732 +28 +4 
* * 
+28 +4 732
+4 * 732 732
+1 * 732 732
+2 * 732 732
+2 * 732 732
+1 * 732 732

fn=(188)
0x403d98 171 740 0 740 1 0 0 1
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 * 740 0 740
+4 +2 740 740
+5 * 740 0 0 0 0 0 0 0 0 740 8
+2 +1 740 740
+4 * 740 740
+4 * 740 740
+4 * 740
+3 * 740
+3 * 740 0 740
cfi=(5)
cfn=(190)
calls=740 0x40452a -65 
* * 101969 27416 16928 2 1 0 2 1 0 22897 159 1480
+5 +1 740 740
+1 * 740 740

fn=(22)
0x404236 167 740 0 740 1 0 0 1
+1 * 740
+3 * 740
+4 * 740 0 740 1 0 0 1
+4 * 740 0 740
+4 0 740 740
+5 0 740 0 0 0 0 0 0 0 0 740
+2 0 740 740
+4 0 740 740
+4 0 740
+5 0 740
+3 0 740
+3 0 740 0 740
fi=(6)
cfi=(5)
cfn=(26)
calls=740 0x404730 99 
* 0 245364 40962 41701 24 22 16 24 22 16 37335 1078 1480
+5 0 740
fi=(6)
jump=740 +7 0 
* 0 
+7 0 740 740
+1 0 740 740

fn=(42)
0x403ba4 565 732 0 732 1 0 0 1
+1 * 732
+3 * 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+4 * 732 0 732
+4 * 732
+4 * 732 0 0 1 0 0 1
+4 * 732
+3 * 732
+3 * 732 0 732
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=732 0x404468 726 
* * 7320 3660 2928 1 0 0 1
+5 * 732 732
+4 * 732 732
+1 * 732 732

fn=(46)
0x403b74 547 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+3 * 732 0 732
+4 * 732
+4 * 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfi=(10)
cfn=(44)
calls=732 0x404468 726 
* * 7320 3660 2928
+5 * 732 732
+4 * 732 732
+1 * 732 732

fn=(86)
0x403a0a 134 732 0 732
+1 * 732
+3 * 732 0 732
+1 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=732 0x4042e2 -45 
* * 26352 9516 10248 5 0 0 5
+5 +1 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732 1 0 0 1
cfn=(94)
calls=732 0x40432a +43 
* * 259542 49043 43845 26 17 32 26 17 32 35422 1348 1464
+5 * 732
jump=732 +28 * 
* * 
+28 * 732
+4 * 732 732
+1 * 732 732
+1 * 732 732

fn=(88)
0x4042e2 90 732 0 732 1 0 0 1
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=732 0x4047b2 +24 
* * 13176 4392 5124 3 0 0 3
+5 * 732 732
+4 * 732 0 732
+7 * 732 732
+4 * 732 0 732
+8 * 732 732
+4 * 732 0 732
+8 +1 732 732
+1 * 732 732

fn=(156)
0x4031ec 159 732 0 732 1 0 0 1
+1 * 732
+3 * 732 0 732
+1 * 732
+4 * 732 0 732
+4 +2 732 732
+4 * 732 732 0 1 0 0 1
+4 * 732
+3 * 732 732
+4 * 732 732
+3 * 732
+3 * 732
+3 * 732
+4 * 732
+3 * 732 732
+4 * 732 732
+3 -1 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(158)
calls=732 0x403ce6 +11 
* * 104608 28732 17614 24 7 0 24 7 0 21388 488 1464
+5 +1 732 732
+4 * 732
+3 * 732 0 732
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=732 0x4031b8 -82 
* * 16836 5856 5856 1 0 0 1
+5 * 732
jump=732 +28 * 
* * 
+28 * 732
+4 * 732 732
+1 * 732 732
+1 * 732 732

fn=(172)
0x4031b8 79 732 0 732 1 0 0 1
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 732
+4 * 732
+3 * 732 0 732
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=732 0x403ccc +42 
* * 10248 3660 3660
+5 * 732 732
+1 * 732 732

fn=(202)
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1496 0 1496 1 0 0 1
+1 * 1496
+3 * 1496 0 1496
+4 +1 1496 1496
+4 * 1496 1496 0 0 2 0 0 2
+4 * 1496
+3 * 1496 1496
+4 * 1496 1496
+3 * 1496
+3 * 1496
+3 * 1496
+4 * 1496 1496
+1 * 1496 1496

fn=(106)
0x40325e 113 1488 0 1488 1 0 0 1
+1 * 1488
+3 * 1488 0 1488
+4 +1 1488 1488
+4 * 1488 1488
+1 * 1488 1488

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fl=(12)
fn=(120)
0x4049e2 450 732 0 732
+1 * 732
+3 * 732 0 732
+1 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +10 732 732
+4 * 732
+3 * 732 0 732
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=732 0x404bc6 288 
* * 10980 4392 3660 3 0 0 3
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(122)
calls=732 0x404bc6 288 
* * 10980 4392 3660
+5 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=732 0x404be0 -36 
* * 325764 108356 103968 4 0 34 4 0 34 14704 863 1460
+5 +1 732
+4 * 732 732
+1 * 732 732
+1 * 732 732

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 780 0 780
+1 * 780
+3 * 780
+4 * 780 0 780 1 0 0 1
+4 +1 780 780
+4 * 780
+3 * 780 0 780
cfi=(13)
cfn=(130)
calls=780 -33 -66 
* * 4680 2340 1560 0 0 1 0 0 1
+5 * 780 780
+1 * 780 780

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1464 0 1464
+1 * 1464
+3 * 1464
+4 * 1464 0 1464
+4 +1 1464 1464
+4 * 1464
+3 * 1464 0 1464
cfi=(13)
cfn=(134)
calls=1464 0x404e98 -58 
* * 23424 8784 7320 2 0 0 2
+5 * 1464 1464
+1 * 1464 1464

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +8 732 0 732
+4 +3 732 732
+4 * 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=732 0x404eb5 -22 
* * 246708 82004 76884 1 0 34 1 0 34 14704 863 1460
+5 +1 732 732
+1 * 732 732

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1464 0 1464 1 0 0 1
+1 * 1464
+3 * 1464
+4 * 1464 0 1464
+4 +1 1464 1464
+4 * 1464
+3 * 1464 0 1464
cfi=(13)
cfn=(124)
calls=1464 0x404d36 -77 
* * 8784 4392 2928 2 0 0 2
+5 * 1464 1464
+1 * 1464 1464

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1464 0 1464 1 0 0 1
+1 * 1464
+3 * 1464
+4 * 1464 0 1464 1 0 0 1
+4 +1 1464 1464
+4 * 1464
+3 * 1464 0 1464
cfi=(13)
cfn=(58)
calls=1464 0x404d8f -77 
* * 8784 4392 2928 1 0 0 1
+5 * 1464 1464
+1 * 1464 1464

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 748 0 748
+1 * 748
+3 * 748
+4 * 748 0 748 1 0 0 1
+4 * 748 0 748
+4 * 748 0 748
+4 +2 748 748
+4 * 748 748
+4 * 748
+3 * 748
+3 * 748
+4 * 748 0 748
+4 +1 748 748
+5 * 748 0 0 0 0 0 0 0 0 748
jcnd=8/748 +33 +2 
* * 
+2 +1 740 740
+4 * 740
+8 * 740 740
+4 * 740 740
+4 * 740
+3 * 740 0 0 1 0 0 1
+3 * 740 0 740 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=740 0x3877c83840 0 
* * 227334 74268 72793 11 2 22 11 2 22 14056 878 735 182
* * 740 740 0 1 1 0 1 1 0 0 0 740
+5 +1 748 748
+4 * 748
+8 * 748 748
+4 * 748
+3 +1 748 748
+1 * 748 748

fn=(140)
0x404eb5 368 748 0 748
+1 * 748
+3 * 748
+4 * 748 0 748 1 0 0 1
+4 * 748 0 748
+4 * 748 0 748 0 0 1 0 0 1
+4 +2 748 748
+4 * 748 748
+4 * 748
+3 * 748
+3 * 748
+4 * 748 0 748
+4 +1 748 748
+5 * 748 0 0 0 0 0 0 0 0 748
jcnd=8/748 +33 +2 
* * 
+2 +1 740 740
+4 * 740
+8 * 740 740
+4 * 740 740
+4 * 740
+3 * 740
+3 * 740 0 740
cob=(2)
cfi=(9)
cfn=(78)
calls=740 0x3877c83840 0 
* * 227334 74268 72793 0 0 35 0 0 35 14056 869 735
* * 740 740 0 0 0 0 0 0 0 0 0 740
+5 +1 748 748
+4 * 748
+8 * 748 748
+4 * 748
+3 +1 748 748
+1 * 748 748

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732 1 0 0 1
+4 * 732 0 732
+4 * 732 0 732
+4 +8 732 0 732
+4 +3 732 732
+4 * 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(74)
calls=732 0x404f37 -22 
* * 246708 82004 76884 14 3 5 14 3 5 14704 874 1460 182
+5 +1 732 732
+1 * 732 732

fn=(126)
0x404be0 424 732 0 732
+1 * 732
+3 * 732 0 732
+2 * 732 0 732
+1 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +4 732 732
+4 * 732
+3 * 732 0 732
cfn=(128)
calls=732 0x404878 277 
* * 10980 4392 3660 1 0 0 1
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(132)
calls=732 0x404d44 277 
* * 18300 6588 5856 2 0 0 2
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(132)
calls=732 0x404d44 277 
* * 18300 6588 5856
+5 * 732
+3 * 732
+3 * 732
+3 * 732 0 732
cfn=(138)
calls=732 0x404d5e -49 
* * 257688 85664 81276 1 0 34 1 0 34 14704 863 1460
+5 +1 732
+4 * 732 732
+1 * 732 732
+2 * 732 732
+1 * 732 732

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 732 0 732
+1 * 732
+3 * 732 0 732
+1 * 732
+4 * 732 0 732 1 0 0 1
+4 * 732 0 732
+4 * 732 0 732
+4 +10 732 732
+4 * 732
+3 * 732 0 732
cfn=(56)
calls=732 0x404c38 288 
* * 10980 4392 3660 3 0 0 3
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(56)
calls=732 0x404c38 288 
* * 10980 4392 3660
+5 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=732 0x404c52 -36 
* * 325764 108356 103968 20 3 6 20 3 6 14704 874 1460 182
+5 +1 732
+4 * 732 732
+1 * 732 732
+1 * 732 732

fn=(60)
0x404c52 424 732 0 732
+1 * 732
+3 * 732 0 732
+2 * 732 0 732
+1 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 * 732 0 732
+4 +4 732 732
+4 * 732
+3 * 732 0 732
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=732 0x40492d 277 
* * 10980 4392 3660 2 0 0 2
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=732 0x404d9d 277 
* * 18300 6588 5856 2 0 1 2 0 1
+5 * 732
+3 * 732 732
+4 * 732
+3 * 732 0 732
cfn=(66)
calls=732 0x404d9d 277 
* * 18300 6588 5856
+5 * 732
+3 * 732
+3 * 732
+3 * 732 0 732
cfn=(72)
calls=732 0x404db7 -49 
* * 257688 85664 81276 15 3 5 15 3 5 14704 874 1460 182
+5 +1 732
+4 * 732 732
+1 * 732 732
+2 * 732 732
+1 * 732 732

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 780 0 780 1 0 0 1
+1 * 780
+3 * 780
+4 * 780 0 780
+4 +1 780 780
+4 * 780
+3 * 780 0 780 1 0 0 1
cfi=(13)
cfn=(64)
calls=780 -33 -66 
* * 4680 2340 1560
+5 * 780 780
+1 * 780 780

fn=(66)
0x404d9d 277 1464 0 1464
+1 * 1464
+3 * 1464
+4 * 1464 0 1464
+4 +1 1464 1464
+4 * 1464
+3 * 1464 0 1464
cfi=(13)
cfn=(68)
calls=1464 0x404f1a -58 
* * 23424 8784 7320 2 0 1 2 0 1
+5 * 1464 1464
+1 * 1464 1464

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1464 0 1464 1 0 0 1
+1 * 1464
+3 * 1464 0 1464
+4 +1 1464 1464
+4 * 1464 1464
+1 * 1464 1464

fn=(110)
0x404380 726 1464 0 1464 1 0 0 1
+1 * 1464
+3 * 1464 0 1464
+4 * 1464 0 1464
+4 * 1464 1464
+4 * 1464 1464
+3 * 1464 1464
+4 * 1464 0 1464
+3 * 1464 1464
+1 * 1464 1464

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1464 0 1464 1 0 0 1
+1 * 1464
+3 * 1464 0 1464
+4 +1 1464 1464
+4 * 1464 1464
+1 * 1464 1464

fn=(44)
0x404468 726 1464 0 1464
+1 * 1464
+3 * 1464 0 1464
+4 * 1464 0 1464
+4 * 1464 1464
+4 * 1464 1464
+3 * 1464 1464
+4 * 1464 0 1464 1 0 0 1
+3 * 1464 1464
+1 * 1464 1464

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 740 0 740 1 0 0 1
+1 * 740
+3 * 740 0 740
+4 * 740 0 740
+4 * 740 740
+1 * 740 740

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 740 0 740 1 0 0 1
+1 * 740
+3 * 740 0 740
+4 * 740 0 740 1 0 0 1
+4 * 740 740
+1 * 740 740

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 740 0 740 1 0 0 1
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 +4 740 740
+4 * 740 740
+4 * 740
+3 * 740
+3 * 740 0 740
cfn=(184)
calls=740 0x40454c -14 
* * 4440 1480 2220 1 0 0 1
+5 +2 740 740
+1 * 740 740

fn=(150)
0x40326c 148 740 0 740
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 * 740 0 740
+4 +3 740 740 0 1 0 0 1
+4 * 740 740
+4 * 740
+3 * 740
+3 * 740 0 740
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=740 0x403d1a -29 
* * 13320 4440 5180 3 0 0 3
+5 +1 740 740
+1 * 740 740

fn=(180)
0x40334a 148 740 0 740
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 * 740 0 740
+4 +3 740 740
+4 * 740 740
+4 * 740
+3 * 740
+3 * 740 0 740
cfn=(182)
calls=740 0x403dcc -29 
* * 13320 4440 5180 2 0 0 2
+5 +1 740 740
+1 * 740 740

fn=(152)
0x403d1a 122 740 0 740 1 0 0 1
+1 * 740
+3 * 740
+4 * 740 0 740
+4 * 740 0 740
+4 +4 740 740
+4 * 740 740
+4 * 740
+3 * 740
+3 * 740 0 740
cfn=(154)
calls=740 0x4044f8 -14 
* * 4440 1480 2220 2 0 0 2
+5 +2 740 740
+1 * 740 740

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2724 464 463 0 6 8 0 6 8 412 42 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 2 4 0 2 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1119 308 198 2 0 0 2 0 0 213 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3514 710 662 14 2 6 14 2 6 560 58 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 6 1 0 6 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 3 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 366 0 366 1 0 0 1
+1 * 366
+3 * 366
+4 * 366 0 366
+4 * 366 0 366
+4 +1 366 366
+4 * 366
+3 * 366 0 366
cfi=(2)
cfn=(2)
calls=366 0x402d74 645 
* * 4758 2196 732
+5 * 366
+3 * 366 0 366
+3 +1 366 366
+6 * 366 0 366
+3 * 366 366
+6 * 366 0 366
+3 +1 366 366
+6 * 366 0 366 1 0 0 1
+3 * 366 366
+6 * 366 0 366
+3 +2 366 0 366
+7 * 366
jump=366 +86 * 
* * 
+2 +1 67527 67527
+3 * 67527
+3 * 67527 67527
+4 * 67527
+3 * 67527
+3 * 67527 0 67527
cfi=(2)
cfn=(144)
calls=67527 0x402d9a 770 
* * 742797 337635 202581
+5 * 67527 67527
+4 * 67527 67527
+5 * 67527
+4 * 67527 0 67527
+5 +1 67527 67527
+3 * 67527
+3 * 67527 67527
+4 * 67527
+3 * 67527
+3 * 67527 0 67527
cfi=(2)
cfn=(146)
calls=67527 0x402dba 770 
* * 742797 337635 202581 1 0 0 1
+5 * 67527 67527
+2 * 67527
+4 * 67527 67527
+5 * 67527
+4 * 67527 0 67527
+5 -2 67527 0 67527
+4 * 67527 67527
+3 * 67527
+3 * 67527 67527
+3 * 67527 0 0 0 0 0 0 0 0 67527 367
jcnd=67161/67527 -93 +1 
* * 
-9 * 366 366 0 1 0 0 1
+3 * 366
+3 * 366 366
+3 * 366 0 0 0 0 0 0 0 0 366
jcnd=366/366 -93 +1 
* * 
+2 +4 366 366
+3 * 366
+3 * 366
+4 * 366 366 0 1 0 0 1
+5 * 366
+4 * 366
+3 * 366 0 366
+5 +1 366 366
+3 * 366
+3 * 366
+4 * 366 366
+5 * 366
+4 * 366
+3 * 366 0 366
+5 +1 366 0 366
+7 * 366
jump=366 0x4016ee * 
* * 
+2 +1 67527 67527
+3 * 67527
+3 * 67527 67527
+4 * 67527
+3 * 67527 0 0 1 0 0 1
+3 * 67527 0 67527
cfi=(2)
cfn=(146)
calls=67527 0x402dba 770 
* * 742797 337635 202581
+5 * 67527 67527
+2 * 67527
+4 * 67527 67527
+5 * 67527 0 67527
+5 +1 67527 67527
+3 * 67527
+3 * 67527 67527
+4 * 67527
+3 * 67527
+3 * 67527 0 67527
cfi=(2)
cfn=(144)
calls=67527 0x402d9a 770 
* * 742797 337635 202581
+5 * 67527 67527
+4 * 67527 67527
+5 * 67527 0 67527
+5 +1 67527 67527
+5 * 67527 67527
+5 * 67527 67527
+5 * 67527
+4 * 67527 0 67527
+5 +1 67527 67527
+5 * 67527 67527
+5 * 67527 67527
+5 * 67527
+4 * 67527 0 67527
+5 -4 67527 0 67527
+4 * 67527 67527
+3 * 67527
+3 * 67527 67527
+3 * 67527 0 0 0 0 0 0 0 0 67527 367
jcnd=67161/67527 0x401672 +1 
* * 
-9 * 366 366 0 1 0 0 1
+3 * 366
+3 * 366 366
+3 * 366 0 0 0 0 0 0 0 0 366
jcnd=366/366 0x401672 +1 
* * 
+6 +6 366 366 0 1 0 0 1
+5 * 366 366
+5 * 366 0 366
+5 +2 366 366
+3 +1 366 0 366
+3 * 366 366
+5 * 366 366
+1 * 366 366

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 366
+7 * 366
+7 * 366
+3 * 366
+3 * 366 0 366
cfi=(2)
cfn=(4)
calls=366 0x4030b2 310 
* * 403368 118011 111097 68 19 18 68 19 18 26194 1174 1462 182
+5 * 366
+7 * 366
+7 * 366
+3 * 366
+3 * 366 0 366
cfi=(2)
cfn=(80)
calls=366 0x402ff4 310 
* * 397395 116085 108404 47 17 65 47 17 65 25217 1345 1462
+5 * 366 0 0 1 0 0 1
+7 * 366
+7 * 366
+3 * 366
+3 * 366 0 366
cfn=(142)
calls=366 0x401585 -52 
* * 7046598 3115392 1626870 8 0 0 8 0 0 135786 734
+5 * 366 0 366
+8 * 366 366
+6 * 366 0 366
+6 * 366
+7 * 366
+3 * 366 0 366
cfi=(2)
cfn=(148)
calls=366 0x402df4 414 
* * 93296 29372 20885 33 7 0 33 7 0 10694 248 732
+5 * 366
+7 * 366
+3 * 366 0 366 1 0 0 1
cfi=(2)
cfn=(178)
calls=366 0x402e74 414 
* * 97337 30780 22293 7 1 0 7 1 0 11712 78 732
+5 +2 366
+7 * 366
+7 * 366
+3 * 366
+3 * 366 0 366
cfi=(2)
cfn=(4)
calls=366 0x4030b2 310 
* * 403064 117991 111001 2 1 1 2 1 1 26173 736 1462
+5 * 366
+7 * 366
+7 * 366
+3 * 366
+3 * 366 0 366
cfi=(2)
cfn=(80)
calls=366 0x402ff4 310 
* * 395799 115978 108217 0 0 1 0 0 1 24909 866 1462
+5 * 366 366
+6 * 366 0 0 1 0 0 1
+7 * 366
+7 * 366 0 366
+6 * 366 366
+8 * 366
+3 * 366
+3 * 366 0 366
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=366 0x401719 -33 
* * 3262890 1358592 748287 4 0 0 4 0 0 67893 367
+5 * 366 0 366
+8 * 366 366
+6 * 366 0 366
+6 * 366
+7 * 366 0 0 1 0 0 1
+3 * 366 0 366
cfi=(2)
cfn=(148)
calls=366 0x402df4 414 
* * 93296 29372 20885 0 0 0 0 0 0 10694 240 732
+5 * 366
+7 * 366
+3 * 366 0 366
cfi=(2)
cfn=(178)
calls=366 0x402e74 414 
* * 97337 30780 22293 0 0 0 0 0 0 11712 72 732
+5 +2 366 366
+7 * 366
+3 * 366 0 366
cfi=(2)
cfn=(2)
calls=366 0x402d74 645 
* * 4758 2196 732
+5 * 366 366
+6 * 366
+3 * 366
+3 * 366
+3 * 366 366
+7 * 366
+3 * 366 0 0 1 0 0 1
+3 * 366 0 366
cfi=(2)
cfn=(144)
calls=366 0x402d9a 770 
* * 4026 1830 1098
+5 * 366
+3 * 366
+7 * 366
+3 * 366
+3 * 366 0 366
cfi=(2)
cfn=(200)
calls=366 0x402eda 901 
* * 36214 13397 10332 40 25 19 40 25 19 1634 77 47
+5 +1 366 366
+7 * 366
+3 * 366 0 366
cfi=(2)
cfn=(10)
calls=366 0x402f54 645 
* * 4758 2196 732 0 1 0 0 1
+5 * 366 366
+6 * 366
+3 * 366
+3 * 366
+3 * 366 366
+7 * 366 0 0 1 0 0 1
+3 * 366
+3 * 366 0 366
cfi=(2)
cfn=(146)
calls=366 0x402dba 770 
* * 4026 1830 1098
+5 * 366
+3 * 366
+7 * 366
+3 * 366
+3 * 366 0 366
cfi=(2)
cfn=(244)
calls=366 0x402f7a 901 
* * 35469 13172 10140 21 30 41 21 30 41 1497 63 47
+5 +1 366 366
+7 * 366
+3 * 366 0 366
cfi=(2)
cfn=(10)
calls=366 0x402f54 645 
* * 4758 2196 732
+5 * 366 366
+6 * 366
+3 * 366
+3 * 366
+3 * 366 366 0 1 0 0 1
+7 * 366
+3 * 366
+3 * 366 0 366
cfi=(2)
cfn=(146)
calls=366 0x402dba 770 
* * 4026 1830 1098
+5 * 366 366
+2 * 366
+4 * 366 366
+8 * 366 366
+8 * 366 0 366
+8 +1 366 366
+7 * 366
+3 * 366 0 366
cfi=(2)
cfn=(2)
calls=366 0x402d74 645 
* * 4758 2196 732
+5 * 366 366 0 1 0 0 1
+6 * 366
+3 * 366
+3 * 366
+3 * 366 366
+7 * 366
+3 * 366
+3 * 366 0 366
cfi=(2)
cfn=(144)
calls=366 0x402d9a 770 
* * 4026 1830 1098
+5 * 366 366
+4 * 366 366
+8 * 366
+4 * 366 366
+8 * 366
+3 * 366 0 366
+8 +2 366 0 366
+7 -12 366 366
+8 * 366 366
+7 * 366 0 0 0 0 0 0 0 0 366 1
jcnd=1/366 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 366
+7 * 366
+3 * 366 0 366
cfi=(2)
cfn=(2)
calls=366 0x402d74 645 
* * 4758 2196 732 2 0 1 2 0 1
+5 * 366
+3 * 366 366
+7 * 366
+3 * 366 0 366
cfi=(2)
cfn=(2)
calls=366 0x402d74 645 
* * 4758 2196 732 0 1 0 0 1
+5 * 366
+3 * 366 0 0 0 0 0 0 0 0 366 1
+2 * 366 0 0 1 0 0 1
+5 * 366
jump=366 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 366
+2 * 366 0 0 0 0 0 0 0 0 366
jcnd=366/366 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 366 0 366
+1 * 366
+3 * 366
+4 * 366 0 366
+4 * 366 0 366
+4 * 366 0 366
+5 +1 366 366
+4 * 366
+3 * 366 0 366
cfi=(2)
cfn=(2)
calls=366 0x402d74 645 
* * 4758 2196 732
+5 * 366
+3 * 366 0 366
+3 +1 366 366 0 1 0 0 1
+6 * 366 0 366
+3 * 366 366
+6 * 366 0 366
+3 +2 366 0 366
+7 * 366
jump=366 +86 * 
* * 
+2 +1 67527 67527
+3 * 67527
+3 * 67527 67527
+4 * 67527
+3 * 67527
+3 * 67527 0 67527
cfi=(2)
cfn=(144)
calls=67527 0x402d9a 770 
* * 742797 337635 202581
+5 * 67527 67527
+4 * 67527 67527
+5 * 67527
+4 * 67527 0 67527
+5 +1 67527 67527
+3 * 67527
+3 * 67527 67527
+4 * 67527
+3 * 67527
+3 * 67527 0 67527
cfi=(2)
cfn=(146)
calls=67527 0x402dba 770 
* * 742797 337635 202581
+5 * 67527 67527
+2 * 67527
+4 * 67527 67527
+5 * 67527
+4 * 67527 0 67527
+5 -2 67527 0 67527
+4 * 67527 67527
+3 * 67527
+3 * 67527 67527
+3 * 67527 0 0 0 0 0 0 0 0 67527 367
jcnd=67161/67527 -93 +1 
* * 
-9 * 366 366 0 1 0 0 1
+3 * 366
+3 * 366 366
+3 * 366 0 0 0 0 0 0 0 0 366
jcnd=366/366 -93 +1 
* * 
+2 +4 366 366
+3 * 366
+3 * 366 0 0 1 0 0 1
+4 * 366 366
+5 * 366
+4 * 366
+3 * 366 0 366
+5 +1 366 366
+3 * 366
+3 * 366
+4 * 366 366
+5 * 366
+4 * 366
+3 * 366 0 366
+5 +1 366 366
+5 * 366 366
+5 * 366 366
+5 * 366 0 0 1 0 0 1
+4 * 366
+3 * 366 0 366
+5 +2 366 366
+3 +1 366 0 366
+3 * 366 366
+5 * 366 366
+1 * 366 366

fl=(4)
fn=(174)
0x403ccc 121 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 732
+4 * 732
+3 * 732 0 732
cfi=(5)
cfn=(176)
calls=732 0x4044cc -35 
* * 3660 1464 1464
+5 * 732 732
+1 * 732 732

fn=(90)
0x4047b2 115 732 0 732 1 0 0 1
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732 1 0 0 1
+4 +1 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfi=(5)
cfn=(92)
calls=732 0x4049d4 -35 
* * 4392 1464 2196 1 0 0 1
+5 * 732 732
+1 * 732 732

fn=(194)
0x403d7e 121 732 0 732 1 0 0 1
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 732
+4 * 732
+3 * 732 0 732
cfi=(5)
cfn=(196)
calls=732 0x404520 -35 
* * 3660 1464 1464
+5 * 732 732
+1 * 732 732

fn=(16)
0x404804 115 732 0 732 1 0 0 1
+1 * 732
+3 * 732
+4 * 732 0 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732 732
+4 * 732
+3 * 732
+3 * 732 0 732
cfi=(5)
cfn=(18)
calls=732 0x404a28 -35 
* * 4392 1464 2196 1 0 1 1 0 1
+5 * 732 732
+1 * 732 732

fl=(3)
fn=(222)
0x403373 215 366 0 366
+1 * 366
+3 * 366
+4 * 366 0 366
+4 * 366 0 366
+4 * 366 0 366
+4 +1 366 366
+4 * 366 366
+4 * 366 366
+4 * 366
+3 * 366
+3 * 366 0 366
cfi=(5)
cfn=(224)
calls=366 0x403df2 -87 
* * 8784 2928 3294 0 23 10 0 23 10 366 2
+5 * 366 366
+1 * 366 366

fn=(8)
0x403afa 224 732 0 732 1 0 0 1
+1 * 732
+3 * 732 0 732
+4 * 732 732
+4 * 732 732
+1 * 732 732

fn=(264)
0x4036b1 215 366 0 366
+1 * 366
+3 * 366
+4 * 366 0 366
+4 * 366 0 366
+4 * 366 0 366
+4 +1 366 366
+4 * 366 366
+4 * 366 366
+4 * 366
+3 * 366
+3 * 366 0 366
cfi=(5)
cfn=(266)
calls=366 0x40406a -87 
* * 8784 2928 3294 0 24 15 0 24 15 366
+5 * 366 366
+1 * 366 366

fn=(212)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102)
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28)
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84)
0x4039ed 224 732 0 732
+1 * 732
+3 * 732 0 732
+4 * 732 732
+4 * 732 732
+1 * 732 732

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1480 0 1480 1 0 0 1
+5 0 1480 0 1480
+5 0 1480
+3 0 1480 0 1480
+5 0 1480
+4 0 1480 1480 0 0 1 0 0 1
+7 0 1480 1480 0 0 1 0 0 1
+3 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480 2
+6 0 1480 1480 0 0 1 0 0 1
+7 0 1480 1480 0 1 1 0 1 1
+4 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480
+2 0 1480 1480 0 0 1 0 0 1
+3 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480
jcnd=1480/1480 +97 0 
* 0 
+18 0 1480
+3 0 1480
+3 0 1480 0 1480
cfn=(38) _int_malloc
calls=1480 0x3877c79a00 0 
* 0 353960 44191 52964 46 33 53 46 33 53 54817 2449
+5 0 1480
+3 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480
+2 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480
+2 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480 24
+2 0 1480 1480
+7 0 1480 0 0 0 0 0 0 0 0 1480
jcnd=1480/1480 +13 0 
* 0 
+13 0 1480 0 1480
+2 0 1480 0 0 0 0 0 0 0 0 1480 9
+6 0 1480
+3 0 1480 1480
+4 0 1480 1480
+5 0 1480 1480
+5 0 1480
+4 0 1480 1480
+1 0 1480 0 0 1 0 0 1
+5 0 1480 1480 0 0 1 0 0 1
+7 0 1480 0 0 0 0 0 0 0 0 1480
jcnd=1480/1480 +14 0 
* 0 
+14 0 1480 0 1480 1 0 0 1
+3 0 1480 0 0 0 0 0 0 0 0 1480
+6 0 1480
jump=1480 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1480 0 1480 1 0 0 1
+2 0 1480
+3 0 1480
+3 0 1480 0 1480
+2 0 1480
+3 0 1480 0 1480
+1 0 1480
+3 0 1480 0 1480
+1 0 1480
+3 0 1480
+4 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480
+6 0 1480
+4 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480 7
jcnd=10/1480 0x3877c838d1 0 
* 0 
+2 0 1470
+3 0 1470
+3 0 1470
+3 0 1470
+3 0 1470
+3 0 1470 0 0 0 0 0 0 0 0 1470
jcnd=1470/1470 +41 0 
* 0 
+41 0 1470 0 0 1 0 0 1
+3 0 1470 0 0 0 0 0 0 0 0 1470
jcnd=1470/1470 0x3877c839c0 0 
* 0 
+24 0 1470
+3 0 1470
+4 0 1470
+3 0 1470
+3 0 1470
+3 0 1470
+3 0 1470
+3 0 1470 0 0 0 0 0 0 0 0 1470 729
jcnd=742/1470 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 738
+10 0 738 738 0 0 1 0 0 1
+3 0 738
+4 0 738 0 738
+3 0 738
+4 0 738
+4 0 738 0 0 0 0 0 0 0 0 738
jcnd=738/738 -18 0 
* 0 
-18 0 2270 2270
+3 0 2270
+4 0 2270 0 2270
+3 0 2270
+4 0 2270
+4 0 2270 0 0 0 0 0 0 0 0 2270 11
jcnd=1532/2270 -18 0 
* 0 
+2 0 1480
+4 0 1480
+3 0 1480 1480
+1 0 1480 1480
+1 0 1480 1480
+2 0 1480 1480 0 1 0 0 1
+2 0 1480 1480
0x3877c839c0 0 1470 0 0 1 0 0 1
+3 0 1470
+3 0 1470
+3 0 1470
+4 0 1470 0 1470 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1470 0x3877c89b20 0 
* 0 370962 138128 135188 6 1 56 6 1 56 17724 1000 1470 182
+5 0 1470
jump=1470 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1480 1480 0 1 1 0 1 1
+7 0 1480 1480 0 0 1 0 0 1
+3 0 1480
+3 0 1480 0 0 1 0 0 1 0 0 1480
+6 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480
+6 0 1480 1480
+4 0 1480
+4 0 1480
+2 0 1480 0 0 0 0 0 0 0 0 1480 2
+2 0 1480
+2 0 1480
+7 0 1480 0 0 0 0 0 0 0 0 1480
jcnd=1480/1480 +14 0 
* 0 
+14 0 1480
+2 0 1480
cfn=(170) _int_free
calls=1480 0x3877c78650 0 
* 0 149931 40155 23633 21 4 0 21 4 0 36347 648

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 2
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=19/20 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
-29 0 19
+3 0 19 0 19
+4 0 19 0 19
+4 0 19
+4 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19
+3 0 19 0 0 0 0 0 0 0 0 19 8
jcnd=7/19 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1480 0 1480 1 0 0 1
+2 0 1480 0 1480
+2 0 1480 0 1480
+2 0 1480
+3 0 1480 0 1480
+2 0 1480 0 1480
+1 0 1480 0 1480
+1 0 1480
+3 0 1480
+4 0 1480 1480
+4 0 1480 0 1480
+4 0 1480
+3 0 1480
+4 0 1480
+3 0 1480
+3 0 1480
+3 0 1480 0 0 1 0 0 1 0 0 1480
+6 0 1480
+4 0 1480 0 0 0 0 0 0 0 0 1480
+6 0 1480
+4 0 1480 0 0 0 0 0 0 0 0 1480
+6 0 1480 1480
+7 0 1480 0 0 0 0 0 0 0 0 1480 4
jcnd=1356/1480 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124 2
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1356
+2 0 1356 0 0 0 0 0 0 0 0 1356
+6 0 1356 1356 0 1 0 0 1
+4 0 1356
+3 0 1356
+2 0 1356 0 0 0 0 0 0 0 0 1356
jcnd=1356/1356 0x3877c78a40 0 
* 0 
+6 0 1356 1356
+4 0 1356
+3 0 1356 0 0 0 0 0 0 0 0 1356
+6 0 1356 1356
+5 0 1356
+4 0 1356 0 0 0 0 0 0 0 0 1356
jcnd=1356/1356 0x3877c7907c 0 
* 0 
+6 0 1356 1356
+5 0 1356
+4 0 1356 0 0 0 0 0 0 0 0 1356
+6 0 1356
+4 0 1356 0 0 1 0 0 1 0 0 1356
+6 0 1356
+4 0 1356 1356
+7 0 1356 0 0 0 0 0 0 0 0 1356
+6 0 1356 1356
+6 0 1356
+2 0 1356 0 0 0 0 0 0 0 0 1356
+6 0 1356 1356
+4 0 1356 0 0 0 0 0 0 0 0 1356 5
jcnd=1352/1356 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1356 1356 0 1 0 0 1
+4 0 1356 0 0 0 0 0 0 0 0 1356 334
jcnd=334/1356 0x3877c78bf0 0 
* 0 
+6 0 1022 1022 0 0 2 0 0 2
+6 0 1022 0 0 1 0 0 1 0 0 1022 76
jcnd=61/1022 0x3877c78a78 0 
* 0 
+6 0 961 961
+5 0 961 961
+5 0 961 961
+4 0 961 0 0 0 0 0 0 0 0 961
+6 0 961 961
+4 0 961 0 0 0 0 0 0 0 0 961
+6 0 961 961
+9 0 961 0 961
+4 0 961 0 961
+4 0 961 0 0 0 0 0 0 0 0 961 148
jcnd=736/961 +16 0 
* 0 
+2 0 225 225
+5 0 225
+3 0 225 0 0 1 0 0 1 0 0 225 9
jcnd=73/225 0x3877c78ee4 0 
* 0 
+6 0 961
+3 0 961
+4 0 961 961
+4 0 961 961
+4 0 961 0 0 0 0 0 0 0 0 961
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 1022
+7 0 1022 0 1022
+4 0 1022 0 1022
+4 0 1022 0 0 0 0 0 0 0 0 1022 68
jcnd=396/1022 +18 0 
* 0 
+2 0 626 0 626
+8 0 626 0 626
+8 0 626 0 626
+4 0 626
+3 0 626 0 626 1 0 0 1
+4 0 626
+4 0 626 0 626
+4 0 626 0 626
+4 0 626
+7 0 626 0 0 0 0 0 0 0 0 626
jcnd=626/626 0x3877c78b20 0 
* 0 
-30 0 396 0 396
+4 0 396
+3 0 396 0 396
+4 0 396
+4 0 396 0 396
+4 0 396 0 396
+4 0 396
+7 0 396 0 0 0 0 0 0 0 0 396
jcnd=396/396 0x3877c78b20 0 
* 0 
-7 0 334
+7 0 334 0 0 0 0 0 0 0 0 334
jcnd=334/334 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1356 0 0 1 0 0 1
+5 0 1356 1356
+4 0 1356 1356
+7 0 1356 0 0 0 0 0 0 0 0 1356
jcnd=1356/1356 +16 0 
* 0 
+16 0 1356 0 1356
+5 0 1356 0 0 0 0 0 0 0 0 1356
+6 0 1356
+3 0 1356
jump=1356 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1356 1356 0 1 0 0 1
+4 0 1356
+2 0 1356 0 0 0 0 0 0 0 0 1356
+6 0 1356 1356
+7 0 1356 0 0 0 0 0 0 0 0 1356
jcnd=1356/1356 +15 0 
* 0 
+15 0 1356 0 1356 1 0 0 1
+4 0 1356 0 0 0 0 0 0 0 0 1356
+6 0 1356
+4 0 1356 1356
+1 0 1356 1356
+1 0 1356 1356
+2 0 1356 1356
+2 0 1356 1356
+2 0 1356 1356
+2 0 1356 1356
0x3877c78bf0 0 334 0 0 1 0 0 1
+3 0 334 0 334
+4 0 334
+3 0 334
+4 0 334 0 334 1 0 0 1
+4 0 334
jump=334 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 73 73 0 1 0 0 1
+5 0 73 0 0 0 0 0 0 0 0 73
+6 0 73 73
+5 0 73 0 73
+4 0 73 73
+5 0 73 0 73 1 0 0 1
+4 0 73
jump=73 0x3877c78882 0 
* 0 
0x3877c7907c 0 1356 1356 0 1 1 0 1 1
+4 0 1356 0 0 1 0 0 1
+7 0 1356
+4 0 1356
+3 0 1356
+3 0 1356 0 0 0 0 0 0 0 0 1356
jcnd=1356/1356 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1470 0 0 1 0 0 1
+7 0 1470
+3 0 1470
+3 0 1470 1470 0 0 1 0 0 1
+4 0 1470
+4 0 1470 0 0 0 0 0 0 0 0 0 0 1470 182
jump=176 0x3877c89be8 0 
* 0 
jump=186 0x3877c89bd0 0 
* 0 
jump=184 0x3877c89bb8 0 
* 0 
jump=184 +11 0 
* 0 
jump=184 0x3877c89c48 0 
* 0 
jump=186 0x3877c89c30 0 
* 0 
jump=184 0x3877c89c18 0 
* 0 
jump=186 0x3877c89c00 0 
* 0 
+11 0 184 184
+3 0 184
+4 0 184
+4 0 184 184
+4 0 184
+4 0 184 0 184
+4 0 184
+9 0 184 184
+4 0 184 0 184
+4 0 184 184
+4 0 184 0 184
+4 0 184 184
+4 0 184 0 184
+4 0 184 184
+4 0 184 0 184
+4 0 184
+4 0 184
+4 0 184 0 0 0 0 0 0 0 0 184
jcnd=8/184 0x3877c89c60 0 
* 0 
-40 0 16622 16622
+4 0 16622 0 16622 0 0 3 0 0 3
+4 0 16622 16622
+4 0 16622 0 16622 0 0 15 0 0 15
+4 0 16622 16622
+4 0 16622 0 16622 0 0 10 0 0 10
+4 0 16622 16622
+4 0 16622 0 16622
+4 0 16622
+4 0 16622
+4 0 16622 0 0 0 0 0 0 0 0 16622 996
jcnd=1434/16622 0x3877c89c60 0 
* 0 
-32 0 186 186
+4 0 186 0 186
+4 0 186 186
+4 0 186 0 186
+4 0 186 186
+4 0 186 0 186
+4 0 186
+4 0 186
+4 0 186 0 0 0 0 0 0 0 0 186
jcnd=10/186 0x3877c89c60 0 
* 0 
-24 0 184 184
+4 0 184 0 184
+4 0 184 184
+4 0 184 0 184
+4 0 184
+4 0 184
+4 0 184 0 0 0 0 0 0 0 0 184
jcnd=8/184 0x3877c89c60 0 
* 0 
-16 0 186 186 0 1 0 0 1
+4 0 186 0 186
+4 0 186 0 0 1 0 0 1
+4 0 186
+4 0 186 0 0 0 0 0 0 0 0 186 4
jcnd=10/186 0x3877c89c60 0 
* 0 
+6 0 15892
+4 0 15892 15892
+3 0 15892 0 15892 0 0 20 0 0 20
+3 0 15892 15892
+4 0 15892 0 15892 0 0 3 0 0 3
+4 0 15892 15892
+4 0 15892 0 15892 0 0 4 0 0 4
+4 0 15892 15892
+4 0 15892 0 15892
+4 0 15892
jump=15892 -80 0 
* 0 
-30 0 176 176
+3 0 176 0 176
+3 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176 0 0 1 0 0 1
+4 0 176 176
+4 0 176 0 176
+4 0 176
jump=176 -80 0 
* 0 
-24 0 186 186
+4 0 186 0 186
+4 0 186 186
+4 0 186 0 186
+4 0 186 186
+4 0 186 0 186
+4 0 186
jump=186 -80 0 
* 0 
-16 0 184 184
+4 0 184 0 184
+4 0 184 184
+4 0 184 0 184
+4 0 184
jump=184 -80 0 
* 0 
+8 0 184 184
+3 0 184
+4 0 184 0 0 1 0 0 1
+4 0 184
+4 0 184
jump=184 -39 0 
* 0 
+9 0 186
+3 0 186 0 0 0 0 0 0 0 0 186
+6 0 186 186
+3 0 186
+4 0 186
jump=186 -72 0 
* 0 
+8 0 176
+4 0 176 176
+3 0 176 0 0 0 0 0 0 0 0 176
+2 0 176
+4 0 176
jump=176 -99 0 
* 0 
+11 0 186 186 0 1 0 0 1
+3 0 186
+4 0 186
+4 0 186
+4 0 186
jump=186 0x3877c89b78 0 
* 0 
+9 0 184 184
+3 0 184
+4 0 184
+4 0 184
+4 0 184
jump=184 0x3877c89b70 0 
* 0 
+9 0 186 186
+3 0 186
+4 0 186
+4 0 186
+4 0 186
jump=186 0x3877c89b68 0 
* 0 
+9 0 184 184
+3 0 184
+4 0 184
+4 0 184
+4 0 184
jump=184 0x3877c89b60 0 
* 0 
+9 0 1470 0 1470 1 0 0 1
+3 0 1470 1470

fn=(104) alloc_perturb
0x3877c77180 0 1347 1347 0 1 0 0 1
+6 0 1347
+2 0 1347 0 0 0 0 0 0 0 0 1347 1
+2 0 1347 1347

fn=(38)
0x3877c79a00 0 1480 0 1480 1 0 0 1
+2 0 1480
+3 0 1480 0 1480
+2 0 1480 0 1480
+2 0 1480 0 1480 0 0 1 0 0 1
+2 0 1480
+3 0 1480 0 1480
+1 0 1480 0 1480
+1 0 1480
+4 0 1480
+4 0 1480 0 0 0 0 0 0 0 0 1480
+6 0 1480
+4 0 1480
+6 0 1480
+3 0 1480
+4 0 1480
+4 0 1480
+4 0 1480
+3 0 1480 0 0 0 0 0 0 0 0 1480
+6 0 1480 1480 0 1 1 0 1 1
+7 0 1480 0 0 0 0 0 0 0 0 1480 7
jcnd=1358/1480 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 133 133
+6 0 133
+4 0 133
+2 0 133 0 0 0 0 0 0 0 0 133
+6 0 133
+3 0 133
+4 0 133 133
+1 0 133 133
+1 0 133 133
+2 0 133 133
+2 0 133 133
+2 0 133 133
+2 0 133 133
-14 0 1347
+4 0 1347 1347
+1 0 1347 1347
+1 0 1347 1347
+2 0 1347 1347
+2 0 1347 1347
+2 0 1347 1347
+2 0 1347 1347
+7 0 1375
+7 0 1375 0 0 1 0 0 1 0 0 1375 7
jcnd=472/1375 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 4 0 0 4
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 472 0 0 1 0 0 1
+3 0 472
+4 0 472
+4 0 472 0 0 1 0 0 1 0 0 472
jcnd=472/472 0x3877c7a1a4 0 
* 0 
+30 0 472 472
+6 0 472
+5 0 472 0 0 0 0 0 0 0 0 472 1
jcnd=471/472 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 911 247 191 8 1 0 8 1 0 189 24
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1374 0 0 1 0 0 1
+3 0 1374
+3 0 1374
+3 0 1374
+4 0 1374
+3 0 1374
+4 0 1374 0 1374
+5 0 1374
+3 0 1374 0 1374
+4 0 1374 0 1374
+4 0 1374 0 1374
+5 0 1374
+3 0 1374
+3 0 1374
+3 0 1374
+3 0 1374
+4 0 1374
+4 0 1374 0 0 1 0 0 1
+4 0 1374 0 1374
+4 0 1374
+4 0 1374 0 1374
+5 0 1374 0 1374
+5 0 1374
+3 0 1374
+3 0 1374 0 1374
+5 0 1374
+5 0 1374
+3 0 1374 0 1374
+4 0 1374 0 1374
+4 0 1374
+6 0 1374 0 1374
+4 0 1374 0 1374
+5 0 1374 0 0 1 0 0 1
+3 0 1374
+3 0 1374
+3 0 1374
jump=1374 +87 0 
* 0 
+8 0 783
+3 0 783
+4 0 783
+2 0 783
+2 0 783
+3 0 783
+3 0 783
+3 0 783
+2 0 783
+2 0 783
+5 0 783
+2 0 783 783
+4 0 783
+3 0 783
+4 0 783 0 783
+4 0 783 0 783
+8 0 783
+7 0 783 0 783
+4 0 783 0 783
+4 0 783 0 783
+4 0 783 0 0 0 0 0 0 0 0 783
-38 0 689
+3 0 689
+4 0 689 0 689
+4 0 689 0 689
+8 0 689
+7 0 689 0 689
+4 0 689 0 689 0 0 1 0 0 1
+4 0 689 0 689
+4 0 689 0 0 0 0 0 0 0 0 689
+6 0 2847 2847 0 1 0 0 1
+4 0 2847
+3 0 2847 0 0 0 0 0 0 0 0 2847 85
jcnd=1269/2847 0x3877c79ef0 0 
* 0 
+6 0 1578 1578
+4 0 1578 1578
+4 0 1578
+4 0 1578 0 0 0 0 0 0 0 0 1578
+6 0 1578 1578 0 1 0 0 1
+7 0 1578 0 0 0 0 0 0 0 0 1578 2
+6 0 1578
+4 0 1578
+7 0 1578 0 0 0 0 0 0 0 0 1578 6
jcnd=506/1578 +11 0 
* 0 
+2 0 1072
+3 0 1072 0 0 0 0 0 0 0 0 1072 174
jcnd=881/1072 0x3877c79e28 0 
* 0 
+6 0 1500
+3 0 1500 0 1500
+4 0 1500 0 1500
+5 0 1500 0 0 0 0 0 0 0 0 1500 20
jcnd=28/1500 0x3877c7a090 0 
* 0 
+6 0 1472
+7 0 1472 0 0 0 0 0 0 0 0 1472 133
jcnd=783/1472 0x3877c79c50 0 
* 0 
+6 0 689 0 0 1 0 0 1
+3 0 689
+4 0 689
+4 0 689 0 0 0 0 0 0 0 0 689
+6 0 689
+3 0 689
+4 0 689
+2 0 689
+2 0 689
+3 0 689
+3 0 689
+8 0 689
+3 0 689
+2 0 689
+2 0 689
+4 0 689 689 0 0 3 0 0 3
+4 0 689
+3 0 689 0 0 1 0 0 1 0 0 689 102
jcnd=657/689 0x3877c79e15 0 
* 0 
+6 0 32 32
+4 0 32
+4 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=16/32 +38 0 
* 0 
+2 0 16 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
jump=16 0x3877c79c73 0 
* 0 
+13 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+3 0 16 0 0 1 0 0 1 0 0 16 4
jcnd=8/16 0x3877c79ee0 0 
* 0 
+6 0 8 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
-4 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
0x3877c79e15 0 657 0 657
+4 0 657 0 657
+4 0 657
+3 0 657
jump=657 0x3877c79c73 0 
* 0 
+8 0 881 881 0 1 0 0 1
+4 0 881
+3 0 881 0 0 0 0 0 0 0 0 881 252
jcnd=443/881 0x3877c79ce1 0 
* 0 
+6 0 438 438
+5 0 438 0 0 0 0 0 0 0 0 438 10
jcnd=360/438 0x3877c79ce1 0 
* 0 
+6 0 78 0 0 1 0 0 1
+3 0 78
+3 0 78
+3 0 78
+7 0 78 0 78
+4 0 78 0 78
+4 0 78
+3 0 78 0 78
+4 0 78 0 78 0 0 15 0 0 15
+4 0 78 0 78
+4 0 78 0 0 0 0 0 0 0 0 78 4
jcnd=73/78 +18 0 
* 0 
+2 0 5 0 5 0 0 1 0 0 1
+8 0 5 0 5
+8 0 5
+7 0 5 0 5
+4 0 5
+3 0 5
+3 0 5
+3 0 5
+4 0 5
+3 0 5
+4 0 5
+3 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5
+4 0 5
+3 0 5 0 5
cfn=(104)
calls=5 0x3877c77180 0 
* 0 20 10 0 0 0 0 0 0 0 5
-56 0 73
+7 0 73 0 73 1 0 0 1
+4 0 73
+3 0 73
+3 0 73
+3 0 73
+4 0 73
+3 0 73
+4 0 73
+3 0 73
+3 0 73
+4 0 73 0 73
+4 0 73 0 73 0 0 1 0 0 1
+4 0 73
+4 0 73
+3 0 73 0 73
cfn=(104)
calls=73 0x3877c77180 0 
* 0 292 146 0 0 0 0 0 0 0 73
+5 0 78
+3 0 78
jump=78 0x3877c79ae3 0 
* 0 
+39 0 8 8
+4 0 8
jump=8 0x3877c79d9e 0 
* 0 
+12 0 1269 0 0 1 0 0 1
+7 0 1269
+3 0 1269 0 0 0 0 0 0 0 0 1269 15
jcnd=456/1269 0x3877c7a0b0 0 
* 0 
+6 0 1245 1245 0 1 0 0 1
+4 0 1245
+3 0 1245
+3 0 1245
+2 0 1245
+4 0 1245
+3 0 1245
+3 0 1245
+2 0 1245
+2 0 1245
+2 0 1245
+2 0 1245 1245 0 0 1 0 0 1
+8 0 1245
+5 0 1245
+5 0 1245
+2 0 1245 0 0 0 0 0 0 0 0 1245
-2 0 618
+2 0 618 0 0 0 0 0 0 0 0 618 2
jcnd=2/618 +14 0 
* 0 
+2 0 1861
+2 0 1861 0 0 0 0 0 0 0 0 1861 56
jcnd=848/1861 +64 0 
* 0 
+2 0 1013
+8 0 1013
+3 0 1013
+3 0 1013 0 0 0 0 0 0 0 0 1013 1
jcnd=1/1013 0x3877c79fc0 0 
* 0 
-6 0 403
+3 0 403
+3 0 403 0 0 0 0 0 0 0 0 403 4
jcnd=335/403 0x3877c79fc0 0 
* 0 
+2 0 1080
+2 0 1080 1080
+8 0 1080
+2 0 1080 0 0 0 0 0 0 0 0 1080 11
jcnd=401/1080 -20 0 
* 0 
+2 0 679
+2 0 679
+5 0 679
+3 0 679
+3 0 679
+2 0 679
+2 0 679
+5 0 679 0 0 0 0 0 0 0 0 679
jcnd=2/679 +14 0 
* 0 
+2 0 677
+2 0 677
+4 0 677
+2 0 677
+2 0 677 0 0 0 0 0 0 0 0 677 1
jcnd=676/677 -8 0 
* 0 
-8 0 9302
+4 0 9302
+2 0 9302
+2 0 9302 0 0 0 0 0 0 0 0 9302 553
jcnd=7921/9302 -8 0 
* 0 
-2 0 848 0 0 1 0 0 1
+2 0 848 0 0 0 0 0 0 0 0 848 37
jcnd=705/848 -8 0 
* 0 
+2 0 1527 1527 0 0 16 0 0 16
+4 0 1527 0 0 1 0 0 1
+3 0 1527 0 0 0 0 0 0 0 0 1527 730
jcnd=909/1527 0x3877c7a1cf 0 
* 0 
+6 0 618
+2 0 618
+4 0 618
+2 0 618
+2 0 618
+2 0 618 0 618
+8 0 618
jump=618 0x3877c79f30 0 
* 0 
+37 0 336 336 0 1 0 0 1
+5 0 336 336
+4 0 336
+4 0 336 336
+5 0 336 0 0 0 0 0 0 0 0 336
jcnd=336/336 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 28 0 0 1 0 0 1
+7 0 28 0 28
+6 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
jcnd=28/28 0x3877c79ace 0 
* 0 
+16 0 456 456
+4 0 456
+4 0 456
+2 0 456
+5 0 456 456 0 1 0 0 1
+4 0 456
+3 0 456 0 0 0 0 0 0 0 0 456 20
jcnd=408/456 0x3877c79f00 0 
* 0 
+6 0 48 48
+4 0 48 0 0 0 0 0 0 0 0 48 8
jcnd=24/48 0x3877c79f00 0 
* 0 
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 18
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 472 0 0 1 0 0 1
+3 0 472 0 472
+4 0 472
jump=472 0x3877c79b99 0 
* 0 
+36 0 909 909 0 1 3 0 1 3
+4 0 909 909 0 0 1 0 0 1
+4 0 909
+3 0 909 909
+4 0 909
+4 0 909
+3 0 909
+3 0 909 909
+4 0 909 0 0 0 0 0 0 0 0 909
+6 0 909 909
+4 0 909 0 0 0 0 0 0 0 0 909
+6 0 909 909 0 1 0 0 1
+8 0 909 0 909
+4 0 909 0 909
+4 0 909 0 0 0 0 0 0 0 0 909 62
jcnd=324/909 +38 0 
* 0 
+2 0 585 585
+4 0 585
+3 0 585 0 0 0 0 0 0 0 0 585
+2 0 585 585
+5 0 585 0 0 0 0 0 0 0 0 585
+6 0 585 585
+4 0 585 0 585
+4 0 585 585
+4 0 585 0 585
+4 0 585
+4 0 585 0 0 0 0 0 0 0 0 585
-4 0 324
+4 0 324 0 0 0 0 0 0 0 0 324 10
jcnd=21/324 0x3877c7a2e3 0 
* 0 
+6 0 888 888
+4 0 888 888 0 1 0 0 1
+4 0 888 0 0 0 0 0 0 0 0 888
+6 0 888
+4 0 888
+7 0 888 0 888 0 0 11 0 0 11
+4 0 888 0 888
+4 0 888 0 888
+4 0 888 0 888
+4 0 888 0 0 0 0 0 0 0 0 888 7
jcnd=272/888 +7 0 
* 0 
+2 0 616 0 616
+5 0 616
+7 0 616 0 0 0 0 0 0 0 0 616 4
jcnd=548/616 +18 0 
* 0 
-7 0 272
+7 0 272 0 0 0 0 0 0 0 0 272 39
jcnd=116/272 +18 0 
* 0 
+2 0 224 0 224 0 0 3 0 0 3
+8 0 224 0 224
+8 0 224
+7 0 224 0 224 0 0 2 0 0 2
+4 0 224
+3 0 224
+3 0 224
+4 0 224
+3 0 224
+4 0 224
+3 0 224
+3 0 224
+4 0 224 0 224
+4 0 224 0 224 0 0 1 0 0 1
+4 0 224
jump=224 +71 0 
* 0 
-46 0 680 0 0 1 0 0 1
+7 0 680 0 680 0 0 2 0 0 2
+4 0 680
+3 0 680
+3 0 680
+4 0 680
+3 0 680
+4 0 680
+3 0 680
+3 0 680
+4 0 680 0 680
+4 0 680 0 680 0 0 1 0 0 1
+4 0 680
jump=680 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 933
+4 0 933 0 0 1 0 0 1
+3 0 933
+3 0 933 0 933
cfn=(104)
calls=933 0x3877c77180 0 
* 0 3732 1866 0 1 0 0 1 0 0 933
+5 0 933
+3 0 933
jump=933 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 336 0 0 1 0 0 1
+7 0 336
+2 0 336
+4 0 336
+3 0 336
+3 0 336 0 336
+5 0 336
+3 0 336
+4 0 336
+3 0 336 0 0 1 0 0 1
+4 0 336
+4 0 336
+3 0 336
+4 0 336 0 336
+4 0 336 0 336 0 0 14 0 0 14
+4 0 336
+3 0 336
+3 0 336 0 336
cfn=(104)
calls=336 0x3877c77180 0 
* 0 1344 672 0 0 0 0 0 0 0 336 1
+5 0 336
+3 0 336
jump=336 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

totals: 12455403 5118571 2940469 244 104 147 244 104 147 355215 6002 8870 182
