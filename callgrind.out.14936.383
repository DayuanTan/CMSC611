version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 383


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 421402289 - 423381491
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1800 0 0 1 0 0 1
+3 0 1800 0 0 0 0 0 0 0 0 1800
+2 0 1800
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1800 0x3877c7b8b0 0 
* 0 211619 54959 29317 21 5 0 21 5 0 52177 860
* 0 1800 1800 0 1 1 0 1 1 0 0 0 1800

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1800 0 1800 1 0 0 1
+1 0 1800
+5 0 1800
+3 0 1800 0 1800
+1 0 1800
+4 0 1800 0 0 1 0 0 1
+3 0 1800
+4 0 1800
+3 0 1800 0 1800 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1800 0x3877c7aa50 0 
* 0 535398 76466 78507 48 40 61 48 40 61 91011 3735
* 0 1800 1800 0 1 1 0 1 1 0 0 0 1800
+5 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800
jcnd=1800/1800 +96 0 
* 0 
+96 0 1800 0 0 1 0 0 1
+4 0 1800 1800
+1 0 1800 1800
+1 0 1800 1800

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892 1 0 0 1
+4 +1 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=892 0x4049d4 -35 
* * 5352 1784 2676 1 0 0 1
+5 * 892 892
+1 * 892 892

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 892
+4 * 892
+3 * 892 0 892
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=892 0x404520 -35 
* * 4460 1784 1784
+5 * 892 892
+1 * 892 892

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=892 0x404a28 -35 
* * 5352 1784 2676 1 0 1 1 0 1
+5 * 892 892
+1 * 892 892

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 892
+4 * 892
+3 * 892 0 892
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=892 0x4044cc -35 
* * 4460 1784 1784
+5 * 892 892
+1 * 892 892

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+4 * 892 892
+4 * 892 892
+1 * 892 892

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=446 0x40406a -87 
* * 10704 3568 4014 0 29 20 0 29 20 446
+5 * 446 446
+1 * 446 446

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 892 0 892
+1 * 892
+3 * 892 0 892
+4 * 892 892
+4 * 892 892
+1 * 892 892

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446
+3 * 446 0 446
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=446 0x403df2 -87 
* * 10704 3568 4014 0 29 4 0 29 4 446 2
+5 * 446 446
+1 * 446 446

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 972 0 972
+1 * 972
+3 * 972 0 972 0 0 1 0 0 1
+4 +1 972 972
+4 * 972 972
+1 * 972 972

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784
+4 * 1784 0 1784
+4 +1 1784
+4 * 1784
+3 * 1784 0 1784
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1784 0x404ffe 790 
* * 10704 5352 3568 1 0 0 1
+5 * 1784 1784
+3 * 1784 1784
+1 * 1784 1784

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784 0 1784
+4 +1 1784 1784
+4 * 1784 1784
+1 * 1784 1784

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784
+4 * 1784 0 1784
+4 +1 1784
+4 * 1784
+3 * 1784 0 1784 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1784 0x40500c 790 
* * 10704 5352 3568 1 0 0 1
+5 * 1784 1784
+3 * 1784 1784
+1 * 1784 1784

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 972 0 972
+1 * 972
+3 * 972 0 972
+4 +1 972 972
+4 * 972 972
+1 * 972 972

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784 0 1784
+4 +1 1784 1784 0 1 0 0 1
+4 * 1784 1784
+1 * 1784 1784

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 892 0 892
+1 * 892
+3 * 892 0 892
+4 * 892 0 892
+4 * 892 892
+4 * 892 892
+1 * 892 892

fl=(5)
fn=(28)
0x404992 113 916 0 916 1 0 0 1
+1 * 916
+3 * 916 0 916
+4 +1 916
+10 * 916 916
+1 * 916 916

fn=(176)
0x4044cc 86 892 0 892
+1 * 892
+3 * 892 0 892
+4 * 892 892
+1 * 892 892

fn=(224)
0x403df2 129 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446
+3 * 446
+5 * 446 0 446
cfi=(16)
cfn=(226)
calls=446 0x402d61 -20 
* * 3122 1338 1338
+5 * 446
+3 * 446 0 0 0 0 0 0 0 0 446 2
+2 * 446 446
+4 * 446 446 0 0 29 0 0 29
+2 * 446 0 446 0 0 4 0 0 4
+2 * 446 446
+1 * 446 446

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 900 0 900
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 * 900 0 900
+4 +1 900 900
+4 * 900
+3 * 900 0 900
cob=(5)
cfi=(8)
cfn=(164)
calls=900 0x387e4bb2f0 0 
* * 106458 27247 13669 23 5 0 23 5 0 26166 554 900
* * 900 900 0 1 1 0 1 1 0 0 0 900
+5 * 900 900
+1 * 900 900

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 900 0 900
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 * 900 0 900
+4 +1 900 900
+4 * 900
+3 * 900 0 900
cob=(5)
cfi=(8)
cfn=(164)
calls=900 0x387e4bb2f0 0 
* * 112361 29512 15648 0 1 0 0 1 0 27811 306 900
* * 900 900 0 0 0 0 0 0 0 0 0 900
+5 * 900 900
+1 * 900 900

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 900 0 900 1 0 0 1
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 * 900 0 900
+4 +2 900 900
+4 * 900
+3 * 900 0 900
cfn=(102)
calls=900 0x4048de +12 
* * 5400 1800 1800 1 0 0 1
+5 * 900 900
+4 * 900 0 0 1 0 0 1
+3 * 900
+2 * 900 0 0 0 0 0 0 0 0 900
jcnd=900/900 +7 +3 
* * 
+7 +3 900 900
+4 * 900
+4 * 900
+3 * 900 0 900
cob=(5)
cfi=(8)
cfn=(32)
calls=900 0x387e4bd0b0 0 
* * 280447 40972 39402 34 28 46 34 28 46 46234 2034 900
* * 900 900 0 0 0 0 0 0 0 0 0 900
+5 +1 900 900
+1 * 900 900

fn=(18)
0x404a28 81 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892 0 0 1 0 0 1
+4 * 892 0 892
+4 * 892 892
+1 * 892 892

fn=(92)
0x4049d4 81 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+4 * 892 0 892
+4 * 892 892
+1 * 892 892

fn=(196)
0x404520 86 892 0 892
+1 * 892
+3 * 892 0 892
+4 * 892 892
+1 * 892 892

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 900 0 900 1 0 0 1
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 * 900 0 900 1 0 0 1
+4 +2 900 900
+4 * 900
+3 * 900 0 900
cfn=(28)
calls=900 0x404992 +12 
* * 5400 1800 1800 1 0 0 1
+5 * 900 900
+4 * 900
+3 * 900
+2 * 900 0 0 0 0 0 0 0 0 900
jcnd=900/900 +7 +3 
* * 
+7 +3 900 900
+4 * 900
+4 * 900
+3 * 900 0 900
cob=(5)
cfi=(8)
cfn=(32)
calls=900 0x387e4bd0b0 0 
* * 283751 42694 44505 18 13 16 18 13 16 46577 1701 900
* * 900 900 0 1 1 0 1 1 0 0 0 900
+5 +1 900 900
+1 * 900 900

fn=(102)
0x4048de 113 916 0 916 1 0 0 1
+1 * 916
+3 * 916 0 916
+4 +1 916
+10 * 916 916
+1 * 916 916

fn=(266)
0x40406a 129 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446
+3 * 446
+5 * 446 0 446
cfi=(16)
cfn=(226)
calls=446 0x402d61 -20 
* * 3122 1338 1338
+5 * 446
+3 * 446 0 0 0 0 0 0 0 0 446
+2 * 446 446
+4 * 446 446 0 0 29 0 0 29
+2 * 446 0 446 0 0 20 0 0 20
+2 * 446 446
+1 * 446 446

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +2 892 892
+4 * 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=892 0x404484 107 
* * 515144 174852 169504 25 3 6 25 3 6 20144 1187 1780 222
+5 * 892 892
+1 * 892 892

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +2 892 892 0 1 0 0 1
+4 * 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=892 0x404a36 450 
* * 490168 165932 160584 24 3 6 24 3 6 20144 1187 1780 222
+5 * 892 892
+1 * 892 892

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +2 892 892
+4 * 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=892 0x40439c 107 
* * 515144 174852 169504 7 0 35 7 0 35 20144 1104 1780
+5 * 892 892
+1 * 892 892

fn=(116)
0x40439c 107 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +10 892 892
+4 * 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=892 0x4047d7 -26 
* * 502656 170392 165044 7 0 35 7 0 35 20144 1104 1780
+5 +1 892 892
+1 * 892 892

fn=(118)
0x4047d7 91 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +2 892 892
+4 * 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=892 0x4049e2 450 
* * 490168 165932 160584 7 0 35 7 0 35 20144 1104 1780
+5 * 892 892
+1 * 892 892

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +10 892 892
+4 * 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(52)
calls=892 0x404829 -26 
* * 502656 170392 165044 25 3 6 25 3 6 20144 1187 1780 222
+5 +1 892 892
+1 * 892 892

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+1 * 892
+4 * 892 0 892
+4 +2 892 892
+4 * 892 892
+4 * 892
+3 * 892 892
+4 * 892 892
+3 * 892
+3 * 892
+3 * 892
+4 * 892
+3 * 892 892
+4 * 892 892
+3 -1 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=892 0x403d98 +11 
* * 136454 38208 24454 1 1 0 1 1 0 28500 297 1784
+5 +1 892 892
+4 * 892
+3 * 892 0 892
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=892 0x403296 -82 
* * 20516 7136 7136 1 0 0 1
+5 * 892
jump=892 +28 * 
* * 
+28 * 892
+4 * 892 892
+1 * 892 892
+1 * 892 892

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 3600 0 3600 1 0 0 1
+1 * 3600
+3 * 3600 0 3600 0 0 1 0 0 1
+4 +1 3600 3600
+4 * 3600 3600 0 1 1 0 1 1
+4 * 3600
+3 * 3600 3600
+4 * 3600 3600
+3 * 3600
+3 * 3600
+3 * 3600
+4 * 3600 3600
+1 * 3600 3600

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 +2 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=892 0x404236 -14 
* * 319114 53951 54855 24 12 9 24 12 9 48033 1655 1784
+5 * 892 892
+4 * 892 0 892
+3 +1 892 892
+4 * 892 892 0 1 0 0 1
+3 * 892 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+3 * 892 892
+4 * 892
+4 * 892
+3 * 892 892
+4 * 892 0 892
+4 +1 892 892
+1 * 892 892

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 +2 892 892
+4 * 892 892 0 1 0 0 1
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=892 0x403fbe -14 
* * 314843 51970 49546 23 26 43 23 26 43 47496 1970 1784
+5 * 892 892
+4 * 892 0 892
+3 +1 892 892
+4 * 892 892
+3 * 892 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+3 * 892 892
+4 * 892
+4 * 892
+3 * 892 892
+4 * 892 0 892
+4 +1 892 892
+1 * 892 892

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 446 0 446
+1 * 446
+3 * 446 0 0 1 0 0 1
+4 * 446 0 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446 0 0 0 0 0 0 0 0 446
jcnd=8/446 +51 +10 
* * 
+2 +3 438 438
+4 * 438 438
+4 * 438 438
+4 -1 438 438
+4 * 438
+3 * 438
+3 * 438 0 438
cfi=(3)
cfn=(264)
calls=438 0x4036b1 215 
* * 16644 5694 6132 0 28 16 0 28 16 438
+5 +2 438 438
+4 * 438 438
+4 * 438
+4 * 438 438
+4 * 438 0 438
+4 * 438
jump=438 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11898 3695 3225 18 3 29 18 3 29 703 67 47
+5 +2 446 446
+1 * 446 446

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1808 0 1808 1 0 0 1
+1 * 1808
+3 * 1808 0 1808 1 0 0 1
+4 +1 1808 1808
+4 * 1808 1808
+1 * 1808 1808

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+3 * 892 0 892
+4 * 892
+4 * 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=892 0x404380 726 
* * 8920 4460 3568
+5 * 892 892
+4 * 892 892
+1 * 892 892

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 892 0 892
+1 * 892
+3 * 892 0 892
+1 * 892
+4 * 892 0 892 1 0 0 1
+4 +2 892 892
+4 * 892
+3 * 892 0 892
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=892 0x40325e 113 
* * 5352 2676 1784
+5 * 892
+3 * 892 892
+4 * 892 892
+4 * 892 892
+4 * 892 892
+3 -1 892
+3 * 892
+3 * 892 0 892
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=892 0x40326c 148 
* * 27652 8920 10704 4 0 0 4
+5 +1 892 892
+4 * 892
+3 * 892 0 892
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=892 0x4031ec 159 
* * 176076 52908 34074 27 6 0 27 6 0 26864 549 1784
+5 * 892
jump=892 +28 * 
* * 
+28 * 892 0 0 1 0 0 1
+4 * 892 892
+1 * 892 892
+1 * 892 892

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 900 0 900 1 0 0 1
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 * 900 0 900
+4 +2 900 900
+5 * 900 0 0 0 0 0 0 0 0 900
+2 +1 900 900
+4 * 900 900
+4 * 900 900
+4 * 900
+3 * 900
+3 * 900 0 900
cfi=(5)
cfn=(160)
calls=900 0x4044d6 -65 
* * 117258 30847 18169 24 6 0 24 6 0 26166 554 1800
+5 +1 900 900
+1 * 900 900

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 892 0 892
+1 * 892
+3 * 892 0 892
+1 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=892 0x4043ca -45 
* * 32112 11596 12488 4 0 4 4 0 4
+5 +1 892 892 0 1 0 0 1
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(20)
calls=892 0x404412 +43 
* * 341414 64655 61099 25 12 9 25 12 9 48033 1655 1784
+5 * 892
jump=892 +28 * 
* * 
+28 * 892
+4 * 892 892
+1 * 892 892
+1 * 892 892

fn=(14)
0x4043ca 90 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892 0 0 1 0 0 1
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfi=(4)
cfn=(16)
calls=892 0x404804 +24 
* * 16056 5352 6244 2 0 1 2 0 1
+5 * 892 892
+4 * 892 0 892 0 0 2 0 0 2
+7 * 892 892
+4 * 892 0 892 1 0 0 1
+8 * 892 892
+4 * 892 0 892
+8 +1 892 892
+1 * 892 892

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+2 * 892 0 892
+2 * 892 0 892
+1 * 892 0 0 1 0 0 1
+4 * 892 0 892
+4 * 892 0 892
+4 +2 892 892
+4 * 892
+3 * 892 0 892
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=892 0x4039fc 117 
* * 5352 2676 1784 2 0 0 2
+5 * 892
+3 * 892 0 892
cfi=(3)
cfn=(84)
calls=892 0x4039ed -88 
* * 5352 2676 1784
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(2)
calls=892 0x402d74 645 
* * 11596 5352 1784
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892
+3 * 892
+3 * 892 0 892 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=892 0x403a0a 134 
* * 388879 80514 74522 30 26 43 30 26 43 47496 1970 1784
+5 +4 892 892
+4 * 892
+3 * 892 0 892
cfn=(106)
calls=892 0x40325e 113 
* * 5352 2676 1784 1 0 0 1
+5 * 892
+3 * 892 892
+4 * 892 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=892 0x403a98 565 
* * 22300 8920 7136 2 0 0 2
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(112)
calls=892 0x403a68 547 
* * 22300 8920 7136
+5 * 892
+3 * 892
+3 * 892
+3 * 892
+3 * 892 0 892
cfi=(11)
cfn=(114)
calls=892 0x403ac9 -60 
* * 528524 179312 174856 7 0 35 7 0 35 20144 1104 1780
+5 -3 892 892
+4 * 892 0 892
+4 * 892
jump=892 +28 +4 
* * 
+28 +4 892
+4 * 892 892
+1 * 892 892
+2 * 892 892
+2 * 892 892
+1 * 892 892

fn=(188)
0x403d98 171 900 0 900 1 0 0 1
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 * 900 0 900
+4 +2 900 900
+5 * 900 0 0 0 0 0 0 0 0 900 8
+2 +1 900 900
+4 * 900 900
+4 * 900 900
+4 * 900
+3 * 900
+3 * 900 0 900
cfi=(5)
cfn=(190)
calls=900 0x40452a -65 
* * 123161 33112 20148 0 1 0 0 1 0 27811 306 1800
+5 +1 900 900
+1 * 900 900

fn=(22)
0x404236 167 900 0 900 1 0 0 1
+1 * 900
+3 * 900
+4 * 900 0 900 1 0 0 1
+4 * 900 0 900
+4 0 900 900
+5 0 900 0 0 0 0 0 0 0 0 900
+2 0 900 900
+4 0 900 900
+4 0 900
+5 0 900
+3 0 900
+3 0 900 0 900
fi=(6) ???
cfi=(5)
cfn=(26)
calls=900 0x404730 99 
* 0 307151 49894 51705 22 14 16 22 14 16 47477 1701 1800
+5 0 900
fi=(6)
jump=900 +7 0 
* 0 
+7 0 900 900
+1 0 900 900

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+4 * 892 0 892
+4 * 892
+4 * 892 0 0 1 0 0 1
+4 * 892
+3 * 892
+3 * 892 0 892
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=892 0x404468 726 
* * 8920 4460 3568 1 0 0 1
+5 * 892 892
+4 * 892 892
+1 * 892 892

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+3 * 892 0 892
+4 * 892
+4 * 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfi=(10)
cfn=(44)
calls=892 0x404468 726 
* * 8920 4460 3568
+5 * 892 892
+4 * 892 892
+1 * 892 892

fn=(86)
0x403a0a 134 892 0 892
+1 * 892
+3 * 892 0 892
+1 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=892 0x4042e2 -45 
* * 32112 11596 12488 5 0 0 5
+5 +1 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892 1 0 0 1
cfn=(94)
calls=892 0x40432a +43 
* * 337143 62674 55790 24 26 43 24 26 43 47496 1970 1784
+5 * 892
jump=892 +28 * 
* * 
+28 * 892
+4 * 892 892
+1 * 892 892
+1 * 892 892

fn=(88)
0x4042e2 90 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892 1 0 0 1
cfi=(4)
cfn=(90)
calls=892 0x4047b2 +24 
* * 16056 5352 6244 3 0 0 3
+5 * 892 892
+4 * 892 0 892
+7 * 892 892
+4 * 892 0 892
+8 * 892 892
+4 * 892 0 892
+8 +1 892 892
+1 * 892 892

fn=(156)
0x4031ec 159 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+1 * 892
+4 * 892 0 892
+4 +2 892 892
+4 * 892 892 0 1 0 0 1
+4 * 892
+3 * 892 892
+4 * 892 892
+3 * 892
+3 * 892
+3 * 892
+4 * 892
+3 * 892 892
+4 * 892 892
+3 -1 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(158)
calls=892 0x403ce6 +11 
* * 130584 35960 22478 24 6 0 24 6 0 26864 549 1784
+5 +1 892 892
+4 * 892
+3 * 892 0 892
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=892 0x4031b8 -82 
* * 20516 7136 7136 1 0 0 1
+5 * 892
jump=892 +28 * 
* * 
+28 * 892
+4 * 892 892
+1 * 892 892
+1 * 892 892

fn=(172)
0x4031b8 79 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 892
+4 * 892
+3 * 892 0 892
cfi=(4)
cfn=(174)
calls=892 0x403ccc +42 
* * 12488 4460 4460
+5 * 892 892
+1 * 892 892

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1816 0 1816 1 0 0 1
+1 * 1816
+3 * 1816 0 1816
+4 +1 1816 1816
+4 * 1816 1816 0 0 2 0 0 2
+4 * 1816
+3 * 1816 1816
+4 * 1816 1816
+3 * 1816
+3 * 1816
+3 * 1816
+4 * 1816 1816
+1 * 1816 1816

fn=(106)
0x40325e 113 1808 0 1808 1 0 0 1
+1 * 1808
+3 * 1808 0 1808
+4 +1 1808 1808
+4 * 1808 1808
+1 * 1808 1808

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 908 0 908 1 0 0 1
+1 * 908
+3 * 908 0 908 0 0 1 0 0 1
+4 +1 908 908
+4 * 908 908
+1 * 908 908

fn=(82)
0x4039fc 117 908 0 908 1 0 0 1
+1 * 908
+3 * 908 0 908 1 0 0 1
+4 +1 908 908
+4 * 908 908
+1 * 908 908

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 +2 446 446
+4 * 446 446
+4 * 446 446
+4 * 446 446
+4 * 446
+3 * 446 0 0 0 0 0 0 0 0 446 8
jcnd=8/446 +51 +10 
* * 
+2 +3 438 438
+4 * 438 438
+4 * 438 438
+4 -1 438 438
+4 * 438
+3 * 438
+3 * 438 0 438
cfi=(3)
cfn=(222)
calls=438 0x403373 215 
* * 16644 5694 6132 0 28 3 0 28 3 438 2
+5 +2 438 438
+4 * 438 438
+4 * 438
+4 * 438 438
+4 * 438 0 438
+4 * 438
jump=438 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12832 3937 3428 39 3 7 39 3 7 888 75 47
+5 +2 446 446
+1 * 446 446

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 892 0 892 1 0 0 1
+1 * 892
+3 * 892 0 892
+2 * 892 0 892
+2 * 892 0 892
+1 * 892
+4 * 892 0 892 1 0 0 1
+4 * 892 0 892
+4 +2 892 892
+4 * 892
+3 * 892 0 892
cfn=(6)
calls=892 0x403b08 117 
* * 5352 2676 1784 1 0 1 1 0 1
+5 * 892
+3 * 892 0 892
cfi=(3)
cfn=(8)
calls=892 0x403afa -88 
* * 5352 2676 1784 1 0 0 1
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(10)
calls=892 0x402f54 645 
* * 11596 5352 1784 1 1 0 1 1
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892
+3 * 892
+3 * 892 0 892
cfn=(12)
calls=892 0x403b16 134 
* * 393150 82495 79831 30 12 13 30 12 13 48033 1655 1784
+5 +4 892 892 0 1 0 0 1
+4 * 892
+3 * 892 0 892
cfn=(40)
calls=892 0x40333c 113 
* * 5352 2676 1784 2 0 0 2
+5 * 892
+3 * 892 892
+4 * 892 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(42)
calls=892 0x403ba4 565 
* * 22300 8920 7136 3 0 0 3
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(46)
calls=892 0x403b74 547 
* * 22300 8920 7136
+5 * 892
+3 * 892
+3 * 892
+3 * 892
+3 * 892 0 892 1 0 0 1
cfi=(11)
cfn=(48)
calls=892 0x403bd5 -60 
* * 528524 179312 174856 26 3 6 26 3 6 20144 1187 1780 222
+5 -3 892 892
+4 * 892 0 892
+4 * 892
jump=892 +28 +4 
* * 
+28 +4 892
+4 * 892 892
+1 * 892 892
+2 * 892 892
+2 * 892 892
+1 * 892 892

fn=(108)
0x403a98 565 892 0 892 1 0 0 1
+1 * 892
+3 * 892
+4 * 892 0 892
+4 +1 892 892
+4 * 892 892
+4 * 892 0 892
+4 * 892
+4 * 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfi=(10)
cfn=(110)
calls=892 0x404380 726 
* * 8920 4460 3568 1 0 0 1
+5 * 892 892
+4 * 892 892
+1 * 892 892

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 892 0 892
+1 * 892
+3 * 892 0 892
+1 * 892
+4 * 892 0 892 1 0 0 1
+4 +2 892 892
+4 * 892
+3 * 892 0 892
cfn=(40)
calls=892 0x40333c 113 
* * 5352 2676 1784
+5 * 892
+3 * 892 892
+4 * 892 892
+4 * 892 892
+4 * 892 892
+3 -1 892
+3 * 892
+3 * 892 0 892
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=892 0x40334a 148 
* * 27652 8920 10704 2 0 0 2
+5 +1 892 892
+4 * 892
+3 * 892 0 892
cfn=(186)
calls=892 0x4032ca 159 
* * 181946 55156 36050 3 1 0 3 1 0 28500 297 1784
+5 * 892
jump=892 +28 * 
* * 
+28 * 892 0 0 1 0 0 1
+4 * 892 892
+1 * 892 892
+1 * 892 892

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 900 0 900 1 0 0 1
+1 * 900 0 0 1 0 0 1
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 0 900 900
+5 0 900 0 0 0 0 0 0 0 0 900
+2 0 900 900
+4 0 900 900
+4 0 900
+5 0 900
+3 0 900
+3 0 900 0 900
fi=(6)
cfi=(5)
cfn=(100)
calls=900 0x40461a 99 
* 0 303847 48172 46602 37 28 46 37 28 46 47134 2034 1800
+5 0 900
fi=(6)
jump=900 +7 0 
* 0 
+7 0 900 900
+1 0 900 900

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 301273 0 301273
+1 * 301273
+3 * 301273 0 301273
+4 * 301273 0 301273
+4 +1 301273 301273
+4 * 301273 301273
+3 * 301273 301273
+4 * 301273
+4 * 301273
+3 * 301273 301273
+1 * 301273 301273

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 301273 0 301273
+1 * 301273
+3 * 301273 0 301273 1 0 0 1
+4 * 301273 0 301273
+4 +1 301273 301273
+4 * 301273 301273
+3 * 301273 301273
+4 * 301273
+4 * 301273
+3 * 301273 301273
+1 * 301273 301273

fn=(192)
0x403296 79 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 892
+4 * 892
+3 * 892 0 892
cfi=(4)
cfn=(194)
calls=892 0x403d7e +42 
* * 12488 4460 4460 1 0 0 1
+5 * 892 892
+1 * 892 892

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(54)
0x404a36 450 892 0 892
+1 * 892
+3 * 892 0 892
+1 * 892
+4 * 892 0 892 1 0 0 1
+4 * 892 0 892
+4 * 892 0 892
+4 +10 892 892
+4 * 892
+3 * 892 0 892
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=892 0x404c38 288 
* * 13380 5352 4460 3 0 0 3
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(56)
calls=892 0x404c38 288 
* * 13380 5352 4460
+5 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=892 0x404c52 -36 
* * 443784 149876 144528 20 3 6 20 3 6 20144 1187 1780 222
+5 +1 892
+4 * 892 892
+1 * 892 892
+1 * 892 892

fn=(60)
0x404c52 424 892 0 892
+1 * 892
+3 * 892 0 892
+2 * 892 0 892
+1 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +4 892 892
+4 * 892
+3 * 892 0 892
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=892 0x40492d 277 
* * 13380 5352 4460 2 0 0 2
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=892 0x404d9d 277 
* * 22300 8028 7136 2 0 1 2 0 1
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(66)
calls=892 0x404d9d 277 
* * 22300 8028 7136
+5 * 892
+3 * 892
+3 * 892
+3 * 892 0 892
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=892 0x404db7 -49 
* * 360828 122224 116876 15 3 5 15 3 5 20144 1187 1780 222
+5 +1 892
+4 * 892 892
+1 * 892 892
+2 * 892 892
+1 * 892 892

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 940 0 940 1 0 0 1
+1 * 940
+3 * 940
+4 * 940 0 940
+4 +1 940 940
+4 * 940
+3 * 940 0 940 1 0 0 1
cfi=(13)
cfn=(64)
calls=940 -33 -66 
* * 5640 2820 1880
+5 * 940 940
+1 * 940 940

fn=(66)
0x404d9d 277 1784 0 1784
+1 * 1784
+3 * 1784
+4 * 1784 0 1784
+4 +1 1784 1784
+4 * 1784
+3 * 1784 0 1784
cfi=(13)
cfn=(68)
calls=1784 0x404f1a -58 
* * 28544 10704 8920 2 0 1 2 0 1
+5 * 1784 1784
+1 * 1784 1784

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 892 0 892
+1 * 892
+3 * 892 0 892
+1 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +10 892 892
+4 * 892
+3 * 892 0 892
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=892 0x404bc6 288 
* * 13380 5352 4460 3 0 0 3
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(122)
calls=892 0x404bc6 288 
* * 13380 5352 4460
+5 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=892 0x404be0 -36 
* * 443784 149876 144528 4 0 35 4 0 35 20144 1104 1780
+5 +1 892
+4 * 892 892
+1 * 892 892
+1 * 892 892

fn=(128)
0x404878 277 940 0 940
+1 * 940
+3 * 940
+4 * 940 0 940 1 0 0 1
+4 +1 940 940
+4 * 940
+3 * 940 0 940
cfi=(13)
cfn=(130)
calls=940 -33 -66 
* * 5640 2820 1880 0 0 1 0 0 1
+5 * 940 940
+1 * 940 940

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1784 0 1784
+1 * 1784
+3 * 1784
+4 * 1784 0 1784
+4 +1 1784 1784
+4 * 1784
+3 * 1784 0 1784
cfi=(13)
cfn=(134)
calls=1784 0x404e98 -58 
* * 28544 10704 8920 2 0 0 2
+5 * 1784 1784
+1 * 1784 1784

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +8 892 0 892
+4 +3 892 892
+4 * 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=892 0x404eb5 -22 
* * 347448 117764 111524 1 0 35 1 0 35 20144 1104 1780
+5 +1 892 892
+1 * 892 892

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784
+4 * 1784 0 1784
+4 +1 1784 1784
+4 * 1784
+3 * 1784 0 1784
cfi=(13)
cfn=(124)
calls=1784 0x404d36 -77 
* * 10704 5352 3568 2 0 0 2
+5 * 1784 1784
+1 * 1784 1784

fn=(56)
0x404c38 288 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784
+4 * 1784 0 1784 1 0 0 1
+4 +1 1784 1784
+4 * 1784
+3 * 1784 0 1784
cfi=(13)
cfn=(58)
calls=1784 0x404d8f -77 
* * 10704 5352 3568 1 0 0 1
+5 * 1784 1784
+1 * 1784 1784

fn=(74)
0x404f37 368 908 0 908
+1 * 908
+3 * 908
+4 * 908 0 908 1 0 0 1
+4 * 908 0 908
+4 * 908 0 908
+4 +2 908 908
+4 * 908 908
+4 * 908
+3 * 908
+3 * 908
+4 * 908 0 908
+4 +1 908 908
+5 * 908 0 0 0 0 0 0 0 0 908
jcnd=8/908 +33 +2 
* * 
+2 +1 900 900
+4 * 900
+8 * 900 900
+4 * 900 900
+4 * 900
+3 * 900 0 0 1 0 0 1
+3 * 900 0 900 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=900 0x3877c83840 0 
* * 323594 108268 106473 11 2 22 11 2 22 19336 1191 895 222
* * 900 900 0 1 1 0 1 1 0 0 0 900
+5 +1 908 908
+4 * 908
+8 * 908 908
+4 * 908
+3 +1 908 908
+1 * 908 908

fn=(140)
0x404eb5 368 908 0 908
+1 * 908
+3 * 908
+4 * 908 0 908 1 0 0 1
+4 * 908 0 908
+4 * 908 0 908 0 0 1 0 0 1
+4 +2 908 908
+4 * 908 908
+4 * 908
+3 * 908
+3 * 908
+4 * 908 0 908
+4 +1 908 908
+5 * 908 0 0 0 0 0 0 0 0 908
jcnd=8/908 +33 +2 
* * 
+2 +1 900 900
+4 * 900
+8 * 900 900
+4 * 900 900
+4 * 900
+3 * 900
+3 * 900 0 900
cob=(2)
cfi=(9)
cfn=(78)
calls=900 0x3877c83840 0 
* * 323594 108268 106473 0 0 36 0 0 36 19336 1110 895
* * 900 900 0 0 0 0 0 0 0 0 0 900
+5 +1 908 908
+4 * 908
+8 * 908 908
+4 * 908
+3 +1 908 908
+1 * 908 908

fn=(72)
0x404db7 379 892 0 892
+1 * 892
+3 * 892
+4 * 892 0 892 1 0 0 1
+4 * 892 0 892
+4 * 892 0 892
+4 +8 892 0 892
+4 +3 892 892
+4 * 892 892
+4 * 892 892
+4 * 892
+3 * 892
+3 * 892 0 892
cfn=(74)
calls=892 0x404f37 -22 
* * 347448 117764 111524 14 3 5 14 3 5 20144 1187 1780 222
+5 +1 892 892
+1 * 892 892

fn=(126)
0x404be0 424 892 0 892
+1 * 892
+3 * 892 0 892
+2 * 892 0 892
+1 * 892
+4 * 892 0 892
+4 * 892 0 892
+4 * 892 0 892
+4 +4 892 892
+4 * 892
+3 * 892 0 892
cfn=(128)
calls=892 0x404878 277 
* * 13380 5352 4460 1 0 0 1
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(132)
calls=892 0x404d44 277 
* * 22300 8028 7136 2 0 0 2
+5 * 892
+3 * 892 892
+4 * 892
+3 * 892 0 892
cfn=(132)
calls=892 0x404d44 277 
* * 22300 8028 7136
+5 * 892
+3 * 892
+3 * 892
+3 * 892 0 892
cfn=(138)
calls=892 0x404d5e -49 
* * 360828 122224 116876 1 0 35 1 0 35 20144 1104 1780
+5 +1 892
+4 * 892 892
+1 * 892 892
+2 * 892 892
+1 * 892 892

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784 0 1784
+4 +1 1784 1784
+4 * 1784 1784
+1 * 1784 1784

fn=(110)
0x404380 726 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784 0 1784
+4 * 1784 0 1784
+4 * 1784 1784
+4 * 1784 1784
+3 * 1784 1784
+4 * 1784 0 1784
+3 * 1784 1784
+1 * 1784 1784

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784 0 1784
+4 +1 1784 1784
+4 * 1784 1784
+1 * 1784 1784

fn=(44)
0x404468 726 1784 0 1784
+1 * 1784
+3 * 1784 0 1784
+4 * 1784 0 1784
+4 * 1784 1784
+4 * 1784 1784
+3 * 1784 1784
+4 * 1784 0 1784 1 0 0 1
+3 * 1784 1784
+1 * 1784 1784

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 900 0 900 1 0 0 1
+1 * 900
+3 * 900 0 900
+4 * 900 0 900 1 0 0 1
+4 * 900 900
+1 * 900 900

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 900 0 900 1 0 0 1
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 +4 900 900
+4 * 900 900
+4 * 900
+3 * 900
+3 * 900 0 900
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=900 0x40454c -14 
* * 5400 1800 2700 1 0 0 1
+5 +2 900 900
+1 * 900 900

fn=(150)
0x40326c 148 900 0 900
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 * 900 0 900
+4 +3 900 900 0 1 0 0 1
+4 * 900 900
+4 * 900
+3 * 900
+3 * 900 0 900
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=900 0x403d1a -29 
* * 16200 5400 6300 3 0 0 3
+5 +1 900 900
+1 * 900 900

fn=(180)
0x40334a 148 900 0 900
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 * 900 0 900
+4 +3 900 900
+4 * 900 900
+4 * 900
+3 * 900
+3 * 900 0 900
cfn=(182)
calls=900 0x403dcc -29 
* * 16200 5400 6300 2 0 0 2
+5 +1 900 900
+1 * 900 900

fn=(152)
0x403d1a 122 900 0 900 1 0 0 1
+1 * 900
+3 * 900
+4 * 900 0 900
+4 * 900 0 900
+4 +4 900 900
+4 * 900 900
+4 * 900
+3 * 900
+3 * 900 0 900
cfn=(154)
calls=900 0x4044f8 -14 
* * 5400 1800 2700 2 0 0 2
+5 +2 900 900
+1 * 900 900

fn=(184)
0x40454c 112 900 0 900 1 0 0 1
+1 * 900
+3 * 900 0 900
+4 * 900 0 900
+4 * 900 900
+1 * 900 900

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2437 443 450 0 2 7 0 2 7 344 46 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3404 702 656 16 2 3 16 2 3 538 64 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 5 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446
+3 * 446 0 446
cfi=(2)
cfn=(2)
calls=446 0x402d74 645 
* * 5798 2676 892
+5 * 446
+3 * 446 0 446
+3 +1 446 446
+6 * 446 0 446
+3 * 446 446
+6 * 446 0 446
+3 +1 446 446
+6 * 446 0 446 1 0 0 1
+3 * 446 446
+6 * 446 0 446
+3 +2 446 0 446
+7 * 446
jump=446 +86 * 
* * 
+2 +1 100127 100127
+3 * 100127
+3 * 100127 100127
+4 * 100127
+3 * 100127
+3 * 100127 0 100127
cfi=(2)
cfn=(144)
calls=100127 0x402d9a 770 
* * 1101397 500635 300381
+5 * 100127 100127
+4 * 100127 100127
+5 * 100127
+4 * 100127 0 100127
+5 +1 100127 100127
+3 * 100127
+3 * 100127 100127
+4 * 100127
+3 * 100127
+3 * 100127 0 100127
cfi=(2)
cfn=(146)
calls=100127 0x402dba 770 
* * 1101397 500635 300381 1 0 0 1
+5 * 100127 100127
+2 * 100127
+4 * 100127 100127
+5 * 100127
+4 * 100127 0 100127
+5 -2 100127 0 100127
+4 * 100127 100127
+3 * 100127
+3 * 100127 100127
+3 * 100127 0 0 0 0 0 0 0 0 100127 447
jcnd=99681/100127 -93 +1 
* * 
-9 * 446 446 0 1 0 0 1
+3 * 446
+3 * 446 446
+3 * 446 0 0 0 0 0 0 0 0 446
jcnd=446/446 -93 +1 
* * 
+2 +4 446 446
+3 * 446
+3 * 446
+4 * 446 446 0 1 0 0 1
+5 * 446
+4 * 446
+3 * 446 0 446
+5 +1 446 446
+3 * 446
+3 * 446
+4 * 446 446
+5 * 446
+4 * 446
+3 * 446 0 446
+5 +1 446 0 446
+7 * 446
jump=446 0x4016ee * 
* * 
+2 +1 100127 100127
+3 * 100127
+3 * 100127 100127
+4 * 100127
+3 * 100127 0 0 1 0 0 1
+3 * 100127 0 100127
cfi=(2)
cfn=(146)
calls=100127 0x402dba 770 
* * 1101397 500635 300381
+5 * 100127 100127
+2 * 100127
+4 * 100127 100127
+5 * 100127 0 100127
+5 +1 100127 100127
+3 * 100127
+3 * 100127 100127
+4 * 100127
+3 * 100127
+3 * 100127 0 100127
cfi=(2)
cfn=(144)
calls=100127 0x402d9a 770 
* * 1101397 500635 300381
+5 * 100127 100127
+4 * 100127 100127
+5 * 100127 0 100127
+5 +1 100127 100127
+5 * 100127 100127
+5 * 100127 100127
+5 * 100127
+4 * 100127 0 100127
+5 +1 100127 100127
+5 * 100127 100127
+5 * 100127 100127
+5 * 100127
+4 * 100127 0 100127
+5 -4 100127 0 100127
+4 * 100127 100127
+3 * 100127
+3 * 100127 100127
+3 * 100127 0 0 0 0 0 0 0 0 100127 447
jcnd=99681/100127 0x401672 +1 
* * 
-9 * 446 446 0 1 0 0 1
+3 * 446
+3 * 446 446
+3 * 446 0 0 0 0 0 0 0 0 446
jcnd=446/446 0x401672 +1 
* * 
+6 +6 446 446 0 1 0 0 1
+5 * 446 446
+5 * 446 0 446
+5 +2 446 446
+3 +1 446 0 446
+3 * 446 446
+5 * 446 446
+1 * 446 446

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 446
+7 * 446
+7 * 446
+3 * 446
+3 * 446 0 446
cfi=(2)
cfn=(4)
calls=446 0x4030b2 310 
* * 519454 152772 144798 64 15 19 64 15 19 34103 1640 1782 222
+5 * 446
+7 * 446
+7 * 446
+3 * 446
+3 * 446 0 446
cfi=(2)
cfn=(80)
calls=446 0x402ff4 310 
* * 518155 151835 142200 45 26 78 45 26 78 34023 1713 1782
+5 * 446 0 0 1 0 0 1
+7 * 446
+7 * 446
+3 * 446
+3 * 446 0 446
cfn=(142)
calls=446 0x401585 -52 
* * 10442198 4616992 2410630 8 0 0 8 0 0 201146 894
+5 * 446 0 446
+8 * 446 446
+6 * 446 0 446
+6 * 446
+7 * 446
+3 * 446 0 446
cfi=(2)
cfn=(148)
calls=446 0x402df4 414 
* * 115244 36266 25957 33 6 0 33 6 0 13432 277 892
+5 * 446
+7 * 446
+3 * 446 0 446 1 0 0 1
cfi=(2)
cfn=(178)
calls=446 0x402e74 414 
* * 118179 37390 26945 7 1 0 7 1 0 14250 150 892
+5 +2 446
+7 * 446
+7 * 446
+3 * 446
+3 * 446 0 446
cfi=(2)
cfn=(4)
calls=446 0x4030b2 310 
* * 519072 152743 144677 4 1 1 4 1 1 34074 1202 1782
+5 * 446
+7 * 446
+7 * 446
+3 * 446
+3 * 446 0 446
cfi=(2)
cfn=(80)
calls=446 0x402ff4 310 
* * 516100 151699 141966 0 0 0 0 0 0 33617 1361 1782
+5 * 446 446
+6 * 446 0 0 1 0 0 1
+7 * 446
+7 * 446 0 446
+6 * 446 446
+8 * 446
+3 * 446
+3 * 446 0 446
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=446 0x401719 -33 
* * 4832410 2012352 1108087 4 0 0 4 0 0 100573 447
+5 * 446 0 446
+8 * 446 446
+6 * 446 0 446
+6 * 446
+7 * 446 0 0 1 0 0 1
+3 * 446 0 446
cfi=(2)
cfn=(148)
calls=446 0x402df4 414 
* * 115244 36266 25957 0 0 0 0 0 0 13432 272 892
+5 * 446
+7 * 446
+3 * 446 0 446
cfi=(2)
cfn=(178)
calls=446 0x402e74 414 
* * 118179 37390 26945 0 0 0 0 0 0 14250 147 892
+5 +2 446 446
+7 * 446
+3 * 446 0 446
cfi=(2)
cfn=(2)
calls=446 0x402d74 645 
* * 5798 2676 892
+5 * 446 446
+6 * 446
+3 * 446
+3 * 446
+3 * 446 446
+7 * 446
+3 * 446 0 0 1 0 0 1
+3 * 446 0 446
cfi=(2)
cfn=(144)
calls=446 0x402d9a 770 
* * 4906 2230 1338
+5 * 446
+3 * 446
+7 * 446
+3 * 446
+3 * 446 0 446
cfi=(2)
cfn=(200)
calls=446 0x402eda 901 
* * 41224 15469 11846 42 31 10 42 31 10 1772 85 47
+5 +1 446 446
+7 * 446
+3 * 446 0 446
cfi=(2)
cfn=(10)
calls=446 0x402f54 645 
* * 5798 2676 892 0 1 0 0 1
+5 * 446 446
+6 * 446
+3 * 446
+3 * 446
+3 * 446 446
+7 * 446 0 0 1 0 0 1
+3 * 446
+3 * 446 0 446
cfi=(2)
cfn=(146)
calls=446 0x402dba 770 
* * 4906 2230 1338
+5 * 446
+3 * 446
+7 * 446
+3 * 446
+3 * 446 0 446
cfi=(2)
cfn=(244)
calls=446 0x402f7a 901 
* * 40290 15227 11643 19 31 45 19 31 45 1587 67 47
+5 +1 446 446
+7 * 446
+3 * 446 0 446
cfi=(2)
cfn=(10)
calls=446 0x402f54 645 
* * 5798 2676 892
+5 * 446 446
+6 * 446
+3 * 446
+3 * 446
+3 * 446 446 0 1 0 0 1
+7 * 446
+3 * 446
+3 * 446 0 446
cfi=(2)
cfn=(146)
calls=446 0x402dba 770 
* * 4906 2230 1338
+5 * 446 446
+2 * 446
+4 * 446 446
+8 * 446 446
+8 * 446 0 446
+8 +1 446 446
+7 * 446
+3 * 446 0 446
cfi=(2)
cfn=(2)
calls=446 0x402d74 645 
* * 5798 2676 892
+5 * 446 446 0 1 0 0 1
+6 * 446
+3 * 446
+3 * 446
+3 * 446 446
+7 * 446
+3 * 446
+3 * 446 0 446
cfi=(2)
cfn=(144)
calls=446 0x402d9a 770 
* * 4906 2230 1338
+5 * 446 446
+4 * 446 446
+8 * 446
+4 * 446 446
+8 * 446
+3 * 446 0 446
+8 +2 446 0 446
+7 -12 446 446
+8 * 446 446
+7 * 446 0 0 0 0 0 0 0 0 446 1
jcnd=1/446 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 446
+7 * 446
+3 * 446 0 446
cfi=(2)
cfn=(2)
calls=446 0x402d74 645 
* * 5798 2676 892 2 0 1 2 0 1
+5 * 446
+3 * 446 446
+7 * 446
+3 * 446 0 446
cfi=(2)
cfn=(2)
calls=446 0x402d74 645 
* * 5798 2676 892 0 1 0 0 1
+5 * 446
+3 * 446 0 0 0 0 0 0 0 0 446 1
+2 * 446 0 0 1 0 0 1
+5 * 446
jump=446 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 446
+2 * 446 0 0 0 0 0 0 0 0 446
jcnd=446/446 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446
+4 * 446 0 446
+4 * 446 0 446
+5 +1 446 446
+4 * 446
+3 * 446 0 446
cfi=(2)
cfn=(2)
calls=446 0x402d74 645 
* * 5798 2676 892
+5 * 446
+3 * 446 0 446
+3 +1 446 446 0 1 0 0 1
+6 * 446 0 446
+3 * 446 446
+6 * 446 0 446
+3 +2 446 0 446
+7 * 446
jump=446 +86 * 
* * 
+2 +1 100127 100127
+3 * 100127
+3 * 100127 100127
+4 * 100127
+3 * 100127
+3 * 100127 0 100127
cfi=(2)
cfn=(144)
calls=100127 0x402d9a 770 
* * 1101397 500635 300381
+5 * 100127 100127
+4 * 100127 100127
+5 * 100127
+4 * 100127 0 100127
+5 +1 100127 100127
+3 * 100127
+3 * 100127 100127
+4 * 100127
+3 * 100127
+3 * 100127 0 100127
cfi=(2)
cfn=(146)
calls=100127 0x402dba 770 
* * 1101397 500635 300381
+5 * 100127 100127
+2 * 100127
+4 * 100127 100127
+5 * 100127
+4 * 100127 0 100127
+5 -2 100127 0 100127
+4 * 100127 100127
+3 * 100127
+3 * 100127 100127
+3 * 100127 0 0 0 0 0 0 0 0 100127 447
jcnd=99681/100127 -93 +1 
* * 
-9 * 446 446 0 1 0 0 1
+3 * 446
+3 * 446 446
+3 * 446 0 0 0 0 0 0 0 0 446
jcnd=446/446 -93 +1 
* * 
+2 +4 446 446
+3 * 446
+3 * 446 0 0 1 0 0 1
+4 * 446 446
+5 * 446
+4 * 446
+3 * 446 0 446
+5 +1 446 446
+3 * 446
+3 * 446
+4 * 446 446
+5 * 446
+4 * 446
+3 * 446 0 446
+5 +1 446 446
+5 * 446 446
+5 * 446 446
+5 * 446 0 0 1 0 0 1
+4 * 446
+3 * 446 0 446
+5 +2 446 446
+3 +1 446 0 446
+3 * 446 446
+5 * 446 446
+1 * 446 446

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1800 0 1800 1 0 0 1
+5 0 1800 0 1800
+5 0 1800
+3 0 1800 0 1800
+5 0 1800
+4 0 1800 1800 0 0 1 0 0 1
+7 0 1800 1800 0 0 1 0 0 1
+3 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800
+6 0 1800 1800 0 0 1 0 0 1
+7 0 1800 1800 0 1 1 0 1 1
+4 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800
+2 0 1800 1800 0 0 1 0 0 1
+3 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800
jcnd=1800/1800 +97 0 
* 0 
+18 0 1800
+3 0 1800
+3 0 1800 0 1800
cfn=(38) _int_malloc
calls=1800 0x3877c79a00 0 
* 0 459798 56666 67707 44 34 61 44 34 61 73011 3643
+5 0 1800
+3 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800
+2 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800
+2 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800 7
+2 0 1800 1800
+7 0 1800 0 0 0 0 0 0 0 0 1800
jcnd=1800/1800 +13 0 
* 0 
+13 0 1800 0 1800
+2 0 1800 0 0 0 0 0 0 0 0 1800 85
+6 0 1800
+3 0 1800 1800
+4 0 1800 1800
+5 0 1800 1800
+5 0 1800
+4 0 1800 1800
+1 0 1800 0 0 1 0 0 1
+5 0 1800 1800 0 0 1 0 0 1
+7 0 1800 0 0 0 0 0 0 0 0 1800
jcnd=1800/1800 +14 0 
* 0 
+14 0 1800 0 1800 1 0 0 1
+3 0 1800 0 0 0 0 0 0 0 0 1800
+6 0 1800
jump=1800 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1800 0 1800 1 0 0 1
+2 0 1800
+3 0 1800
+3 0 1800 0 1800
+2 0 1800
+3 0 1800 0 1800
+1 0 1800
+3 0 1800 0 1800
+1 0 1800
+3 0 1800
+4 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800
+6 0 1800
+4 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800 7
jcnd=10/1800 0x3877c838d1 0 
* 0 
+2 0 1790
+3 0 1790
+3 0 1790
+3 0 1790
+3 0 1790
+3 0 1790 0 0 0 0 0 0 0 0 1790
jcnd=1790/1790 +41 0 
* 0 
+41 0 1790 0 0 1 0 0 1
+3 0 1790 0 0 0 0 0 0 0 0 1790
jcnd=1790/1790 0x3877c839c0 0 
* 0 
+24 0 1790
+3 0 1790
+4 0 1790
+3 0 1790
+3 0 1790
+3 0 1790
+3 0 1790
+3 0 1790 0 0 0 0 0 0 0 0 1790 962
jcnd=902/1790 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 898
+10 0 898 898 0 0 1 0 0 1
+3 0 898
+4 0 898 0 898
+3 0 898
+4 0 898
+4 0 898 0 0 0 0 0 0 0 0 898
jcnd=898/898 -18 0 
* 0 
-18 0 2750 2750
+3 0 2750
+4 0 2750 0 2750
+3 0 2750
+4 0 2750
+4 0 2750 0 0 0 0 0 0 0 0 2750 11
jcnd=1852/2750 -18 0 
* 0 
+2 0 1800
+4 0 1800
+3 0 1800 1800
+1 0 1800 1800
+1 0 1800 1800
+2 0 1800 1800 0 1 0 0 1
+2 0 1800 1800
0x3877c839c0 0 1790 0 0 1 0 0 1
+3 0 1790
+3 0 1790
+3 0 1790
+4 0 1790 0 1790 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1790 0x3877c89b20 0 
* 0 545402 203888 200308 6 1 57 6 1 57 26044 1321 1790 222
+5 0 1790
jump=1790 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1800 1800 0 1 1 0 1 1
+7 0 1800 1800 0 0 1 0 0 1
+3 0 1800
+3 0 1800 0 0 1 0 0 1 0 0 1800
+6 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800
+6 0 1800 1800
+4 0 1800
+4 0 1800
+2 0 1800 0 0 0 0 0 0 0 0 1800
+2 0 1800
+2 0 1800
+7 0 1800 0 0 0 0 0 0 0 0 1800
jcnd=1800/1800 +14 0 
* 0 
+14 0 1800
+2 0 1800
cfn=(170) _int_free
calls=1800 0x3877c78650 0 
* 0 184619 49559 29317 19 3 0 19 3 0 44977 860

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 7 7
+5 0 7
+3 0 7 7
+5 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+9 0 7 0 7
+4 0 7 0 7
+4 0 7 0 0 0 0 0 0 0 0 7 3
jcnd=7/7 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=19/20 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
-29 0 19
+3 0 19 0 19
+4 0 19 0 19
+4 0 19
+4 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19
+3 0 19 0 0 0 0 0 0 0 0 19 8
jcnd=7/19 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 10
jcnd=7/20 0x3877c75e68 0 
* 0 
+6 0 13 0 13
+6 0 13
jump=13 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1800 0 1800 1 0 0 1
+2 0 1800 0 1800
+2 0 1800 0 1800
+2 0 1800
+3 0 1800 0 1800
+2 0 1800 0 1800
+1 0 1800 0 1800
+1 0 1800
+3 0 1800
+4 0 1800 1800
+4 0 1800 0 1800
+4 0 1800
+3 0 1800
+4 0 1800
+3 0 1800
+3 0 1800
+3 0 1800 0 0 1 0 0 1 0 0 1800
+6 0 1800
+4 0 1800 0 0 0 0 0 0 0 0 1800
+6 0 1800
+4 0 1800 0 0 0 0 0 0 0 0 1800
+6 0 1800 1800
+7 0 1800 0 0 0 0 0 0 0 0 1800 4
jcnd=1676/1800 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1676
+2 0 1676 0 0 0 0 0 0 0 0 1676
+6 0 1676 1676 0 1 0 0 1
+4 0 1676
+3 0 1676
+2 0 1676 0 0 0 0 0 0 0 0 1676
jcnd=1676/1676 0x3877c78a40 0 
* 0 
+6 0 1676 1676
+4 0 1676
+3 0 1676 0 0 0 0 0 0 0 0 1676
+6 0 1676 1676
+5 0 1676
+4 0 1676 0 0 0 0 0 0 0 0 1676
jcnd=1676/1676 0x3877c7907c 0 
* 0 
+6 0 1676 1676
+5 0 1676
+4 0 1676 0 0 0 0 0 0 0 0 1676
+6 0 1676
+4 0 1676 0 0 1 0 0 1 0 0 1676
+6 0 1676
+4 0 1676 1676
+7 0 1676 0 0 0 0 0 0 0 0 1676
+6 0 1676 1676
+6 0 1676
+2 0 1676 0 0 0 0 0 0 0 0 1676
+6 0 1676 1676
+4 0 1676 0 0 0 0 0 0 0 0 1676 5
jcnd=1672/1676 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1676 1676 0 1 0 0 1
+4 0 1676 0 0 0 0 0 0 0 0 1676 354
jcnd=354/1676 0x3877c78bf0 0 
* 0 
+6 0 1322 1322 0 0 1 0 0 1
+6 0 1322 0 0 1 0 0 1 0 0 1322 76
jcnd=61/1322 0x3877c78a78 0 
* 0 
+6 0 1261 1261
+5 0 1261 1261
+5 0 1261 1261
+4 0 1261 0 0 0 0 0 0 0 0 1261
+6 0 1261 1261
+4 0 1261 0 0 0 0 0 0 0 0 1261
+6 0 1261 1261
+9 0 1261 0 1261
+4 0 1261 0 1261
+4 0 1261 0 0 0 0 0 0 0 0 1261 333
jcnd=853/1261 +16 0 
* 0 
+2 0 408 408
+5 0 408
+3 0 408 0 0 1 0 0 1 0 0 408
+6 0 1261
+3 0 1261
+4 0 1261 1261
+4 0 1261 1261
+4 0 1261 0 0 0 0 0 0 0 0 1261
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 1322
+7 0 1322 0 1322
+4 0 1322 0 1322
+4 0 1322 0 0 0 0 0 0 0 0 1322 86
jcnd=441/1322 +18 0 
* 0 
+2 0 881 0 881
+8 0 881 0 881
+8 0 881 0 881
+4 0 881
+3 0 881 0 881 1 0 0 1
+4 0 881
+4 0 881 0 881
+4 0 881 0 881
+4 0 881
+7 0 881 0 0 0 0 0 0 0 0 881
jcnd=881/881 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 354
+7 0 354 0 0 0 0 0 0 0 0 354
jcnd=354/354 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1676 0 0 1 0 0 1
+5 0 1676 1676
+4 0 1676 1676
+7 0 1676 0 0 0 0 0 0 0 0 1676
jcnd=1676/1676 +16 0 
* 0 
+16 0 1676 0 1676
+5 0 1676 0 0 0 0 0 0 0 0 1676
+6 0 1676
+3 0 1676
jump=1676 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1676 1676 0 1 0 0 1
+4 0 1676
+2 0 1676 0 0 0 0 0 0 0 0 1676
+6 0 1676 1676
+7 0 1676 0 0 0 0 0 0 0 0 1676
jcnd=1676/1676 +15 0 
* 0 
+15 0 1676 0 1676 1 0 0 1
+4 0 1676 0 0 0 0 0 0 0 0 1676
+6 0 1676
+4 0 1676 1676
+1 0 1676 1676
+1 0 1676 1676
+2 0 1676 1676
+2 0 1676 1676
+2 0 1676 1676
+2 0 1676 1676
0x3877c78bf0 0 354 0 0 1 0 0 1
+3 0 354 0 354
+4 0 354
+3 0 354
+4 0 354 0 354 1 0 0 1
+4 0 354
jump=354 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1676 1676 0 1 1 0 1 1
+4 0 1676 0 0 1 0 0 1
+7 0 1676
+4 0 1676
+3 0 1676
+3 0 1676 0 0 0 0 0 0 0 0 1676
jcnd=1676/1676 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1790 0 0 1 0 0 1
+7 0 1790
+3 0 1790
+3 0 1790 1790 0 0 1 0 0 1
+4 0 1790
+4 0 1790 0 0 0 0 0 0 0 0 0 0 1790 222
jump=216 0x3877c89be8 0 
* 0 
jump=226 0x3877c89bd0 0 
* 0 
jump=224 0x3877c89bb8 0 
* 0 
jump=224 +11 0 
* 0 
jump=224 0x3877c89c48 0 
* 0 
jump=226 0x3877c89c30 0 
* 0 
jump=224 0x3877c89c18 0 
* 0 
jump=226 0x3877c89c00 0 
* 0 
+11 0 224 224
+3 0 224
+4 0 224
+4 0 224 224
+4 0 224
+4 0 224 0 224
+4 0 224
+9 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-40 0 24702 24702
+4 0 24702 0 24702 0 0 14 0 0 14
+4 0 24702 24702
+4 0 24702 0 24702
+4 0 24702 24702
+4 0 24702 0 24702 0 0 4 0 0 4
+4 0 24702 24702
+4 0 24702 0 24702 0 0 18 0 0 18
+4 0 24702
+4 0 24702
+4 0 24702 0 0 0 0 0 0 0 0 24702 1317
jcnd=1754/24702 0x3877c89c60 0 
* 0 
-32 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226
+4 0 226
+4 0 226 0 0 0 0 0 0 0 0 226
jcnd=10/226 0x3877c89c60 0 
* 0 
-24 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-16 0 226 226 0 1 0 0 1
+4 0 226 0 226
+4 0 226 0 0 1 0 0 1
+4 0 226
+4 0 226 0 0 0 0 0 0 0 0 226 4
jcnd=10/226 0x3877c89c60 0 
* 0 
+6 0 23812
+4 0 23812 23812
+3 0 23812 0 23812 0 0 20 0 0 20
+3 0 23812 23812
+4 0 23812 0 23812
+4 0 23812 23812
+4 0 23812 0 23812
+4 0 23812 23812
+4 0 23812 0 23812
+4 0 23812
jump=23812 -80 0 
* 0 
-30 0 216 216
+3 0 216 0 216
+3 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216 0 0 1 0 0 1
+4 0 216 216
+4 0 216 0 216
+4 0 216
jump=216 -80 0 
* 0 
-24 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226
jump=226 -80 0 
* 0 
-16 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
jump=224 -80 0 
* 0 
+8 0 224 224
+3 0 224
+4 0 224 0 0 1 0 0 1
+4 0 224
+4 0 224
jump=224 -39 0 
* 0 
+9 0 226
+3 0 226 0 0 0 0 0 0 0 0 226
+6 0 226 226
+3 0 226
+4 0 226
jump=226 -72 0 
* 0 
+8 0 216
+4 0 216 216
+3 0 216 0 0 0 0 0 0 0 0 216
+2 0 216
+4 0 216
jump=216 -99 0 
* 0 
+11 0 226 226 0 1 0 0 1
+3 0 226
+4 0 226
+4 0 226
+4 0 226
jump=226 0x3877c89b78 0 
* 0 
+9 0 224 224
+3 0 224
+4 0 224
+4 0 224
+4 0 224
jump=224 0x3877c89b70 0 
* 0 
+9 0 226 226
+3 0 226
+4 0 226
+4 0 226
+4 0 226
jump=226 0x3877c89b68 0 
* 0 
+9 0 224 224
+3 0 224
+4 0 224
+4 0 224
+4 0 224
jump=224 0x3877c89b60 0 
* 0 
+9 0 1790 0 1790 1 0 0 1
+3 0 1790 1790

fn=(104) alloc_perturb
0x3877c77180 0 1666 1666 0 1 0 0 1
+6 0 1666
+2 0 1666 0 0 0 0 0 0 0 0 1666 34
+2 0 1666 1666

fn=(38)
0x3877c79a00 0 1800 0 1800 1 0 0 1
+2 0 1800
+3 0 1800 0 1800
+2 0 1800 0 1800
+2 0 1800 0 1800 0 0 1 0 0 1
+2 0 1800
+3 0 1800 0 1800
+1 0 1800 0 1800
+1 0 1800
+4 0 1800
+4 0 1800 0 0 0 0 0 0 0 0 1800
+6 0 1800
+4 0 1800
+6 0 1800
+3 0 1800
+4 0 1800
+4 0 1800
+4 0 1800
+3 0 1800 0 0 0 0 0 0 0 0 1800
+6 0 1800 1800 0 1 1 0 1 1
+7 0 1800 0 0 0 0 0 0 0 0 1800 7
jcnd=1678/1800 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1666
+4 0 1666 1666
+1 0 1666 1666
+1 0 1666 1666
+2 0 1666 1666
+2 0 1666 1666
+2 0 1666 1666
+2 0 1666 1666
+7 0 1695
+7 0 1695 0 0 1 0 0 1 0 0 1695 7
jcnd=792/1695 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 1 0 0 1
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 792 0 0 1 0 0 1
+3 0 792
+4 0 792
+4 0 792 0 0 1 0 0 1 0 0 792
jcnd=792/792 0x3877c7a1a4 0 
* 0 
+30 0 792 792
+6 0 792
+5 0 792 0 0 0 0 0 0 0 0 792 1
jcnd=791/792 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 907 246 190 8 1 0 8 1 0 189 33
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1694 0 0 1 0 0 1
+3 0 1694
+3 0 1694
+3 0 1694
+4 0 1694
+3 0 1694
+4 0 1694 0 1694
+5 0 1694
+3 0 1694 0 1694
+4 0 1694 0 1694
+4 0 1694 0 1694
+5 0 1694
+3 0 1694
+3 0 1694
+3 0 1694
+3 0 1694
+4 0 1694
+4 0 1694 0 0 1 0 0 1
+4 0 1694 0 1694
+4 0 1694
+4 0 1694 0 1694
+5 0 1694 0 1694
+5 0 1694
+3 0 1694
+3 0 1694 0 1694
+5 0 1694
+5 0 1694
+3 0 1694 0 1694
+4 0 1694 0 1694
+4 0 1694
+6 0 1694 0 1694
+4 0 1694 0 1694
+5 0 1694 0 0 1 0 0 1
+3 0 1694
+3 0 1694
+3 0 1694
jump=1694 +87 0 
* 0 
+8 0 1175
+3 0 1175
+4 0 1175
+2 0 1175
+2 0 1175
+3 0 1175
+3 0 1175
+3 0 1175
+2 0 1175
+2 0 1175
+5 0 1175
+2 0 1175 1175
+4 0 1175
+3 0 1175
+4 0 1175 0 1175
+4 0 1175 0 1175
+8 0 1175
+7 0 1175 0 1175
+4 0 1175 0 1175
+4 0 1175 0 1175
+4 0 1175 0 0 0 0 0 0 0 0 1175
-38 0 856
+3 0 856
+4 0 856 0 856
+4 0 856 0 856
+8 0 856
+7 0 856 0 856
+4 0 856 0 856
+4 0 856 0 856
+4 0 856 0 0 0 0 0 0 0 0 856
+6 0 3726 3726 0 1 0 0 1
+4 0 3726
+3 0 3726 0 0 0 0 0 0 0 0 3726 87
jcnd=1631/3726 0x3877c79ef0 0 
* 0 
+6 0 2095 2095
+4 0 2095 2095
+4 0 2095
+4 0 2095 0 0 0 0 0 0 0 0 2095
+6 0 2095 2095 0 1 0 0 1
+7 0 2095 0 0 0 0 0 0 0 0 2095
+6 0 2095
+4 0 2095
+7 0 2095 0 0 0 0 0 0 0 0 2095 9
jcnd=811/2095 +11 0 
* 0 
+2 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284 599
jcnd=865/1284 0x3877c79e28 0 
* 0 
+6 0 2060
+3 0 2060 0 2060
+4 0 2060 0 2060
+5 0 2060 0 0 0 0 0 0 0 0 2060 16
jcnd=29/2060 0x3877c7a090 0 
* 0 
+6 0 2031
+7 0 2031 0 0 0 0 0 0 0 0 2031 394
jcnd=1175/2031 0x3877c79c50 0 
* 0 
+6 0 856 0 0 1 0 0 1
+3 0 856
+4 0 856
+4 0 856 0 0 0 0 0 0 0 0 856 12
jcnd=384/856 0x3877c79db0 0 
* 0 
+6 0 472
+3 0 472
+4 0 472
+2 0 472
+2 0 472
+3 0 472
+3 0 472
+8 0 472
+3 0 472
+2 0 472
+2 0 472
+4 0 472 472 0 0 3 0 0 3
+4 0 472
+3 0 472 0 0 1 0 0 1 0 0 472 9
jcnd=472/472 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 856 0 856
+4 0 856 0 856
+4 0 856
+3 0 856
jump=856 0x3877c79c73 0 
* 0 
+8 0 865 865 0 1 0 0 1
+4 0 865
+3 0 865 0 0 0 0 0 0 0 0 865 24
jcnd=443/865 0x3877c79ce1 0 
* 0 
+6 0 422 422
+5 0 422 0 0 0 0 0 0 0 0 422 8
jcnd=387/422 0x3877c79ce1 0 
* 0 
+6 0 35 0 0 1 0 0 1
+3 0 35
+3 0 35
+3 0 35
+7 0 35 0 35
+4 0 35 0 35
+4 0 35
+3 0 35 0 35
+4 0 35 0 35 0 0 16 0 0 16
+4 0 35 0 35
+4 0 35 0 0 0 0 0 0 0 0 35 4
jcnd=12/35 +18 0 
* 0 
+2 0 23 0 23 0 0 1 0 0 1
+8 0 23 0 23
+8 0 23
+7 0 23 0 23
+4 0 23
+3 0 23
+3 0 23
+3 0 23
+4 0 23
+3 0 23
+4 0 23
+3 0 23
+3 0 23
+4 0 23 0 23
+4 0 23 0 23 0 0 2 0 0 2
+4 0 23
+4 0 23
+3 0 23 0 23
cfn=(104)
calls=23 0x3877c77180 0 
* 0 92 46 0 0 0 0 0 0 0 23
-56 0 12
+7 0 12 0 12 1 0 0 1
+4 0 12
+3 0 12
+3 0 12
+3 0 12
+4 0 12
+3 0 12
+4 0 12
+3 0 12
+3 0 12
+4 0 12 0 12
+4 0 12 0 12 0 0 1 0 0 1
+4 0 12
+4 0 12
+3 0 12 0 12
cfn=(104)
calls=12 0x3877c77180 0 
* 0 48 24 0 0 0 0 0 0 0 12
+5 0 35
+3 0 35
jump=35 0x3877c79ae3 0 
* 0 
+55 0 1631 0 0 1 0 0 1
+7 0 1631
+3 0 1631 0 0 0 0 0 0 0 0 1631 8
jcnd=784/1631 0x3877c7a0b0 0 
* 0 
+6 0 1631 1631 0 1 0 0 1
+4 0 1631
+3 0 1631
+3 0 1631
+2 0 1631
+4 0 1631
+3 0 1631
+3 0 1631
+2 0 1631
+2 0 1631
+2 0 1631
+2 0 1631 1631 0 0 1 0 0 1
+8 0 1631
+5 0 1631
+5 0 1631
+2 0 1631 0 0 0 0 0 0 0 0 1631
-2 0 852
+2 0 852 0 0 0 0 0 0 0 0 852 1
jcnd=1/852 +14 0 
* 0 
+2 0 2482
+2 0 2482 0 0 0 0 0 0 0 0 2482 40
jcnd=1468/2482 +64 0 
* 0 
+2 0 1014
+8 0 1014
+3 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014 1
jcnd=1/1014 0x3877c79fc0 0 
* 0 
-6 0 770
+3 0 770
+3 0 770 0 0 0 0 0 0 0 0 770 4
jcnd=353/770 0x3877c79fc0 0 
* 0 
+2 0 1430
+2 0 1430 1430
+8 0 1430
+2 0 1430 0 0 0 0 0 0 0 0 1430 24
jcnd=769/1430 -20 0 
* 0 
+2 0 661
+2 0 661
+5 0 661
+3 0 661
+3 0 661
+2 0 661
+2 0 661
+5 0 661 0 0 0 0 0 0 0 0 661
jcnd=1/661 +14 0 
* 0 
+2 0 660
+2 0 660
+4 0 660
+2 0 660
+2 0 660 0 0 0 0 0 0 0 0 660 8
jcnd=596/660 -8 0 
* 0 
-8 0 13626
+4 0 13626
+2 0 13626
+2 0 13626 0 0 0 0 0 0 0 0 13626 921
jcnd=11694/13626 -8 0 
* 0 
-2 0 1468 0 0 1 0 0 1
+2 0 1468 0 0 0 0 0 0 0 0 1468 30
jcnd=1336/1468 -8 0 
* 0 
+2 0 2129 2129 0 0 18 0 0 18
+4 0 2129 0 0 1 0 0 1
+3 0 2129 0 0 0 0 0 0 0 0 2129 1072
jcnd=1277/2129 0x3877c7a1cf 0 
* 0 
+6 0 852
+2 0 852
+4 0 852
+2 0 852
+2 0 852
+2 0 852 0 852
+8 0 852
jump=852 0x3877c79f30 0 
* 0 
+37 0 354 354 0 1 0 0 1
+5 0 354 354
+4 0 354
+4 0 354 354
+5 0 354 0 0 0 0 0 0 0 0 354
jcnd=354/354 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 784 784
+4 0 784
+4 0 784
+2 0 784
+5 0 784 784 0 1 0 0 1
+4 0 784
+3 0 784 0 0 0 0 0 0 0 0 784 8
jcnd=736/784 0x3877c79f00 0 
* 0 
+6 0 48 48
+4 0 48 0 0 0 0 0 0 0 0 48
jcnd=48/48 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 792 0 0 1 0 0 1
+3 0 792 0 792
+4 0 792
jump=792 0x3877c79b99 0 
* 0 
+36 0 1277 1277 0 1 3 0 1 3
+4 0 1277 1277 0 0 1 0 0 1
+4 0 1277
+3 0 1277 1277
+4 0 1277
+4 0 1277
+3 0 1277
+3 0 1277 1277
+4 0 1277 0 0 0 0 0 0 0 0 1277
+6 0 1277 1277 0 0 1 0 0 1
+4 0 1277 0 0 0 0 0 0 0 0 1277
+6 0 1277 1277 0 1 0 0 1
+8 0 1277 0 1277
+4 0 1277 0 1277
+4 0 1277 0 0 0 0 0 0 0 0 1277 224
jcnd=419/1277 +38 0 
* 0 
+2 0 858 858 0 0 1 0 0 1
+4 0 858
+3 0 858 0 0 0 0 0 0 0 0 858
+2 0 858 858
+5 0 858 0 0 0 0 0 0 0 0 858
+6 0 858 858
+4 0 858 0 858
+4 0 858 858
+4 0 858 0 858
+4 0 858
+4 0 858 0 0 0 0 0 0 0 0 858 8
jcnd=8/858 0x3877c7a2e3 0 
* 0 
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 8
jcnd=20/419 0x3877c7a2e3 0 
* 0 
+6 0 1249 1249
+4 0 1249 1249 0 1 0 0 1
+4 0 1249 0 0 0 0 0 0 0 0 1249
+6 0 1249
+4 0 1249
+7 0 1249 0 1249 0 0 12 0 0 12
+4 0 1249 0 1249
+4 0 1249 0 1249
+4 0 1249 0 1249
+4 0 1249 0 0 0 0 0 0 0 0 1249 7
jcnd=422/1249 +7 0 
* 0 
+2 0 827 0 827
+5 0 827
+7 0 827 0 0 0 0 0 0 0 0 827 4
jcnd=460/827 +18 0 
* 0 
-7 0 422
+7 0 422 0 0 0 0 0 0 0 0 422 4
jcnd=397/422 +18 0 
* 0 
+2 0 392 0 392 0 0 11 0 0 11
+8 0 392 0 392
+8 0 392
+7 0 392 0 392 0 0 3 0 0 3
+4 0 392
+3 0 392
+3 0 392
+4 0 392
+3 0 392
+4 0 392
+3 0 392
+3 0 392
+4 0 392 0 392
+4 0 392 0 392 0 0 1 0 0 1
+4 0 392
jump=392 +71 0 
* 0 
-46 0 857 0 0 1 0 0 1
+7 0 857 0 857 0 0 1 0 0 1
+4 0 857
+3 0 857
+3 0 857
+4 0 857
+3 0 857
+4 0 857
+3 0 857
+3 0 857
+4 0 857 0 857
+4 0 857 0 857
+4 0 857
jump=857 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 28
+7 0 28 0 28
+6 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
jcnd=28/28 +7 0 
* 0 
+7 0 1277
+4 0 1277 0 0 1 0 0 1
+3 0 1277
+3 0 1277 0 1277
cfn=(104)
calls=1277 0x3877c77180 0 
* 0 5108 2554 0 1 0 0 1 0 0 1277 33
+5 0 1277
+3 0 1277
jump=1277 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 354 0 0 1 0 0 1
+7 0 354
+2 0 354
+4 0 354
+3 0 354
+3 0 354 0 354
+5 0 354
+3 0 354
+4 0 354
+3 0 354 0 0 1 0 0 1
+4 0 354
+4 0 354
+3 0 354
+4 0 354 0 354
+4 0 354 0 354 0 0 12 0 0 12
+4 0 354
+3 0 354
+3 0 354 0 354
cfn=(104)
calls=354 0x3877c77180 0 
* 0 1416 708 0 0 0 0 0 0 0 354 1
+5 0 354
+3 0 354
jump=354 0x3877c79ae3 0 
* 0 

totals: 18009489 7452530 4245736 240 115 155 240 115 155 497599 8257 10790 222
