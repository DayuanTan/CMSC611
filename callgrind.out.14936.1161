version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1161


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1439264019 - 1439504564
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 512 0 0 1 0 0 1
+3 0 512 0 0 0 0 0 0 0 0 512
+2 0 512
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=512 0x3877c7b8b0 0 
* 0 58386 15088 8032 19 4 0 19 4 0 14138 176
* 0 512 512 0 1 1 0 1 1 0 0 0 512

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 512 0 512 1 0 0 1
+1 0 512
+5 0 512
+3 0 512 0 512
+1 0 512
+4 0 512 0 0 1 0 0 1
+3 0 512
+4 0 512
+3 0 512 0 512 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=512 0x3877c7aa50 0 
* 0 131315 20149 20234 33 35 38 33 35 38 22115 829
* 0 512 512 0 1 1 0 1 1 0 0 0 512
+5 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +96 0 
* 0 
+96 0 512 0 0 1 0 0 1
+4 0 512 512
+1 0 512 512
+1 0 512 512

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250 1 0 0 1
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=250 0x4049d4 -35 
* * 1500 500 750 1 0 0 1
+5 * 250 250
+1 * 250 250

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 250
+4 * 250
+3 * 250 0 250
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=250 0x404520 -35 
* * 1250 500 500
+5 * 250 250
+1 * 250 250

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=250 0x404a28 -35 
* * 1500 500 750 1 0 1 1 0 1
+5 * 250 250
+1 * 250 250

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 250
+4 * 250
+3 * 250 0 250
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=250 0x4044cc -35 
* * 1250 500 500
+5 * 250 250
+1 * 250 250

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=125 0x403df2 -87 
* * 3000 1000 1125 0 9 4 0 9 4 125
+5 * 125 125
+1 * 125 125

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+4 * 250 250
+4 * 250 250
+1 * 250 250

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=125 0x40406a -87 
* * 3000 1000 1125 0 9 7 0 9 7 125
+5 * 125 125
+1 * 125 125

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 250 0 250
+1 * 250
+3 * 250 0 250
+4 * 250 250
+4 * 250 250
+1 * 250 250

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 310 0 310
+1 * 310
+3 * 310 0 310
+4 +1 310 310
+4 * 310 310
+1 * 310 310

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 +1 500 500 0 1 0 0 1
+4 * 500 500
+1 * 500 500

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 310 0 310
+1 * 310
+3 * 310 0 310 0 0 1 0 0 1
+4 +1 310 310
+4 * 310 310
+1 * 310 310

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500
+4 * 500
+3 * 500 0 500
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=500 0x404ffe 790 
* * 3000 1500 1000 1 0 0 1
+5 * 500 500
+3 * 500 500
+1 * 500 500

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 +1 500 500
+4 * 500 500
+1 * 500 500

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500
+4 * 500
+3 * 500 0 500 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=500 0x40500c 790 
* * 3000 1500 1000 1 0 0 1
+5 * 500 500
+3 * 500 500
+1 * 500 500

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 250 0 250
+1 * 250
+3 * 250 0 250
+4 * 250 0 250
+4 * 250 250
+4 * 250 250
+1 * 250 250

fl=(5)
fn=(102)
0x4048de 113 268 0 268 1 0 0 1
+1 * 268
+3 * 268 0 268
+4 +1 268
+10 * 268 268
+1 * 268 268

fn=(266)
0x40406a 129 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125
+3 * 125
+5 * 125 0 125
cfi=(16)
cfn=(226)
calls=125 0x402d61 -20 
* * 875 375 375
+5 * 125
+3 * 125 0 0 0 0 0 0 0 0 125
+2 * 125 125
+4 * 125 125 0 0 9 0 0 9
+2 * 125 0 125 0 0 7 0 0 7
+2 * 125 125
+1 * 125 125

fn=(28)
0x404992 113 268 0 268 1 0 0 1
+1 * 268
+3 * 268 0 268
+4 +1 268
+10 * 268 268
+1 * 268 268

fn=(176)
0x4044cc 86 250 0 250
+1 * 250
+3 * 250 0 250
+4 * 250 250
+1 * 250 250

fn=(224)
0x403df2 129 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125
+3 * 125
+5 * 125 0 125
cfi=(16)
cfn=(226)
calls=125 0x402d61 -20 
* * 875 375 375
+5 * 125
+3 * 125 0 0 0 0 0 0 0 0 125
+2 * 125 125
+4 * 125 125 0 0 9 0 0 9
+2 * 125 0 125 0 0 4 0 0 4
+2 * 125 125
+1 * 125 125

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256
+3 * 256 0 256
cob=(5)
cfi=(8)
cfn=(164)
calls=256 0x387e4bb2f0 0 
* * 30600 7918 4136 21 4 0 21 4 0 7418 129 256
* * 256 256 0 1 1 0 1 1 0 0 0 256
+5 * 256 256
+1 * 256 256

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256
+3 * 256 0 256
cob=(5)
cfi=(8)
cfn=(164)
calls=256 0x387e4bb2f0 0 
* * 29834 7682 3896 0 1 0 0 1 0 7232 47 256
* * 256 256 0 0 0 0 0 0 0 0 0 256
+5 * 256 256
+1 * 256 256

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+4 * 256
+3 * 256 0 256
cfn=(102)
calls=256 0x4048de +12 
* * 1536 512 512 1 0 0 1
+5 * 256 256
+4 * 256 0 0 1 0 0 1
+3 * 256
+2 * 256 0 0 0 0 0 0 0 0 256
jcnd=256/256 +7 +3 
* * 
+7 +3 256 256
+4 * 256
+4 * 256
+3 * 256 0 256
cob=(5)
cfi=(8)
cfn=(32)
calls=256 0x387e4bd0b0 0 
* * 70783 11149 10468 20 21 21 20 21 21 11621 520 256
* * 256 256 0 0 0 0 0 0 0 0 0 256
+5 +1 256 256
+1 * 256 256

fn=(18)
0x404a28 81 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250 0 0 1 0 0 1
+4 * 250 0 250
+4 * 250 250
+1 * 250 250

fn=(92)
0x4049d4 81 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+4 * 250 0 250
+4 * 250 250
+1 * 250 250

fn=(196)
0x404520 86 250 0 250
+1 * 250
+3 * 250 0 250
+4 * 250 250
+1 * 250 250

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256 1 0 0 1
+4 +2 256 256
+4 * 256
+3 * 256 0 256
cfn=(28)
calls=256 0x404992 +12 
* * 1536 512 512 1 0 0 1
+5 * 256 256
+4 * 256
+3 * 256
+2 * 256 0 0 0 0 0 0 0 0 256
jcnd=256/256 +7 +3 
* * 
+7 +3 256 256
+4 * 256
+4 * 256
+3 * 256 0 256
cob=(5)
cfi=(8)
cfn=(32)
calls=256 0x387e4bd0b0 0 
* * 68724 11048 11302 17 15 18 17 15 18 11006 309 256
* * 256 256 0 1 1 0 1 1 0 0 0 256
+5 +1 256 256
+1 * 256 256

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=250 0x404484 107 
* * 91742 28954 27458 25 3 3 25 3 3 3148 161 496 61
+5 * 250 250
+1 * 250 250

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250 0 1 0 0 1
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=250 0x404a36 450 
* * 84742 26454 24958 24 3 3 24 3 3 3148 161 496 61
+5 * 250 250
+1 * 250 250

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=250 0x40439c 107 
* * 91742 28954 27458 7 0 12 7 0 12 3148 140 496
+5 * 250 250
+1 * 250 250

fn=(116)
0x40439c 107 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +10 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=250 0x4047d7 -26 
* * 88242 27704 26208 7 0 12 7 0 12 3148 140 496
+5 +1 250 250
+1 * 250 250

fn=(118)
0x4047d7 91 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=250 0x4049e2 450 
* * 84742 26454 24958 7 0 12 7 0 12 3148 140 496
+5 * 250 250
+1 * 250 250

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 4 2 0 4 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 4 2 0 4 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 4 1 0 4 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +10 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(52)
calls=250 0x404829 -26 
* * 88242 27704 26208 25 3 3 25 3 3 3148 161 496 61
+5 +1 250 250
+1 * 250 250

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 4 2 0 4 60 2 11
+5 * 12 12
+1 * 12 12

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250
+3 * 250 250
+4 * 250 250
+3 * 250
+3 * 250
+3 * 250
+4 * 250
+3 * 250 250
+4 * 250 250
+3 -1 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=250 0x403d98 +11 
* * 36220 10032 6320 1 1 0 1 1 0 7346 41 500
+5 +1 250 250
+4 * 250
+3 * 250 0 250
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=250 0x403296 -82 
* * 5750 2000 2000 1 0 0 1
+5 * 250
jump=250 +28 * 
* * 
+28 * 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 1024 0 1024 1 0 0 1
+1 * 1024
+3 * 1024 0 1024 0 0 1 0 0 1
+4 +1 1024 1024
+4 * 1024 1024 0 1 1 0 1 1
+4 * 1024
+3 * 1024 1024
+4 * 1024 1024
+3 * 1024
+3 * 1024
+3 * 1024
+4 * 1024 1024
+1 * 1024 1024

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=250 0x404236 -14 
* * 77737 14068 14059 23 15 13 23 15 13 11272 288 500
+5 * 250 250
+4 * 250 0 250
+3 +1 250 250
+4 * 250 250 0 1 0 0 1
+3 * 250 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+3 * 250 250
+4 * 250
+4 * 250
+3 * 250 250
+4 * 250 0 250
+4 +1 250 250
+1 * 250 250

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250 0 1 0 0 1
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=250 0x403fbe -14 
* * 79859 14169 13228 21 18 17 21 18 17 11903 508 500
+5 * 250 250
+4 * 250 0 250
+3 +1 250 250
+4 * 250 250
+3 * 250 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+3 * 250 250
+4 * 250
+4 * 250
+3 * 250 250
+4 * 250 0 250
+4 +1 250 250
+1 * 250 250

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 125 0 125
+1 * 125
+3 * 125 0 0 1 0 0 1
+4 * 125 0 125
+4 * 125 0 125
+4 +2 125 125
+4 * 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125 0 0 0 0 0 0 0 0 125
jcnd=6/125 +51 +10 
* * 
+2 +3 119 119
+4 * 119 119
+4 * 119 119
+4 -1 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfi=(3)
cfn=(264)
calls=119 0x4036b1 215 
* * 4522 1547 1666 0 8 4 0 8 4 119
+5 +2 119 119
+4 * 119 119
+4 * 119
+4 * 119 119
+4 * 119 0 119
+4 * 119
jump=119 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8455 2602 2260 18 2 12 18 2 12 484 35 35
+5 +2 125 125
+1 * 125 125

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 518 0 518 1 0 0 1
+1 * 518
+3 * 518 0 518 1 0 0 1
+4 +1 518 518
+4 * 518 518
+1 * 518 518

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+3 * 250 0 250
+4 * 250
+4 * 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=250 0x404380 726 
* * 2500 1250 1000
+5 * 250 250
+4 * 250 250
+1 * 250 250

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250 1 0 0 1
+4 +2 250 250
+4 * 250
+3 * 250 0 250
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=250 0x40325e 113 
* * 1500 750 500
+5 * 250
+3 * 250 250
+4 * 250 250
+4 * 250 250
+4 * 250 250
+3 -1 250
+3 * 250
+3 * 250 0 250
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=250 0x40326c 148 
* * 7750 2500 3000 4 0 0 4
+5 +1 250 250
+4 * 250
+3 * 250 0 250
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=250 0x4031ec 159 
* * 49762 15030 9814 25 5 0 25 5 0 7538 126 500
+5 * 250
jump=250 +28 * 
* * 
+28 * 250 0 0 1 0 0 1
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+5 * 256 0 0 0 0 0 0 0 0 256
+2 +1 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(5)
cfn=(160)
calls=256 0x4044d6 -65 
* * 33672 8942 5416 22 5 0 22 5 0 7418 129 512
+5 +1 256 256
+1 * 256 256

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=250 0x4043ca -45 
* * 9000 3250 3500 4 0 4 4 0 4
+5 +1 250 250 0 1 0 0 1
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(20)
calls=250 0x404412 +43 
* * 83987 17068 15809 24 15 13 24 15 13 11272 288 500
+5 * 250
jump=250 +28 * 
* * 
+28 * 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(14)
0x4043ca 90 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250 0 0 1 0 0 1
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(4)
cfn=(16)
calls=250 0x404804 +24 
* * 4500 1500 1750 2 0 1 2 0 1
+5 * 250 250
+4 * 250 0 250 0 0 2 0 0 2
+7 * 250 250
+4 * 250 0 250 1 0 0 1
+8 * 250 250
+4 * 250 0 250
+8 +1 250 250
+1 * 250 250

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+2 * 250 0 250
+2 * 250 0 250
+1 * 250 0 0 1 0 0 1
+4 * 250 0 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250
+3 * 250 0 250
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=250 0x4039fc 117 
* * 1500 750 500 2 0 0 2
+5 * 250
+3 * 250 0 250
cfi=(3)
cfn=(84)
calls=250 0x4039ed -88 
* * 1500 750 500
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(2)
calls=250 0x402d74 645 
* * 3250 1500 500
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=250 0x403a0a 134 
* * 100609 22169 20228 28 18 17 28 18 17 11903 508 500
+5 +4 250 250
+4 * 250
+3 * 250 0 250
cfn=(106)
calls=250 0x40325e 113 
* * 1500 750 500 1 0 0 1
+5 * 250
+3 * 250 250
+4 * 250 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=250 0x403a98 565 
* * 6250 2500 2000 2 0 0 2
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(112)
calls=250 0x403a68 547 
* * 6250 2500 2000
+5 * 250
+3 * 250
+3 * 250
+3 * 250
+3 * 250 0 250
cfi=(11)
cfn=(114)
calls=250 0x403ac9 -60 
* * 95492 30204 28958 7 0 12 7 0 12 3148 140 496
+5 -3 250 250
+4 * 250 0 250
+4 * 250
jump=250 +28 +4 
* * 
+28 +4 250
+4 * 250 250
+1 * 250 250
+2 * 250 250
+2 * 250 250
+1 * 250 250

fn=(188)
0x403d98 171 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +2 256 256
+5 * 256 0 0 0 0 0 0 0 0 256 6
+2 +1 256 256
+4 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfi=(5)
cfn=(190)
calls=256 0x40452a -65 
* * 32906 8706 5176 0 1 0 0 1 0 7232 47 512
+5 +1 256 256
+1 * 256 256

fn=(22)
0x404236 167 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256 1 0 0 1
+4 * 256 0 256
+4 0 256 256
+5 0 256 0 0 0 0 0 0 0 0 256
+2 0 256 256
+4 0 256 256
+4 0 256
+5 0 256
+3 0 256
+3 0 256 0 256
fi=(6) ???
cfi=(5)
cfn=(26)
calls=256 0x404730 99 
* 0 75380 13096 13350 21 16 18 21 16 18 11262 309 512
+5 0 256
fi=(6)
jump=256 +7 0 
* 0 
+7 0 256 256
+1 0 256 256

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250 0 250
+4 * 250
+4 * 250 0 0 1 0 0 1
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=250 0x404468 726 
* * 2500 1250 1000 1 0 0 1
+5 * 250 250
+4 * 250 250
+1 * 250 250

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+3 * 250 0 250
+4 * 250
+4 * 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(10)
cfn=(44)
calls=250 0x404468 726 
* * 2500 1250 1000
+5 * 250 250
+4 * 250 250
+1 * 250 250

fn=(86)
0x403a0a 134 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=250 0x4042e2 -45 
* * 9000 3250 3500 5 0 0 5
+5 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfn=(94)
calls=250 0x40432a +43 
* * 86109 17169 14978 22 18 17 22 18 17 11903 508 500
+5 * 250
jump=250 +28 * 
* * 
+28 * 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(88)
0x4042e2 90 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfi=(4)
cfn=(90)
calls=250 0x4047b2 +24 
* * 4500 1500 1750 3 0 0 3
+5 * 250 250
+4 * 250 0 250
+7 * 250 250
+4 * 250 0 250
+8 * 250 250
+4 * 250 0 250
+8 +1 250 250
+1 * 250 250

fn=(156)
0x4031ec 159 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 +2 250 250
+4 * 250 250 0 1 0 0 1
+4 * 250
+3 * 250 250
+4 * 250 250
+3 * 250
+3 * 250
+3 * 250
+4 * 250
+3 * 250 250
+4 * 250 250
+3 -1 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(158)
calls=250 0x403ce6 +11 
* * 37012 10280 6564 22 5 0 22 5 0 7538 126 500
+5 +1 250 250
+4 * 250
+3 * 250 0 250
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=250 0x4031b8 -82 
* * 5750 2000 2000 1 0 0 1
+5 * 250
jump=250 +28 * 
* * 
+28 * 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(172)
0x4031b8 79 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 250
+4 * 250
+3 * 250 0 250
cfi=(4)
cfn=(174)
calls=250 0x403ccc +42 
* * 3500 1250 1250
+5 * 250 250
+1 * 250 250

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246)
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 524 0 524 1 0 0 1
+1 * 524
+3 * 524 0 524
+4 +1 524 524
+4 * 524 524 0 0 2 0 0 2
+4 * 524
+3 * 524 524
+4 * 524 524
+3 * 524
+3 * 524
+3 * 524
+4 * 524 524
+1 * 524 524

fn=(106)
0x40325e 113 518 0 518 1 0 0 1
+1 * 518
+3 * 518 0 518
+4 +1 518 518
+4 * 518 518
+1 * 518 518

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 262 0 262 1 0 0 1
+1 * 262
+3 * 262 0 262 0 0 1 0 0 1
+4 +1 262 262
+4 * 262 262
+1 * 262 262

fn=(82)
0x4039fc 117 262 0 262 1 0 0 1
+1 * 262
+3 * 262 0 262 1 0 0 1
+4 +1 262 262
+4 * 262 262
+1 * 262 262

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 +2 125 125
+4 * 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125 0 0 0 0 0 0 0 0 125 8
jcnd=6/125 +51 +10 
* * 
+2 +3 119 119
+4 * 119 119
+4 * 119 119
+4 -1 119 119
+4 * 119
+3 * 119
+3 * 119 0 119
cfi=(3)
cfn=(222)
calls=119 0x403373 215 
* * 4522 1547 1666 0 8 3 0 8 3 119
+5 +2 119 119
+4 * 119 119
+4 * 119
+4 * 119 119
+4 * 119 0 119
+4 * 119
jump=119 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8366 2590 2253 27 4 8 27 4 8 462 18 35
+5 +2 125 125
+1 * 125 125

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 250 0 250 1 0 0 1
+1 * 250
+3 * 250 0 250
+2 * 250 0 250
+2 * 250 0 250
+1 * 250
+4 * 250 0 250 1 0 0 1
+4 * 250 0 250
+4 +2 250 250
+4 * 250
+3 * 250 0 250
cfn=(6)
calls=250 0x403b08 117 
* * 1500 750 500 1 0 1 1 0 1
+5 * 250
+3 * 250 0 250
cfi=(3)
cfn=(8)
calls=250 0x403afa -88 
* * 1500 750 500 1 0 0 1
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(10)
calls=250 0x402f54 645 
* * 3250 1500 500 1 1 0 1 1
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250
+3 * 250
+3 * 250 0 250
cfn=(12)
calls=250 0x403b16 134 
* * 98487 22068 21059 29 15 17 29 15 17 11272 288 500
+5 +4 250 250 0 1 0 0 1
+4 * 250
+3 * 250 0 250
cfn=(40)
calls=250 0x40333c 113 
* * 1500 750 500 2 0 0 2
+5 * 250
+3 * 250 250
+4 * 250 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(42)
calls=250 0x403ba4 565 
* * 6250 2500 2000 3 0 0 3
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(46)
calls=250 0x403b74 547 
* * 6250 2500 2000
+5 * 250
+3 * 250
+3 * 250
+3 * 250
+3 * 250 0 250 1 0 0 1
cfi=(11)
cfn=(48)
calls=250 0x403bd5 -60 
* * 95492 30204 28958 26 3 3 26 3 3 3148 161 496 61
+5 -3 250 250
+4 * 250 0 250
+4 * 250
jump=250 +28 +4 
* * 
+28 +4 250
+4 * 250 250
+1 * 250 250
+2 * 250 250
+2 * 250 250
+1 * 250 250

fn=(108)
0x403a98 565 250 0 250 1 0 0 1
+1 * 250
+3 * 250
+4 * 250 0 250
+4 +1 250 250
+4 * 250 250
+4 * 250 0 250
+4 * 250
+4 * 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfi=(10)
cfn=(110)
calls=250 0x404380 726 
* * 2500 1250 1000 1 0 0 1
+5 * 250 250
+4 * 250 250
+1 * 250 250

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250 1 0 0 1
+4 +2 250 250
+4 * 250
+3 * 250 0 250
cfn=(40)
calls=250 0x40333c 113 
* * 1500 750 500
+5 * 250
+3 * 250 250
+4 * 250 250
+4 * 250 250
+4 * 250 250
+3 -1 250
+3 * 250
+3 * 250 0 250
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=250 0x40334a 148 
* * 7750 2500 3000 2 0 0 2
+5 +1 250 250
+4 * 250
+3 * 250 0 250
cfn=(186)
calls=250 0x4032ca 159 
* * 48970 14782 9570 3 1 0 3 1 0 7346 41 500
+5 * 250
jump=250 +28 * 
* * 
+28 * 250 0 0 1 0 0 1
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96)
0x403fbe 167 256 0 256 1 0 0 1
+1 * 256 0 0 1 0 0 1
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 0 256 256
+5 0 256 0 0 0 0 0 0 0 0 256
+2 0 256 256
+4 0 256 256
+4 0 256
+5 0 256
+3 0 256
+3 0 256 0 256
fi=(6)
cfi=(5)
cfn=(100)
calls=256 0x40461a 99 
* 0 77439 13197 12516 23 21 21 23 21 21 11877 520 512
+5 0 256
fi=(6)
jump=256 +7 0 
* 0 
+7 0 256 256
+1 0 256 256

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 24250 0 24250
+1 * 24250
+3 * 24250 0 24250
+4 * 24250 0 24250
+4 +1 24250 24250
+4 * 24250 24250
+3 * 24250 24250
+4 * 24250
+4 * 24250
+3 * 24250 24250
+1 * 24250 24250

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 24250 0 24250
+1 * 24250
+3 * 24250 0 24250 1 0 0 1
+4 * 24250 0 24250
+4 +1 24250 24250
+4 * 24250 24250
+3 * 24250 24250
+4 * 24250
+4 * 24250
+3 * 24250 24250
+1 * 24250 24250

fn=(192)
0x403296 79 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 250
+4 * 250
+3 * 250 0 250
cfi=(4)
cfn=(194)
calls=250 0x403d7e +42 
* * 3500 1250 1250 1 0 0 1
+5 * 250 250
+1 * 250 250

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fl=(12)
fn=(54)
0x404a36 450 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250 1 0 0 1
+4 * 250 0 250
+4 * 250 0 250
+4 +10 250 250
+4 * 250
+3 * 250 0 250
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=250 0x404c38 288 
* * 3750 1500 1250 3 0 0 3
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(56)
calls=250 0x404c38 288 
* * 3750 1500 1250
+5 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=250 0x404c52 -36 
* * 71742 21954 20458 20 3 3 20 3 3 3148 161 496 61
+5 +1 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(60)
0x404c52 424 250 0 250
+1 * 250
+3 * 250 0 250
+2 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +4 250 250
+4 * 250
+3 * 250 0 250
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=250 0x40492d 277 
* * 3750 1500 1250 2 0 0 2
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=250 0x404d9d 277 
* * 6250 2250 2000 2 0 1 2 0 1
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(66)
calls=250 0x404d9d 277 
* * 6250 2250 2000
+5 * 250
+3 * 250
+3 * 250
+3 * 250 0 250
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=250 0x404db7 -49 
* * 48492 14204 12708 15 3 2 15 3 2 3148 161 496 61
+5 +1 250
+4 * 250 250
+1 * 250 250
+2 * 250 250
+1 * 250 250

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 4 0 0 4 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 286 0 286 1 0 0 1
+1 * 286
+3 * 286
+4 * 286 0 286
+4 +1 286 286
+4 * 286
+3 * 286 0 286 1 0 0 1
cfi=(13)
cfn=(64)
calls=286 -33 -66 
* * 1716 858 572
+5 * 286 286
+1 * 286 286

fn=(66)
0x404d9d 277 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(13)
cfn=(68)
calls=500 0x404f1a -58 
* * 8000 3000 2500 2 0 1 2 0 1
+5 * 500 500
+1 * 500 500

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 4 0 0 4 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 250 0 250
+1 * 250
+3 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +10 250 250
+4 * 250
+3 * 250 0 250
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=250 0x404bc6 288 
* * 3750 1500 1250 3 0 0 3
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(122)
calls=250 0x404bc6 288 
* * 3750 1500 1250
+5 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=250 0x404be0 -36 
* * 71742 21954 20458 4 0 12 4 0 12 3148 140 496
+5 +1 250
+4 * 250 250
+1 * 250 250
+1 * 250 250

fn=(128)
0x404878 277 286 0 286
+1 * 286
+3 * 286
+4 * 286 0 286 1 0 0 1
+4 +1 286 286
+4 * 286
+3 * 286 0 286
cfi=(13)
cfn=(130)
calls=286 -33 -66 
* * 1716 858 572 0 0 1 0 0 1
+5 * 286 286
+1 * 286 286

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(13)
cfn=(134)
calls=500 0x404e98 -58 
* * 8000 3000 2500 2 0 0 2
+5 * 500 500
+1 * 500 500

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +8 250 0 250
+4 +3 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=250 0x404eb5 -22 
* * 44742 12954 11208 1 0 12 1 0 12 3148 140 496
+5 +1 250 250
+1 * 250 250

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 4 1 0 4 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(13)
cfn=(124)
calls=500 0x404d36 -77 
* * 3000 1500 1000 2 0 0 2
+5 * 500 500
+1 * 500 500

fn=(56)
0x404c38 288 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500 1 0 0 1
+4 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(13)
cfn=(58)
calls=500 0x404d8f -77 
* * 3000 1500 1000 1 0 0 1
+5 * 500 500
+1 * 500 500

fn=(74)
0x404f37 368 262 0 262
+1 * 262
+3 * 262
+4 * 262 0 262 1 0 0 1
+4 * 262 0 262
+4 * 262 0 262
+4 +2 262 262
+4 * 262 262
+4 * 262
+3 * 262
+3 * 262
+4 * 262 0 262
+4 +1 262 262
+5 * 262 0 0 0 0 0 0 0 0 262
jcnd=6/262 +33 +2 
* * 
+2 +1 256 256
+4 * 256
+8 * 256 256
+4 * 256 256
+4 * 256
+3 * 256 0 0 1 0 0 1
+3 * 256 0 256 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=256 0x3877c83840 0 
* * 38252 10314 9807 11 2 5 11 2 5 2946 163 251 61
* * 256 256 0 1 1 0 1 1 0 0 0 256
+5 +1 262 262
+4 * 262
+8 * 262 262
+4 * 262
+3 +1 262 262
+1 * 262 262

fn=(140)
0x404eb5 368 262 0 262
+1 * 262
+3 * 262
+4 * 262 0 262 1 0 0 1
+4 * 262 0 262
+4 * 262 0 262 0 0 1 0 0 1
+4 +2 262 262
+4 * 262 262
+4 * 262
+3 * 262
+3 * 262
+4 * 262 0 262
+4 +1 262 262
+5 * 262 0 0 0 0 0 0 0 0 262
jcnd=6/262 +33 +2 
* * 
+2 +1 256 256
+4 * 256
+8 * 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cob=(2)
cfi=(9)
cfn=(78)
calls=256 0x3877c83840 0 
* * 38252 10314 9807 0 0 13 0 0 13 2946 143 251
* * 256 256 0 0 0 0 0 0 0 0 0 256
+5 +1 262 262
+4 * 262
+8 * 262 262
+4 * 262
+3 +1 262 262
+1 * 262 262

fn=(72)
0x404db7 379 250 0 250
+1 * 250
+3 * 250
+4 * 250 0 250 1 0 0 1
+4 * 250 0 250
+4 * 250 0 250
+4 +8 250 0 250
+4 +3 250 250
+4 * 250 250
+4 * 250 250
+4 * 250
+3 * 250
+3 * 250 0 250
cfn=(74)
calls=250 0x404f37 -22 
* * 44742 12954 11208 14 3 2 14 3 2 3148 161 496 61
+5 +1 250 250
+1 * 250 250

fn=(126)
0x404be0 424 250 0 250
+1 * 250
+3 * 250 0 250
+2 * 250 0 250
+1 * 250
+4 * 250 0 250
+4 * 250 0 250
+4 * 250 0 250
+4 +4 250 250
+4 * 250
+3 * 250 0 250
cfn=(128)
calls=250 0x404878 277 
* * 3750 1500 1250 1 0 0 1
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(132)
calls=250 0x404d44 277 
* * 6250 2250 2000 2 0 0 2
+5 * 250
+3 * 250 250
+4 * 250
+3 * 250 0 250
cfn=(132)
calls=250 0x404d44 277 
* * 6250 2250 2000
+5 * 250
+3 * 250
+3 * 250
+3 * 250 0 250
cfn=(138)
calls=250 0x404d5e -49 
* * 48492 14204 12708 1 0 12 1 0 12 3148 140 496
+5 +1 250
+4 * 250 250
+1 * 250 250
+2 * 250 250
+1 * 250 250

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fl=(10)
fn=(44)
0x404468 726 500 0 500
+1 * 500
+3 * 500 0 500
+4 * 500 0 500
+4 * 500 500
+4 * 500 500
+3 * 500 500
+4 * 500 0 500 1 0 0 1
+3 * 500 500
+1 * 500 500

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 +1 500 500
+4 * 500 500
+1 * 500 500

fn=(110)
0x404380 726 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 * 500 0 500
+4 * 500 500
+4 * 500 500
+3 * 500 500
+4 * 500 0 500
+3 * 500 500
+1 * 500 500

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500
+4 +1 500 500
+4 * 500 500
+1 * 500 500

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 * 256 0 256 1 0 0 1
+4 * 256 256
+1 * 256 256

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 +4 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=256 0x40454c -14 
* * 1536 512 768 1 0 0 1
+5 +2 256 256
+1 * 256 256

fn=(150)
0x40326c 148 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +3 256 256 0 1 0 0 1
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=256 0x403d1a -29 
* * 4608 1536 1792 3 0 0 3
+5 +1 256 256
+1 * 256 256

fn=(180)
0x40334a 148 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 * 256 0 256
+4 +3 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(182)
calls=256 0x403dcc -29 
* * 4608 1536 1792 2 0 0 2
+5 +1 256 256
+1 * 256 256

fn=(152)
0x403d1a 122 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 * 256 0 256
+4 +4 256 256
+4 * 256 256
+4 * 256
+3 * 256
+3 * 256 0 256
cfn=(154)
calls=256 0x4044f8 -14 
* * 1536 512 768 2 0 0 2
+5 +2 256 256
+1 * 256 256

fn=(184)
0x40454c 112 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 * 256 0 256
+4 * 256 256
+1 * 256 256

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1739 308 315 0 1 5 0 1 5 246 21 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 1 3 0 1 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 4 3 0 4 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 12 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1676 308 312 4 3 4 4 3 4 230 12 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 3 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 125 0 125 1 0 0 1
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250
+5 * 125
+3 * 125 0 125
+3 +1 125 125
+6 * 125 0 125
+3 * 125 125
+6 * 125 0 125
+3 +1 125 125
+6 * 125 0 125 1 0 0 1
+3 * 125 125
+6 * 125 0 125
+3 +2 125 0 125
+7 * 125
jump=125 +86 * 
* * 
+2 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(144)
calls=8000 0x402d9a 770 
* * 88000 40000 24000
+5 * 8000 8000
+4 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(146)
calls=8000 0x402dba 770 
* * 88000 40000 24000 1 0 0 1
+5 * 8000 8000
+2 * 8000
+4 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 -2 8000 0 8000
+4 * 8000 8000
+3 * 8000
+3 * 8000 8000
+3 * 8000 0 0 0 0 0 0 0 0 8000 126
jcnd=7875/8000 -93 +1 
* * 
-9 * 125 125 0 1 0 0 1
+3 * 125
+3 * 125 125
+3 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 -93 +1 
* * 
+2 +4 125 125
+3 * 125
+3 * 125
+4 * 125 125 0 1 0 0 1
+5 * 125
+4 * 125
+3 * 125 0 125
+5 +1 125 125
+3 * 125
+3 * 125
+4 * 125 125
+5 * 125
+4 * 125
+3 * 125 0 125
+5 +1 125 0 125
+7 * 125
jump=125 0x4016ee * 
* * 
+2 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000 0 0 1 0 0 1
+3 * 8000 0 8000
cfi=(2)
cfn=(146)
calls=8000 0x402dba 770 
* * 88000 40000 24000
+5 * 8000 8000
+2 * 8000
+4 * 8000 8000
+5 * 8000 0 8000
+5 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(144)
calls=8000 0x402d9a 770 
* * 88000 40000 24000
+5 * 8000 8000
+4 * 8000 8000
+5 * 8000 0 8000
+5 +1 8000 8000
+5 * 8000 8000
+5 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 +1 8000 8000
+5 * 8000 8000
+5 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 -4 8000 0 8000
+4 * 8000 8000
+3 * 8000
+3 * 8000 8000
+3 * 8000 0 0 0 0 0 0 0 0 8000 126
jcnd=7875/8000 0x401672 +1 
* * 
-9 * 125 125 0 1 0 0 1
+3 * 125
+3 * 125 125
+3 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 0x401672 +1 
* * 
+6 +6 125 125 0 1 0 0 1
+5 * 125 125
+5 * 125 0 125
+5 +2 125 125
+3 +1 125 0 125
+3 * 125 125
+5 * 125 125
+1 * 125 125

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 125
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(4)
calls=125 0x4030b2 310 
* * 113576 32274 29945 63 19 20 63 19 20 7227 306 498 61
+5 * 125
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(80)
calls=125 0x402ff4 310 
* * 115086 32349 29558 43 18 29 43 18 29 7646 413 498
+5 * 125 0 0 1 0 0 1
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfn=(142)
calls=125 0x401585 -52 
* * 840125 371125 194125 8 0 0 8 0 0 16250 252
+5 * 125 0 125
+8 * 125 125
+6 * 125 0 125
+6 * 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(148)
calls=125 0x402df4 414 
* * 32506 10265 7407 31 5 0 31 5 0 3769 64 250
+5 * 125
+7 * 125
+3 * 125 0 125 1 0 0 1
cfi=(2)
cfn=(178)
calls=125 0x402e74 414 
* * 32110 10141 7285 7 1 0 7 1 0 3673 21 250
+5 +2 125
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(4)
calls=125 0x4030b2 310 
* * 113153 32248 29822 4 0 1 4 0 1 7193 143 498
+5 * 125
+7 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(80)
calls=125 0x402ff4 310 
* * 113765 32274 29378 0 0 0 0 0 0 7405 235 498
+5 * 125 125
+6 * 125 0 0 1 0 0 1
+7 * 125
+7 * 125 0 125
+6 * 125 125
+8 * 125
+3 * 125
+3 * 125 0 125
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=125 0x401719 -33 
* * 391375 162750 89875 4 0 0 4 0 0 8125 126
+5 * 125 0 125
+8 * 125 125
+6 * 125 0 125
+6 * 125
+7 * 125 0 0 1 0 0 1
+3 * 125 0 125
cfi=(2)
cfn=(148)
calls=125 0x402df4 414 
* * 32506 10265 7407 0 0 0 0 0 0 3769 62 250
+5 * 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(178)
calls=125 0x402e74 414 
* * 32110 10141 7285 0 0 0 0 0 0 3673 20 250
+5 +2 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250
+5 * 125 125
+6 * 125
+3 * 125
+3 * 125
+3 * 125 125
+7 * 125
+3 * 125 0 0 1 0 0 1
+3 * 125 0 125
cfi=(2)
cfn=(144)
calls=125 0x402d9a 770 
* * 1375 625 375
+5 * 125
+3 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(200)
calls=125 0x402eda 901 
* * 16252 5792 4586 30 12 11 30 12 11 706 26 35
+5 +1 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(10)
calls=125 0x402f54 645 
* * 1625 750 250 0 1 0 0 1
+5 * 125 125
+6 * 125
+3 * 125
+3 * 125
+3 * 125 125
+7 * 125 0 0 1 0 0 1
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(146)
calls=125 0x402dba 770 
* * 1375 625 375
+5 * 125
+3 * 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(244)
calls=125 0x402f7a 901 
* * 16341 5804 4593 19 10 16 19 10 16 728 35 35
+5 +1 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(10)
calls=125 0x402f54 645 
* * 1625 750 250
+5 * 125 125
+6 * 125
+3 * 125
+3 * 125
+3 * 125 125 0 1 0 0 1
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(146)
calls=125 0x402dba 770 
* * 1375 625 375
+5 * 125 125
+2 * 125
+4 * 125 125
+8 * 125 125
+8 * 125 0 125
+8 +1 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250
+5 * 125 125 0 1 0 0 1
+6 * 125
+3 * 125
+3 * 125
+3 * 125 125
+7 * 125
+3 * 125
+3 * 125 0 125
cfi=(2)
cfn=(144)
calls=125 0x402d9a 770 
* * 1375 625 375
+5 * 125 125
+4 * 125 125
+8 * 125
+4 * 125 125
+8 * 125
+3 * 125 0 125
+8 +2 125 0 125
+7 -12 125 125
+8 * 125 125
+7 * 125 0 0 0 0 0 0 0 0 125 1
jcnd=1/125 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250 2 0 1 2 0 1
+5 * 125
+3 * 125 125
+7 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250 0 1 0 0 1
+5 * 125
+3 * 125 0 0 0 0 0 0 0 0 125
+2 * 125 0 0 1 0 0 1
+5 * 125
jump=125 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 125
+2 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+5 +1 125 125
+4 * 125
+3 * 125 0 125
cfi=(2)
cfn=(2)
calls=125 0x402d74 645 
* * 1625 750 250
+5 * 125
+3 * 125 0 125
+3 +1 125 125 0 1 0 0 1
+6 * 125 0 125
+3 * 125 125
+6 * 125 0 125
+3 +2 125 0 125
+7 * 125
jump=125 +86 * 
* * 
+2 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(144)
calls=8000 0x402d9a 770 
* * 88000 40000 24000
+5 * 8000 8000
+4 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 +1 8000 8000
+3 * 8000
+3 * 8000 8000
+4 * 8000
+3 * 8000
+3 * 8000 0 8000
cfi=(2)
cfn=(146)
calls=8000 0x402dba 770 
* * 88000 40000 24000
+5 * 8000 8000
+2 * 8000
+4 * 8000 8000
+5 * 8000
+4 * 8000 0 8000
+5 -2 8000 0 8000
+4 * 8000 8000
+3 * 8000
+3 * 8000 8000
+3 * 8000 0 0 0 0 0 0 0 0 8000 126
jcnd=7875/8000 -93 +1 
* * 
-9 * 125 125 0 1 0 0 1
+3 * 125
+3 * 125 125
+3 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 -93 +1 
* * 
+2 +4 125 125
+3 * 125
+3 * 125 0 0 1 0 0 1
+4 * 125 125
+5 * 125
+4 * 125
+3 * 125 0 125
+5 +1 125 125
+3 * 125
+3 * 125
+4 * 125 125
+5 * 125
+4 * 125
+3 * 125 0 125
+5 +1 125 125
+5 * 125 125
+5 * 125 125
+5 * 125 0 0 1 0 0 1
+4 * 125
+3 * 125 0 125
+5 +2 125 125
+3 +1 125 0 125
+3 * 125 125
+5 * 125 125
+1 * 125 125

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 512 0 512 1 0 0 1
+5 0 512 0 512
+5 0 512
+3 0 512 0 512
+5 0 512
+4 0 512 512 0 0 1 0 0 1
+7 0 512 512 0 0 1 0 0 1
+3 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512 512 0 0 1 0 0 1
+7 0 512 512 0 1 1 0 1 1
+4 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+2 0 512 512 0 0 1 0 0 1
+3 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +97 0 
* 0 
+18 0 512
+3 0 512
+3 0 512 0 512
cfn=(38) _int_malloc
calls=512 0x3877c79a00 0 
* 0 109811 14517 17162 29 29 38 29 29 38 16995 807
+5 0 512
+3 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+2 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+2 0 512
+3 0 512 0 0 0 0 0 0 0 0 512 2
+2 0 512 512
+7 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +13 0 
* 0 
+13 0 512 0 512
+2 0 512 0 0 0 0 0 0 0 0 512 20
+6 0 512
+3 0 512 512
+4 0 512 512
+5 0 512 512
+5 0 512
+4 0 512 512
+1 0 512 0 0 1 0 0 1
+5 0 512 512 0 0 1 0 0 1
+7 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +14 0 
* 0 
+14 0 512 0 512 1 0 0 1
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512
jump=512 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 512 0 512 1 0 0 1
+2 0 512
+3 0 512
+3 0 512 0 512
+2 0 512
+3 0 512 0 512
+1 0 512
+3 0 512 0 512
+1 0 512
+3 0 512
+4 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512
+4 0 512
+3 0 512 0 0 0 0 0 0 0 0 512 4
jcnd=10/512 0x3877c838d1 0 
* 0 
+2 0 502
+3 0 502
+3 0 502
+3 0 502
+3 0 502
+3 0 502 0 0 0 0 0 0 0 0 502
jcnd=502/502 +41 0 
* 0 
+41 0 502 0 0 1 0 0 1
+3 0 502 0 0 0 0 0 0 0 0 502
jcnd=502/502 0x3877c839c0 0 
* 0 
+24 0 502
+3 0 502
+4 0 502
+3 0 502
+3 0 502
+3 0 502
+3 0 502
+3 0 502 0 0 0 0 0 0 0 0 502 259
jcnd=258/502 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 254
+10 0 254 254 0 0 1 0 0 1
+3 0 254
+4 0 254 0 254
+3 0 254
+4 0 254
+4 0 254 0 0 0 0 0 0 0 0 254
jcnd=254/254 -18 0 
* 0 
-18 0 818 818
+3 0 818
+4 0 818 0 818
+3 0 818
+4 0 818
+4 0 818 0 0 0 0 0 0 0 0 818 8
jcnd=564/818 -18 0 
* 0 
+2 0 512
+4 0 512
+3 0 512 512
+1 0 512 512
+1 0 512 512
+2 0 512 512 0 1 0 0 1
+2 0 512 512
0x3877c839c0 0 502 0 0 1 0 0 1
+3 0 502
+3 0 502
+3 0 502
+4 0 502 0 502 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=502 0x3877c89b20 0 
* 0 47490 16996 15992 6 1 17 6 1 17 2280 35 502 61
+5 0 502
jump=502 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 512 512 0 1 1 0 1 1
+7 0 512 512 0 0 1 0 0 1
+3 0 512
+3 0 512 0 0 1 0 0 1 0 0 512
+6 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512 512
+4 0 512
+4 0 512
+2 0 512 0 0 0 0 0 0 0 0 512
+2 0 512
+2 0 512
+7 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 +14 0 
* 0 
+14 0 512
+2 0 512
cfn=(170) _int_free
calls=512 0x3877c78650 0 
* 0 50706 13552 8032 17 2 0 17 2 0 12090 176

fn=(170)
0x3877c78650 0 512 0 512 1 0 0 1
+2 0 512 0 512
+2 0 512 0 512
+2 0 512
+3 0 512 0 512
+2 0 512 0 512
+1 0 512 0 512
+1 0 512
+3 0 512
+4 0 512 512
+4 0 512 0 512
+4 0 512
+3 0 512
+4 0 512
+3 0 512
+3 0 512
+3 0 512 0 0 1 0 0 1 0 0 512
+6 0 512
+4 0 512 0 0 0 0 0 0 0 0 512
+6 0 512
+4 0 512 0 0 0 0 0 0 0 0 512
+6 0 512 512
+7 0 512 0 0 0 0 0 0 0 0 512 2
jcnd=388/512 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 388
+2 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388 0 1 0 0 1
+4 0 388
+3 0 388
+2 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 0x3877c78a40 0 
* 0 
+6 0 388 388
+4 0 388
+3 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388
+5 0 388
+4 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 0x3877c7907c 0 
* 0 
+6 0 388 388
+5 0 388
+4 0 388 0 0 0 0 0 0 0 0 388
+6 0 388
+4 0 388 0 0 1 0 0 1 0 0 388
+6 0 388
+4 0 388 388
+7 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388
+6 0 388
+2 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388
+4 0 388 0 0 0 0 0 0 0 0 388 2
jcnd=386/388 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=2/2 +15 0 
* 0 
+15 0 388 388 0 1 0 0 1
+4 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388 0 0 1 0 0 1
+6 0 388 0 0 1 0 0 1 0 0 388 55
jcnd=40/388 0x3877c78a78 0 
* 0 
+6 0 348 348
+5 0 348 348
+5 0 348 348
+4 0 348 0 0 0 0 0 0 0 0 348
+6 0 348 348
+4 0 348 0 0 0 0 0 0 0 0 348
+6 0 348 348
+9 0 348 0 348
+4 0 348 0 348
+4 0 348 0 0 0 0 0 0 0 0 348 110
jcnd=232/348 +16 0 
* 0 
+2 0 116 116
+5 0 116
+3 0 116 0 0 1 0 0 1 0 0 116
+6 0 348
+3 0 348
+4 0 348 348
+4 0 348 348
+4 0 348 0 0 0 0 0 0 0 0 348
-12 0 40
+4 0 40 40
+4 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 388
+7 0 388 0 388
+4 0 388 0 388
+4 0 388 0 0 0 0 0 0 0 0 388 4
jcnd=272/388 +18 0 
* 0 
+2 0 116 0 116
+8 0 116 0 116
+8 0 116 0 116
+4 0 116
+3 0 116 0 116 1 0 0 1
+4 0 116
+4 0 116 0 116
+4 0 116 0 116
+4 0 116
+7 0 116 0 0 0 0 0 0 0 0 116
jcnd=116/116 0x3877c78b20 0 
* 0 
-30 0 272 0 272
+4 0 272
+3 0 272 0 272
+4 0 272
+4 0 272 0 272
+4 0 272 0 272
+4 0 272
+7 0 272 0 0 0 0 0 0 0 0 272
jcnd=272/272 0x3877c78b20 0 
* 0 
0x3877c78a40 0 388 0 0 1 0 0 1
+5 0 388 388
+4 0 388 388
+7 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 +16 0 
* 0 
+16 0 388 0 388
+5 0 388 0 0 0 0 0 0 0 0 388
+6 0 388
+3 0 388
jump=388 0x3877c7878f 0 
* 0 
+10 0 40 0 40
+6 0 40 0 0 1 0 0 1
jump=40 0x3877c78885 0 
* 0 
0x3877c78b20 0 388 388 0 1 0 0 1
+4 0 388
+2 0 388 0 0 0 0 0 0 0 0 388
+6 0 388 388
+7 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 +15 0 
* 0 
+15 0 388 0 388 1 0 0 1
+4 0 388 0 0 0 0 0 0 0 0 388
+6 0 388
+4 0 388 388
+1 0 388 388
+1 0 388 388
+2 0 388 388
+2 0 388 388
+2 0 388 388
+2 0 388 388
0x3877c7907c 0 388 388 0 1 1 0 1 1
+4 0 388 0 0 1 0 0 1
+7 0 388
+4 0 388
+3 0 388
+3 0 388 0 0 0 0 0 0 0 0 388
jcnd=388/388 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 502 0 0 1 0 0 1
+7 0 502
+3 0 502
+3 0 502 502 0 0 1 0 0 1
+4 0 502
+4 0 502 0 0 0 0 0 0 0 0 0 0 502 61
jump=56 0x3877c89be8 0 
* 0 
jump=62 0x3877c89bd0 0 
* 0 
jump=60 0x3877c89bb8 0 
* 0 
jump=64 +11 0 
* 0 
jump=64 0x3877c89c48 0 
* 0 
jump=66 0x3877c89c30 0 
* 0 
jump=64 0x3877c89c18 0 
* 0 
jump=66 0x3877c89c00 0 
* 0 
+11 0 64 64
+3 0 64
+4 0 64
+4 0 64 64
+4 0 64
+4 0 64 0 64
+4 0 64
+9 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
+4 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
jcnd=8/64 0x3877c89c60 0 
* 0 
-40 0 1902 1902
+4 0 1902 0 1902
+4 0 1902 1902
+4 0 1902 0 1902 0 0 3 0 0 3
+4 0 1902 1902
+4 0 1902 0 1902 0 0 8 0 0 8
+4 0 1902 1902
+4 0 1902 0 1902
+4 0 1902
+4 0 1902
+4 0 1902 0 0 0 0 0 0 0 0 1902 31
jcnd=466/1902 0x3877c89c60 0 
* 0 
-32 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66 66
+4 0 66 0 66
+4 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
jcnd=10/66 0x3877c89c60 0 
* 0 
-24 0 64 64
+4 0 64 0 64
+4 0 64 64
+4 0 64 0 64
+4 0 64
+4 0 64
+4 0 64 0 0 0 0 0 0 0 0 64
jcnd=8/64 0x3877c89c60 0 
* 0 
-16 0 66 66 0 1 0 0 1
+4 0 66 0 66
+4 0 66 0 0 1 0 0 1
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66 4
jcnd=10/66 0x3877c89c60 0 
* 0 
+6 0 1660
+4 0 1660 1660
+3 0 1660 0 1660
+3 0 1660 1660
+4 0 1660 0 1660 0 0 1 0 0 1
+4 0 1660 1660
+4 0 1660 0 1660 0 0 1 0 0 1
+4 0 1660 1660
+4 0 1660 0 1660 0 0 2 0 0 2
+4 0 1660
jump=1660 -80 0 
* 0 
-30 0 56 56
+3 0 56 0 56
+3 0 56 56
+4 0 56 0 56
+4 0 56 56
+4 0 56 0 56 0 0 1 0 0 1
+4 0 56 56
+4 0 56 0 56
+4 0 56
jump=56 -80 0 
* 0 
-24 0 62 62
+4 0 62 0 62
+4 0 62 62
+4 0 62 0 62
+4 0 62 62
+4 0 62 0 62 0 0 1 0 0 1
+4 0 62
jump=62 -80 0 
* 0 
-16 0 60 60
+4 0 60 0 60
+4 0 60 60
+4 0 60 0 60
+4 0 60
jump=60 -80 0 
* 0 
+8 0 60 60
+3 0 60
+4 0 60 0 0 1 0 0 1
+4 0 60
+4 0 60
jump=60 -39 0 
* 0 
+9 0 62
+3 0 62 0 0 0 0 0 0 0 0 62
+6 0 62 62
+3 0 62
+4 0 62
jump=62 -72 0 
* 0 
+8 0 56
+4 0 56 56
+3 0 56 0 0 0 0 0 0 0 0 56
+2 0 56
+4 0 56
jump=56 -99 0 
* 0 
+11 0 66 66 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66
+4 0 66
jump=66 0x3877c89b78 0 
* 0 
+9 0 64 64
+3 0 64
+4 0 64
+4 0 64
+4 0 64
jump=64 0x3877c89b70 0 
* 0 
+9 0 66 66
+3 0 66
+4 0 66
+4 0 66
+4 0 66
jump=66 0x3877c89b68 0 
* 0 
+9 0 64 64
+3 0 64
+4 0 64
+4 0 64
+4 0 64
jump=64 0x3877c89b60 0 
* 0 
+9 0 502 0 502 1 0 0 1
+3 0 502 502

fn=(104) alloc_perturb
0x3877c77180 0 386 386 0 1 0 0 1
+6 0 386
+2 0 386 0 0 0 0 0 0 0 0 386 29
+2 0 386 386

fn=(38)
0x3877c79a00 0 512 0 512 1 0 0 1
+2 0 512
+3 0 512 0 512
+2 0 512 0 512
+2 0 512 0 512 0 0 1 0 0 1
+2 0 512
+3 0 512 0 512
+1 0 512 0 512
+1 0 512
+4 0 512
+4 0 512 0 0 0 0 0 0 0 0 512
+6 0 512
+4 0 512
+6 0 512
+3 0 512
+4 0 512
+4 0 512
+4 0 512
+3 0 512 0 0 0 0 0 0 0 0 512
+6 0 512 512 0 1 1 0 1 1
+7 0 512 0 0 0 0 0 0 0 0 512 5
jcnd=390/512 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 386
+4 0 386 386
+1 0 386 386
+1 0 386 386
+2 0 386 386
+2 0 386 386
+2 0 386 386
+2 0 386 386
+7 0 407
+7 0 407 0 0 1 0 0 1 0 0 407 2
+2 0 407
+3 0 407
+5 0 407
+3 0 407
+4 0 407 0 407
+4 0 407
+2 0 407
+5 0 407 407 0 0 4 0 0 4
+4 0 407
+3 0 407 0 0 0 0 0 0 0 0 407
jcnd=407/407 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 407 0 0 1 0 0 1
+3 0 407
+3 0 407
+3 0 407
+4 0 407
+3 0 407
+4 0 407 0 407
+5 0 407
+3 0 407 0 407
+4 0 407 0 407
+4 0 407 0 407
+5 0 407
+3 0 407
+3 0 407
+3 0 407
+3 0 407
+4 0 407
+4 0 407 0 0 1 0 0 1
+4 0 407 0 407
+4 0 407
+4 0 407 0 407
+5 0 407 0 407
+5 0 407
+3 0 407
+3 0 407 0 407
+5 0 407
+5 0 407
+3 0 407 0 407
+4 0 407 0 407
+4 0 407
+6 0 407 0 407
+4 0 407 0 407
+5 0 407 0 0 1 0 0 1
+3 0 407
+3 0 407
+3 0 407
jump=407 +87 0 
* 0 
+8 0 405
+3 0 405
+4 0 405
+2 0 405
+2 0 405
+3 0 405
+3 0 405
+3 0 405
+2 0 405
+2 0 405
+5 0 405
+2 0 405 405 0 0 1 0 0 1
+4 0 405
+3 0 405
+4 0 405 0 405
+4 0 405 0 405
+8 0 405
+7 0 405 0 405
+4 0 405 0 405
+4 0 405 0 405
+4 0 405 0 0 0 0 0 0 0 0 405
-38 0 113
+3 0 113
+4 0 113 0 113
+4 0 113 0 113
+8 0 113
+7 0 113 0 113
+4 0 113 0 113
+4 0 113 0 113
+4 0 113 0 0 0 0 0 0 0 0 113
+6 0 925 925 0 1 0 0 1
+4 0 925
+3 0 925 0 0 0 0 0 0 0 0 925 38
jcnd=365/925 0x3877c79ef0 0 
* 0 
+6 0 560 560
+4 0 560 560
+4 0 560
+4 0 560 0 0 0 0 0 0 0 0 560
+6 0 560 560 0 1 0 0 1
+7 0 560 0 0 0 0 0 0 0 0 560 2
+6 0 560
+4 0 560
+7 0 560 0 0 0 0 0 0 0 0 560 2
+2 0 560
+3 0 560 0 0 0 0 0 0 0 0 560 156
jcnd=373/560 0x3877c79e28 0 
* 0 
+6 0 539
+3 0 539 0 539
+4 0 539 0 539
+5 0 539 0 0 0 0 0 0 0 0 539 12
jcnd=21/539 0x3877c7a090 0 
* 0 
+6 0 518
+7 0 518 0 0 0 0 0 0 0 0 518 6
jcnd=405/518 0x3877c79c50 0 
* 0 
+6 0 113 0 0 1 0 0 1
+3 0 113
+4 0 113
+4 0 113 0 0 0 0 0 0 0 0 113 6
jcnd=47/113 0x3877c79db0 0 
* 0 
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66 0 0 1 0 0 1
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 64
jcnd=66/66 0x3877c79e15 0 
* 0 
-36 0 47
+2 0 47
+2 0 47
+3 0 47
+3 0 47
+8 0 47
+3 0 47
+2 0 47
+2 0 47
+4 0 47 47
+4 0 47
+3 0 47 0 0 0 0 0 0 0 0 47
jcnd=47/47 0x3877c79e15 0 
* 0 
0x3877c79db0 0 47 0 0 1 0 0 1
+3 0 47
+4 0 47
+4 0 47 0 0 0 0 0 0 0 0 47
+2 0 47
+3 0 47 0 0 1 0 0 1
+7 0 47
jump=47 0x3877c79d18 0 
* 0 
+78 0 113 0 113
+4 0 113 0 113
+4 0 113
+3 0 113
jump=113 0x3877c79c73 0 
* 0 
+8 0 373 373 0 1 0 0 1
+4 0 373
+3 0 373 0 0 0 0 0 0 0 0 373 8
jcnd=195/373 0x3877c79ce1 0 
* 0 
+6 0 178 178
+5 0 178 0 0 0 0 0 0 0 0 178 3
jcnd=157/178 0x3877c79ce1 0 
* 0 
+6 0 21 0 0 1 0 0 1
+3 0 21
+3 0 21
+3 0 21
+7 0 21 0 21
+4 0 21 0 21
+4 0 21
+3 0 21 0 21
+4 0 21 0 21 0 0 16 0 0 16
+4 0 21 0 21
+4 0 21 0 0 0 0 0 0 0 0 21 4
jcnd=8/21 +18 0 
* 0 
+2 0 13 0 13 0 0 1 0 0 1
+8 0 13 0 13
+8 0 13
+7 0 13 0 13 1 0 0 1
+4 0 13
+3 0 13
+3 0 13
+3 0 13
+4 0 13
+3 0 13
+4 0 13
+3 0 13
+3 0 13
+4 0 13 0 13
+4 0 13 0 13
+4 0 13
+4 0 13
+3 0 13 0 13
cfn=(104)
calls=13 0x3877c77180 0 
* 0 52 26 0 0 0 0 0 0 0 13
-56 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8 0 0 2 0 0 2
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
+5 0 21
+3 0 21
jump=21 0x3877c79ae3 0 
* 0 
+55 0 365 0 0 1 0 0 1
+7 0 365
+3 0 365 0 0 0 0 0 0 0 0 365 2
+6 0 365 365 0 1 0 0 1
+4 0 365
+3 0 365
+3 0 365
+2 0 365
+4 0 365
+3 0 365
+3 0 365
+2 0 365
+2 0 365
+2 0 365
+2 0 365 365 0 0 1 0 0 1
+8 0 365
+5 0 365
+5 0 365
+2 0 365 0 0 0 0 0 0 0 0 365
-2 0 199
+2 0 199 0 0 0 0 0 0 0 0 199 1
jcnd=1/199 +14 0 
* 0 
+2 0 563
+2 0 563 0 0 0 0 0 0 0 0 563 31
jcnd=318/563 +64 0 
* 0 
+2 0 245
+8 0 245
+3 0 245
+3 0 245 0 0 0 0 0 0 0 0 245
-6 0 114
+3 0 114
+3 0 114 0 0 0 0 0 0 0 0 114 2
+2 0 359
+2 0 359 359 0 0 1 0 0 1
+8 0 359
+2 0 359 0 0 0 0 0 0 0 0 359 14
jcnd=113/359 -20 0 
* 0 
+2 0 246
+2 0 246
+5 0 246
+3 0 246
+3 0 246
+2 0 246
+2 0 246
+5 0 246 0 0 0 0 0 0 0 0 246 1
jcnd=2/246 +14 0 
* 0 
+2 0 244
+2 0 244
+4 0 244
+2 0 244
+2 0 244 0 0 0 0 0 0 0 0 244
jcnd=244/244 -8 0 
* 0 
-8 0 1753
+4 0 1753
+2 0 1753
+2 0 1753 0 0 0 0 0 0 0 0 1753 138
jcnd=1241/1753 -8 0 
* 0 
-2 0 318 0 0 1 0 0 1
+2 0 318 0 0 0 0 0 0 0 0 318 18
jcnd=268/318 -8 0 
* 0 
+2 0 564 564 0 0 12 0 0 12
+4 0 564 0 0 1 0 0 1
+3 0 564 0 0 0 0 0 0 0 0 564 159
jcnd=365/564 0x3877c7a1cf 0 
* 0 
+6 0 199
+2 0 199
+4 0 199
+2 0 199
+2 0 199
+2 0 199 0 199
+8 0 199
jump=199 0x3877c79f30 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 365 365 0 1 2 0 1 2
+4 0 365 365 0 0 1 0 0 1
+4 0 365
+3 0 365 365
+4 0 365
+4 0 365
+3 0 365
+3 0 365 365
+4 0 365 0 0 0 0 0 0 0 0 365
+6 0 365 365 0 0 1 0 0 1
+4 0 365 0 0 0 0 0 0 0 0 365
+6 0 365 365 0 1 0 0 1
+8 0 365 0 365
+4 0 365 0 365
+4 0 365 0 0 0 0 0 0 0 0 365 66
jcnd=249/365 +38 0 
* 0 
+2 0 116 116 0 0 1 0 0 1
+4 0 116
+3 0 116 0 0 0 0 0 0 0 0 116
+2 0 116 116
+5 0 116 0 0 0 0 0 0 0 0 116
+6 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116
+4 0 116 0 0 0 0 0 0 0 0 116
-4 0 249
+4 0 249 0 0 0 0 0 0 0 0 249 10
jcnd=16/249 0x3877c7a2e3 0 
* 0 
+6 0 349 349
+4 0 349 349 0 1 0 0 1
+4 0 349 0 0 0 0 0 0 0 0 349
+6 0 349
+4 0 349
+7 0 349 0 349 0 0 8 0 0 8
+4 0 349 0 349
+4 0 349 0 349
+4 0 349 0 349
+4 0 349 0 0 0 0 0 0 0 0 349 2
+2 0 349 0 349
+5 0 349
+7 0 349 0 0 0 0 0 0 0 0 349 1
jcnd=234/349 +18 0 
* 0 
+2 0 115 0 115 0 0 5 0 0 5
+8 0 115 0 115 1 0 0 1
+8 0 115
+7 0 115 0 115 0 0 3 0 0 3
+4 0 115
+3 0 115
+3 0 115
+4 0 115
+3 0 115
+4 0 115
+3 0 115
+3 0 115
+4 0 115 0 115
+4 0 115 0 115 0 0 1 0 0 1
+4 0 115
jump=115 +71 0 
* 0 
-46 0 234
+7 0 234 0 234
+4 0 234
+3 0 234
+3 0 234
+4 0 234
+3 0 234
+4 0 234
+3 0 234
+3 0 234
+4 0 234 0 234
+4 0 234 0 234 0 0 1 0 0 1
+4 0 234
jump=234 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 16
+7 0 16 0 16
+6 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +7 0 
* 0 
+7 0 365
+4 0 365 0 0 1 0 0 1
+3 0 365
+3 0 365 0 365
cfn=(104)
calls=365 0x3877c77180 0 
* 0 1460 730 0 1 0 0 1 0 0 365 29
+5 0 365
+3 0 365
jump=365 0x3877c79ae3 0 
* 0 

totals: 1880790 725556 448017 223 69 79 223 69 79 70541 1704 3062 61
