version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2074


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2601301065 - 2601326211
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 104 0 0 1 0 0 1
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=104 0x3877c7b8b0 0 
* 0 8736 1976 1040 7 2 0 7 2 0 1768
* 0 104 104 0 1 1 0 1 1 0 0 0 104

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 104 0 104 1 0 0 1
+1 0 104
+5 0 104
+3 0 104 0 104
+1 0 104
+4 0 104 0 0 1 0 0 1
+3 0 104
+4 0 104
+3 0 104 0 104 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=104 0x3877c7aa50 0 
* 0 12343 2653 1756 29 20 22 29 20 22 2108 46
* 0 104 104 0 1 1 0 1 1 0 0 0 104
+5 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 +96 0 
* 0 
+96 0 104 0 0 1 0 0 1
+4 0 104 104
+1 0 104 104
+1 0 104 104

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 24 0 24 1 0 0 1
+1 * 24
+3 * 24
+4 * 24 0 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=24 0x402d74 645 
* * 312 144 48
+5 * 24
+3 * 24 0 24
+3 +1 24 24
+6 * 24 0 24
+3 * 24 24
+6 * 24 0 24
+3 +1 24 24
+6 * 24 0 24 1 0 0 1
+3 * 24 24
+6 * 24 0 24
+3 +2 24 0 24
+7 * 24
jump=24 +86 * 
* * 
+2 +1 324 324
+3 * 324
+3 * 324 324
+4 * 324
+3 * 324
+3 * 324 0 324
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=324 0x402d9a 770 
* * 3564 1620 972
+5 * 324 324
+4 * 324 324
+5 * 324
+4 * 324 0 324
+5 +1 324 324
+3 * 324
+3 * 324 324
+4 * 324
+3 * 324
+3 * 324 0 324
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=324 0x402dba 770 
* * 3564 1620 972 1 0 0 1
+5 * 324 324
+2 * 324
+4 * 324 324
+5 * 324
+4 * 324 0 324
+5 -2 324 0 324
+4 * 324 324
+3 * 324
+3 * 324 324
+3 * 324 0 0 0 0 0 0 0 0 324 25
jcnd=300/324 -93 +1 
* * 
-9 * 24 24 0 1 0 0 1
+3 * 24
+3 * 24 24
+3 * 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 -93 +1 
* * 
+2 +4 24 24
+3 * 24
+3 * 24
+4 * 24 24 0 1 0 0 1
+5 * 24
+4 * 24
+3 * 24 0 24
+5 +1 24 24
+3 * 24
+3 * 24
+4 * 24 24
+5 * 24
+4 * 24
+3 * 24 0 24
+5 +1 24 0 24
+7 * 24
jump=24 0x4016ee * 
* * 
+2 +1 324 324
+3 * 324
+3 * 324 324
+4 * 324
+3 * 324 0 0 1 0 0 1
+3 * 324 0 324
cfi=(2)
cfn=(146)
calls=324 0x402dba 770 
* * 3564 1620 972
+5 * 324 324
+2 * 324
+4 * 324 324
+5 * 324 0 324
+5 +1 324 324
+3 * 324
+3 * 324 324
+4 * 324
+3 * 324
+3 * 324 0 324
cfi=(2)
cfn=(144)
calls=324 0x402d9a 770 
* * 3564 1620 972
+5 * 324 324
+4 * 324 324
+5 * 324 0 324
+5 +1 324 324
+5 * 324 324
+5 * 324 324
+5 * 324
+4 * 324 0 324
+5 +1 324 324
+5 * 324 324
+5 * 324 324
+5 * 324
+4 * 324 0 324
+5 -4 324 0 324
+4 * 324 324
+3 * 324
+3 * 324 324
+3 * 324 0 0 0 0 0 0 0 0 324 25
jcnd=300/324 0x401672 +1 
* * 
-9 * 24 24 0 1 0 0 1
+3 * 24
+3 * 24 24
+3 * 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x401672 +1 
* * 
+6 +6 24 24 0 1 0 0 1
+5 * 24 24
+5 * 24 0 24
+5 +2 24 24
+3 +1 24 0 24
+3 * 24 24
+5 * 24 24
+1 * 24 24

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 24
+7 * 24
+7 * 24
+3 * 24
+3 * 24 0 24
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=24 0x4030b2 310 
* * 17206 5288 4592 63 17 13 63 17 13 830 43 94 11
+5 * 24
+7 * 24
+7 * 24
+3 * 24
+3 * 24 0 24
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=24 0x402ff4 310 
* * 17314 5298 4631 45 7 10 45 7 10 838 43 94
+5 * 24 0 0 1 0 0 1
+7 * 24
+7 * 24
+3 * 24
+3 * 24 0 24
cfn=(142)
calls=24 0x401585 -52 
* * 35256 15504 8184 8 0 0 8 0 0 696 50
+5 * 24 0 24
+8 * 24 24
+6 * 24 0 24
+6 * 24
+7 * 24
+3 * 24 0 24
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=24 0x402df4 414 
* * 5472 1704 1272 20 4 0 20 4 0 456 0 48
+5 * 24
+7 * 24
+3 * 24 0 24 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=24 0x402e74 414 
* * 5472 1704 1272 7 0 0 7 0 0 456 0 48
+5 +2 24
+7 * 24
+7 * 24
+3 * 24
+3 * 24 0 24
cfi=(2)
cfn=(4)
calls=24 0x4030b2 310 
* * 16561 5230 4464 0 0 1 0 0 1 740 6 94
+5 * 24
+7 * 24
+7 * 24
+3 * 24
+3 * 24 0 24
cfi=(2)
cfn=(80)
calls=24 0x402ff4 310 
* * 16561 5230 4464 0 0 0 0 0 0 740 1 94
+5 * 24 24
+6 * 24 0 0 1 0 0 1
+7 * 24
+7 * 24 0 24
+6 * 24 24
+8 * 24
+3 * 24
+3 * 24 0 24
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=24 0x401719 -33 
* * 16968 7008 3924 4 0 0 4 0 0 348 25
+5 * 24 0 24
+8 * 24 24
+6 * 24 0 24
+6 * 24
+7 * 24 0 0 1 0 0 1
+3 * 24 0 24
cfi=(2)
cfn=(148)
calls=24 0x402df4 414 
* * 5472 1704 1272 0 0 0 0 0 0 456 0 48
+5 * 24
+7 * 24
+3 * 24 0 24
cfi=(2)
cfn=(178)
calls=24 0x402e74 414 
* * 5472 1704 1272 0 0 0 0 0 0 456 0 48
+5 +2 24 24
+7 * 24
+3 * 24 0 24
cfi=(2)
cfn=(2)
calls=24 0x402d74 645 
* * 312 144 48
+5 * 24 24
+6 * 24
+3 * 24
+3 * 24
+3 * 24 24
+7 * 24
+3 * 24 0 0 1 0 0 1
+3 * 24 0 24
cfi=(2)
cfn=(144)
calls=24 0x402d9a 770 
* * 264 120 72
+5 * 24
+3 * 24
+7 * 24
+3 * 24
+3 * 24 0 24
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=24 0x402eda 901 
* * 6599 2249 1843 27 4 6 27 4 6 279 9 23
+5 +1 24 24
+7 * 24
+3 * 24 0 24
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=24 0x402f54 645 
* * 312 144 48 0 1 0 0 1
+5 * 24 24
+6 * 24
+3 * 24
+3 * 24
+3 * 24 24
+7 * 24 0 0 1 0 0 1
+3 * 24
+3 * 24 0 24
cfi=(2)
cfn=(146)
calls=24 0x402dba 770 
* * 264 120 72
+5 * 24
+3 * 24
+7 * 24
+3 * 24
+3 * 24 0 24
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=24 0x402f7a 901 
* * 6746 2262 1868 19 4 6 19 4 6 301 12 23
+5 +1 24 24
+7 * 24
+3 * 24 0 24
cfi=(2)
cfn=(10)
calls=24 0x402f54 645 
* * 312 144 48
+5 * 24 24
+6 * 24
+3 * 24
+3 * 24
+3 * 24 24 0 1 0 0 1
+7 * 24
+3 * 24
+3 * 24 0 24
cfi=(2)
cfn=(146)
calls=24 0x402dba 770 
* * 264 120 72
+5 * 24 24
+2 * 24
+4 * 24 24
+8 * 24 24
+8 * 24 0 24
+8 +1 24 24
+7 * 24
+3 * 24 0 24
cfi=(2)
cfn=(2)
calls=24 0x402d74 645 
* * 312 144 48
+5 * 24 24 0 1 0 0 1
+6 * 24
+3 * 24
+3 * 24
+3 * 24 24
+7 * 24
+3 * 24
+3 * 24 0 24
cfi=(2)
cfn=(144)
calls=24 0x402d9a 770 
* * 264 120 72
+5 * 24 24
+4 * 24 24
+8 * 24
+4 * 24 24
+8 * 24
+3 * 24 0 24
+8 +2 24 0 24
+7 -12 24 24
+8 * 24 24
+7 * 24 0 0 0 0 0 0 0 0 24 1
jcnd=1/24 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 24
+7 * 24
+3 * 24 0 24
cfi=(2)
cfn=(2)
calls=24 0x402d74 645 
* * 312 144 48 2 0 1 2 0 1
+5 * 24
+3 * 24 24
+7 * 24
+3 * 24 0 24
cfi=(2)
cfn=(2)
calls=24 0x402d74 645 
* * 312 144 48 0 1 0 0 1
+5 * 24
+3 * 24 0 0 0 0 0 0 0 0 24
+2 * 24 0 0 1 0 0 1
+5 * 24
jump=24 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 24
+2 * 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 * 24 0 24
+4 * 24 0 24
+5 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(2)
cfn=(2)
calls=24 0x402d74 645 
* * 312 144 48
+5 * 24
+3 * 24 0 24
+3 +1 24 24 0 1 0 0 1
+6 * 24 0 24
+3 * 24 24
+6 * 24 0 24
+3 +2 24 0 24
+7 * 24
jump=24 +86 * 
* * 
+2 +1 324 324
+3 * 324
+3 * 324 324
+4 * 324
+3 * 324
+3 * 324 0 324
cfi=(2)
cfn=(144)
calls=324 0x402d9a 770 
* * 3564 1620 972
+5 * 324 324
+4 * 324 324
+5 * 324
+4 * 324 0 324
+5 +1 324 324
+3 * 324
+3 * 324 324
+4 * 324
+3 * 324
+3 * 324 0 324
cfi=(2)
cfn=(146)
calls=324 0x402dba 770 
* * 3564 1620 972
+5 * 324 324
+2 * 324
+4 * 324 324
+5 * 324
+4 * 324 0 324
+5 -2 324 0 324
+4 * 324 324
+3 * 324
+3 * 324 324
+3 * 324 0 0 0 0 0 0 0 0 324 25
jcnd=300/324 -93 +1 
* * 
-9 * 24 24 0 1 0 0 1
+3 * 24
+3 * 24 24
+3 * 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 -93 +1 
* * 
+2 +4 24 24
+3 * 24
+3 * 24 0 0 1 0 0 1
+4 * 24 24
+5 * 24
+4 * 24
+3 * 24 0 24
+5 +1 24 24
+3 * 24
+3 * 24
+4 * 24 24
+5 * 24
+4 * 24
+3 * 24 0 24
+5 +1 24 24
+5 * 24 24
+5 * 24 24
+5 * 24 0 0 1 0 0 1
+4 * 24
+3 * 24 0 24
+5 +2 24 24
+3 +1 24 0 24
+3 * 24 24
+5 * 24 24
+1 * 24 24

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 48 0 48 1 0 0 1
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=48 0x404a28 -35 
* * 288 96 144 1 0 1 1 0 1
+5 * 48 48
+1 * 48 48

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 48
+4 * 48
+3 * 48 0 48
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=48 0x4044cc -35 
* * 240 96 96
+5 * 48 48
+1 * 48 48

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 48 0 48 1 0 0 1
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48 1 0 0 1
+4 +1 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=48 0x4049d4 -35 
* * 288 96 144 1 0 0 1
+5 * 48 48
+1 * 48 48

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 48 0 48 1 0 0 1
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 48
+4 * 48
+3 * 48 0 48
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=48 0x404520 -35 
* * 240 96 96
+5 * 48 48
+1 * 48 48

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 48 0 48 1 0 0 1
+1 * 48
+3 * 48 0 48
+4 * 48 48
+4 * 48 48
+1 * 48 48

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 * 24 0 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24 24
+4 * 24 24
+4 * 24
+3 * 24
+3 * 24 0 24
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=24 0x40406a -87 
* * 576 192 216 0 2 1 0 2 1 24
+5 * 24 24
+1 * 24 24

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=8 +8 113 
* * 48 16 16
+5 * 8 8
+1 * 8 8

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=8 +7 113 
* * 48 16 16
+5 * 8 8
+1 * 8 8

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 48 0 48
+1 * 48
+3 * 48 0 48
+4 * 48 48
+4 * 48 48
+1 * 48 48

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 * 24 0 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24 24
+4 * 24 24
+4 * 24
+3 * 24
+3 * 24 0 24
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=24 0x403df2 -87 
* * 576 192 216 0 3 1 0 3 1 24
+5 * 24 24
+1 * 24 24

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 96 0 96 1 0 0 1
+1 * 96
+3 * 96 0 96
+4 +1 96 96
+4 * 96 96
+1 * 96 96

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 96 0 96 1 0 0 1
+1 * 96
+3 * 96
+4 * 96 0 96
+4 +1 96
+4 * 96
+3 * 96 0 96 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=96 0x40500c 790 
* * 576 288 192 1 0 0 1
+5 * 96 96
+3 * 96 96
+1 * 96 96

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 88 0 88
+1 * 88
+3 * 88 0 88
+4 +1 88 88
+4 * 88 88
+1 * 88 88

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 96 0 96 1 0 0 1
+1 * 96
+3 * 96 0 96
+4 +1 96 96 0 1 0 0 1
+4 * 96 96
+1 * 96 96

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 88 0 88
+1 * 88
+3 * 88 0 88 0 0 1 0 0 1
+4 +1 88 88
+4 * 88 88
+1 * 88 88

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 96 0 96 1 0 0 1
+1 * 96
+3 * 96
+4 * 96 0 96
+4 +1 96
+4 * 96
+3 * 96 0 96
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=96 0x404ffe 790 
* * 576 288 192 1 0 0 1
+5 * 96 96
+3 * 96 96
+1 * 96 96

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 48 0 48
+1 * 48
+3 * 48 0 48
+4 * 48 0 48
+4 * 48 48
+4 * 48 48
+1 * 48 48

fl=(5)
fn=(28)
0x404992 113 60 0 60 1 0 0 1
+1 * 60
+3 * 60 0 60
+4 +1 60
+10 * 60 60
+1 * 60 60

fn=(176)
0x4044cc 86 48 0 48
+1 * 48
+3 * 48 0 48
+4 * 48 48
+1 * 48 48

fn=(224)
0x403df2 129 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 * 24 0 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24
+5 * 24 0 24
cfi=(16)
cfn=(226)
calls=24 0x402d61 -20 
* * 168 72 72
+5 * 24
+3 * 24 0 0 0 0 0 0 0 0 24
+2 * 24 24
+4 * 24 24 0 0 3 0 0 3
+2 * 24 0 24 0 0 1 0 0 1
+2 * 24 24
+1 * 24 24

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 52 0 52
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 * 52 0 52
+4 +1 52 52
+4 * 52
+3 * 52 0 52
cob=(5)
cfi=(8)
cfn=(164)
calls=52 0x387e4bb2f0 0 
* * 4576 1040 520 9 3 0 9 3 0 936 0 52
* * 52 52 0 1 1 0 1 1 0 0 0 52
+5 * 52 52
+1 * 52 52

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 52 0 52
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 * 52 0 52
+4 +1 52 52
+4 * 52
+3 * 52 0 52
cob=(5)
cfi=(8)
cfn=(164)
calls=52 0x387e4bb2f0 0 
* * 4576 1040 520 0 0 0 0 0 0 936 0 52
* * 52 52 0 0 0 0 0 0 0 0 0 52
+5 * 52 52
+1 * 52 52

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 52 0 52 1 0 0 1
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 * 52 0 52
+4 +2 52 52
+4 * 52
+3 * 52 0 52
cfn=(102)
calls=52 0x4048de +12 
* * 312 104 104 1 0 0 1
+5 * 52 52
+4 * 52 0 0 1 0 0 1
+3 * 52
+2 * 52 0 0 0 0 0 0 0 0 52
jcnd=52/52 +7 +3 
* * 
+7 +3 52 52
+4 * 52
+4 * 52
+3 * 52 0 52
cob=(5)
cfi=(8)
cfn=(32)
calls=52 0x387e4bd0b0 0 
* * 6984 1533 1041 20 7 11 20 7 11 1099 20 52
* * 52 52 0 0 0 0 0 0 0 0 0 52
+5 +1 52 52
+1 * 52 52

fn=(18)
0x404a28 81 48 0 48 1 0 0 1
+1 * 48
+3 * 48 0 48 0 0 1 0 0 1
+4 * 48 0 48
+4 * 48 48
+1 * 48 48

fn=(92)
0x4049d4 81 48 0 48 1 0 0 1
+1 * 48
+3 * 48 0 48
+4 * 48 0 48
+4 * 48 48
+1 * 48 48

fn=(196)
0x404520 86 48 0 48
+1 * 48
+3 * 48 0 48
+4 * 48 48
+1 * 48 48

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 52 0 52 1 0 0 1
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 * 52 0 52 1 0 0 1
+4 +2 52 52
+4 * 52
+3 * 52 0 52
cfn=(28)
calls=52 0x404992 +12 
* * 312 104 104 1 0 0 1
+5 * 52 52
+4 * 52
+3 * 52
+2 * 52 0 0 0 0 0 0 0 0 52
jcnd=52/52 +7 +3 
* * 
+7 +3 52 52
+4 * 52
+4 * 52
+3 * 52 0 52
cob=(5)
cfi=(8)
cfn=(32)
calls=52 0x387e4bd0b0 0 
* * 7023 1536 1027 13 14 12 13 14 12 1113 26 52
* * 52 52 0 1 1 0 1 1 0 0 0 52
+5 +1 52 52
+1 * 52 52

fn=(102)
0x4048de 113 60 0 60 1 0 0 1
+1 * 60
+3 * 60 0 60
+4 +1 60
+10 * 60 60
+1 * 60 60

fn=(266)
0x40406a 129 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 * 24 0 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24
+5 * 24 0 24
cfi=(16)
cfn=(226)
calls=24 0x402d61 -20 
* * 168 72 72
+5 * 24
+3 * 24 0 0 0 0 0 0 0 0 24
+2 * 24 24
+4 * 24 24 0 0 2 0 0 2
+2 * 24 0 24 0 0 1 0 0 1
+2 * 24 24
+1 * 24 24

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=8 0x4048f2 107 
* * 1812 584 557 4 0 3 4 0 3 38 2 7
+5 * 8 8
+1 * 8 8

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +2 48 48 0 1 0 0 1
+4 * 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=48 0x404a36 450 
* * 13154 3884 3600 24 3 2 24 3 2 472 30 92 11
+5 * 48 48
+1 * 48 48

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +2 48 48
+4 * 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=48 0x40439c 107 
* * 14498 4364 4080 7 1 1 7 1 1 472 27 92
+5 * 48 48
+1 * 48 48

fn=(116)
0x40439c 107 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +10 48 48
+4 * 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=48 0x4047d7 -26 
* * 13826 4124 3840 7 1 1 7 1 1 472 27 92
+5 +1 48 48
+1 * 48 48

fn=(118)
0x4047d7 91 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +2 48 48
+4 * 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=48 0x4049e2 450 
* * 13154 3884 3600 7 1 1 7 1 1 472 27 92
+5 * 48 48
+1 * 48 48

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8 1 0 0 1
+4 * 8 0 8
+4 +7 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=8 0x404772 -25 
* * 1932 624 605 2 0 0 2 0 0 38 1 7
+5 +1 8 8
+1 * 8 8

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8 1 0 0 1
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +7 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(230)
calls=8 0x40465c -25 
* * 1932 624 605 5 0 3 5 0 3 38 2 7
+5 +1 8 8
+1 * 8 8

fn=(232)
0x4048f2 107 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +10 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=8 0x404af4 -26 
* * 1700 544 517 4 0 3 4 0 3 38 2 7
+5 +1 8 8
+1 * 8 8

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +10 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=8 0x404b99 -26 
* * 1700 544 517 2 0 0 2 0 0 38 1 7
+5 +1 8 8
+1 * 8 8

fn=(274)
0x404b99 91 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=8 0x404cf0 450 
* * 1588 504 477 1 0 0 1 0 0 38 1 7
+5 * 8 8
+1 * 8 8

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +10 48 48
+4 * 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(52)
calls=48 0x404829 -26 
* * 13826 4124 3840 25 3 2 25 3 2 472 30 92 11
+5 +1 48 48
+1 * 48 48

fn=(270)
0x404772 256 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(272)
calls=8 0x4049a6 107 
* * 1812 584 557 2 0 0 2 0 0 38 1 7
+5 * 8 8
+1 * 8 8

fn=(234)
0x404af4 91 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8 1 0 0 1
+4 * 8 0 8
+4 +2 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=8 0x404caa 450 
* * 1588 504 477 2 0 3 2 0 3 38 2 7
+5 * 8 8
+1 * 8 8

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +2 48 48
+4 * 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48 1 0 0 1
cfn=(50)
calls=48 0x404484 107 
* * 14498 4364 4080 25 3 2 25 3 2 472 30 92 11
+5 * 48 48
+1 * 48 48

fl=(2)
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 52 0 52 1 0 0 1
+1 * 52 0 0 1 0 0 1
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 0 52 52
+5 0 52 0 0 0 0 0 0 0 0 52
+2 0 52 52
+4 0 52 52
+4 0 52
+5 0 52
+3 0 52
+3 0 52 0 52
fi=(6) ???
cfi=(5)
cfn=(100)
calls=52 0x40461a 99 
* 0 8336 1949 1457 23 7 11 23 7 11 1151 20 104
+5 0 52
fi=(6)
jump=52 +7 0 
* 0 
+7 0 52 52
+1 0 52 52

fn=(144)
0x402d9a 770 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+3 * 1020 1020
+4 * 1020
+4 * 1020
+3 * 1020 1020
+1 * 1020 1020

fn=(146)
0x402dba 770 1020 0 1020
+1 * 1020
+3 * 1020 0 1020 1 0 0 1
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+3 * 1020 1020
+4 * 1020
+4 * 1020
+3 * 1020 1020
+1 * 1020 1020

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 48
+4 * 48
+3 * 48 0 48
cfi=(4)
cfn=(194)
calls=48 0x403d7e +42 
* * 672 240 240 1 0 0 1
+5 * 48 48
+1 * 48 48

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=8 0x403b08 117 
* * 48 24 16
+5 * 8
+3 * 8 0 8
cfi=(3)
cfn=(256)
calls=8 0x404978 221 
* * 120 40 40
+5 * 8 8
+1 * 8 8

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 48 0 48 1 0 0 1
+1 * 48
+3 * 48 0 48
+1 * 48
+4 * 48 0 48
+4 +2 48 48
+4 * 48 48
+4 * 48
+3 * 48 48
+4 * 48 48
+3 * 48
+3 * 48
+3 * 48
+4 * 48
+3 * 48 48
+4 * 48 48
+3 -1 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=48 0x403d98 +11 
* * 5568 1440 960 1 0 0 1 0 0 912 0 96
+5 +1 48 48
+4 * 48
+3 * 48 0 48
cfn=(192)
calls=48 0x403296 -82 
* * 1104 384 384 1 0 0 1
+5 * 48
jump=48 +28 * 
* * 
+28 * 48
+4 * 48 48
+1 * 48 48
+1 * 48 48

fn=(2)
0x402d74 645 208 0 208 1 0 0 1
+1 * 208
+3 * 208 0 208 0 0 1 0 0 1
+4 +1 208 208
+4 * 208 208 0 1 1 0 1 1
+4 * 208
+3 * 208 208
+4 * 208 208
+3 * 208
+3 * 208
+3 * 208
+4 * 208 208
+1 * 208 208

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 +2 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=48 0x404236 -14 
* * 8277 2026 1472 19 13 7 19 13 7 1098 19 96
+5 * 48 48
+4 * 48 0 48
+3 +1 48 48
+4 * 48 48 0 1 0 0 1
+3 * 48 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+3 * 48 48
+4 * 48
+4 * 48
+3 * 48 48
+4 * 48 0 48
+4 +1 48 48
+1 * 48 48

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 +2 48 48
+4 * 48 48 0 1 0 0 1
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(96)
calls=48 0x403fbe -14 
* * 8385 2036 1511 23 6 9 23 6 9 1106 17 96
+5 * 48 48
+4 * 48 0 48
+3 +1 48 48
+4 * 48 48
+3 * 48 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+3 * 48 48
+4 * 48
+4 * 48
+3 * 48 48
+4 * 48 0 48
+4 +1 48 48
+1 * 48 48

fn=(244)
0x402f7a 901 24 0 24
+1 * 24
+3 * 24 0 0 1 0 0 1
+4 * 24 0 24
+4 * 24 0 24
+4 +2 24 24
+4 * 24 24
+4 * 24 24
+4 * 24 24
+4 * 24
+3 * 24 0 0 0 0 0 0 0 0 24
jcnd=4/24 +51 +10 
* * 
+2 +3 20 20
+4 * 20 20
+4 * 20 20
+4 -1 20 20
+4 * 20
+3 * 20
+3 * 20 0 20
cfi=(3)
cfn=(264)
calls=20 0x4036b1 215 
* * 760 260 280 0 1 0 0 1 0 20
+5 +2 20 20
+4 * 20 20
+4 * 20
+4 * 20 20
+4 * 20 0 20
+4 * 20
jump=20 +36 +8 
* * 
+2 +6 4 4
+4 * 4
+3 * 4 0 4
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=4 0x4039c4 556 
* * 92 36 28
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=4 0x4036de 318 
* * 5286 1670 1440 18 3 6 18 3 6 257 12 23
+5 +2 24 24
+1 * 24 24

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=4 0x4042c6 726 
* * 40 20 16
+5 * 4 4
+4 * 4 4
+1 * 4 4

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 108 0 108 1 0 0 1
+1 * 108
+3 * 108 0 108 1 0 0 1
+4 +1 108 108
+4 * 108 108
+1 * 108 108

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+3 * 48 0 48
+4 * 48
+4 * 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=48 0x404380 726 
* * 480 240 192
+5 * 48 48
+4 * 48 48
+1 * 48 48

fn=(148)
0x402df4 414 48 0 48
+1 * 48
+3 * 48 0 48
+1 * 48
+4 * 48 0 48 1 0 0 1
+4 +2 48 48
+4 * 48
+3 * 48 0 48
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=48 0x40325e 113 
* * 288 144 96
+5 * 48
+3 * 48 48
+4 * 48 48
+4 * 48 48
+4 * 48 48
+3 -1 48
+3 * 48
+3 * 48 0 48
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=48 0x40326c 148 
* * 1488 480 576 4 0 0 4
+5 +1 48 48
+4 * 48
+3 * 48 0 48
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=48 0x4031ec 159 
* * 8016 2352 1584 14 4 0 14 4 0 912 0 96
+5 * 48
jump=48 +28 * 
* * 
+28 * 48 0 0 1 0 0 1
+4 * 48 48
+1 * 48 48
+1 * 48 48

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 52 0 52 1 0 0 1
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 * 52 0 52
+4 +2 52 52
+5 * 52 0 0 0 0 0 0 0 0 52
+2 +1 52 52
+4 * 52 52
+4 * 52 52
+4 * 52
+3 * 52
+3 * 52 0 52
cfi=(5)
cfn=(160)
calls=52 0x4044d6 -65 
* * 5200 1248 780 10 4 0 10 4 0 936 0 104
+5 +1 52 52
+1 * 52 52

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 48 0 48
+1 * 48
+3 * 48 0 48
+1 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=48 0x4043ca -45 
* * 1728 624 672 4 0 4 4 0 4
+5 +1 48 48 0 1 0 0 1
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(20)
calls=48 0x404412 +43 
* * 9477 2602 1808 20 13 7 20 13 7 1098 19 96
+5 * 48
jump=48 +28 * 
* * 
+28 * 48
+4 * 48 48
+1 * 48 48
+1 * 48 48

fn=(14)
0x4043ca 90 48 0 48 1 0 0 1
+1 * 48
+3 * 48
+4 * 48 0 48 0 0 1 0 0 1
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfi=(4)
cfn=(16)
calls=48 0x404804 +24 
* * 864 288 336 2 0 1 2 0 1
+5 * 48 48
+4 * 48 0 48 0 0 2 0 0 2
+7 * 48 48
+4 * 48 0 48 1 0 0 1
+8 * 48 48
+4 * 48 0 48
+8 +1 48 48
+1 * 48 48

fn=(80)
0x402ff4 310 48 0 48 1 0 0 1
+1 * 48
+3 * 48 0 48
+2 * 48 0 48
+2 * 48 0 48
+1 * 48 0 0 1 0 0 1
+4 * 48 0 48
+4 * 48 0 48
+4 +2 48 48
+4 * 48
+3 * 48 0 48
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=48 0x4039fc 117 
* * 288 144 96 2 0 0 2
+5 * 48
+3 * 48 0 48
cfi=(3)
cfn=(84)
calls=48 0x4039ed -88 
* * 288 144 96
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(2)
calls=48 0x402d74 645 
* * 624 288 96
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48
+3 * 48
+3 * 48 0 48 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=48 0x403a0a 134 
* * 12369 3572 2855 30 6 9 30 6 9 1106 17 96
+5 +4 48 48
+4 * 48
+3 * 48 0 48
cfn=(106)
calls=48 0x40325e 113 
* * 288 144 96 1 0 0 1
+5 * 48
+3 * 48 48
+4 * 48 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=48 0x403a98 565 
* * 1200 480 384 2 0 0 2
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(112)
calls=48 0x403a68 547 
* * 1200 480 384
+5 * 48
+3 * 48
+3 * 48
+3 * 48
+3 * 48 0 48
cfi=(11)
cfn=(114)
calls=48 0x403ac9 -60 
* * 15218 4604 4368 7 1 1 7 1 1 472 27 92
+5 -3 48 48
+4 * 48 0 48
+4 * 48
jump=48 +28 +4 
* * 
+28 +4 48
+4 * 48 48
+1 * 48 48
+2 * 48 48
+2 * 48 48
+1 * 48 48

fn=(188)
0x403d98 171 52 0 52 1 0 0 1
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 * 52 0 52
+4 +2 52 52
+5 * 52 0 0 0 0 0 0 0 0 52 4
+2 +1 52 52
+4 * 52 52
+4 * 52 52
+4 * 52
+3 * 52
+3 * 52 0 52
cfi=(5)
cfn=(190)
calls=52 0x40452a -65 
* * 5200 1248 780 0 0 0 0 0 0 936 0 104
+5 +1 52 52
+1 * 52 52

fn=(22)
0x404236 167 52 0 52 1 0 0 1
+1 * 52
+3 * 52
+4 * 52 0 52 1 0 0 1
+4 * 52 0 52
+4 0 52 52
+5 0 52 0 0 0 0 0 0 0 0 52
+2 0 52 52
+4 0 52 52
+4 0 52
+5 0 52
+3 0 52
+3 0 52 0 52
fi=(6)
cfi=(5)
cfn=(26)
calls=52 0x404730 99 
* 0 8375 1952 1443 17 15 12 17 15 12 1165 26 104
+5 0 52
fi=(6)
jump=52 +7 0 
* 0 
+7 0 52 52
+1 0 52 52

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 48 0 48 1 0 0 1
+1 * 48
+3 * 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+4 * 48 0 48
+4 * 48
+4 * 48 0 0 1 0 0 1
+4 * 48
+3 * 48
+3 * 48 0 48
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=48 0x404468 726 
* * 480 240 192 1 0 0 1
+5 * 48 48
+4 * 48 48
+1 * 48 48

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+3 * 48 0 48
+4 * 48
+4 * 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfi=(10)
cfn=(44)
calls=48 0x404468 726 
* * 480 240 192
+5 * 48 48
+4 * 48 48
+1 * 48 48

fn=(86)
0x403a0a 134 48 0 48
+1 * 48
+3 * 48 0 48
+1 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=48 0x4042e2 -45 
* * 1728 624 672 5 0 0 5
+5 +1 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48 1 0 0 1
cfn=(94)
calls=48 0x40432a +43 
* * 9585 2612 1847 24 6 9 24 6 9 1106 17 96
+5 * 48
jump=48 +28 * 
* * 
+28 * 48
+4 * 48 48
+1 * 48 48
+1 * 48 48

fn=(88)
0x4042e2 90 48 0 48 1 0 0 1
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48 1 0 0 1
cfi=(4)
cfn=(90)
calls=48 0x4047b2 +24 
* * 864 288 336 3 0 0 3
+5 * 48 48
+4 * 48 0 48
+7 * 48 48
+4 * 48 0 48
+8 * 48 48
+4 * 48 0 48
+8 +1 48 48
+1 * 48 48

fn=(156)
0x4031ec 159 48 0 48 1 0 0 1
+1 * 48
+3 * 48 0 48
+1 * 48
+4 * 48 0 48
+4 +2 48 48
+4 * 48 48 0 1 0 0 1
+4 * 48
+3 * 48 48
+4 * 48 48
+3 * 48
+3 * 48
+3 * 48
+4 * 48
+3 * 48 48
+4 * 48 48
+3 -1 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(158)
calls=48 0x403ce6 +11 
* * 5568 1440 960 11 4 0 11 4 0 912 0 96
+5 +1 48 48
+4 * 48
+3 * 48 0 48
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=48 0x4031b8 -82 
* * 1104 384 384 1 0 0 1
+5 * 48
jump=48 +28 * 
* * 
+28 * 48
+4 * 48 48
+1 * 48 48
+1 * 48 48

fn=(172)
0x4031b8 79 48 0 48 1 0 0 1
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 48
+4 * 48
+3 * 48 0 48
cfi=(4)
cfn=(174)
calls=48 0x403ccc +42 
* * 672 240 240
+5 * 48 48
+1 * 48 48

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 4 0 4 1 0 0 1
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=4 0x40404e 726 
* * 40 20 16 1 0 0 1
+5 * 4 4
+4 * 4 4
+1 * 4 4

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+4 * 4
+3 * 4 0 4
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=4 0x4045cc 650 
* * 128 44 44 1 0 0 1
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(2)
calls=4 0x402d74 645 
* * 52 24 8
+5 * 4
+3 * 4 0 0 1 0 0 1
+3 * 4 4
+4 * 4
+3 * 4
+3 * 4
+2 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +14 +3 
* * 
+14 +3 4 4
+4 * 4
+3 * 4 0 4
cfn=(2)
calls=4 0x402d74 645 
* * 52 24 8
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(2)
calls=4 0x402d74 645 
* * 52 24 8
+5 * 4 0 4
+4 * 4
+4 * 4 0 0 1 0 0 1
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=4 0x4045ee 216 
* * 52 28 12 0 0 0 0 0 0 4
+5 * 4 4
+3 * 4
+3 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4
cfn=(2)
calls=4 0x402d74 645 
* * 52 24 8
+5 * 4 4
+4 * 4 0 0 0 0 0 0 0 0 4
+2 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(210)
calls=4 0x4045cc 650 
* * 128 44 44
+5 * 4 4
+4 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +16 * 
* * 
+16 * 4 4 0 1 0 0 1
+4 +1 4
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(246)
0x4039c4 556 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(248)
calls=4 0x4042c6 726 
* * 40 20 16
+5 * 4 4
+4 * 4 4
+1 * 4 4

fn=(10)
0x402f54 645 112 0 112 1 0 0 1
+1 * 112
+3 * 112 0 112
+4 +1 112 112
+4 * 112 112 0 0 2 0 0 2
+4 * 112
+3 * 112 112
+4 * 112 112
+3 * 112
+3 * 112
+3 * 112
+4 * 112 112
+1 * 112 112

fn=(106)
0x40325e 113 108 0 108 1 0 0 1
+1 * 108
+3 * 108 0 108
+4 +1 108 108
+4 * 108 108
+1 * 108 108

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(204)
calls=4 0x40404e 726 
* * 40 20 16
+5 * 4 4
+4 * 4 4
+1 * 4 4

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+4 * 4
+3 * 4 0 4
cfn=(254)
calls=4 0x40470e 650 
* * 128 44 44
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(10)
calls=4 0x402f54 645 
* * 52 24 8
+5 * 4
+3 * 4
+3 * 4 4
+4 * 4 0 0 1 0 0 1
+3 * 4
+3 * 4
+2 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +14 +3 
* * 
+14 +3 4 4
+4 * 4
+3 * 4 0 4
cfn=(10)
calls=4 0x402f54 645 
* * 52 24 8
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(10)
calls=4 0x402f54 645 
* * 52 24 8
+5 * 4 0 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4 0 0 1 0 0 1
+3 * 4 0 4
cfi=(12)
cfn=(214)
calls=4 0x4045ee 216 
* * 52 28 12 0 0 0 0 0 0 4
+5 * 4 4
+3 * 4
+3 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4
cfn=(10)
calls=4 0x402f54 645 
* * 52 24 8
+5 * 4 4
+4 * 4 0 0 0 0 0 0 0 0 4
+2 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(254)
calls=4 0x40470e 650 
* * 128 44 44
+5 * 4 4
+4 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +16 * 
* * 
+16 * 4 4 0 1 0 0 1
+4 +1 4
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(6)
0x403b08 117 56 0 56 1 0 0 1
+1 * 56
+3 * 56 0 56 0 0 1 0 0 1
+4 +1 56 56
+4 * 56 56
+1 * 56 56

fn=(82)
0x4039fc 117 56 0 56 1 0 0 1
+1 * 56
+3 * 56 0 56 1 0 0 1
+4 +1 56 56
+4 * 56 56
+1 * 56 56

fn=(200)
0x402eda 901 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 * 24 0 24
+4 +2 24 24
+4 * 24 24
+4 * 24 24
+4 * 24 24
+4 * 24
+3 * 24 0 0 0 0 0 0 0 0 24 4
jcnd=4/24 +51 +10 
* * 
+2 +3 20 20
+4 * 20 20
+4 * 20 20
+4 -1 20 20
+4 * 20
+3 * 20
+3 * 20 0 20
cfi=(3)
cfn=(222)
calls=20 0x403373 215 
* * 760 260 280 0 2 0 0 2 0 20
+5 +2 20 20
+4 * 20 20
+4 * 20
+4 * 20 20
+4 * 20 0 20
+4 * 20
jump=20 +36 +8 
* * 
+2 +6 4 4 0 1 0 0 1
+4 * 4
+3 * 4 0 4
cfn=(202)
calls=4 0x403688 556 
* * 92 36 28 2 0 0 2
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=4 0x4033a0 318 
* * 5139 1657 1415 24 2 6 24 2 6 235 5 23
+5 +2 24 24
+1 * 24 24

fn=(4)
0x4030b2 310 48 0 48 1 0 0 1
+1 * 48
+3 * 48 0 48
+2 * 48 0 48
+2 * 48 0 48
+1 * 48
+4 * 48 0 48 1 0 0 1
+4 * 48 0 48
+4 +2 48 48
+4 * 48
+3 * 48 0 48
cfn=(6)
calls=48 0x403b08 117 
* * 288 144 96 1 0 1 1 0 1
+5 * 48
+3 * 48 0 48
cfi=(3)
cfn=(8)
calls=48 0x403afa -88 
* * 288 144 96 1 0 0 1
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(10)
calls=48 0x402f54 645 
* * 624 288 96 1 1 0 1 1
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48
+3 * 48
+3 * 48 0 48
cfn=(12)
calls=48 0x403b16 134 
* * 12261 3562 2816 25 13 11 25 13 11 1098 19 96
+5 +4 48 48 0 1 0 0 1
+4 * 48
+3 * 48 0 48
cfn=(40)
calls=48 0x40333c 113 
* * 288 144 96 2 0 0 2
+5 * 48
+3 * 48 48
+4 * 48 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(42)
calls=48 0x403ba4 565 
* * 1200 480 384 3 0 0 3
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(46)
calls=48 0x403b74 547 
* * 1200 480 384
+5 * 48
+3 * 48
+3 * 48
+3 * 48
+3 * 48 0 48 1 0 0 1
cfi=(11)
cfn=(48)
calls=48 0x403bd5 -60 
* * 15218 4604 4368 26 3 2 26 3 2 472 30 92 11
+5 -3 48 48
+4 * 48 0 48
+4 * 48
jump=48 +28 +4 
* * 
+28 +4 48
+4 * 48 48
+1 * 48 48
+2 * 48 48
+2 * 48 48
+1 * 48 48

fn=(108)
0x403a98 565 48 0 48 1 0 0 1
+1 * 48
+3 * 48
+4 * 48 0 48
+4 +1 48 48
+4 * 48 48
+4 * 48 0 48
+4 * 48
+4 * 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfi=(10)
cfn=(110)
calls=48 0x404380 726 
* * 480 240 192 1 0 0 1
+5 * 48 48
+4 * 48 48
+1 * 48 48

fn=(178)
0x402e74 414 48 0 48
+1 * 48
+3 * 48 0 48
+1 * 48
+4 * 48 0 48 1 0 0 1
+4 +2 48 48
+4 * 48
+3 * 48 0 48
cfn=(40)
calls=48 0x40333c 113 
* * 288 144 96
+5 * 48
+3 * 48 48
+4 * 48 48
+4 * 48 48
+4 * 48 48
+3 -1 48
+3 * 48
+3 * 48 0 48
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=48 0x40334a 148 
* * 1488 480 576 2 0 0 2
+5 +1 48 48
+4 * 48
+3 * 48 0 48
cfn=(186)
calls=48 0x4032ca 159 
* * 8016 2352 1584 3 0 0 3 0 0 912 0 96
+5 * 48
jump=48 +28 * 
* * 
+28 * 48 0 0 1 0 0 1
+4 * 48 48
+1 * 48 48
+1 * 48 48

fn=(210)
0x4045cc 650 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(82)
calls=8 0x4039fc 117 
* * 48 24 16
+5 * 8
+3 * 8 0 8
cfi=(3)
cfn=(212)
calls=8 0x4048c3 221 
* * 120 40 40
+5 * 8 8
+1 * 8 8

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 96 0 96 1 0 0 1
+1 * 96
+3 * 96
+4 * 96 0 96 1 0 0 1
+4 +1 96 96
+4 * 96
+3 * 96 0 96
cfi=(13)
cfn=(58)
calls=96 0x404d8f -77 
* * 576 288 192 1 0 0 1
+5 * 96 96
+1 * 96 96

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 56 0 56
+1 * 56
+3 * 56
+4 * 56 0 56 1 0 0 1
+4 * 56 0 56
+4 * 56 0 56
+4 +2 56 56
+4 * 56 56
+4 * 56
+3 * 56
+3 * 56
+4 * 56 0 56
+4 +1 56 56
+5 * 56 0 0 0 0 0 0 0 0 56
jcnd=4/56 +33 +2 
* * 
+2 +1 52 52
+4 * 52
+8 * 52 52
+4 * 52 52
+4 * 52
+3 * 52 0 0 1 0 0 1
+3 * 52 0 52 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=52 0x3877c83840 0 
* * 4406 812 713 11 2 0 11 2 0 454 31 47 11
* * 52 52 0 1 1 0 1 1 0 0 0 52
+5 +1 56 56
+4 * 56
+8 * 56 56
+4 * 56
+3 +1 56 56
+1 * 56 56

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 56 0 56
+1 * 56
+3 * 56
+4 * 56 0 56 1 0 0 1
+4 * 56 0 56
+4 * 56 0 56 0 0 1 0 0 1
+4 +2 56 56
+4 * 56 56
+4 * 56
+3 * 56
+3 * 56
+4 * 56 0 56
+4 +1 56 56
+5 * 56 0 0 0 0 0 0 0 0 56
jcnd=4/56 +33 +2 
* * 
+2 +1 52 52
+4 * 52
+8 * 52 52
+4 * 52 52
+4 * 52
+3 * 52
+3 * 52 0 52
cob=(2)
cfi=(9)
cfn=(78)
calls=52 0x3877c83840 0 
* * 4406 812 713 0 1 2 0 1 2 454 29 47
* * 52 52 0 0 0 0 0 0 0 0 0 52
+5 +1 56 56
+4 * 56
+8 * 56 56
+4 * 56
+3 +1 56 56
+1 * 56 56

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48 1 0 0 1
+4 * 48 0 48
+4 * 48 0 48
+4 +8 48 0 48
+4 +3 48 48
+4 * 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(74)
calls=48 0x404f37 -22 
* * 5474 1292 960 14 3 1 14 3 1 472 30 92 11
+5 +1 48 48
+1 * 48 48

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 48 0 48
+1 * 48
+3 * 48 0 48
+2 * 48 0 48
+1 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +4 48 48
+4 * 48
+3 * 48 0 48
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=48 0x404878 277 
* * 720 288 240 1 0 0 1
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=48 0x404d44 277 
* * 1200 432 384 2 0 0 2
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(132)
calls=48 0x404d44 277 
* * 1200 432 384
+5 * 48
+3 * 48
+3 * 48
+3 * 48 0 48
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=48 0x404d5e -49 
* * 6194 1532 1248 1 1 1 1 1 1 472 27 92
+5 +1 48
+4 * 48 48
+1 * 48 48
+2 * 48 48
+1 * 48 48

fn=(236)
0x404caa 450 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +10 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=8 0x40455a 288 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(238)
calls=8 0x40455a 288 
* * 120 48 40
+5 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=8 0x404de8 -36 
* * 1172 360 333 1 0 3 1 0 3 38 2 7
+5 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(54)
0x404a36 450 48 0 48
+1 * 48
+3 * 48 0 48
+1 * 48
+4 * 48 0 48 1 0 0 1
+4 * 48 0 48
+4 * 48 0 48
+4 +10 48 48
+4 * 48
+3 * 48 0 48
cfn=(56)
calls=48 0x404c38 288 
* * 720 288 240 3 0 0 3
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(56)
calls=48 0x404c38 288 
* * 720 288 240
+5 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=48 0x404c52 -36 
* * 10658 3020 2736 20 3 2 20 3 2 472 30 92 11
+5 +1 48
+4 * 48 48
+1 * 48 48
+1 * 48 48

fn=(60)
0x404c52 424 48 0 48
+1 * 48
+3 * 48 0 48
+2 * 48 0 48
+1 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +4 48 48
+4 * 48
+3 * 48 0 48
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=48 0x40492d 277 
* * 720 288 240 2 0 0 2
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=48 0x404d9d 277 
* * 1200 432 384 2 0 1 2 0 1
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(66)
calls=48 0x404d9d 277 
* * 1200 432 384
+5 * 48
+3 * 48
+3 * 48
+3 * 48 0 48
cfn=(72)
calls=48 0x404db7 -49 
* * 6194 1532 1248 15 3 1 15 3 1 472 30 92 11
+5 +1 48
+4 * 48 48
+1 * 48 48
+2 * 48 48
+1 * 48 48

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +8 8 0 8
+4 +3 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(74)
calls=8 0x404f37 -22 
* * 468 120 85 0 0 0 0 0 0 38 1 7
+5 +1 8 8
+1 * 8 8

fn=(62)
0x40492d 277 72 0 72 1 0 0 1
+1 * 72
+3 * 72
+4 * 72 0 72
+4 +1 72 72
+4 * 72
+3 * 72 0 72 1 0 0 1
cfi=(13)
cfn=(64)
calls=72 -33 -66 
* * 432 216 144
+5 * 72 72
+1 * 72 72

fn=(66)
0x404d9d 277 96 0 96
+1 * 96
+3 * 96
+4 * 96 0 96
+4 +1 96 96
+4 * 96
+3 * 96 0 96
cfi=(13)
cfn=(68)
calls=96 0x404f1a -58 
* * 1536 576 480 2 0 1 2 0 1
+5 * 96 96
+1 * 96 96

fn=(240)
0x404de8 424 8 0 8
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(128)
calls=8 0x404878 277 
* * 120 48 40 0 0 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(128)
calls=8 0x404878 277 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(128)
calls=8 0x404878 277 
* * 120 48 40
+5 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=8 0x404f9c -49 
* * 588 160 133 0 0 2 0 0 2 38 2 7
+5 +1 8
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(214)
0x4045ee 216 8 0 8
+1 * 8
+3 * 8 0 8
+4 * 8 0 8
+4 +5 8 8
+4 * 8 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +8 +2 
* * 
+8 +2 8 8
+4 +1 8 8
+1 * 8 8

fn=(238)
0x40455a 288 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(13)
cfn=(130)
calls=16 0x40486a -77 
* * 96 48 32
+5 * 16 16
+1 * 16 16

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8
+3 * 8 0 8
cfn=(62)
calls=8 0x40492d 277 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(62)
calls=8 0x40492d 277 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(62)
calls=8 0x40492d 277 
* * 120 48 40
+5 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfn=(282)
calls=8 0x404fcd -49 
* * 588 160 133 0 0 0 0 0 0 38 1 7
+5 +1 8
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(120)
0x4049e2 450 48 0 48
+1 * 48
+3 * 48 0 48
+1 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +10 48 48
+4 * 48
+3 * 48 0 48
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=48 0x404bc6 288 
* * 720 288 240 3 0 0 3
+5 * 48
+3 * 48 48
+4 * 48
+3 * 48 0 48
cfn=(122)
calls=48 0x404bc6 288 
* * 720 288 240
+5 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(126)
calls=48 0x404be0 -36 
* * 10658 3020 2736 4 1 1 4 1 1 472 27 92
+5 +1 48
+4 * 48 48
+1 * 48 48
+1 * 48 48

fn=(128)
0x404878 277 72 0 72
+1 * 72
+3 * 72
+4 * 72 0 72 1 0 0 1
+4 +1 72 72
+4 * 72
+3 * 72 0 72
cfi=(13)
cfn=(130)
calls=72 -33 -66 
* * 432 216 144 0 0 1 0 0 1
+5 * 72 72
+1 * 72 72

fn=(132)
0x404d44 277 96 0 96
+1 * 96
+3 * 96
+4 * 96 0 96
+4 +1 96 96
+4 * 96
+3 * 96 0 96
cfi=(13)
cfn=(134)
calls=96 0x404e98 -58 
* * 1536 576 480 2 0 0 2
+5 * 96 96
+1 * 96 96

fn=(138)
0x404d5e 379 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48
+4 * 48 0 48
+4 * 48 0 48
+4 +8 48 0 48
+4 +3 48 48
+4 * 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48 0 48
cfn=(140)
calls=48 0x404eb5 -22 
* * 5474 1292 960 1 1 1 1 1 1 472 27 92
+5 +1 48 48
+1 * 48 48

fn=(242)
0x404f9c 379 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +8 8 0 8
+4 +3 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(140)
calls=8 0x404eb5 -22 
* * 468 120 85 0 0 2 0 0 2 38 2 7
+5 +1 8 8
+1 * 8 8

fn=(276)
0x404cf0 450 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +10 8 8
+4 * 8
+3 * 8 0 8
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=8 0x40469c 288 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(278)
calls=8 0x40469c 288 
* * 120 48 40
+5 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(280)
calls=8 0x404e40 -36 
* * 1172 360 333 1 0 0 1 0 0 38 1 7
+5 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(278)
0x40469c 288 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(13)
cfn=(64)
calls=16 0x40491f -77 
* * 96 48 32
+5 * 16 16
+1 * 16 16

fn=(122)
0x404bc6 288 96 0 96 1 0 0 1
+1 * 96
+3 * 96
+4 * 96 0 96
+4 +1 96 96
+4 * 96
+3 * 96 0 96
cfi=(13)
cfn=(124)
calls=96 0x404d36 -77 
* * 576 288 192 2 0 0 2
+5 * 96 96
+1 * 96 96

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 +1 16 16
+4 * 16 16
+1 * 16 16

fn=(204)
0x40404e 726 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+4 * 8 0 8
+4 * 8 8
+4 * 8 8
+3 * 8 8
+4 * 8 0 8
+3 * 8 8
+1 * 8 8

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 4 0 4
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+4 * 4
+3 * 4 0 4
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=4 0x403e26 790 
* * 24 12 8 1 0 0 1
+5 * 4 4
+3 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(220)
calls=4 0x403e26 790 
* * 24 12 8
+5 * 4 4
+3 * 4
+3 * 4
+3 * 4
+4 * 4
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(70)
0x40500c 790 96 0 96 1 0 0 1
+1 * 96
+3 * 96 0 96
+4 +1 96 96
+4 * 96 96
+1 * 96 96

fn=(110)
0x404380 726 96 0 96 1 0 0 1
+1 * 96
+3 * 96 0 96
+4 * 96 0 96
+4 * 96 96
+4 * 96 96
+3 * 96 96
+4 * 96 0 96
+3 * 96 96
+1 * 96 96

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 4 0 4
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+4 * 4
+3 * 4 0 4
cfn=(262)
calls=4 0x40409e 790 
* * 24 12 8 1 0 0 1
+5 * 4 4
+3 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(262)
calls=4 0x40409e 790 
* * 24 12 8
+5 * 4 4
+3 * 4
+3 * 4
+3 * 4
+4 * 4
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(136)
0x404ffe 790 96 0 96 1 0 0 1
+1 * 96
+3 * 96 0 96
+4 +1 96 96
+4 * 96 96
+1 * 96 96

fn=(44)
0x404468 726 96 0 96
+1 * 96
+3 * 96 0 96
+4 * 96 0 96
+4 * 96 96
+4 * 96 96
+3 * 96 96
+4 * 96 0 96 1 0 0 1
+3 * 96 96
+1 * 96 96

fn=(248)
0x4042c6 726 8 0 8
+1 * 8
+3 * 8 0 8
+4 * 8 0 8
+4 * 8 8
+4 * 8 8
+3 * 8 8
+4 * 8 0 8
+3 * 8 8
+1 * 8 8

fn=(220)
0x403e26 790 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 +1 16 16
+4 * 16 16
+1 * 16 16

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 52 0 52 1 0 0 1
+1 * 52
+3 * 52 0 52
+4 * 52 0 52 1 0 0 1
+4 * 52 52
+1 * 52 52

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 52 0 52 1 0 0 1
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 +4 52 52
+4 * 52 52
+4 * 52
+3 * 52
+3 * 52 0 52
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=52 0x40454c -14 
* * 312 104 156 1 0 0 1
+5 +2 52 52
+1 * 52 52

fn=(150)
0x40326c 148 52 0 52
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 * 52 0 52
+4 +3 52 52 0 1 0 0 1
+4 * 52 52
+4 * 52
+3 * 52
+3 * 52 0 52
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=52 0x403d1a -29 
* * 936 312 364 3 0 0 3
+5 +1 52 52
+1 * 52 52

fn=(180)
0x40334a 148 52 0 52
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 * 52 0 52
+4 +3 52 52
+4 * 52 52
+4 * 52
+3 * 52
+3 * 52 0 52
cfn=(182)
calls=52 0x403dcc -29 
* * 936 312 364 2 0 0 2
+5 +1 52 52
+1 * 52 52

fn=(152)
0x403d1a 122 52 0 52 1 0 0 1
+1 * 52
+3 * 52
+4 * 52 0 52
+4 * 52 0 52
+4 +4 52 52
+4 * 52 52
+4 * 52
+3 * 52
+3 * 52 0 52
cfn=(154)
calls=52 0x4044f8 -14 
* * 312 104 156 2 0 0 2
+5 +2 52 52
+1 * 52 52

fn=(184)
0x40454c 112 52 0 52 1 0 0 1
+1 * 52
+3 * 52 0 52
+4 * 52 0 52
+4 * 52 52
+1 * 52 52

fl=(15)
fn=(250)
0x4036de 318 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+2 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +4 4 4
+4 * 4 4
+4 * 4 4 0 1 0 0 1
+4 * 4 4
+4 * 4
+3 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x403799 +21 
* * 
0x403799 +21 4 4 0 1 0 0 1
+4 * 4
+5 * 4
+5 * 4
+3 * 4 0 4
cfi=(2)
cfn=(252)
calls=4 0x404104 1336 
* * 724 268 188 4 0 0 4 0 0 16
+5 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(258)
calls=4 0x4041ce 538 
* * 88 36 28
+5 * 4 0 4 1 0 0 1
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(260)
calls=4 0x4041f3 896 
* * 136 52 40 1 0 0 1
+5 * 4 0 4
+4 +1 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(2)
cfn=(22)
calls=4 0x404236 167 
* * 930 186 179 0 2 5 0 2 5 119 7 8
+5 * 4 0 4
+4 +1 4 4
+4 * 4 0 4
+4 +12 4 4
+4 * 4 0 0 1 0 0 1
+8 * 4 4
+4 * 4
+4 * 4 4
+4 -5 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(3)
cfn=(264)
calls=4 0x4036b1 215 
* * 152 52 56 0 1 1 0 1 1 4
+5 +7 4 0 4
+8 +5 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(40)
calls=4 0x40333c 113 
* * 24 12 8
+5 * 4
+3 * 4
+4 * 4
+3 * 4 0 4 1 0 0 1
cfi=(10)
cfn=(262)
calls=4 0x40409e 790 
* * 24 12 8
+5 * 4 4
+3 * 4 4
+4 * 4 4
+3 -3 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(11)
cfn=(268)
calls=4 0x40426e -88 
* * 1180 368 349 3 0 0 3 0 0 34 1 7
+5 * 4 0 4
+4 +5 4 0 4
+5 +5 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(40)
calls=4 0x40333c 113 
* * 24 12 8
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4
+4 * 4 0 0 1 0 0 1
+3 * 4 0 4
cfi=(10)
cfn=(262)
calls=4 0x40409e 790 
* * 24 12 8
+5 * 4 4
+3 -3 4 4
+4 * 4
+3 * 4
+3 * 4
+3 * 4 0 4
cfi=(11)
cfn=(268)
calls=4 0x40426e -95 
* * 872 304 304 0 0 0 0 0 0 4
+5 * 4 0 4
+4 +16 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(40)
calls=4 0x40333c 113 
* * 24 12 8
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4 4
+4 * 4 4
+3 -1 4 0 0 1 0 0 1
+3 * 4
+3 * 4 0 4
cfi=(14)
cfn=(180)
calls=4 0x40334a 148 
* * 124 40 48
+5 +4 4 4
+4 * 4 4
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4
+3 * 4
+3 * 4
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4 4
+4 -2 4
+3 * 4
+3 * 4 0 4
cfi=(2)
cfn=(188)
calls=4 0x403d98 171 
* * 464 120 80 0 0 0 0 0 0 76 4 8
+5 +3 4 4 0 1 0 0 1
+4 * 4 4
+4 * 4 0 4
+3 +1 4 4
+4 * 4 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+8 * 4 4
+4 * 4
+3 * 4 4
+4 * 4 0 4
+4 +2 4
jump=4 0x4039ba * 
* * 
0x4039ba * 4 0 0 1 0 0 1
+4 * 4 4
+1 * 4 4
+2 * 4 4
+1 * 4 4

fn=(206)
0x4033a0 318 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+2 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +4 4 4
+4 * 4 4
+4 * 4 4 0 1 0 0 1
+4 * 4 4
+4 * 4
+3 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x40345e +21 
* * 
0x40345e +21 4 4 0 1 0 0 1
+4 * 4
+5 * 4
+5 * 4
+3 * 4 0 4
cfi=(2)
cfn=(208)
calls=4 0x403e8c 1336 
* * 724 268 188 5 0 0 5 0 0 16
+5 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4 1 0 0 1
cfi=(2)
cfn=(216)
calls=4 0x403f56 538 
* * 88 36 28
+5 * 4 0 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(218)
calls=4 0x403f7b 896 
* * 136 52 40 1 0 0 1
+5 * 4 0 4
+4 +1 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(2)
cfn=(96)
calls=4 0x403fbe 167 
* * 783 173 154 2 1 2 2 1 2 97 3 8
+5 * 4 0 4
+4 +1 4 4
+4 * 4 0 4
+4 +12 4 4 0 1 0 0 1
+4 * 4
+8 * 4 4
+4 * 4
+4 * 4 4
+4 -5 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(3)
cfn=(222)
calls=4 0x403373 215 
* * 152 52 56 0 1 1 0 1 1 4
+5 +7 4 0 4
+8 +5 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(106)
calls=4 0x40325e 113 
* * 24 12 8
+5 * 4
+3 * 4
+4 * 4 0 0 1 0 0 1
+3 * 4 0 4
cfi=(10)
cfn=(220)
calls=4 0x403e26 790 
* * 24 12 8
+5 * 4 4
+3 * 4 4
+4 * 4 4
+3 -3 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(11)
cfn=(228)
calls=4 0x403ff6 -88 
* * 1180 368 349 6 0 3 6 0 3 34 2 7
+5 * 4 0 4
+4 +5 4 0 4
+5 +5 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(106)
calls=4 0x40325e 113 
* * 24 12 8
+5 * 4
+3 * 4 4
+4 * 4 4 0 1 0 0 1
+4 * 4
+4 * 4
+3 * 4 0 4
cfi=(10)
cfn=(220)
calls=4 0x403e26 790 
* * 24 12 8
+5 * 4 4
+3 -3 4 4
+4 * 4
+3 * 4
+3 * 4
+3 * 4 0 4
cfi=(11)
cfn=(228)
calls=4 0x403ff6 -95 
* * 872 304 304 0 0 0 0 0 0 4
+5 * 4 0 4
+4 +16 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(106)
calls=4 0x40325e 113 
* * 24 12 8
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4 4 0 1 0 0 1
+4 * 4 4
+3 -1 4
+3 * 4
+3 * 4 0 4
cfi=(14)
cfn=(150)
calls=4 0x40326c 148 
* * 124 40 48
+5 +4 4 4
+4 * 4 4
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4
+3 * 4
+3 * 4
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4 4
+4 -2 4
+3 * 4
+3 * 4 0 4 1 0 0 1
cfi=(2)
cfn=(158)
calls=4 0x403ce6 171 
* * 464 120 80 0 0 0 0 0 0 76 0 8
+5 +3 4 4
+4 * 4 4
+4 * 4 0 4
+3 +1 4 4
+4 * 4 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+8 * 4 4
+4 * 4
+3 * 4 4
+4 * 4 0 4
+4 +2 4
jump=4 0x40367f * 
* * 
0x40367f * 4 0 0 1 0 0 1
+4 * 4 4
+1 * 4 4
+2 * 4 4
+1 * 4 4

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 104 0 104 1 0 0 1
+5 0 104 0 104
+5 0 104
+3 0 104 0 104
+5 0 104
+4 0 104 104 0 0 1 0 0 1
+7 0 104 104 0 0 1 0 0 1
+3 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104 0 0 1 0 0 1
+7 0 104 104 0 1 1 0 1 1
+4 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104 104 0 0 1 0 0 1
+3 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 +97 0 
* 0 
+18 0 104
+3 0 104
+3 0 104 0 104
cfn=(38) _int_malloc
calls=104 0x3877c79a00 0 
* 0 7975 1509 1132 25 14 22 25 14 22 1068 46
+5 0 104
+3 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104 104
+7 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 +13 0 
* 0 
+13 0 104 0 104
+2 0 104 0 0 0 0 0 0 0 0 104
+6 0 104
+3 0 104 104
+4 0 104 104
+5 0 104 104
+5 0 104
+4 0 104 104
+1 0 104 0 0 1 0 0 1
+5 0 104 104 0 0 1 0 0 1
+7 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 +14 0 
* 0 
+14 0 104 0 104 1 0 0 1
+3 0 104 0 0 0 0 0 0 0 0 104
+6 0 104
jump=104 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 104 0 104 1 0 0 1
+2 0 104
+3 0 104
+3 0 104 0 104
+2 0 104
+3 0 104 0 104
+1 0 104
+3 0 104 0 104
+1 0 104
+3 0 104
+4 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+6 0 104
+4 0 104
+3 0 104 0 0 0 0 0 0 0 0 104 7
jcnd=10/104 0x3877c838d1 0 
* 0 
+2 0 94
+3 0 94
+3 0 94
+3 0 94
+3 0 94
+3 0 94 0 0 0 0 0 0 0 0 94
jcnd=94/94 +41 0 
* 0 
+41 0 94 0 0 1 0 0 1
+3 0 94 0 0 0 0 0 0 0 0 94
jcnd=94/94 0x3877c839c0 0 
* 0 
+24 0 94
+3 0 94
+4 0 94
+3 0 94
+3 0 94
+3 0 94
+3 0 94
+3 0 94 0 0 0 0 0 0 0 0 94 42
jcnd=50/94 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 54
+10 0 54 54 0 0 2 0 0 2
+3 0 54
+4 0 54 0 54
+3 0 54
+4 0 54
+4 0 54 0 0 0 0 0 0 0 0 54
jcnd=54/54 -18 0 
* 0 
-18 0 218 218
+3 0 218
+4 0 218 0 218
+3 0 218
+4 0 218
+4 0 218 0 0 0 0 0 0 0 0 218 7
jcnd=164/218 -18 0 
* 0 
+2 0 104
+4 0 104
+3 0 104 104
+1 0 104 104
+1 0 104 104
+2 0 104 104 0 1 0 0 1
+2 0 104 104
0x3877c839c0 0 94 0 0 1 0 0 1
+3 0 94
+3 0 94
+3 0 94
+4 0 94 0 94 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=94 0x3877c89b20 0 
* 0 2750 832 644 6 1 1 6 1 1 136 4 94 11
+5 0 94
jump=94 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 104 104 0 1 1 0 1 1
+7 0 104 104 0 0 1 0 0 1
+3 0 104
+3 0 104 0 0 1 0 0 1 0 0 104
+6 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104
+4 0 104
+4 0 104
+2 0 104 0 0 0 0 0 0 0 0 104
+2 0 104
+2 0 104
+7 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 +14 0 
* 0 
+14 0 104
+2 0 104
cfn=(170) _int_free
calls=104 0x3877c78650 0 
* 0 7176 1664 1040 5 0 0 5 0 0 1352

fn=(170)
0x3877c78650 0 104 0 104 1 0 0 1
+2 0 104 0 104
+2 0 104 0 104
+2 0 104
+3 0 104 0 104
+2 0 104 0 104
+1 0 104 0 104
+1 0 104
+3 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104
+3 0 104
+4 0 104
+3 0 104
+3 0 104
+3 0 104 0 0 1 0 0 1 0 0 104
+6 0 104
+4 0 104 0 0 0 0 0 0 0 0 104
+6 0 104
+4 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104
+7 0 104 0 0 0 0 0 0 0 0 104
+6 0 104
+4 0 104 104
+4 0 104
+4 0 104 0 0 0 0 0 0 0 0 104
+6 0 104
+4 0 104 104
+7 0 104 0 0 1 0 0 1 0 0 104
+6 0 104 104
+6 0 104
+2 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104
+9 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 +3 0 
* 0 
+3 0 104 0 104
+5 0 104
+3 0 104
+3 0 104
+2 0 104 104
+5 0 104
+5 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104 0 1 0 0 1
+4 0 104
+6 0 104
+2 0 104
+4 0 104
jump=104 +20 0 
* 0 
+20 0 104
+3 0 104
+4 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 +14 0 
* 0 
+14 0 104 0 104
+4 0 104 0 0 1 0 0 1
+3 0 104 104
+9 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 +3 0 
* 0 
+3 0 104 0 104
+4 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
jcnd=104/104 +11 0 
* 0 
+11 0 104
+4 0 104 104
+1 0 104 104
+1 0 104 104
+2 0 104 104
+2 0 104 104
+2 0 104 104
+2 0 104 104

fn=(284)
0x3877c89b20 0 94 0 0 1 0 0 1
+7 0 94
+3 0 94
+3 0 94 94 0 0 1 0 0 1
+4 0 94
+4 0 94 0 0 0 0 0 0 0 0 0 0 94 11
jump=8 0x3877c89be8 0 
* 0 
jump=10 0x3877c89bd0 0 
* 0 
jump=8 0x3877c89bb8 0 
* 0 
jump=8 +11 0 
* 0 
jump=8 0x3877c89c48 0 
* 0 
jump=18 0x3877c89c30 0 
* 0 
jump=16 0x3877c89c18 0 
* 0 
jump=18 0x3877c89c00 0 
* 0 
+11 0 8 8
+3 0 8
+4 0 8
+4 0 8 8
+4 0 8
+4 0 8 0 8
+4 0 8
+9 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
+4 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c89c60 0 
* 0 
-40 0 58 58
+4 0 58 0 58
+4 0 58 58
+4 0 58 0 58
+4 0 58 58
+4 0 58 0 58
+4 0 58 58
+4 0 58 0 58
+4 0 58
+4 0 58
+4 0 58 0 0 0 0 0 0 0 0 58
jcnd=58/58 0x3877c89c60 0 
* 0 
-32 0 18 18
+4 0 18 0 18
+4 0 18 18
+4 0 18 0 18
+4 0 18 18
+4 0 18 0 18
+4 0 18
+4 0 18
+4 0 18 0 0 0 0 0 0 0 0 18
jcnd=10/18 0x3877c89c60 0 
* 0 
-24 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
+4 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=8/16 0x3877c89c60 0 
* 0 
-16 0 18 18 0 1 0 0 1
+4 0 18 0 18
+4 0 18 0 0 1 0 0 1
+4 0 18
+4 0 18 0 0 0 0 0 0 0 0 18 4
jcnd=10/18 0x3877c89c60 0 
* 0 
+6 0 24
+4 0 24 24
+3 0 24 0 24
+3 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24 0 0 1 0 0 1
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
-30 0 8 8
+3 0 8 0 8
+3 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
jump=8 -80 0 
* 0 
-24 0 10 10
+4 0 10 0 10
+4 0 10 10
+4 0 10 0 10
+4 0 10 10
+4 0 10 0 10
+4 0 10
jump=10 -80 0 
* 0 
-16 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
jump=8 -80 0 
* 0 
+8 0 8 8
+3 0 8
+4 0 8 0 0 1 0 0 1
+4 0 8
+4 0 8
jump=8 -39 0 
* 0 
+9 0 10
+3 0 10 0 0 0 0 0 0 0 0 10
+6 0 10 10
+3 0 10
+4 0 10
jump=10 -72 0 
* 0 
+8 0 8
+4 0 8 8
+3 0 8 0 0 0 0 0 0 0 0 8
+2 0 8
+4 0 8
jump=8 -99 0 
* 0 
+11 0 18 18 0 1 0 0 1
+3 0 18
+4 0 18
+4 0 18
+4 0 18
jump=18 0x3877c89b78 0 
* 0 
+9 0 16 16
+3 0 16
+4 0 16
+4 0 16
+4 0 16
jump=16 0x3877c89b70 0 
* 0 
+9 0 18 18
+3 0 18
+4 0 18
+4 0 18
+4 0 18
jump=18 0x3877c89b68 0 
* 0 
+9 0 8 8
+3 0 8
+4 0 8
+4 0 8
+4 0 8
jump=8 0x3877c89b60 0 
* 0 
+9 0 94 0 94 1 0 0 1
+3 0 94 94

fn=(104) alloc_perturb
0x3877c77180 0 16 16 0 1 0 0 1
+6 0 16
+2 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16

fn=(38)
0x3877c79a00 0 104 0 104 1 0 0 1
+2 0 104
+3 0 104 0 104
+2 0 104 0 104
+2 0 104 0 104 0 0 1 0 0 1
+2 0 104
+3 0 104 0 104
+1 0 104 0 104
+1 0 104
+4 0 104
+4 0 104 0 0 0 0 0 0 0 0 104
+6 0 104
+4 0 104
+6 0 104
+3 0 104
+4 0 104
+4 0 104
+4 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104 0 1 1 0 1 1
+7 0 104 0 0 0 0 0 0 0 0 104 3
jcnd=2/104 0x3877c79af8 0 
* 0 
+6 0 102
+3 0 102
+3 0 102
+3 0 102
+2 0 102 102 0 0 1 0 0 1
+5 0 102
+3 0 102 0 0 0 0 0 0 0 0 102 21
jcnd=15/102 0x3877c79af8 0 
* 0 
+6 0 87
+4 0 87 87 0 0 1 0 0 1
+4 0 87
+3 0 87
+4 0 87 87 0 0 1 0 0 1
+9 0 87 0 0 0 0 0 0 0 0 87
jcnd=87/87 +3 0 
* 0 
+3 0 87 0 87 1 0 0 1
+5 0 87
+3 0 87
+3 0 87 0 0 0 0 0 0 0 0 87
+2 0 87
jump=87 0x3877c7a2db 0 
* 0 
+46 0 87 87
+4 0 87 0 0 1 0 0 1
+3 0 87
+3 0 87
+2 0 87 0 0 0 0 0 0 0 0 87
+6 0 88 88
+6 0 88
+4 0 88
+2 0 88 0 0 0 0 0 0 0 0 88
+6 0 88
+3 0 88
+4 0 88 88
+1 0 88 88
+1 0 88 88
+2 0 88 88
+2 0 88 88
+2 0 88 88
+2 0 88 88
-14 0 16
+4 0 16 16
+1 0 16 16
+1 0 16 16
+2 0 16 16
+2 0 16 16
+2 0 16 16
+2 0 16 16
+7 0 17
+7 0 17 0 0 1 0 0 1 0 0 17
+2 0 17
+3 0 17
+5 0 17
+3 0 17
+4 0 17 0 17
+4 0 17
+2 0 17
+5 0 17 17 0 0 1 0 0 1
+4 0 17
+3 0 17 0 0 0 0 0 0 0 0 17
jcnd=17/17 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 17 0 0 1 0 0 1
+3 0 17
+3 0 17
+3 0 17
+4 0 17
+3 0 17
+4 0 17 0 17
+5 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17 0 17
+5 0 17
+3 0 17
+3 0 17
+3 0 17
+3 0 17
+4 0 17
+4 0 17 0 0 1 0 0 1
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+5 0 17 0 17
+5 0 17
+3 0 17
+3 0 17 0 17
+5 0 17
+5 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+6 0 17 0 17
+4 0 17 0 17
+5 0 17 0 0 1 0 0 1
+3 0 17
+3 0 17
+3 0 17
jump=17 +87 0 
* 0 
+8 0 4
+3 0 4
+4 0 4
+2 0 4
+2 0 4
+3 0 4
+3 0 4
+3 0 4
+2 0 4
+2 0 4
+5 0 4
+2 0 4 4
+4 0 4
+3 0 4
+4 0 4 0 4
+4 0 4 0 4 0 0 1 0 0 1
+8 0 4
+7 0 4 0 4
+4 0 4 0 4 0 0 1 0 0 1
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 21 21 0 1 0 0 1
+4 0 21
+3 0 21 0 0 0 0 0 0 0 0 21 1
jcnd=5/21 0x3877c79ef0 0 
* 0 
+6 0 16 16
+4 0 16 16
+4 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16 16 0 1 1 0 1 1
+7 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 0 0 0 0 0 0 0 16
+2 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c79e28 0 
* 0 
+6 0 5
+3 0 5 0 5
+4 0 5 0 5
+5 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=1/5 0x3877c7a090 0 
* 0 
+6 0 4
+7 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x3877c79c50 0 
* 0 
0x3877c79e28 0 16 16 0 1 0 0 1
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+6 0 16 16
+5 0 16 0 0 0 0 0 0 0 0 16 5
jcnd=5/16 0x3877c79ce1 0 
* 0 
+6 0 11 0 0 1 0 0 1
+3 0 11
+3 0 11
+3 0 11
+7 0 11 0 11
+4 0 11 0 11
+4 0 11
+3 0 11 0 11
+4 0 11 0 11 0 0 11 0 0 11
+4 0 11 0 11
+4 0 11 0 0 0 0 0 0 0 0 11 1
jcnd=10/11 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+7 0 1 0 1
+4 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1
+3 0 1 0 1
cfn=(104)
calls=1 0x3877c77180 0 
* 0 4 2 0 0 0 0 0 0 0 1
-56 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 3 0 0 3
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 11
+3 0 11
jump=11 0x3877c79ae3 0 
* 0 
+55 0 5 0 0 1 0 0 1
+7 0 5
+3 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5 0 1 0 0 1
+4 0 5
+3 0 5
+3 0 5
+2 0 5
+4 0 5
+3 0 5
+3 0 5
+2 0 5
+2 0 5
+2 0 5
+2 0 5 5
+8 0 5
+5 0 5
+5 0 5
+2 0 5 0 0 0 0 0 0 0 0 5
-2 0 5
+2 0 5 0 0 0 0 0 0 0 0 5
+2 0 10
+2 0 10 0 0 0 0 0 0 0 0 10 2
jcnd=8/10 +64 0 
* 0 
+2 0 2
+8 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
-6 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+2 0 4
+2 0 4 4
+8 0 4
+2 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=2/4 -20 0 
* 0 
+2 0 2
+2 0 2
+5 0 2
+3 0 2
+3 0 2
+2 0 2
+2 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=2/2 +14 0 
* 0 
+4 0 21
+4 0 21
+2 0 21
+2 0 21 0 0 0 0 0 0 0 0 21 6
jcnd=14/21 -8 0 
* 0 
-2 0 8 0 0 1 0 0 1
+2 0 8 0 0 0 0 0 0 0 0 8
jcnd=7/8 -8 0 
* 0 
+2 0 10 10 0 0 3 0 0 3
+4 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10 3
jcnd=5/10 0x3877c7a1cf 0 
* 0 
+6 0 5
+2 0 5
+4 0 5
+2 0 5
+2 0 5
+2 0 5 0 5
+8 0 5
jump=5 0x3877c79f30 0 
* 0 
0x3877c7a090 0 1 0 0 1 0 0 1
+7 0 1 0 1
+6 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 5 5 0 1 1 0 1 1
+4 0 5 5 0 0 1 0 0 1
+4 0 5
+3 0 5 5
+4 0 5
+4 0 5
+3 0 5
+3 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5 0 0 1 0 0 1
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5 0 1 0 0 1
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=3/5 +38 0 
* 0 
+2 0 2 2 0 0 2 0 0 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+2 0 2 2
+5 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+4 0 2 0 2
+4 0 2 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
-4 0 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 5 5
+4 0 5 5 0 1 0 0 1
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5
+4 0 5
+7 0 5 0 5 0 0 2 0 0 2
+4 0 5 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+2 0 5 0 5
+5 0 5
+7 0 5 0 0 0 0 0 0 0 0 5
jcnd=3/5 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+7 0 2 0 2 0 0 2 0 0 2
+4 0 2
+3 0 2
+3 0 2
+4 0 2
+3 0 2
+4 0 2
+3 0 2
+3 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
jump=2 +71 0 
* 0 
-46 0 3 0 0 1 0 0 1
+7 0 3 0 3 0 0 1 0 0 1
+4 0 3
+3 0 3
+3 0 3
+4 0 3
+3 0 3
+4 0 3
+3 0 3
+3 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
jump=3 +71 0 
* 0 
+40 0 87 0 0 1 0 0 1
+3 0 87
jump=87 0x3877c79abc 0 
* 0 
+28 0 5
+4 0 5 0 0 1 0 0 1
+3 0 5
+3 0 5 0 5
cfn=(104)
calls=5 0x3877c77180 0 
* 0 20 10 0 1 0 0 1 0 0 5
+5 0 5
+3 0 5
jump=5 0x3877c79ae3 0 
* 0 

totals: 161229 56832 40355 207 40 38 207 40 38 6670 190 614 11
