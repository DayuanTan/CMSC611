version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 399


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 427831977 - 427852537
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 88 0 0 1 0 0 1
+3 0 88 0 0 0 0 0 0 0 0 88
+2 0 88
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=88 0x3877c7b8b0 0 
* 0 7392 1672 880 7 2 0 7 2 0 1496
* 0 88 88 0 1 1 0 1 1 0 0 0 88

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 88 0 88 1 0 0 1
+1 0 88
+5 0 88
+3 0 88 0 88
+1 0 88
+4 0 88 0 0 1 0 0 1
+3 0 88
+4 0 88
+3 0 88 0 88 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=88 0x3877c7aa50 0 
* 0 10126 2198 1467 29 20 17 29 20 17 1711 38
* 0 88 88 0 1 1 0 1 1 0 0 0 88
+5 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
jcnd=88/88 +96 0 
* 0 
+96 0 88 0 0 1 0 0 1
+4 0 88 88
+1 0 88 88
+1 0 88 88

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 20 0 20 1 0 0 1
+1 * 20
+3 * 20
+4 * 20 0 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=20 0x402d74 645 
* * 260 120 40
+5 * 20
+3 * 20 0 20
+3 +1 20 20
+6 * 20 0 20
+3 * 20 20
+6 * 20 0 20
+3 +1 20 20
+6 * 20 0 20 1 0 0 1
+3 * 20 20
+6 * 20 0 20
+3 +2 20 0 20
+7 * 20
jump=20 +86 * 
* * 
+2 +1 230 230
+3 * 230
+3 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=230 0x402d9a 770 
* * 2530 1150 690
+5 * 230 230
+4 * 230 230
+5 * 230
+4 * 230 0 230
+5 +1 230 230
+3 * 230
+3 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=230 0x402dba 770 
* * 2530 1150 690 1 0 0 1
+5 * 230 230
+2 * 230
+4 * 230 230
+5 * 230
+4 * 230 0 230
+5 -2 230 0 230
+4 * 230 230
+3 * 230
+3 * 230 230
+3 * 230 0 0 0 0 0 0 0 0 230 21
jcnd=210/230 -93 +1 
* * 
-9 * 20 20 0 1 0 0 1
+3 * 20
+3 * 20 20
+3 * 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 -93 +1 
* * 
+2 +4 20 20
+3 * 20
+3 * 20
+4 * 20 20 0 1 0 0 1
+5 * 20
+4 * 20
+3 * 20 0 20
+5 +1 20 20
+3 * 20
+3 * 20
+4 * 20 20
+5 * 20
+4 * 20
+3 * 20 0 20
+5 +1 20 0 20
+7 * 20
jump=20 0x4016ee * 
* * 
+2 +1 230 230
+3 * 230
+3 * 230 230
+4 * 230
+3 * 230 0 0 1 0 0 1
+3 * 230 0 230
cfi=(2)
cfn=(146)
calls=230 0x402dba 770 
* * 2530 1150 690
+5 * 230 230
+2 * 230
+4 * 230 230
+5 * 230 0 230
+5 +1 230 230
+3 * 230
+3 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(144)
calls=230 0x402d9a 770 
* * 2530 1150 690
+5 * 230 230
+4 * 230 230
+5 * 230 0 230
+5 +1 230 230
+5 * 230 230
+5 * 230 230
+5 * 230
+4 * 230 0 230
+5 +1 230 230
+5 * 230 230
+5 * 230 230
+5 * 230
+4 * 230 0 230
+5 -4 230 0 230
+4 * 230 230
+3 * 230
+3 * 230 230
+3 * 230 0 0 0 0 0 0 0 0 230 21
jcnd=210/230 0x401672 +1 
* * 
-9 * 20 20 0 1 0 0 1
+3 * 20
+3 * 20 20
+3 * 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 0x401672 +1 
* * 
+6 +6 20 20 0 1 0 0 1
+5 * 20 20
+5 * 20 0 20
+5 +2 20 20
+3 +1 20 0 20
+3 * 20 20
+5 * 20 20
+1 * 20 20

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 20
+7 * 20
+7 * 20
+3 * 20
+3 * 20 0 20
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=20 0x4030b2 310 
* * 14061 4360 3788 63 16 13 63 16 13 644 32 78 9
+5 * 20
+7 * 20
+7 * 20
+3 * 20
+3 * 20 0 20
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=20 0x402ff4 310 
* * 14118 4364 3803 35 3 5 35 3 5 652 29 78
+5 * 20 0 0 1 0 0 1
+7 * 20
+7 * 20
+3 * 20
+3 * 20 0 20
cfn=(142)
calls=20 0x401585 -52 
* * 25220 11080 5860 8 0 0 8 0 0 500 42
+5 * 20 0 20
+8 * 20 20
+6 * 20 0 20
+6 * 20
+7 * 20
+3 * 20 0 20
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=20 0x402df4 414 
* * 4560 1420 1060 20 4 0 20 4 0 380 0 40
+5 * 20
+7 * 20
+3 * 20 0 20 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=20 0x402e74 414 
* * 4560 1420 1060 7 0 0 7 0 0 380 0 40
+5 +2 20
+7 * 20
+7 * 20
+3 * 20
+3 * 20 0 20
cfi=(2)
cfn=(4)
calls=20 0x4030b2 310 
* * 13751 4340 3702 0 0 1 0 0 1 616 5 78
+5 * 20
+7 * 20
+7 * 20
+3 * 20
+3 * 20 0 20
cfi=(2)
cfn=(80)
calls=20 0x402ff4 310 
* * 13751 4340 3702 0 0 0 0 0 0 616 1 78
+5 * 20 20
+6 * 20 0 0 1 0 0 1
+7 * 20
+7 * 20 0 20
+6 * 20 20
+8 * 20
+3 * 20
+3 * 20 0 20
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=20 0x401719 -33 
* * 12220 5040 2830 4 0 0 4 0 0 250 21
+5 * 20 0 20
+8 * 20 20
+6 * 20 0 20
+6 * 20
+7 * 20 0 0 1 0 0 1
+3 * 20 0 20
cfi=(2)
cfn=(148)
calls=20 0x402df4 414 
* * 4560 1420 1060 0 0 0 0 0 0 380 0 40
+5 * 20
+7 * 20
+3 * 20 0 20
cfi=(2)
cfn=(178)
calls=20 0x402e74 414 
* * 4560 1420 1060 0 0 0 0 0 0 380 0 40
+5 +2 20 20
+7 * 20
+3 * 20 0 20
cfi=(2)
cfn=(2)
calls=20 0x402d74 645 
* * 260 120 40
+5 * 20 20
+6 * 20
+3 * 20
+3 * 20
+3 * 20 20
+7 * 20
+3 * 20 0 0 1 0 0 1
+3 * 20 0 20
cfi=(2)
cfn=(144)
calls=20 0x402d9a 770 
* * 220 100 60
+5 * 20
+3 * 20
+7 * 20
+3 * 20
+3 * 20 0 20
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=20 0x402eda 901 
* * 6531 2164 1796 35 9 8 35 9 8 301 19 23
+5 +1 20 20
+7 * 20
+3 * 20 0 20
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=20 0x402f54 645 
* * 260 120 40 0 1 0 0 1
+5 * 20 20
+6 * 20
+3 * 20
+3 * 20
+3 * 20 20
+7 * 20 0 0 1 0 0 1
+3 * 20
+3 * 20 0 20
cfi=(2)
cfn=(146)
calls=20 0x402dba 770 
* * 220 100 60
+5 * 20
+3 * 20
+7 * 20
+3 * 20
+3 * 20 0 20
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=20 0x402f7a 901 
* * 6422 2150 1790 21 1 3 21 1 3 278 10 23
+5 +1 20 20
+7 * 20
+3 * 20 0 20
cfi=(2)
cfn=(10)
calls=20 0x402f54 645 
* * 260 120 40
+5 * 20 20
+6 * 20
+3 * 20
+3 * 20
+3 * 20 20 0 1 0 0 1
+7 * 20
+3 * 20
+3 * 20 0 20
cfi=(2)
cfn=(146)
calls=20 0x402dba 770 
* * 220 100 60
+5 * 20 20
+2 * 20
+4 * 20 20
+8 * 20 20
+8 * 20 0 20
+8 +1 20 20
+7 * 20
+3 * 20 0 20
cfi=(2)
cfn=(2)
calls=20 0x402d74 645 
* * 260 120 40
+5 * 20 20 0 1 0 0 1
+6 * 20
+3 * 20
+3 * 20
+3 * 20 20
+7 * 20
+3 * 20
+3 * 20 0 20
cfi=(2)
cfn=(144)
calls=20 0x402d9a 770 
* * 220 100 60
+5 * 20 20
+4 * 20 20
+8 * 20
+4 * 20 20
+8 * 20
+3 * 20 0 20
+8 +2 20 0 20
+7 -12 20 20
+8 * 20 20
+7 * 20 0 0 0 0 0 0 0 0 20 1
jcnd=1/20 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 20
+7 * 20
+3 * 20 0 20
cfi=(2)
cfn=(2)
calls=20 0x402d74 645 
* * 260 120 40 2 0 1 2 0 1
+5 * 20
+3 * 20 20
+7 * 20
+3 * 20 0 20
cfi=(2)
cfn=(2)
calls=20 0x402d74 645 
* * 260 120 40 0 1 0 0 1
+5 * 20
+3 * 20 0 0 0 0 0 0 0 0 20 1
+2 * 20 0 0 1 0 0 1
+5 * 20
jump=20 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 20
+2 * 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 * 20 0 20
+4 * 20 0 20
+5 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(2)
cfn=(2)
calls=20 0x402d74 645 
* * 260 120 40
+5 * 20
+3 * 20 0 20
+3 +1 20 20 0 1 0 0 1
+6 * 20 0 20
+3 * 20 20
+6 * 20 0 20
+3 +2 20 0 20
+7 * 20
jump=20 +86 * 
* * 
+2 +1 230 230
+3 * 230
+3 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(144)
calls=230 0x402d9a 770 
* * 2530 1150 690
+5 * 230 230
+4 * 230 230
+5 * 230
+4 * 230 0 230
+5 +1 230 230
+3 * 230
+3 * 230 230
+4 * 230
+3 * 230
+3 * 230 0 230
cfi=(2)
cfn=(146)
calls=230 0x402dba 770 
* * 2530 1150 690
+5 * 230 230
+2 * 230
+4 * 230 230
+5 * 230
+4 * 230 0 230
+5 -2 230 0 230
+4 * 230 230
+3 * 230
+3 * 230 230
+3 * 230 0 0 0 0 0 0 0 0 230 21
jcnd=210/230 -93 +1 
* * 
-9 * 20 20 0 1 0 0 1
+3 * 20
+3 * 20 20
+3 * 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 -93 +1 
* * 
+2 +4 20 20
+3 * 20
+3 * 20 0 0 1 0 0 1
+4 * 20 20
+5 * 20
+4 * 20
+3 * 20 0 20
+5 +1 20 20
+3 * 20
+3 * 20
+4 * 20 20
+5 * 20
+4 * 20
+3 * 20 0 20
+5 +1 20 20
+5 * 20 20
+5 * 20 20
+5 * 20 0 0 1 0 0 1
+4 * 20
+3 * 20 0 20
+5 +2 20 20
+3 +1 20 0 20
+3 * 20 20
+5 * 20 20
+1 * 20 20

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 40 0 40 1 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40 1 0 0 1
+4 +1 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=40 0x4049d4 -35 
* * 240 80 120 1 0 0 1
+5 * 40 40
+1 * 40 40

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 40 0 40 1 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 40
+4 * 40
+3 * 40 0 40
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=40 0x404520 -35 
* * 200 80 80
+5 * 40 40
+1 * 40 40

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 40 0 40 1 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=40 0x404a28 -35 
* * 240 80 120 1 0 1 1 0 1
+5 * 40 40
+1 * 40 40

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 40
+4 * 40
+3 * 40 0 40
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=40 0x4044cc -35 
* * 200 80 80
+5 * 40 40
+1 * 40 40

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=8 +7 113 
* * 48 16 16
+5 * 8 8
+1 * 8 8

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 40 0 40
+1 * 40
+3 * 40 0 40
+4 * 40 40
+4 * 40 40
+1 * 40 40

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 * 20 0 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20 20
+4 * 20 20
+4 * 20
+3 * 20
+3 * 20 0 20
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=20 0x403df2 -87 
* * 480 160 180 0 2 1 0 2 1 20
+5 * 20 20
+1 * 20 20

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 40 0 40 1 0 0 1
+1 * 40
+3 * 40 0 40
+4 * 40 40
+4 * 40 40
+1 * 40 40

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 * 20 0 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20 20
+4 * 20 20
+4 * 20
+3 * 20
+3 * 20 0 20
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=20 0x40406a -87 
* * 480 160 180 0 1 1 0 1 1 20
+5 * 20 20
+1 * 20 20

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=8 +8 113 
* * 48 16 16
+5 * 8 8
+1 * 8 8

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 +1 80 80
+4 * 80 80
+1 * 80 80

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 +1 80
+4 * 80
+3 * 80 0 80 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=80 0x40500c 790 
* * 480 240 160 1 0 0 1
+5 * 80 80
+3 * 80 80
+1 * 80 80

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 80 0 80
+1 * 80
+3 * 80 0 80
+4 +1 80 80
+4 * 80 80
+1 * 80 80

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 +1 80 80 0 1 0 0 1
+4 * 80 80
+1 * 80 80

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 80 0 80
+1 * 80
+3 * 80 0 80 0 0 1 0 0 1
+4 +1 80 80
+4 * 80 80
+1 * 80 80

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 +1 80
+4 * 80
+3 * 80 0 80
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=80 0x404ffe 790 
* * 480 240 160 1 0 0 1
+5 * 80 80
+3 * 80 80
+1 * 80 80

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 40 0 40
+1 * 40
+3 * 40 0 40
+4 * 40 0 40
+4 * 40 40
+4 * 40 40
+1 * 40 40

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 44 0 44 1 0 0 1
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 * 44 0 44 1 0 0 1
+4 +2 44 44
+4 * 44
+3 * 44 0 44
cfn=(28)
calls=44 0x404992 +12 
* * 264 88 88 1 0 0 1
+5 * 44 44
+4 * 44
+3 * 44
+2 * 44 0 0 0 0 0 0 0 0 44
jcnd=44/44 +7 +3 
* * 
+7 +3 44 44
+4 * 44
+4 * 44
+3 * 44 0 44
cob=(5)
cfi=(8)
cfn=(32)
calls=44 0x387e4bd0b0 0 
* * 5684 1266 855 15 11 9 15 11 9 884 17 44
* * 44 44 0 1 1 0 1 1 0 0 0 44
+5 +1 44 44
+1 * 44 44

fn=(102)
0x4048de 113 52 0 52 1 0 0 1
+1 * 52
+3 * 52 0 52
+4 +1 52
+10 * 52 52
+1 * 52 52

fn=(266)
0x40406a 129 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 * 20 0 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20
+5 * 20 0 20
cfi=(16)
cfn=(226)
calls=20 0x402d61 -20 
* * 140 60 60
+5 * 20
+3 * 20 0 0 0 0 0 0 0 0 20
+2 * 20 20
+4 * 20 20 0 0 1 0 0 1
+2 * 20 0 20 0 0 1 0 0 1
+2 * 20 20
+1 * 20 20

fn=(28)
0x404992 113 52 0 52 1 0 0 1
+1 * 52
+3 * 52 0 52
+4 +1 52
+10 * 52 52
+1 * 52 52

fn=(176)
0x4044cc 86 40 0 40
+1 * 40
+3 * 40 0 40
+4 * 40 40
+1 * 40 40

fn=(224)
0x403df2 129 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 * 20 0 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20
+5 * 20 0 20
cfi=(16)
cfn=(226)
calls=20 0x402d61 -20 
* * 140 60 60
+5 * 20
+3 * 20 0 0 0 0 0 0 0 0 20
+2 * 20 20
+4 * 20 20 0 0 2 0 0 2
+2 * 20 0 20 0 0 1 0 0 1
+2 * 20 20
+1 * 20 20

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 44 0 44
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 * 44 0 44
+4 +1 44 44
+4 * 44
+3 * 44 0 44
cob=(5)
cfi=(8)
cfn=(164)
calls=44 0x387e4bb2f0 0 
* * 3872 880 440 9 3 0 9 3 0 792 0 44
* * 44 44 0 1 1 0 1 1 0 0 0 44
+5 * 44 44
+1 * 44 44

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 44 0 44
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 * 44 0 44
+4 +1 44 44
+4 * 44
+3 * 44 0 44
cob=(5)
cfi=(8)
cfn=(164)
calls=44 0x387e4bb2f0 0 
* * 3872 880 440 0 0 0 0 0 0 792 0 44
* * 44 44 0 0 0 0 0 0 0 0 0 44
+5 * 44 44
+1 * 44 44

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 44 0 44 1 0 0 1
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 * 44 0 44
+4 +2 44 44
+4 * 44
+3 * 44 0 44
cfn=(102)
calls=44 0x4048de +12 
* * 264 88 88 1 0 0 1
+5 * 44 44
+4 * 44 0 0 1 0 0 1
+3 * 44
+2 * 44 0 0 0 0 0 0 0 0 44
jcnd=44/44 +7 +3 
* * 
+7 +3 44 44
+4 * 44
+4 * 44
+3 * 44 0 44
cob=(5)
cfi=(8)
cfn=(32)
calls=44 0x387e4bd0b0 0 
* * 5850 1284 876 18 10 9 18 10 9 915 21 44
* * 44 44 0 0 0 0 0 0 0 0 0 44
+5 +1 44 44
+1 * 44 44

fn=(18)
0x404a28 81 40 0 40 1 0 0 1
+1 * 40
+3 * 40 0 40 0 0 1 0 0 1
+4 * 40 0 40
+4 * 40 40
+1 * 40 40

fn=(92)
0x4049d4 81 40 0 40 1 0 0 1
+1 * 40
+3 * 40 0 40
+4 * 40 0 40
+4 * 40 40
+1 * 40 40

fn=(196)
0x404520 86 40 0 40
+1 * 40
+3 * 40 0 40
+4 * 40 40
+1 * 40 40

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +10 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=40 0x404829 -26 
* * 11422 3400 3164 25 3 2 25 3 2 392 25 76 9
+5 +1 40 40
+1 * 40 40

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
calls=8 0x4049a6 107 
* * 1812 584 557 2 0 0 2 0 0 38 1 7
+5 * 8 8
+1 * 8 8

fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8 1 0 0 1
+4 * 8 0 8
+4 +2 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=8 0x404caa 450 
* * 1588 504 477 2 0 3 2 0 3 38 2 7
+5 * 8 8
+1 * 8 8

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40 1 0 0 1
cfn=(50)
calls=40 0x404484 107 
* * 11982 3600 3364 25 3 2 25 3 2 392 25 76 9
+5 * 40 40
+1 * 40 40

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=8 0x4048f2 107 
* * 1812 584 557 4 0 3 4 0 3 38 2 7
+5 * 8 8
+1 * 8 8

fn=(52)
0x404829 91 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40 0 1 0 0 1
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=40 0x404a36 450 
* * 10862 3200 2964 24 3 2 24 3 2 392 25 76 9
+5 * 40 40
+1 * 40 40

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=40 0x40439c 107 
* * 11982 3600 3364 7 0 0 7 0 0 392 22 76
+5 * 40 40
+1 * 40 40

fn=(116)
0x40439c 107 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +10 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=40 0x4047d7 -26 
* * 11422 3400 3164 7 0 0 7 0 0 392 22 76
+5 +1 40 40
+1 * 40 40

fn=(118)
0x4047d7 91 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=40 0x4049e2 450 
* * 10862 3200 2964 7 0 0 7 0 0 392 22 76
+5 * 40 40
+1 * 40 40

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8 1 0 0 1
+4 * 8 0 8
+4 +7 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(270)
calls=8 0x404772 -25 
* * 1932 624 605 2 0 0 2 0 0 38 1 7
+5 +1 8 8
+1 * 8 8

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8 1 0 0 1
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +7 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(230)
calls=8 0x40465c -25 
* * 1932 624 605 5 0 3 5 0 3 38 2 7
+5 +1 8 8
+1 * 8 8

fn=(232)
0x4048f2 107 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +10 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(234)
calls=8 0x404af4 -26 
* * 1700 544 517 4 0 3 4 0 3 38 2 7
+5 +1 8 8
+1 * 8 8

fn=(272)
0x4049a6 107 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +10 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=8 0x404b99 -26 
* * 1700 544 517 2 0 0 2 0 0 38 1 7
+5 +1 8 8
+1 * 8 8

fn=(274)
0x404b99 91 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=8 0x404cf0 450 
* * 1588 504 477 1 0 0 1 0 0 38 1 7
+5 * 8 8
+1 * 8 8

fl=(2)
fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 92 0 92 1 0 0 1
+1 * 92
+3 * 92 0 92 1 0 0 1
+4 +1 92 92
+4 * 92 92
+1 * 92 92

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+3 * 40 0 40
+4 * 40
+4 * 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=40 0x404380 726 
* * 400 200 160
+5 * 40 40
+4 * 40 40
+1 * 40 40

fn=(148)
0x402df4 414 40 0 40
+1 * 40
+3 * 40 0 40
+1 * 40
+4 * 40 0 40 1 0 0 1
+4 +2 40 40
+4 * 40
+3 * 40 0 40
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=40 0x40325e 113 
* * 240 120 80
+5 * 40
+3 * 40 40
+4 * 40 40
+4 * 40 40
+4 * 40 40
+3 -1 40
+3 * 40
+3 * 40 0 40
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=40 0x40326c 148 
* * 1240 400 480 4 0 0 4
+5 +1 40 40
+4 * 40
+3 * 40 0 40
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=40 0x4031ec 159 
* * 6680 1960 1320 14 4 0 14 4 0 760 0 80
+5 * 40
jump=40 +28 * 
* * 
+28 * 40 0 0 1 0 0 1
+4 * 40 40
+1 * 40 40
+1 * 40 40

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 44 0 44 1 0 0 1
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 * 44 0 44
+4 +2 44 44
+5 * 44 0 0 0 0 0 0 0 0 44
+2 +1 44 44
+4 * 44 44
+4 * 44 44
+4 * 44
+3 * 44
+3 * 44 0 44
cfi=(5)
cfn=(160)
calls=44 0x4044d6 -65 
* * 4400 1056 660 10 4 0 10 4 0 792 0 88
+5 +1 44 44
+1 * 44 44

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 40 0 40
+1 * 40
+3 * 40 0 40
+1 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=40 0x4043ca -45 
* * 1440 520 560 4 0 4 4 0 4
+5 +1 40 40 0 1 0 0 1
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=40 0x404412 +43 
* * 7670 2140 1486 20 12 7 20 12 7 868 12 80
+5 * 40
jump=40 +28 * 
* * 
+28 * 40
+4 * 40 40
+1 * 40 40
+1 * 40 40

fn=(14)
0x4043ca 90 40 0 40 1 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40 0 0 1 0 0 1
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(4)
cfn=(16)
calls=40 0x404804 +24 
* * 720 240 280 2 0 1 2 0 1
+5 * 40 40
+4 * 40 0 40 0 0 2 0 0 2
+7 * 40 40
+4 * 40 0 40 1 0 0 1
+8 * 40 40
+4 * 40 0 40
+8 +1 40 40
+1 * 40 40

fn=(80)
0x402ff4 310 40 0 40 1 0 0 1
+1 * 40
+3 * 40 0 40
+2 * 40 0 40
+2 * 40 0 40
+1 * 40 0 0 1 0 0 1
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40
+3 * 40 0 40
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=40 0x4039fc 117 
* * 240 120 80 2 0 0 2
+5 * 40
+3 * 40 0 40
cfi=(3)
cfn=(84)
calls=40 0x4039ed -88 
* * 240 120 80
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(2)
calls=40 0x402d74 645 
* * 520 240 80
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40
+3 * 40
+3 * 40 0 40 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=40 0x403a0a 134 
* * 10047 2944 2341 20 3 5 20 3 5 876 8 80
+5 +4 40 40
+4 * 40
+3 * 40 0 40
cfn=(106)
calls=40 0x40325e 113 
* * 240 120 80 1 0 0 1
+5 * 40
+3 * 40 40
+4 * 40 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=40 0x403a98 565 
* * 1000 400 320 2 0 0 2
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(112)
calls=40 0x403a68 547 
* * 1000 400 320
+5 * 40
+3 * 40
+3 * 40
+3 * 40
+3 * 40 0 40
cfi=(11)
cfn=(114)
calls=40 0x403ac9 -60 
* * 12582 3800 3604 7 0 0 7 0 0 392 22 76
+5 -3 40 40
+4 * 40 0 40
+4 * 40
jump=40 +28 +4 
* * 
+28 +4 40
+4 * 40 40
+1 * 40 40
+2 * 40 40
+2 * 40 40
+1 * 40 40

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 44 0 44 1 0 0 1
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 * 44 0 44
+4 +2 44 44
+5 * 44 0 0 0 0 0 0 0 0 44 4
+2 +1 44 44
+4 * 44 44
+4 * 44 44
+4 * 44
+3 * 44
+3 * 44 0 44
cfi=(5)
cfn=(190)
calls=44 0x40452a -65 
* * 4400 1056 660 0 0 0 0 0 0 792 0 88
+5 +1 44 44
+1 * 44 44

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 44 0 44 1 0 0 1
+1 * 44
+3 * 44
+4 * 44 0 44 1 0 0 1
+4 * 44 0 44
+4 0 44 44
+5 0 44 0 0 0 0 0 0 0 0 44
+2 0 44 44
+4 0 44 44
+4 0 44
+5 0 44
+3 0 44
+3 0 44 0 44
fi=(6) ???
cfi=(5)
cfn=(26)
calls=44 0x404730 99 
* 0 6828 1618 1207 19 12 9 19 12 9 928 17 88
+5 0 44
fi=(6)
jump=44 +7 0 
* 0 
+7 0 44 44
+1 0 44 44

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 40 0 40 1 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40 0 40
+4 * 40
+4 * 40 0 0 1 0 0 1
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=40 0x404468 726 
* * 400 200 160 1 0 0 1
+5 * 40 40
+4 * 40 40
+1 * 40 40

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+3 * 40 0 40
+4 * 40
+4 * 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(10)
cfn=(44)
calls=40 0x404468 726 
* * 400 200 160
+5 * 40 40
+4 * 40 40
+1 * 40 40

fn=(86)
0x403a0a 134 40 0 40
+1 * 40
+3 * 40 0 40
+1 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=40 0x4042e2 -45 
* * 1440 520 560 5 0 0 5
+5 +1 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=40 0x40432a +43 
* * 7727 2144 1501 14 3 5 14 3 5 876 8 80
+5 * 40
jump=40 +28 * 
* * 
+28 * 40
+4 * 40 40
+1 * 40 40
+1 * 40 40

fn=(88)
0x4042e2 90 40 0 40 1 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40 1 0 0 1
cfi=(4)
cfn=(90)
calls=40 0x4047b2 +24 
* * 720 240 280 3 0 0 3
+5 * 40 40
+4 * 40 0 40
+7 * 40 40
+4 * 40 0 40
+8 * 40 40
+4 * 40 0 40
+8 +1 40 40
+1 * 40 40

fn=(156)
0x4031ec 159 40 0 40 1 0 0 1
+1 * 40
+3 * 40 0 40
+1 * 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40 40 0 1 0 0 1
+4 * 40
+3 * 40 40
+4 * 40 40
+3 * 40
+3 * 40
+3 * 40
+4 * 40
+3 * 40 40
+4 * 40 40
+3 -1 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(158)
calls=40 0x403ce6 +11 
* * 4640 1200 800 11 4 0 11 4 0 760 0 80
+5 +1 40 40
+4 * 40
+3 * 40 0 40
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=40 0x4031b8 -82 
* * 920 320 320 1 0 0 1
+5 * 40
jump=40 +28 * 
* * 
+28 * 40
+4 * 40 40
+1 * 40 40
+1 * 40 40

fn=(172)
0x4031b8 79 40 0 40 1 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 40
+4 * 40
+3 * 40 0 40
cfi=(4)
cfn=(174)
calls=40 0x403ccc +42 
* * 560 200 200
+5 * 40 40
+1 * 40 40

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 4 0 4 1 0 0 1
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=4 0x40404e 726 
* * 40 20 16 1 0 0 1
+5 * 4 4
+4 * 4 4
+1 * 4 4

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+4 * 4
+3 * 4 0 4
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=4 0x4045cc 650 
* * 128 44 44 1 0 0 1
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(2)
calls=4 0x402d74 645 
* * 52 24 8
+5 * 4
+3 * 4 0 0 1 0 0 1
+3 * 4 4
+4 * 4
+3 * 4
+3 * 4
+2 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +14 +3 
* * 
+14 +3 4 4
+4 * 4
+3 * 4 0 4
cfn=(2)
calls=4 0x402d74 645 
* * 52 24 8
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(2)
calls=4 0x402d74 645 
* * 52 24 8
+5 * 4 0 4
+4 * 4
+4 * 4 0 0 1 0 0 1
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=4 0x4045ee 216 
* * 52 28 12 0 0 0 0 0 0 4
+5 * 4 4
+3 * 4
+3 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4
cfn=(2)
calls=4 0x402d74 645 
* * 52 24 8
+5 * 4 4
+4 * 4 0 0 0 0 0 0 0 0 4
+2 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(210)
calls=4 0x4045cc 650 
* * 128 44 44
+5 * 4 4
+4 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +16 * 
* * 
+16 * 4 4 0 1 0 0 1
+4 +1 4
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=4 0x4042c6 726 
* * 40 20 16
+5 * 4 4
+4 * 4 4
+1 * 4 4

fn=(10)
0x402f54 645 96 0 96 1 0 0 1
+1 * 96
+3 * 96 0 96
+4 +1 96 96
+4 * 96 96 0 0 2 0 0 2
+4 * 96
+3 * 96 96
+4 * 96 96
+3 * 96
+3 * 96
+3 * 96
+4 * 96 96
+1 * 96 96

fn=(106)
0x40325e 113 92 0 92 1 0 0 1
+1 * 92
+3 * 92 0 92
+4 +1 92 92
+4 * 92 92
+1 * 92 92

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(204)
calls=4 0x40404e 726 
* * 40 20 16
+5 * 4 4
+4 * 4 4
+1 * 4 4

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+4 * 4
+3 * 4 0 4
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=4 0x40470e 650 
* * 128 44 44
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(10)
calls=4 0x402f54 645 
* * 52 24 8
+5 * 4
+3 * 4
+3 * 4 4
+4 * 4 0 0 1 0 0 1
+3 * 4
+3 * 4
+2 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +14 +3 
* * 
+14 +3 4 4
+4 * 4
+3 * 4 0 4
cfn=(10)
calls=4 0x402f54 645 
* * 52 24 8
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(10)
calls=4 0x402f54 645 
* * 52 24 8
+5 * 4 0 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4 0 0 1 0 0 1
+3 * 4 0 4
cfi=(12)
cfn=(214)
calls=4 0x4045ee 216 
* * 52 28 12 0 0 0 0 0 0 4
+5 * 4 4
+3 * 4
+3 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4
cfn=(10)
calls=4 0x402f54 645 
* * 52 24 8
+5 * 4 4
+4 * 4 0 0 0 0 0 0 0 0 4
+2 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(254)
calls=4 0x40470e 650 
* * 128 44 44
+5 * 4 4
+4 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +16 * 
* * 
+16 * 4 4 0 1 0 0 1
+4 +1 4
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 48 0 48 1 0 0 1
+1 * 48
+3 * 48 0 48 0 0 1 0 0 1
+4 +1 48 48
+4 * 48 48
+1 * 48 48

fn=(82)
0x4039fc 117 48 0 48 1 0 0 1
+1 * 48
+3 * 48 0 48 1 0 0 1
+4 +1 48 48
+4 * 48 48
+1 * 48 48

fn=(200)
0x402eda 901 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 * 20 0 20
+4 +2 20 20
+4 * 20 20
+4 * 20 20
+4 * 20 20
+4 * 20
+3 * 20 0 0 0 0 0 0 0 0 20 4
jcnd=4/20 +51 +10 
* * 
+2 +3 16 16
+4 * 16 16
+4 * 16 16
+4 -1 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(3)
cfn=(222)
calls=16 0x403373 215 
* * 608 208 224 0 1 0 0 1 0 16
+5 +2 16 16
+4 * 16 16
+4 * 16
+4 * 16 16
+4 * 16 0 16
+4 * 16
jump=16 +36 +8 
* * 
+2 +6 4 4 0 1 0 0 1
+4 * 4
+3 * 4 0 4
cfn=(202)
calls=4 0x403688 556 
* * 92 36 28 2 0 0 2
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=4 0x4033a0 318 
* * 5327 1676 1444 32 8 8 32 8 8 265 15 23
+5 +2 20 20
+1 * 20 20

fn=(4)
0x4030b2 310 40 0 40 1 0 0 1
+1 * 40
+3 * 40 0 40
+2 * 40 0 40
+2 * 40 0 40
+1 * 40
+4 * 40 0 40 1 0 0 1
+4 * 40 0 40
+4 +2 40 40
+4 * 40
+3 * 40 0 40
cfn=(6)
calls=40 0x403b08 117 
* * 240 120 80 1 0 1 1 0 1
+5 * 40
+3 * 40 0 40
cfi=(3)
cfn=(8)
calls=40 0x403afa -88 
* * 240 120 80 1 0 0 1
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(10)
calls=40 0x402f54 645 
* * 520 240 80 1 1 0 1 1
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40
+3 * 40
+3 * 40 0 40
cfn=(12)
calls=40 0x403b16 134 
* * 9990 2940 2326 25 12 11 25 12 11 868 12 80
+5 +4 40 40 0 1 0 0 1
+4 * 40
+3 * 40 0 40
cfn=(40)
calls=40 0x40333c 113 
* * 240 120 80 2 0 0 2
+5 * 40
+3 * 40 40
+4 * 40 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(42)
calls=40 0x403ba4 565 
* * 1000 400 320 3 0 0 3
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(46)
calls=40 0x403b74 547 
* * 1000 400 320
+5 * 40
+3 * 40
+3 * 40
+3 * 40
+3 * 40 0 40 1 0 0 1
cfi=(11)
cfn=(48)
calls=40 0x403bd5 -60 
* * 12582 3800 3604 26 3 2 26 3 2 392 25 76 9
+5 -3 40 40
+4 * 40 0 40
+4 * 40
jump=40 +28 +4 
* * 
+28 +4 40
+4 * 40 40
+1 * 40 40
+2 * 40 40
+2 * 40 40
+1 * 40 40

fn=(108)
0x403a98 565 40 0 40 1 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40 0 40
+4 * 40
+4 * 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(10)
cfn=(110)
calls=40 0x404380 726 
* * 400 200 160 1 0 0 1
+5 * 40 40
+4 * 40 40
+1 * 40 40

fn=(178)
0x402e74 414 40 0 40
+1 * 40
+3 * 40 0 40
+1 * 40
+4 * 40 0 40 1 0 0 1
+4 +2 40 40
+4 * 40
+3 * 40 0 40
cfn=(40)
calls=40 0x40333c 113 
* * 240 120 80
+5 * 40
+3 * 40 40
+4 * 40 40
+4 * 40 40
+4 * 40 40
+3 -1 40
+3 * 40
+3 * 40 0 40
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=40 0x40334a 148 
* * 1240 400 480 2 0 0 2
+5 +1 40 40
+4 * 40
+3 * 40 0 40
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=40 0x4032ca 159 
* * 6680 1960 1320 3 0 0 3 0 0 760 0 80
+5 * 40
jump=40 +28 * 
* * 
+28 * 40 0 0 1 0 0 1
+4 * 40 40
+1 * 40 40
+1 * 40 40

fn=(210)
0x4045cc 650 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(82)
calls=8 0x4039fc 117 
* * 48 24 16
+5 * 8
+3 * 8 0 8
cfi=(3)
cfn=(212)
calls=8 0x4048c3 221 
* * 120 40 40
+5 * 8 8
+1 * 8 8

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 44 0 44 1 0 0 1
+1 * 44 0 0 1 0 0 1
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 0 44 44
+5 0 44 0 0 0 0 0 0 0 0 44
+2 0 44 44
+4 0 44 44
+4 0 44
+5 0 44
+3 0 44
+3 0 44 0 44
fi=(6)
cfi=(5)
cfn=(100)
calls=44 0x40461a 99 
* 0 6994 1636 1228 21 10 9 21 10 9 959 21 88
+5 0 44
fi=(6)
jump=44 +7 0 
* 0 
+7 0 44 44
+1 0 44 44

fn=(144)
0x402d9a 770 730 0 730
+1 * 730
+3 * 730 0 730
+4 * 730 0 730
+4 +1 730 730
+4 * 730 730
+3 * 730 730
+4 * 730
+4 * 730
+3 * 730 730
+1 * 730 730

fn=(146)
0x402dba 770 730 0 730
+1 * 730
+3 * 730 0 730 1 0 0 1
+4 * 730 0 730
+4 +1 730 730
+4 * 730 730
+3 * 730 730
+4 * 730
+4 * 730
+3 * 730 730
+1 * 730 730

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 40
+4 * 40
+3 * 40 0 40
cfi=(4)
cfn=(194)
calls=40 0x403d7e +42 
* * 560 200 200 1 0 0 1
+5 * 40 40
+1 * 40 40

fn=(254)
0x40470e 650 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(6)
calls=8 0x403b08 117 
* * 48 24 16
+5 * 8
+3 * 8 0 8
cfi=(3)
cfn=(256)
calls=8 0x404978 221 
* * 120 40 40
+5 * 8 8
+1 * 8 8

fn=(186)
0x4032ca 159 40 0 40 1 0 0 1
+1 * 40
+3 * 40 0 40
+1 * 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40 40
+4 * 40
+3 * 40 40
+4 * 40 40
+3 * 40
+3 * 40
+3 * 40
+4 * 40
+3 * 40 40
+4 * 40 40
+3 -1 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(188)
calls=40 0x403d98 +11 
* * 4640 1200 800 1 0 0 1 0 0 760 0 80
+5 +1 40 40
+4 * 40
+3 * 40 0 40
cfn=(192)
calls=40 0x403296 -82 
* * 920 320 320 1 0 0 1
+5 * 40
jump=40 +28 * 
* * 
+28 * 40
+4 * 40 40
+1 * 40 40
+1 * 40 40

fn=(2)
0x402d74 645 176 0 176 1 0 0 1
+1 * 176
+3 * 176 0 176 0 0 1 0 0 1
+4 +1 176 176
+4 * 176 176 0 1 1 0 1 1
+4 * 176
+3 * 176 176
+4 * 176 176
+3 * 176
+3 * 176
+3 * 176
+4 * 176 176
+1 * 176 176

fn=(20)
0x404412 179 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(22)
calls=40 0x404236 -14 
* * 6670 1660 1206 19 12 7 19 12 7 868 12 80
+5 * 40 40
+4 * 40 0 40
+3 +1 40 40
+4 * 40 40 0 1 0 0 1
+3 * 40 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+3 * 40 40
+4 * 40
+4 * 40
+3 * 40 40
+4 * 40 0 40
+4 +1 40 40
+1 * 40 40

fn=(94)
0x40432a 179 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40 40 0 1 0 0 1
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(96)
calls=40 0x403fbe -14 
* * 6727 1664 1221 13 3 5 13 3 5 876 8 80
+5 * 40 40
+4 * 40 0 40
+3 +1 40 40
+4 * 40 40
+3 * 40 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+3 * 40 40
+4 * 40
+4 * 40
+3 * 40 40
+4 * 40 0 40
+4 +1 40 40
+1 * 40 40

fn=(244)
0x402f7a 901 20 0 20
+1 * 20
+3 * 20 0 0 1 0 0 1
+4 * 20 0 20
+4 * 20 0 20
+4 +2 20 20
+4 * 20 20
+4 * 20 20
+4 * 20 20
+4 * 20
+3 * 20 0 0 0 0 0 0 0 0 20
jcnd=4/20 +51 +10 
* * 
+2 +3 16 16
+4 * 16 16
+4 * 16 16
+4 -1 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(3)
cfn=(264)
calls=16 0x4036b1 215 
* * 608 208 224 0 1 0 0 1 0 16
+5 +2 16 16
+4 * 16 16
+4 * 16
+4 * 16 16
+4 * 16 0 16
+4 * 16
jump=16 +36 +8 
* * 
+2 +6 4 4
+4 * 4
+3 * 4 0 4
cfn=(246)
calls=4 0x4039c4 556 
* * 92 36 28
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=4 0x4036de 318 
* * 5218 1662 1438 20 0 3 20 0 3 242 10 23
+5 +2 20 20
+1 * 20 20

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(248)
calls=4 0x4042c6 726 
* * 40 20 16
+5 * 4 4
+4 * 4 4
+1 * 4 4

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40 1 0 0 1
+4 * 40 0 40
+4 * 40 0 40
+4 +8 40 0 40
+4 +3 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=40 0x404f37 -22 
* * 4462 1040 764 14 3 1 14 3 1 392 25 76 9
+5 +1 40 40
+1 * 40 40

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 40 0 40
+1 * 40
+3 * 40 0 40
+2 * 40 0 40
+1 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +4 40 40
+4 * 40
+3 * 40 0 40
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=40 0x404878 277 
* * 600 240 200 1 0 0 1
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=40 0x404d44 277 
* * 1000 360 320 2 0 0 2
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(132)
calls=40 0x404d44 277 
* * 1000 360 320
+5 * 40
+3 * 40
+3 * 40
+3 * 40 0 40
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=40 0x404d5e -49 
* * 5062 1240 1004 1 0 0 1 0 0 392 22 76
+5 +1 40
+4 * 40 40
+1 * 40 40
+2 * 40 40
+1 * 40 40

fn=(236)
0x404caa 450 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +10 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=8 0x40455a 288 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(238)
calls=8 0x40455a 288 
* * 120 48 40
+5 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=8 0x404de8 -36 
* * 1172 360 333 1 0 3 1 0 3 38 2 7
+5 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(54)
0x404a36 450 40 0 40
+1 * 40
+3 * 40 0 40
+1 * 40
+4 * 40 0 40 1 0 0 1
+4 * 40 0 40
+4 * 40 0 40
+4 +10 40 40
+4 * 40
+3 * 40 0 40
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=40 0x404c38 288 
* * 600 240 200 3 0 0 3
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(56)
calls=40 0x404c38 288 
* * 600 240 200
+5 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=40 0x404c52 -36 
* * 8782 2480 2244 20 3 2 20 3 2 392 25 76 9
+5 +1 40
+4 * 40 40
+1 * 40 40
+1 * 40 40

fn=(60)
0x404c52 424 40 0 40
+1 * 40
+3 * 40 0 40
+2 * 40 0 40
+1 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +4 40 40
+4 * 40
+3 * 40 0 40
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=40 0x40492d 277 
* * 600 240 200 2 0 0 2
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=40 0x404d9d 277 
* * 1000 360 320 2 0 1 2 0 1
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(66)
calls=40 0x404d9d 277 
* * 1000 360 320
+5 * 40
+3 * 40
+3 * 40
+3 * 40 0 40
cfn=(72)
calls=40 0x404db7 -49 
* * 5062 1240 1004 15 3 1 15 3 1 392 25 76 9
+5 +1 40
+4 * 40 40
+1 * 40 40
+2 * 40 40
+1 * 40 40

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +8 8 0 8
+4 +3 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(74)
calls=8 0x404f37 -22 
* * 468 120 85 0 0 0 0 0 0 38 1 7
+5 +1 8 8
+1 * 8 8

fn=(62)
0x40492d 277 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64
+3 * 64 0 64 1 0 0 1
cfi=(13)
cfn=(64)
calls=64 -33 -66 
* * 384 192 128
+5 * 64 64
+1 * 64 64

fn=(66)
0x404d9d 277 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80
+3 * 80 0 80
cfi=(13)
cfn=(68)
calls=80 0x404f1a -58 
* * 1280 480 400 2 0 1 2 0 1
+5 * 80 80
+1 * 80 80

fn=(240)
0x404de8 424 8 0 8
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(128)
calls=8 0x404878 277 
* * 120 48 40 0 0 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(128)
calls=8 0x404878 277 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(128)
calls=8 0x404878 277 
* * 120 48 40
+5 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=8 0x404f9c -49 
* * 588 160 133 0 0 2 0 0 2 38 2 7
+5 +1 8
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(214)
0x4045ee 216 8 0 8
+1 * 8
+3 * 8 0 8
+4 * 8 0 8
+4 +5 8 8
+4 * 8 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +8 +2 
* * 
+8 +2 8 8
+4 +1 8 8
+1 * 8 8

fn=(238)
0x40455a 288 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(13)
cfn=(130)
calls=16 0x40486a -77 
* * 96 48 32
+5 * 16 16
+1 * 16 16

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8
+3 * 8 0 8
cfn=(62)
calls=8 0x40492d 277 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(62)
calls=8 0x40492d 277 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(62)
calls=8 0x40492d 277 
* * 120 48 40
+5 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfn=(282)
calls=8 0x404fcd -49 
* * 588 160 133 0 0 0 0 0 0 38 1 7
+5 +1 8
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(120)
0x4049e2 450 40 0 40
+1 * 40
+3 * 40 0 40
+1 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +10 40 40
+4 * 40
+3 * 40 0 40
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=40 0x404bc6 288 
* * 600 240 200 3 0 0 3
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(122)
calls=40 0x404bc6 288 
* * 600 240 200
+5 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(126)
calls=40 0x404be0 -36 
* * 8782 2480 2244 4 0 0 4 0 0 392 22 76
+5 +1 40
+4 * 40 40
+1 * 40 40
+1 * 40 40

fn=(128)
0x404878 277 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64 1 0 0 1
+4 +1 64 64
+4 * 64
+3 * 64 0 64
cfi=(13)
cfn=(130)
calls=64 -33 -66 
* * 384 192 128 0 0 1 0 0 1
+5 * 64 64
+1 * 64 64

fn=(132)
0x404d44 277 80 0 80
+1 * 80
+3 * 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80
+3 * 80 0 80
cfi=(13)
cfn=(134)
calls=80 0x404e98 -58 
* * 1280 480 400 2 0 0 2
+5 * 80 80
+1 * 80 80

fn=(138)
0x404d5e 379 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +8 40 0 40
+4 +3 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=40 0x404eb5 -22 
* * 4462 1040 764 1 0 0 1 0 0 392 22 76
+5 +1 40 40
+1 * 40 40

fn=(242)
0x404f9c 379 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +8 8 0 8
+4 +3 8 8
+4 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(140)
calls=8 0x404eb5 -22 
* * 468 120 85 0 0 2 0 0 2 38 2 7
+5 +1 8 8
+1 * 8 8

fn=(276)
0x404cf0 450 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +10 8 8
+4 * 8
+3 * 8 0 8
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=8 0x40469c 288 
* * 120 48 40
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(278)
calls=8 0x40469c 288 
* * 120 48 40
+5 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfn=(280)
calls=8 0x404e40 -36 
* * 1172 360 333 1 0 0 1 0 0 38 1 7
+5 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(278)
0x40469c 288 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(13)
cfn=(64)
calls=16 0x40491f -77 
* * 96 48 32
+5 * 16 16
+1 * 16 16

fn=(122)
0x404bc6 288 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80
+4 +1 80 80
+4 * 80
+3 * 80 0 80
cfi=(13)
cfn=(124)
calls=80 0x404d36 -77 
* * 480 240 160 2 0 0 2
+5 * 80 80
+1 * 80 80

fn=(56)
0x404c38 288 80 0 80 1 0 0 1
+1 * 80
+3 * 80
+4 * 80 0 80 1 0 0 1
+4 +1 80 80
+4 * 80
+3 * 80 0 80
cfi=(13)
cfn=(58)
calls=80 0x404d8f -77 
* * 480 240 160 1 0 0 1
+5 * 80 80
+1 * 80 80

fn=(74)
0x404f37 368 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48 1 0 0 1
+4 * 48 0 48
+4 * 48 0 48
+4 +2 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48
+4 * 48 0 48
+4 +1 48 48
+5 * 48 0 0 0 0 0 0 0 0 48
jcnd=4/48 +33 +2 
* * 
+2 +1 44 44
+4 * 44
+8 * 44 44
+4 * 44 44
+4 * 44
+3 * 44 0 0 1 0 0 1
+3 * 44 0 44 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=44 0x3877c83840 0 
* * 3618 648 565 11 2 0 11 2 0 382 26 39 9
* * 44 44 0 1 1 0 1 1 0 0 0 44
+5 +1 48 48
+4 * 48
+8 * 48 48
+4 * 48
+3 +1 48 48
+1 * 48 48

fn=(140)
0x404eb5 368 48 0 48
+1 * 48
+3 * 48
+4 * 48 0 48 1 0 0 1
+4 * 48 0 48
+4 * 48 0 48 0 0 1 0 0 1
+4 +2 48 48
+4 * 48 48
+4 * 48
+3 * 48
+3 * 48
+4 * 48 0 48
+4 +1 48 48
+5 * 48 0 0 0 0 0 0 0 0 48
jcnd=4/48 +33 +2 
* * 
+2 +1 44 44
+4 * 44
+8 * 44 44
+4 * 44 44
+4 * 44
+3 * 44
+3 * 44 0 44
cob=(2)
cfi=(9)
cfn=(78)
calls=44 0x3877c83840 0 
* * 3618 648 565 0 0 1 0 0 1 382 24 39
* * 44 44 0 0 0 0 0 0 0 0 0 44
+5 +1 48 48
+4 * 48
+8 * 48 48
+4 * 48
+3 +1 48 48
+1 * 48 48

fl=(10)
fn=(204)
0x40404e 726 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+4 * 8 0 8
+4 * 8 8
+4 * 8 8
+3 * 8 8
+4 * 8 0 8
+3 * 8 8
+1 * 8 8

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 4 0 4
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+4 * 4
+3 * 4 0 4
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=4 0x403e26 790 
* * 24 12 8 1 0 0 1
+5 * 4 4
+3 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(220)
calls=4 0x403e26 790 
* * 24 12 8
+5 * 4 4
+3 * 4
+3 * 4
+3 * 4
+4 * 4
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(70)
0x40500c 790 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 +1 80 80
+4 * 80 80
+1 * 80 80

fn=(110)
0x404380 726 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 * 80 0 80
+4 * 80 80
+4 * 80 80
+3 * 80 80
+4 * 80 0 80
+3 * 80 80
+1 * 80 80

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 4 0 4
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+4 * 4
+3 * 4 0 4
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=4 0x40409e 790 
* * 24 12 8 1 0 0 1
+5 * 4 4
+3 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(262)
calls=4 0x40409e 790 
* * 24 12 8
+5 * 4 4
+3 * 4
+3 * 4
+3 * 4
+4 * 4
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(136)
0x404ffe 790 80 0 80 1 0 0 1
+1 * 80
+3 * 80 0 80
+4 +1 80 80
+4 * 80 80
+1 * 80 80

fn=(44)
0x404468 726 80 0 80
+1 * 80
+3 * 80 0 80
+4 * 80 0 80
+4 * 80 80
+4 * 80 80
+3 * 80 80
+4 * 80 0 80 1 0 0 1
+3 * 80 80
+1 * 80 80

fn=(248)
0x4042c6 726 8 0 8
+1 * 8
+3 * 8 0 8
+4 * 8 0 8
+4 * 8 8
+4 * 8 8
+3 * 8 8
+4 * 8 0 8
+3 * 8 8
+1 * 8 8

fn=(220)
0x403e26 790 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 +1 16 16
+4 * 16 16
+1 * 16 16

fn=(262)
0x40409e 790 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 +1 16 16
+4 * 16 16
+1 * 16 16

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 44 0 44 1 0 0 1
+1 * 44
+3 * 44 0 44
+4 * 44 0 44 1 0 0 1
+4 * 44 44
+1 * 44 44

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 44 0 44 1 0 0 1
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 +4 44 44
+4 * 44 44
+4 * 44
+3 * 44
+3 * 44 0 44
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=44 0x40454c -14 
* * 264 88 132 1 0 0 1
+5 +2 44 44
+1 * 44 44

fn=(150)
0x40326c 148 44 0 44
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 * 44 0 44
+4 +3 44 44 0 1 0 0 1
+4 * 44 44
+4 * 44
+3 * 44
+3 * 44 0 44
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=44 0x403d1a -29 
* * 792 264 308 3 0 0 3
+5 +1 44 44
+1 * 44 44

fn=(180)
0x40334a 148 44 0 44
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 * 44 0 44
+4 +3 44 44
+4 * 44 44
+4 * 44
+3 * 44
+3 * 44 0 44
cfn=(182)
calls=44 0x403dcc -29 
* * 792 264 308 2 0 0 2
+5 +1 44 44
+1 * 44 44

fn=(152)
0x403d1a 122 44 0 44 1 0 0 1
+1 * 44
+3 * 44
+4 * 44 0 44
+4 * 44 0 44
+4 +4 44 44
+4 * 44 44
+4 * 44
+3 * 44
+3 * 44 0 44
cfn=(154)
calls=44 0x4044f8 -14 
* * 264 88 132 2 0 0 2
+5 +2 44 44
+1 * 44 44

fn=(184)
0x40454c 112 44 0 44 1 0 0 1
+1 * 44
+3 * 44 0 44
+4 * 44 0 44
+4 * 44 44
+1 * 44 44

fl=(15)
fn=(250)
0x4036de 318 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+2 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +4 4 4
+4 * 4 4
+4 * 4 4 0 1 0 0 1
+4 * 4 4
+4 * 4
+3 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x403799 +21 
* * 
0x403799 +21 4 4 0 1 0 0 1
+4 * 4
+5 * 4
+5 * 4
+3 * 4 0 4
cfi=(2)
cfn=(252)
calls=4 0x404104 1336 
* * 724 268 188 4 0 0 4 0 0 16
+5 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(258)
calls=4 0x4041ce 538 
* * 88 36 28
+5 * 4 0 4 1 0 0 1
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(260)
calls=4 0x4041f3 896 
* * 136 52 40 1 0 0 1
+5 * 4 0 4
+4 +1 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(2)
cfn=(22)
calls=4 0x404236 167 
* * 862 178 177 2 0 2 2 0 2 104 5 8
+5 * 4 0 4
+4 +1 4 4
+4 * 4 0 4
+4 +12 4 4
+4 * 4 0 0 1 0 0 1
+8 * 4 4
+4 * 4
+4 * 4 4
+4 -5 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(3)
cfn=(264)
calls=4 0x4036b1 215 
* * 152 52 56 0 0 1 0 0 1 4
+5 +7 4 0 4
+8 +5 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(40)
calls=4 0x40333c 113 
* * 24 12 8
+5 * 4
+3 * 4
+4 * 4
+3 * 4 0 4 1 0 0 1
cfi=(10)
cfn=(262)
calls=4 0x40409e 790 
* * 24 12 8
+5 * 4 4
+3 * 4 4
+4 * 4 4
+3 -3 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(11)
cfn=(268)
calls=4 0x40426e -88 
* * 1180 368 349 3 0 0 3 0 0 34 1 7
+5 * 4 0 4
+4 +5 4 0 4
+5 +5 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(40)
calls=4 0x40333c 113 
* * 24 12 8
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4
+4 * 4 0 0 1 0 0 1
+3 * 4 0 4
cfi=(10)
cfn=(262)
calls=4 0x40409e 790 
* * 24 12 8
+5 * 4 4
+3 -3 4 4
+4 * 4
+3 * 4
+3 * 4
+3 * 4 0 4
cfi=(11)
cfn=(268)
calls=4 0x40426e -95 
* * 872 304 304 0 0 0 0 0 0 4
+5 * 4 0 4
+4 +16 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(40)
calls=4 0x40333c 113 
* * 24 12 8
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4 4
+4 * 4 4
+3 -1 4 0 0 1 0 0 1
+3 * 4
+3 * 4 0 4
cfi=(14)
cfn=(180)
calls=4 0x40334a 148 
* * 124 40 48
+5 +4 4 4
+4 * 4 4
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4
+3 * 4
+3 * 4
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4 4
+4 -2 4
+3 * 4
+3 * 4 0 4
cfi=(2)
cfn=(188)
calls=4 0x403d98 171 
* * 464 120 80 0 0 0 0 0 0 76 4 8
+5 +3 4 4 0 1 0 0 1
+4 * 4 4
+4 * 4 0 4
+3 +1 4 4
+4 * 4 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+8 * 4 4
+4 * 4
+3 * 4 4
+4 * 4 0 4
+4 +2 4
jump=4 0x4039ba * 
* * 
0x4039ba * 4 0 0 1 0 0 1
+4 * 4 4
+1 * 4 4
+2 * 4 4
+1 * 4 4

fn=(206)
0x4033a0 318 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+2 * 4 0 4
+1 * 4
+4 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +4 4 4
+4 * 4 4
+4 * 4 4 0 1 0 0 1
+4 * 4 4
+4 * 4
+3 * 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x40345e +21 
* * 
0x40345e +21 4 4 0 1 0 0 1
+4 * 4
+5 * 4
+5 * 4
+3 * 4 0 4
cfi=(2)
cfn=(208)
calls=4 0x403e8c 1336 
* * 724 268 188 5 0 0 5 0 0 16
+5 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4 1 0 0 1
cfi=(2)
cfn=(216)
calls=4 0x403f56 538 
* * 88 36 28
+5 * 4 0 4
+4 * 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(10)
cfn=(218)
calls=4 0x403f7b 896 
* * 136 52 40 1 0 0 1
+5 * 4 0 4
+4 +1 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(2)
cfn=(96)
calls=4 0x403fbe 167 
* * 971 192 183 10 7 4 10 7 4 127 13 8
+5 * 4 0 4
+4 +1 4 4
+4 * 4 0 4
+4 +12 4 4 0 1 0 0 1
+4 * 4
+8 * 4 4
+4 * 4
+4 * 4 4
+4 -5 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(3)
cfn=(222)
calls=4 0x403373 215 
* * 152 52 56 0 1 1 0 1 1 4
+5 +7 4 0 4
+8 +5 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(106)
calls=4 0x40325e 113 
* * 24 12 8
+5 * 4
+3 * 4
+4 * 4 0 0 1 0 0 1
+3 * 4 0 4
cfi=(10)
cfn=(220)
calls=4 0x403e26 790 
* * 24 12 8
+5 * 4 4
+3 * 4 4
+4 * 4 4
+3 -3 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(11)
cfn=(228)
calls=4 0x403ff6 -88 
* * 1180 368 349 6 0 3 6 0 3 34 2 7
+5 * 4 0 4
+4 +5 4 0 4
+5 +5 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(106)
calls=4 0x40325e 113 
* * 24 12 8
+5 * 4
+3 * 4 4
+4 * 4 4 0 1 0 0 1
+4 * 4
+4 * 4
+3 * 4 0 4
cfi=(10)
cfn=(220)
calls=4 0x403e26 790 
* * 24 12 8
+5 * 4 4
+3 -3 4 4
+4 * 4
+3 * 4
+3 * 4
+3 * 4 0 4
cfi=(11)
cfn=(228)
calls=4 0x403ff6 -95 
* * 872 304 304 0 0 0 0 0 0 4
+5 * 4 0 4
+4 +16 4 4
+4 * 4
+3 * 4 0 4
cfi=(2)
cfn=(106)
calls=4 0x40325e 113 
* * 24 12 8
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4 4 0 1 0 0 1
+4 * 4 4
+3 -1 4
+3 * 4
+3 * 4 0 4
cfi=(14)
cfn=(150)
calls=4 0x40326c 148 
* * 124 40 48
+5 +4 4 4
+4 * 4 4
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4
+3 * 4
+3 * 4
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4 4
+4 -2 4
+3 * 4
+3 * 4 0 4 1 0 0 1
cfi=(2)
cfn=(158)
calls=4 0x403ce6 171 
* * 464 120 80 0 0 0 0 0 0 76 0 8
+5 +3 4 4
+4 * 4 4
+4 * 4 0 4
+3 +1 4 4
+4 * 4 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+8 * 4 4
+4 * 4
+3 * 4 4
+4 * 4 0 4
+4 +2 4
jump=4 0x40367f * 
* * 
0x40367f * 4 0 0 1 0 0 1
+4 * 4 4
+1 * 4 4
+2 * 4 4
+1 * 4 4

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 14 14 0 1 0 0 1
+6 0 14
+2 0 14 0 0 0 0 0 0 0 0 14
+2 0 14 14

fn=(38) _int_malloc
0x3877c79a00 0 88 0 88 1 0 0 1
+2 0 88
+3 0 88 0 88
+2 0 88 0 88
+2 0 88 0 88 0 0 1 0 0 1
+2 0 88
+3 0 88 0 88
+1 0 88 0 88
+1 0 88
+4 0 88
+4 0 88 0 0 0 0 0 0 0 0 88
+6 0 88
+4 0 88
+6 0 88
+3 0 88
+4 0 88
+4 0 88
+4 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+6 0 88 88 0 1 1 0 1 1
+7 0 88 0 0 0 0 0 0 0 0 88 3
jcnd=2/88 0x3877c79af8 0 
* 0 
+6 0 86
+3 0 86
+3 0 86
+3 0 86
+2 0 86 86 0 0 1 0 0 1
+5 0 86
+3 0 86 0 0 0 0 0 0 0 0 86 19
jcnd=13/86 0x3877c79af8 0 
* 0 
+6 0 73
+4 0 73 73 0 0 1 0 0 1
+4 0 73
+3 0 73
+4 0 73 73 0 0 1 0 0 1
+9 0 73 0 0 0 0 0 0 0 0 73
jcnd=73/73 +3 0 
* 0 
+3 0 73 0 73 1 0 0 1
+5 0 73
+3 0 73
+3 0 73 0 0 0 0 0 0 0 0 73
+2 0 73
jump=73 0x3877c7a2db 0 
* 0 
+46 0 73 73 0 0 1 0 0 1
+4 0 73 0 0 1 0 0 1
+3 0 73
+3 0 73
+2 0 73 0 0 0 0 0 0 0 0 73
+6 0 74 74
+6 0 74
+4 0 74
+2 0 74 0 0 0 0 0 0 0 0 74
+6 0 74
+3 0 74
+4 0 74 74
+1 0 74 74
+1 0 74 74
+2 0 74 74
+2 0 74 74
+2 0 74 74
+2 0 74 74
-14 0 14
+4 0 14 14
+1 0 14 14
+1 0 14 14
+2 0 14 14
+2 0 14 14
+2 0 14 14
+2 0 14 14
+7 0 15
+7 0 15 0 0 1 0 0 1 0 0 15
+2 0 15
+3 0 15
+5 0 15
+3 0 15
+4 0 15 0 15
+4 0 15
+2 0 15
+5 0 15 15 0 0 2 0 0 2
+4 0 15
+3 0 15 0 0 0 0 0 0 0 0 15
jcnd=15/15 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 15 0 0 1 0 0 1
+3 0 15
+3 0 15
+3 0 15
+4 0 15
+3 0 15
+4 0 15 0 15
+5 0 15
+3 0 15 0 15
+4 0 15 0 15
+4 0 15 0 15
+5 0 15
+3 0 15
+3 0 15
+3 0 15
+3 0 15
+4 0 15
+4 0 15 0 0 1 0 0 1
+4 0 15 0 15
+4 0 15
+4 0 15 0 15
+5 0 15 0 15
+5 0 15
+3 0 15
+3 0 15 0 15
+5 0 15
+5 0 15
+3 0 15 0 15
+4 0 15 0 15
+4 0 15
+6 0 15 0 15
+4 0 15 0 15
+5 0 15 0 0 1 0 0 1
+3 0 15
+3 0 15
+3 0 15
jump=15 +87 0 
* 0 
+87 0 15 15 0 1 0 0 1
+4 0 15
+3 0 15 0 0 0 0 0 0 0 0 15 1
jcnd=1/15 0x3877c79ef0 0 
* 0 
+6 0 14 14 0 0 1 0 0 1
+4 0 14 14
+4 0 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14 0 1 1 0 1 1
+7 0 14 0 0 0 0 0 0 0 0 14
+6 0 14
+4 0 14
+7 0 14 0 0 0 0 0 0 0 0 14
+2 0 14
+3 0 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 0x3877c79e28 0 
* 0 
+6 0 1
+3 0 1 0 1
+4 0 1 0 1
+5 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 0x3877c7a090 0 
* 0 
0x3877c79e28 0 14 14 0 1 0 0 1
+4 0 14
+3 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+5 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=1/14 0x3877c79ce1 0 
* 0 
+6 0 13 0 0 1 0 0 1
+3 0 13
+3 0 13
+3 0 13
+7 0 13 0 13
+4 0 13 0 13
+4 0 13
+3 0 13 0 13
+4 0 13 0 13 0 0 12 0 0 12
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 4
jcnd=10/13 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+7 0 3 0 3 1 0 0 1
+4 0 3
+3 0 3
+3 0 3
+3 0 3
+4 0 3
+3 0 3
+4 0 3
+3 0 3
+3 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3
+3 0 3 0 3
cfn=(104)
calls=3 0x3877c77180 0 
* 0 12 6 0 0 0 0 0 0 0 3
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 13
+3 0 13
jump=13 0x3877c79ae3 0 
* 0 
+55 0 1 0 0 1 0 0 1
+7 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1 0 1 0 0 1
+4 0 1
+3 0 1
+3 0 1
+2 0 1
+4 0 1
+3 0 1
+3 0 1
+2 0 1
+2 0 1
+2 0 1
+2 0 1 1 0 0 1 0 0 1
+8 0 1
+5 0 1
+5 0 1
+2 0 1 0 0 0 0 0 0 0 0 1
-2 0 2
+2 0 2 0 0 0 0 0 0 0 0 2
+2 0 3
+2 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=2/3 +64 0 
* 0 
+2 0 1
+8 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
-6 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+2 0 2
+2 0 2 2
+8 0 2
+2 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 -20 0 
* 0 
+2 0 1
+2 0 1
+5 0 1
+3 0 1
+3 0 1
+2 0 1
+2 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1
+2 0 1
+4 0 1
+2 0 1
+2 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 -8 0 
* 0 
-8 0 3
+4 0 3
+2 0 3
+2 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=1/3 -8 0 
* 0 
-2 0 2 0 0 1 0 0 1
+2 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 -8 0 
* 0 
+2 0 3 3 0 0 2 0 0 2
+4 0 3 0 0 1 0 0 1
+3 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=1/3 0x3877c7a1cf 0 
* 0 
+6 0 2
+2 0 2
+4 0 2
+2 0 2
+2 0 2
+2 0 2 0 2
+8 0 2
jump=2 0x3877c79f30 0 
* 0 
0x3877c7a090 0 1 0 0 1 0 0 1
+7 0 1 0 1
+6 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 1 1 0 1 1 0 1 1
+4 0 1 1 0 0 1 0 0 1
+4 0 1
+3 0 1 1
+4 0 1
+4 0 1
+3 0 1
+3 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1 0 1 0 0 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+5 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 1 0 1 0 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 0 1
+5 0 1
+7 0 1 0 0 0 0 0 0 0 0 1 1
+2 0 1 0 1 0 0 1 0 0 1
+8 0 1 0 1 1 0 0 1
+8 0 1
+7 0 1 0 1 0 0 1 0 0 1
+4 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
jump=1 +71 0 
* 0 
+40 0 73 0 0 1 0 0 1
+3 0 73
jump=73 0x3877c79abc 0 
* 0 
+28 0 1
+4 0 1 0 0 1 0 0 1
+3 0 1
+3 0 1 0 1
cfn=(104)
calls=1 0x3877c77180 0 
* 0 4 2 0 1 0 0 1 0 0 1
+5 0 1
+3 0 1
jump=1 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 88 0 88 1 0 0 1
+5 0 88 0 88
+5 0 88
+3 0 88 0 88
+5 0 88
+4 0 88 88 0 0 1 0 0 1
+7 0 88 88 0 0 1 0 0 1
+3 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+6 0 88 88 0 0 1 0 0 1
+7 0 88 88 0 1 1 0 1 1
+4 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+2 0 88 88 0 0 1 0 0 1
+3 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
jcnd=88/88 +97 0 
* 0 
+18 0 88
+3 0 88
+3 0 88 0 88
cfn=(38)
calls=88 0x3877c79a00 0 
* 0 6430 1230 939 25 14 17 25 14 17 831 36
+5 0 88
+3 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+2 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+2 0 88
+3 0 88 0 0 0 0 0 0 0 0 88 1
+2 0 88 88
+7 0 88 0 0 0 0 0 0 0 0 88
jcnd=88/88 +13 0 
* 0 
+13 0 88 0 88
+2 0 88 0 0 0 0 0 0 0 0 88 1
+6 0 88
+3 0 88 88
+4 0 88 88
+5 0 88 88
+5 0 88
+4 0 88 88
+1 0 88 0 0 1 0 0 1
+5 0 88 88 0 0 1 0 0 1
+7 0 88 0 0 0 0 0 0 0 0 88
jcnd=88/88 +14 0 
* 0 
+14 0 88 0 88 1 0 0 1
+3 0 88 0 0 0 0 0 0 0 0 88
+6 0 88
jump=88 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 88 0 88 1 0 0 1
+2 0 88
+3 0 88
+3 0 88 0 88
+2 0 88
+3 0 88 0 88
+1 0 88
+3 0 88 0 88
+1 0 88
+3 0 88
+4 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+6 0 88
+4 0 88
+3 0 88 0 0 0 0 0 0 0 0 88 7
jcnd=10/88 0x3877c838d1 0 
* 0 
+2 0 78
+3 0 78
+3 0 78
+3 0 78
+3 0 78
+3 0 78 0 0 0 0 0 0 0 0 78
jcnd=78/78 +41 0 
* 0 
+41 0 78 0 0 1 0 0 1
+3 0 78 0 0 0 0 0 0 0 0 78
jcnd=78/78 0x3877c839c0 0 
* 0 
+24 0 78
+3 0 78
+4 0 78
+3 0 78
+3 0 78
+3 0 78
+3 0 78
+3 0 78 0 0 0 0 0 0 0 0 78 34
jcnd=42/78 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 46
+10 0 46 46 0 0 1 0 0 1
+3 0 46
+4 0 46 0 46
+3 0 46
+4 0 46
+4 0 46 0 0 0 0 0 0 0 0 46
jcnd=46/46 -18 0 
* 0 
-18 0 194 194
+3 0 194
+4 0 194 0 194
+3 0 194
+4 0 194
+4 0 194 0 0 0 0 0 0 0 0 194 7
jcnd=148/194 -18 0 
* 0 
+2 0 88
+4 0 88
+3 0 88 88
+1 0 88 88
+1 0 88 88
+2 0 88 88 0 1 0 0 1
+2 0 88 88
0x3877c839c0 0 78 0 0 1 0 0 1
+3 0 78
+3 0 78
+3 0 78
+4 0 78 0 78 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=78 0x3877c89b20 0 
* 0 2078 616 460 6 1 0 6 1 0 104 2 78 9
+5 0 78
jump=78 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 88 88 0 1 1 0 1 1
+7 0 88 88 0 0 1 0 0 1
+3 0 88
+3 0 88 0 0 1 0 0 1 0 0 88
+6 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+6 0 88 88
+4 0 88
+4 0 88
+2 0 88 0 0 0 0 0 0 0 0 88
+2 0 88
+2 0 88
+7 0 88 0 0 0 0 0 0 0 0 88
jcnd=88/88 +14 0 
* 0 
+14 0 88
+2 0 88
cfn=(170) _int_free
calls=88 0x3877c78650 0 
* 0 6072 1408 880 5 0 0 5 0 0 1144

fn=(170)
0x3877c78650 0 88 0 88 1 0 0 1
+2 0 88 0 88
+2 0 88 0 88
+2 0 88
+3 0 88 0 88
+2 0 88 0 88
+1 0 88 0 88
+1 0 88
+3 0 88
+4 0 88 88
+4 0 88 0 88
+4 0 88
+3 0 88
+4 0 88
+3 0 88
+3 0 88
+3 0 88 0 0 1 0 0 1 0 0 88
+6 0 88
+4 0 88 0 0 0 0 0 0 0 0 88
+6 0 88
+4 0 88 0 0 0 0 0 0 0 0 88
+6 0 88 88
+7 0 88 0 0 0 0 0 0 0 0 88
+6 0 88
+4 0 88 88
+4 0 88
+4 0 88 0 0 0 0 0 0 0 0 88
+6 0 88
+4 0 88 88
+7 0 88 0 0 1 0 0 1 0 0 88
+6 0 88 88
+6 0 88
+2 0 88 0 0 0 0 0 0 0 0 88
+6 0 88 88
+9 0 88 0 0 0 0 0 0 0 0 88
jcnd=88/88 +3 0 
* 0 
+3 0 88 0 88
+5 0 88
+3 0 88
+3 0 88
+2 0 88 88
+5 0 88
+5 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+6 0 88 88 0 1 0 0 1
+4 0 88
+6 0 88
+2 0 88
+4 0 88
jump=88 +20 0 
* 0 
+20 0 88
+3 0 88
+4 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
jcnd=88/88 +14 0 
* 0 
+14 0 88 0 88
+4 0 88 0 0 1 0 0 1
+3 0 88 88
+9 0 88 0 0 0 0 0 0 0 0 88
jcnd=88/88 +3 0 
* 0 
+3 0 88 0 88
+4 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
+2 0 88
+3 0 88 0 0 0 0 0 0 0 0 88
jcnd=88/88 +11 0 
* 0 
+11 0 88
+4 0 88 88
+1 0 88 88
+1 0 88 88
+2 0 88 88
+2 0 88 88
+2 0 88 88
+2 0 88 88

fn=(284)
0x3877c89b20 0 78 0 0 1 0 0 1
+7 0 78
+3 0 78
+3 0 78 78 0 0 1 0 0 1
+4 0 78
+4 0 78 0 0 0 0 0 0 0 0 0 0 78 9
jump=8 0x3877c89be8 0 
* 0 
jump=10 0x3877c89bd0 0 
* 0 
jump=8 0x3877c89bb8 0 
* 0 
jump=8 +11 0 
* 0 
jump=8 0x3877c89c48 0 
* 0 
jump=10 0x3877c89c30 0 
* 0 
jump=8 0x3877c89c18 0 
* 0 
jump=18 0x3877c89c00 0 
* 0 
+11 0 8 8
+3 0 8
+4 0 8
+4 0 8 8
+4 0 8
+4 0 8 0 8
+4 0 8
+9 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
+4 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c89c60 0 
* 0 
-40 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42
jcnd=42/42 0x3877c89c60 0 
* 0 
-32 0 10 10
+4 0 10 0 10
+4 0 10 10
+4 0 10 0 10
+4 0 10 10
+4 0 10 0 10
+4 0 10
+4 0 10
+4 0 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 0x3877c89c60 0 
* 0 
-24 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
+4 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c89c60 0 
* 0 
-16 0 18 18 0 1 0 0 1
+4 0 18 0 18
+4 0 18 0 0 1 0 0 1
+4 0 18
+4 0 18 0 0 0 0 0 0 0 0 18 2
jcnd=10/18 0x3877c89c60 0 
* 0 
+6 0 8
+4 0 8 8
+3 0 8 0 8
+3 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
jump=8 -80 0 
* 0 
-30 0 8 8
+3 0 8 0 8
+3 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
jump=8 -80 0 
* 0 
-24 0 10 10
+4 0 10 0 10
+4 0 10 10
+4 0 10 0 10
+4 0 10 10
+4 0 10 0 10
+4 0 10
jump=10 -80 0 
* 0 
-16 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
jump=8 -80 0 
* 0 
+8 0 8 8
+3 0 8
+4 0 8 0 0 1 0 0 1
+4 0 8
+4 0 8
jump=8 -39 0 
* 0 
+9 0 10
+3 0 10 0 0 0 0 0 0 0 0 10
+6 0 10 10
+3 0 10
+4 0 10
jump=10 -72 0 
* 0 
+8 0 8
+4 0 8 8
+3 0 8 0 0 0 0 0 0 0 0 8
+2 0 8
+4 0 8
jump=8 -99 0 
* 0 
+11 0 18 18 0 1 0 0 1
+3 0 18
+4 0 18
+4 0 18
+4 0 18
jump=18 0x3877c89b78 0 
* 0 
+9 0 8 8
+3 0 8
+4 0 8
+4 0 8
+4 0 8
jump=8 0x3877c89b70 0 
* 0 
+9 0 10 10
+3 0 10
+4 0 10
+4 0 10
+4 0 10
jump=10 0x3877c89b68 0 
* 0 
+9 0 8 8
+3 0 8
+4 0 8
+4 0 8
+4 0 8
jump=8 0x3877c89b60 0 
* 0 
+9 0 78 0 78 1 0 0 1
+3 0 78 78

totals: 129424 45141 32592 207 37 32 207 37 32 5439 161 518 9
