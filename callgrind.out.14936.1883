version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1883


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2428016139 - 2428706916
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 978 0 0 1 0 0 1
+3 0 978 0 0 0 0 0 0 0 0 978
+2 0 978
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=978 0x3877c7b8b0 0 
* 0 117059 30713 16547 19 4 0 19 4 0 28835 484
* 0 978 978 0 1 1 0 1 1 0 0 0 978

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 978 0 978 1 0 0 1
+1 0 978
+5 0 978
+3 0 978 0 978
+1 0 978
+4 0 978 0 0 1 0 0 1
+3 0 978
+4 0 978
+3 0 978 0 978 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=978 0x3877c7aa50 0 
* 0 301011 42525 44009 45 40 49 45 40 49 52253 2058
* 0 978 978 0 1 1 0 1 1 0 0 0 978
+5 0 978
+3 0 978 0 0 0 0 0 0 0 0 978
jcnd=978/978 +96 0 
* 0 
+96 0 978 0 0 1 0 0 1
+4 0 978 978
+1 0 978 978
+1 0 978 978

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 964 0 964 1 0 0 1
+1 * 964
+3 * 964 0 964
+4 +1 964 964
+4 * 964 964
+1 * 964 964

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 964 0 964 1 0 0 1
+1 * 964
+3 * 964
+4 * 964 0 964
+4 +1 964
+4 * 964
+3 * 964 0 964 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=964 0x40500c 790 
* * 5784 2892 1928 1 0 0 1
+5 * 964 964
+3 * 964 964
+1 * 964 964

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 552 0 552
+1 * 552
+3 * 552 0 552
+4 +1 552 552
+4 * 552 552
+1 * 552 552

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 964 0 964 1 0 0 1
+1 * 964
+3 * 964 0 964
+4 +1 964 964 0 1 0 0 1
+4 * 964 964
+1 * 964 964

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 552 0 552
+1 * 552
+3 * 552 0 552 0 0 1 0 0 1
+4 +1 552 552
+4 * 552 552
+1 * 552 552

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 964 0 964 1 0 0 1
+1 * 964
+3 * 964
+4 * 964 0 964
+4 +1 964
+4 * 964
+3 * 964 0 964
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=964 0x404ffe 790 
* * 5784 2892 1928 1 0 0 1
+5 * 964 964
+3 * 964 964
+1 * 964 964

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 482 0 482
+1 * 482
+3 * 482 0 482
+4 * 482 0 482
+4 * 482 482
+4 * 482 482
+1 * 482 482

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(28) __gnu_cxx::new_allocator<int>::max_size() const
0x404992 113 503 0 503 1 0 0 1
+1 * 503
+3 * 503 0 503
+4 +1 503
+10 * 503 503
+1 * 503 503

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 482 0 482
+1 * 482
+3 * 482 0 482
+4 * 482 482
+1 * 482 482

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 241 0 241
+1 * 241
+3 * 241
+4 * 241 0 241
+4 * 241 0 241
+4 * 241 0 241
+4 +1 241 241
+4 * 241
+3 * 241
+5 * 241 0 241
cfi=(16)
cfn=(226)
calls=241 0x402d61 -20 
* * 1687 723 723
+5 * 241
+3 * 241 0 0 0 0 0 0 0 0 241
+2 * 241 241
+4 * 241 241 0 0 16 0 0 16
+2 * 241 0 241 0 0 4 0 0 4
+2 * 241 241
+1 * 241 241

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 489 0 489
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 * 489 0 489
+4 +1 489 489
+4 * 489
+3 * 489 0 489
cob=(5)
cfi=(8)
cfn=(164)
calls=489 0x387e4bb2f0 0 
* * 61569 16101 8692 21 4 0 21 4 0 15134 198 489
* * 489 489 0 1 1 0 1 1 0 0 0 489
+5 * 489 489
+1 * 489 489

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 489 0 489
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 * 489 0 489
+4 +1 489 489
+4 * 489
+3 * 489 0 489
cob=(5)
cfi=(8)
cfn=(164)
calls=489 0x387e4bb2f0 0 
* * 59402 15590 7855 0 1 0 0 1 0 14679 286 489
* * 489 489 0 0 0 0 0 0 0 0 0 489
+5 * 489 489
+1 * 489 489

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 489 0 489 1 0 0 1
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 * 489 0 489
+4 +2 489 489
+4 * 489
+3 * 489 0 489
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=489 0x4048de +12 
* * 2934 978 978 1 0 0 1
+5 * 489 489
+4 * 489 0 0 1 0 0 1
+3 * 489
+2 * 489 0 0 0 0 0 0 0 0 489
jcnd=489/489 +7 +3 
* * 
+7 +3 489 489
+4 * 489
+4 * 489
+3 * 489 0 489
cob=(5)
cfi=(8)
cfn=(32)
calls=489 0x387e4bd0b0 0 
* * 160722 23893 22721 30 15 30 30 15 30 27386 986 489
* * 489 489 0 0 0 0 0 0 0 0 0 489
+5 +1 489 489
+1 * 489 489

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 482 0 482 1 0 0 1
+1 * 482
+3 * 482 0 482 0 0 1 0 0 1
+4 * 482 0 482
+4 * 482 482
+1 * 482 482

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 482 0 482 1 0 0 1
+1 * 482
+3 * 482 0 482
+4 * 482 0 482
+4 * 482 482
+1 * 482 482

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 482 0 482
+1 * 482
+3 * 482 0 482
+4 * 482 482
+1 * 482 482

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 489 0 489 1 0 0 1
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 * 489 0 489 1 0 0 1
+4 +2 489 489
+4 * 489
+3 * 489 0 489
cfn=(28)
calls=489 0x404992 +12 
* * 2934 978 978 1 0 0 1
+5 * 489 489
+4 * 489
+3 * 489
+2 * 489 0 0 0 0 0 0 0 0 489
jcnd=489/489 +7 +3 
* * 
+7 +3 489 489
+4 * 489
+4 * 489
+3 * 489 0 489
cob=(5)
cfi=(8)
cfn=(32)
calls=489 0x387e4bd0b0 0 
* * 155937 22544 24222 19 26 20 19 26 20 25845 1072 489
* * 489 489 0 1 1 0 1 1 0 0 0 489
+5 +1 489 489
+1 * 489 489

fn=(102)
0x4048de 113 503 0 503 1 0 0 1
+1 * 503
+3 * 503 0 503
+4 +1 503
+10 * 503 503
+1 * 503 503

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 241 0 241
+1 * 241
+3 * 241
+4 * 241 0 241
+4 * 241 0 241
+4 * 241 0 241
+4 +1 241 241
+4 * 241
+3 * 241
+5 * 241 0 241
cfi=(16)
cfn=(226)
calls=241 0x402d61 -20 
* * 1687 723 723
+5 * 241
+3 * 241 0 0 0 0 0 0 0 0 241
+2 * 241 241
+4 * 241 241 0 0 16 0 0 16
+2 * 241 0 241 0 0 7 0 0 7
+2 * 241 241
+1 * 241 241

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +2 482 482
+4 * 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=482 0x404484 107 
* * 213520 69786 66898 25 3 3 25 3 3 7804 570 960 120
+5 * 482 482
+1 * 482 482

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +2 482 482 0 1 0 0 1
+4 * 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=482 0x404a36 450 
* * 200024 64966 62078 24 3 3 24 3 3 7804 570 960 120
+5 * 482 482
+1 * 482 482

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +2 482 482
+4 * 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=482 0x40439c 107 
* * 213520 69786 66898 7 1 5 7 1 5 7804 488 960
+5 * 482 482
+1 * 482 482

fn=(116)
0x40439c 107 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +10 482 482
+4 * 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=482 0x4047d7 -26 
* * 206772 67376 64488 7 1 5 7 1 5 7804 488 960
+5 +1 482 482
+1 * 482 482

fn=(118)
0x4047d7 91 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +2 482 482
+4 * 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=482 0x4049e2 450 
* * 200024 64966 62078 7 1 5 7 1 5 7804 488 960
+5 * 482 482
+1 * 482 482

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 4 2 0 4 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 4 2 0 4 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 4 1 0 4 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +10 482 482
+4 * 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(52)
calls=482 0x404829 -26 
* * 206772 67376 64488 25 3 3 25 3 3 7804 570 960 120
+5 +1 482 482
+1 * 482 482

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 4 2 0 4 76 3 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 1956 0 1956 1 0 0 1
+1 * 1956
+3 * 1956 0 1956 0 0 1 0 0 1
+4 +1 1956 1956
+4 * 1956 1956 0 1 1 0 1 1
+4 * 1956
+3 * 1956 1956
+4 * 1956 1956
+3 * 1956
+3 * 1956
+3 * 1956
+4 * 1956 1956
+1 * 1956 1956

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 +2 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=482 0x404236 -14 
* * 174329 28512 29701 25 22 15 25 22 15 26518 1034 964
+5 * 482 482
+4 * 482 0 482
+3 +1 482 482
+4 * 482 482 0 1 0 0 1
+3 * 482 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+3 * 482 482
+4 * 482
+4 * 482
+3 * 482 482
+4 * 482 0 482
+4 +1 482 482
+1 * 482 482

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 +2 482 482
+4 * 482 482 0 1 0 0 1
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=482 0x403fbe -14 
* * 178262 29614 28011 23 8 27 23 8 27 27879 936 964
+5 * 482 482
+4 * 482 0 482
+3 +1 482 482
+4 * 482 482
+3 * 482 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+3 * 482 482
+4 * 482
+4 * 482
+3 * 482 482
+4 * 482 0 482
+4 +1 482 482
+1 * 482 482

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 241 0 241
+1 * 241
+3 * 241 0 0 1 0 0 1
+4 * 241 0 241
+4 * 241 0 241
+4 +2 241 241
+4 * 241 241
+4 * 241 241
+4 * 241 241
+4 * 241
+3 * 241 0 0 0 0 0 0 0 0 241
jcnd=7/241 +51 +10 
* * 
+2 +3 234 234
+4 * 234 234
+4 * 234 234
+4 -1 234 234
+4 * 234
+3 * 234
+3 * 234 0 234
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=234 0x4036b1 215 
* * 8892 3042 3276 0 15 4 0 15 4 234
+5 +2 234 234
+4 * 234 234
+4 * 234
+4 * 234 234
+4 * 234 0 234
+4 * 234
jump=234 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10156 3133 2717 18 6 12 18 6 12 601 56 41
+5 +2 241 241
+1 * 241 241

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 985 0 985 1 0 0 1
+1 * 985
+3 * 985 0 985 1 0 0 1
+4 +1 985 985
+4 * 985 985
+1 * 985 985

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+3 * 482 0 482
+4 * 482
+4 * 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=482 0x404380 726 
* * 4820 2410 1928
+5 * 482 482
+4 * 482 482
+1 * 482 482

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 482 0 482
+1 * 482
+3 * 482 0 482
+1 * 482
+4 * 482 0 482 1 0 0 1
+4 +2 482 482
+4 * 482
+3 * 482 0 482
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=482 0x40325e 113 
* * 2892 1446 964
+5 * 482
+3 * 482 482
+4 * 482 482
+4 * 482 482
+4 * 482 482
+3 -1 482
+3 * 482
+3 * 482 0 482
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=482 0x40326c 148 
* * 14942 4820 5784 4 0 0 4
+5 +1 482 482
+4 * 482
+3 * 482 0 482
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=482 0x4031ec 159 
* * 98926 29906 19686 25 5 0 25 5 0 15454 194 964
+5 * 482
jump=482 +28 * 
* * 
+28 * 482 0 0 1 0 0 1
+4 * 482 482
+1 * 482 482
+1 * 482 482

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 489 0 489 1 0 0 1
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 * 489 0 489
+4 +2 489 489
+5 * 489 0 0 0 0 0 0 0 0 489
+2 +1 489 489
+4 * 489 489
+4 * 489 489
+4 * 489
+3 * 489
+3 * 489 0 489
cfi=(5)
cfn=(160)
calls=489 0x4044d6 -65 
* * 67437 18057 11137 22 5 0 22 5 0 15134 198 978
+5 +1 489 489
+1 * 489 489

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 482 0 482
+1 * 482
+3 * 482 0 482
+1 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=482 0x4043ca -45 
* * 17352 6266 6748 4 0 4 4 0 4
+5 +1 482 482 0 1 0 0 1
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(20)
calls=482 0x404412 +43 
* * 186379 34296 33075 26 22 15 26 22 15 26518 1034 964
+5 * 482
jump=482 +28 * 
* * 
+28 * 482
+4 * 482 482
+1 * 482 482
+1 * 482 482

fn=(14)
0x4043ca 90 482 0 482 1 0 0 1
+1 * 482
+3 * 482
+4 * 482 0 482 0 0 1 0 0 1
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=482 0x404804 +24 
* * 8676 2892 3374 2 0 1 2 0 1
+5 * 482 482
+4 * 482 0 482 0 0 2 0 0 2
+7 * 482 482
+4 * 482 0 482 1 0 0 1
+8 * 482 482
+4 * 482 0 482
+8 +1 482 482
+1 * 482 482

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 482 0 482 1 0 0 1
+1 * 482
+3 * 482 0 482
+2 * 482 0 482
+2 * 482 0 482
+1 * 482 0 0 1 0 0 1
+4 * 482 0 482
+4 * 482 0 482
+4 +2 482 482
+4 * 482
+3 * 482 0 482
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=482 0x4039fc 117 
* * 2892 1446 964 2 0 0 2
+5 * 482
+3 * 482 0 482
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=482 0x4039ed -88 
* * 2892 1446 964
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(2)
calls=482 0x402d74 645 
* * 6266 2892 964
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482
+3 * 482
+3 * 482 0 482 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=482 0x403a0a 134 
* * 218268 45038 41507 30 8 27 30 8 27 27879 936 964
+5 +4 482 482
+4 * 482
+3 * 482 0 482
cfn=(106)
calls=482 0x40325e 113 
* * 2892 1446 964 1 0 0 1
+5 * 482
+3 * 482 482
+4 * 482 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=482 0x403a98 565 
* * 12050 4820 3856 2 0 0 2
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(112)
calls=482 0x403a68 547 
* * 12050 4820 3856
+5 * 482
+3 * 482
+3 * 482
+3 * 482
+3 * 482 0 482
cfi=(11)
cfn=(114)
calls=482 0x403ac9 -60 
* * 220750 72196 69790 7 1 5 7 1 5 7804 488 960
+5 -3 482 482
+4 * 482 0 482
+4 * 482
jump=482 +28 +4 
* * 
+28 +4 482
+4 * 482 482
+1 * 482 482
+2 * 482 482
+2 * 482 482
+1 * 482 482

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 489 0 489 1 0 0 1
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 * 489 0 489
+4 +2 489 489
+5 * 489 0 0 0 0 0 0 0 0 489 7
+2 +1 489 489
+4 * 489 489
+4 * 489 489
+4 * 489
+3 * 489
+3 * 489 0 489
cfi=(5)
cfn=(190)
calls=489 0x40452a -65 
* * 65270 17546 10300 0 1 0 0 1 0 14679 286 978
+5 +1 489 489
+1 * 489 489

fn=(22)
0x404236 167 489 0 489 1 0 0 1
+1 * 489
+3 * 489
+4 * 489 0 489 1 0 0 1
+4 * 489 0 489
+4 0 489 489
+5 0 489 0 0 0 0 0 0 0 0 489
+2 0 489 489
+4 0 489 489
+4 0 489
+5 0 489
+3 0 489
+3 0 489 0 489
fi=(6) ???
cfi=(5)
cfn=(26)
calls=489 0x404730 99 
* 0 168651 26456 28134 23 27 20 23 27 20 26334 1072 978
+5 0 489
fi=(6)
jump=489 +7 0 
* 0 
+7 0 489 489
+1 0 489 489

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 482 0 482 1 0 0 1
+1 * 482
+3 * 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+4 * 482 0 482
+4 * 482
+4 * 482 0 0 1 0 0 1
+4 * 482
+3 * 482
+3 * 482 0 482
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=482 0x404468 726 
* * 4820 2410 1928 1 0 0 1
+5 * 482 482
+4 * 482 482
+1 * 482 482

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+3 * 482 0 482
+4 * 482
+4 * 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfi=(10)
cfn=(44)
calls=482 0x404468 726 
* * 4820 2410 1928
+5 * 482 482
+4 * 482 482
+1 * 482 482

fn=(86)
0x403a0a 134 482 0 482
+1 * 482
+3 * 482 0 482
+1 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=482 0x4042e2 -45 
* * 17352 6266 6748 5 0 0 5
+5 +1 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482 1 0 0 1
cfn=(94)
calls=482 0x40432a +43 
* * 190312 35398 31385 24 8 27 24 8 27 27879 936 964
+5 * 482
jump=482 +28 * 
* * 
+28 * 482
+4 * 482 482
+1 * 482 482
+1 * 482 482

fn=(88)
0x4042e2 90 482 0 482 1 0 0 1
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=482 0x4047b2 +24 
* * 8676 2892 3374 3 0 0 3
+5 * 482 482
+4 * 482 0 482
+7 * 482 482
+4 * 482 0 482
+8 * 482 482
+4 * 482 0 482
+8 +1 482 482
+1 * 482 482

fn=(156)
0x4031ec 159 482 0 482 1 0 0 1
+1 * 482
+3 * 482 0 482
+1 * 482
+4 * 482 0 482
+4 +2 482 482
+4 * 482 482 0 1 0 0 1
+4 * 482
+3 * 482 482
+4 * 482 482
+3 * 482
+3 * 482
+3 * 482
+4 * 482
+3 * 482 482
+4 * 482 482
+3 -1 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(158)
calls=482 0x403ce6 +11 
* * 74344 20748 13420 22 5 0 22 5 0 15454 194 964
+5 +1 482 482
+4 * 482
+3 * 482 0 482
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=482 0x4031b8 -82 
* * 11086 3856 3856 1 0 0 1
+5 * 482
jump=482 +28 * 
* * 
+28 * 482
+4 * 482 482
+1 * 482 482
+1 * 482 482

fn=(172)
0x4031b8 79 482 0 482 1 0 0 1
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 482
+4 * 482
+3 * 482 0 482
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=482 0x403ccc +42 
* * 6748 2410 2410
+5 * 482 482
+1 * 482 482

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 992 0 992 1 0 0 1
+1 * 992
+3 * 992 0 992
+4 +1 992 992
+4 * 992 992 0 0 2 0 0 2
+4 * 992
+3 * 992 992
+4 * 992 992
+3 * 992
+3 * 992
+3 * 992
+4 * 992 992
+1 * 992 992

fn=(106)
0x40325e 113 985 0 985 1 0 0 1
+1 * 985
+3 * 985 0 985
+4 +1 985 985
+4 * 985 985
+1 * 985 985

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 496 0 496 1 0 0 1
+1 * 496
+3 * 496 0 496 0 0 1 0 0 1
+4 +1 496 496
+4 * 496 496
+1 * 496 496

fn=(82)
0x4039fc 117 496 0 496 1 0 0 1
+1 * 496
+3 * 496 0 496 1 0 0 1
+4 +1 496 496
+4 * 496 496
+1 * 496 496

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 241 0 241
+1 * 241
+3 * 241
+4 * 241 0 241
+4 * 241 0 241
+4 +2 241 241
+4 * 241 241
+4 * 241 241
+4 * 241 241
+4 * 241
+3 * 241 0 0 0 0 0 0 0 0 241 8
jcnd=7/241 +51 +10 
* * 
+2 +3 234 234
+4 * 234 234
+4 * 234 234
+4 -1 234 234
+4 * 234
+3 * 234
+3 * 234 0 234
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=234 0x403373 215 
* * 8892 3042 3276 0 15 3 0 15 3 234
+5 +2 234 234
+4 * 234 234
+4 * 234
+4 * 234 234
+4 * 234 0 234
+4 * 234
jump=234 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 10975 3363 2903 35 8 7 35 8 7 772 58 41
+5 +2 241 241
+1 * 241 241

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 482 0 482 1 0 0 1
+1 * 482
+3 * 482 0 482
+2 * 482 0 482
+2 * 482 0 482
+1 * 482
+4 * 482 0 482 1 0 0 1
+4 * 482 0 482
+4 +2 482 482
+4 * 482
+3 * 482 0 482
cfn=(6)
calls=482 0x403b08 117 
* * 2892 1446 964 1 0 1 1 0 1
+5 * 482
+3 * 482 0 482
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=482 0x403afa -88 
* * 2892 1446 964 1 0 0 1
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(10)
calls=482 0x402f54 645 
* * 6266 2892 964 1 1 0 1 1
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482
+3 * 482
+3 * 482 0 482
cfn=(12)
calls=482 0x403b16 134 
* * 214335 43936 43197 31 22 19 31 22 19 26518 1034 964
+5 +4 482 482 0 1 0 0 1
+4 * 482
+3 * 482 0 482
cfn=(40)
calls=482 0x40333c 113 
* * 2892 1446 964 2 0 0 2
+5 * 482
+3 * 482 482
+4 * 482 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(42)
calls=482 0x403ba4 565 
* * 12050 4820 3856 3 0 0 3
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(46)
calls=482 0x403b74 547 
* * 12050 4820 3856
+5 * 482
+3 * 482
+3 * 482
+3 * 482
+3 * 482 0 482 1 0 0 1
cfi=(11)
cfn=(48)
calls=482 0x403bd5 -60 
* * 220750 72196 69790 26 3 3 26 3 3 7804 570 960 120
+5 -3 482 482
+4 * 482 0 482
+4 * 482
jump=482 +28 +4 
* * 
+28 +4 482
+4 * 482 482
+1 * 482 482
+2 * 482 482
+2 * 482 482
+1 * 482 482

fn=(108)
0x403a98 565 482 0 482 1 0 0 1
+1 * 482
+3 * 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+4 * 482 0 482
+4 * 482
+4 * 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfi=(10)
cfn=(110)
calls=482 0x404380 726 
* * 4820 2410 1928 1 0 0 1
+5 * 482 482
+4 * 482 482
+1 * 482 482

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 482 0 482
+1 * 482
+3 * 482 0 482
+1 * 482
+4 * 482 0 482 1 0 0 1
+4 +2 482 482
+4 * 482
+3 * 482 0 482
cfn=(40)
calls=482 0x40333c 113 
* * 2892 1446 964
+5 * 482
+3 * 482 482
+4 * 482 482
+4 * 482 482
+4 * 482 482
+3 -1 482
+3 * 482
+3 * 482 0 482
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=482 0x40334a 148 
* * 14942 4820 5784 2 0 0 2
+5 +1 482 482
+4 * 482
+3 * 482 0 482
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=482 0x4032ca 159 
* * 96726 29378 18846 3 1 0 3 1 0 14990 278 964
+5 * 482
jump=482 +28 * 
* * 
+28 * 482 0 0 1 0 0 1
+4 * 482 482
+1 * 482 482
+1 * 482 482

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 489 0 489 1 0 0 1
+1 * 489 0 0 1 0 0 1
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 0 489 489
+5 0 489 0 0 0 0 0 0 0 0 489
+2 0 489 489
+4 0 489 489
+4 0 489
+5 0 489
+3 0 489
+3 0 489 0 489
fi=(6)
cfi=(5)
cfn=(100)
calls=489 0x40461a 99 
* 0 173436 27805 26633 33 15 30 33 15 30 27875 986 978
+5 0 489
fi=(6)
jump=489 +7 0 
* 0 
+7 0 489 489
+1 0 489 489

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 88688 0 88688
+1 * 88688
+3 * 88688 0 88688
+4 * 88688 0 88688
+4 +1 88688 88688
+4 * 88688 88688
+3 * 88688 88688
+4 * 88688
+4 * 88688
+3 * 88688 88688
+1 * 88688 88688

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 88688 0 88688
+1 * 88688
+3 * 88688 0 88688 1 0 0 1
+4 * 88688 0 88688
+4 +1 88688 88688
+4 * 88688 88688
+3 * 88688 88688
+4 * 88688
+4 * 88688
+3 * 88688 88688
+1 * 88688 88688

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 482
+4 * 482
+3 * 482 0 482
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=482 0x403d7e +42 
* * 6748 2410 2410 1 0 0 1
+5 * 482 482
+1 * 482 482

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 482 0 482 1 0 0 1
+1 * 482
+3 * 482 0 482
+1 * 482
+4 * 482 0 482
+4 +2 482 482
+4 * 482 482
+4 * 482
+3 * 482 482
+4 * 482 482
+3 * 482
+3 * 482
+3 * 482
+4 * 482
+3 * 482 482
+4 * 482 482
+3 -1 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(188)
calls=482 0x403d98 +11 
* * 72144 20220 12580 1 1 0 1 1 0 14990 278 964
+5 +1 482 482
+4 * 482
+3 * 482 0 482
cfn=(192)
calls=482 0x403296 -82 
* * 11086 3856 3856 1 0 0 1
+5 * 482
jump=482 +28 * 
* * 
+28 * 482
+4 * 482 482
+1 * 482 482
+1 * 482 482

fl=(12)
fn=(54)
0x404a36 450 482 0 482
+1 * 482
+3 * 482 0 482
+1 * 482
+4 * 482 0 482 1 0 0 1
+4 * 482 0 482
+4 * 482 0 482
+4 +10 482 482
+4 * 482
+3 * 482 0 482
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=482 0x404c38 288 
* * 7230 2892 2410 3 0 0 3
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(56)
calls=482 0x404c38 288 
* * 7230 2892 2410
+5 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=482 0x404c52 -36 
* * 174960 56290 53402 20 3 3 20 3 3 7804 570 960 120
+5 +1 482
+4 * 482 482
+1 * 482 482
+1 * 482 482

fn=(60)
0x404c52 424 482 0 482
+1 * 482
+3 * 482 0 482
+2 * 482 0 482
+1 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +4 482 482
+4 * 482
+3 * 482 0 482
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=482 0x40492d 277 
* * 7230 2892 2410 2 0 0 2
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=482 0x404d9d 277 
* * 12050 4338 3856 2 0 1 2 0 1
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(66)
calls=482 0x404d9d 277 
* * 12050 4338 3856
+5 * 482
+3 * 482
+3 * 482
+3 * 482 0 482
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=482 0x404db7 -49 
* * 130134 41348 38460 15 3 2 15 3 2 7804 570 960 120
+5 +1 482
+4 * 482 482
+1 * 482 482
+2 * 482 482
+1 * 482 482

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 4 0 0 4 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 524 0 524 1 0 0 1
+1 * 524
+3 * 524
+4 * 524 0 524
+4 +1 524 524
+4 * 524
+3 * 524 0 524 1 0 0 1
cfi=(13)
cfn=(64)
calls=524 -33 -66 
* * 3144 1572 1048
+5 * 524 524
+1 * 524 524

fn=(66)
0x404d9d 277 964 0 964
+1 * 964
+3 * 964
+4 * 964 0 964
+4 +1 964 964
+4 * 964
+3 * 964 0 964
cfi=(13)
cfn=(68)
calls=964 0x404f1a -58 
* * 15424 5784 4820 2 0 1 2 0 1
+5 * 964 964
+1 * 964 964

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 4 0 0 4 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 482 0 482
+1 * 482
+3 * 482 0 482
+1 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +10 482 482
+4 * 482
+3 * 482 0 482
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=482 0x404bc6 288 
* * 7230 2892 2410 3 0 0 3
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(122)
calls=482 0x404bc6 288 
* * 7230 2892 2410
+5 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=482 0x404be0 -36 
* * 174960 56290 53402 4 1 5 4 1 5 7804 488 960
+5 +1 482
+4 * 482 482
+1 * 482 482
+1 * 482 482

fn=(128)
0x404878 277 524 0 524
+1 * 524
+3 * 524
+4 * 524 0 524 1 0 0 1
+4 +1 524 524
+4 * 524
+3 * 524 0 524
cfi=(13)
cfn=(130)
calls=524 -33 -66 
* * 3144 1572 1048 0 0 1 0 0 1
+5 * 524 524
+1 * 524 524

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 964 0 964
+1 * 964
+3 * 964
+4 * 964 0 964
+4 +1 964 964
+4 * 964
+3 * 964 0 964
cfi=(13)
cfn=(134)
calls=964 0x404e98 -58 
* * 15424 5784 4820 2 0 0 2
+5 * 964 964
+1 * 964 964

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +8 482 0 482
+4 +3 482 482
+4 * 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=482 0x404eb5 -22 
* * 122904 38938 35568 1 1 5 1 1 5 7804 488 960
+5 +1 482 482
+1 * 482 482

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 4 1 0 4 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 964 0 964 1 0 0 1
+1 * 964
+3 * 964
+4 * 964 0 964
+4 +1 964 964
+4 * 964
+3 * 964 0 964
cfi=(13)
cfn=(124)
calls=964 0x404d36 -77 
* * 5784 2892 1928 2 0 0 2
+5 * 964 964
+1 * 964 964

fn=(56)
0x404c38 288 964 0 964 1 0 0 1
+1 * 964
+3 * 964
+4 * 964 0 964 1 0 0 1
+4 +1 964 964
+4 * 964
+3 * 964 0 964
cfi=(13)
cfn=(58)
calls=964 0x404d8f -77 
* * 5784 2892 1928 1 0 0 1
+5 * 964 964
+1 * 964 964

fn=(74)
0x404f37 368 496 0 496
+1 * 496
+3 * 496
+4 * 496 0 496 1 0 0 1
+4 * 496 0 496
+4 * 496 0 496
+4 +2 496 496
+4 * 496 496
+4 * 496
+3 * 496
+3 * 496
+4 * 496 0 496
+4 +1 496 496
+5 * 496 0 0 0 0 0 0 0 0 496
jcnd=7/496 +33 +2 
* * 
+2 +1 489 489
+4 * 489
+8 * 489 489
+4 * 489 489
+4 * 489
+3 * 489 0 0 1 0 0 1
+3 * 489 0 489 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=489 0x3877c83840 0 
* * 110140 33817 32844 11 2 5 11 2 5 7384 573 484 120
* * 489 489 0 1 1 0 1 1 0 0 0 489
+5 +1 496 496
+4 * 496
+8 * 496 496
+4 * 496
+3 +1 496 496
+1 * 496 496

fn=(140)
0x404eb5 368 496 0 496
+1 * 496
+3 * 496
+4 * 496 0 496 1 0 0 1
+4 * 496 0 496
+4 * 496 0 496 0 0 1 0 0 1
+4 +2 496 496
+4 * 496 496
+4 * 496
+3 * 496
+3 * 496
+4 * 496 0 496
+4 +1 496 496
+5 * 496 0 0 0 0 0 0 0 0 496
jcnd=7/496 +33 +2 
* * 
+2 +1 489 489
+4 * 489
+8 * 489 489
+4 * 489 489
+4 * 489
+3 * 489
+3 * 489 0 489
cob=(2)
cfi=(9)
cfn=(78)
calls=489 0x3877c83840 0 
* * 110140 33817 32844 0 1 6 0 1 6 7384 492 484
* * 489 489 0 0 0 0 0 0 0 0 0 489
+5 +1 496 496
+4 * 496
+8 * 496 496
+4 * 496
+3 +1 496 496
+1 * 496 496

fn=(72)
0x404db7 379 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482 1 0 0 1
+4 * 482 0 482
+4 * 482 0 482
+4 +8 482 0 482
+4 +3 482 482
+4 * 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfn=(74)
calls=482 0x404f37 -22 
* * 122904 38938 35568 14 3 2 14 3 2 7804 570 960 120
+5 +1 482 482
+1 * 482 482

fn=(126)
0x404be0 424 482 0 482
+1 * 482
+3 * 482 0 482
+2 * 482 0 482
+1 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 * 482 0 482
+4 +4 482 482
+4 * 482
+3 * 482 0 482
cfn=(128)
calls=482 0x404878 277 
* * 7230 2892 2410 1 0 0 1
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(132)
calls=482 0x404d44 277 
* * 12050 4338 3856 2 0 0 2
+5 * 482
+3 * 482 482
+4 * 482
+3 * 482 0 482
cfn=(132)
calls=482 0x404d44 277 
* * 12050 4338 3856
+5 * 482
+3 * 482
+3 * 482
+3 * 482 0 482
cfn=(138)
calls=482 0x404d5e -49 
* * 130134 41348 38460 1 1 5 1 1 5 7804 488 960
+5 +1 482
+4 * 482 482
+1 * 482 482
+2 * 482 482
+1 * 482 482

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 964 0 964 1 0 0 1
+1 * 964
+3 * 964 0 964
+4 +1 964 964
+4 * 964 964
+1 * 964 964

fn=(110)
0x404380 726 964 0 964 1 0 0 1
+1 * 964
+3 * 964 0 964
+4 * 964 0 964
+4 * 964 964
+4 * 964 964
+3 * 964 964
+4 * 964 0 964
+3 * 964 964
+1 * 964 964

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 964 0 964 1 0 0 1
+1 * 964
+3 * 964 0 964
+4 +1 964 964
+4 * 964 964
+1 * 964 964

fn=(44)
0x404468 726 964 0 964
+1 * 964
+3 * 964 0 964
+4 * 964 0 964
+4 * 964 964
+4 * 964 964
+3 * 964 964
+4 * 964 0 964 1 0 0 1
+3 * 964 964
+1 * 964 964

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(262)
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 489 0 489 1 0 0 1
+1 * 489
+3 * 489 0 489
+4 * 489 0 489
+4 * 489 489
+1 * 489 489

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 489 0 489 1 0 0 1
+1 * 489
+3 * 489 0 489
+4 * 489 0 489 1 0 0 1
+4 * 489 489
+1 * 489 489

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 489 0 489 1 0 0 1
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 +4 489 489
+4 * 489 489
+4 * 489
+3 * 489
+3 * 489 0 489
cfn=(184)
calls=489 0x40454c -14 
* * 2934 978 1467 1 0 0 1
+5 +2 489 489
+1 * 489 489

fn=(150)
0x40326c 148 489 0 489
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 * 489 0 489
+4 +3 489 489 0 1 0 0 1
+4 * 489 489
+4 * 489
+3 * 489
+3 * 489 0 489
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=489 0x403d1a -29 
* * 8802 2934 3423 3 0 0 3
+5 +1 489 489
+1 * 489 489

fn=(180)
0x40334a 148 489 0 489
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 * 489 0 489
+4 +3 489 489
+4 * 489 489
+4 * 489
+3 * 489
+3 * 489 0 489
cfn=(182)
calls=489 0x403dcc -29 
* * 8802 2934 3423 2 0 0 2
+5 +1 489 489
+1 * 489 489

fn=(152)
0x403d1a 122 489 0 489 1 0 0 1
+1 * 489
+3 * 489
+4 * 489 0 489
+4 * 489 0 489
+4 +4 489 489
+4 * 489 489
+4 * 489
+3 * 489
+3 * 489 0 489
cfn=(154)
calls=489 0x4044f8 -14 
* * 2934 978 1467 2 0 0 2
+5 +2 489 489
+1 * 489 489

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2146 389 389 0 5 5 0 5 5 305 38 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 1 3 0 1 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 4 3 0 4 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 15 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 2998 636 578 12 7 3 12 7 3 485 50 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 241 0 241 1 0 0 1
+1 * 241
+3 * 241
+4 * 241 0 241
+4 * 241 0 241
+4 +1 241 241
+4 * 241
+3 * 241 0 241
cfi=(2)
cfn=(2)
calls=241 0x402d74 645 
* * 3133 1446 482
+5 * 241
+3 * 241 0 241
+3 +1 241 241
+6 * 241 0 241
+3 * 241 241
+6 * 241 0 241
+3 +1 241 241
+6 * 241 0 241 1 0 0 1
+3 * 241 241
+6 * 241 0 241
+3 +2 241 0 241
+7 * 241
jump=241 +86 * 
* * 
+2 +1 29402 29402
+3 * 29402
+3 * 29402 29402
+4 * 29402
+3 * 29402
+3 * 29402 0 29402
cfi=(2)
cfn=(144)
calls=29402 0x402d9a 770 
* * 323422 147010 88206
+5 * 29402 29402
+4 * 29402 29402
+5 * 29402
+4 * 29402 0 29402
+5 +1 29402 29402
+3 * 29402
+3 * 29402 29402
+4 * 29402
+3 * 29402
+3 * 29402 0 29402
cfi=(2)
cfn=(146)
calls=29402 0x402dba 770 
* * 323422 147010 88206 1 0 0 1
+5 * 29402 29402
+2 * 29402
+4 * 29402 29402
+5 * 29402
+4 * 29402 0 29402
+5 -2 29402 0 29402
+4 * 29402 29402
+3 * 29402
+3 * 29402 29402
+3 * 29402 0 0 0 0 0 0 0 0 29402 242
jcnd=29161/29402 -93 +1 
* * 
-9 * 241 241 0 1 0 0 1
+3 * 241
+3 * 241 241
+3 * 241 0 0 0 0 0 0 0 0 241
jcnd=241/241 -93 +1 
* * 
+2 +4 241 241
+3 * 241
+3 * 241
+4 * 241 241 0 1 0 0 1
+5 * 241
+4 * 241
+3 * 241 0 241
+5 +1 241 241
+3 * 241
+3 * 241
+4 * 241 241
+5 * 241
+4 * 241
+3 * 241 0 241
+5 +1 241 0 241
+7 * 241
jump=241 0x4016ee * 
* * 
+2 +1 29402 29402
+3 * 29402
+3 * 29402 29402
+4 * 29402
+3 * 29402 0 0 1 0 0 1
+3 * 29402 0 29402
cfi=(2)
cfn=(146)
calls=29402 0x402dba 770 
* * 323422 147010 88206
+5 * 29402 29402
+2 * 29402
+4 * 29402 29402
+5 * 29402 0 29402
+5 +1 29402 29402
+3 * 29402
+3 * 29402 29402
+4 * 29402
+3 * 29402
+3 * 29402 0 29402
cfi=(2)
cfn=(144)
calls=29402 0x402d9a 770 
* * 323422 147010 88206
+5 * 29402 29402
+4 * 29402 29402
+5 * 29402 0 29402
+5 +1 29402 29402
+5 * 29402 29402
+5 * 29402 29402
+5 * 29402
+4 * 29402 0 29402
+5 +1 29402 29402
+5 * 29402 29402
+5 * 29402 29402
+5 * 29402
+4 * 29402 0 29402
+5 -4 29402 0 29402
+4 * 29402 29402
+3 * 29402
+3 * 29402 29402
+3 * 29402 0 0 0 0 0 0 0 0 29402 242
jcnd=29161/29402 0x401672 +1 
* * 
-9 * 241 241 0 1 0 0 1
+3 * 241
+3 * 241 241
+3 * 241 0 0 0 0 0 0 0 0 241
jcnd=241/241 0x401672 +1 
* * 
+6 +6 241 241 0 1 0 0 1
+5 * 241 241
+5 * 241 0 241
+5 +2 241 241
+3 +1 241 0 241
+3 * 241 241
+5 * 241 241
+1 * 241 241

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 241
+7 * 241
+7 * 241
+3 * 241
+3 * 241 0 241
cfi=(2)
cfn=(4)
calls=241 0x4030b2 310 
* * 249341 69890 65953 65 25 22 65 25 22 17183 913 962 120
+5 * 241
+7 * 241
+7 * 241
+3 * 241
+3 * 241 0 241
cfi=(2)
cfn=(80)
calls=241 0x402ff4 310 
* * 251596 70462 65143 45 9 32 45 9 32 17918 758 962
+5 * 241 0 0 1 0 0 1
+7 * 241
+7 * 241
+3 * 241
+3 * 241 0 241
cfn=(142)
calls=241 0x401585 -52 
* * 3073473 1358517 709745 8 0 0 8 0 0 59286 484
+5 * 241 0 241
+8 * 241 241
+6 * 241 0 241
+6 * 241
+7 * 241
+3 * 241 0 241
cfi=(2)
cfn=(148)
calls=241 0x402df4 414 
* * 64164 20255 14663 31 5 0 31 5 0 7727 99 482
+5 * 241
+7 * 241
+3 * 241 0 241 1 0 0 1
cfi=(2)
cfn=(178)
calls=241 0x402e74 414 
* * 63064 19991 14243 7 1 0 7 1 0 7495 140 482
+5 +2 241
+7 * 241
+7 * 241
+3 * 241
+3 * 241 0 241
cfi=(2)
cfn=(4)
calls=241 0x4030b2 310 
* * 248886 69860 65832 4 1 1 4 1 1 17139 691 962
+5 * 241
+7 * 241
+7 * 241
+3 * 241
+3 * 241 0 241
cfi=(2)
cfn=(80)
calls=241 0x402ff4 310 
* * 250564 70390 64952 0 0 0 0 0 0 17765 666 962
+5 * 241 241
+6 * 241 0 0 1 0 0 1
+7 * 241
+7 * 241 0 241
+6 * 241 241
+8 * 241
+3 * 241
+3 * 241 0 241
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=241 0x401719 -33 
* * 1425515 593342 327037 4 0 0 4 0 0 29643 242
+5 * 241 0 241
+8 * 241 241
+6 * 241 0 241
+6 * 241
+7 * 241 0 0 1 0 0 1
+3 * 241 0 241
cfi=(2)
cfn=(148)
calls=241 0x402df4 414 
* * 64164 20255 14663 0 0 0 0 0 0 7727 95 482
+5 * 241
+7 * 241
+3 * 241 0 241
cfi=(2)
cfn=(178)
calls=241 0x402e74 414 
* * 63064 19991 14243 0 0 0 0 0 0 7495 138 482
+5 +2 241 241
+7 * 241
+3 * 241 0 241
cfi=(2)
cfn=(2)
calls=241 0x402d74 645 
* * 3133 1446 482
+5 * 241 241
+6 * 241
+3 * 241
+3 * 241
+3 * 241 241
+7 * 241
+3 * 241 0 0 1 0 0 1
+3 * 241 0 241
cfi=(2)
cfn=(144)
calls=241 0x402d9a 770 
* * 2651 1205 723
+5 * 241
+3 * 241
+7 * 241
+3 * 241
+3 * 241 0 241
cfi=(2)
cfn=(200)
calls=241 0x402eda 901 
* * 26266 9573 7433 38 23 10 38 23 10 1247 66 41
+5 +1 241 241
+7 * 241
+3 * 241 0 241
cfi=(2)
cfn=(10)
calls=241 0x402f54 645 
* * 3133 1446 482 0 1 0 0 1
+5 * 241 241
+6 * 241
+3 * 241
+3 * 241
+3 * 241 241
+7 * 241 0 0 1 0 0 1
+3 * 241
+3 * 241 0 241
cfi=(2)
cfn=(146)
calls=241 0x402dba 770 
* * 2651 1205 723
+5 * 241
+3 * 241
+7 * 241
+3 * 241
+3 * 241 0 241
cfi=(2)
cfn=(244)
calls=241 0x402f7a 901 
* * 25447 9343 7247 19 21 16 19 21 16 1076 56 41
+5 +1 241 241
+7 * 241
+3 * 241 0 241
cfi=(2)
cfn=(10)
calls=241 0x402f54 645 
* * 3133 1446 482
+5 * 241 241
+6 * 241
+3 * 241
+3 * 241
+3 * 241 241 0 1 0 0 1
+7 * 241
+3 * 241
+3 * 241 0 241
cfi=(2)
cfn=(146)
calls=241 0x402dba 770 
* * 2651 1205 723
+5 * 241 241
+2 * 241
+4 * 241 241
+8 * 241 241
+8 * 241 0 241
+8 +1 241 241
+7 * 241
+3 * 241 0 241
cfi=(2)
cfn=(2)
calls=241 0x402d74 645 
* * 3133 1446 482
+5 * 241 241 0 1 0 0 1
+6 * 241
+3 * 241
+3 * 241
+3 * 241 241
+7 * 241
+3 * 241
+3 * 241 0 241
cfi=(2)
cfn=(144)
calls=241 0x402d9a 770 
* * 2651 1205 723
+5 * 241 241
+4 * 241 241
+8 * 241
+4 * 241 241
+8 * 241
+3 * 241 0 241
+8 +2 241 0 241
+7 -12 241 241
+8 * 241 241
+7 * 241 0 0 0 0 0 0 0 0 241 3
jcnd=1/241 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 241
+7 * 241
+3 * 241 0 241
cfi=(2)
cfn=(2)
calls=241 0x402d74 645 
* * 3133 1446 482 2 0 1 2 0 1
+5 * 241
+3 * 241 241
+7 * 241
+3 * 241 0 241
cfi=(2)
cfn=(2)
calls=241 0x402d74 645 
* * 3133 1446 482 0 1 0 0 1
+5 * 241
+3 * 241 0 0 0 0 0 0 0 0 241
+2 * 241 0 0 1 0 0 1
+5 * 241
jump=241 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 241
+2 * 241 0 0 0 0 0 0 0 0 241
jcnd=241/241 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 241 0 241
+1 * 241
+3 * 241
+4 * 241 0 241
+4 * 241 0 241
+4 * 241 0 241
+5 +1 241 241
+4 * 241
+3 * 241 0 241
cfi=(2)
cfn=(2)
calls=241 0x402d74 645 
* * 3133 1446 482
+5 * 241
+3 * 241 0 241
+3 +1 241 241 0 1 0 0 1
+6 * 241 0 241
+3 * 241 241
+6 * 241 0 241
+3 +2 241 0 241
+7 * 241
jump=241 +86 * 
* * 
+2 +1 29402 29402
+3 * 29402
+3 * 29402 29402
+4 * 29402
+3 * 29402
+3 * 29402 0 29402
cfi=(2)
cfn=(144)
calls=29402 0x402d9a 770 
* * 323422 147010 88206
+5 * 29402 29402
+4 * 29402 29402
+5 * 29402
+4 * 29402 0 29402
+5 +1 29402 29402
+3 * 29402
+3 * 29402 29402
+4 * 29402
+3 * 29402
+3 * 29402 0 29402
cfi=(2)
cfn=(146)
calls=29402 0x402dba 770 
* * 323422 147010 88206
+5 * 29402 29402
+2 * 29402
+4 * 29402 29402
+5 * 29402
+4 * 29402 0 29402
+5 -2 29402 0 29402
+4 * 29402 29402
+3 * 29402
+3 * 29402 29402
+3 * 29402 0 0 0 0 0 0 0 0 29402 242
jcnd=29161/29402 -93 +1 
* * 
-9 * 241 241 0 1 0 0 1
+3 * 241
+3 * 241 241
+3 * 241 0 0 0 0 0 0 0 0 241
jcnd=241/241 -93 +1 
* * 
+2 +4 241 241
+3 * 241
+3 * 241 0 0 1 0 0 1
+4 * 241 241
+5 * 241
+4 * 241
+3 * 241 0 241
+5 +1 241 241
+3 * 241
+3 * 241
+4 * 241 241
+5 * 241
+4 * 241
+3 * 241 0 241
+5 +1 241 241
+5 * 241 241
+5 * 241 241
+5 * 241 0 0 1 0 0 1
+4 * 241
+3 * 241 0 241
+5 +2 241 241
+3 +1 241 0 241
+3 * 241 241
+5 * 241 241
+1 * 241 241

fl=(4)
fn=(16)
0x404804 115 482 0 482 1 0 0 1
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482
+4 +1 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfi=(5)
cfn=(18)
calls=482 0x404a28 -35 
* * 2892 964 1446 1 0 1 1 0 1
+5 * 482 482
+1 * 482 482

fn=(174)
0x403ccc 121 482 0 482
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 482
+4 * 482
+3 * 482 0 482
cfi=(5)
cfn=(176)
calls=482 0x4044cc -35 
* * 2410 964 964
+5 * 482 482
+1 * 482 482

fn=(90)
0x4047b2 115 482 0 482 1 0 0 1
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 0 482 1 0 0 1
+4 +1 482 482
+4 * 482 482
+4 * 482
+3 * 482
+3 * 482 0 482
cfi=(5)
cfn=(92)
calls=482 0x4049d4 -35 
* * 2892 964 1446 1 0 0 1
+5 * 482 482
+1 * 482 482

fn=(194)
0x403d7e 121 482 0 482 1 0 0 1
+1 * 482
+3 * 482
+4 * 482 0 482
+4 * 482 482
+4 * 482
+3 * 482 0 482
cfi=(5)
cfn=(196)
calls=482 0x404520 -35 
* * 2410 964 964
+5 * 482 482
+1 * 482 482

fl=(3)
fn=(222)
0x403373 215 241 0 241
+1 * 241
+3 * 241
+4 * 241 0 241
+4 * 241 0 241
+4 * 241 0 241
+4 +1 241 241
+4 * 241 241
+4 * 241 241
+4 * 241
+3 * 241
+3 * 241 0 241
cfi=(5)
cfn=(224)
calls=241 0x403df2 -87 
* * 5784 1928 2169 0 16 4 0 16 4 241
+5 * 241 241
+1 * 241 241

fn=(8)
0x403afa 224 482 0 482 1 0 0 1
+1 * 482
+3 * 482 0 482
+4 * 482 482
+4 * 482 482
+1 * 482 482

fn=(264)
0x4036b1 215 241 0 241
+1 * 241
+3 * 241
+4 * 241 0 241
+4 * 241 0 241
+4 * 241 0 241
+4 +1 241 241
+4 * 241 241
+4 * 241 241
+4 * 241
+3 * 241
+3 * 241 0 241
cfi=(5)
cfn=(266)
calls=241 0x40406a -87 
* * 5784 1928 2169 0 16 7 0 16 7 241
+5 * 241 241
+1 * 241 241

fn=(212)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102)
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28)
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84)
0x4039ed 224 482 0 482
+1 * 482
+3 * 482 0 482
+4 * 482 482
+4 * 482 482
+1 * 482 482

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 978 0 978 1 0 0 1
+5 0 978 0 978
+5 0 978
+3 0 978 0 978
+5 0 978
+4 0 978 978 0 0 1 0 0 1
+7 0 978 978 0 0 1 0 0 1
+3 0 978
+3 0 978 0 0 0 0 0 0 0 0 978
+6 0 978 978 0 0 1 0 0 1
+7 0 978 978 0 1 1 0 1 1
+4 0 978
+3 0 978 0 0 0 0 0 0 0 0 978
+2 0 978 978 0 0 1 0 0 1
+3 0 978
+3 0 978 0 0 0 0 0 0 0 0 978
jcnd=978/978 +97 0 
* 0 
+18 0 978
+3 0 978
+3 0 978 0 978
cfn=(38) _int_malloc
calls=978 0x3877c79a00 0 
* 0 259935 31767 38141 41 34 49 41 34 49 42473 1971
+5 0 978
+3 0 978
+3 0 978 0 0 0 0 0 0 0 0 978
+2 0 978
+3 0 978 0 0 0 0 0 0 0 0 978
+2 0 978
+3 0 978 0 0 0 0 0 0 0 0 978 5
+2 0 978 978
+7 0 978 0 0 0 0 0 0 0 0 978
jcnd=978/978 +13 0 
* 0 
+13 0 978 0 978
+2 0 978 0 0 0 0 0 0 0 0 978 82
+6 0 978
+3 0 978 978
+4 0 978 978
+5 0 978 978
+5 0 978
+4 0 978 978
+1 0 978 0 0 1 0 0 1
+5 0 978 978 0 0 1 0 0 1
+7 0 978 0 0 0 0 0 0 0 0 978
jcnd=978/978 +14 0 
* 0 
+14 0 978 0 978 1 0 0 1
+3 0 978 0 0 0 0 0 0 0 0 978
+6 0 978
jump=978 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 978 0 978 1 0 0 1
+2 0 978
+3 0 978
+3 0 978 0 978
+2 0 978
+3 0 978 0 978
+1 0 978
+3 0 978 0 978
+1 0 978
+3 0 978
+4 0 978
+3 0 978 0 0 0 0 0 0 0 0 978
+6 0 978
+4 0 978
+3 0 978 0 0 0 0 0 0 0 0 978 4
jcnd=10/978 0x3877c838d1 0 
* 0 
+2 0 968
+3 0 968
+3 0 968
+3 0 968
+3 0 968
+3 0 968 0 0 0 0 0 0 0 0 968
jcnd=968/968 +41 0 
* 0 
+41 0 968 0 0 1 0 0 1
+3 0 968 0 0 0 0 0 0 0 0 968
jcnd=968/968 0x3877c839c0 0 
* 0 
+24 0 968
+3 0 968
+4 0 968
+3 0 968
+3 0 968
+3 0 968
+3 0 968
+3 0 968 0 0 0 0 0 0 0 0 968 554
jcnd=492/968 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 486
+10 0 486 486 0 0 2 0 0 2
+3 0 486
+4 0 486 0 486
+3 0 486
+4 0 486
+4 0 486 0 0 0 0 0 0 0 0 486
jcnd=486/486 -18 0 
* 0 
-18 0 1514 1514
+3 0 1514
+4 0 1514 0 1514
+3 0 1514
+4 0 1514
+4 0 1514 0 0 0 0 0 0 0 0 1514 8
jcnd=1028/1514 -18 0 
* 0 
+2 0 978
+4 0 978
+3 0 978 978
+1 0 978 978
+1 0 978 978
+2 0 978 978 0 1 0 0 1
+2 0 978 978
0x3877c839c0 0 968 0 0 1 0 0 1
+3 0 968
+3 0 968
+3 0 968
+4 0 968 0 968 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=968 0x3877c89b20 0 
* 0 164962 60744 58808 6 1 10 6 1 10 7898 499 968 120
+5 0 968
jump=968 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 978 978 0 1 1 0 1 1
+7 0 978 978 0 0 1 0 0 1
+3 0 978
+3 0 978 0 0 1 0 0 1 0 0 978
+6 0 978
+3 0 978 0 0 0 0 0 0 0 0 978
+6 0 978 978
+4 0 978
+4 0 978
+2 0 978 0 0 0 0 0 0 0 0 978
+2 0 978
+2 0 978
+7 0 978 0 0 0 0 0 0 0 0 978
jcnd=978/978 +14 0 
* 0 
+14 0 978
+2 0 978
cfn=(170) _int_free
calls=978 0x3877c78650 0 
* 0 102389 27779 16547 17 2 0 17 2 0 24923 484

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=2/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 8
jcnd=5/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 978 0 978 1 0 0 1
+2 0 978 0 978
+2 0 978 0 978
+2 0 978
+3 0 978 0 978
+2 0 978 0 978
+1 0 978 0 978
+1 0 978
+3 0 978
+4 0 978 978
+4 0 978 0 978
+4 0 978
+3 0 978
+4 0 978
+3 0 978
+3 0 978
+3 0 978 0 0 1 0 0 1 0 0 978
+6 0 978
+4 0 978 0 0 0 0 0 0 0 0 978
+6 0 978
+4 0 978 0 0 0 0 0 0 0 0 978
+6 0 978 978
+7 0 978 0 0 0 0 0 0 0 0 978 2
jcnd=854/978 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 854
+2 0 854 0 0 0 0 0 0 0 0 854
+6 0 854 854 0 1 0 0 1
+4 0 854
+3 0 854
+2 0 854 0 0 0 0 0 0 0 0 854
jcnd=854/854 0x3877c78a40 0 
* 0 
+6 0 854 854
+4 0 854
+3 0 854 0 0 0 0 0 0 0 0 854
+6 0 854 854
+5 0 854
+4 0 854 0 0 0 0 0 0 0 0 854
jcnd=854/854 0x3877c7907c 0 
* 0 
+6 0 854 854
+5 0 854
+4 0 854 0 0 0 0 0 0 0 0 854
+6 0 854
+4 0 854 0 0 1 0 0 1 0 0 854
+6 0 854
+4 0 854 854
+7 0 854 0 0 0 0 0 0 0 0 854
+6 0 854 854
+6 0 854
+2 0 854 0 0 0 0 0 0 0 0 854
+6 0 854 854
+4 0 854 0 0 0 0 0 0 0 0 854 5
jcnd=850/854 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 854 854 0 1 0 0 1
+4 0 854 0 0 0 0 0 0 0 0 854
+6 0 854 854 0 0 1 0 0 1
+6 0 854 0 0 1 0 0 1 0 0 854 60
jcnd=45/854 0x3877c78a78 0 
* 0 
+6 0 809 809
+5 0 809 809
+5 0 809 809
+4 0 809 0 0 0 0 0 0 0 0 809
+6 0 809 809
+4 0 809 0 0 0 0 0 0 0 0 809
+6 0 809 809
+9 0 809 0 809
+4 0 809 0 809
+4 0 809 0 0 0 0 0 0 0 0 809 355
jcnd=433/809 +16 0 
* 0 
+2 0 376 376
+5 0 376
+3 0 376 0 0 1 0 0 1 0 0 376
+6 0 809
+3 0 809
+4 0 809 809
+4 0 809 809
+4 0 809 0 0 0 0 0 0 0 0 809
-12 0 45
+4 0 45 45
+4 0 45 45
+4 0 45 0 0 0 0 0 0 0 0 45
+6 0 854
+7 0 854 0 854
+4 0 854 0 854
+4 0 854 0 0 0 0 0 0 0 0 854 60
jcnd=441/854 +18 0 
* 0 
+2 0 413 0 413
+8 0 413 0 413
+8 0 413 0 413
+4 0 413
+3 0 413 0 413 1 0 0 1
+4 0 413
+4 0 413 0 413
+4 0 413 0 413
+4 0 413
+7 0 413 0 0 0 0 0 0 0 0 413
jcnd=413/413 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
0x3877c78a40 0 854 0 0 1 0 0 1
+5 0 854 854
+4 0 854 854
+7 0 854 0 0 0 0 0 0 0 0 854
jcnd=854/854 +16 0 
* 0 
+16 0 854 0 854
+5 0 854 0 0 0 0 0 0 0 0 854
+6 0 854
+3 0 854
jump=854 0x3877c7878f 0 
* 0 
+10 0 45 0 45
+6 0 45 0 0 1 0 0 1
jump=45 0x3877c78885 0 
* 0 
0x3877c78b20 0 854 854 0 1 0 0 1
+4 0 854
+2 0 854 0 0 0 0 0 0 0 0 854
+6 0 854 854
+7 0 854 0 0 0 0 0 0 0 0 854
jcnd=854/854 +15 0 
* 0 
+15 0 854 0 854 1 0 0 1
+4 0 854 0 0 0 0 0 0 0 0 854
+6 0 854
+4 0 854 854
+1 0 854 854
+1 0 854 854
+2 0 854 854
+2 0 854 854
+2 0 854 854
+2 0 854 854
0x3877c7907c 0 854 854 0 1 1 0 1 1
+4 0 854 0 0 1 0 0 1
+7 0 854
+4 0 854
+3 0 854
+3 0 854 0 0 0 0 0 0 0 0 854
jcnd=854/854 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 968 0 0 1 0 0 1
+7 0 968
+3 0 968
+3 0 968 968 0 0 1 0 0 1
+4 0 968
+4 0 968 0 0 0 0 0 0 0 0 0 0 968 120
jump=116 0x3877c89be8 0 
* 0 
jump=128 0x3877c89bd0 0 
* 0 
jump=120 0x3877c89bb8 0 
* 0 
jump=120 +11 0 
* 0 
jump=120 0x3877c89c48 0 
* 0 
jump=122 0x3877c89c30 0 
* 0 
jump=120 0x3877c89c18 0 
* 0 
jump=122 0x3877c89c00 0 
* 0 
+11 0 120 120
+3 0 120
+4 0 120
+4 0 120 120
+4 0 120
+4 0 120 0 120
+4 0 120
+9 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-40 0 7170 7170
+4 0 7170 0 7170
+4 0 7170 7170
+4 0 7170 0 7170 0 0 3 0 0 3
+4 0 7170 7170
+4 0 7170 0 7170 0 0 4 0 0 4
+4 0 7170 7170
+4 0 7170 0 7170
+4 0 7170
+4 0 7170
+4 0 7170 0 0 0 0 0 0 0 0 7170 495
jcnd=932/7170 0x3877c89c60 0 
* 0 
-32 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122
jcnd=10/122 0x3877c89c60 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-16 0 122 122 0 1 0 0 1
+4 0 122 0 122
+4 0 122 0 0 1 0 0 1
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122 4
jcnd=10/122 0x3877c89c60 0 
* 0 
+6 0 6686
+4 0 6686 6686
+3 0 6686 0 6686
+3 0 6686 6686
+4 0 6686 0 6686 0 0 1 0 0 1
+4 0 6686 6686
+4 0 6686 0 6686 0 0 2 0 0 2
+4 0 6686 6686
+4 0 6686 0 6686
+4 0 6686
jump=6686 -80 0 
* 0 
-30 0 116 116
+3 0 116 0 116
+3 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116 116
+4 0 116 0 116
+4 0 116
jump=116 -80 0 
* 0 
-24 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128
jump=128 -80 0 
* 0 
-16 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
+8 0 120 120
+3 0 120
+4 0 120 0 0 1 0 0 1
+4 0 120
+4 0 120
jump=120 -39 0 
* 0 
+9 0 128
+3 0 128 0 0 0 0 0 0 0 0 128
+6 0 128 128
+3 0 128
+4 0 128
jump=128 -72 0 
* 0 
+8 0 116
+4 0 116 116
+3 0 116 0 0 0 0 0 0 0 0 116
+2 0 116
+4 0 116
jump=116 -99 0 
* 0 
+11 0 122 122 0 1 0 0 1
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b78 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b70 0 
* 0 
+9 0 122 122
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b68 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b60 0 
* 0 
+9 0 968 0 968 1 0 0 1
+3 0 968 968

fn=(104) alloc_perturb
0x3877c77180 0 852 852 0 1 0 0 1
+6 0 852
+2 0 852 0 0 0 0 0 0 0 0 852 33
+2 0 852 852

fn=(38)
0x3877c79a00 0 978 0 978 1 0 0 1
+2 0 978
+3 0 978 0 978
+2 0 978 0 978
+2 0 978 0 978 0 0 1 0 0 1
+2 0 978
+3 0 978 0 978
+1 0 978 0 978
+1 0 978
+4 0 978
+4 0 978 0 0 0 0 0 0 0 0 978
+6 0 978
+4 0 978
+6 0 978
+3 0 978
+4 0 978
+4 0 978
+4 0 978
+3 0 978 0 0 0 0 0 0 0 0 978
+6 0 978 978 0 1 1 0 1 1
+7 0 978 0 0 0 0 0 0 0 0 978 5
jcnd=856/978 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 852
+4 0 852 852
+1 0 852 852
+1 0 852 852
+2 0 852 852
+2 0 852 852
+2 0 852 852
+2 0 852 852
+7 0 873
+7 0 873 0 0 1 0 0 1 0 0 873 5
jcnd=2/873 0x3877c79b70 0 
* 0 
+2 0 871
+3 0 871
+5 0 871
+3 0 871
+4 0 871 0 871
+4 0 871
+2 0 871
+5 0 871 871 0 0 12 0 0 12
+4 0 871
+3 0 871 0 0 0 0 0 0 0 0 871
jcnd=871/871 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 921 249 195 8 1 0 8 1 0 191 24
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 872 0 0 1 0 0 1
+3 0 872
+3 0 872
+3 0 872
+4 0 872
+3 0 872
+4 0 872 0 872
+5 0 872
+3 0 872 0 872
+4 0 872 0 872
+4 0 872 0 872
+5 0 872
+3 0 872
+3 0 872
+3 0 872
+3 0 872
+4 0 872
+4 0 872 0 0 1 0 0 1
+4 0 872 0 872
+4 0 872
+4 0 872 0 872
+5 0 872 0 872
+5 0 872
+3 0 872
+3 0 872 0 872
+5 0 872
+5 0 872
+3 0 872 0 872
+4 0 872 0 872
+4 0 872
+6 0 872 0 872
+4 0 872 0 872
+5 0 872 0 0 1 0 0 1
+3 0 872
+3 0 872
+3 0 872
jump=872 +87 0 
* 0 
+8 0 808
+3 0 808
+4 0 808
+2 0 808
+2 0 808
+3 0 808
+3 0 808
+3 0 808
+2 0 808
+2 0 808
+5 0 808
+2 0 808 808 0 0 2 0 0 2
+4 0 808
+3 0 808
+4 0 808 0 808
+4 0 808 0 808 0 0 1 0 0 1
+8 0 808
+7 0 808 0 808
+4 0 808 0 808 0 0 1 0 0 1
+4 0 808 0 808
+4 0 808 0 0 0 0 0 0 0 0 808
-38 0 411
+3 0 411
+4 0 411 0 411
+4 0 411 0 411
+8 0 411
+7 0 411 0 411
+4 0 411 0 411
+4 0 411 0 411
+4 0 411 0 0 0 0 0 0 0 0 411
+6 0 2092 2092 0 1 0 0 1
+4 0 2092
+3 0 2092 0 0 0 0 0 0 0 0 2092 44
jcnd=833/2092 0x3877c79ef0 0 
* 0 
+6 0 1259 1259
+4 0 1259 1259 0 0 1 0 0 1
+4 0 1259
+4 0 1259 0 0 0 0 0 0 0 0 1259
+6 0 1259 1259 0 1 1 0 1 1
+7 0 1259 0 0 0 0 0 0 0 0 1259
+6 0 1259
+4 0 1259
+7 0 1259 0 0 0 0 0 0 0 0 1259 7
jcnd=7/1259 +11 0 
* 0 
+2 0 1252
+3 0 1252 0 0 0 0 0 0 0 0 1252 597
jcnd=834/1252 0x3877c79e28 0 
* 0 
+6 0 1240
+3 0 1240 0 1240
+4 0 1240 0 1240
+5 0 1240 0 0 0 0 0 0 0 0 1240 12
jcnd=21/1240 0x3877c7a090 0 
* 0 
+6 0 1219
+7 0 1219 0 0 0 0 0 0 0 0 1219 12
jcnd=808/1219 0x3877c79c50 0 
* 0 
+6 0 411 0 0 1 0 0 1
+3 0 411
+4 0 411
+4 0 411 0 0 0 0 0 0 0 0 411 7
jcnd=343/411 0x3877c79db0 0 
* 0 
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 1 0 0 1
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 31
jcnd=68/68 0x3877c79e15 0 
* 0 
-36 0 343
+2 0 343
+2 0 343
+3 0 343
+3 0 343
+8 0 343
+3 0 343
+2 0 343
+2 0 343
+4 0 343 343
+4 0 343
+3 0 343 0 0 0 0 0 0 0 0 343
jcnd=343/343 0x3877c79e15 0 
* 0 
0x3877c79db0 0 343 0 0 1 0 0 1
+3 0 343
+4 0 343
+4 0 343 0 0 0 0 0 0 0 0 343
+2 0 343
+3 0 343 0 0 1 0 0 1
+7 0 343
jump=343 0x3877c79d18 0 
* 0 
+78 0 411 0 411
+4 0 411 0 411
+4 0 411
+3 0 411
jump=411 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 9
jcnd=427/834 0x3877c79ce1 0 
* 0 
+6 0 407 407
+5 0 407 0 0 0 0 0 0 0 0 407 7
jcnd=388/407 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=9/19 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 1 0 0 1
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9 0 0 2 0 0 2
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 833 0 0 1 0 0 1
+7 0 833
+3 0 833 0 0 0 0 0 0 0 0 833 3
jcnd=2/833 0x3877c7a0b0 0 
* 0 
+6 0 833 833 0 1 0 0 1
+4 0 833
+3 0 833
+3 0 833
+2 0 833
+4 0 833
+3 0 833
+3 0 833
+2 0 833
+2 0 833
+2 0 833
+2 0 833 833
+8 0 833
+5 0 833
+5 0 833
+2 0 833 0 0 0 0 0 0 0 0 833
-2 0 413
+2 0 413 0 0 0 0 0 0 0 0 413
+2 0 1246
+2 0 1246 0 0 0 0 0 0 0 0 1246 27
jcnd=628/1246 +64 0 
* 0 
+2 0 618
+8 0 618
+3 0 618
+3 0 618 0 0 0 0 0 0 0 0 618
-6 0 409
+3 0 409
+3 0 409 0 0 0 0 0 0 0 0 409
+2 0 1027
+2 0 1027 1027
+8 0 1027
+2 0 1027 0 0 0 0 0 0 0 0 1027 18
jcnd=409/1027 -20 0 
* 0 
+2 0 618
+2 0 618
+5 0 618
+3 0 618
+3 0 618
+2 0 618
+2 0 618
+5 0 618 0 0 0 0 0 0 0 0 618
+2 0 618
+2 0 618
+4 0 618
+2 0 618
+2 0 618 0 0 0 0 0 0 0 0 618
jcnd=618/618 -8 0 
* 0 
-8 0 7830
+4 0 7830
+2 0 7830
+2 0 7830 0 0 0 0 0 0 0 0 7830 430
jcnd=6627/7830 -8 0 
* 0 
-2 0 628 0 0 1 0 0 1
+2 0 628 0 0 0 0 0 0 0 0 628 13
jcnd=585/628 -8 0 
* 0 
+2 0 1246 1246 0 0 4 0 0 4
+4 0 1246 0 0 1 0 0 1
+3 0 1246 0 0 0 0 0 0 0 0 1246 411
jcnd=833/1246 0x3877c7a1cf 0 
* 0 
+6 0 413
+2 0 413
+4 0 413
+2 0 413
+2 0 413
+2 0 413 0 413
+8 0 413
jump=413 0x3877c79f30 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 833 833 0 1 2 0 1 2
+4 0 833 833 0 0 1 0 0 1
+4 0 833
+3 0 833 833
+4 0 833
+4 0 833
+3 0 833
+3 0 833 833
+4 0 833 0 0 0 0 0 0 0 0 833
+6 0 833 833 0 0 2 0 0 2
+4 0 833 0 0 0 0 0 0 0 0 833
+6 0 833 833 0 1 0 0 1
+8 0 833 0 833
+4 0 833 0 833
+4 0 833 0 0 0 0 0 0 0 0 833 230
jcnd=419/833 +38 0 
* 0 
+2 0 414 414 0 0 2 0 0 2
+4 0 414
+3 0 414 0 0 0 0 0 0 0 0 414
+2 0 414 414
+5 0 414 0 0 0 0 0 0 0 0 414
+6 0 414 414
+4 0 414 0 414
+4 0 414 414
+4 0 414 0 414
+4 0 414
+4 0 414 0 0 0 0 0 0 0 0 414
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=20/419 0x3877c7a2e3 0 
* 0 
+6 0 813 813
+4 0 813 813 0 1 0 0 1
+4 0 813 0 0 0 0 0 0 0 0 813
+6 0 813
+4 0 813
+7 0 813 0 813 0 0 9 0 0 9
+4 0 813 0 813
+4 0 813 0 813
+4 0 813 0 813
+4 0 813 0 0 0 0 0 0 0 0 813 5
jcnd=2/813 +7 0 
* 0 
+2 0 811 0 811
+5 0 811
+7 0 811 0 0 0 0 0 0 0 0 811 4
jcnd=436/811 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 375 0 375 0 0 13 0 0 13
+8 0 375 0 375
+8 0 375
+7 0 375 0 375 0 0 3 0 0 3
+4 0 375
+3 0 375
+3 0 375
+4 0 375
+3 0 375
+4 0 375
+3 0 375
+3 0 375
+4 0 375 0 375
+4 0 375 0 375
+4 0 375
jump=375 +71 0 
* 0 
-46 0 438 0 0 1 0 0 1
+7 0 438 0 438
+4 0 438
+3 0 438
+3 0 438
+4 0 438
+3 0 438
+4 0 438
+3 0 438
+3 0 438
+4 0 438 0 438
+4 0 438 0 438 0 0 1 0 0 1
+4 0 438
jump=438 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 20
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 +7 0 
* 0 
+7 0 833
+4 0 833 0 0 1 0 0 1
+3 0 833
+3 0 833 0 833
cfn=(104)
calls=833 0x3877c77180 0 
* 0 3332 1666 0 1 0 0 1 0 0 833 33
+5 0 833
+3 0 833
jump=833 0x3877c79ae3 0 
* 0 

totals: 5867009 2351393 1384169 235 89 83 235 89 83 192426 4351 5858 120
