version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 613


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 785928702 - 788343953
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2016 0 0 1 0 0 1
+3 0 2016 0 0 0 0 0 0 0 0 2016
+2 0 2016
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2016 0x3877c7b8b0 0 
* 0 228098 58492 30050 22 6 0 22 6 0 56099 1024
* 0 2016 2016 0 1 1 0 1 1 0 0 0 2016

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2016 0 2016 1 0 0 1
+1 0 2016
+5 0 2016
+3 0 2016 0 2016
+1 0 2016
+4 0 2016 0 0 1 0 0 1
+3 0 2016
+4 0 2016
+3 0 2016 0 2016 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2016 0x3877c7aa50 0 
* 0 554498 79961 80743 49 37 55 49 37 55 92657 3391
* 0 2016 2016 0 1 1 0 1 1 0 0 0 2016
+5 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016
jcnd=2016/2016 +96 0 
* 0 
+96 0 2016 0 0 1 0 0 1
+4 0 2016 2016
+1 0 2016 2016
+1 0 2016 2016

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=500 0x402d74 645 
* * 6500 3000 1000
+5 * 500
+3 * 500 0 500
+3 +1 500 500
+6 * 500 0 500
+3 * 500 500
+6 * 500 0 500
+3 +1 500 500
+6 * 500 0 500 1 0 0 1
+3 * 500 500
+6 * 500 0 500
+3 +2 500 0 500
+7 * 500
jump=500 +86 * 
* * 
+2 +1 125750 125750
+3 * 125750
+3 * 125750 125750
+4 * 125750
+3 * 125750
+3 * 125750 0 125750
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=125750 0x402d9a 770 
* * 1383250 628750 377250
+5 * 125750 125750
+4 * 125750 125750
+5 * 125750
+4 * 125750 0 125750
+5 +1 125750 125750
+3 * 125750
+3 * 125750 125750
+4 * 125750
+3 * 125750
+3 * 125750 0 125750
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=125750 0x402dba 770 
* * 1383250 628750 377250 1 0 0 1
+5 * 125750 125750
+2 * 125750
+4 * 125750 125750
+5 * 125750
+4 * 125750 0 125750
+5 -2 125750 0 125750
+4 * 125750 125750
+3 * 125750
+3 * 125750 125750
+3 * 125750 0 0 0 0 0 0 0 0 125750 501
jcnd=125250/125750 -93 +1 
* * 
-9 * 500 500 0 1 0 0 1
+3 * 500
+3 * 500 500
+3 * 500 0 0 0 0 0 0 0 0 500
jcnd=500/500 -93 +1 
* * 
+2 +4 500 500
+3 * 500
+3 * 500
+4 * 500 500 0 1 0 0 1
+5 * 500
+4 * 500
+3 * 500 0 500
+5 +1 500 500
+3 * 500
+3 * 500
+4 * 500 500
+5 * 500
+4 * 500
+3 * 500 0 500
+5 +1 500 0 500
+7 * 500
jump=500 0x4016ee * 
* * 
+2 +1 125750 125750
+3 * 125750
+3 * 125750 125750
+4 * 125750
+3 * 125750 0 0 1 0 0 1
+3 * 125750 0 125750
cfi=(2)
cfn=(146)
calls=125750 0x402dba 770 
* * 1383250 628750 377250
+5 * 125750 125750
+2 * 125750
+4 * 125750 125750
+5 * 125750 0 125750
+5 +1 125750 125750
+3 * 125750
+3 * 125750 125750
+4 * 125750
+3 * 125750
+3 * 125750 0 125750
cfi=(2)
cfn=(144)
calls=125750 0x402d9a 770 
* * 1383250 628750 377250
+5 * 125750 125750
+4 * 125750 125750
+5 * 125750 0 125750
+5 +1 125750 125750
+5 * 125750 125750
+5 * 125750 125750
+5 * 125750
+4 * 125750 0 125750
+5 +1 125750 125750
+5 * 125750 125750
+5 * 125750 125750
+5 * 125750
+4 * 125750 0 125750
+5 -4 125750 0 125750
+4 * 125750 125750
+3 * 125750
+3 * 125750 125750
+3 * 125750 0 0 0 0 0 0 0 0 125750 501
jcnd=125250/125750 0x401672 +1 
* * 
-9 * 500 500 0 1 0 0 1
+3 * 500
+3 * 500 500
+3 * 500 0 0 0 0 0 0 0 0 500
jcnd=500/500 0x401672 +1 
* * 
+6 +6 500 500 0 1 0 0 1
+5 * 500 500
+5 * 500 0 500
+5 +2 500 500
+3 +1 500 0 500
+3 * 500 500
+5 * 500 500
+1 * 500 500

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 500
+7 * 500
+7 * 500
+3 * 500
+3 * 500 0 500
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=500 0x4030b2 310 
* * 587282 177163 167495 68 18 20 68 18 20 36501 1503 1998 248
+5 * 500
+7 * 500
+7 * 500
+3 * 500
+3 * 500 0 500
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=500 0x402ff4 310 
* * 587466 174917 164097 35 4 76 35 4 76 36610 1980 1998
+5 * 500 0 0 1 0 0 1
+7 * 500
+7 * 500
+3 * 500
+3 * 500 0 500
cfn=(142)
calls=500 0x401585 -52 
* * 13110500 5797000 3026500 8 0 0 8 0 0 252500 1002
+5 * 500 0 500
+8 * 500 500
+6 * 500 0 500
+6 * 500
+7 * 500
+3 * 500 0 500
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=500 0x402df4 414 
* * 125016 39262 27749 33 5 0 33 5 0 13972 354 1000
+5 * 500
+7 * 500
+3 * 500 0 500 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=500 0x402e74 414 
* * 132206 41779 30166 7 2 0 7 2 0 15889 155 1000
+5 +2 500
+7 * 500
+7 * 500
+3 * 500
+3 * 500 0 500
cfi=(2)
cfn=(4)
calls=500 0x4030b2 310 
* * 586738 177125 167357 2 1 2 2 1 2 36441 918 1998
+5 * 500
+7 * 500
+7 * 500
+3 * 500
+3 * 500 0 500
cfi=(2)
cfn=(80)
calls=500 0x402ff4 310 
* * 586846 174881 163948 0 0 0 0 0 0 36538 1394 1998
+5 * 500 500
+6 * 500 0 0 1 0 0 1
+7 * 500
+7 * 500 0 500
+6 * 500 500
+8 * 500
+3 * 500
+3 * 500 0 500
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=500 0x401719 -33 
* * 6065500 2526000 1390750 4 0 0 4 0 0 126250 501
+5 * 500 0 500
+8 * 500 500
+6 * 500 0 500
+6 * 500
+7 * 500 0 0 1 0 0 1
+3 * 500 0 500
cfi=(2)
cfn=(148)
calls=500 0x402df4 414 
* * 125016 39262 27749 0 0 0 0 0 0 13972 347 1000
+5 * 500
+7 * 500
+3 * 500 0 500
cfi=(2)
cfn=(178)
calls=500 0x402e74 414 
* * 132206 41779 30166 0 0 0 0 0 0 15889 150 1000
+5 +2 500 500
+7 * 500
+3 * 500 0 500
cfi=(2)
cfn=(2)
calls=500 0x402d74 645 
* * 6500 3000 1000
+5 * 500 500
+6 * 500
+3 * 500
+3 * 500
+3 * 500 500
+7 * 500
+3 * 500 0 0 1 0 0 1
+3 * 500 0 500
cfi=(2)
cfn=(144)
calls=500 0x402d9a 770 
* * 5500 2500 1500
+5 * 500
+3 * 500
+7 * 500
+3 * 500
+3 * 500 0 500
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=500 0x402eda 901 
* * 44723 16869 12862 49 38 10 49 38 10 1893 92 47
+5 +1 500 500
+7 * 500
+3 * 500 0 500
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=500 0x402f54 645 
* * 6500 3000 1000 0 1 0 0 1
+5 * 500 500
+6 * 500
+3 * 500
+3 * 500
+3 * 500 500
+7 * 500 0 0 1 0 0 1
+3 * 500
+3 * 500 0 500
cfi=(2)
cfn=(146)
calls=500 0x402dba 770 
* * 5500 2500 1500
+5 * 500
+3 * 500
+7 * 500
+3 * 500
+3 * 500 0 500
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=500 0x402f7a 901 
* * 44825 16672 12702 22 48 50 22 48 50 1955 91 47
+5 +1 500 500
+7 * 500
+3 * 500 0 500
cfi=(2)
cfn=(10)
calls=500 0x402f54 645 
* * 6500 3000 1000
+5 * 500 500
+6 * 500
+3 * 500
+3 * 500
+3 * 500 500 0 1 0 0 1
+7 * 500
+3 * 500
+3 * 500 0 500
cfi=(2)
cfn=(146)
calls=500 0x402dba 770 
* * 5500 2500 1500
+5 * 500 500
+2 * 500
+4 * 500 500
+8 * 500 500
+8 * 500 0 500
+8 +1 500 500
+7 * 500
+3 * 500 0 500
cfi=(2)
cfn=(2)
calls=500 0x402d74 645 
* * 6500 3000 1000
+5 * 500 500 0 1 0 0 1
+6 * 500
+3 * 500
+3 * 500
+3 * 500 500
+7 * 500
+3 * 500
+3 * 500 0 500
cfi=(2)
cfn=(144)
calls=500 0x402d9a 770 
* * 5500 2500 1500
+5 * 500 500
+4 * 500 500
+8 * 500
+4 * 500 500
+8 * 500
+3 * 500 0 500
+8 +2 500 0 500
+7 -12 500 500
+8 * 500 500
+7 * 500 0 0 0 0 0 0 0 0 500 1
jcnd=1/500 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 500
+7 * 500
+3 * 500 0 500
cfi=(2)
cfn=(2)
calls=500 0x402d74 645 
* * 6500 3000 1000 2 0 1 2 0 1
+5 * 500
+3 * 500 500
+7 * 500
+3 * 500 0 500
cfi=(2)
cfn=(2)
calls=500 0x402d74 645 
* * 6500 3000 1000 0 1 0 0 1
+5 * 500
+3 * 500 0 0 0 0 0 0 0 0 500 2
+2 * 500 0 0 1 0 0 1
+5 * 500
jump=500 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 500
+2 * 500 0 0 0 0 0 0 0 0 500
jcnd=500/500 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+5 +1 500 500
+4 * 500
+3 * 500 0 500
cfi=(2)
cfn=(2)
calls=500 0x402d74 645 
* * 6500 3000 1000
+5 * 500
+3 * 500 0 500
+3 +1 500 500 0 1 0 0 1
+6 * 500 0 500
+3 * 500 500
+6 * 500 0 500
+3 +2 500 0 500
+7 * 500
jump=500 +86 * 
* * 
+2 +1 125750 125750
+3 * 125750
+3 * 125750 125750
+4 * 125750
+3 * 125750
+3 * 125750 0 125750
cfi=(2)
cfn=(144)
calls=125750 0x402d9a 770 
* * 1383250 628750 377250
+5 * 125750 125750
+4 * 125750 125750
+5 * 125750
+4 * 125750 0 125750
+5 +1 125750 125750
+3 * 125750
+3 * 125750 125750
+4 * 125750
+3 * 125750
+3 * 125750 0 125750
cfi=(2)
cfn=(146)
calls=125750 0x402dba 770 
* * 1383250 628750 377250
+5 * 125750 125750
+2 * 125750
+4 * 125750 125750
+5 * 125750
+4 * 125750 0 125750
+5 -2 125750 0 125750
+4 * 125750 125750
+3 * 125750
+3 * 125750 125750
+3 * 125750 0 0 0 0 0 0 0 0 125750 501
jcnd=125250/125750 -93 +1 
* * 
-9 * 500 500 0 1 0 0 1
+3 * 500
+3 * 500 500
+3 * 500 0 0 0 0 0 0 0 0 500
jcnd=500/500 -93 +1 
* * 
+2 +4 500 500
+3 * 500
+3 * 500 0 0 1 0 0 1
+4 * 500 500
+5 * 500
+4 * 500
+3 * 500 0 500
+5 +1 500 500
+3 * 500
+3 * 500
+4 * 500 500
+5 * 500
+4 * 500
+3 * 500 0 500
+5 +1 500 500
+5 * 500 500
+5 * 500 500
+5 * 500 0 0 1 0 0 1
+4 * 500
+3 * 500 0 500
+5 +2 500 500
+3 +1 500 0 500
+3 * 500 500
+5 * 500 500
+1 * 500 500

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000 1 0 0 1
+4 +1 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1000 0x4049d4 -35 
* * 6000 2000 3000 1 0 0 1
+5 * 1000 1000
+1 * 1000 1000

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1000 0x404520 -35 
* * 5000 2000 2000
+5 * 1000 1000
+1 * 1000 1000

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1000 0x404a28 -35 
* * 6000 2000 3000 1 0 1 1 0 1
+5 * 1000 1000
+1 * 1000 1000

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1000 0x4044cc -35 
* * 5000 2000 2000
+5 * 1000 1000
+1 * 1000 1000

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=500 0x403df2 -87 
* * 12000 4000 4500 0 32 3 0 32 3 500 2
+5 * 500 500
+1 * 500 500

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+4 * 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=500 0x40406a -87 
* * 12000 4000 4500 0 32 23 0 32 23 500
+5 * 500 500
+1 * 500 500

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+4 * 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2000 0 2000 1 0 0 1
+1 * 2000
+3 * 2000 0 2000
+4 +1 2000 2000
+4 * 2000 2000
+1 * 2000 2000

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2000 0 2000 1 0 0 1
+1 * 2000
+3 * 2000
+4 * 2000 0 2000
+4 +1 2000
+4 * 2000
+3 * 2000 0 2000 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2000 0x40500c 790 
* * 12000 6000 4000 1 0 0 1
+5 * 2000 2000
+3 * 2000 2000
+1 * 2000 2000

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1080 0 1080
+1 * 1080
+3 * 1080 0 1080
+4 +1 1080 1080
+4 * 1080 1080
+1 * 1080 1080

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2000 0 2000 1 0 0 1
+1 * 2000
+3 * 2000 0 2000
+4 +1 2000 2000 0 1 0 0 1
+4 * 2000 2000
+1 * 2000 2000

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1080 0 1080
+1 * 1080
+3 * 1080 0 1080 0 0 1 0 0 1
+4 +1 1080 1080
+4 * 1080 1080
+1 * 1080 1080

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2000 0 2000 1 0 0 1
+1 * 2000
+3 * 2000
+4 * 2000 0 2000
+4 +1 2000
+4 * 2000
+3 * 2000 0 2000
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2000 0x404ffe 790 
* * 12000 6000 4000 1 0 0 1
+5 * 2000 2000
+3 * 2000 2000
+1 * 2000 2000

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fl=(5)
fn=(28)
0x404992 113 1024 0 1024 1 0 0 1
+1 * 1024
+3 * 1024 0 1024
+4 +1 1024
+10 * 1024 1024
+1 * 1024 1024

fn=(176)
0x4044cc 86 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(224)
0x403df2 129 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500
+3 * 500
+5 * 500 0 500
cfi=(16)
cfn=(226)
calls=500 0x402d61 -20 
* * 3500 1500 1500
+5 * 500
+3 * 500 0 0 0 0 0 0 0 0 500 2
+2 * 500 500
+4 * 500 500 0 0 32 0 0 32
+2 * 500 0 500 0 0 3 0 0 3
+2 * 500 500
+1 * 500 500

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1008 0 1008
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 +1 1008 1008
+4 * 1008
+3 * 1008 0 1008
cob=(5)
cfi=(8)
cfn=(164)
calls=1008 0x387e4bb2f0 0 
* * 110901 27740 12612 24 5 0 24 5 0 27143 710 1008
* * 1008 1008 0 1 1 0 1 1 0 0 0 1008
+5 * 1008 1008
+1 * 1008 1008

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1008 0 1008
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 +1 1008 1008
+4 * 1008
+3 * 1008 0 1008
cob=(5)
cfi=(8)
cfn=(164)
calls=1008 0x387e4bb2f0 0 
* * 125261 32768 17438 0 2 0 0 2 0 30972 314 1008
* * 1008 1008 0 0 0 0 0 0 0 0 0 1008
+5 * 1008 1008
+1 * 1008 1008

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 +2 1008 1008
+4 * 1008
+3 * 1008 0 1008
cfn=(102)
calls=1008 0x4048de +12 
* * 6048 2016 2016 1 0 0 1
+5 * 1008 1008
+4 * 1008 0 0 1 0 0 1
+3 * 1008
+2 * 1008 0 0 0 0 0 0 0 0 1008
jcnd=1008/1008 +7 +3 
* * 
+7 +3 1008 1008
+4 * 1008
+4 * 1008
+3 * 1008 0 1008
cob=(5)
cfi=(8)
cfn=(32)
calls=1008 0x387e4bd0b0 0 
* * 293462 41863 40068 30 8 34 30 8 34 47406 2176 1008
* * 1008 1008 0 0 0 0 0 0 0 0 0 1008
+5 +1 1008 1008
+1 * 1008 1008

fn=(18)
0x404a28 81 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000 0 0 1 0 0 1
+4 * 1000 0 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(92)
0x4049d4 81 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(196)
0x404520 86 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 * 1008 0 1008 1 0 0 1
+4 +2 1008 1008
+4 * 1008
+3 * 1008 0 1008
cfn=(28)
calls=1008 0x404992 +12 
* * 6048 2016 2016 1 0 0 1
+5 * 1008 1008
+4 * 1008
+3 * 1008
+2 * 1008 0 0 0 0 0 0 0 0 1008
jcnd=1008/1008 +7 +3 
* * 
+7 +3 1008 1008
+4 * 1008
+4 * 1008
+3 * 1008 0 1008
cob=(5)
cfi=(8)
cfn=(32)
calls=1008 0x387e4bd0b0 0 
* * 293292 46162 46723 23 30 22 23 30 22 47267 1215 1008
* * 1008 1008 0 1 1 0 1 1 0 0 0 1008
+5 +1 1008 1008
+1 * 1008 1008

fn=(102)
0x4048de 113 1024 0 1024 1 0 0 1
+1 * 1024
+3 * 1024 0 1024
+4 +1 1024
+10 * 1024 1024
+1 * 1024 1024

fn=(266)
0x40406a 129 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 * 500 0 500
+4 +1 500 500
+4 * 500
+3 * 500
+5 * 500 0 500
cfi=(16)
cfn=(226)
calls=500 0x402d61 -20 
* * 3500 1500 1500
+5 * 500
+3 * 500 0 0 0 0 0 0 0 0 500
+2 * 500 500
+4 * 500 500 0 0 32 0 0 32
+2 * 500 0 500 0 0 23 0 0 23
+2 * 500 500
+1 * 500 500

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +2 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1000 0x404484 107 
* * 612942 209520 203524 25 3 4 25 3 4 24272 1276 1996 248
+5 * 1000 1000
+1 * 1000 1000

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +2 1000 1000 0 1 0 0 1
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1000 0x404a36 450 
* * 584942 199520 193524 24 3 4 24 3 4 24272 1276 1996 248
+5 * 1000 1000
+1 * 1000 1000

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +2 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1000 0x40439c 107 
* * 612942 209520 203524 7 1 46 7 1 46 24272 1265 1996
+5 * 1000 1000
+1 * 1000 1000

fn=(116)
0x40439c 107 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +10 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1000 0x4047d7 -26 
* * 598942 204520 198524 7 1 46 7 1 46 24272 1265 1996
+5 +1 1000 1000
+1 * 1000 1000

fn=(118)
0x4047d7 91 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +2 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1000 0x4049e2 450 
* * 584942 199520 193524 7 1 46 7 1 46 24272 1265 1996
+5 * 1000 1000
+1 * 1000 1000

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +10 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(52)
calls=1000 0x404829 -26 
* * 598942 204520 198524 25 3 4 25 3 4 24272 1276 1996 248
+5 +1 1000 1000
+1 * 1000 1000

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000
+4 +2 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000 1000
+4 * 1000 1000
+3 * 1000
+3 * 1000
+3 * 1000
+4 * 1000
+3 * 1000 1000
+4 * 1000 1000
+3 -1 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1000 0x403d98 +11 
* * 152412 42558 27332 1 2 0 1 2 0 31778 305 2000
+5 +1 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=1000 0x403296 -82 
* * 23000 8000 8000 1 0 0 1
+5 * 1000
jump=1000 +28 * 
* * 
+28 * 1000
+4 * 1000 1000
+1 * 1000 1000
+1 * 1000 1000

fn=(2)
0x402d74 645 4032 0 4032 1 0 0 1
+1 * 4032
+3 * 4032 0 4032 0 0 1 0 0 1
+4 +1 4032 4032
+4 * 4032 4032 0 1 1 0 1 1
+4 * 4032
+3 * 4032 4032
+4 * 4032 4032
+3 * 4032
+3 * 4032
+3 * 4032
+4 * 4032 4032
+1 * 4032 4032

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +2 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=1000 0x404236 -14 
* * 332078 58768 58328 26 15 13 26 15 13 48670 1145 2000
+5 * 1000 1000
+4 * 1000 0 1000
+3 +1 1000 1000
+4 * 1000 1000 0 1 0 0 1
+3 * 1000 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+3 * 1000 1000
+4 * 1000
+4 * 1000
+3 * 1000 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+1 * 1000 1000

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +2 1000 1000
+4 * 1000 1000 0 1 0 0 1
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=1000 0x403fbe -14 
* * 332370 54278 51521 13 3 30 13 3 30 48876 2109 2000
+5 * 1000 1000
+4 * 1000 0 1000
+3 +1 1000 1000
+4 * 1000 1000
+3 * 1000 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+3 * 1000 1000
+4 * 1000
+4 * 1000
+3 * 1000 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+1 * 1000 1000

fn=(244)
0x402f7a 901 500 0 500
+1 * 500
+3 * 500 0 0 1 0 0 1
+4 * 500 0 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500 0 0 0 0 0 0 0 0 500
jcnd=8/500 +51 +10 
* * 
+2 +3 492 492
+4 * 492 492
+4 * 492 492
+4 -1 492 492
+4 * 492
+3 * 492
+3 * 492 0 492
cfi=(3)
cfn=(264)
calls=492 0x4036b1 215 
* * 18696 6396 6888 0 31 19 0 31 19 492
+5 +2 492 492
+4 * 492 492
+4 * 492
+4 * 492 492
+4 * 492 0 492
+4 * 492
jump=492 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12977 3736 3258 21 17 31 21 17 31 963 91 47
+5 +2 500 500
+1 * 500 500

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 2024 0 2024 1 0 0 1
+1 * 2024
+3 * 2024 0 2024 1 0 0 1
+4 +1 2024 2024
+4 * 2024 2024
+1 * 2024 2024

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+3 * 1000 0 1000
+4 * 1000
+4 * 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1000 0x404380 726 
* * 10000 5000 4000
+5 * 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(148)
0x402df4 414 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000 1 0 0 1
+4 +2 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1000 0x40325e 113 
* * 6000 3000 2000
+5 * 1000
+3 * 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+3 -1 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1000 0x40326c 148 
* * 31000 10000 12000 4 0 0 4
+5 +1 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=1000 0x4031ec 159 
* * 189032 56524 35498 27 5 0 27 5 0 27944 701 2000
+5 * 1000
jump=1000 +28 * 
* * 
+28 * 1000 0 0 1 0 0 1
+4 * 1000 1000
+1 * 1000 1000
+1 * 1000 1000

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 +2 1008 1008
+5 * 1008 0 0 0 0 0 0 0 0 1008
+2 +1 1008 1008
+4 * 1008 1008
+4 * 1008 1008
+4 * 1008
+3 * 1008
+3 * 1008 0 1008
cfi=(5)
cfn=(160)
calls=1008 0x4044d6 -65 
* * 122997 31772 17652 25 6 0 25 6 0 27143 710 2016
+5 +1 1008 1008
+1 * 1008 1008

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1000 0x4043ca -45 
* * 36000 13000 14000 4 0 4 4 0 4
+5 +1 1000 1000 0 1 0 0 1
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(20)
calls=1000 0x404412 +43 
* * 357078 70768 65328 27 15 13 27 15 13 48670 1145 2000
+5 * 1000
jump=1000 +28 * 
* * 
+28 * 1000
+4 * 1000 1000
+1 * 1000 1000
+1 * 1000 1000

fn=(14)
0x4043ca 90 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000 0 0 1 0 0 1
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(4)
cfn=(16)
calls=1000 0x404804 +24 
* * 18000 6000 7000 2 0 1 2 0 1
+5 * 1000 1000
+4 * 1000 0 1000 0 0 2 0 0 2
+7 * 1000 1000
+4 * 1000 0 1000 1 0 0 1
+8 * 1000 1000
+4 * 1000 0 1000
+8 +1 1000 1000
+1 * 1000 1000

fn=(80)
0x402ff4 310 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+2 * 1000 0 1000
+2 * 1000 0 1000
+1 * 1000 0 0 1 0 0 1
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +2 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=1000 0x4039fc 117 
* * 6000 3000 2000 2 0 0 2
+5 * 1000
+3 * 1000 0 1000
cfi=(3)
cfn=(84)
calls=1000 0x4039ed -88 
* * 6000 3000 2000
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(2)
calls=1000 0x402d74 645 
* * 13000 6000 2000
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000
+3 * 1000 0 1000 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1000 0x403a0a 134 
* * 415370 86278 79521 20 3 30 20 3 30 48876 2109 2000
+5 +4 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(106)
calls=1000 0x40325e 113 
* * 6000 3000 2000 1 0 0 1
+5 * 1000
+3 * 1000 1000
+4 * 1000 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=1000 0x403a98 565 
* * 25000 10000 8000 2 0 0 2
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(112)
calls=1000 0x403a68 547 
* * 25000 10000 8000
+5 * 1000
+3 * 1000
+3 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(11)
cfn=(114)
calls=1000 0x403ac9 -60 
* * 627942 214520 209524 7 1 46 7 1 46 24272 1265 1996
+5 -3 1000 1000
+4 * 1000 0 1000
+4 * 1000
jump=1000 +28 +4 
* * 
+28 +4 1000
+4 * 1000 1000
+1 * 1000 1000
+2 * 1000 1000
+2 * 1000 1000
+1 * 1000 1000

fn=(188)
0x403d98 171 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 +2 1008 1008
+5 * 1008 0 0 0 0 0 0 0 0 1008 8
+2 +1 1008 1008
+4 * 1008 1008
+4 * 1008 1008
+4 * 1008
+3 * 1008
+3 * 1008 0 1008
cfi=(5)
cfn=(190)
calls=1008 0x40452a -65 
* * 137357 36800 22478 0 2 0 0 2 0 30972 314 2016
+5 +1 1008 1008
+1 * 1008 1008

fn=(22)
0x404236 167 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008
+4 * 1008 0 1008 1 0 0 1
+4 * 1008 0 1008
+4 0 1008 1008
+5 0 1008 0 0 0 0 0 0 0 0 1008
+2 0 1008 1008
+4 0 1008 1008
+4 0 1008
+5 0 1008
+3 0 1008
+3 0 1008 0 1008
fi=(6) ???
cfi=(5)
cfn=(26)
calls=1008 0x404730 99 
* 0 319500 54226 54787 27 31 22 27 31 22 48275 1215 2016
+5 0 1008
fi=(6)
jump=1008 +7 0 
* 0 
+7 0 1008 1008
+1 0 1008 1008

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+4 * 1000 0 1000
+4 * 1000
+4 * 1000 0 0 1 0 0 1
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1000 0x404468 726 
* * 10000 5000 4000 1 0 0 1
+5 * 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+3 * 1000 0 1000
+4 * 1000
+4 * 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(10)
cfn=(44)
calls=1000 0x404468 726 
* * 10000 5000 4000
+5 * 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(86)
0x403a0a 134 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1000 0x4042e2 -45 
* * 36000 13000 14000 5 0 0 5
+5 +1 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000 1 0 0 1
cfn=(94)
calls=1000 0x40432a +43 
* * 357370 66278 58521 14 3 30 14 3 30 48876 2109 2000
+5 * 1000
jump=1000 +28 * 
* * 
+28 * 1000
+4 * 1000 1000
+1 * 1000 1000
+1 * 1000 1000

fn=(88)
0x4042e2 90 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000 1 0 0 1
cfi=(4)
cfn=(90)
calls=1000 0x4047b2 +24 
* * 18000 6000 7000 3 0 0 3
+5 * 1000 1000
+4 * 1000 0 1000
+7 * 1000 1000
+4 * 1000 0 1000
+8 * 1000 1000
+4 * 1000 0 1000
+8 +1 1000 1000
+1 * 1000 1000

fn=(156)
0x4031ec 159 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000
+4 +2 1000 1000
+4 * 1000 1000 0 1 0 0 1
+4 * 1000
+3 * 1000 1000
+4 * 1000 1000
+3 * 1000
+3 * 1000
+3 * 1000
+4 * 1000
+3 * 1000 1000
+4 * 1000 1000
+3 -1 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(158)
calls=1000 0x403ce6 +11 
* * 138032 37524 22498 24 5 0 24 5 0 27944 701 2000
+5 +1 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1000 0x4031b8 -82 
* * 23000 8000 8000 1 0 0 1
+5 * 1000
jump=1000 +28 * 
* * 
+28 * 1000
+4 * 1000 1000
+1 * 1000 1000
+1 * 1000 1000

fn=(172)
0x4031b8 79 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfi=(4)
cfn=(174)
calls=1000 0x403ccc +42 
* * 14000 5000 5000
+5 * 1000 1000
+1 * 1000 1000

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 2032 0 2032 1 0 0 1
+1 * 2032
+3 * 2032 0 2032
+4 +1 2032 2032
+4 * 2032 2032 0 0 2 0 0 2
+4 * 2032
+3 * 2032 2032
+4 * 2032 2032
+3 * 2032
+3 * 2032
+3 * 2032
+4 * 2032 2032
+1 * 2032 2032

fn=(106)
0x40325e 113 2024 0 2024 1 0 0 1
+1 * 2024
+3 * 2024 0 2024
+4 +1 2024 2024
+4 * 2024 2024
+1 * 2024 2024

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 1016 0 1016 1 0 0 1
+1 * 1016
+3 * 1016 0 1016 0 0 1 0 0 1
+4 +1 1016 1016
+4 * 1016 1016
+1 * 1016 1016

fn=(82)
0x4039fc 117 1016 0 1016 1 0 0 1
+1 * 1016
+3 * 1016 0 1016 1 0 0 1
+4 +1 1016 1016
+4 * 1016 1016
+1 * 1016 1016

fn=(200)
0x402eda 901 500 0 500
+1 * 500
+3 * 500
+4 * 500 0 500
+4 * 500 0 500
+4 +2 500 500
+4 * 500 500
+4 * 500 500
+4 * 500 500
+4 * 500
+3 * 500 0 0 0 0 0 0 0 0 500 8
jcnd=8/500 +51 +10 
* * 
+2 +3 492 492
+4 * 492 492
+4 * 492 492
+4 -1 492 492
+4 * 492
+3 * 492
+3 * 492 0 492
cfi=(3)
cfn=(222)
calls=492 0x403373 215 
* * 18696 6396 6888 0 31 2 0 31 2 492 2
+5 +2 492 492
+4 * 492 492
+4 * 492
+4 * 492 492
+4 * 492 0 492
+4 * 492
jump=492 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12875 3933 3418 46 7 8 46 7 8 901 82 47
+5 +2 500 500
+1 * 500 500

fn=(4)
0x4030b2 310 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000 0 1000
+2 * 1000 0 1000
+2 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000 1 0 0 1
+4 * 1000 0 1000
+4 +2 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(6)
calls=1000 0x403b08 117 
* * 6000 3000 2000 1 0 1 1 0 1
+5 * 1000
+3 * 1000 0 1000
cfi=(3)
cfn=(8)
calls=1000 0x403afa -88 
* * 6000 3000 2000 1 0 0 1
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(10)
calls=1000 0x402f54 645 
* * 13000 6000 2000 1 1 0 1 1
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(12)
calls=1000 0x403b16 134 
* * 415078 90768 86328 32 15 17 32 15 17 48670 1145 2000
+5 +4 1000 1000 0 1 0 0 1
+4 * 1000
+3 * 1000 0 1000
cfn=(40)
calls=1000 0x40333c 113 
* * 6000 3000 2000 2 0 0 2
+5 * 1000
+3 * 1000 1000
+4 * 1000 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(42)
calls=1000 0x403ba4 565 
* * 25000 10000 8000 3 0 0 3
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(46)
calls=1000 0x403b74 547 
* * 25000 10000 8000
+5 * 1000
+3 * 1000
+3 * 1000
+3 * 1000
+3 * 1000 0 1000 1 0 0 1
cfi=(11)
cfn=(48)
calls=1000 0x403bd5 -60 
* * 627942 214520 209524 26 3 4 26 3 4 24272 1276 1996 248
+5 -3 1000 1000
+4 * 1000 0 1000
+4 * 1000
jump=1000 +28 +4 
* * 
+28 +4 1000
+4 * 1000 1000
+1 * 1000 1000
+2 * 1000 1000
+2 * 1000 1000
+1 * 1000 1000

fn=(108)
0x403a98 565 1000 0 1000 1 0 0 1
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 +1 1000 1000
+4 * 1000 1000
+4 * 1000 0 1000
+4 * 1000
+4 * 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(10)
cfn=(110)
calls=1000 0x404380 726 
* * 10000 5000 4000 1 0 0 1
+5 * 1000 1000
+4 * 1000 1000
+1 * 1000 1000

fn=(178)
0x402e74 414 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000 1 0 0 1
+4 +2 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(40)
calls=1000 0x40333c 113 
* * 6000 3000 2000
+5 * 1000
+3 * 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+3 -1 1000
+3 * 1000
+3 * 1000 0 1000
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1000 0x40334a 148 
* * 31000 10000 12000 2 0 0 2
+5 +1 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(186)
calls=1000 0x4032ca 159 
* * 203412 61558 40332 3 2 0 3 2 0 31778 305 2000
+5 * 1000
jump=1000 +28 * 
* * 
+28 * 1000 0 0 1 0 0 1
+4 * 1000 1000
+1 * 1000 1000
+1 * 1000 1000

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 1008 0 1008 1 0 0 1
+1 * 1008 0 0 1 0 0 1
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 0 1008 1008
+5 0 1008 0 0 0 0 0 0 0 0 1008
+2 0 1008 1008
+4 0 1008 1008
+4 0 1008
+5 0 1008
+3 0 1008
+3 0 1008 0 1008
fi=(6)
cfi=(5)
cfn=(100)
calls=1008 0x40461a 99 
* 0 319670 49927 48132 33 8 34 33 8 34 48414 2176 2016
+5 0 1008
fi=(6)
jump=1008 +7 0 
* 0 
+7 0 1008 1008
+1 0 1008 1008

fn=(144)
0x402d9a 770 378250 0 378250
+1 * 378250
+3 * 378250 0 378250
+4 * 378250 0 378250
+4 +1 378250 378250
+4 * 378250 378250
+3 * 378250 378250
+4 * 378250
+4 * 378250
+3 * 378250 378250
+1 * 378250 378250

fn=(146)
0x402dba 770 378250 0 378250
+1 * 378250
+3 * 378250 0 378250 1 0 0 1
+4 * 378250 0 378250
+4 +1 378250 378250
+4 * 378250 378250
+3 * 378250 378250
+4 * 378250
+4 * 378250
+3 * 378250 378250
+1 * 378250 378250

fn=(192)
0x403296 79 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfi=(4)
cfn=(194)
calls=1000 0x403d7e +42 
* * 14000 5000 5000 1 0 0 1
+5 * 1000 1000
+1 * 1000 1000

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404c52 424 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+2 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +4 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1000 0x40492d 277 
* * 15000 6000 5000 2 0 0 2
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1000 0x404d9d 277 
* * 25000 9000 8000 2 0 1 2 0 1
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(66)
calls=1000 0x404d9d 277 
* * 25000 9000 8000
+5 * 1000
+3 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=1000 0x404db7 -49 
* * 439942 150520 144524 15 3 3 15 3 3 24272 1276 1996 248
+5 +1 1000
+4 * 1000 1000
+1 * 1000 1000
+2 * 1000 1000
+1 * 1000 1000

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 1048 0 1048 1 0 0 1
+1 * 1048
+3 * 1048
+4 * 1048 0 1048
+4 +1 1048 1048
+4 * 1048
+3 * 1048 0 1048 1 0 0 1
cfi=(13)
cfn=(64)
calls=1048 -33 -66 
* * 6288 3144 2096
+5 * 1048 1048
+1 * 1048 1048

fn=(66)
0x404d9d 277 2000 0 2000
+1 * 2000
+3 * 2000
+4 * 2000 0 2000
+4 +1 2000 2000
+4 * 2000
+3 * 2000 0 2000
cfi=(13)
cfn=(68)
calls=2000 0x404f1a -58 
* * 32000 12000 10000 2 0 1 2 0 1
+5 * 2000 2000
+1 * 2000 2000

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +10 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1000 0x404bc6 288 
* * 15000 6000 5000 3 0 0 3
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(122)
calls=1000 0x404bc6 288 
* * 15000 6000 5000
+5 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1000 0x404be0 -36 
* * 532942 181520 175524 4 1 46 4 1 46 24272 1265 1996
+5 +1 1000
+4 * 1000 1000
+1 * 1000 1000
+1 * 1000 1000

fn=(128)
0x404878 277 1048 0 1048
+1 * 1048
+3 * 1048
+4 * 1048 0 1048 1 0 0 1
+4 +1 1048 1048
+4 * 1048
+3 * 1048 0 1048
cfi=(13)
cfn=(130)
calls=1048 -33 -66 
* * 6288 3144 2096 0 0 1 0 0 1
+5 * 1048 1048
+1 * 1048 1048

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 2000 0 2000
+1 * 2000
+3 * 2000
+4 * 2000 0 2000
+4 +1 2000 2000
+4 * 2000
+3 * 2000 0 2000
cfi=(13)
cfn=(134)
calls=2000 0x404e98 -58 
* * 32000 12000 10000 2 0 0 2
+5 * 2000 2000
+1 * 2000 2000

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +8 1000 0 1000
+4 +3 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1000 0x404eb5 -22 
* * 424942 145520 138524 1 1 46 1 1 46 24272 1265 1996
+5 +1 1000 1000
+1 * 1000 1000

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 2000 0 2000 1 0 0 1
+1 * 2000
+3 * 2000
+4 * 2000 0 2000
+4 +1 2000 2000
+4 * 2000
+3 * 2000 0 2000
cfi=(13)
cfn=(124)
calls=2000 0x404d36 -77 
* * 12000 6000 4000 2 0 0 2
+5 * 2000 2000
+1 * 2000 2000

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 2000 0 2000 1 0 0 1
+1 * 2000
+3 * 2000
+4 * 2000 0 2000 1 0 0 1
+4 +1 2000 2000
+4 * 2000
+3 * 2000 0 2000
cfi=(13)
cfn=(58)
calls=2000 0x404d8f -77 
* * 12000 6000 4000 1 0 0 1
+5 * 2000 2000
+1 * 2000 2000

fn=(74)
0x404f37 368 1016 0 1016
+1 * 1016
+3 * 1016
+4 * 1016 0 1016 1 0 0 1
+4 * 1016 0 1016
+4 * 1016 0 1016
+4 +2 1016 1016
+4 * 1016 1016
+4 * 1016
+3 * 1016
+3 * 1016
+4 * 1016 0 1016
+4 +1 1016 1016
+5 * 1016 0 0 0 0 0 0 0 0 1016
jcnd=8/1016 +33 +2 
* * 
+2 +1 1008 1008
+4 * 1008
+8 * 1008 1008
+4 * 1008 1008
+4 * 1008
+3 * 1008 0 0 1 0 0 1
+3 * 1008 0 1008 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1008 0x3877c83840 0 
* * 398064 134836 132825 11 2 20 11 2 20 23356 1280 1003 248
* * 1008 1008 0 1 1 0 1 1 0 0 0 1008
+5 +1 1016 1016
+4 * 1016
+8 * 1016 1016
+4 * 1016
+3 +1 1016 1016
+1 * 1016 1016

fn=(140)
0x404eb5 368 1016 0 1016
+1 * 1016
+3 * 1016
+4 * 1016 0 1016 1 0 0 1
+4 * 1016 0 1016
+4 * 1016 0 1016 0 0 1 0 0 1
+4 +2 1016 1016
+4 * 1016 1016
+4 * 1016
+3 * 1016
+3 * 1016
+4 * 1016 0 1016
+4 +1 1016 1016
+5 * 1016 0 0 0 0 0 0 0 0 1016
jcnd=8/1016 +33 +2 
* * 
+2 +1 1008 1008
+4 * 1008
+8 * 1008 1008
+4 * 1008 1008
+4 * 1008
+3 * 1008
+3 * 1008 0 1008
cob=(2)
cfi=(9)
cfn=(78)
calls=1008 0x3877c83840 0 
* * 398064 134836 132825 0 1 47 0 1 47 23356 1271 1003
* * 1008 1008 0 0 0 0 0 0 0 0 0 1008
+5 +1 1016 1016
+4 * 1016
+8 * 1016 1016
+4 * 1016
+3 +1 1016 1016
+1 * 1016 1016

fn=(72)
0x404db7 379 1000 0 1000
+1 * 1000
+3 * 1000
+4 * 1000 0 1000 1 0 0 1
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +8 1000 0 1000
+4 +3 1000 1000
+4 * 1000 1000
+4 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(74)
calls=1000 0x404f37 -22 
* * 424942 145520 138524 14 3 3 14 3 3 24272 1276 1996 248
+5 +1 1000 1000
+1 * 1000 1000

fn=(126)
0x404be0 424 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+2 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +4 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(128)
calls=1000 0x404878 277 
* * 15000 6000 5000 1 0 0 1
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(132)
calls=1000 0x404d44 277 
* * 25000 9000 8000 2 0 0 2
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(132)
calls=1000 0x404d44 277 
* * 25000 9000 8000
+5 * 1000
+3 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(138)
calls=1000 0x404d5e -49 
* * 439942 150520 144524 1 1 46 1 1 46 24272 1265 1996
+5 +1 1000
+4 * 1000 1000
+1 * 1000 1000
+2 * 1000 1000
+1 * 1000 1000

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 1000 0 1000
+1 * 1000
+3 * 1000 0 1000
+1 * 1000
+4 * 1000 0 1000 1 0 0 1
+4 * 1000 0 1000
+4 * 1000 0 1000
+4 +10 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(56)
calls=1000 0x404c38 288 
* * 15000 6000 5000 3 0 0 3
+5 * 1000
+3 * 1000 1000
+4 * 1000
+3 * 1000 0 1000
cfn=(56)
calls=1000 0x404c38 288 
* * 15000 6000 5000
+5 * 1000 1000
+4 * 1000
+3 * 1000
+3 * 1000 0 1000
cfn=(60)
calls=1000 0x404c52 -36 
* * 532942 181520 175524 20 3 4 20 3 4 24272 1276 1996 248
+5 +1 1000
+4 * 1000 1000
+1 * 1000 1000
+1 * 1000 1000

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 2000 0 2000 1 0 0 1
+1 * 2000
+3 * 2000 0 2000
+4 +1 2000 2000
+4 * 2000 2000
+1 * 2000 2000

fn=(110)
0x404380 726 2000 0 2000 1 0 0 1
+1 * 2000
+3 * 2000 0 2000
+4 * 2000 0 2000
+4 * 2000 2000
+4 * 2000 2000
+3 * 2000 2000
+4 * 2000 0 2000
+3 * 2000 2000
+1 * 2000 2000

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 2000 0 2000 1 0 0 1
+1 * 2000
+3 * 2000 0 2000
+4 +1 2000 2000
+4 * 2000 2000
+1 * 2000 2000

fn=(44)
0x404468 726 2000 0 2000
+1 * 2000
+3 * 2000 0 2000
+4 * 2000 0 2000
+4 * 2000 2000
+4 * 2000 2000
+3 * 2000 2000
+4 * 2000 0 2000 1 0 0 1
+3 * 2000 2000
+1 * 2000 2000

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008 0 1008
+4 * 1008 0 1008 1 0 0 1
+4 * 1008 1008
+1 * 1008 1008

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 +4 1008 1008
+4 * 1008 1008
+4 * 1008
+3 * 1008
+3 * 1008 0 1008
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1008 0x40454c -14 
* * 6048 2016 3024 1 0 0 1
+5 +2 1008 1008
+1 * 1008 1008

fn=(150)
0x40326c 148 1008 0 1008
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 +3 1008 1008 0 1 0 0 1
+4 * 1008 1008
+4 * 1008
+3 * 1008
+3 * 1008 0 1008
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1008 0x403d1a -29 
* * 18144 6048 7056 3 0 0 3
+5 +1 1008 1008
+1 * 1008 1008

fn=(180)
0x40334a 148 1008 0 1008
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 +3 1008 1008
+4 * 1008 1008
+4 * 1008
+3 * 1008
+3 * 1008 0 1008
cfn=(182)
calls=1008 0x403dcc -29 
* * 18144 6048 7056 2 0 0 2
+5 +1 1008 1008
+1 * 1008 1008

fn=(152)
0x403d1a 122 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008
+4 * 1008 0 1008
+4 * 1008 0 1008
+4 +4 1008 1008
+4 * 1008 1008
+4 * 1008
+3 * 1008
+3 * 1008 0 1008
cfn=(154)
calls=1008 0x4044f8 -14 
* * 6048 2016 3024 2 0 0 2
+5 +2 1008 1008
+1 * 1008 1008

fn=(184)
0x40454c 112 1008 0 1008 1 0 0 1
+1 * 1008
+3 * 1008 0 1008
+4 * 1008 0 1008
+4 * 1008 1008
+1 * 1008 1008

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 3550 498 491 3 16 9 3 16 9 613 70 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1073 290 186 0 0 0 0 0 0 202 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3428 689 643 22 5 4 22 5 4 546 67 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1093 296 194 2 1 0 2 1 0 207 9 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 2016 0 2016 1 0 0 1
+5 0 2016 0 2016
+5 0 2016
+3 0 2016 0 2016
+5 0 2016
+4 0 2016 2016 0 0 1 0 0 1
+7 0 2016 2016 0 0 1 0 0 1
+3 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016 2
+6 0 2016 2016 0 0 1 0 0 1
+7 0 2016 2016 0 1 1 0 1 1
+4 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016
+2 0 2016 2016 0 0 1 0 0 1
+3 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016
jcnd=2016/2016 +97 0 
* 0 
+18 0 2016
+3 0 2016
+3 0 2016 0 2016
cfn=(38) _int_malloc
calls=2016 0x3877c79a00 0 
* 0 469826 57785 68647 45 31 55 45 31 55 72497 3367
+5 0 2016
+3 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016
+2 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016
+2 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016 14
+2 0 2016 2016
+7 0 2016 0 0 0 0 0 0 0 0 2016
jcnd=2016/2016 +13 0 
* 0 
+13 0 2016 0 2016
+2 0 2016 0 0 0 0 0 0 0 0 2016 8
+6 0 2016
+3 0 2016 2016
+4 0 2016 2016
+5 0 2016 2016
+5 0 2016
+4 0 2016 2016
+1 0 2016 0 0 1 0 0 1
+5 0 2016 2016 0 0 1 0 0 1
+7 0 2016 0 0 0 0 0 0 0 0 2016
jcnd=2016/2016 +14 0 
* 0 
+14 0 2016 0 2016 1 0 0 1
+3 0 2016 0 0 0 0 0 0 0 0 2016
+6 0 2016
jump=2016 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2016 0 2016 1 0 0 1
+2 0 2016
+3 0 2016
+3 0 2016 0 2016
+2 0 2016
+3 0 2016 0 2016
+1 0 2016
+3 0 2016 0 2016
+1 0 2016
+3 0 2016
+4 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016
+6 0 2016
+4 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016 7
jcnd=10/2016 0x3877c838d1 0 
* 0 
+2 0 2006
+3 0 2006
+3 0 2006
+3 0 2006
+3 0 2006
+3 0 2006 0 0 0 0 0 0 0 0 2006
jcnd=2006/2006 +41 0 
* 0 
+41 0 2006 0 0 1 0 0 1
+3 0 2006 0 0 0 0 0 0 0 0 2006
jcnd=2006/2006 0x3877c839c0 0 
* 0 
+24 0 2006
+3 0 2006
+4 0 2006
+3 0 2006
+3 0 2006
+3 0 2006
+3 0 2006
+3 0 2006 0 0 0 0 0 0 0 0 2006 997
jcnd=1010/2006 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1006
+10 0 1006 1006 0 0 2 0 0 2
+3 0 1006
+4 0 1006 0 1006
+3 0 1006
+4 0 1006
+4 0 1006 0 0 0 0 0 0 0 0 1006
jcnd=1006/1006 -18 0 
* 0 
-18 0 3074 3074
+3 0 3074
+4 0 3074 0 3074
+3 0 3074
+4 0 3074
+4 0 3074 0 0 0 0 0 0 0 0 3074 11
jcnd=2068/3074 -18 0 
* 0 
+2 0 2016
+4 0 2016
+3 0 2016 2016
+1 0 2016 2016
+1 0 2016 2016
+2 0 2016 2016 0 1 0 0 1
+2 0 2016 2016
0x3877c839c0 0 2006 0 0 1 0 0 1
+3 0 2006
+3 0 2006
+3 0 2006
+4 0 2006 0 2006 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=2006 0x3877c89b20 0 
* 0 682138 255512 251500 6 1 66 6 1 66 32572 1536 2006 248
+5 0 2006
jump=2006 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2016 2016 0 1 1 0 1 1
+7 0 2016 2016 0 0 1 0 0 1
+3 0 2016
+3 0 2016 0 0 1 0 0 1 0 0 2016
+6 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016
+6 0 2016 2016 0 0 1 0 0 1
+4 0 2016
+4 0 2016
+2 0 2016 0 0 0 0 0 0 0 0 2016 2
+2 0 2016
+2 0 2016
+7 0 2016 0 0 0 0 0 0 0 0 2016
jcnd=2016/2016 +14 0 
* 0 
+14 0 2016
+2 0 2016
cfn=(170) _int_free
calls=2016 0x3877c78650 0 
* 0 197858 52444 30050 20 3 0 20 3 0 48035 1022

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 6
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 8
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 2016 0 2016 1 0 0 1
+2 0 2016 0 2016
+2 0 2016 0 2016
+2 0 2016
+3 0 2016 0 2016
+2 0 2016 0 2016
+1 0 2016 0 2016
+1 0 2016
+3 0 2016
+4 0 2016 2016
+4 0 2016 0 2016
+4 0 2016
+3 0 2016
+4 0 2016
+3 0 2016
+3 0 2016
+3 0 2016 0 0 1 0 0 1 0 0 2016
+6 0 2016
+4 0 2016 0 0 0 0 0 0 0 0 2016
+6 0 2016
+4 0 2016 0 0 0 0 0 0 0 0 2016
+6 0 2016 2016
+7 0 2016 0 0 0 0 0 0 0 0 2016 4
jcnd=1892/2016 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1892
+2 0 1892 0 0 0 0 0 0 0 0 1892
+6 0 1892 1892 0 1 0 0 1
+4 0 1892
+3 0 1892
+2 0 1892 0 0 0 0 0 0 0 0 1892
jcnd=1892/1892 0x3877c78a40 0 
* 0 
+6 0 1892 1892
+4 0 1892
+3 0 1892 0 0 0 0 0 0 0 0 1892
+6 0 1892 1892
+5 0 1892
+4 0 1892 0 0 0 0 0 0 0 0 1892
jcnd=1892/1892 0x3877c7907c 0 
* 0 
+6 0 1892 1892
+5 0 1892
+4 0 1892 0 0 0 0 0 0 0 0 1892
+6 0 1892
+4 0 1892 0 0 1 0 0 1 0 0 1892
+6 0 1892
+4 0 1892 1892
+7 0 1892 0 0 0 0 0 0 0 0 1892
+6 0 1892 1892
+6 0 1892
+2 0 1892 0 0 0 0 0 0 0 0 1892
+6 0 1892 1892
+4 0 1892 0 0 0 0 0 0 0 0 1892 3
jcnd=1889/1892 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=2/3 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 1892 1892 0 1 0 0 1
+4 0 1892 0 0 0 0 0 0 0 0 1892 910
jcnd=735/1892 0x3877c78bf0 0 
* 0 
+6 0 1157 1157 0 0 2 0 0 2
+6 0 1157 0 0 1 0 0 1 0 0 1157 84
jcnd=90/1157 0x3877c78a78 0 
* 0 
+6 0 1067 1067
+5 0 1067 1067
+5 0 1067 1067
+4 0 1067 0 0 0 0 0 0 0 0 1067
+6 0 1067 1067
+4 0 1067 0 0 0 0 0 0 0 0 1067
+6 0 1067 1067
+9 0 1067 0 1067
+4 0 1067 0 1067
+4 0 1067 0 0 0 0 0 0 0 0 1067 4
jcnd=1059/1067 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 1067
+3 0 1067
+4 0 1067 1067
+4 0 1067 1067
+4 0 1067 0 0 0 0 0 0 0 0 1067
-12 0 90
+4 0 90 90
+4 0 90 90
+4 0 90 0 0 0 0 0 0 0 0 90
+6 0 1157
+7 0 1157 0 1157
+4 0 1157 0 1157
+4 0 1157 0 0 0 0 0 0 0 0 1157 12
jcnd=588/1157 +18 0 
* 0 
+2 0 569 0 569
+8 0 569 0 569
+8 0 569 0 569
+4 0 569
+3 0 569 0 569 1 0 0 1
+4 0 569
+4 0 569 0 569
+4 0 569 0 569
+4 0 569
+7 0 569 0 0 0 0 0 0 0 0 569
jcnd=569/569 0x3877c78b20 0 
* 0 
-30 0 588 0 588
+4 0 588
+3 0 588 0 588
+4 0 588
+4 0 588 0 588
+4 0 588 0 588
+4 0 588
+7 0 588 0 0 0 0 0 0 0 0 588
jcnd=588/588 0x3877c78b20 0 
* 0 
-7 0 735
+7 0 735 0 0 0 0 0 0 0 0 735
jcnd=735/735 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1892 0 0 1 0 0 1
+5 0 1892 1892
+4 0 1892 1892
+7 0 1892 0 0 0 0 0 0 0 0 1892
jcnd=1892/1892 +16 0 
* 0 
+16 0 1892 0 1892
+5 0 1892 0 0 0 0 0 0 0 0 1892
+6 0 1892
+3 0 1892
jump=1892 0x3877c7878f 0 
* 0 
+10 0 90 0 90
+6 0 90 0 0 1 0 0 1
jump=90 0x3877c78885 0 
* 0 
0x3877c78b20 0 1892 1892 0 1 0 0 1
+4 0 1892
+2 0 1892 0 0 0 0 0 0 0 0 1892
+6 0 1892 1892
+7 0 1892 0 0 0 0 0 0 0 0 1892
jcnd=1892/1892 +15 0 
* 0 
+15 0 1892 0 1892 1 0 0 1
+4 0 1892 0 0 0 0 0 0 0 0 1892 2
+6 0 1892
+4 0 1892 1892
+1 0 1892 1892
+1 0 1892 1892
+2 0 1892 1892
+2 0 1892 1892
+2 0 1892 1892
+2 0 1892 1892
0x3877c78bf0 0 735 0 0 1 0 0 1
+3 0 735 0 735
+4 0 735
+3 0 735
+4 0 735 0 735 1 0 0 1
+4 0 735
jump=735 0x3877c788cf 0 
* 0 
0x3877c78f12 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 1892 1892 0 1 1 0 1 1
+4 0 1892 0 0 1 0 0 1
+7 0 1892
+4 0 1892
+3 0 1892
+3 0 1892 0 0 0 0 0 0 0 0 1892
jcnd=1892/1892 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 2006 0 0 1 0 0 1
+7 0 2006
+3 0 2006
+3 0 2006 2006 0 0 1 0 0 1
+4 0 2006
+4 0 2006 0 0 0 0 0 0 0 0 0 0 2006 248
jump=248 0x3877c89be8 0 
* 0 
jump=258 0x3877c89bd0 0 
* 0 
jump=248 0x3877c89bb8 0 
* 0 
jump=248 +11 0 
* 0 
jump=248 0x3877c89c48 0 
* 0 
jump=250 0x3877c89c30 0 
* 0 
jump=248 0x3877c89c18 0 
* 0 
jump=258 0x3877c89c00 0 
* 0 
+11 0 248 248
+3 0 248
+4 0 248
+4 0 248 248
+4 0 248
+4 0 248 0 248
+4 0 248
+9 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248
+4 0 248
+4 0 248 0 0 0 0 0 0 0 0 248
jcnd=8/248 0x3877c89c60 0 
* 0 
-40 0 31062 31062
+4 0 31062 0 31062 0 0 6 0 0 6
+4 0 31062 31062
+4 0 31062 0 31062 0 0 15 0 0 15
+4 0 31062 31062
+4 0 31062 0 31062 0 0 1 0 0 1
+4 0 31062 31062
+4 0 31062 0 31062 0 0 3 0 0 3
+4 0 31062
+4 0 31062
+4 0 31062 0 0 0 0 0 0 0 0 31062 1532
jcnd=1970/31062 0x3877c89c60 0 
* 0 
-32 0 250 250
+4 0 250 0 250
+4 0 250 250
+4 0 250 0 250
+4 0 250 250
+4 0 250 0 250
+4 0 250
+4 0 250
+4 0 250 0 0 0 0 0 0 0 0 250
jcnd=10/250 0x3877c89c60 0 
* 0 
-24 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248
+4 0 248
+4 0 248 0 0 0 0 0 0 0 0 248
jcnd=8/248 0x3877c89c60 0 
* 0 
-16 0 258 258 0 1 0 0 1
+4 0 258 0 258
+4 0 258 0 0 1 0 0 1
+4 0 258
+4 0 258 0 0 0 0 0 0 0 0 258 4
jcnd=10/258 0x3877c89c60 0 
* 0 
+6 0 30060
+4 0 30060 30060
+3 0 30060 0 30060 0 0 1 0 0 1
+3 0 30060 30060
+4 0 30060 0 30060 0 0 3 0 0 3
+4 0 30060 30060
+4 0 30060 0 30060 0 0 35 0 0 35
+4 0 30060 30060
+4 0 30060 0 30060
+4 0 30060
jump=30060 -80 0 
* 0 
-30 0 248 248
+3 0 248 0 248
+3 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248 0 0 2 0 0 2
+4 0 248 248
+4 0 248 0 248
+4 0 248
jump=248 -80 0 
* 0 
-24 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258
jump=258 -80 0 
* 0 
-16 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248
+4 0 248
jump=248 -80 0 
* 0 
+8 0 248 248
+3 0 248
+4 0 248 0 0 1 0 0 1
+4 0 248
+4 0 248
jump=248 -39 0 
* 0 
+9 0 258
+3 0 258 0 0 0 0 0 0 0 0 258
+6 0 258 258
+3 0 258
+4 0 258
jump=258 -72 0 
* 0 
+8 0 248
+4 0 248 248
+3 0 248 0 0 0 0 0 0 0 0 248
+2 0 248
+4 0 248
jump=248 -99 0 
* 0 
+11 0 258 258 0 1 0 0 1
+3 0 258
+4 0 258
+4 0 258
+4 0 258
jump=258 0x3877c89b78 0 
* 0 
+9 0 248 248
+3 0 248
+4 0 248
+4 0 248
+4 0 248
jump=248 0x3877c89b70 0 
* 0 
+9 0 250 250
+3 0 250
+4 0 250
+4 0 250
+4 0 250
jump=250 0x3877c89b68 0 
* 0 
+9 0 248 248
+3 0 248
+4 0 248
+4 0 248
+4 0 248
jump=248 0x3877c89b60 0 
* 0 
+9 0 2006 0 2006 1 0 0 1
+3 0 2006 2006

fn=(104) alloc_perturb
0x3877c77180 0 1868 1868 0 1 0 0 1
+6 0 1868
+2 0 1868 0 0 0 0 0 0 0 0 1868 1
+2 0 1868 1868

fn=(38)
0x3877c79a00 0 2016 0 2016 1 0 0 1
+2 0 2016
+3 0 2016 0 2016
+2 0 2016 0 2016
+2 0 2016 0 2016 0 0 1 0 0 1
+2 0 2016
+3 0 2016 0 2016
+1 0 2016 0 2016
+1 0 2016
+4 0 2016
+4 0 2016 0 0 0 0 0 0 0 0 2016
+6 0 2016
+4 0 2016
+6 0 2016
+3 0 2016
+4 0 2016
+4 0 2016
+4 0 2016
+3 0 2016 0 0 0 0 0 0 0 0 2016
+6 0 2016 2016 0 1 1 0 1 1
+7 0 2016 0 0 0 0 0 0 0 0 2016 7
jcnd=1894/2016 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 148 148
+6 0 148
+4 0 148
+2 0 148 0 0 0 0 0 0 0 0 148
+6 0 148
+3 0 148
+4 0 148 148
+1 0 148 148
+1 0 148 148
+2 0 148 148
+2 0 148 148
+2 0 148 148
+2 0 148 148
-14 0 1868
+4 0 1868 1868
+1 0 1868 1868
+1 0 1868 1868
+2 0 1868 1868
+2 0 1868 1868
+2 0 1868 1868
+2 0 1868 1868
+7 0 1911
+7 0 1911 0 0 1 0 0 1 0 0 1911 7
jcnd=1008/1911 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 2 0 0 2
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 1008 0 0 1 0 0 1
+3 0 1008
+4 0 1008
+4 0 1008 0 0 1 0 0 1 0 0 1008
jcnd=1008/1008 0x3877c7a1a4 0 
* 0 
+30 0 1008 1008
+6 0 1008
+5 0 1008 0 0 0 0 0 0 0 0 1008 1
jcnd=1007/1008 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 900 241 191 8 1 0 8 1 0 186 27
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1910 0 0 1 0 0 1
+3 0 1910
+3 0 1910
+3 0 1910
+4 0 1910
+3 0 1910
+4 0 1910 0 1910
+5 0 1910
+3 0 1910 0 1910
+4 0 1910 0 1910
+4 0 1910 0 1910
+5 0 1910
+3 0 1910
+3 0 1910
+3 0 1910
+3 0 1910
+4 0 1910
+4 0 1910 0 0 1 0 0 1
+4 0 1910 0 1910
+4 0 1910
+4 0 1910 0 1910
+5 0 1910 0 1910
+5 0 1910
+3 0 1910
+3 0 1910 0 1910
+5 0 1910
+5 0 1910
+3 0 1910 0 1910
+4 0 1910 0 1910
+4 0 1910
+6 0 1910 0 1910
+4 0 1910 0 1910
+5 0 1910 0 0 1 0 0 1
+3 0 1910
+3 0 1910
+3 0 1910
jump=1910 +87 0 
* 0 
+8 0 1393
+3 0 1393
+4 0 1393
+2 0 1393
+2 0 1393
+3 0 1393
+3 0 1393
+3 0 1393
+2 0 1393
+2 0 1393
+5 0 1393
+2 0 1393 1393
+4 0 1393
+3 0 1393
+4 0 1393 0 1393
+4 0 1393 0 1393
+8 0 1393
+7 0 1393 0 1393
+4 0 1393 0 1393
+4 0 1393 0 1393
+4 0 1393 0 0 0 0 0 0 0 0 1393
-38 0 553
+3 0 553
+4 0 553 0 553
+4 0 553 0 553
+8 0 553
+7 0 553 0 553
+4 0 553 0 553 0 0 1 0 0 1
+4 0 553 0 553
+4 0 553 0 0 0 0 0 0 0 0 553
+6 0 3857 3857 0 1 0 0 1
+4 0 3857
+3 0 3857 0 0 0 0 0 0 0 0 3857 161
jcnd=1848/3857 0x3877c79ef0 0 
* 0 
+6 0 2009 2009
+4 0 2009 2009 0 0 1 0 0 1
+4 0 2009
+4 0 2009 0 0 0 0 0 0 0 0 2009
+6 0 2009 2009 0 1 1 0 1 1
+7 0 2009 0 0 0 0 0 0 0 0 2009 2
+6 0 2009
+4 0 2009
+7 0 2009 0 0 0 0 0 0 0 0 2009 6
jcnd=1027/2009 +11 0 
* 0 
+2 0 982
+3 0 982 0 0 0 0 0 0 0 0 982 135
jcnd=819/982 0x3877c79e28 0 
* 0 
+6 0 1989
+3 0 1989 0 1989
+4 0 1989 0 1989
+5 0 1989 0 0 0 0 0 0 0 0 1989 25
jcnd=43/1989 0x3877c7a090 0 
* 0 
+6 0 1946
+7 0 1946 0 0 0 0 0 0 0 0 1946 470
jcnd=1393/1946 0x3877c79c50 0 
* 0 
+6 0 553 0 0 1 0 0 1
+3 0 553
+4 0 553
+4 0 553 0 0 0 0 0 0 0 0 553
+6 0 553
+3 0 553
+4 0 553
+2 0 553
+2 0 553
+3 0 553
+3 0 553
+8 0 553
+3 0 553
+2 0 553
+2 0 553
+4 0 553 553 0 0 1 0 0 1
+4 0 553
+3 0 553 0 0 1 0 0 1 0 0 553 7
jcnd=553/553 0x3877c79e15 0 
* 0 
0x3877c79e15 0 553 0 553
+4 0 553 0 553
+4 0 553
+3 0 553
jump=553 0x3877c79c73 0 
* 0 
+8 0 819 819 0 1 0 0 1
+4 0 819
+3 0 819 0 0 0 0 0 0 0 0 819 248
jcnd=428/819 0x3877c79ce1 0 
* 0 
+6 0 391 391
+5 0 391 0 0 0 0 0 0 0 0 391 5
jcnd=371/391 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 15 0 0 15
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 2 0 0 2
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 3 0 0 3
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 1848 0 0 1 0 0 1
+7 0 1848
+3 0 1848 0 0 0 0 0 0 0 0 1848 4
jcnd=994/1848 0x3877c7a0b0 0 
* 0 
+6 0 1824 1824 0 1 0 0 1
+4 0 1824
+3 0 1824
+3 0 1824
+2 0 1824
+4 0 1824
+3 0 1824
+3 0 1824
+2 0 1824
+2 0 1824
+2 0 1824
+2 0 1824 1824 0 0 1 0 0 1
+8 0 1824
+5 0 1824
+5 0 1824
+2 0 1824 0 0 0 0 0 0 0 0 1824
-2 0 903
+2 0 903 0 0 0 0 0 0 0 0 903 1
jcnd=1/903 +14 0 
* 0 
+2 0 2726
+2 0 2726 0 0 0 0 0 0 0 0 2726 47
jcnd=1815/2726 +64 0 
* 0 
+2 0 911
+8 0 911
+3 0 911
+3 0 911 0 0 0 0 0 0 0 0 911 1
jcnd=1/911 0x3877c79fc0 0 
* 0 
-6 0 1014
+3 0 1014
+3 0 1014 0 0 0 0 0 0 0 0 1014 11
jcnd=736/1014 0x3877c79fc0 0 
* 0 
+2 0 1188
+2 0 1188 1188
+8 0 1188
+2 0 1188 0 0 0 0 0 0 0 0 1188 21
jcnd=1013/1188 -20 0 
* 0 
+2 0 175
+2 0 175
+5 0 175
+3 0 175
+3 0 175
+2 0 175
+2 0 175
+5 0 175 0 0 0 0 0 0 0 0 175 1
jcnd=2/175 +14 0 
* 0 
+2 0 173
+2 0 173
+4 0 173
+2 0 173
+2 0 173 0 0 0 0 0 0 0 0 173
jcnd=173/173 -8 0 
* 0 
-8 0 14664
+4 0 14664
+2 0 14664
+2 0 14664 0 0 0 0 0 0 0 0 14664 1044
jcnd=12908/14664 -8 0 
* 0 
-2 0 1815 0 0 1 0 0 1
+2 0 1815 0 0 0 0 0 0 0 0 1815 36
jcnd=1583/1815 -8 0 
* 0 
+2 0 1990 1990 0 0 17 0 0 17
+4 0 1990 0 0 1 0 0 1
+3 0 1990 0 0 0 0 0 0 0 0 1990 1004
jcnd=1087/1990 0x3877c7a1cf 0 
* 0 
+6 0 903
+2 0 903
+4 0 903
+2 0 903
+2 0 903
+2 0 903 0 903
+8 0 903
jump=903 0x3877c79f30 0 
* 0 
+37 0 737 737 0 1 0 0 1
+5 0 737 737
+4 0 737
+4 0 737 737
+5 0 737 0 0 0 0 0 0 0 0 737
jcnd=737/737 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 43 0 0 1 0 0 1
+7 0 43 0 43
+6 0 43
+3 0 43 0 0 0 0 0 0 0 0 43
jcnd=43/43 0x3877c79ace 0 
* 0 
+16 0 994 994
+4 0 994
+4 0 994
+2 0 994
+5 0 994 994 0 1 0 0 1
+4 0 994
+3 0 994 0 0 0 0 0 0 0 0 994 12
jcnd=937/994 0x3877c79f00 0 
* 0 
+6 0 57 57
+4 0 57 0 0 0 0 0 0 0 0 57 5
jcnd=33/57 0x3877c79f00 0 
* 0 
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 10
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=16/24 0x3877c7a2e3 0 
* 0 
+6 0 8 8
+4 0 8
+7 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+4 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c7a285 0 
* 0 
+31 0 1008 0 0 1 0 0 1
+3 0 1008 0 1008
+4 0 1008
jump=1008 0x3877c79b99 0 
* 0 
+36 0 1087 1087 0 1 1 0 1 1
+4 0 1087 1087 0 0 1 0 0 1
+4 0 1087
+3 0 1087 1087
+4 0 1087
+4 0 1087
+3 0 1087
+3 0 1087 1087
+4 0 1087 0 0 0 0 0 0 0 0 1087
+6 0 1087 1087
+4 0 1087 0 0 0 0 0 0 0 0 1087
+6 0 1087 1087 0 1 0 0 1
+8 0 1087 0 1087
+4 0 1087 0 1087
+4 0 1087 0 0 0 0 0 0 0 0 1087 11
jcnd=558/1087 +38 0 
* 0 
+2 0 529 529 0 0 1 0 0 1
+4 0 529
+3 0 529 0 0 0 0 0 0 0 0 529
+2 0 529 529
+5 0 529 0 0 0 0 0 0 0 0 529
+6 0 529 529
+4 0 529 0 529
+4 0 529 529
+4 0 529 0 529
+4 0 529
+4 0 529 0 0 0 0 0 0 0 0 529
-4 0 558
+4 0 558 0 0 0 0 0 0 0 0 558 13
jcnd=28/558 0x3877c7a2e3 0 
* 0 
+6 0 1059 1059
+4 0 1059 1059 0 1 0 0 1
+4 0 1059 0 0 0 0 0 0 0 0 1059
+6 0 1059
+4 0 1059
+7 0 1059 0 1059 0 0 10 0 0 10
+4 0 1059 0 1059
+4 0 1059 0 1059
+4 0 1059 0 1059
+4 0 1059 0 0 0 0 0 0 0 0 1059 4
jcnd=522/1059 +7 0 
* 0 
+2 0 537 0 537
+5 0 537
+7 0 537 0 0 0 0 0 0 0 0 537 1
jcnd=531/537 +18 0 
* 0 
-7 0 522
+7 0 522 0 0 0 0 0 0 0 0 522
jcnd=522/522 +18 0 
* 0 
+2 0 6 0 6
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 1061 0 0 1 0 0 1
+7 0 1061 0 1061
+4 0 1061
+3 0 1061
+3 0 1061
+4 0 1061
+3 0 1061
+4 0 1061
+3 0 1061
+3 0 1061
+4 0 1061 0 1061
+4 0 1061 0 1061 0 0 1 0 0 1
+4 0 1061
jump=1061 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 44
+7 0 44 0 44
+6 0 44
+3 0 44 0 0 0 0 0 0 0 0 44 2
jcnd=44/44 +7 0 
* 0 
+7 0 1111
+4 0 1111 0 0 1 0 0 1
+3 0 1111
+3 0 1111 0 1111
cfn=(104)
calls=1111 0x3877c77180 0 
* 0 4444 2222 0 1 0 0 1 0 0 1111
+5 0 1111
+3 0 1111
jump=1111 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 737 0 0 1 0 0 1
+7 0 737
+2 0 737
+4 0 737
+3 0 737
+3 0 737 0 737
+5 0 737
+3 0 737
+4 0 737
+3 0 737 0 0 1 0 0 1
+4 0 737
+4 0 737
+3 0 737
+4 0 737 0 737
+4 0 737 0 737 0 0 20 0 0 20
+4 0 737
+3 0 737
+3 0 737 0 737
cfn=(104)
calls=737 0x3877c77180 0 
* 0 2948 1474 0 0 0 0 0 0 0 737 1
+5 0 737
+3 0 737
jump=737 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

totals: 22255834 9263212 5248542 242 120 160 242 120 160 589912 8490 12086 248
