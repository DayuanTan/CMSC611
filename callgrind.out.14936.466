version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 466


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 555417516 - 557916880
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 2056 0 0 1 0 0 1
+3 0 2056 0 0 0 0 0 0 0 0 2056
+2 0 2056
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=2056 0x3877c7b8b0 0 
* 0 231557 59199 30437 21 5 0 21 5 0 56869 884
* 0 2056 2056 0 1 1 0 1 1 0 0 0 2056

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 2056 0 2056 1 0 0 1
+1 0 2056
+5 0 2056
+3 0 2056 0 2056
+1 0 2056
+4 0 2056 0 0 1 0 0 1
+3 0 2056
+4 0 2056
+3 0 2056 0 2056 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=2056 0x3877c7aa50 0 
* 0 552824 81553 81839 49 39 63 49 39 63 91135 3148
* 0 2056 2056 0 1 1 0 1 1 0 0 0 2056
+5 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056
jcnd=2056/2056 +96 0 
* 0 
+96 0 2056 0 0 1 0 0 1
+4 0 2056 2056
+1 0 2056 2056
+1 0 2056 2056

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 510 0 510 1 0 0 1
+1 * 510
+3 * 510
+4 * 510 0 510
+4 * 510 0 510
+4 +1 510 510
+4 * 510
+3 * 510 0 510
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=510 0x402d74 645 
* * 6630 3060 1020
+5 * 510
+3 * 510 0 510
+3 +1 510 510
+6 * 510 0 510
+3 * 510 510
+6 * 510 0 510
+3 +1 510 510
+6 * 510 0 510 1 0 0 1
+3 * 510 510
+6 * 510 0 510
+3 +2 510 0 510
+7 * 510
jump=510 +86 * 
* * 
+2 +1 130815 130815
+3 * 130815
+3 * 130815 130815
+4 * 130815
+3 * 130815
+3 * 130815 0 130815
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=130815 0x402d9a 770 
* * 1438965 654075 392445
+5 * 130815 130815
+4 * 130815 130815
+5 * 130815
+4 * 130815 0 130815
+5 +1 130815 130815
+3 * 130815
+3 * 130815 130815
+4 * 130815
+3 * 130815
+3 * 130815 0 130815
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=130815 0x402dba 770 
* * 1438965 654075 392445 1 0 0 1
+5 * 130815 130815
+2 * 130815
+4 * 130815 130815
+5 * 130815
+4 * 130815 0 130815
+5 -2 130815 0 130815
+4 * 130815 130815
+3 * 130815
+3 * 130815 130815
+3 * 130815 0 0 0 0 0 0 0 0 130815 511
jcnd=130305/130815 -93 +1 
* * 
-9 * 510 510 0 1 0 0 1
+3 * 510
+3 * 510 510
+3 * 510 0 0 0 0 0 0 0 0 510
jcnd=510/510 -93 +1 
* * 
+2 +4 510 510
+3 * 510
+3 * 510
+4 * 510 510 0 1 0 0 1
+5 * 510
+4 * 510
+3 * 510 0 510
+5 +1 510 510
+3 * 510
+3 * 510
+4 * 510 510
+5 * 510
+4 * 510
+3 * 510 0 510
+5 +1 510 0 510
+7 * 510
jump=510 0x4016ee * 
* * 
+2 +1 130815 130815
+3 * 130815
+3 * 130815 130815
+4 * 130815
+3 * 130815 0 0 1 0 0 1
+3 * 130815 0 130815
cfi=(2)
cfn=(146)
calls=130815 0x402dba 770 
* * 1438965 654075 392445
+5 * 130815 130815
+2 * 130815
+4 * 130815 130815
+5 * 130815 0 130815
+5 +1 130815 130815
+3 * 130815
+3 * 130815 130815
+4 * 130815
+3 * 130815
+3 * 130815 0 130815
cfi=(2)
cfn=(144)
calls=130815 0x402d9a 770 
* * 1438965 654075 392445
+5 * 130815 130815
+4 * 130815 130815
+5 * 130815 0 130815
+5 +1 130815 130815
+5 * 130815 130815
+5 * 130815 130815
+5 * 130815
+4 * 130815 0 130815
+5 +1 130815 130815
+5 * 130815 130815
+5 * 130815 130815
+5 * 130815
+4 * 130815 0 130815
+5 -4 130815 0 130815
+4 * 130815 130815
+3 * 130815
+3 * 130815 130815
+3 * 130815 0 0 0 0 0 0 0 0 130815 511
jcnd=130305/130815 0x401672 +1 
* * 
-9 * 510 510 0 1 0 0 1
+3 * 510
+3 * 510 510
+3 * 510 0 0 0 0 0 0 0 0 510
jcnd=510/510 0x401672 +1 
* * 
+6 +6 510 510 0 1 0 0 1
+5 * 510 510
+5 * 510 0 510
+5 +2 510 510
+3 +1 510 0 510
+3 * 510 510
+5 * 510 510
+1 * 510 510

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 510
+7 * 510
+7 * 510
+3 * 510
+3 * 510 0 510
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=510 0x4030b2 310 
* * 600767 181852 171976 66 22 16 66 22 16 36915 1526 2038 254
+5 * 510
+7 * 510
+7 * 510
+3 * 510
+3 * 510 0 510
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=510 0x402ff4 310 
* * 598545 179863 168557 38 8 113 38 8 113 36476 1892 2038
+5 * 510 0 0 1 0 0 1
+7 * 510
+7 * 510
+3 * 510
+3 * 510 0 510
cfn=(142)
calls=510 0x401585 -52 
* * 13637910 6030240 3148230 8 0 0 8 0 0 262650 1022
+5 * 510 0 510
+8 * 510 510
+6 * 510 0 510
+6 * 510
+7 * 510
+3 * 510 0 510
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=510 0x402df4 414 
* * 127072 39840 28245 33 5 0 33 5 0 14098 409 1020
+5 * 510
+7 * 510
+3 * 510 0 510 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=510 0x402e74 414 
* * 134752 42592 30721 7 1 0 7 1 0 16186 32 1020
+5 +2 510
+7 * 510
+7 * 510
+3 * 510
+3 * 510 0 510
cfi=(2)
cfn=(4)
calls=510 0x4030b2 310 
* * 600335 181817 171856 2 1 1 2 1 1 36870 951 2038
+5 * 510
+7 * 510
+7 * 510
+3 * 510
+3 * 510 0 510
cfi=(2)
cfn=(80)
calls=510 0x402ff4 310 
* * 597690 179812 168419 0 0 2 0 0 2 36341 1283 2038
+5 * 510 510
+6 * 510 0 0 1 0 0 1
+7 * 510
+7 * 510 0 510
+6 * 510 510
+8 * 510
+3 * 510
+3 * 510 0 510
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=510 0x401719 -33 
* * 6309210 2627520 1446615 4 0 0 4 0 0 131325 511
+5 * 510 0 510
+8 * 510 510
+6 * 510 0 510
+6 * 510
+7 * 510 0 0 1 0 0 1
+3 * 510 0 510
cfi=(2)
cfn=(148)
calls=510 0x402df4 414 
* * 127072 39840 28245 0 0 0 0 0 0 14098 402 1020
+5 * 510
+7 * 510
+3 * 510 0 510
cfi=(2)
cfn=(178)
calls=510 0x402e74 414 
* * 134752 42592 30721 0 0 0 0 0 0 16186 26 1020
+5 +2 510 510
+7 * 510
+3 * 510 0 510
cfi=(2)
cfn=(2)
calls=510 0x402d74 645 
* * 6630 3060 1020
+5 * 510 510
+6 * 510
+3 * 510
+3 * 510
+3 * 510 510
+7 * 510
+3 * 510 0 0 1 0 0 1
+3 * 510 0 510
cfi=(2)
cfn=(144)
calls=510 0x402d9a 770 
* * 5610 2550 1530
+5 * 510
+3 * 510
+7 * 510
+3 * 510
+3 * 510 0 510
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=510 0x402eda 901 
* * 45287 17123 13050 48 47 13 48 47 13 1891 85 47
+5 +1 510 510
+7 * 510
+3 * 510 0 510
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=510 0x402f54 645 
* * 6630 3060 1020 0 1 0 0 1
+5 * 510 510
+6 * 510
+3 * 510
+3 * 510
+3 * 510 510
+7 * 510 0 0 1 0 0 1
+3 * 510
+3 * 510 0 510
cfi=(2)
cfn=(146)
calls=510 0x402dba 770 
* * 5610 2550 1530
+5 * 510
+3 * 510
+7 * 510
+3 * 510
+3 * 510 0 510
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=510 0x402f7a 901 
* * 44265 16877 12844 21 34 47 21 34 47 1687 55 47
+5 +1 510 510
+7 * 510
+3 * 510 0 510
cfi=(2)
cfn=(10)
calls=510 0x402f54 645 
* * 6630 3060 1020
+5 * 510 510
+6 * 510
+3 * 510
+3 * 510
+3 * 510 510 0 1 0 0 1
+7 * 510
+3 * 510
+3 * 510 0 510
cfi=(2)
cfn=(146)
calls=510 0x402dba 770 
* * 5610 2550 1530
+5 * 510 510
+2 * 510
+4 * 510 510
+8 * 510 510
+8 * 510 0 510
+8 +1 510 510
+7 * 510
+3 * 510 0 510
cfi=(2)
cfn=(2)
calls=510 0x402d74 645 
* * 6630 3060 1020
+5 * 510 510 0 1 0 0 1
+6 * 510
+3 * 510
+3 * 510
+3 * 510 510
+7 * 510
+3 * 510
+3 * 510 0 510
cfi=(2)
cfn=(144)
calls=510 0x402d9a 770 
* * 5610 2550 1530
+5 * 510 510
+4 * 510 510
+8 * 510
+4 * 510 510
+8 * 510
+3 * 510 0 510
+8 +2 510 0 510
+7 -12 510 510
+8 * 510 510
+7 * 510 0 0 0 0 0 0 0 0 510 1
jcnd=1/510 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 510
+7 * 510
+3 * 510 0 510
cfi=(2)
cfn=(2)
calls=510 0x402d74 645 
* * 6630 3060 1020 2 0 1 2 0 1
+5 * 510
+3 * 510 510
+7 * 510
+3 * 510 0 510
cfi=(2)
cfn=(2)
calls=510 0x402d74 645 
* * 6630 3060 1020 0 1 0 0 1
+5 * 510
+3 * 510 0 0 0 0 0 0 0 0 510 1
+2 * 510 0 0 1 0 0 1
+5 * 510
jump=510 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 510
+2 * 510 0 0 0 0 0 0 0 0 510
jcnd=510/510 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 510 0 510
+1 * 510
+3 * 510
+4 * 510 0 510
+4 * 510 0 510
+4 * 510 0 510
+5 +1 510 510
+4 * 510
+3 * 510 0 510
cfi=(2)
cfn=(2)
calls=510 0x402d74 645 
* * 6630 3060 1020
+5 * 510
+3 * 510 0 510
+3 +1 510 510 0 1 0 0 1
+6 * 510 0 510
+3 * 510 510
+6 * 510 0 510
+3 +2 510 0 510
+7 * 510
jump=510 +86 * 
* * 
+2 +1 130815 130815
+3 * 130815
+3 * 130815 130815
+4 * 130815
+3 * 130815
+3 * 130815 0 130815
cfi=(2)
cfn=(144)
calls=130815 0x402d9a 770 
* * 1438965 654075 392445
+5 * 130815 130815
+4 * 130815 130815
+5 * 130815
+4 * 130815 0 130815
+5 +1 130815 130815
+3 * 130815
+3 * 130815 130815
+4 * 130815
+3 * 130815
+3 * 130815 0 130815
cfi=(2)
cfn=(146)
calls=130815 0x402dba 770 
* * 1438965 654075 392445
+5 * 130815 130815
+2 * 130815
+4 * 130815 130815
+5 * 130815
+4 * 130815 0 130815
+5 -2 130815 0 130815
+4 * 130815 130815
+3 * 130815
+3 * 130815 130815
+3 * 130815 0 0 0 0 0 0 0 0 130815 511
jcnd=130305/130815 -93 +1 
* * 
-9 * 510 510 0 1 0 0 1
+3 * 510
+3 * 510 510
+3 * 510 0 0 0 0 0 0 0 0 510
jcnd=510/510 -93 +1 
* * 
+2 +4 510 510
+3 * 510
+3 * 510 0 0 1 0 0 1
+4 * 510 510
+5 * 510
+4 * 510
+3 * 510 0 510
+5 +1 510 510
+3 * 510
+3 * 510
+4 * 510 510
+5 * 510
+4 * 510
+3 * 510 0 510
+5 +1 510 510
+5 * 510 510
+5 * 510 510
+5 * 510 0 0 1 0 0 1
+4 * 510
+3 * 510 0 510
+5 +2 510 510
+3 +1 510 0 510
+3 * 510 510
+5 * 510 510
+1 * 510 510

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1020 0x4044cc -35 
* * 5100 2040 2040
+5 * 1020 1020
+1 * 1020 1020

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020 1 0 0 1
+4 +1 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1020 0x4049d4 -35 
* * 6120 2040 3060 1 0 0 1
+5 * 1020 1020
+1 * 1020 1020

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1020 0x404520 -35 
* * 5100 2040 2040
+5 * 1020 1020
+1 * 1020 1020

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1020 0x404a28 -35 
* * 6120 2040 3060 1 0 1 1 0 1
+5 * 1020 1020
+1 * 1020 1020

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 510 0 510
+1 * 510
+3 * 510
+4 * 510 0 510
+4 * 510 0 510
+4 * 510 0 510
+4 +1 510 510
+4 * 510 510
+4 * 510 510
+4 * 510
+3 * 510
+3 * 510 0 510
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=510 0x403df2 -87 
* * 12240 4080 4590 0 33 3 0 33 3 510 3
+5 * 510 510
+1 * 510 510

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020 0 1020
+4 * 1020 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 510 0 510
+1 * 510
+3 * 510
+4 * 510 0 510
+4 * 510 0 510
+4 * 510 0 510
+4 +1 510 510
+4 * 510 510
+4 * 510 510
+4 * 510
+3 * 510
+3 * 510 0 510
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=510 0x40406a -87 
* * 12240 4080 4590 0 32 23 0 32 23 510
+5 * 510 510
+1 * 510 510

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+4 * 1020 1020
+4 * 1020 1020
+1 * 1020 1020

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1100 0 1100
+1 * 1100
+3 * 1100 0 1100
+4 +1 1100 1100
+4 * 1100 1100
+1 * 1100 1100

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040 0 2040
+4 +1 2040 2040 0 1 0 0 1
+4 * 2040 2040
+1 * 2040 2040

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1100 0 1100
+1 * 1100
+3 * 1100 0 1100 0 0 1 0 0 1
+4 +1 1100 1100
+4 * 1100 1100
+1 * 1100 1100

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040
+4 * 2040 0 2040
+4 +1 2040
+4 * 2040
+3 * 2040 0 2040
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=2040 0x404ffe 790 
* * 12240 6120 4080 1 0 0 1
+5 * 2040 2040
+3 * 2040 2040
+1 * 2040 2040

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040 0 2040
+4 +1 2040 2040
+4 * 2040 2040
+1 * 2040 2040

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040
+4 * 2040 0 2040
+4 +1 2040
+4 * 2040
+3 * 2040 0 2040 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=2040 0x40500c 790 
* * 12240 6120 4080 1 0 0 1
+5 * 2040 2040
+3 * 2040 2040
+1 * 2040 2040

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 1020
+4 * 1020 1020
+1 * 1020 1020

fl=(5)
fn=(28)
0x404992 113 1044 0 1044 1 0 0 1
+1 * 1044
+3 * 1044 0 1044
+4 +1 1044
+10 * 1044 1044
+1 * 1044 1044

fn=(176)
0x4044cc 86 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(224)
0x403df2 129 510 0 510
+1 * 510
+3 * 510
+4 * 510 0 510
+4 * 510 0 510
+4 * 510 0 510
+4 +1 510 510
+4 * 510
+3 * 510
+5 * 510 0 510
cfi=(16)
cfn=(226)
calls=510 0x402d61 -20 
* * 3570 1530 1530
+5 * 510
+3 * 510 0 0 0 0 0 0 0 0 510 3
+2 * 510 510
+4 * 510 510 0 0 33 0 0 33
+2 * 510 0 510 0 0 3 0 0 3
+2 * 510 510
+1 * 510 510

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1028 0 1028
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 +1 1028 1028
+4 * 1028
+3 * 1028 0 1028
cob=(5)
cfi=(8)
cfn=(164)
calls=1028 0x387e4bb2f0 0 
* * 112194 27867 12741 23 5 0 23 5 0 27370 817 1028
* * 1028 1028 0 1 1 0 1 1 0 0 0 1028
+5 * 1028 1028
+1 * 1028 1028

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1028 0 1028
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 +1 1028 1028
+4 * 1028
+3 * 1028 0 1028
cob=(5)
cfi=(8)
cfn=(164)
calls=1028 0x387e4bb2f0 0 
* * 127587 33388 17696 0 1 0 0 1 0 31555 67 1028
* * 1028 1028 0 0 0 0 0 0 0 0 0 1028
+5 * 1028 1028
+1 * 1028 1028

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 +2 1028 1028
+4 * 1028
+3 * 1028 0 1028
cfn=(102)
calls=1028 0x4048de +12 
* * 6168 2056 2056 1 0 0 1
+5 * 1028 1028
+4 * 1028 0 0 1 0 0 1
+3 * 1028
+2 * 1028 0 0 0 0 0 0 0 0 1028
jcnd=1028/1028 +7 +3 
* * 
+7 +3 1028 1028
+4 * 1028
+4 * 1028
+3 * 1028 0 1028
cob=(5)
cfi=(8)
cfn=(32)
calls=1028 0x387e4bd0b0 0 
* * 290954 43023 40680 33 20 50 33 20 50 46218 1944 1028
* * 1028 1028 0 0 0 0 0 0 0 0 0 1028
+5 +1 1028 1028
+1 * 1028 1028

fn=(18)
0x404a28 81 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020 0 1020 0 0 1 0 0 1
+4 * 1020 0 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(92)
0x4049d4 81 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(196)
0x404520 86 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 * 1028 0 1028 1 0 0 1
+4 +2 1028 1028
+4 * 1028
+3 * 1028 0 1028
cfn=(28)
calls=1028 0x404992 +12 
* * 6168 2056 2056 1 0 0 1
+5 * 1028 1028
+4 * 1028
+3 * 1028
+2 * 1028 0 0 0 0 0 0 0 0 1028
jcnd=1028/1028 +7 +3 
* * 
+7 +3 1028 1028
+4 * 1028
+4 * 1028
+3 * 1028 0 1028
cob=(5)
cfi=(8)
cfn=(32)
calls=1028 0x387e4bd0b0 0 
* * 294766 46754 47327 20 20 14 20 20 14 46973 1204 1028
* * 1028 1028 0 1 1 0 1 1 0 0 0 1028
+5 +1 1028 1028
+1 * 1028 1028

fn=(102)
0x4048de 113 1044 0 1044 1 0 0 1
+1 * 1044
+3 * 1044 0 1044
+4 +1 1044
+10 * 1044 1044
+1 * 1044 1044

fn=(266)
0x40406a 129 510 0 510
+1 * 510
+3 * 510
+4 * 510 0 510
+4 * 510 0 510
+4 * 510 0 510
+4 +1 510 510
+4 * 510
+3 * 510
+5 * 510 0 510
cfi=(16)
cfn=(226)
calls=510 0x402d61 -20 
* * 3570 1530 1530
+5 * 510
+3 * 510 0 0 0 0 0 0 0 0 510
+2 * 510 510
+4 * 510 510 0 0 32 0 0 32
+2 * 510 0 510 0 0 23 0 0 23
+2 * 510 510
+1 * 510 510

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1020 0x404484 107 
* * 631896 216260 210144 25 3 4 25 3 4 25072 1307 2036 254
+5 * 1020 1020
+1 * 1020 1020

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +2 1020 1020 0 1 0 0 1
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1020 0x404a36 450 
* * 603336 206060 199944 24 3 4 24 3 4 25072 1307 2036 254
+5 * 1020 1020
+1 * 1020 1020

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1020 0x40439c 107 
* * 631896 216260 210144 7 1 72 7 1 72 25072 1292 2036
+5 * 1020 1020
+1 * 1020 1020

fn=(116)
0x40439c 107 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +10 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1020 0x4047d7 -26 
* * 617616 211160 205044 7 1 72 7 1 72 25072 1292 2036
+5 +1 1020 1020
+1 * 1020 1020

fn=(118)
0x4047d7 91 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1020 0x4049e2 450 
* * 603336 206060 199944 7 1 72 7 1 72 25072 1292 2036
+5 * 1020 1020
+1 * 1020 1020

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +10 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(52)
calls=1020 0x404829 -26 
* * 617616 211160 205044 25 3 4 25 3 4 25072 1307 2036 254
+5 +1 1020 1020
+1 * 1020 1020

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1020 0x4043ca -45 
* * 36720 13260 14280 4 0 4 4 0 4
+5 +1 1020 1020 0 1 0 0 1
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=1020 0x404412 +43 
* * 361126 71929 66368 25 19 8 25 19 8 48713 1170 2040
+5 * 1020
jump=1020 +28 * 
* * 
+28 * 1020
+4 * 1020 1020
+1 * 1020 1020
+1 * 1020 1020

fn=(14)
0x4043ca 90 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020
+4 * 1020 0 1020 0 0 1 0 0 1
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(4)
cfn=(16)
calls=1020 0x404804 +24 
* * 18360 6120 7140 2 0 1 2 0 1
+5 * 1020 1020
+4 * 1020 0 1020 0 0 2 0 0 2
+7 * 1020 1020
+4 * 1020 0 1020 1 0 0 1
+8 * 1020 1020
+4 * 1020 0 1020
+8 +1 1020 1020
+1 * 1020 1020

fn=(80)
0x402ff4 310 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020 0 1020
+2 * 1020 0 1020
+2 * 1020 0 1020
+1 * 1020 0 0 1 0 0 1
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=1020 0x4039fc 117 
* * 6120 3060 2040 2 0 0 2
+5 * 1020
+3 * 1020 0 1020
cfi=(3)
cfn=(84)
calls=1020 0x4039ed -88 
* * 6120 3060 2040
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(2)
calls=1020 0x402d74 645 
* * 13260 6120 2040
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020
+3 * 1020 0 1020 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=1020 0x403a0a 134 
* * 415419 88335 80932 23 7 43 23 7 43 47745 1883 2040
+5 +4 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=1020 0x40325e 113 
* * 6120 3060 2040 1 0 0 1
+5 * 1020
+3 * 1020 1020
+4 * 1020 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=1020 0x403a98 565 
* * 25500 10200 8160 2 0 0 2
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=1020 0x403a68 547 
* * 25500 10200 8160
+5 * 1020
+3 * 1020
+3 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(11)
cfn=(114)
calls=1020 0x403ac9 -60 
* * 647196 221360 216264 7 1 72 7 1 72 25072 1292 2036
+5 -3 1020 1020
+4 * 1020 0 1020
+4 * 1020
jump=1020 +28 +4 
* * 
+28 +4 1020
+4 * 1020 1020
+1 * 1020 1020
+2 * 1020 1020
+2 * 1020 1020
+1 * 1020 1020

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 +2 1028 1028
+5 * 1028 0 0 0 0 0 0 0 0 1028 8
+2 +1 1028 1028
+4 * 1028 1028
+4 * 1028 1028
+4 * 1028
+3 * 1028
+3 * 1028 0 1028
cfi=(5)
cfn=(190)
calls=1028 0x40452a -65 
* * 139923 37500 22836 0 1 0 0 1 0 31555 67 2056
+5 +1 1028 1028
+1 * 1028 1028

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028
+4 * 1028 0 1028 1 0 0 1
+4 * 1028 0 1028
+4 0 1028 1028
+5 0 1028 0 0 0 0 0 0 0 0 1028
+2 0 1028 1028
+4 0 1028 1028
+4 0 1028
+5 0 1028
+3 0 1028
+3 0 1028 0 1028
fi=(6) ???
cfi=(5)
cfn=(26)
calls=1028 0x404730 99 
* 0 321494 54978 55551 24 21 14 24 21 14 48001 1204 2056
+5 0 1028
fi=(6)
jump=1028 +7 0 
* 0 
+7 0 1028 1028
+1 0 1028 1028

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+4 * 1020 0 1020
+4 * 1020
+4 * 1020 0 0 1 0 0 1
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1020 0x404468 726 
* * 10200 5100 4080 1 0 0 1
+5 * 1020 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+3 * 1020 0 1020
+4 * 1020
+4 * 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(10)
cfn=(44)
calls=1020 0x404468 726 
* * 10200 5100 4080
+5 * 1020 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(86)
0x403a0a 134 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1020 0x4042e2 -45 
* * 36720 13260 14280 5 0 0 5
+5 +1 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=1020 0x40432a +43 
* * 356259 67935 59512 17 7 43 17 7 43 47745 1883 2040
+5 * 1020
jump=1020 +28 * 
* * 
+28 * 1020
+4 * 1020 1020
+1 * 1020 1020
+1 * 1020 1020

fn=(88)
0x4042e2 90 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020 1 0 0 1
cfi=(4)
cfn=(90)
calls=1020 0x4047b2 +24 
* * 18360 6120 7140 3 0 0 3
+5 * 1020 1020
+4 * 1020 0 1020
+7 * 1020 1020
+4 * 1020 0 1020
+8 * 1020 1020
+4 * 1020 0 1020
+8 +1 1020 1020
+1 * 1020 1020

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020 1020 0 1 0 0 1
+4 * 1020
+3 * 1020 1020
+4 * 1020 1020
+3 * 1020
+3 * 1020
+3 * 1020
+4 * 1020
+3 * 1020 1020
+4 * 1020 1020
+3 -1 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=1020 0x403ce6 +11 
* * 139904 37860 22830 24 5 0 24 5 0 28196 811 2040
+5 +1 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1020 0x4031b8 -82 
* * 23460 8160 8160 1 0 0 1
+5 * 1020
jump=1020 +28 * 
* * 
+28 * 1020
+4 * 1020 1020
+1 * 1020 1020
+1 * 1020 1020

fn=(172)
0x4031b8 79 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfi=(4)
cfn=(174)
calls=1020 0x403ccc +42 
* * 14280 5100 5100
+5 * 1020 1020
+1 * 1020 1020

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 2072 0 2072 1 0 0 1
+1 * 2072
+3 * 2072 0 2072
+4 +1 2072 2072
+4 * 2072 2072 0 0 2 0 0 2
+4 * 2072
+3 * 2072 2072
+4 * 2072 2072
+3 * 2072
+3 * 2072
+3 * 2072
+4 * 2072 2072
+1 * 2072 2072

fn=(106)
0x40325e 113 2064 0 2064 1 0 0 1
+1 * 2064
+3 * 2064 0 2064
+4 +1 2064 2064
+4 * 2064 2064
+1 * 2064 2064

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 1036 0 1036 1 0 0 1
+1 * 1036
+3 * 1036 0 1036 0 0 1 0 0 1
+4 +1 1036 1036
+4 * 1036 1036
+1 * 1036 1036

fn=(82)
0x4039fc 117 1036 0 1036 1 0 0 1
+1 * 1036
+3 * 1036 0 1036 1 0 0 1
+4 +1 1036 1036
+4 * 1036 1036
+1 * 1036 1036

fn=(200)
0x402eda 901 510 0 510
+1 * 510
+3 * 510
+4 * 510 0 510
+4 * 510 0 510
+4 +2 510 510
+4 * 510 510
+4 * 510 510
+4 * 510 510
+4 * 510
+3 * 510 0 0 0 0 0 0 0 0 510 10
jcnd=8/510 +51 +10 
* * 
+2 +3 502 502
+4 * 502 502
+4 * 502 502
+4 -1 502 502
+4 * 502
+3 * 502
+3 * 502 0 502
cfi=(3)
cfn=(222)
calls=502 0x403373 215 
* * 19076 6526 7028 0 32 2 0 32 2 502 3
+5 +2 502 502
+4 * 502 502
+4 * 502
+4 * 502 502
+4 * 502 0 502
+4 * 502
jump=502 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12799 3927 3416 45 15 11 45 15 11 879 72 47
+5 +2 510 510
+1 * 510 510

fn=(4)
0x4030b2 310 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020 0 1020
+2 * 1020 0 1020
+2 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020 1 0 0 1
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(6)
calls=1020 0x403b08 117 
* * 6120 3060 2040 1 0 1 1 0 1
+5 * 1020
+3 * 1020 0 1020
cfi=(3)
cfn=(8)
calls=1020 0x403afa -88 
* * 6120 3060 2040 1 0 0 1
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(10)
calls=1020 0x402f54 645 
* * 13260 6120 2040 1 1 0 1 1
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(12)
calls=1020 0x403b16 134 
* * 420286 92329 87788 30 19 12 30 19 12 48713 1170 2040
+5 +4 1020 1020 0 1 0 0 1
+4 * 1020
+3 * 1020 0 1020
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=1020 0x40333c 113 
* * 6120 3060 2040 2 0 0 2
+5 * 1020
+3 * 1020 1020
+4 * 1020 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(42)
calls=1020 0x403ba4 565 
* * 25500 10200 8160 3 0 0 3
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(46)
calls=1020 0x403b74 547 
* * 25500 10200 8160
+5 * 1020
+3 * 1020
+3 * 1020
+3 * 1020
+3 * 1020 0 1020 1 0 0 1
cfi=(11)
cfn=(48)
calls=1020 0x403bd5 -60 
* * 647196 221360 216264 26 3 4 26 3 4 25072 1307 2036 254
+5 -3 1020 1020
+4 * 1020 0 1020
+4 * 1020
jump=1020 +28 +4 
* * 
+28 +4 1020
+4 * 1020 1020
+1 * 1020 1020
+2 * 1020 1020
+2 * 1020 1020
+1 * 1020 1020

fn=(108)
0x403a98 565 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+4 * 1020 0 1020
+4 * 1020
+4 * 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1020 0x404380 726 
* * 10200 5100 4080 1 0 0 1
+5 * 1020 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(178)
0x402e74 414 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020 1 0 0 1
+4 +2 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(40)
calls=1020 0x40333c 113 
* * 6120 3060 2040
+5 * 1020
+3 * 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+3 -1 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1020 0x40334a 148 
* * 31620 10200 12240 2 0 0 2
+5 +1 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=1020 0x4032ca 159 
* * 207284 62744 41042 3 1 0 3 1 0 32372 58 2040
+5 * 1020
jump=1020 +28 * 
* * 
+28 * 1020 0 0 1 0 0 1
+4 * 1020 1020
+1 * 1020 1020
+1 * 1020 1020

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1028 0 1028 1 0 0 1
+1 * 1028 0 0 1 0 0 1
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 0 1028 1028
+5 0 1028 0 0 0 0 0 0 0 0 1028
+2 0 1028 1028
+4 0 1028 1028
+4 0 1028
+5 0 1028
+3 0 1028
+3 0 1028 0 1028
fi=(6)
cfi=(5)
cfn=(100)
calls=1028 0x40461a 99 
* 0 317682 51247 48904 36 20 50 36 20 50 47246 1944 2056
+5 0 1028
fi=(6)
jump=1028 +7 0 
* 0 
+7 0 1028 1028
+1 0 1028 1028

fn=(144)
0x402d9a 770 393465 0 393465
+1 * 393465
+3 * 393465 0 393465
+4 * 393465 0 393465
+4 +1 393465 393465
+4 * 393465 393465
+3 * 393465 393465
+4 * 393465
+4 * 393465
+3 * 393465 393465
+1 * 393465 393465

fn=(146)
0x402dba 770 393465 0 393465
+1 * 393465
+3 * 393465 0 393465 1 0 0 1
+4 * 393465 0 393465
+4 +1 393465 393465
+4 * 393465 393465
+3 * 393465 393465
+4 * 393465
+4 * 393465
+3 * 393465 393465
+1 * 393465 393465

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfi=(4)
cfn=(194)
calls=1020 0x403d7e +42 
* * 14280 5100 5100 1 0 0 1
+5 * 1020 1020
+1 * 1020 1020

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 1020 0 1020 1 0 0 1
+1 * 1020
+3 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020 1020
+4 * 1020 1020
+3 * 1020
+3 * 1020
+3 * 1020
+4 * 1020
+3 * 1020 1020
+4 * 1020 1020
+3 -1 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(188)
calls=1020 0x403d98 +11 
* * 155264 43364 27782 1 1 0 1 1 0 32372 58 2040
+5 +1 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(192)
calls=1020 0x403296 -82 
* * 23460 8160 8160 1 0 0 1
+5 * 1020
jump=1020 +28 * 
* * 
+28 * 1020
+4 * 1020 1020
+1 * 1020 1020
+1 * 1020 1020

fn=(2)
0x402d74 645 4112 0 4112 1 0 0 1
+1 * 4112
+3 * 4112 0 4112 0 0 1 0 0 1
+4 +1 4112 4112
+4 * 4112 4112 0 1 1 0 1 1
+4 * 4112
+3 * 4112 4112
+4 * 4112 4112
+3 * 4112
+3 * 4112
+3 * 4112
+4 * 4112 4112
+1 * 4112 4112

fn=(20)
0x404412 179 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(22)
calls=1020 0x404236 -14 
* * 335626 59689 59228 24 19 8 24 19 8 48713 1170 2040
+5 * 1020 1020
+4 * 1020 0 1020
+3 +1 1020 1020
+4 * 1020 1020 0 1 0 0 1
+3 * 1020 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+3 * 1020 1020
+4 * 1020
+4 * 1020
+3 * 1020 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+1 * 1020 1020

fn=(94)
0x40432a 179 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +2 1020 1020
+4 * 1020 1020 0 1 0 0 1
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(96)
calls=1020 0x403fbe -14 
* * 330759 55695 52372 16 7 43 16 7 43 47745 1883 2040
+5 * 1020 1020
+4 * 1020 0 1020
+3 +1 1020 1020
+4 * 1020 1020
+3 * 1020 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+3 * 1020 1020
+4 * 1020
+4 * 1020
+3 * 1020 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+1 * 1020 1020

fn=(244)
0x402f7a 901 510 0 510
+1 * 510
+3 * 510 0 0 1 0 0 1
+4 * 510 0 510
+4 * 510 0 510
+4 +2 510 510
+4 * 510 510
+4 * 510 510
+4 * 510 510
+4 * 510
+3 * 510 0 0 0 0 0 0 0 0 510
jcnd=8/510 +51 +10 
* * 
+2 +3 502 502
+4 * 502 502
+4 * 502 502
+4 -1 502 502
+4 * 502
+3 * 502
+3 * 502 0 502
cfi=(3)
cfn=(264)
calls=502 0x4036b1 215 
* * 19076 6526 7028 0 32 19 0 32 19 502
+5 +2 502 502
+4 * 502 502
+4 * 502
+4 * 502 502
+4 * 502 0 502
+4 * 502
jump=502 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11777 3681 3210 20 2 28 20 2 28 675 55 47
+5 +2 510 510
+1 * 510 510

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 2064 0 2064 1 0 0 1
+1 * 2064
+3 * 2064 0 2064 1 0 0 1
+4 +1 2064 2064
+4 * 2064 2064
+1 * 2064 2064

fn=(112)
0x403a68 547 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 +1 1020 1020
+4 * 1020 1020
+3 * 1020 0 1020
+4 * 1020
+4 * 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(10)
cfn=(110)
calls=1020 0x404380 726 
* * 10200 5100 4080
+5 * 1020 1020
+4 * 1020 1020
+1 * 1020 1020

fn=(148)
0x402df4 414 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020 1 0 0 1
+4 +2 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(106)
calls=1020 0x40325e 113 
* * 6120 3060 2040
+5 * 1020
+3 * 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+3 -1 1020
+3 * 1020
+3 * 1020 0 1020
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1020 0x40326c 148 
* * 31620 10200 12240 4 0 0 4
+5 +1 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(156)
calls=1020 0x4031ec 159 
* * 191924 57240 36090 27 5 0 27 5 0 28196 811 2040
+5 * 1020
jump=1020 +28 * 
* * 
+28 * 1020 0 0 1 0 0 1
+4 * 1020 1020
+1 * 1020 1020
+1 * 1020 1020

fn=(158)
0x403ce6 171 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 +2 1028 1028
+5 * 1028 0 0 0 0 0 0 0 0 1028
+2 +1 1028 1028
+4 * 1028 1028
+4 * 1028 1028
+4 * 1028
+3 * 1028
+3 * 1028 0 1028
cfi=(5)
cfn=(160)
calls=1028 0x4044d6 -65 
* * 124530 31979 17881 24 6 0 24 6 0 27370 817 2056
+5 +1 1028 1028
+1 * 1028 1028

fl=(12)
fn=(120)
0x4049e2 450 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +10 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1020 0x404bc6 288 
* * 15300 6120 5100 3 0 0 3
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(122)
calls=1020 0x404bc6 288 
* * 15300 6120 5100
+5 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1020 0x404be0 -36 
* * 550296 187700 181584 4 1 72 4 1 72 25072 1292 2036
+5 +1 1020
+4 * 1020 1020
+1 * 1020 1020
+1 * 1020 1020

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 1068 0 1068
+1 * 1068
+3 * 1068
+4 * 1068 0 1068 1 0 0 1
+4 +1 1068 1068
+4 * 1068
+3 * 1068 0 1068
cfi=(13)
cfn=(130)
calls=1068 -33 -66 
* * 6408 3204 2136 0 0 1 0 0 1
+5 * 1068 1068
+1 * 1068 1068

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 2040 0 2040
+1 * 2040
+3 * 2040
+4 * 2040 0 2040
+4 +1 2040 2040
+4 * 2040
+3 * 2040 0 2040
cfi=(13)
cfn=(134)
calls=2040 0x404e98 -58 
* * 32640 12240 10200 2 0 0 2
+5 * 2040 2040
+1 * 2040 2040

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +8 1020 0 1020
+4 +3 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1020 0x404eb5 -22 
* * 440136 150980 143844 1 1 72 1 1 72 25072 1292 2036
+5 +1 1020 1020
+1 * 1020 1020

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040
+4 * 2040 0 2040
+4 +1 2040 2040
+4 * 2040
+3 * 2040 0 2040
cfi=(13)
cfn=(124)
calls=2040 0x404d36 -77 
* * 12240 6120 4080 2 0 0 2
+5 * 2040 2040
+1 * 2040 2040

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040
+4 * 2040 0 2040 1 0 0 1
+4 +1 2040 2040
+4 * 2040
+3 * 2040 0 2040
cfi=(13)
cfn=(58)
calls=2040 0x404d8f -77 
* * 12240 6120 4080 1 0 0 1
+5 * 2040 2040
+1 * 2040 2040

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 1036 0 1036
+1 * 1036
+3 * 1036
+4 * 1036 0 1036 1 0 0 1
+4 * 1036 0 1036
+4 * 1036 0 1036
+4 +2 1036 1036
+4 * 1036 1036
+4 * 1036
+3 * 1036
+3 * 1036
+4 * 1036 0 1036
+4 +1 1036 1036
+5 * 1036 0 0 0 0 0 0 0 0 1036
jcnd=8/1036 +33 +2 
* * 
+2 +1 1028 1028
+4 * 1028
+8 * 1028 1028
+4 * 1028 1028
+4 * 1028
+3 * 1028 0 0 1 0 0 1
+3 * 1028 0 1028 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1028 0x3877c83840 0 
* * 412698 140076 138025 11 2 20 11 2 20 24136 1311 1023 254
* * 1028 1028 0 1 1 0 1 1 0 0 0 1028
+5 +1 1036 1036
+4 * 1036
+8 * 1036 1036
+4 * 1036
+3 +1 1036 1036
+1 * 1036 1036

fn=(140)
0x404eb5 368 1036 0 1036
+1 * 1036
+3 * 1036
+4 * 1036 0 1036 1 0 0 1
+4 * 1036 0 1036
+4 * 1036 0 1036 0 0 1 0 0 1
+4 +2 1036 1036
+4 * 1036 1036
+4 * 1036
+3 * 1036
+3 * 1036
+4 * 1036 0 1036
+4 +1 1036 1036
+5 * 1036 0 0 0 0 0 0 0 0 1036
jcnd=8/1036 +33 +2 
* * 
+2 +1 1028 1028
+4 * 1028
+8 * 1028 1028
+4 * 1028 1028
+4 * 1028
+3 * 1028
+3 * 1028 0 1028
cob=(2)
cfi=(9)
cfn=(78)
calls=1028 0x3877c83840 0 
* * 412698 140076 138025 0 1 73 0 1 73 24136 1297 1023
* * 1028 1028 0 0 0 0 0 0 0 0 0 1028
+5 +1 1036 1036
+4 * 1036
+8 * 1036 1036
+4 * 1036
+3 +1 1036 1036
+1 * 1036 1036

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 1020 0 1020
+1 * 1020
+3 * 1020
+4 * 1020 0 1020 1 0 0 1
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +8 1020 0 1020
+4 +3 1020 1020
+4 * 1020 1020
+4 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(74)
calls=1020 0x404f37 -22 
* * 440136 150980 143844 14 3 3 14 3 3 25072 1307 2036 254
+5 +1 1020 1020
+1 * 1020 1020

fn=(126)
0x404be0 424 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+2 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +4 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(128)
calls=1020 0x404878 277 
* * 15300 6120 5100 1 0 0 1
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(132)
calls=1020 0x404d44 277 
* * 25500 9180 8160 2 0 0 2
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(132)
calls=1020 0x404d44 277 
* * 25500 9180 8160
+5 * 1020
+3 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(138)
calls=1020 0x404d5e -49 
* * 455436 156080 149964 1 1 72 1 1 72 25072 1292 2036
+5 +1 1020
+4 * 1020 1020
+1 * 1020 1020
+2 * 1020 1020
+1 * 1020 1020

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020 1 0 0 1
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +10 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(56)
calls=1020 0x404c38 288 
* * 15300 6120 5100 3 0 0 3
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(56)
calls=1020 0x404c38 288 
* * 15300 6120 5100
+5 * 1020 1020
+4 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1020 0x404c52 -36 
* * 550296 187700 181584 20 3 4 20 3 4 25072 1307 2036 254
+5 +1 1020
+4 * 1020 1020
+1 * 1020 1020
+1 * 1020 1020

fn=(60)
0x404c52 424 1020 0 1020
+1 * 1020
+3 * 1020 0 1020
+2 * 1020 0 1020
+1 * 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 * 1020 0 1020
+4 +4 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1020 0x40492d 277 
* * 15300 6120 5100 2 0 0 2
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1020 0x404d9d 277 
* * 25500 9180 8160 2 0 1 2 0 1
+5 * 1020
+3 * 1020 1020
+4 * 1020
+3 * 1020 0 1020
cfn=(66)
calls=1020 0x404d9d 277 
* * 25500 9180 8160
+5 * 1020
+3 * 1020
+3 * 1020
+3 * 1020 0 1020
cfn=(72)
calls=1020 0x404db7 -49 
* * 455436 156080 149964 15 3 3 15 3 3 25072 1307 2036 254
+5 +1 1020
+4 * 1020 1020
+1 * 1020 1020
+2 * 1020 1020
+1 * 1020 1020

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 1068 0 1068 1 0 0 1
+1 * 1068
+3 * 1068
+4 * 1068 0 1068
+4 +1 1068 1068
+4 * 1068
+3 * 1068 0 1068 1 0 0 1
cfi=(13)
cfn=(64)
calls=1068 -33 -66 
* * 6408 3204 2136
+5 * 1068 1068
+1 * 1068 1068

fn=(66)
0x404d9d 277 2040 0 2040
+1 * 2040
+3 * 2040
+4 * 2040 0 2040
+4 +1 2040 2040
+4 * 2040
+3 * 2040 0 2040
cfi=(13)
cfn=(68)
calls=2040 0x404f1a -58 
* * 32640 12240 10200 2 0 1 2 0 1
+5 * 2040 2040
+1 * 2040 2040

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040 0 2040
+4 +1 2040 2040
+4 * 2040 2040
+1 * 2040 2040

fn=(110)
0x404380 726 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040 0 2040
+4 * 2040 0 2040
+4 * 2040 2040
+4 * 2040 2040
+3 * 2040 2040
+4 * 2040 0 2040
+3 * 2040 2040
+1 * 2040 2040

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 2040 0 2040 1 0 0 1
+1 * 2040
+3 * 2040 0 2040
+4 +1 2040 2040
+4 * 2040 2040
+1 * 2040 2040

fn=(44)
0x404468 726 2040 0 2040
+1 * 2040
+3 * 2040 0 2040
+4 * 2040 0 2040
+4 * 2040 2040
+4 * 2040 2040
+3 * 2040 2040
+4 * 2040 0 2040 1 0 0 1
+3 * 2040 2040
+1 * 2040 2040

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028 0 1028
+4 * 1028 0 1028
+4 * 1028 1028
+1 * 1028 1028

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028 0 1028
+4 * 1028 0 1028 1 0 0 1
+4 * 1028 1028
+1 * 1028 1028

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 +4 1028 1028
+4 * 1028 1028
+4 * 1028
+3 * 1028
+3 * 1028 0 1028
cfn=(184)
calls=1028 0x40454c -14 
* * 6168 2056 3084 1 0 0 1
+5 +2 1028 1028
+1 * 1028 1028

fn=(150)
0x40326c 148 1028 0 1028
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 +3 1028 1028 0 1 0 0 1
+4 * 1028 1028
+4 * 1028
+3 * 1028
+3 * 1028 0 1028
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1028 0x403d1a -29 
* * 18504 6168 7196 3 0 0 3
+5 +1 1028 1028
+1 * 1028 1028

fn=(180)
0x40334a 148 1028 0 1028
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 +3 1028 1028
+4 * 1028 1028
+4 * 1028
+3 * 1028
+3 * 1028 0 1028
cfn=(182)
calls=1028 0x403dcc -29 
* * 18504 6168 7196 2 0 0 2
+5 +1 1028 1028
+1 * 1028 1028

fn=(152)
0x403d1a 122 1028 0 1028 1 0 0 1
+1 * 1028
+3 * 1028
+4 * 1028 0 1028
+4 * 1028 0 1028
+4 +4 1028 1028
+4 * 1028 1028
+4 * 1028
+3 * 1028
+3 * 1028 0 1028
cfn=(154)
calls=1028 0x4044f8 -14 
* * 6168 2056 3084 2 0 0 2
+5 +2 1028 1028
+1 * 1028 1028

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2316 429 435 2 2 6 2 2 6 316 34 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3371 692 644 22 13 7 22 13 7 529 61 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 1 0 1 1 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 2056 0 2056 1 0 0 1
+5 0 2056 0 2056
+5 0 2056
+3 0 2056 0 2056
+5 0 2056
+4 0 2056 2056 0 0 1 0 0 1
+7 0 2056 2056 0 0 1 0 0 1
+3 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056
+6 0 2056 2056 0 0 1 0 0 1
+7 0 2056 2056 0 1 1 0 1 1
+4 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056
+2 0 2056 2056 0 0 1 0 0 1
+3 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056
jcnd=2056/2056 +97 0 
* 0 
+18 0 2056
+3 0 2056
+3 0 2056 0 2056
cfn=(38) _int_malloc
calls=2056 0x3877c79a00 0 
* 0 466472 58937 69503 45 33 63 45 33 63 70575 3115
+5 0 2056
+3 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056
+2 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056
+2 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056 21
+2 0 2056 2056
+7 0 2056 0 0 0 0 0 0 0 0 2056
jcnd=2056/2056 +13 0 
* 0 
+13 0 2056 0 2056
+2 0 2056 0 0 0 0 0 0 0 0 2056 12
+6 0 2056
+3 0 2056 2056
+4 0 2056 2056
+5 0 2056 2056
+5 0 2056
+4 0 2056 2056
+1 0 2056 0 0 1 0 0 1
+5 0 2056 2056 0 0 1 0 0 1
+7 0 2056 0 0 0 0 0 0 0 0 2056
jcnd=2056/2056 +14 0 
* 0 
+14 0 2056 0 2056 1 0 0 1
+3 0 2056 0 0 0 0 0 0 0 0 2056
+6 0 2056
jump=2056 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 2056 0 2056 1 0 0 1
+2 0 2056
+3 0 2056
+3 0 2056 0 2056
+2 0 2056
+3 0 2056 0 2056
+1 0 2056
+3 0 2056 0 2056
+1 0 2056
+3 0 2056
+4 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056
+6 0 2056
+4 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056 4
jcnd=10/2056 0x3877c838d1 0 
* 0 
+2 0 2046
+3 0 2046
+3 0 2046
+3 0 2046
+3 0 2046
+3 0 2046 0 0 0 0 0 0 0 0 2046
jcnd=2046/2046 +41 0 
* 0 
+41 0 2046 0 0 1 0 0 1
+3 0 2046 0 0 0 0 0 0 0 0 2046
jcnd=2046/2046 0x3877c839c0 0 
* 0 
+24 0 2046
+3 0 2046
+4 0 2046
+3 0 2046
+3 0 2046
+3 0 2046
+3 0 2046
+3 0 2046 0 0 0 0 0 0 0 0 2046 1020
jcnd=1030/2046 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1026
+10 0 1026 1026 0 0 2 0 0 2
+3 0 1026
+4 0 1026 0 1026
+3 0 1026
+4 0 1026
+4 0 1026 0 0 0 0 0 0 0 0 1026
jcnd=1026/1026 -18 0 
* 0 
-18 0 3134 3134
+3 0 3134
+4 0 3134 0 3134
+3 0 3134
+4 0 3134
+4 0 3134 0 0 0 0 0 0 0 0 3134 8
jcnd=2108/3134 -18 0 
* 0 
+2 0 2056
+4 0 2056
+3 0 2056 2056
+1 0 2056 2056
+1 0 2056 2056
+2 0 2056 2056 0 1 0 0 1
+2 0 2056 2056
0x3877c839c0 0 2046 0 0 1 0 0 1
+3 0 2046
+3 0 2046
+3 0 2046
+4 0 2046 0 2046 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=2046 0x3877c89b20 0 
* 0 709146 265712 261620 6 1 92 6 1 92 33852 1576 2046 254
+5 0 2046
jump=2046 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 2056 2056 0 1 1 0 1 1
+7 0 2056 2056 0 0 1 0 0 1
+3 0 2056
+3 0 2056 0 0 1 0 0 1 0 0 2056
+6 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056
+6 0 2056 2056 0 0 1 0 0 1
+4 0 2056
+4 0 2056
+2 0 2056 0 0 0 0 0 0 0 0 2056
+2 0 2056
+2 0 2056
+7 0 2056 0 0 0 0 0 0 0 0 2056
jcnd=2056/2056 +14 0 
* 0 
+14 0 2056
+2 0 2056
cfn=(170) _int_free
calls=2056 0x3877c78650 0 
* 0 200717 53031 30437 19 2 0 19 2 0 48645 884

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 7
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 2
jcnd=10/12 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 2056 0 2056 1 0 0 1
+2 0 2056 0 2056
+2 0 2056 0 2056
+2 0 2056
+3 0 2056 0 2056
+2 0 2056 0 2056
+1 0 2056 0 2056
+1 0 2056
+3 0 2056
+4 0 2056 2056
+4 0 2056 0 2056
+4 0 2056
+3 0 2056
+4 0 2056
+3 0 2056
+3 0 2056
+3 0 2056 0 0 1 0 0 1 0 0 2056
+6 0 2056
+4 0 2056 0 0 0 0 0 0 0 0 2056
+6 0 2056
+4 0 2056 0 0 0 0 0 0 0 0 2056
+6 0 2056 2056
+7 0 2056 0 0 0 0 0 0 0 0 2056 2
jcnd=1932/2056 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1932
+2 0 1932 0 0 0 0 0 0 0 0 1932
+6 0 1932 1932 0 1 0 0 1
+4 0 1932
+3 0 1932
+2 0 1932 0 0 0 0 0 0 0 0 1932
jcnd=1932/1932 0x3877c78a40 0 
* 0 
+6 0 1932 1932
+4 0 1932
+3 0 1932 0 0 0 0 0 0 0 0 1932
+6 0 1932 1932
+5 0 1932
+4 0 1932 0 0 0 0 0 0 0 0 1932
jcnd=1932/1932 0x3877c7907c 0 
* 0 
+6 0 1932 1932
+5 0 1932
+4 0 1932 0 0 0 0 0 0 0 0 1932
+6 0 1932
+4 0 1932 0 0 1 0 0 1 0 0 1932
+6 0 1932
+4 0 1932 1932
+7 0 1932 0 0 0 0 0 0 0 0 1932
+6 0 1932 1932
+6 0 1932
+2 0 1932 0 0 0 0 0 0 0 0 1932
+6 0 1932 1932
+4 0 1932 0 0 0 0 0 0 0 0 1932 5
jcnd=1928/1932 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1932 1932 0 1 0 0 1
+4 0 1932 0 0 0 0 0 0 0 0 1932 734
jcnd=820/1932 0x3877c78bf0 0 
* 0 
+6 0 1112 1112 0 0 1 0 0 1
+6 0 1112 0 0 1 0 0 1 0 0 1112 67
jcnd=77/1112 0x3877c78a78 0 
* 0 
+6 0 1035 1035
+5 0 1035 1035
+5 0 1035 1035
+4 0 1035 0 0 0 0 0 0 0 0 1035
+6 0 1035 1035
+4 0 1035 0 0 0 0 0 0 0 0 1035
+6 0 1035 1035
+9 0 1035 0 1035
+4 0 1035 0 1035
+4 0 1035 0 0 0 0 0 0 0 0 1035 4
jcnd=1027/1035 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 1035
+3 0 1035
+4 0 1035 1035
+4 0 1035 1035
+4 0 1035 0 0 0 0 0 0 0 0 1035
-12 0 77
+4 0 77 77
+4 0 77 77
+4 0 77 0 0 0 0 0 0 0 0 77
+6 0 1112
+7 0 1112 0 1112
+4 0 1112 0 1112
+4 0 1112 0 0 0 0 0 0 0 0 1112 68
jcnd=441/1112 +18 0 
* 0 
+2 0 671 0 671
+8 0 671 0 671
+8 0 671 0 671
+4 0 671
+3 0 671 0 671 1 0 0 1
+4 0 671
+4 0 671 0 671
+4 0 671 0 671
+4 0 671
+7 0 671 0 0 0 0 0 0 0 0 671
jcnd=671/671 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 820
+7 0 820 0 0 0 0 0 0 0 0 820
jcnd=820/820 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1932 0 0 1 0 0 1
+5 0 1932 1932
+4 0 1932 1932
+7 0 1932 0 0 0 0 0 0 0 0 1932
jcnd=1932/1932 +16 0 
* 0 
+16 0 1932 0 1932
+5 0 1932 0 0 0 0 0 0 0 0 1932
+6 0 1932
+3 0 1932
jump=1932 0x3877c7878f 0 
* 0 
+10 0 77 0 77
+6 0 77 0 0 1 0 0 1
jump=77 0x3877c78885 0 
* 0 
0x3877c78b20 0 1932 1932 0 1 0 0 1
+4 0 1932
+2 0 1932 0 0 0 0 0 0 0 0 1932
+6 0 1932 1932
+7 0 1932 0 0 0 0 0 0 0 0 1932
jcnd=1932/1932 +15 0 
* 0 
+15 0 1932 0 1932 1 0 0 1
+4 0 1932 0 0 0 0 0 0 0 0 1932 2
+6 0 1932
+4 0 1932 1932
+1 0 1932 1932
+1 0 1932 1932
+2 0 1932 1932
+2 0 1932 1932
+2 0 1932 1932
+2 0 1932 1932
0x3877c78bf0 0 820 0 0 1 0 0 1
+3 0 820 0 820
+4 0 820
+3 0 820
+4 0 820 0 820 1 0 0 1
+4 0 820
jump=820 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1932 1932 0 1 1 0 1 1
+4 0 1932 0 0 1 0 0 1
+7 0 1932
+4 0 1932
+3 0 1932
+3 0 1932 0 0 0 0 0 0 0 0 1932
jcnd=1932/1932 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 2046 0 0 1 0 0 1
+7 0 2046
+3 0 2046
+3 0 2046 2046 0 0 1 0 0 1
+4 0 2046
+4 0 2046 0 0 0 0 0 0 0 0 0 0 2046 254
jump=248 0x3877c89be8 0 
* 0 
jump=258 0x3877c89bd0 0 
* 0 
jump=256 0x3877c89bb8 0 
* 0 
jump=256 +11 0 
* 0 
jump=256 0x3877c89c48 0 
* 0 
jump=258 0x3877c89c30 0 
* 0 
jump=256 0x3877c89c18 0 
* 0 
jump=258 0x3877c89c00 0 
* 0 
+11 0 256 256
+3 0 256
+4 0 256
+4 0 256 256
+4 0 256
+4 0 256 0 256
+4 0 256
+9 0 256 256
+4 0 256 0 256
+4 0 256 256
+4 0 256 0 256
+4 0 256 256
+4 0 256 0 256
+4 0 256 256
+4 0 256 0 256
+4 0 256
+4 0 256
+4 0 256 0 0 0 0 0 0 0 0 256
jcnd=8/256 0x3877c89c60 0 
* 0 
-40 0 32318 32318
+4 0 32318 0 32318 0 0 3 0 0 3
+4 0 32318 32318
+4 0 32318 0 32318 0 0 15 0 0 15
+4 0 32318 32318
+4 0 32318 0 32318 0 0 1 0 0 1
+4 0 32318 32318
+4 0 32318 0 32318
+4 0 32318
+4 0 32318
+4 0 32318 0 0 0 0 0 0 0 0 32318 1572
jcnd=2010/32318 0x3877c89c60 0 
* 0 
-32 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258
+4 0 258
+4 0 258 0 0 0 0 0 0 0 0 258
jcnd=10/258 0x3877c89c60 0 
* 0 
-24 0 256 256
+4 0 256 0 256
+4 0 256 256
+4 0 256 0 256
+4 0 256
+4 0 256
+4 0 256 0 0 0 0 0 0 0 0 256
jcnd=8/256 0x3877c89c60 0 
* 0 
-16 0 258 258 0 1 0 0 1
+4 0 258 0 258
+4 0 258 0 0 1 0 0 1
+4 0 258
+4 0 258 0 0 0 0 0 0 0 0 258 4
jcnd=10/258 0x3877c89c60 0 
* 0 
+6 0 31300
+4 0 31300 31300
+3 0 31300 0 31300 0 0 20 0 0 20
+3 0 31300 31300
+4 0 31300 0 31300 0 0 3 0 0 3
+4 0 31300 31300
+4 0 31300 0 31300 0 0 49 0 0 49
+4 0 31300 31300
+4 0 31300 0 31300
+4 0 31300
jump=31300 -80 0 
* 0 
-30 0 248 248
+3 0 248 0 248
+3 0 248 248
+4 0 248 0 248
+4 0 248 248
+4 0 248 0 248 0 0 1 0 0 1
+4 0 248 248
+4 0 248 0 248
+4 0 248
jump=248 -80 0 
* 0 
-24 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258 258
+4 0 258 0 258
+4 0 258
jump=258 -80 0 
* 0 
-16 0 256 256
+4 0 256 0 256
+4 0 256 256
+4 0 256 0 256
+4 0 256
jump=256 -80 0 
* 0 
+8 0 256 256
+3 0 256
+4 0 256 0 0 1 0 0 1
+4 0 256
+4 0 256
jump=256 -39 0 
* 0 
+9 0 258
+3 0 258 0 0 0 0 0 0 0 0 258
+6 0 258 258
+3 0 258
+4 0 258
jump=258 -72 0 
* 0 
+8 0 248
+4 0 248 248
+3 0 248 0 0 0 0 0 0 0 0 248
+2 0 248
+4 0 248
jump=248 -99 0 
* 0 
+11 0 258 258 0 1 0 0 1
+3 0 258
+4 0 258
+4 0 258
+4 0 258
jump=258 0x3877c89b78 0 
* 0 
+9 0 256 256
+3 0 256
+4 0 256
+4 0 256
+4 0 256
jump=256 0x3877c89b70 0 
* 0 
+9 0 258 258
+3 0 258
+4 0 258
+4 0 258
+4 0 258
jump=258 0x3877c89b68 0 
* 0 
+9 0 256 256
+3 0 256
+4 0 256
+4 0 256
+4 0 256
jump=256 0x3877c89b60 0 
* 0 
+9 0 2046 0 2046 1 0 0 1
+3 0 2046 2046

fn=(104) alloc_perturb
0x3877c77180 0 1914 1914 0 1 0 0 1
+6 0 1914
+2 0 1914 0 0 0 0 0 0 0 0 1914 1
+2 0 1914 1914

fn=(38)
0x3877c79a00 0 2056 0 2056 1 0 0 1
+2 0 2056
+3 0 2056 0 2056
+2 0 2056 0 2056
+2 0 2056 0 2056 0 0 1 0 0 1
+2 0 2056
+3 0 2056 0 2056
+1 0 2056 0 2056
+1 0 2056
+4 0 2056
+4 0 2056 0 0 0 0 0 0 0 0 2056
+6 0 2056
+4 0 2056
+6 0 2056
+3 0 2056
+4 0 2056
+4 0 2056
+4 0 2056
+3 0 2056 0 0 0 0 0 0 0 0 2056
+6 0 2056 2056 0 1 1 0 1 1
+7 0 2056 0 0 0 0 0 0 0 0 2056 5
jcnd=1934/2056 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 142 142
+6 0 142
+4 0 142
+2 0 142 0 0 0 0 0 0 0 0 142
+6 0 142
+3 0 142
+4 0 142 142
+1 0 142 142
+1 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
+2 0 142 142
-14 0 1914
+4 0 1914 1914
+1 0 1914 1914
+1 0 1914 1914
+2 0 1914 1914
+2 0 1914 1914
+2 0 1914 1914
+2 0 1914 1914
+7 0 1951
+7 0 1951 0 0 1 0 0 1 0 0 1951 5
jcnd=1048/1951 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 11 0 0 11
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 1048 0 0 1 0 0 1
+3 0 1048
+4 0 1048
+4 0 1048 0 0 1 0 0 1 0 0 1048
jcnd=1048/1048 0x3877c7a1a4 0 
* 0 
+30 0 1048 1048
+6 0 1048
+5 0 1048 0 0 0 0 0 0 0 0 1048 1
jcnd=1047/1048 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 899 238 192 8 2 0 8 2 0 185 24
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1950 0 0 1 0 0 1
+3 0 1950
+3 0 1950
+3 0 1950
+4 0 1950
+3 0 1950
+4 0 1950 0 1950
+5 0 1950
+3 0 1950 0 1950
+4 0 1950 0 1950
+4 0 1950 0 1950
+5 0 1950
+3 0 1950
+3 0 1950
+3 0 1950
+3 0 1950
+4 0 1950
+4 0 1950 0 0 1 0 0 1
+4 0 1950 0 1950
+4 0 1950
+4 0 1950 0 1950
+5 0 1950 0 1950
+5 0 1950
+3 0 1950
+3 0 1950 0 1950
+5 0 1950
+5 0 1950
+3 0 1950 0 1950
+4 0 1950 0 1950
+4 0 1950
+6 0 1950 0 1950
+4 0 1950 0 1950
+5 0 1950 0 0 1 0 0 1
+3 0 1950
+3 0 1950
+3 0 1950
jump=1950 +87 0 
* 0 
+8 0 1268
+3 0 1268
+4 0 1268
+2 0 1268
+2 0 1268
+3 0 1268
+3 0 1268
+3 0 1268
+2 0 1268
+2 0 1268
+5 0 1268
+2 0 1268 1268 0 0 2 0 0 2
+4 0 1268
+3 0 1268
+4 0 1268 0 1268
+4 0 1268 0 1268
+8 0 1268
+7 0 1268 0 1268
+4 0 1268 0 1268 0 0 1 0 0 1
+4 0 1268 0 1268
+4 0 1268 0 0 0 0 0 0 0 0 1268
-38 0 654
+3 0 654
+4 0 654 0 654
+4 0 654 0 654
+8 0 654
+7 0 654 0 654
+4 0 654 0 654
+4 0 654 0 654
+4 0 654 0 0 0 0 0 0 0 0 654
+6 0 3873 3873 0 1 0 0 1
+4 0 3873
+3 0 3873 0 0 0 0 0 0 0 0 3873 187
jcnd=1894/3873 0x3877c79ef0 0 
* 0 
+6 0 1979 1979
+4 0 1979 1979 0 0 1 0 0 1
+4 0 1979
+4 0 1979 0 0 0 0 0 0 0 0 1979
+6 0 1979 1979 0 1 1 0 1 1
+7 0 1979 0 0 0 0 0 0 0 0 1979
+6 0 1979
+4 0 1979
+7 0 1979 0 0 0 0 0 0 0 0 1979 4
jcnd=1069/1979 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1959
+3 0 1959 0 1959
+4 0 1959 0 1959
+5 0 1959 0 0 0 0 0 0 0 0 1959 18
jcnd=37/1959 0x3877c7a090 0 
* 0 
+6 0 1922
+7 0 1922 0 0 0 0 0 0 0 0 1922 565
jcnd=1268/1922 0x3877c79c50 0 
* 0 
+6 0 654 0 0 1 0 0 1
+3 0 654
+4 0 654
+4 0 654 0 0 0 0 0 0 0 0 654 2
+6 0 654
+3 0 654
+4 0 654
+2 0 654
+2 0 654
+3 0 654
+3 0 654
+8 0 654
+3 0 654
+2 0 654
+2 0 654
+4 0 654 654 0 0 2 0 0 2
+4 0 654
+3 0 654 0 0 1 0 0 1 0 0 654 9
jcnd=654/654 0x3877c79e15 0 
* 0 
0x3877c79e15 0 654 0 654
+4 0 654 0 654
+4 0 654
+3 0 654
jump=654 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 1894 0 0 1 0 0 1
+7 0 1894
+3 0 1894 0 0 0 0 0 0 0 0 1894 2
jcnd=1032/1894 0x3877c7a0b0 0 
* 0 
+6 0 1862 1862 0 1 0 0 1
+4 0 1862
+3 0 1862
+3 0 1862
+2 0 1862
+4 0 1862
+3 0 1862
+3 0 1862
+2 0 1862
+2 0 1862
+2 0 1862
+2 0 1862 1862 0 0 1 0 0 1
+8 0 1862
+5 0 1862
+5 0 1862
+2 0 1862 0 0 0 0 0 0 0 0 1862
-2 0 858
+2 0 858 0 0 0 0 0 0 0 0 858
+2 0 2720
+2 0 2720 0 0 0 0 0 0 0 0 2720 44
jcnd=1623/2720 +64 0 
* 0 
+2 0 1097
+8 0 1097
+3 0 1097
+3 0 1097 0 0 0 0 0 0 0 0 1097 1
jcnd=1/1097 0x3877c79fc0 0 
* 0 
-6 0 1246
+3 0 1246
+3 0 1246 0 0 0 0 0 0 0 0 1246 7
jcnd=821/1246 0x3877c79fc0 0 
* 0 
+2 0 1521
+2 0 1521 1521
+8 0 1521
+2 0 1521 0 0 0 0 0 0 0 0 1521 27
jcnd=1246/1521 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 11678
+4 0 11678
+2 0 11678
+2 0 11678 0 0 0 0 0 0 0 0 11678 830
jcnd=10014/11678 -8 0 
* 0 
-2 0 1623 0 0 1 0 0 1
+2 0 1623 0 0 0 0 0 0 0 0 1623 25
jcnd=1451/1623 -8 0 
* 0 
+2 0 1898 1898 0 0 5 0 0 5
+4 0 1898 0 0 1 0 0 1
+3 0 1898 0 0 0 0 0 0 0 0 1898 844
jcnd=1040/1898 0x3877c7a1cf 0 
* 0 
+6 0 858
+2 0 858
+4 0 858
+2 0 858
+2 0 858
+2 0 858 0 858
+8 0 858
jump=858 0x3877c79f30 0 
* 0 
+37 0 822 822 0 1 0 0 1
+5 0 822 822
+4 0 822
+4 0 822 822
+5 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 37 0 0 1 0 0 1
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37
jcnd=37/37 0x3877c79ace 0 
* 0 
+16 0 1032 1032
+4 0 1032
+4 0 1032
+2 0 1032
+5 0 1032 1032 0 1 1 0 1 1
+4 0 1032
+3 0 1032 0 0 0 0 0 0 0 0 1032 14
jcnd=968/1032 0x3877c79f00 0 
* 0 
+6 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64 7
jcnd=32/64 0x3877c79f00 0 
* 0 
+6 0 32
+3 0 32 32
+4 0 32 32
+4 0 32
+3 0 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 0x3877c7a650 0 
* 0 
+26 0 32 0 0 1 0 0 1
+3 0 32 32
+4 0 32
+3 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 2
+6 0 32 32
+8 0 32 0 32
+4 0 32 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32 0 1 0 0 1
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32 18
jcnd=32/32 0x3877c7a659 0 
* 0 
+6 0 32
+4 0 32 0 0 0 0 0 0 0 0 32 8
jcnd=16/32 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 1048 0 0 1 0 0 1
+3 0 1048 0 1048
+4 0 1048
jump=1048 0x3877c79b99 0 
* 0 
+36 0 1040 1040 0 1 1 0 1 1
+4 0 1040 1040 0 0 1 0 0 1
+4 0 1040
+3 0 1040 1040
+4 0 1040
+4 0 1040
+3 0 1040
+3 0 1040 1040
+4 0 1040 0 0 0 0 0 0 0 0 1040
+6 0 1040 1040
+4 0 1040 0 0 0 0 0 0 0 0 1040
+6 0 1040 1040 0 1 0 0 1
+8 0 1040 0 1040
+4 0 1040 0 1040
+4 0 1040 0 0 0 0 0 0 0 0 1040 12
jcnd=418/1040 +38 0 
* 0 
+2 0 622 622 0 0 1 0 0 1
+4 0 622
+3 0 622 0 0 0 0 0 0 0 0 622
+2 0 622 622
+5 0 622 0 0 0 0 0 0 0 0 622
+6 0 622 622
+4 0 622 0 622
+4 0 622 622
+4 0 622 0 622
+4 0 622
+4 0 622 0 0 0 0 0 0 0 0 622
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 1019 1019
+4 0 1019 1019 0 1 0 0 1
+4 0 1019 0 0 0 0 0 0 0 0 1019
+6 0 1019
+4 0 1019
+7 0 1019 0 1019 0 0 7 0 0 7
+4 0 1019 0 1019
+4 0 1019 0 1019
+4 0 1019 0 1019
+4 0 1019 0 0 0 0 0 0 0 0 1019 3
jcnd=554/1019 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 554
+7 0 554 0 0 0 0 0 0 0 0 554
jcnd=554/554 +18 0 
* 0 
+2 0 7 0 7 0 0 2 0 0 2
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 1028
+7 0 1028 0 1028
+4 0 1028
+3 0 1028
+3 0 1028
+4 0 1028
+3 0 1028
+4 0 1028
+3 0 1028
+3 0 1028
+4 0 1028 0 1028
+4 0 1028 0 1028 0 0 1 0 0 1
+4 0 1028
jump=1028 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 37
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37 2
jcnd=37/37 +7 0 
* 0 
+7 0 1072
+4 0 1072 0 0 1 0 0 1
+3 0 1072
+3 0 1072 0 1072
cfn=(104)
calls=1072 0x3877c77180 0 
* 0 4288 2144 0 1 0 0 1 0 0 1072
+5 0 1072
+3 0 1072
jump=1072 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 822 0 0 1 0 0 1
+7 0 822
+2 0 822
+4 0 822
+3 0 822
+3 0 822 0 822
+5 0 822
+3 0 822
+4 0 822
+3 0 822 0 0 1 0 0 1
+4 0 822
+4 0 822
+3 0 822
+4 0 822 0 822
+4 0 822 0 822 0 0 30 0 0 30
+4 0 822
+3 0 822
+3 0 822 0 822
cfn=(104)
calls=822 0x3877c77180 0 
* 0 3288 1644 0 0 0 0 0 0 0 822 1
+5 0 822
+3 0 822
jump=822 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 32 32 0 1 0 0 1
+4 0 32
jump=32 0x3877c7a10e 0 
* 0 
+5 0 32 32
+5 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 0x3877c7a14b 0 
* 0 

totals: 23087717 9621281 5447020 241 122 194 241 122 194 606255 8196 12326 254
