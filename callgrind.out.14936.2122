version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2122


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2626726118 - 2627349540
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 926 0 0 1 0 0 1
+3 0 926 0 0 0 0 0 0 0 0 926
+2 0 926
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=926 0x3877c7b8b0 0 
* 0 103906 26784 13470 22 4 0 22 4 0 25471 506
* 0 926 926 0 1 1 0 1 1 0 0 0 926

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 926 0 926 1 0 0 1
+1 0 926
+5 0 926
+3 0 926 0 926
+1 0 926
+4 0 926 0 0 1 0 0 1
+3 0 926
+4 0 926
+3 0 926 0 926 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=926 0x3877c7aa50 0 
* 0 258900 35731 35989 49 40 38 49 40 38 44687 1774
* 0 926 926 0 1 1 0 1 1 0 0 0 926
+5 0 926
+3 0 926 0 0 0 0 0 0 0 0 926
jcnd=926/926 +96 0 
* 0 
+96 0 926 0 0 1 0 0 1
+4 0 926 926
+1 0 926 926
+1 0 926 926

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 228 0 228 1 0 0 1
+1 * 228
+3 * 228
+4 * 228 0 228
+4 * 228 0 228
+4 +1 228 228
+4 * 228
+3 * 228 0 228
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=228 0x402d74 645 
* * 2964 1368 456
+5 * 228
+3 * 228 0 228
+3 +1 228 228
+6 * 228 0 228
+3 * 228 228
+6 * 228 0 228
+3 +1 228 228
+6 * 228 0 228 1 0 0 1
+3 * 228 228
+6 * 228 0 228
+3 +2 228 0 228
+7 * 228
jump=228 +86 * 
* * 
+2 +1 26334 26334
+3 * 26334
+3 * 26334 26334
+4 * 26334
+3 * 26334
+3 * 26334 0 26334
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=26334 0x402d9a 770 
* * 289674 131670 79002
+5 * 26334 26334
+4 * 26334 26334
+5 * 26334
+4 * 26334 0 26334
+5 +1 26334 26334
+3 * 26334
+3 * 26334 26334
+4 * 26334
+3 * 26334
+3 * 26334 0 26334
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=26334 0x402dba 770 
* * 289674 131670 79002 1 0 0 1
+5 * 26334 26334
+2 * 26334
+4 * 26334 26334
+5 * 26334
+4 * 26334 0 26334
+5 -2 26334 0 26334
+4 * 26334 26334
+3 * 26334
+3 * 26334 26334
+3 * 26334 0 0 0 0 0 0 0 0 26334 229
jcnd=26106/26334 -93 +1 
* * 
-9 * 228 228 0 1 0 0 1
+3 * 228
+3 * 228 228
+3 * 228 0 0 0 0 0 0 0 0 228
jcnd=228/228 -93 +1 
* * 
+2 +4 228 228
+3 * 228
+3 * 228
+4 * 228 228 0 1 0 0 1
+5 * 228
+4 * 228
+3 * 228 0 228
+5 +1 228 228
+3 * 228
+3 * 228
+4 * 228 228
+5 * 228
+4 * 228
+3 * 228 0 228
+5 +1 228 0 228
+7 * 228
jump=228 0x4016ee * 
* * 
+2 +1 26334 26334
+3 * 26334
+3 * 26334 26334
+4 * 26334
+3 * 26334 0 0 1 0 0 1
+3 * 26334 0 26334
cfi=(2)
cfn=(146)
calls=26334 0x402dba 770 
* * 289674 131670 79002
+5 * 26334 26334
+2 * 26334
+4 * 26334 26334
+5 * 26334 0 26334
+5 +1 26334 26334
+3 * 26334
+3 * 26334 26334
+4 * 26334
+3 * 26334
+3 * 26334 0 26334
cfi=(2)
cfn=(144)
calls=26334 0x402d9a 770 
* * 289674 131670 79002
+5 * 26334 26334
+4 * 26334 26334
+5 * 26334 0 26334
+5 +1 26334 26334
+5 * 26334 26334
+5 * 26334 26334
+5 * 26334
+4 * 26334 0 26334
+5 +1 26334 26334
+5 * 26334 26334
+5 * 26334 26334
+5 * 26334
+4 * 26334 0 26334
+5 -4 26334 0 26334
+4 * 26334 26334
+3 * 26334
+3 * 26334 26334
+3 * 26334 0 0 0 0 0 0 0 0 26334 229
jcnd=26106/26334 0x401672 +1 
* * 
-9 * 228 228 0 1 0 0 1
+3 * 228
+3 * 228 228
+3 * 228 0 0 0 0 0 0 0 0 228
jcnd=228/228 0x401672 +1 
* * 
+6 +6 228 228 0 1 0 0 1
+5 * 228 228
+5 * 228 0 228
+5 +2 228 228
+3 +1 228 0 228
+3 * 228 228
+5 * 228 228
+1 * 228 228

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 228
+7 * 228
+7 * 228
+3 * 228
+3 * 228 0 228
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=228 0x4030b2 310 
* * 226390 64741 60424 63 27 19 63 27 19 14765 701 910 112
+5 * 228
+7 * 228
+7 * 228
+3 * 228
+3 * 228 0 228
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=228 0x402ff4 310 
* * 230476 64296 59281 35 10 29 35 10 29 15839 872 910
+5 * 228 0 0 1 0 0 1
+7 * 228
+7 * 228
+3 * 228
+3 * 228 0 228
cfn=(142)
calls=228 0x401585 -52 
* * 2753556 1217064 635892 8 0 0 8 0 0 53124 458
+5 * 228 0 228
+8 * 228 228
+6 * 228 0 228
+6 * 228
+7 * 228
+3 * 228 0 228
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=228 0x402df4 414 
* * 57322 18046 12789 33 5 0 33 5 0 6424 127 456
+5 * 228
+7 * 228
+3 * 228 0 228 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=228 0x402e74 414 
* * 59593 18886 13463 7 1 0 7 1 0 7066 124 456
+5 +2 228
+7 * 228
+7 * 228
+3 * 228
+3 * 228 0 228
cfi=(2)
cfn=(4)
calls=228 0x4030b2 310 
* * 225813 64696 60286 2 1 2 2 1 2 14698 417 910
+5 * 228
+7 * 228
+7 * 228
+3 * 228
+3 * 228 0 228
cfi=(2)
cfn=(80)
calls=228 0x402ff4 310 
* * 229566 64236 59116 0 0 0 0 0 0 15702 569 910
+5 * 228 228
+6 * 228 0 0 1 0 0 1
+7 * 228
+7 * 228 0 228
+6 * 228 228
+8 * 228
+3 * 228
+3 * 228 0 228
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=228 0x401719 -33 
* * 1277484 531696 293094 4 0 0 4 0 0 26562 229
+5 * 228 0 228
+8 * 228 228
+6 * 228 0 228
+6 * 228
+7 * 228 0 0 1 0 0 1
+3 * 228 0 228
cfi=(2)
cfn=(148)
calls=228 0x402df4 414 
* * 57322 18046 12789 0 0 0 0 0 0 6424 123 456
+5 * 228
+7 * 228
+3 * 228 0 228
cfi=(2)
cfn=(178)
calls=228 0x402e74 414 
* * 59593 18886 13463 0 0 0 0 0 0 7066 122 456
+5 +2 228 228
+7 * 228
+3 * 228 0 228
cfi=(2)
cfn=(2)
calls=228 0x402d74 645 
* * 2964 1368 456
+5 * 228 228
+6 * 228
+3 * 228
+3 * 228
+3 * 228 228
+7 * 228
+3 * 228 0 0 1 0 0 1
+3 * 228 0 228
cfi=(2)
cfn=(144)
calls=228 0x402d9a 770 
* * 2508 1140 684
+5 * 228
+3 * 228
+7 * 228
+3 * 228
+3 * 228 0 228
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=228 0x402eda 901 
* * 25638 9255 7207 52 21 12 52 21 12 1262 85 41
+5 +1 228 228
+7 * 228
+3 * 228 0 228
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=228 0x402f54 645 
* * 2964 1368 456 0 1 0 0 1
+5 * 228 228
+6 * 228
+3 * 228
+3 * 228
+3 * 228 228
+7 * 228 0 0 1 0 0 1
+3 * 228
+3 * 228 0 228
cfi=(2)
cfn=(146)
calls=228 0x402dba 770 
* * 2508 1140 684
+5 * 228
+3 * 228
+7 * 228
+3 * 228
+3 * 228 0 228
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=228 0x402f7a 901 
* * 24747 8979 6979 24 16 16 24 16 16 1084 64 41
+5 +1 228 228
+7 * 228
+3 * 228 0 228
cfi=(2)
cfn=(10)
calls=228 0x402f54 645 
* * 2964 1368 456
+5 * 228 228
+6 * 228
+3 * 228
+3 * 228
+3 * 228 228 0 1 0 0 1
+7 * 228
+3 * 228
+3 * 228 0 228
cfi=(2)
cfn=(146)
calls=228 0x402dba 770 
* * 2508 1140 684
+5 * 228 228
+2 * 228
+4 * 228 228
+8 * 228 228
+8 * 228 0 228
+8 +1 228 228
+7 * 228
+3 * 228 0 228
cfi=(2)
cfn=(2)
calls=228 0x402d74 645 
* * 2964 1368 456
+5 * 228 228 0 1 0 0 1
+6 * 228
+3 * 228
+3 * 228
+3 * 228 228
+7 * 228
+3 * 228
+3 * 228 0 228
cfi=(2)
cfn=(144)
calls=228 0x402d9a 770 
* * 2508 1140 684
+5 * 228 228
+4 * 228 228
+8 * 228
+4 * 228 228
+8 * 228
+3 * 228 0 228
+8 +2 228 0 228
+7 -12 228 228
+8 * 228 228
+7 * 228 0 0 0 0 0 0 0 0 228 2
jcnd=1/228 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 228
+7 * 228
+3 * 228 0 228
cfi=(2)
cfn=(2)
calls=228 0x402d74 645 
* * 2964 1368 456 2 0 1 2 0 1
+5 * 228
+3 * 228 228
+7 * 228
+3 * 228 0 228
cfi=(2)
cfn=(2)
calls=228 0x402d74 645 
* * 2964 1368 456 0 1 0 0 1
+5 * 228
+3 * 228 0 0 0 0 0 0 0 0 228
+2 * 228 0 0 1 0 0 1
+5 * 228
jump=228 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 228
+2 * 228 0 0 0 0 0 0 0 0 228
jcnd=228/228 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228
+4 * 228 0 228
+4 * 228 0 228
+5 +1 228 228
+4 * 228
+3 * 228 0 228
cfi=(2)
cfn=(2)
calls=228 0x402d74 645 
* * 2964 1368 456
+5 * 228
+3 * 228 0 228
+3 +1 228 228 0 1 0 0 1
+6 * 228 0 228
+3 * 228 228
+6 * 228 0 228
+3 +2 228 0 228
+7 * 228
jump=228 +86 * 
* * 
+2 +1 26334 26334
+3 * 26334
+3 * 26334 26334
+4 * 26334
+3 * 26334
+3 * 26334 0 26334
cfi=(2)
cfn=(144)
calls=26334 0x402d9a 770 
* * 289674 131670 79002
+5 * 26334 26334
+4 * 26334 26334
+5 * 26334
+4 * 26334 0 26334
+5 +1 26334 26334
+3 * 26334
+3 * 26334 26334
+4 * 26334
+3 * 26334
+3 * 26334 0 26334
cfi=(2)
cfn=(146)
calls=26334 0x402dba 770 
* * 289674 131670 79002
+5 * 26334 26334
+2 * 26334
+4 * 26334 26334
+5 * 26334
+4 * 26334 0 26334
+5 -2 26334 0 26334
+4 * 26334 26334
+3 * 26334
+3 * 26334 26334
+3 * 26334 0 0 0 0 0 0 0 0 26334 229
jcnd=26106/26334 -93 +1 
* * 
-9 * 228 228 0 1 0 0 1
+3 * 228
+3 * 228 228
+3 * 228 0 0 0 0 0 0 0 0 228
jcnd=228/228 -93 +1 
* * 
+2 +4 228 228
+3 * 228
+3 * 228 0 0 1 0 0 1
+4 * 228 228
+5 * 228
+4 * 228
+3 * 228 0 228
+5 +1 228 228
+3 * 228
+3 * 228
+4 * 228 228
+5 * 228
+4 * 228
+3 * 228 0 228
+5 +1 228 228
+5 * 228 228
+5 * 228 228
+5 * 228 0 0 1 0 0 1
+4 * 228
+3 * 228 0 228
+5 +2 228 228
+3 +1 228 0 228
+3 * 228 228
+5 * 228 228
+1 * 228 228

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 456 0 456 1 0 0 1
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456 1 0 0 1
+4 +1 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=456 0x4049d4 -35 
* * 2736 912 1368 1 0 0 1
+5 * 456 456
+1 * 456 456

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 456 0 456 1 0 0 1
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 456
+4 * 456
+3 * 456 0 456
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=456 0x404520 -35 
* * 2280 912 912
+5 * 456 456
+1 * 456 456

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 456 0 456 1 0 0 1
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=456 0x404a28 -35 
* * 2736 912 1368 1 0 1 1 0 1
+5 * 456 456
+1 * 456 456

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 456
+4 * 456
+3 * 456 0 456
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=456 0x4044cc -35 
* * 2280 912 912
+5 * 456 456
+1 * 456 456

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456
+4 * 456 456
+4 * 456 456
+1 * 456 456

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228
+4 * 228 0 228
+4 * 228 0 228
+4 +1 228 228
+4 * 228 228
+4 * 228 228
+4 * 228
+3 * 228
+3 * 228 0 228
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=228 0x40406a -87 
* * 5472 1824 2052 0 14 7 0 14 7 228
+5 * 228 228
+1 * 228 228

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 456 0 456
+1 * 456
+3 * 456 0 456
+4 * 456 456
+4 * 456 456
+1 * 456 456

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228
+4 * 228 0 228
+4 * 228 0 228
+4 +1 228 228
+4 * 228 228
+4 * 228 228
+4 * 228
+3 * 228
+3 * 228 0 228
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=228 0x403df2 -87 
* * 5472 1824 2052 0 15 3 0 15 3 228
+5 * 228 228
+1 * 228 228

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 912 0 912 1 0 0 1
+1 * 912
+3 * 912 0 912
+4 +1 912 912
+4 * 912 912
+1 * 912 912

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 912 0 912 1 0 0 1
+1 * 912
+3 * 912
+4 * 912 0 912
+4 +1 912
+4 * 912
+3 * 912 0 912 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=912 0x40500c 790 
* * 5472 2736 1824 1 0 0 1
+5 * 912 912
+3 * 912 912
+1 * 912 912

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 526 0 526
+1 * 526
+3 * 526 0 526
+4 +1 526 526
+4 * 526 526
+1 * 526 526

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 912 0 912 1 0 0 1
+1 * 912
+3 * 912 0 912
+4 +1 912 912 0 1 0 0 1
+4 * 912 912
+1 * 912 912

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 526 0 526
+1 * 526
+3 * 526 0 526 0 0 1 0 0 1
+4 +1 526 526
+4 * 526 526
+1 * 526 526

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 912 0 912 1 0 0 1
+1 * 912
+3 * 912
+4 * 912 0 912
+4 +1 912
+4 * 912
+3 * 912 0 912
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=912 0x404ffe 790 
* * 5472 2736 1824 1 0 0 1
+5 * 912 912
+3 * 912 912
+1 * 912 912

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 456 0 456
+1 * 456
+3 * 456 0 456
+4 * 456 0 456
+4 * 456 456
+4 * 456 456
+1 * 456 456

fl=(5)
fn=(102)
0x4048de 113 477 0 477 1 0 0 1
+1 * 477
+3 * 477 0 477
+4 +1 477
+10 * 477 477
+1 * 477 477

fn=(266)
0x40406a 129 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228
+4 * 228 0 228
+4 * 228 0 228
+4 +1 228 228
+4 * 228
+3 * 228
+5 * 228 0 228
cfi=(16)
cfn=(226)
calls=228 0x402d61 -20 
* * 1596 684 684
+5 * 228
+3 * 228 0 0 0 0 0 0 0 0 228
+2 * 228 228
+4 * 228 228 0 0 14 0 0 14
+2 * 228 0 228 0 0 7 0 0 7
+2 * 228 228
+1 * 228 228

fn=(28)
0x404992 113 477 0 477 1 0 0 1
+1 * 477
+3 * 477 0 477
+4 +1 477
+10 * 477 477
+1 * 477 477

fn=(176)
0x4044cc 86 456 0 456
+1 * 456
+3 * 456 0 456
+4 * 456 456
+1 * 456 456

fn=(224)
0x403df2 129 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228
+4 * 228 0 228
+4 * 228 0 228
+4 +1 228 228
+4 * 228
+3 * 228
+5 * 228 0 228
cfi=(16)
cfn=(226)
calls=228 0x402d61 -20 
* * 1596 684 684
+5 * 228
+3 * 228 0 0 0 0 0 0 0 0 228
+2 * 228 228
+4 * 228 228 0 0 15 0 0 15
+2 * 228 0 228 0 0 3 0 0 3
+2 * 228 228
+1 * 228 228

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 463 0 463
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 * 463 0 463
+4 +1 463 463
+4 * 463
+3 * 463 0 463
cob=(5)
cfi=(8)
cfn=(164)
calls=463 0x387e4bb2f0 0 
* * 51544 13018 6065 24 4 0 24 4 0 12559 255 463
* * 463 463 0 1 1 0 1 1 0 0 0 463
+5 * 463 463
+1 * 463 463

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 463 0 463
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 * 463 0 463
+4 +1 463 463
+4 * 463
+3 * 463 0 463
cob=(5)
cfi=(8)
cfn=(164)
calls=463 0x387e4bb2f0 0 
* * 56066 14692 7405 0 1 0 0 1 0 13838 251 463
* * 463 463 0 0 0 0 0 0 0 0 0 463
+5 * 463 463
+1 * 463 463

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 463 0 463 1 0 0 1
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 * 463 0 463
+4 +2 463 463
+4 * 463
+3 * 463 0 463
cfn=(102)
calls=463 0x4048de +12 
* * 2778 926 926 1 0 0 1
+5 * 463 463
+4 * 463 0 0 1 0 0 1
+3 * 463
+2 * 463 0 0 0 0 0 0 0 0 463
jcnd=463/463 +7 +3 
* * 
+7 +3 463 463
+4 * 463
+4 * 463
+3 * 463 0 463
cob=(5)
cfi=(8)
cfn=(32)
calls=463 0x387e4bd0b0 0 
* * 141213 19400 18337 33 16 21 33 16 21 23932 1063 463
* * 463 463 0 0 0 0 0 0 0 0 0 463
+5 +1 463 463
+1 * 463 463

fn=(18)
0x404a28 81 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456 0 0 1 0 0 1
+4 * 456 0 456
+4 * 456 456
+1 * 456 456

fn=(92)
0x4049d4 81 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456
+4 * 456 0 456
+4 * 456 456
+1 * 456 456

fn=(196)
0x404520 86 456 0 456
+1 * 456
+3 * 456 0 456
+4 * 456 456
+1 * 456 456

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 463 0 463 1 0 0 1
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 * 463 0 463 1 0 0 1
+4 +2 463 463
+4 * 463
+3 * 463 0 463
cfn=(28)
calls=463 0x404992 +12 
* * 2778 926 926 1 0 0 1
+5 * 463 463
+4 * 463
+3 * 463
+2 * 463 0 0 0 0 0 0 0 0 463
jcnd=463/463 +7 +3 
* * 
+7 +3 463 463
+4 * 463
+4 * 463
+3 * 463 0 463
cob=(5)
cfi=(8)
cfn=(32)
calls=463 0x387e4bd0b0 0 
* * 132503 20035 20430 20 25 18 20 25 18 21681 711 463
* * 463 463 0 1 1 0 1 1 0 0 0 463
+5 +1 463 463
+1 * 463 463

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +2 456 456 0 1 0 0 1
+4 * 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=456 0x404a36 450 
* * 185374 59984 57252 24 3 4 24 3 4 7204 456 908 112
+5 * 456 456
+1 * 456 456

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +2 456 456
+4 * 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=456 0x40439c 107 
* * 198142 64544 61812 7 0 14 7 0 14 7204 446 908
+5 * 456 456
+1 * 456 456

fn=(116)
0x40439c 107 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +10 456 456
+4 * 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=456 0x4047d7 -26 
* * 191758 62264 59532 7 0 14 7 0 14 7204 446 908
+5 +1 456 456
+1 * 456 456

fn=(118)
0x4047d7 91 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +2 456 456
+4 * 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=456 0x4049e2 450 
* * 185374 59984 57252 7 0 14 7 0 14 7204 446 908
+5 * 456 456
+1 * 456 456

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +10 456 456
+4 * 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(52)
calls=456 0x404829 -26 
* * 191758 62264 59532 25 3 4 25 3 4 7204 456 908 112
+5 +1 456 456
+1 * 456 456

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +2 456 456
+4 * 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456 1 0 0 1
cfn=(50)
calls=456 0x404484 107 
* * 198142 64544 61812 25 3 4 25 3 4 7204 456 908 112
+5 * 456 456
+1 * 456 456

fl=(2)
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456
+1 * 456
+4 * 456 0 456
+4 +2 456 456
+4 * 456 456
+4 * 456
+3 * 456 456
+4 * 456 456
+3 * 456
+3 * 456
+3 * 456
+4 * 456
+3 * 456 456
+4 * 456 456
+3 -1 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=456 0x403d98 +11 
* * 68114 19076 11878 1 1 0 1 1 0 14132 246 912
+5 +1 456 456
+4 * 456
+3 * 456 0 456
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=456 0x403296 -82 
* * 10488 3648 3648 1 0 0 1
+5 * 456
jump=456 +28 * 
* * 
+28 * 456
+4 * 456 456
+1 * 456 456
+1 * 456 456

fn=(2)
0x402d74 645 1852 0 1852 1 0 0 1
+1 * 1852
+3 * 1852 0 1852 0 0 1 0 0 1
+4 +1 1852 1852
+4 * 1852 1852 0 1 1 0 1 1
+4 * 1852
+3 * 1852 1852
+4 * 1852 1852
+3 * 1852
+3 * 1852
+3 * 1852
+4 * 1852 1852
+1 * 1852 1852

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 +2 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=456 0x404236 -14 
* * 149637 25677 25610 21 24 12 21 24 12 22259 662 912
+5 * 456 456
+4 * 456 0 456
+3 +1 456 456
+4 * 456 456 0 1 0 0 1
+3 * 456 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+3 * 456 456
+4 * 456
+4 * 456
+3 * 456 456
+4 * 456 0 456
+4 +1 456 456
+1 * 456 456

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 +2 456 456
+4 * 456 456 0 1 0 0 1
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=456 0x403fbe -14 
* * 157476 24772 23297 13 10 15 13 10 15 24337 995 912
+5 * 456 456
+4 * 456 0 456
+3 +1 456 456
+4 * 456 456
+3 * 456 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+3 * 456 456
+4 * 456
+4 * 456
+3 * 456 456
+4 * 456 0 456
+4 +1 456 456
+1 * 456 456

fn=(244)
0x402f7a 901 228 0 228
+1 * 228
+3 * 228 0 0 1 0 0 1
+4 * 228 0 228
+4 * 228 0 228
+4 +2 228 228
+4 * 228 228
+4 * 228 228
+4 * 228 228
+4 * 228
+3 * 228 0 0 0 0 0 0 0 0 228
jcnd=7/228 +51 +10 
* * 
+2 +3 221 221
+4 * 221 221
+4 * 221 221
+4 -1 221 221
+4 * 221
+3 * 221
+3 * 221 0 221
cfi=(3)
cfn=(264)
calls=221 0x4036b1 215 
* * 8398 2873 3094 0 14 4 0 14 4 221
+5 +2 221 221
+4 * 221 221
+4 * 221
+4 * 221 221
+4 * 221 0 221
+4 * 221
jump=221 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10288 3107 2696 23 2 12 23 2 12 635 64 41
+5 +2 228 228
+1 * 228 228

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 933 0 933 1 0 0 1
+1 * 933
+3 * 933 0 933 1 0 0 1
+4 +1 933 933
+4 * 933 933
+1 * 933 933

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+3 * 456 0 456
+4 * 456
+4 * 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=456 0x404380 726 
* * 4560 2280 1824
+5 * 456 456
+4 * 456 456
+1 * 456 456

fn=(148)
0x402df4 414 456 0 456
+1 * 456
+3 * 456 0 456
+1 * 456
+4 * 456 0 456 1 0 0 1
+4 +2 456 456
+4 * 456
+3 * 456 0 456
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=456 0x40325e 113 
* * 2736 1368 912
+5 * 456
+3 * 456 456
+4 * 456 456
+4 * 456 456
+4 * 456 456
+3 -1 456
+3 * 456
+3 * 456 0 456
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=456 0x40326c 148 
* * 14136 4560 5472 4 0 0 4
+5 +1 456 456
+4 * 456
+3 * 456 0 456
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=456 0x4031ec 159 
* * 86828 26060 16458 27 5 0 27 5 0 12848 250 912
+5 * 456
jump=456 +28 * 
* * 
+28 * 456 0 0 1 0 0 1
+4 * 456 456
+1 * 456 456
+1 * 456 456

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 463 0 463 1 0 0 1
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 * 463 0 463
+4 +2 463 463
+5 * 463 0 0 0 0 0 0 0 0 463
+2 +1 463 463
+4 * 463 463
+4 * 463 463
+4 * 463
+3 * 463
+3 * 463 0 463
cfi=(5)
cfn=(160)
calls=463 0x4044d6 -65 
* * 57100 14870 8380 25 5 0 25 5 0 12559 255 926
+5 +1 463 463
+1 * 463 463

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 456 0 456
+1 * 456
+3 * 456 0 456
+1 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=456 0x4043ca -45 
* * 16416 5928 6384 4 0 4 4 0 4
+5 +1 456 456 0 1 0 0 1
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(20)
calls=456 0x404412 +43 
* * 161037 31149 28802 22 24 12 22 24 12 22259 662 912
+5 * 456
jump=456 +28 * 
* * 
+28 * 456
+4 * 456 456
+1 * 456 456
+1 * 456 456

fn=(14)
0x4043ca 90 456 0 456 1 0 0 1
+1 * 456
+3 * 456
+4 * 456 0 456 0 0 1 0 0 1
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfi=(4)
cfn=(16)
calls=456 0x404804 +24 
* * 8208 2736 3192 2 0 1 2 0 1
+5 * 456 456
+4 * 456 0 456 0 0 2 0 0 2
+7 * 456 456
+4 * 456 0 456 1 0 0 1
+8 * 456 456
+4 * 456 0 456
+8 +1 456 456
+1 * 456 456

fn=(80)
0x402ff4 310 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456
+2 * 456 0 456
+2 * 456 0 456
+1 * 456 0 0 1 0 0 1
+4 * 456 0 456
+4 * 456 0 456
+4 +2 456 456
+4 * 456
+3 * 456 0 456
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=456 0x4039fc 117 
* * 2736 1368 912 2 0 0 2
+5 * 456
+3 * 456 0 456
cfi=(3)
cfn=(84)
calls=456 0x4039ed -88 
* * 2736 1368 912
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(2)
calls=456 0x402d74 645 
* * 5928 2736 912
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456
+3 * 456
+3 * 456 0 456 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=456 0x403a0a 134 
* * 195324 39364 36065 20 10 15 20 10 15 24337 995 912
+5 +4 456 456
+4 * 456
+3 * 456 0 456
cfn=(106)
calls=456 0x40325e 113 
* * 2736 1368 912 1 0 0 1
+5 * 456
+3 * 456 456
+4 * 456 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=456 0x403a98 565 
* * 11400 4560 3648 2 0 0 2
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(112)
calls=456 0x403a68 547 
* * 11400 4560 3648
+5 * 456
+3 * 456
+3 * 456
+3 * 456
+3 * 456 0 456
cfi=(11)
cfn=(114)
calls=456 0x403ac9 -60 
* * 204982 66824 64548 7 0 14 7 0 14 7204 446 908
+5 -3 456 456
+4 * 456 0 456
+4 * 456
jump=456 +28 +4 
* * 
+28 +4 456
+4 * 456 456
+1 * 456 456
+2 * 456 456
+2 * 456 456
+1 * 456 456

fn=(188)
0x403d98 171 463 0 463 1 0 0 1
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 * 463 0 463
+4 +2 463 463
+5 * 463 0 0 0 0 0 0 0 0 463 7
+2 +1 463 463
+4 * 463 463
+4 * 463 463
+4 * 463
+3 * 463
+3 * 463 0 463
cfi=(5)
cfn=(190)
calls=463 0x40452a -65 
* * 61622 16544 9720 0 1 0 0 1 0 13838 251 926
+5 +1 463 463
+1 * 463 463

fn=(22)
0x404236 167 463 0 463 1 0 0 1
+1 * 463
+3 * 463
+4 * 463 0 463 1 0 0 1
+4 * 463 0 463
+4 0 463 463
+5 0 463 0 0 0 0 0 0 0 0 463
+2 0 463 463
+4 0 463 463
+4 0 463
+5 0 463
+3 0 463
+3 0 463 0 463
fi=(6) ???
cfi=(5)
cfn=(26)
calls=463 0x404730 99 
* 0 144541 23739 24134 24 26 18 24 26 18 22144 711 926
+5 0 463
fi=(6)
jump=463 +7 0 
* 0 
+7 0 463 463
+1 0 463 463

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 456 0 456 1 0 0 1
+1 * 456
+3 * 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+4 * 456 0 456
+4 * 456
+4 * 456 0 0 1 0 0 1
+4 * 456
+3 * 456
+3 * 456 0 456
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=456 0x404468 726 
* * 4560 2280 1824 1 0 0 1
+5 * 456 456
+4 * 456 456
+1 * 456 456

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+3 * 456 0 456
+4 * 456
+4 * 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfi=(10)
cfn=(44)
calls=456 0x404468 726 
* * 4560 2280 1824
+5 * 456 456
+4 * 456 456
+1 * 456 456

fn=(86)
0x403a0a 134 456 0 456
+1 * 456
+3 * 456 0 456
+1 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=456 0x4042e2 -45 
* * 16416 5928 6384 5 0 0 5
+5 +1 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456 1 0 0 1
cfn=(94)
calls=456 0x40432a +43 
* * 168876 30244 26489 14 10 15 14 10 15 24337 995 912
+5 * 456
jump=456 +28 * 
* * 
+28 * 456
+4 * 456 456
+1 * 456 456
+1 * 456 456

fn=(88)
0x4042e2 90 456 0 456 1 0 0 1
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456 1 0 0 1
cfi=(4)
cfn=(90)
calls=456 0x4047b2 +24 
* * 8208 2736 3192 3 0 0 3
+5 * 456 456
+4 * 456 0 456
+7 * 456 456
+4 * 456 0 456
+8 * 456 456
+4 * 456 0 456
+8 +1 456 456
+1 * 456 456

fn=(156)
0x4031ec 159 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456
+1 * 456
+4 * 456 0 456
+4 +2 456 456
+4 * 456 456 0 1 0 0 1
+4 * 456
+3 * 456 456
+4 * 456 456
+3 * 456
+3 * 456
+3 * 456
+4 * 456
+3 * 456 456
+4 * 456 456
+3 -1 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(158)
calls=456 0x403ce6 +11 
* * 63572 17396 10530 24 5 0 24 5 0 12848 250 912
+5 +1 456 456
+4 * 456
+3 * 456 0 456
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=456 0x4031b8 -82 
* * 10488 3648 3648 1 0 0 1
+5 * 456
jump=456 +28 * 
* * 
+28 * 456
+4 * 456 456
+1 * 456 456
+1 * 456 456

fn=(172)
0x4031b8 79 456 0 456 1 0 0 1
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 456
+4 * 456
+3 * 456 0 456
cfi=(4)
cfn=(174)
calls=456 0x403ccc +42 
* * 6384 2280 2280
+5 * 456 456
+1 * 456 456

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10)
0x402f54 645 940 0 940 1 0 0 1
+1 * 940
+3 * 940 0 940
+4 +1 940 940
+4 * 940 940 0 0 2 0 0 2
+4 * 940
+3 * 940 940
+4 * 940 940
+3 * 940
+3 * 940
+3 * 940
+4 * 940 940
+1 * 940 940

fn=(106)
0x40325e 113 933 0 933 1 0 0 1
+1 * 933
+3 * 933 0 933
+4 +1 933 933
+4 * 933 933
+1 * 933 933

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470 0 0 1 0 0 1
+4 +1 470 470
+4 * 470 470
+1 * 470 470

fn=(82)
0x4039fc 117 470 0 470 1 0 0 1
+1 * 470
+3 * 470 0 470 1 0 0 1
+4 +1 470 470
+4 * 470 470
+1 * 470 470

fn=(200)
0x402eda 901 228 0 228
+1 * 228
+3 * 228
+4 * 228 0 228
+4 * 228 0 228
+4 +2 228 228
+4 * 228 228
+4 * 228 228
+4 * 228 228
+4 * 228
+3 * 228 0 0 0 0 0 0 0 0 228 8
jcnd=7/228 +51 +10 
* * 
+2 +3 221 221
+4 * 221 221
+4 * 221 221
+4 -1 221 221
+4 * 221
+3 * 221
+3 * 221 0 221
cfi=(3)
cfn=(222)
calls=221 0x403373 215 
* * 8398 2873 3094 0 14 2 0 14 2 221
+5 +2 221 221
+4 * 221 221
+4 * 221
+4 * 221 221
+4 * 221 0 221
+4 * 221
jump=221 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11179 3383 2924 49 7 10 49 7 10 813 77 41
+5 +2 228 228
+1 * 228 228

fn=(4)
0x4030b2 310 456 0 456 1 0 0 1
+1 * 456
+3 * 456 0 456
+2 * 456 0 456
+2 * 456 0 456
+1 * 456
+4 * 456 0 456 1 0 0 1
+4 * 456 0 456
+4 +2 456 456
+4 * 456
+3 * 456 0 456
cfn=(6)
calls=456 0x403b08 117 
* * 2736 1368 912 1 0 1 1 0 1
+5 * 456
+3 * 456 0 456
cfi=(3)
cfn=(8)
calls=456 0x403afa -88 
* * 2736 1368 912 1 0 0 1
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(10)
calls=456 0x402f54 645 
* * 5928 2736 912 1 1 0 1 1
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456
+3 * 456
+3 * 456 0 456
cfn=(12)
calls=456 0x403b16 134 
* * 187485 40269 38378 27 24 16 27 24 16 22259 662 912
+5 +4 456 456 0 1 0 0 1
+4 * 456
+3 * 456 0 456
cfn=(40)
calls=456 0x40333c 113 
* * 2736 1368 912 2 0 0 2
+5 * 456
+3 * 456 456
+4 * 456 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(42)
calls=456 0x403ba4 565 
* * 11400 4560 3648 3 0 0 3
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(46)
calls=456 0x403b74 547 
* * 11400 4560 3648
+5 * 456
+3 * 456
+3 * 456
+3 * 456
+3 * 456 0 456 1 0 0 1
cfi=(11)
cfn=(48)
calls=456 0x403bd5 -60 
* * 204982 66824 64548 26 3 4 26 3 4 7204 456 908 112
+5 -3 456 456
+4 * 456 0 456
+4 * 456
jump=456 +28 +4 
* * 
+28 +4 456
+4 * 456 456
+1 * 456 456
+2 * 456 456
+2 * 456 456
+1 * 456 456

fn=(108)
0x403a98 565 456 0 456 1 0 0 1
+1 * 456
+3 * 456
+4 * 456 0 456
+4 +1 456 456
+4 * 456 456
+4 * 456 0 456
+4 * 456
+4 * 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfi=(10)
cfn=(110)
calls=456 0x404380 726 
* * 4560 2280 1824 1 0 0 1
+5 * 456 456
+4 * 456 456
+1 * 456 456

fn=(178)
0x402e74 414 456 0 456
+1 * 456
+3 * 456 0 456
+1 * 456
+4 * 456 0 456 1 0 0 1
+4 +2 456 456
+4 * 456
+3 * 456 0 456
cfn=(40)
calls=456 0x40333c 113 
* * 2736 1368 912
+5 * 456
+3 * 456 456
+4 * 456 456
+4 * 456 456
+4 * 456 456
+3 -1 456
+3 * 456
+3 * 456 0 456
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=456 0x40334a 148 
* * 14136 4560 5472 2 0 0 2
+5 +1 456 456
+4 * 456
+3 * 456 0 456
cfn=(186)
calls=456 0x4032ca 159 
* * 91370 27740 17806 3 1 0 3 1 0 14132 246 912
+5 * 456
jump=456 +28 * 
* * 
+28 * 456 0 0 1 0 0 1
+4 * 456 456
+1 * 456 456
+1 * 456 456

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 463 0 463 1 0 0 1
+1 * 463 0 0 1 0 0 1
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 0 463 463
+5 0 463 0 0 0 0 0 0 0 0 463
+2 0 463 463
+4 0 463 463
+4 0 463
+5 0 463
+3 0 463
+3 0 463 0 463
fi=(6)
cfi=(5)
cfn=(100)
calls=463 0x40461a 99 
* 0 153251 23104 22041 36 16 21 36 16 21 24395 1063 926
+5 0 463
fi=(6)
jump=463 +7 0 
* 0 
+7 0 463 463
+1 0 463 463

fn=(144)
0x402d9a 770 79458 0 79458
+1 * 79458
+3 * 79458 0 79458
+4 * 79458 0 79458
+4 +1 79458 79458
+4 * 79458 79458
+3 * 79458 79458
+4 * 79458
+4 * 79458
+3 * 79458 79458
+1 * 79458 79458

fn=(146)
0x402dba 770 79458 0 79458
+1 * 79458
+3 * 79458 0 79458 1 0 0 1
+4 * 79458 0 79458
+4 +1 79458 79458
+4 * 79458 79458
+3 * 79458 79458
+4 * 79458
+4 * 79458
+3 * 79458 79458
+1 * 79458 79458

fn=(192)
0x403296 79 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 456
+4 * 456
+3 * 456 0 456
cfi=(4)
cfn=(194)
calls=456 0x403d7e +42 
* * 6384 2280 2280 1 0 0 1
+5 * 456 456
+1 * 456 456

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456 1 0 0 1
+4 * 456 0 456
+4 * 456 0 456
+4 +8 456 0 456
+4 +3 456 456
+4 * 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=456 0x404f37 -22 
* * 112414 35360 32172 14 3 3 14 3 3 7204 456 908 112
+5 +1 456 456
+1 * 456 456

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 456 0 456
+1 * 456
+3 * 456 0 456
+2 * 456 0 456
+1 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +4 456 456
+4 * 456
+3 * 456 0 456
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=456 0x404878 277 
* * 6840 2736 2280 1 0 0 1
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=456 0x404d44 277 
* * 11400 4104 3648 2 0 0 2
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(132)
calls=456 0x404d44 277 
* * 11400 4104 3648
+5 * 456
+3 * 456
+3 * 456
+3 * 456 0 456
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=456 0x404d5e -49 
* * 119254 37640 34908 1 0 14 1 0 14 7204 446 908
+5 +1 456
+4 * 456 456
+1 * 456 456
+2 * 456 456
+1 * 456 456

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 456 0 456
+1 * 456
+3 * 456 0 456
+1 * 456
+4 * 456 0 456 1 0 0 1
+4 * 456 0 456
+4 * 456 0 456
+4 +10 456 456
+4 * 456
+3 * 456 0 456
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=456 0x404c38 288 
* * 6840 2736 2280 3 0 0 3
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(56)
calls=456 0x404c38 288 
* * 6840 2736 2280
+5 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=456 0x404c52 -36 
* * 161662 51776 49044 20 3 4 20 3 4 7204 456 908 112
+5 +1 456
+4 * 456 456
+1 * 456 456
+1 * 456 456

fn=(60)
0x404c52 424 456 0 456
+1 * 456
+3 * 456 0 456
+2 * 456 0 456
+1 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +4 456 456
+4 * 456
+3 * 456 0 456
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=456 0x40492d 277 
* * 6840 2736 2280 2 0 0 2
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=456 0x404d9d 277 
* * 11400 4104 3648 2 0 1 2 0 1
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(66)
calls=456 0x404d9d 277 
* * 11400 4104 3648
+5 * 456
+3 * 456
+3 * 456
+3 * 456 0 456
cfn=(72)
calls=456 0x404db7 -49 
* * 119254 37640 34908 15 3 3 15 3 3 7204 456 908 112
+5 +1 456
+4 * 456 456
+1 * 456 456
+2 * 456 456
+1 * 456 456

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 498 0 498 1 0 0 1
+1 * 498
+3 * 498
+4 * 498 0 498
+4 +1 498 498
+4 * 498
+3 * 498 0 498 1 0 0 1
cfi=(13)
cfn=(64)
calls=498 -33 -66 
* * 2988 1494 996
+5 * 498 498
+1 * 498 498

fn=(66)
0x404d9d 277 912 0 912
+1 * 912
+3 * 912
+4 * 912 0 912
+4 +1 912 912
+4 * 912
+3 * 912 0 912
cfi=(13)
cfn=(68)
calls=912 0x404f1a -58 
* * 14592 5472 4560 2 0 1 2 0 1
+5 * 912 912
+1 * 912 912

fn=(240)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 456 0 456
+1 * 456
+3 * 456 0 456
+1 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +10 456 456
+4 * 456
+3 * 456 0 456
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=456 0x404bc6 288 
* * 6840 2736 2280 3 0 0 3
+5 * 456
+3 * 456 456
+4 * 456
+3 * 456 0 456
cfn=(122)
calls=456 0x404bc6 288 
* * 6840 2736 2280
+5 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(126)
calls=456 0x404be0 -36 
* * 161662 51776 49044 4 0 14 4 0 14 7204 446 908
+5 +1 456
+4 * 456 456
+1 * 456 456
+1 * 456 456

fn=(128)
0x404878 277 498 0 498
+1 * 498
+3 * 498
+4 * 498 0 498 1 0 0 1
+4 +1 498 498
+4 * 498
+3 * 498 0 498
cfi=(13)
cfn=(130)
calls=498 -33 -66 
* * 2988 1494 996 0 0 1 0 0 1
+5 * 498 498
+1 * 498 498

fn=(132)
0x404d44 277 912 0 912
+1 * 912
+3 * 912
+4 * 912 0 912
+4 +1 912 912
+4 * 912
+3 * 912 0 912
cfi=(13)
cfn=(134)
calls=912 0x404e98 -58 
* * 14592 5472 4560 2 0 0 2
+5 * 912 912
+1 * 912 912

fn=(138)
0x404d5e 379 456 0 456
+1 * 456
+3 * 456
+4 * 456 0 456
+4 * 456 0 456
+4 * 456 0 456
+4 +8 456 0 456
+4 +3 456 456
+4 * 456 456
+4 * 456 456
+4 * 456
+3 * 456
+3 * 456 0 456
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=456 0x404eb5 -22 
* * 112414 35360 32172 1 0 14 1 0 14 7204 446 908
+5 +1 456 456
+1 * 456 456

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 912 0 912 1 0 0 1
+1 * 912
+3 * 912
+4 * 912 0 912
+4 +1 912 912
+4 * 912
+3 * 912 0 912
cfi=(13)
cfn=(124)
calls=912 0x404d36 -77 
* * 5472 2736 1824 2 0 0 2
+5 * 912 912
+1 * 912 912

fn=(56)
0x404c38 288 912 0 912 1 0 0 1
+1 * 912
+3 * 912
+4 * 912 0 912 1 0 0 1
+4 +1 912 912
+4 * 912
+3 * 912 0 912
cfi=(13)
cfn=(58)
calls=912 0x404d8f -77 
* * 5472 2736 1824 1 0 0 1
+5 * 912 912
+1 * 912 912

fn=(74)
0x404f37 368 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470 1 0 0 1
+4 * 470 0 470
+4 * 470 0 470
+4 +2 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+5 * 470 0 0 0 0 0 0 0 0 470
jcnd=7/470 +33 +2 
* * 
+2 +1 463 463
+4 * 463
+8 * 463 463
+4 * 463 463
+4 * 463
+3 * 463 0 0 1 0 0 1
+3 * 463 0 463 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=463 0x3877c83840 0 
* * 100378 30525 29604 11 2 5 11 2 5 6810 459 458 112
* * 463 463 0 1 1 0 1 1 0 0 0 463
+5 +1 470 470
+4 * 470
+8 * 470 470
+4 * 470
+3 +1 470 470
+1 * 470 470

fn=(140)
0x404eb5 368 470 0 470
+1 * 470
+3 * 470
+4 * 470 0 470 1 0 0 1
+4 * 470 0 470
+4 * 470 0 470 0 0 1 0 0 1
+4 +2 470 470
+4 * 470 470
+4 * 470
+3 * 470
+3 * 470
+4 * 470 0 470
+4 +1 470 470
+5 * 470 0 0 0 0 0 0 0 0 470
jcnd=7/470 +33 +2 
* * 
+2 +1 463 463
+4 * 463
+8 * 463 463
+4 * 463 463
+4 * 463
+3 * 463
+3 * 463 0 463
cob=(2)
cfi=(9)
cfn=(78)
calls=463 0x3877c83840 0 
* * 100378 30525 29604 0 0 15 0 0 15 6810 450 458
* * 463 463 0 0 0 0 0 0 0 0 0 463
+5 +1 470 470
+4 * 470
+8 * 470 470
+4 * 470
+3 +1 470 470
+1 * 470 470

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 912 0 912 1 0 0 1
+1 * 912
+3 * 912 0 912
+4 +1 912 912
+4 * 912 912
+1 * 912 912

fn=(110)
0x404380 726 912 0 912 1 0 0 1
+1 * 912
+3 * 912 0 912
+4 * 912 0 912
+4 * 912 912
+4 * 912 912
+3 * 912 912
+4 * 912 0 912
+3 * 912 912
+1 * 912 912

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 912 0 912 1 0 0 1
+1 * 912
+3 * 912 0 912
+4 +1 912 912
+4 * 912 912
+1 * 912 912

fn=(44)
0x404468 726 912 0 912
+1 * 912
+3 * 912 0 912
+4 * 912 0 912
+4 * 912 912
+4 * 912 912
+3 * 912 912
+4 * 912 0 912 1 0 0 1
+3 * 912 912
+1 * 912 912

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 463 0 463 1 0 0 1
+1 * 463
+3 * 463 0 463
+4 * 463 0 463 1 0 0 1
+4 * 463 463
+1 * 463 463

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 463 0 463 1 0 0 1
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 +4 463 463
+4 * 463 463
+4 * 463
+3 * 463
+3 * 463 0 463
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=463 0x40454c -14 
* * 2778 926 1389 1 0 0 1
+5 +2 463 463
+1 * 463 463

fn=(150)
0x40326c 148 463 0 463
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 * 463 0 463
+4 +3 463 463 0 1 0 0 1
+4 * 463 463
+4 * 463
+3 * 463
+3 * 463 0 463
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=463 0x403d1a -29 
* * 8334 2778 3241 3 0 0 3
+5 +1 463 463
+1 * 463 463

fn=(180)
0x40334a 148 463 0 463
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 * 463 0 463
+4 +3 463 463
+4 * 463 463
+4 * 463
+3 * 463
+3 * 463 0 463
cfn=(182)
calls=463 0x403dcc -29 
* * 8334 2778 3241 2 0 0 2
+5 +1 463 463
+1 * 463 463

fn=(152)
0x403d1a 122 463 0 463 1 0 0 1
+1 * 463
+3 * 463
+4 * 463 0 463
+4 * 463 0 463
+4 +4 463 463
+4 * 463 463
+4 * 463
+3 * 463
+3 * 463 0 463
cfn=(154)
calls=463 0x4044f8 -14 
* * 2778 926 1389 2 0 0 2
+5 +2 463 463
+1 * 463 463

fn=(184)
0x40454c 112 463 0 463 1 0 0 1
+1 * 463
+3 * 463 0 463
+4 * 463 0 463
+4 * 463 463
+1 * 463 463

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2312 377 376 5 2 6 5 2 6 348 49 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 916 246 157 0 0 0 0 0 0 169 12 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3183 647 596 25 6 6 25 6 6 521 68 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 936 252 165 2 0 0 2 0 0 174 5 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 926 0 926 1 0 0 1
+2 0 926 0 926
+2 0 926 0 926
+2 0 926
+3 0 926 0 926
+2 0 926 0 926
+1 0 926 0 926
+1 0 926
+3 0 926
+4 0 926 926
+4 0 926 0 926
+4 0 926
+3 0 926
+4 0 926
+3 0 926
+3 0 926
+3 0 926 0 0 1 0 0 1 0 0 926
+6 0 926
+4 0 926 0 0 0 0 0 0 0 0 926
+6 0 926
+4 0 926 0 0 0 0 0 0 0 0 926
+6 0 926 926
+7 0 926 0 0 0 0 0 0 0 0 926 2
jcnd=802/926 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 802
+2 0 802 0 0 0 0 0 0 0 0 802
+6 0 802 802 0 1 0 0 1
+4 0 802
+3 0 802
+2 0 802 0 0 0 0 0 0 0 0 802
jcnd=802/802 0x3877c78a40 0 
* 0 
+6 0 802 802
+4 0 802
+3 0 802 0 0 0 0 0 0 0 0 802
+6 0 802 802
+5 0 802
+4 0 802 0 0 0 0 0 0 0 0 802
jcnd=802/802 0x3877c7907c 0 
* 0 
+6 0 802 802
+5 0 802
+4 0 802 0 0 0 0 0 0 0 0 802
+6 0 802
+4 0 802 0 0 1 0 0 1 0 0 802
+6 0 802
+4 0 802 802
+7 0 802 0 0 0 0 0 0 0 0 802
+6 0 802 802
+6 0 802
+2 0 802 0 0 0 0 0 0 0 0 802
+6 0 802 802
+4 0 802 0 0 0 0 0 0 0 0 802 3
jcnd=799/802 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=2/3 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 802 802 0 1 0 0 1
+4 0 802 0 0 0 0 0 0 0 0 802 433
jcnd=231/802 0x3877c78bf0 0 
* 0 
+6 0 571 571 0 0 1 0 0 1
+6 0 571 0 0 1 0 0 1 0 0 571 61
jcnd=44/571 0x3877c78a78 0 
* 0 
+6 0 527 527
+5 0 527 527
+5 0 527 527
+4 0 527 0 0 0 0 0 0 0 0 527
+6 0 527 527
+4 0 527 0 0 0 0 0 0 0 0 527
+6 0 527 527
+9 0 527 0 527
+4 0 527 0 527
+4 0 527 0 0 0 0 0 0 0 0 527 4
jcnd=519/527 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 527
+3 0 527
+4 0 527 527
+4 0 527 527
+4 0 527 0 0 0 0 0 0 0 0 527
-12 0 44
+4 0 44 44
+4 0 44 44
+4 0 44 0 0 0 0 0 0 0 0 44
+6 0 571
+7 0 571 0 571
+4 0 571 0 571
+4 0 571 0 0 0 0 0 0 0 0 571
jcnd=562/571 +18 0 
* 0 
+2 0 9 0 9
+8 0 9 0 9
+8 0 9 0 9
+4 0 9
+3 0 9 0 9 1 0 0 1
+4 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+7 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x3877c78b20 0 
* 0 
-30 0 562 0 562
+4 0 562
+3 0 562 0 562
+4 0 562
+4 0 562 0 562
+4 0 562 0 562
+4 0 562
+7 0 562 0 0 0 0 0 0 0 0 562
jcnd=562/562 0x3877c78b20 0 
* 0 
-7 0 231
+7 0 231 0 0 0 0 0 0 0 0 231
jcnd=231/231 0x3877c78b20 0 
* 0 
0x3877c78a40 0 802 0 0 1 0 0 1
+5 0 802 802
+4 0 802 802
+7 0 802 0 0 0 0 0 0 0 0 802
jcnd=802/802 +16 0 
* 0 
+16 0 802 0 802
+5 0 802 0 0 0 0 0 0 0 0 802
+6 0 802
+3 0 802
jump=802 0x3877c7878f 0 
* 0 
+10 0 44 0 44
+6 0 44 0 0 1 0 0 1
jump=44 0x3877c78885 0 
* 0 
0x3877c78b20 0 802 802 0 1 0 0 1
+4 0 802
+2 0 802 0 0 0 0 0 0 0 0 802
+6 0 802 802
+7 0 802 0 0 0 0 0 0 0 0 802
jcnd=802/802 +15 0 
* 0 
+15 0 802 0 802 1 0 0 1
+4 0 802 0 0 0 0 0 0 0 0 802
+6 0 802
+4 0 802 802
+1 0 802 802
+1 0 802 802
+2 0 802 802
+2 0 802 802
+2 0 802 802
+2 0 802 802
0x3877c78bf0 0 231 0 0 1 0 0 1
+3 0 231 0 231
+4 0 231
+3 0 231
+4 0 231 0 231 1 0 0 1
+4 0 231
jump=231 0x3877c788cf 0 
* 0 
0x3877c78f12 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 802 802 0 1 1 0 1 1
+4 0 802 0 0 1 0 0 1
+7 0 802
+4 0 802
+3 0 802
+3 0 802 0 0 0 0 0 0 0 0 802
jcnd=802/802 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 916 0 0 1 0 0 1
+7 0 916
+3 0 916
+3 0 916 916 0 0 1 0 0 1
+4 0 916
+4 0 916 0 0 0 0 0 0 0 0 0 0 916 112
jump=112 0x3877c89be8 0 
* 0 
jump=120 0x3877c89bd0 0 
* 0 
jump=112 0x3877c89bb8 0 
* 0 
jump=112 +11 0 
* 0 
jump=112 0x3877c89c48 0 
* 0 
jump=114 0x3877c89c30 0 
* 0 
jump=112 0x3877c89c18 0 
* 0 
jump=122 0x3877c89c00 0 
* 0 
+11 0 112 112
+3 0 112
+4 0 112
+4 0 112 112
+4 0 112
+4 0 112 0 112
+4 0 112
+9 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-40 0 6414 6414
+4 0 6414 0 6414 0 0 6 0 0 6
+4 0 6414 6414
+4 0 6414 0 6414
+4 0 6414 6414
+4 0 6414 0 6414 0 0 1 0 0 1
+4 0 6414 6414
+4 0 6414 0 6414 0 0 3 0 0 3
+4 0 6414
+4 0 6414
+4 0 6414 0 0 0 0 0 0 0 0 6414 440
jcnd=880/6414 0x3877c89c60 0 
* 0 
-32 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
jcnd=10/114 0x3877c89c60 0 
* 0 
-24 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-16 0 122 122 0 1 0 0 1
+4 0 122 0 122
+4 0 122 0 0 1 0 0 1
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122 4
jcnd=10/122 0x3877c89c60 0 
* 0 
+6 0 5958
+4 0 5958 5958
+3 0 5958 0 5958 0 0 1 0 0 1
+3 0 5958 5958
+4 0 5958 0 5958 0 0 3 0 0 3
+4 0 5958 5958
+4 0 5958 0 5958 0 0 4 0 0 4
+4 0 5958 5958
+4 0 5958 0 5958
+4 0 5958
jump=5958 -80 0 
* 0 
-30 0 112 112
+3 0 112 0 112
+3 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112 0 0 1 0 0 1
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-16 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
+8 0 112 112
+3 0 112
+4 0 112 0 0 1 0 0 1
+4 0 112
+4 0 112
jump=112 -39 0 
* 0 
+9 0 120
+3 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+3 0 120
+4 0 120
jump=120 -72 0 
* 0 
+8 0 112
+4 0 112 112
+3 0 112 0 0 0 0 0 0 0 0 112
+2 0 112
+4 0 112
jump=112 -99 0 
* 0 
+11 0 122 122 0 1 0 0 1
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b78 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b70 0 
* 0 
+9 0 114 114
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b68 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b60 0 
* 0 
+9 0 916 0 916 1 0 0 1
+3 0 916 916

fn=(104) alloc_perturb
0x3877c77180 0 800 800 0 1 0 0 1
+6 0 800
+2 0 800 0 0 0 0 0 0 0 0 800 1
+2 0 800 800

fn=(38) _int_malloc
0x3877c79a00 0 926 0 926 1 0 0 1
+2 0 926
+3 0 926 0 926
+2 0 926 0 926
+2 0 926 0 926 0 0 1 0 0 1
+2 0 926
+3 0 926 0 926
+1 0 926 0 926
+1 0 926
+4 0 926
+4 0 926 0 0 0 0 0 0 0 0 926
+6 0 926
+4 0 926
+6 0 926
+3 0 926
+4 0 926
+4 0 926
+4 0 926
+3 0 926 0 0 0 0 0 0 0 0 926
+6 0 926 926 0 1 1 0 1 1
+7 0 926 0 0 0 0 0 0 0 0 926 5
jcnd=804/926 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 800
+4 0 800 800
+1 0 800 800
+1 0 800 800
+2 0 800 800
+2 0 800 800
+2 0 800 800
+2 0 800 800
+7 0 821
+7 0 821 0 0 1 0 0 1 0 0 821 3
jcnd=2/821 0x3877c79b70 0 
* 0 
+2 0 819
+3 0 819
+5 0 819
+3 0 819
+4 0 819 0 819
+4 0 819
+2 0 819
+5 0 819 819 0 0 10 0 0 10
+4 0 819
+3 0 819 0 0 0 0 0 0 0 0 819
jcnd=819/819 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 909 246 192 8 1 0 8 1 0 189 34
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 820 0 0 1 0 0 1
+3 0 820
+3 0 820
+3 0 820
+4 0 820
+3 0 820
+4 0 820 0 820
+5 0 820
+3 0 820 0 820
+4 0 820 0 820
+4 0 820 0 820
+5 0 820
+3 0 820
+3 0 820
+3 0 820
+3 0 820
+4 0 820
+4 0 820 0 0 1 0 0 1
+4 0 820 0 820
+4 0 820
+4 0 820 0 820
+5 0 820 0 820
+5 0 820
+3 0 820
+3 0 820 0 820
+5 0 820
+5 0 820
+3 0 820 0 820
+4 0 820 0 820
+4 0 820
+6 0 820 0 820
+4 0 820 0 820
+5 0 820 0 0 1 0 0 1
+3 0 820
+3 0 820
+3 0 820
jump=820 +87 0 
* 0 
+8 0 904
+3 0 904
+4 0 904
+2 0 904
+2 0 904
+3 0 904
+3 0 904
+3 0 904
+2 0 904
+2 0 904
+5 0 904
+2 0 904 904
+4 0 904
+3 0 904
+4 0 904 0 904
+4 0 904 0 904
+8 0 904
+7 0 904 0 904
+4 0 904 0 904
+4 0 904 0 904
+4 0 904 0 0 0 0 0 0 0 0 904
-38 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8 0 8 0 0 1 0 0 1
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 1733 1733 0 1 0 0 1
+4 0 1733
+3 0 1733 0 0 0 0 0 0 0 0 1733 40
jcnd=781/1733 0x3877c79ef0 0 
* 0 
+6 0 952 952 0 0 1 0 0 1
+4 0 952 952
+4 0 952
+4 0 952 0 0 0 0 0 0 0 0 952
+6 0 952 952 0 1 1 0 1 1
+7 0 952 0 0 0 0 0 0 0 0 952
+6 0 952
+4 0 952
+7 0 952 0 0 0 0 0 0 0 0 952 3
jcnd=7/952 +11 0 
* 0 
+2 0 945
+3 0 945 0 0 0 0 0 0 0 0 945 135
jcnd=782/945 0x3877c79e28 0 
* 0 
+6 0 933
+3 0 933 0 933
+4 0 933 0 933
+5 0 933 0 0 0 0 0 0 0 0 933 16
jcnd=21/933 0x3877c7a090 0 
* 0 
+6 0 912
+7 0 912 0 0 0 0 0 0 0 0 912 9
jcnd=904/912 0x3877c79c50 0 
* 0 
+6 0 8 0 0 1 0 0 1
+3 0 8
+4 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+3 0 8
+4 0 8
+2 0 8
+2 0 8
+3 0 8
+3 0 8
+8 0 8
+3 0 8
+2 0 8
+2 0 8
+4 0 8 8 0 0 1 0 0 1
+4 0 8
+3 0 8 0 0 1 0 0 1 0 0 8 3
jcnd=7/8 0x3877c79e15 0 
* 0 
+6 0 1 1
+4 0 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
jump=1 0x3877c79c73 0 
* 0 
0x3877c79e15 0 7 0 7
+4 0 7 0 7
+4 0 7
+3 0 7
jump=7 0x3877c79c73 0 
* 0 
+8 0 782 782 0 1 0 0 1
+4 0 782
+3 0 782 0 0 0 0 0 0 0 0 782 236
jcnd=401/782 0x3877c79ce1 0 
* 0 
+6 0 381 381
+5 0 381 0 0 0 0 0 0 0 0 381 6
jcnd=362/381 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 15 0 0 15
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 781 0 0 1 0 0 1
+7 0 781
+3 0 781 0 0 0 0 0 0 0 0 781 2
jcnd=2/781 0x3877c7a0b0 0 
* 0 
+6 0 780 780 0 1 0 0 1
+4 0 780
+3 0 780
+3 0 780
+2 0 780
+4 0 780
+3 0 780
+3 0 780
+2 0 780
+2 0 780
+2 0 780
+2 0 780 780 0 0 1 0 0 1
+8 0 780
+5 0 780
+5 0 780
+2 0 780 0 0 0 0 0 0 0 0 780
-2 0 390
+2 0 390 0 0 0 0 0 0 0 0 390
+2 0 1170
+2 0 1170 0 0 0 0 0 0 0 0 1170 27
jcnd=764/1170 +64 0 
* 0 
+2 0 406
+8 0 406
+3 0 406
+3 0 406 0 0 0 0 0 0 0 0 406 1
jcnd=1/406 0x3877c79fc0 0 
* 0 
-6 0 465
+3 0 465
+3 0 465 0 0 0 0 0 0 0 0 465 3
jcnd=230/465 0x3877c79fc0 0 
* 0 
+2 0 640
+2 0 640 640
+8 0 640
+2 0 640 0 0 0 0 0 0 0 0 640 11
jcnd=465/640 -20 0 
* 0 
+2 0 175
+2 0 175
+5 0 175
+3 0 175
+3 0 175
+2 0 175
+2 0 175
+5 0 175 0 0 0 0 0 0 0 0 175 3
jcnd=3/175 +14 0 
* 0 
+2 0 172
+2 0 172
+4 0 172
+2 0 172
+2 0 172 0 0 0 0 0 0 0 0 172
jcnd=172/172 -8 0 
* 0 
-8 0 9195
+4 0 9195
+2 0 9195
+2 0 9195 0 0 0 0 0 0 0 0 9195 594
jcnd=8300/9195 -8 0 
* 0 
-2 0 764 0 0 1 0 0 1
+2 0 764 0 0 0 0 0 0 0 0 764 23
jcnd=723/764 -8 0 
* 0 
+2 0 939 939 0 0 9 0 0 9
+4 0 939 0 0 1 0 0 1
+3 0 939 0 0 0 0 0 0 0 0 939 556
jcnd=549/939 0x3877c7a1cf 0 
* 0 
+6 0 390
+2 0 390
+4 0 390
+2 0 390
+2 0 390
+2 0 390 0 390
+8 0 390
jump=390 0x3877c79f30 0 
* 0 
+37 0 231 231 0 1 0 0 1
+5 0 231 231
+4 0 231
+4 0 231 231
+5 0 231 0 0 0 0 0 0 0 0 231
jcnd=231/231 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 0 0 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 0x3877c79f00 0 
* 0 
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+3 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 -18 0 
* 0 
-18 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 1 0 1 0 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1
+3 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1 0 1 0 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c7a659 0 
* 0 
+6 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+4 0 1
+7 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c7a285 0 
* 0 
+31 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 549 549 0 1 2 0 1 2
+4 0 549 549
+4 0 549
+3 0 549 549
+4 0 549
+4 0 549
+3 0 549
+3 0 549 549
+4 0 549 0 0 0 0 0 0 0 0 549
+6 0 549 549 0 0 1 0 0 1
+4 0 549 0 0 0 0 0 0 0 0 549
+6 0 549 549 0 1 0 0 1
+8 0 549 0 549
+4 0 549 0 549
+4 0 549 0 0 0 0 0 0 0 0 549 6
jcnd=541/549 +38 0 
* 0 
+2 0 8 8 0 0 2 0 0 2
+4 0 8
+3 0 8 0 0 0 0 0 0 0 0 8
+2 0 8 8
+5 0 8 0 0 0 0 0 0 0 0 8
+6 0 8 8
+4 0 8 0 8
+4 0 8 8
+4 0 8 0 8
+4 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
-4 0 541
+4 0 541 0 0 0 0 0 0 0 0 541 12
jcnd=20/541 0x3877c7a2e3 0 
* 0 
+6 0 529 529
+4 0 529 529 0 1 0 0 1
+4 0 529 0 0 0 0 0 0 0 0 529
+6 0 529
+4 0 529
+7 0 529 0 529 0 0 10 0 0 10
+4 0 529 0 529
+4 0 529 0 529
+4 0 529 0 529
+4 0 529 0 0 0 0 0 0 0 0 529 1
jcnd=1/529 +7 0 
* 0 
+2 0 528 0 528
+5 0 528
+7 0 528 0 0 0 0 0 0 0 0 528 1
jcnd=522/528 +18 0 
* 0 
-7 0 1
+7 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 +18 0 
* 0 
+2 0 6 0 6
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 524 0 0 1 0 0 1
+7 0 524 0 524 0 0 1 0 0 1
+4 0 524
+3 0 524
+3 0 524
+4 0 524
+3 0 524
+4 0 524
+3 0 524
+3 0 524
+4 0 524 0 524
+4 0 524 0 524 0 0 1 0 0 1
+4 0 524
jump=524 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 20
+7 0 20 0 20
+6 0 20
+3 0 20 0 0 0 0 0 0 0 0 20
jcnd=20/20 +7 0 
* 0 
+7 0 550
+4 0 550 0 0 1 0 0 1
+3 0 550
+3 0 550 0 550
cfn=(104)
calls=550 0x3877c77180 0 
* 0 2200 1100 0 1 0 0 1 0 0 550
+5 0 550
+3 0 550
jump=550 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 231 0 0 1 0 0 1
+7 0 231
+2 0 231
+4 0 231
+3 0 231
+3 0 231 0 231
+5 0 231
+3 0 231
+4 0 231
+3 0 231 0 0 1 0 0 1
+4 0 231
+4 0 231
+3 0 231
+4 0 231 0 231
+4 0 231 0 231 0 0 3 0 0 3
+4 0 231
+3 0 231
+3 0 231 0 231
cfn=(104)
calls=231 0x3877c77180 0 
* 0 924 462 0 0 0 0 0 0 0 231 1
+5 0 231
+3 0 231
jump=231 0x3877c79ae3 0 
* 0 
0x3877c7a659 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 926 0 926 1 0 0 1
+5 0 926 0 926
+5 0 926
+3 0 926 0 926
+5 0 926
+4 0 926 926 0 0 1 0 0 1
+7 0 926 926 0 0 1 0 0 1
+3 0 926
+3 0 926 0 0 0 0 0 0 0 0 926
+6 0 926 926 0 0 1 0 0 1
+7 0 926 926 0 1 1 0 1 1
+4 0 926
+3 0 926 0 0 0 0 0 0 0 0 926
+2 0 926 926 0 0 1 0 0 1
+3 0 926
+3 0 926 0 0 0 0 0 0 0 0 926
jcnd=926/926 +97 0 
* 0 
+18 0 926
+3 0 926
+3 0 926 0 926
cfn=(38)
calls=926 0x3877c79a00 0 
* 0 220008 25545 30433 45 34 38 45 34 38 35427 1764
+5 0 926
+3 0 926
+3 0 926 0 0 0 0 0 0 0 0 926
+2 0 926
+3 0 926 0 0 0 0 0 0 0 0 926
+2 0 926
+3 0 926 0 0 0 0 0 0 0 0 926 2
+2 0 926 926
+7 0 926 0 0 0 0 0 0 0 0 926
jcnd=926/926 +13 0 
* 0 
+13 0 926 0 926
+2 0 926 0 0 0 0 0 0 0 0 926 8
+6 0 926
+3 0 926 926
+4 0 926 926
+5 0 926 926
+5 0 926
+4 0 926 926
+1 0 926 0 0 1 0 0 1
+5 0 926 926 0 0 1 0 0 1
+7 0 926 0 0 0 0 0 0 0 0 926
jcnd=926/926 +14 0 
* 0 
+14 0 926 0 926 1 0 0 1
+3 0 926 0 0 0 0 0 0 0 0 926
+6 0 926
jump=926 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 926 0 926 1 0 0 1
+2 0 926
+3 0 926
+3 0 926 0 926
+2 0 926
+3 0 926 0 926
+1 0 926
+3 0 926 0 926
+1 0 926
+3 0 926
+4 0 926
+3 0 926 0 0 0 0 0 0 0 0 926
+6 0 926
+4 0 926
+3 0 926 0 0 0 0 0 0 0 0 926 4
jcnd=10/926 0x3877c838d1 0 
* 0 
+2 0 916
+3 0 916
+3 0 916
+3 0 916
+3 0 916
+3 0 916 0 0 0 0 0 0 0 0 916
jcnd=916/916 +41 0 
* 0 
+41 0 916 0 0 1 0 0 1
+3 0 916 0 0 0 0 0 0 0 0 916
jcnd=916/916 0x3877c839c0 0 
* 0 
+24 0 916
+3 0 916
+4 0 916
+3 0 916
+3 0 916
+3 0 916
+3 0 916
+3 0 916 0 0 0 0 0 0 0 0 916 453
jcnd=464/916 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 462
+10 0 462 462 0 0 1 0 0 1
+3 0 462
+4 0 462 0 462
+3 0 462
+4 0 462
+4 0 462 0 0 0 0 0 0 0 0 462
jcnd=462/462 -18 0 
* 0 
-18 0 1442 1442
+3 0 1442
+4 0 1442 0 1442
+3 0 1442
+4 0 1442
+4 0 1442 0 0 0 0 0 0 0 0 1442 8
jcnd=980/1442 -18 0 
* 0 
+2 0 926
+4 0 926
+3 0 926 926
+1 0 926 926
+1 0 926 926
+2 0 926 926 0 1 0 0 1
+2 0 926 926
0x3877c839c0 0 916 0 0 1 0 0 1
+3 0 916
+3 0 916
+3 0 916
+4 0 916 0 916 0 0 1 0 0 1
cfn=(284)
calls=916 0x3877c89b20 0 
* 0 148326 54516 52684 6 1 19 6 1 19 7106 444 916 112
+5 0 916
jump=916 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 926 926 0 1 1 0 1 1
+7 0 926 926 0 0 1 0 0 1
+3 0 926
+3 0 926 0 0 1 0 0 1 0 0 926
+6 0 926
+3 0 926 0 0 0 0 0 0 0 0 926
+6 0 926 926
+4 0 926
+4 0 926
+2 0 926 0 0 0 0 0 0 0 0 926
+2 0 926
+2 0 926
+7 0 926 0 0 0 0 0 0 0 0 926
jcnd=926/926 +14 0 
* 0 
+14 0 926
+2 0 926
cfn=(170)
calls=926 0x3877c78650 0 
* 0 90016 24006 13470 20 2 0 20 2 0 21767 506

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 2
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 7 7
+5 0 7
+3 0 7 7
+5 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+9 0 7 0 7
+4 0 7 0 7
+4 0 7 0 0 0 0 0 0 0 0 7 3
jcnd=7/7 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 10
jcnd=7/20 0x3877c75e68 0 
* 0 
+6 0 13 0 13
+6 0 13
jump=13 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 5285650 2117298 1247096 242 85 80 242 85 80 170702 3893 5546 112
