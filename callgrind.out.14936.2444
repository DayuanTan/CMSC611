version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2444


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2812886406 - 2814504737
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1608 0 0 1 0 0 1
+3 0 1608 0 0 0 0 0 0 0 0 1608
+2 0 1608
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1608 0x3877c7b8b0 0 
* 0 192497 50295 27355 23 4 0 23 4 0 47381 835
* 0 1608 1608 0 1 1 0 1 1 0 0 0 1608

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1608 0 1608 1 0 0 1
+1 0 1608
+5 0 1608
+3 0 1608 0 1608
+1 0 1608
+4 0 1608 0 0 1 0 0 1
+3 0 1608
+4 0 1608
+3 0 1608 0 1608 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1608 0x3877c7aa50 0 
* 0 473956 68283 71029 51 40 55 51 40 55 80287 2995
* 0 1608 1608 0 1 1 0 1 1 0 0 0 1608
+5 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608
jcnd=1608/1608 +96 0 
* 0 
+96 0 1608 0 0 1 0 0 1
+4 0 1608 1608
+1 0 1608 1608
+1 0 1608 1608

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 398 0 398 1 0 0 1
+1 * 398
+3 * 398
+4 * 398 0 398
+4 * 398 0 398
+4 +1 398 398
+4 * 398
+3 * 398 0 398
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=398 0x402d74 645 
* * 5174 2388 796
+5 * 398
+3 * 398 0 398
+3 +1 398 398
+6 * 398 0 398
+3 * 398 398
+6 * 398 0 398
+3 +1 398 398
+6 * 398 0 398 1 0 0 1
+3 * 398 398
+6 * 398 0 398
+3 +2 398 0 398
+7 * 398
jump=398 +86 * 
* * 
+2 +1 79799 79799
+3 * 79799
+3 * 79799 79799
+4 * 79799
+3 * 79799
+3 * 79799 0 79799
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=79799 0x402d9a 770 
* * 877789 398995 239397
+5 * 79799 79799
+4 * 79799 79799
+5 * 79799
+4 * 79799 0 79799
+5 +1 79799 79799
+3 * 79799
+3 * 79799 79799
+4 * 79799
+3 * 79799
+3 * 79799 0 79799
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=79799 0x402dba 770 
* * 877789 398995 239397 1 0 0 1
+5 * 79799 79799
+2 * 79799
+4 * 79799 79799
+5 * 79799
+4 * 79799 0 79799
+5 -2 79799 0 79799
+4 * 79799 79799
+3 * 79799
+3 * 79799 79799
+3 * 79799 0 0 0 0 0 0 0 0 79799 399
jcnd=79401/79799 -93 +1 
* * 
-9 * 398 398 0 1 0 0 1
+3 * 398
+3 * 398 398
+3 * 398 0 0 0 0 0 0 0 0 398
jcnd=398/398 -93 +1 
* * 
+2 +4 398 398
+3 * 398
+3 * 398
+4 * 398 398 0 1 0 0 1
+5 * 398
+4 * 398
+3 * 398 0 398
+5 +1 398 398
+3 * 398
+3 * 398
+4 * 398 398
+5 * 398
+4 * 398
+3 * 398 0 398
+5 +1 398 0 398
+7 * 398
jump=398 0x4016ee * 
* * 
+2 +1 79799 79799
+3 * 79799
+3 * 79799 79799
+4 * 79799
+3 * 79799 0 0 1 0 0 1
+3 * 79799 0 79799
cfi=(2)
cfn=(146)
calls=79799 0x402dba 770 
* * 877789 398995 239397
+5 * 79799 79799
+2 * 79799
+4 * 79799 79799
+5 * 79799 0 79799
+5 +1 79799 79799
+3 * 79799
+3 * 79799 79799
+4 * 79799
+3 * 79799
+3 * 79799 0 79799
cfi=(2)
cfn=(144)
calls=79799 0x402d9a 770 
* * 877789 398995 239397
+5 * 79799 79799
+4 * 79799 79799
+5 * 79799 0 79799
+5 +1 79799 79799
+5 * 79799 79799
+5 * 79799 79799
+5 * 79799
+4 * 79799 0 79799
+5 +1 79799 79799
+5 * 79799 79799
+5 * 79799 79799
+5 * 79799
+4 * 79799 0 79799
+5 -4 79799 0 79799
+4 * 79799 79799
+3 * 79799
+3 * 79799 79799
+3 * 79799 0 0 0 0 0 0 0 0 79799 399
jcnd=79401/79799 0x401672 +1 
* * 
-9 * 398 398 0 1 0 0 1
+3 * 398
+3 * 398 398
+3 * 398 0 0 0 0 0 0 0 0 398
jcnd=398/398 0x401672 +1 
* * 
+6 +6 398 398 0 1 0 0 1
+5 * 398 398
+5 * 398 0 398
+5 +2 398 398
+3 +1 398 0 398
+3 * 398 398
+5 * 398 398
+1 * 398 398

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 398
+7 * 398
+7 * 398
+3 * 398
+3 * 398 0 398
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=398 0x4030b2 310 
* * 452697 131963 124904 66 20 21 66 20 21 30061 1249 1590 198
+5 * 398
+7 * 398
+7 * 398
+3 * 398
+3 * 398 0 398
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=398 0x402ff4 310 
* * 445930 130276 122099 46 21 62 46 21 62 29008 1588 1590
+5 * 398 0 0 1 0 0 1
+7 * 398
+7 * 398
+3 * 398
+3 * 398 0 398
cfn=(142)
calls=398 0x401585 -52 
* * 8324966 3680704 1921942 8 0 0 8 0 0 160394 798
+5 * 398 0 398
+8 * 398 398
+6 * 398 0 398
+6 * 398
+7 * 398
+3 * 398 0 398
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=398 0x402df4 414 
* * 104018 32812 23489 33 5 0 33 5 0 12322 294 796
+5 * 398
+7 * 398
+3 * 398 0 398 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=398 0x402e74 414 
* * 106009 33516 24301 7 1 0 7 1 0 12768 124 796
+5 +2 398
+7 * 398
+7 * 398
+3 * 398
+3 * 398 0 398
cfi=(2)
cfn=(4)
calls=398 0x4030b2 310 
* * 452210 131929 124775 4 1 1 4 1 1 30012 830 1590
+5 * 398
+7 * 398
+7 * 398
+3 * 398
+3 * 398 0 398
cfi=(2)
cfn=(80)
calls=398 0x402ff4 310 
* * 444224 130179 121892 0 0 0 0 0 0 28679 1213 1590
+5 * 398 398
+6 * 398 0 0 1 0 0 1
+7 * 398
+7 * 398 0 398
+6 * 398 398
+8 * 398
+3 * 398
+3 * 398 0 398
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=398 0x401719 -33 
* * 3853834 1604736 883759 4 0 0 4 0 0 80197 399
+5 * 398 0 398
+8 * 398 398
+6 * 398 0 398
+6 * 398
+7 * 398 0 0 1 0 0 1
+3 * 398 0 398
cfi=(2)
cfn=(148)
calls=398 0x402df4 414 
* * 104018 32812 23489 0 0 0 0 0 0 12322 285 796
+5 * 398
+7 * 398
+3 * 398 0 398
cfi=(2)
cfn=(178)
calls=398 0x402e74 414 
* * 106009 33516 24301 0 0 0 0 0 0 12768 118 796
+5 +2 398 398
+7 * 398
+3 * 398 0 398
cfi=(2)
cfn=(2)
calls=398 0x402d74 645 
* * 5174 2388 796
+5 * 398 398
+6 * 398
+3 * 398
+3 * 398
+3 * 398 398
+7 * 398
+3 * 398 0 0 1 0 0 1
+3 * 398 0 398
cfi=(2)
cfn=(144)
calls=398 0x402d9a 770 
* * 4378 1990 1194
+5 * 398
+3 * 398
+7 * 398
+3 * 398
+3 * 398 0 398
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=398 0x402eda 901 
* * 38238 14232 10947 43 27 20 43 27 20 1695 75 47
+5 +1 398 398
+7 * 398
+3 * 398 0 398
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=398 0x402f54 645 
* * 5174 2388 796 0 1 0 0 1
+5 * 398 398
+6 * 398
+3 * 398
+3 * 398
+3 * 398 398
+7 * 398 0 0 1 0 0 1
+3 * 398
+3 * 398 0 398
cfi=(2)
cfn=(146)
calls=398 0x402dba 770 
* * 4378 1990 1194
+5 * 398
+3 * 398
+7 * 398
+3 * 398
+3 * 398 0 398
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=398 0x402f7a 901 
* * 37312 13983 10737 20 28 43 20 28 43 1513 62 47
+5 +1 398 398
+7 * 398
+3 * 398 0 398
cfi=(2)
cfn=(10)
calls=398 0x402f54 645 
* * 5174 2388 796
+5 * 398 398
+6 * 398
+3 * 398
+3 * 398
+3 * 398 398 0 1 0 0 1
+7 * 398
+3 * 398
+3 * 398 0 398
cfi=(2)
cfn=(146)
calls=398 0x402dba 770 
* * 4378 1990 1194
+5 * 398 398
+2 * 398
+4 * 398 398
+8 * 398 398
+8 * 398 0 398
+8 +1 398 398
+7 * 398
+3 * 398 0 398
cfi=(2)
cfn=(2)
calls=398 0x402d74 645 
* * 5174 2388 796
+5 * 398 398 0 1 0 0 1
+6 * 398
+3 * 398
+3 * 398
+3 * 398 398
+7 * 398
+3 * 398
+3 * 398 0 398
cfi=(2)
cfn=(144)
calls=398 0x402d9a 770 
* * 4378 1990 1194
+5 * 398 398
+4 * 398 398
+8 * 398
+4 * 398 398
+8 * 398
+3 * 398 0 398
+8 +2 398 0 398
+7 -12 398 398
+8 * 398 398
+7 * 398 0 0 0 0 0 0 0 0 398 1
jcnd=1/398 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 398
+7 * 398
+3 * 398 0 398
cfi=(2)
cfn=(2)
calls=398 0x402d74 645 
* * 5174 2388 796 2 0 1 2 0 1
+5 * 398
+3 * 398 398
+7 * 398
+3 * 398 0 398
cfi=(2)
cfn=(2)
calls=398 0x402d74 645 
* * 5174 2388 796 0 1 0 0 1
+5 * 398
+3 * 398 0 0 0 0 0 0 0 0 398 1
+2 * 398 0 0 1 0 0 1
+5 * 398
jump=398 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 398
+2 * 398 0 0 0 0 0 0 0 0 398
jcnd=398/398 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 398 0 398
+1 * 398
+3 * 398
+4 * 398 0 398
+4 * 398 0 398
+4 * 398 0 398
+5 +1 398 398
+4 * 398
+3 * 398 0 398
cfi=(2)
cfn=(2)
calls=398 0x402d74 645 
* * 5174 2388 796
+5 * 398
+3 * 398 0 398
+3 +1 398 398 0 1 0 0 1
+6 * 398 0 398
+3 * 398 398
+6 * 398 0 398
+3 +2 398 0 398
+7 * 398
jump=398 +86 * 
* * 
+2 +1 79799 79799
+3 * 79799
+3 * 79799 79799
+4 * 79799
+3 * 79799
+3 * 79799 0 79799
cfi=(2)
cfn=(144)
calls=79799 0x402d9a 770 
* * 877789 398995 239397
+5 * 79799 79799
+4 * 79799 79799
+5 * 79799
+4 * 79799 0 79799
+5 +1 79799 79799
+3 * 79799
+3 * 79799 79799
+4 * 79799
+3 * 79799
+3 * 79799 0 79799
cfi=(2)
cfn=(146)
calls=79799 0x402dba 770 
* * 877789 398995 239397
+5 * 79799 79799
+2 * 79799
+4 * 79799 79799
+5 * 79799
+4 * 79799 0 79799
+5 -2 79799 0 79799
+4 * 79799 79799
+3 * 79799
+3 * 79799 79799
+3 * 79799 0 0 0 0 0 0 0 0 79799 399
jcnd=79401/79799 -93 +1 
* * 
-9 * 398 398 0 1 0 0 1
+3 * 398
+3 * 398 398
+3 * 398 0 0 0 0 0 0 0 0 398
jcnd=398/398 -93 +1 
* * 
+2 +4 398 398
+3 * 398
+3 * 398 0 0 1 0 0 1
+4 * 398 398
+5 * 398
+4 * 398
+3 * 398 0 398
+5 +1 398 398
+3 * 398
+3 * 398
+4 * 398 398
+5 * 398
+4 * 398
+3 * 398 0 398
+5 +1 398 398
+5 * 398 398
+5 * 398 398
+5 * 398 0 0 1 0 0 1
+4 * 398
+3 * 398 0 398
+5 +2 398 398
+3 +1 398 0 398
+3 * 398 398
+5 * 398 398
+1 * 398 398

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 796 0 796 1 0 0 1
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796 1 0 0 1
+4 +1 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=796 0x4049d4 -35 
* * 4776 1592 2388 1 0 0 1
+5 * 796 796
+1 * 796 796

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 796 0 796 1 0 0 1
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 796
+4 * 796
+3 * 796 0 796
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=796 0x404520 -35 
* * 3980 1592 1592
+5 * 796 796
+1 * 796 796

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 796 0 796 1 0 0 1
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=796 0x404a28 -35 
* * 4776 1592 2388 1 0 1 1 0 1
+5 * 796 796
+1 * 796 796

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 796
+4 * 796
+3 * 796 0 796
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=796 0x4044cc -35 
* * 3980 1592 1592
+5 * 796 796
+1 * 796 796

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 796 0 796
+1 * 796
+3 * 796 0 796
+4 * 796 796
+4 * 796 796
+1 * 796 796

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 398 0 398
+1 * 398
+3 * 398
+4 * 398 0 398
+4 * 398 0 398
+4 * 398 0 398
+4 +1 398 398
+4 * 398 398
+4 * 398 398
+4 * 398
+3 * 398
+3 * 398 0 398
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=398 0x403df2 -87 
* * 9552 3184 3582 0 25 12 0 25 12 398 2
+5 * 398 398
+1 * 398 398

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 796 0 796 1 0 0 1
+1 * 796
+3 * 796 0 796
+4 * 796 796
+4 * 796 796
+1 * 796 796

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 398 0 398
+1 * 398
+3 * 398
+4 * 398 0 398
+4 * 398 0 398
+4 * 398 0 398
+4 +1 398 398
+4 * 398 398
+4 * 398 398
+4 * 398
+3 * 398
+3 * 398 0 398
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=398 0x40406a -87 
* * 9552 3184 3582 0 26 17 0 26 17 398
+5 * 398 398
+1 * 398 398

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 876 0 876
+1 * 876
+3 * 876 0 876
+4 +1 876 876
+4 * 876 876
+1 * 876 876

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1592 0 1592 1 0 0 1
+1 * 1592
+3 * 1592 0 1592
+4 +1 1592 1592 0 1 0 0 1
+4 * 1592 1592
+1 * 1592 1592

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 876 0 876
+1 * 876
+3 * 876 0 876 0 0 1 0 0 1
+4 +1 876 876
+4 * 876 876
+1 * 876 876

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1592 0 1592 1 0 0 1
+1 * 1592
+3 * 1592
+4 * 1592 0 1592
+4 +1 1592
+4 * 1592
+3 * 1592 0 1592
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1592 0x404ffe 790 
* * 9552 4776 3184 1 0 0 1
+5 * 1592 1592
+3 * 1592 1592
+1 * 1592 1592

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1592 0 1592 1 0 0 1
+1 * 1592
+3 * 1592 0 1592
+4 +1 1592 1592
+4 * 1592 1592
+1 * 1592 1592

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1592 0 1592 1 0 0 1
+1 * 1592
+3 * 1592
+4 * 1592 0 1592
+4 +1 1592
+4 * 1592
+3 * 1592 0 1592 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1592 0x40500c 790 
* * 9552 4776 3184 1 0 0 1
+5 * 1592 1592
+3 * 1592 1592
+1 * 1592 1592

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 796 0 796
+1 * 796
+3 * 796 0 796
+4 * 796 0 796
+4 * 796 796
+4 * 796 796
+1 * 796 796

fl=(5)
fn=(28)
0x404992 113 820 0 820 1 0 0 1
+1 * 820
+3 * 820 0 820
+4 +1 820
+10 * 820 820
+1 * 820 820

fn=(176)
0x4044cc 86 796 0 796
+1 * 796
+3 * 796 0 796
+4 * 796 796
+1 * 796 796

fn=(224)
0x403df2 129 398 0 398
+1 * 398
+3 * 398
+4 * 398 0 398
+4 * 398 0 398
+4 * 398 0 398
+4 +1 398 398
+4 * 398
+3 * 398
+5 * 398 0 398
cfi=(16)
cfn=(226)
calls=398 0x402d61 -20 
* * 2786 1194 1194
+5 * 398
+3 * 398 0 0 0 0 0 0 0 0 398 2
+2 * 398 398
+4 * 398 398 0 0 25 0 0 25
+2 * 398 0 398 0 0 12 0 0 12
+2 * 398 398
+1 * 398 398

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804
+3 * 804 0 804
cob=(5)
cfi=(8)
cfn=(164)
calls=804 0x387e4bb2f0 0 
* * 97456 25239 12863 24 4 0 24 4 0 24044 583 804
* * 804 804 0 1 1 0 1 1 0 0 0 804
+5 * 804 804
+1 * 804 804

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804
+3 * 804 0 804
cob=(5)
cfi=(8)
cfn=(164)
calls=804 0x387e4bb2f0 0 
* * 101473 26664 14492 1 1 0 1 1 0 24945 252 804
* * 804 804 0 0 0 0 0 0 0 0 0 804
+5 * 804 804
+1 * 804 804

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804
+4 * 804
+3 * 804 0 804
cfn=(102)
calls=804 0x4048de +12 
* * 4824 1608 1608 1 0 0 1
+5 * 804 804
+4 * 804 0 0 1 0 0 1
+3 * 804
+2 * 804 0 0 0 0 0 0 0 0 804
jcnd=804/804 +7 +3 
* * 
+7 +3 804 804
+4 * 804
+4 * 804
+3 * 804 0 804
cob=(5)
cfi=(8)
cfn=(32)
calls=804 0x387e4bd0b0 0 
* * 242946 35772 35190 35 23 37 35 23 37 39850 1897 804
* * 804 804 0 0 0 0 0 0 0 0 0 804
+5 +1 804 804
+1 * 804 804

fn=(18)
0x404a28 81 796 0 796 1 0 0 1
+1 * 796
+3 * 796 0 796 0 0 1 0 0 1
+4 * 796 0 796
+4 * 796 796
+1 * 796 796

fn=(92)
0x4049d4 81 796 0 796 1 0 0 1
+1 * 796
+3 * 796 0 796
+4 * 796 0 796
+4 * 796 796
+1 * 796 796

fn=(196)
0x404520 86 796 0 796
+1 * 796
+3 * 796 0 796
+4 * 796 796
+1 * 796 796

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804 1 0 0 1
+4 +2 804 804
+4 * 804
+3 * 804 0 804
cfn=(28)
calls=804 0x404992 +12 
* * 4824 1608 1608 1 0 0 1
+5 * 804 804
+4 * 804
+3 * 804
+2 * 804 0 0 0 0 0 0 0 0 804
jcnd=804/804 +7 +3 
* * 
+7 +3 804 804
+4 * 804
+4 * 804
+3 * 804 0 804
cob=(5)
cfi=(8)
cfn=(32)
calls=804 0x387e4bd0b0 0 
* * 256738 38943 40663 20 18 19 20 18 19 42045 1098 804
* * 804 804 0 1 1 0 1 1 0 0 0 804
+5 +1 804 804
+1 * 804 804

fn=(102)
0x4048de 113 820 0 820 1 0 0 1
+1 * 820
+3 * 820 0 820
+4 +1 820
+10 * 820 820
+1 * 820 820

fn=(266)
0x40406a 129 398 0 398
+1 * 398
+3 * 398
+4 * 398 0 398
+4 * 398 0 398
+4 * 398 0 398
+4 +1 398 398
+4 * 398
+3 * 398
+5 * 398 0 398
cfi=(16)
cfn=(226)
calls=398 0x402d61 -20 
* * 2786 1194 1194
+5 * 398
+3 * 398 0 0 0 0 0 0 0 0 398
+2 * 398 398
+4 * 398 398 0 0 26 0 0 26
+2 * 398 0 398 0 0 17 0 0 17
+2 * 398 398
+1 * 398 398

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 19 1 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +10 796 796
+4 * 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=796 0x404829 -26 
* * 423492 142504 137732 25 3 5 25 3 5 16784 1021 1588 198
+5 +1 796 796
+1 * 796 796

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 19 2 0 19 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +2 796 796
+4 * 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796 1 0 0 1
cfn=(50)
calls=796 0x404484 107 
* * 434636 146484 141712 25 3 5 25 3 5 16784 1021 1588 198
+5 * 796 796
+1 * 796 796

fn=(230)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52)
0x404829 91 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +2 796 796 0 1 0 0 1
+4 * 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=796 0x404a36 450 
* * 412348 138524 133752 24 3 5 24 3 5 16784 1021 1588 198
+5 * 796 796
+1 * 796 796

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +2 796 796
+4 * 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=796 0x40439c 107 
* * 434636 146484 141712 7 0 30 7 0 30 16784 959 1588
+5 * 796 796
+1 * 796 796

fn=(116)
0x40439c 107 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +10 796 796
+4 * 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=796 0x4047d7 -26 
* * 423492 142504 137732 7 0 30 7 0 30 16784 959 1588
+5 +1 796 796
+1 * 796 796

fn=(118)
0x4047d7 91 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +2 796 796
+4 * 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=796 0x4049e2 450 
* * 412348 138524 133752 7 0 30 7 0 30 16784 959 1588
+5 * 796 796
+1 * 796 796

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 19 2 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(2)
fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616 0 1616 1 0 0 1
+4 +1 1616 1616
+4 * 1616 1616
+1 * 1616 1616

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+3 * 796 0 796
+4 * 796
+4 * 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=796 0x404380 726 
* * 7960 3980 3184
+5 * 796 796
+4 * 796 796
+1 * 796 796

fn=(148)
0x402df4 414 796 0 796
+1 * 796
+3 * 796 0 796
+1 * 796
+4 * 796 0 796 1 0 0 1
+4 +2 796 796
+4 * 796
+3 * 796 0 796
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=796 0x40325e 113 
* * 4776 2388 1592
+5 * 796
+3 * 796 796
+4 * 796 796
+4 * 796 796
+4 * 796 796
+3 -1 796
+3 * 796
+3 * 796 0 796
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=796 0x40326c 148 
* * 24676 7960 9552 4 0 0 4
+5 +1 796 796
+4 * 796
+3 * 796 0 796
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=796 0x4031ec 159 
* * 159480 48112 31058 27 5 0 27 5 0 24644 579 1592
+5 * 796
jump=796 +28 * 
* * 
+28 * 796 0 0 1 0 0 1
+4 * 796 796
+1 * 796 796
+1 * 796 796

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804
+5 * 804 0 0 0 0 0 0 0 0 804
+2 +1 804 804
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(5)
cfn=(160)
calls=804 0x4044d6 -65 
* * 107104 28455 16883 25 5 0 25 5 0 24044 583 1608
+5 +1 804 804
+1 * 804 804

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 796 0 796
+1 * 796
+3 * 796 0 796
+1 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=796 0x4043ca -45 
* * 28656 10348 11144 4 0 4 4 0 4
+5 +1 796 796 0 1 0 0 1
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=796 0x404412 +43 
* * 307887 58504 55431 27 17 12 27 17 12 43289 1058 1592
+5 * 796
jump=796 +28 * 
* * 
+28 * 796
+4 * 796 796
+1 * 796 796
+1 * 796 796

fn=(14)
0x4043ca 90 796 0 796 1 0 0 1
+1 * 796
+3 * 796
+4 * 796 0 796 0 0 1 0 0 1
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfi=(4)
cfn=(16)
calls=796 0x404804 +24 
* * 14328 4776 5572 2 0 1 2 0 1
+5 * 796 796
+4 * 796 0 796 0 0 2 0 0 2
+7 * 796 796
+4 * 796 0 796 1 0 0 1
+8 * 796 796
+4 * 796 0 796
+8 +1 796 796
+1 * 796 796

fn=(80)
0x402ff4 310 796 0 796 1 0 0 1
+1 * 796
+3 * 796 0 796
+2 * 796 0 796
+2 * 796 0 796
+1 * 796 0 0 1 0 0 1
+4 * 796 0 796
+4 * 796 0 796
+4 +2 796 796
+4 * 796
+3 * 796 0 796
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=796 0x4039fc 117 
* * 4776 2388 1592 2 0 0 2
+5 * 796
+3 * 796 0 796
cfi=(3)
cfn=(84)
calls=796 0x4039ed -88 
* * 4776 2388 1592
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(2)
calls=796 0x402d74 645 
* * 10348 4776 1592
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796
+3 * 796
+3 * 796 0 796 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=796 0x403a0a 134 
* * 339302 70987 66459 31 21 32 31 21 32 40903 1842 1592
+5 +4 796 796
+4 * 796
+3 * 796 0 796
cfn=(106)
calls=796 0x40325e 113 
* * 4776 2388 1592 1 0 0 1
+5 * 796
+3 * 796 796
+4 * 796 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=796 0x403a98 565 
* * 19900 7960 6368 2 0 0 2
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(112)
calls=796 0x403a68 547 
* * 19900 7960 6368
+5 * 796
+3 * 796
+3 * 796
+3 * 796
+3 * 796 0 796
cfi=(11)
cfn=(114)
calls=796 0x403ac9 -60 
* * 446576 150464 146488 7 0 30 7 0 30 16784 959 1588
+5 -3 796 796
+4 * 796 0 796
+4 * 796
jump=796 +28 +4 
* * 
+28 +4 796
+4 * 796 796
+1 * 796 796
+2 * 796 796
+2 * 796 796
+1 * 796 796

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804
+5 * 804 0 0 0 0 0 0 0 0 804 8
+2 +1 804 804
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(5)
cfn=(190)
calls=804 0x40452a -65 
* * 111121 29880 18512 1 1 0 1 1 0 24945 252 1608
+5 +1 804 804
+1 * 804 804

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804 1 0 0 1
+4 * 804 0 804
+4 0 804 804
+5 0 804 0 0 0 0 0 0 0 0 804
+2 0 804 804
+4 0 804 804
+4 0 804
+5 0 804
+3 0 804
+3 0 804 0 804
fi=(6) ???
cfi=(5)
cfn=(26)
calls=804 0x404730 99 
* 0 277642 45375 47095 24 19 19 24 19 19 42849 1098 1608
+5 0 804
fi=(6)
jump=804 +7 0 
* 0 
+7 0 804 804
+1 0 804 804

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 796 0 796 1 0 0 1
+1 * 796
+3 * 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+4 * 796 0 796
+4 * 796
+4 * 796 0 0 1 0 0 1
+4 * 796
+3 * 796
+3 * 796 0 796
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=796 0x404468 726 
* * 7960 3980 3184 1 0 0 1
+5 * 796 796
+4 * 796 796
+1 * 796 796

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+3 * 796 0 796
+4 * 796
+4 * 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfi=(10)
cfn=(44)
calls=796 0x404468 726 
* * 7960 3980 3184
+5 * 796 796
+4 * 796 796
+1 * 796 796

fn=(86)
0x403a0a 134 796 0 796
+1 * 796
+3 * 796 0 796
+1 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=796 0x4042e2 -45 
* * 28656 10348 11144 5 0 0 5
+5 +1 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=796 0x40432a +43 
* * 293134 55067 49743 25 21 32 25 21 32 40903 1842 1592
+5 * 796
jump=796 +28 * 
* * 
+28 * 796
+4 * 796 796
+1 * 796 796
+1 * 796 796

fn=(88)
0x4042e2 90 796 0 796 1 0 0 1
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796 1 0 0 1
cfi=(4)
cfn=(90)
calls=796 0x4047b2 +24 
* * 14328 4776 5572 3 0 0 3
+5 * 796 796
+4 * 796 0 796
+7 * 796 796
+4 * 796 0 796
+8 * 796 796
+4 * 796 0 796
+8 +1 796 796
+1 * 796 796

fn=(156)
0x4031ec 159 796 0 796 1 0 0 1
+1 * 796
+3 * 796 0 796
+1 * 796
+4 * 796 0 796
+4 +2 796 796
+4 * 796 796 0 1 0 0 1
+4 * 796
+3 * 796 796
+4 * 796 796
+3 * 796
+3 * 796
+3 * 796
+4 * 796
+3 * 796 796
+4 * 796 796
+3 -1 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(158)
calls=796 0x403ce6 +11 
* * 118884 32988 20710 24 5 0 24 5 0 24644 579 1592
+5 +1 796 796
+4 * 796
+3 * 796 0 796
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=796 0x4031b8 -82 
* * 18308 6368 6368 1 0 0 1
+5 * 796
jump=796 +28 * 
* * 
+28 * 796
+4 * 796 796
+1 * 796 796
+1 * 796 796

fn=(172)
0x4031b8 79 796 0 796 1 0 0 1
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 796
+4 * 796
+3 * 796 0 796
cfi=(4)
cfn=(174)
calls=796 0x403ccc +42 
* * 11144 3980 3980
+5 * 796 796
+1 * 796 796

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1624 0 1624 1 0 0 1
+1 * 1624
+3 * 1624 0 1624
+4 +1 1624 1624
+4 * 1624 1624 0 0 2 0 0 2
+4 * 1624
+3 * 1624 1624
+4 * 1624 1624
+3 * 1624
+3 * 1624
+3 * 1624
+4 * 1624 1624
+1 * 1624 1624

fn=(106)
0x40325e 113 1616 0 1616 1 0 0 1
+1 * 1616
+3 * 1616 0 1616
+4 +1 1616 1616
+4 * 1616 1616
+1 * 1616 1616

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 812 0 812 1 0 0 1
+1 * 812
+3 * 812 0 812 0 0 1 0 0 1
+4 +1 812 812
+4 * 812 812
+1 * 812 812

fn=(82)
0x4039fc 117 812 0 812 1 0 0 1
+1 * 812
+3 * 812 0 812 1 0 0 1
+4 +1 812 812
+4 * 812 812
+1 * 812 812

fn=(200)
0x402eda 901 398 0 398
+1 * 398
+3 * 398
+4 * 398 0 398
+4 * 398 0 398
+4 +2 398 398
+4 * 398 398
+4 * 398 398
+4 * 398 398
+4 * 398
+3 * 398 0 0 0 0 0 0 0 0 398 8
jcnd=8/398 +51 +10 
* * 
+2 +3 390 390
+4 * 390 390
+4 * 390 390
+4 -1 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(3)
cfn=(222)
calls=390 0x403373 215 
* * 14820 5070 5460 0 24 11 0 24 11 390 2
+5 +2 390 390
+4 * 390 390
+4 * 390
+4 * 390 390
+4 * 390 0 390
+4 * 390
jump=390 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12918 3948 3441 40 3 9 40 3 9 907 65 47
+5 +2 398 398
+1 * 398 398

fn=(4)
0x4030b2 310 796 0 796 1 0 0 1
+1 * 796
+3 * 796 0 796
+2 * 796 0 796
+2 * 796 0 796
+1 * 796
+4 * 796 0 796 1 0 0 1
+4 * 796 0 796
+4 +2 796 796
+4 * 796
+3 * 796 0 796
cfn=(6)
calls=796 0x403b08 117 
* * 4776 2388 1592 1 0 1 1 0 1
+5 * 796
+3 * 796 0 796
cfi=(3)
cfn=(8)
calls=796 0x403afa -88 
* * 4776 2388 1592 1 0 0 1
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(10)
calls=796 0x402f54 645 
* * 10348 4776 1592 1 1 0 1 1
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796
+3 * 796
+3 * 796 0 796
cfn=(12)
calls=796 0x403b16 134 
* * 354055 74424 72147 32 17 16 32 17 16 43289 1058 1592
+5 +4 796 796 0 1 0 0 1
+4 * 796
+3 * 796 0 796
cfn=(40)
calls=796 0x40333c 113 
* * 4776 2388 1592 2 0 0 2
+5 * 796
+3 * 796 796
+4 * 796 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(42)
calls=796 0x403ba4 565 
* * 19900 7960 6368 3 0 0 3
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(46)
calls=796 0x403b74 547 
* * 19900 7960 6368
+5 * 796
+3 * 796
+3 * 796
+3 * 796
+3 * 796 0 796 1 0 0 1
cfi=(11)
cfn=(48)
calls=796 0x403bd5 -60 
* * 446576 150464 146488 26 3 5 26 3 5 16784 1021 1588 198
+5 -3 796 796
+4 * 796 0 796
+4 * 796
jump=796 +28 +4 
* * 
+28 +4 796
+4 * 796 796
+1 * 796 796
+2 * 796 796
+2 * 796 796
+1 * 796 796

fn=(108)
0x403a98 565 796 0 796 1 0 0 1
+1 * 796
+3 * 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+4 * 796 0 796
+4 * 796
+4 * 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfi=(10)
cfn=(110)
calls=796 0x404380 726 
* * 7960 3980 3184 1 0 0 1
+5 * 796 796
+4 * 796 796
+1 * 796 796

fn=(178)
0x402e74 414 796 0 796
+1 * 796
+3 * 796 0 796
+1 * 796
+4 * 796 0 796 1 0 0 1
+4 +2 796 796
+4 * 796
+3 * 796 0 796
cfn=(40)
calls=796 0x40333c 113 
* * 4776 2388 1592
+5 * 796
+3 * 796 796
+4 * 796 796
+4 * 796 796
+4 * 796 796
+3 -1 796
+3 * 796
+3 * 796 0 796
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=796 0x40334a 148 
* * 24676 7960 9552 2 0 0 2
+5 +1 796 796
+4 * 796
+3 * 796 0 796
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=796 0x4032ca 159 
* * 163462 49520 32682 3 1 0 3 1 0 25536 242 1592
+5 * 796
jump=796 +28 * 
* * 
+28 * 796 0 0 1 0 0 1
+4 * 796 796
+1 * 796 796
+1 * 796 796

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 804 0 804 1 0 0 1
+1 * 804 0 0 1 0 0 1
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 0 804 804
+5 0 804 0 0 0 0 0 0 0 0 804
+2 0 804 804
+4 0 804 804
+4 0 804
+5 0 804
+3 0 804
+3 0 804 0 804
fi=(6)
cfi=(5)
cfn=(100)
calls=804 0x40461a 99 
* 0 263850 42204 41622 38 23 37 38 23 37 40654 1897 1608
+5 0 804
fi=(6)
jump=804 +7 0 
* 0 
+7 0 804 804
+1 0 804 804

fn=(144)
0x402d9a 770 240193 0 240193
+1 * 240193
+3 * 240193 0 240193
+4 * 240193 0 240193
+4 +1 240193 240193
+4 * 240193 240193
+3 * 240193 240193
+4 * 240193
+4 * 240193
+3 * 240193 240193
+1 * 240193 240193

fn=(146)
0x402dba 770 240193 0 240193
+1 * 240193
+3 * 240193 0 240193 1 0 0 1
+4 * 240193 0 240193
+4 +1 240193 240193
+4 * 240193 240193
+3 * 240193 240193
+4 * 240193
+4 * 240193
+3 * 240193 240193
+1 * 240193 240193

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 796
+4 * 796
+3 * 796 0 796
cfi=(4)
cfn=(194)
calls=796 0x403d7e +42 
* * 11144 3980 3980 1 0 0 1
+5 * 796 796
+1 * 796 796

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 796 0 796 1 0 0 1
+1 * 796
+3 * 796 0 796
+1 * 796
+4 * 796 0 796
+4 +2 796 796
+4 * 796 796
+4 * 796
+3 * 796 796
+4 * 796 796
+3 * 796
+3 * 796
+3 * 796
+4 * 796
+3 * 796 796
+4 * 796 796
+3 -1 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(188)
calls=796 0x403d98 +11 
* * 122866 34396 22334 1 1 0 1 1 0 25536 242 1592
+5 +1 796 796
+4 * 796
+3 * 796 0 796
cfn=(192)
calls=796 0x403296 -82 
* * 18308 6368 6368 1 0 0 1
+5 * 796
jump=796 +28 * 
* * 
+28 * 796
+4 * 796 796
+1 * 796 796
+1 * 796 796

fn=(2)
0x402d74 645 3216 0 3216 1 0 0 1
+1 * 3216
+3 * 3216 0 3216 0 0 1 0 0 1
+4 +1 3216 3216
+4 * 3216 3216 0 1 1 0 1 1
+4 * 3216
+3 * 3216 3216
+4 * 3216 3216
+3 * 3216
+3 * 3216
+3 * 3216
+4 * 3216 3216
+1 * 3216 3216

fn=(20)
0x404412 179 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 +2 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(22)
calls=796 0x404236 -14 
* * 287987 48952 49859 26 17 12 26 17 12 43289 1058 1592
+5 * 796 796
+4 * 796 0 796
+3 +1 796 796
+4 * 796 796 0 1 0 0 1
+3 * 796 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+3 * 796 796
+4 * 796
+4 * 796
+3 * 796 796
+4 * 796 0 796
+4 +1 796 796
+1 * 796 796

fn=(94)
0x40432a 179 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 +2 796 796
+4 * 796 796 0 1 0 0 1
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(96)
calls=796 0x403fbe -14 
* * 273234 45515 44171 24 21 32 24 21 32 40903 1842 1592
+5 * 796 796
+4 * 796 0 796
+3 +1 796 796
+4 * 796 796
+3 * 796 796
+4 * 796 0 796
+4 +1 796 796
+4 * 796 796
+3 * 796 796
+4 * 796
+4 * 796
+3 * 796 796
+4 * 796 0 796
+4 +1 796 796
+1 * 796 796

fn=(244)
0x402f7a 901 398 0 398
+1 * 398
+3 * 398 0 0 1 0 0 1
+4 * 398 0 398
+4 * 398 0 398
+4 +2 398 398
+4 * 398 398
+4 * 398 398
+4 * 398 398
+4 * 398
+3 * 398 0 0 0 0 0 0 0 0 398
jcnd=8/398 +51 +10 
* * 
+2 +3 390 390
+4 * 390 390
+4 * 390 390
+4 -1 390 390
+4 * 390
+3 * 390
+3 * 390 0 390
cfi=(3)
cfn=(264)
calls=390 0x4036b1 215 
* * 14820 5070 5460 0 25 13 0 25 13 390
+5 +2 390 390
+4 * 390 390
+4 * 390
+4 * 390 390
+4 * 390 0 390
+4 * 390
jump=390 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11992 3699 3231 19 3 30 19 3 30 725 62 47
+5 +2 398 398
+1 * 398 398

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796 1 0 0 1
+4 * 796 0 796
+4 * 796 0 796
+4 +8 796 0 796
+4 +3 796 796
+4 * 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=796 0x404f37 -22 
* * 284988 95540 89972 14 3 4 14 3 4 16784 1021 1588 198
+5 +1 796 796
+1 * 796 796

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 796 0 796
+1 * 796
+3 * 796 0 796
+2 * 796 0 796
+1 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +4 796 796
+4 * 796
+3 * 796 0 796
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=796 0x404878 277 
* * 11940 4776 3980 1 0 0 1
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=796 0x404d44 277 
* * 19900 7164 6368 2 0 0 2
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(132)
calls=796 0x404d44 277 
* * 19900 7164 6368
+5 * 796
+3 * 796
+3 * 796
+3 * 796 0 796
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=796 0x404d5e -49 
* * 296928 99520 94748 1 0 30 1 0 30 16784 959 1588
+5 +1 796
+4 * 796 796
+1 * 796 796
+2 * 796 796
+1 * 796 796

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 796 0 796
+1 * 796
+3 * 796 0 796
+1 * 796
+4 * 796 0 796 1 0 0 1
+4 * 796 0 796
+4 * 796 0 796
+4 +10 796 796
+4 * 796
+3 * 796 0 796
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=796 0x404c38 288 
* * 11940 4776 3980 3 0 0 3
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(56)
calls=796 0x404c38 288 
* * 11940 4776 3980
+5 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=796 0x404c52 -36 
* * 370956 124196 119424 20 3 5 20 3 5 16784 1021 1588 198
+5 +1 796
+4 * 796 796
+1 * 796 796
+1 * 796 796

fn=(60)
0x404c52 424 796 0 796
+1 * 796
+3 * 796 0 796
+2 * 796 0 796
+1 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +4 796 796
+4 * 796
+3 * 796 0 796
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=796 0x40492d 277 
* * 11940 4776 3980 2 0 0 2
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=796 0x404d9d 277 
* * 19900 7164 6368 2 0 1 2 0 1
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(66)
calls=796 0x404d9d 277 
* * 19900 7164 6368
+5 * 796
+3 * 796
+3 * 796
+3 * 796 0 796
cfn=(72)
calls=796 0x404db7 -49 
* * 296928 99520 94748 15 3 4 15 3 4 16784 1021 1588 198
+5 +1 796
+4 * 796 796
+1 * 796 796
+2 * 796 796
+1 * 796 796

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 19 0 0 19 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 844 0 844 1 0 0 1
+1 * 844
+3 * 844
+4 * 844 0 844
+4 +1 844 844
+4 * 844
+3 * 844 0 844 1 0 0 1
cfi=(13)
cfn=(64)
calls=844 -33 -66 
* * 5064 2532 1688
+5 * 844 844
+1 * 844 844

fn=(66)
0x404d9d 277 1592 0 1592
+1 * 1592
+3 * 1592
+4 * 1592 0 1592
+4 +1 1592 1592
+4 * 1592
+3 * 1592 0 1592
cfi=(13)
cfn=(68)
calls=1592 0x404f1a -58 
* * 25472 9552 7960 2 0 1 2 0 1
+5 * 1592 1592
+1 * 1592 1592

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 19 0 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 796 0 796
+1 * 796
+3 * 796 0 796
+1 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +10 796 796
+4 * 796
+3 * 796 0 796
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=796 0x404bc6 288 
* * 11940 4776 3980 3 0 0 3
+5 * 796
+3 * 796 796
+4 * 796
+3 * 796 0 796
cfn=(122)
calls=796 0x404bc6 288 
* * 11940 4776 3980
+5 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(126)
calls=796 0x404be0 -36 
* * 370956 124196 119424 4 0 30 4 0 30 16784 959 1588
+5 +1 796
+4 * 796 796
+1 * 796 796
+1 * 796 796

fn=(128)
0x404878 277 844 0 844
+1 * 844
+3 * 844
+4 * 844 0 844 1 0 0 1
+4 +1 844 844
+4 * 844
+3 * 844 0 844
cfi=(13)
cfn=(130)
calls=844 -33 -66 
* * 5064 2532 1688 0 0 1 0 0 1
+5 * 844 844
+1 * 844 844

fn=(132)
0x404d44 277 1592 0 1592
+1 * 1592
+3 * 1592
+4 * 1592 0 1592
+4 +1 1592 1592
+4 * 1592
+3 * 1592 0 1592
cfi=(13)
cfn=(134)
calls=1592 0x404e98 -58 
* * 25472 9552 7960 2 0 0 2
+5 * 1592 1592
+1 * 1592 1592

fn=(138)
0x404d5e 379 796 0 796
+1 * 796
+3 * 796
+4 * 796 0 796
+4 * 796 0 796
+4 * 796 0 796
+4 +8 796 0 796
+4 +3 796 796
+4 * 796 796
+4 * 796 796
+4 * 796
+3 * 796
+3 * 796 0 796
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=796 0x404eb5 -22 
* * 284988 95540 89972 1 0 30 1 0 30 16784 959 1588
+5 +1 796 796
+1 * 796 796

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 19 1 0 19 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1592 0 1592 1 0 0 1
+1 * 1592
+3 * 1592
+4 * 1592 0 1592
+4 +1 1592 1592
+4 * 1592
+3 * 1592 0 1592
cfi=(13)
cfn=(124)
calls=1592 0x404d36 -77 
* * 9552 4776 3184 2 0 0 2
+5 * 1592 1592
+1 * 1592 1592

fn=(56)
0x404c38 288 1592 0 1592 1 0 0 1
+1 * 1592
+3 * 1592
+4 * 1592 0 1592 1 0 0 1
+4 +1 1592 1592
+4 * 1592
+3 * 1592 0 1592
cfi=(13)
cfn=(58)
calls=1592 0x404d8f -77 
* * 9552 4776 3184 1 0 0 1
+5 * 1592 1592
+1 * 1592 1592

fn=(74)
0x404f37 368 812 0 812
+1 * 812
+3 * 812
+4 * 812 0 812 1 0 0 1
+4 * 812 0 812
+4 * 812 0 812
+4 +2 812 812
+4 * 812 812
+4 * 812
+3 * 812
+3 * 812
+4 * 812 0 812
+4 +1 812 812
+5 * 812 0 0 0 0 0 0 0 0 812
jcnd=8/812 +33 +2 
* * 
+2 +1 804 804
+4 * 804
+8 * 804 804
+4 * 804 804
+4 * 804
+3 * 804 0 0 1 0 0 1
+3 * 804 0 804 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=804 0x3877c83840 0 
* * 263822 87100 85497 11 2 22 11 2 22 16072 1025 799 198
* * 804 804 0 1 1 0 1 1 0 0 0 804
+5 +1 812 812
+4 * 812
+8 * 812 812
+4 * 812
+3 +1 812 812
+1 * 812 812

fn=(140)
0x404eb5 368 812 0 812
+1 * 812
+3 * 812
+4 * 812 0 812 1 0 0 1
+4 * 812 0 812
+4 * 812 0 812 0 0 1 0 0 1
+4 +2 812 812
+4 * 812 812
+4 * 812
+3 * 812
+3 * 812
+4 * 812 0 812
+4 +1 812 812
+5 * 812 0 0 0 0 0 0 0 0 812
jcnd=8/812 +33 +2 
* * 
+2 +1 804 804
+4 * 804
+8 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cob=(2)
cfi=(9)
cfn=(78)
calls=804 0x3877c83840 0 
* * 263822 87100 85497 0 0 31 0 0 31 16072 965 799
* * 804 804 0 0 0 0 0 0 0 0 0 804
+5 +1 812 812
+4 * 812
+8 * 812 812
+4 * 812
+3 +1 812 812
+1 * 812 812

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1592 0 1592 1 0 0 1
+1 * 1592
+3 * 1592 0 1592
+4 +1 1592 1592
+4 * 1592 1592
+1 * 1592 1592

fn=(110)
0x404380 726 1592 0 1592 1 0 0 1
+1 * 1592
+3 * 1592 0 1592
+4 * 1592 0 1592
+4 * 1592 1592
+4 * 1592 1592
+3 * 1592 1592
+4 * 1592 0 1592
+3 * 1592 1592
+1 * 1592 1592

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1592 0 1592 1 0 0 1
+1 * 1592
+3 * 1592 0 1592
+4 +1 1592 1592
+4 * 1592 1592
+1 * 1592 1592

fn=(44)
0x404468 726 1592 0 1592
+1 * 1592
+3 * 1592 0 1592
+4 * 1592 0 1592
+4 * 1592 1592
+4 * 1592 1592
+3 * 1592 1592
+4 * 1592 0 1592 1 0 0 1
+3 * 1592 1592
+1 * 1592 1592

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 804 0 804 1 0 0 1
+1 * 804
+3 * 804 0 804
+4 * 804 0 804 1 0 0 1
+4 * 804 804
+1 * 804 804

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 +4 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=804 0x40454c -14 
* * 4824 1608 2412 1 0 0 1
+5 +2 804 804
+1 * 804 804

fn=(150)
0x40326c 148 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +3 804 804 0 1 0 0 1
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=804 0x403d1a -29 
* * 14472 4824 5628 3 0 0 3
+5 +1 804 804
+1 * 804 804

fn=(180)
0x40334a 148 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +3 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(182)
calls=804 0x403dcc -29 
* * 14472 4824 5628 2 0 0 2
+5 +1 804 804
+1 * 804 804

fn=(152)
0x403d1a 122 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 +4 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(154)
calls=804 0x4044f8 -14 
* * 4824 1608 2412 2 0 0 2
+5 +2 804 804
+1 * 804 804

fn=(184)
0x40454c 112 804 0 804 1 0 0 1
+1 * 804
+3 * 804 0 804
+4 * 804 0 804
+4 * 804 804
+1 * 804 804

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2519 443 452 0 2 7 0 2 7 364 40 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 19 3 0 19 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1119 308 198 1 0 0 1 0 0 213 18 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3480 709 667 16 2 5 16 2 5 555 55 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1084 291 193 2 0 0 2 0 0 204 4 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1608 0 1608 1 0 0 1
+5 0 1608 0 1608
+5 0 1608
+3 0 1608 0 1608
+5 0 1608
+4 0 1608 1608 0 0 1 0 0 1
+7 0 1608 1608 0 0 1 0 0 1
+3 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608 2
+6 0 1608 1608 0 0 1 0 0 1
+7 0 1608 1608 0 1 1 0 1 1
+4 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608
+2 0 1608 1608 0 0 1 0 0 1
+3 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608
jcnd=1608/1608 +97 0 
* 0 
+18 0 1608
+3 0 1608
+3 0 1608 0 1608
cfn=(38) _int_malloc
calls=1608 0x3877c79a00 0 
* 0 406420 50595 61381 47 34 55 47 34 55 64207 2899
+5 0 1608
+3 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608
+2 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608
+2 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608 32
+2 0 1608 1608
+7 0 1608 0 0 0 0 0 0 0 0 1608
jcnd=1608/1608 +13 0 
* 0 
+13 0 1608 0 1608
+2 0 1608 0 0 0 0 0 0 0 0 1608 62
+6 0 1608
+3 0 1608 1608
+4 0 1608 1608
+5 0 1608 1608
+5 0 1608
+4 0 1608 1608
+1 0 1608 0 0 1 0 0 1
+5 0 1608 1608 0 0 1 0 0 1
+7 0 1608 0 0 0 0 0 0 0 0 1608
jcnd=1608/1608 +14 0 
* 0 
+14 0 1608 0 1608 1 0 0 1
+3 0 1608 0 0 0 0 0 0 0 0 1608
+6 0 1608
jump=1608 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1608 0 1608 1 0 0 1
+2 0 1608
+3 0 1608
+3 0 1608 0 1608
+2 0 1608
+3 0 1608 0 1608
+1 0 1608
+3 0 1608 0 1608
+1 0 1608
+3 0 1608
+4 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608
+6 0 1608
+4 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608 7
jcnd=10/1608 0x3877c838d1 0 
* 0 
+2 0 1598
+3 0 1598
+3 0 1598
+3 0 1598
+3 0 1598
+3 0 1598 0 0 0 0 0 0 0 0 1598
jcnd=1598/1598 +41 0 
* 0 
+41 0 1598 0 0 1 0 0 1
+3 0 1598 0 0 0 0 0 0 0 0 1598
jcnd=1598/1598 0x3877c839c0 0 
* 0 
+24 0 1598
+3 0 1598
+4 0 1598
+3 0 1598
+3 0 1598
+3 0 1598
+3 0 1598
+3 0 1598 0 0 0 0 0 0 0 0 1598 843
jcnd=806/1598 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 802
+10 0 802 802 0 0 1 0 0 1
+3 0 802
+4 0 802 0 802
+3 0 802
+4 0 802
+4 0 802 0 0 0 0 0 0 0 0 802
jcnd=802/802 -18 0 
* 0 
-18 0 2462 2462
+3 0 2462
+4 0 2462 0 2462
+3 0 2462
+4 0 2462
+4 0 2462 0 0 0 0 0 0 0 0 2462 11
jcnd=1660/2462 -18 0 
* 0 
+2 0 1608
+4 0 1608
+3 0 1608 1608
+1 0 1608 1608
+1 0 1608 1608
+2 0 1608 1608 0 1 0 0 1
+2 0 1608 1608
0x3877c839c0 0 1598 0 0 1 0 0 1
+3 0 1598
+3 0 1598
+3 0 1598
+4 0 1598 0 1598 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1598 0x3877c89b20 0 
* 0 436706 162896 159700 6 1 52 6 1 52 20860 1129 1598 198
+5 0 1598
jump=1598 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1608 1608 0 1 1 0 1 1
+7 0 1608 1608 0 0 1 0 0 1
+3 0 1608
+3 0 1608 0 0 1 0 0 1 0 0 1608
+6 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608
+6 0 1608 1608
+4 0 1608
+4 0 1608
+2 0 1608 0 0 0 0 0 0 0 0 1608 2
+2 0 1608
+2 0 1608
+7 0 1608 0 0 0 0 0 0 0 0 1608
jcnd=1608/1608 +14 0 
* 0 
+14 0 1608
+2 0 1608
cfn=(170) _int_free
calls=1608 0x3877c78650 0 
* 0 168377 45471 27355 21 2 0 21 2 0 40949 833

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 7 7
+5 0 7
+3 0 7 7
+5 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+9 0 7 0 7
+4 0 7 0 7
+4 0 7 0 0 0 0 0 0 0 0 7 3
jcnd=7/7 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3
jcnd=2/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 6
jcnd=5/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=7/20 0x3877c75e68 0 
* 0 
+6 0 13 0 13
+6 0 13
jump=13 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1608 0 1608 1 0 0 1
+2 0 1608 0 1608
+2 0 1608 0 1608
+2 0 1608
+3 0 1608 0 1608
+2 0 1608 0 1608
+1 0 1608 0 1608
+1 0 1608
+3 0 1608
+4 0 1608 1608
+4 0 1608 0 1608
+4 0 1608
+3 0 1608
+4 0 1608
+3 0 1608
+3 0 1608
+3 0 1608 0 0 1 0 0 1 0 0 1608
+6 0 1608
+4 0 1608 0 0 0 0 0 0 0 0 1608
+6 0 1608
+4 0 1608 0 0 0 0 0 0 0 0 1608
+6 0 1608 1608
+7 0 1608 0 0 0 0 0 0 0 0 1608 4
jcnd=1484/1608 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124 2
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1484
+2 0 1484 0 0 0 0 0 0 0 0 1484
+6 0 1484 1484 0 1 0 0 1
+4 0 1484
+3 0 1484
+2 0 1484 0 0 0 0 0 0 0 0 1484
jcnd=1484/1484 0x3877c78a40 0 
* 0 
+6 0 1484 1484
+4 0 1484
+3 0 1484 0 0 0 0 0 0 0 0 1484
+6 0 1484 1484
+5 0 1484
+4 0 1484 0 0 0 0 0 0 0 0 1484
jcnd=1484/1484 0x3877c7907c 0 
* 0 
+6 0 1484 1484
+5 0 1484
+4 0 1484 0 0 0 0 0 0 0 0 1484
+6 0 1484
+4 0 1484 0 0 1 0 0 1 0 0 1484
+6 0 1484
+4 0 1484 1484
+7 0 1484 0 0 0 0 0 0 0 0 1484
+6 0 1484 1484
+6 0 1484
+2 0 1484 0 0 0 0 0 0 0 0 1484
+6 0 1484 1484
+4 0 1484 0 0 0 0 0 0 0 0 1484 5
jcnd=1480/1484 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=3/4 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 1484 1484 0 1 0 0 1
+4 0 1484 0 0 0 0 0 0 0 0 1484 186
jcnd=186/1484 0x3877c78bf0 0 
* 0 
+6 0 1298 1298 0 0 1 0 0 1
+6 0 1298 0 0 1 0 0 1 0 0 1298 92
jcnd=77/1298 0x3877c78a78 0 
* 0 
+6 0 1221 1221
+5 0 1221 1221
+5 0 1221 1221
+4 0 1221 0 0 0 0 0 0 0 0 1221
+6 0 1221 1221
+4 0 1221 0 0 0 0 0 0 0 0 1221
+6 0 1221 1221
+9 0 1221 0 1221
+4 0 1221 0 1221
+4 0 1221 0 0 0 0 0 0 0 0 1221 428
jcnd=724/1221 +16 0 
* 0 
+2 0 497 497
+5 0 497
+3 0 497 0 0 1 0 0 1 0 0 497 9
jcnd=105/497 0x3877c78ee4 0 
* 0 
+6 0 1221
+3 0 1221
+4 0 1221 1221
+4 0 1221 1221
+4 0 1221 0 0 0 0 0 0 0 0 1221
-12 0 77
+4 0 77 77
+4 0 77 77
+4 0 77 0 0 0 0 0 0 0 0 77
+6 0 1298
+7 0 1298 0 1298
+4 0 1298 0 1298
+4 0 1298 0 0 0 0 0 0 0 0 1298 104
jcnd=368/1298 +18 0 
* 0 
+2 0 930 0 930
+8 0 930 0 930
+8 0 930 0 930
+4 0 930
+3 0 930 0 930 1 0 0 1
+4 0 930
+4 0 930 0 930
+4 0 930 0 930
+4 0 930
+7 0 930 0 0 0 0 0 0 0 0 930
jcnd=930/930 0x3877c78b20 0 
* 0 
-30 0 368 0 368
+4 0 368
+3 0 368 0 368
+4 0 368
+4 0 368 0 368
+4 0 368 0 368
+4 0 368
+7 0 368 0 0 0 0 0 0 0 0 368
jcnd=368/368 0x3877c78b20 0 
* 0 
-7 0 186
+7 0 186 0 0 0 0 0 0 0 0 186
jcnd=186/186 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1484 0 0 1 0 0 1
+5 0 1484 1484
+4 0 1484 1484
+7 0 1484 0 0 0 0 0 0 0 0 1484
jcnd=1484/1484 +16 0 
* 0 
+16 0 1484 0 1484
+5 0 1484 0 0 0 0 0 0 0 0 1484
+6 0 1484
+3 0 1484
jump=1484 0x3877c7878f 0 
* 0 
+10 0 77 0 77
+6 0 77 0 0 1 0 0 1
jump=77 0x3877c78885 0 
* 0 
0x3877c78b20 0 1484 1484 0 1 0 0 1
+4 0 1484
+2 0 1484 0 0 0 0 0 0 0 0 1484
+6 0 1484 1484
+7 0 1484 0 0 0 0 0 0 0 0 1484
jcnd=1484/1484 +15 0 
* 0 
+15 0 1484 0 1484 1 0 0 1
+4 0 1484 0 0 0 0 0 0 0 0 1484
+6 0 1484
+4 0 1484 1484
+1 0 1484 1484
+1 0 1484 1484
+2 0 1484 1484
+2 0 1484 1484
+2 0 1484 1484
+2 0 1484 1484
0x3877c78bf0 0 186 0 0 1 0 0 1
+3 0 186 0 186
+4 0 186
+3 0 186
+4 0 186 0 186 1 0 0 1
+4 0 186
jump=186 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 105 105 0 1 0 0 1
+5 0 105 0 0 0 0 0 0 0 0 105
+6 0 105 105
+5 0 105 0 105
+4 0 105 105
+5 0 105 0 105
+4 0 105
jump=105 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 1484 1484 0 1 1 0 1 1
+4 0 1484 0 0 1 0 0 1
+7 0 1484
+4 0 1484
+3 0 1484
+3 0 1484 0 0 0 0 0 0 0 0 1484
jcnd=1484/1484 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1598 0 0 1 0 0 1
+7 0 1598
+3 0 1598
+3 0 1598 1598 0 0 1 0 0 1
+4 0 1598
+4 0 1598 0 0 0 0 0 0 0 0 0 0 1598 198
jump=192 0x3877c89be8 0 
* 0 
jump=202 0x3877c89bd0 0 
* 0 
jump=200 0x3877c89bb8 0 
* 0 
jump=200 +11 0 
* 0 
jump=200 0x3877c89c48 0 
* 0 
jump=202 0x3877c89c30 0 
* 0 
jump=200 0x3877c89c18 0 
* 0 
jump=202 0x3877c89c00 0 
* 0 
+11 0 200 200
+3 0 200
+4 0 200
+4 0 200 200
+4 0 200
+4 0 200 0 200
+4 0 200
+9 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-40 0 19662 19662
+4 0 19662 0 19662 0 0 1 0 0 1
+4 0 19662 19662
+4 0 19662 0 19662 0 0 15 0 0 15
+4 0 19662 19662
+4 0 19662 0 19662 0 0 25 0 0 25
+4 0 19662 19662
+4 0 19662 0 19662 0 0 1 0 0 1
+4 0 19662
+4 0 19662
+4 0 19662 0 0 0 0 0 0 0 0 19662 1125
jcnd=1562/19662 0x3877c89c60 0 
* 0 
-32 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202
jcnd=10/202 0x3877c89c60 0 
* 0 
-24 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-16 0 202 202 0 1 0 0 1
+4 0 202 0 202
+4 0 202 0 0 1 0 0 1
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202 4
jcnd=10/202 0x3877c89c60 0 
* 0 
+6 0 18868
+4 0 18868 18868
+3 0 18868 0 18868 0 0 1 0 0 1
+3 0 18868 18868
+4 0 18868 0 18868 0 0 3 0 0 3
+4 0 18868 18868
+4 0 18868 0 18868 0 0 2 0 0 2
+4 0 18868 18868
+4 0 18868 0 18868 0 0 2 0 0 2
+4 0 18868
jump=18868 -80 0 
* 0 
-30 0 192 192
+3 0 192 0 192
+3 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192 0 0 1 0 0 1
+4 0 192 192
+4 0 192 0 192
+4 0 192
jump=192 -80 0 
* 0 
-24 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202 0 0 1 0 0 1
+4 0 202
jump=202 -80 0 
* 0 
-16 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
jump=200 -80 0 
* 0 
+8 0 200 200
+3 0 200
+4 0 200 0 0 1 0 0 1
+4 0 200
+4 0 200
jump=200 -39 0 
* 0 
+9 0 202
+3 0 202 0 0 0 0 0 0 0 0 202
+6 0 202 202
+3 0 202
+4 0 202
jump=202 -72 0 
* 0 
+8 0 192
+4 0 192 192
+3 0 192 0 0 0 0 0 0 0 0 192
+2 0 192
+4 0 192
jump=192 -99 0 
* 0 
+11 0 202 202 0 1 0 0 1
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b78 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b70 0 
* 0 
+9 0 202 202
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b68 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b60 0 
* 0 
+9 0 1598 0 1598 1 0 0 1
+3 0 1598 1598

fn=(104) alloc_perturb
0x3877c77180 0 1467 1467 0 1 0 0 1
+6 0 1467
+2 0 1467 0 0 0 0 0 0 0 0 1467 34
+2 0 1467 1467

fn=(38)
0x3877c79a00 0 1608 0 1608 1 0 0 1
+2 0 1608
+3 0 1608 0 1608
+2 0 1608 0 1608
+2 0 1608 0 1608 0 0 1 0 0 1
+2 0 1608
+3 0 1608 0 1608
+1 0 1608 0 1608
+1 0 1608
+4 0 1608
+4 0 1608 0 0 0 0 0 0 0 0 1608
+6 0 1608
+4 0 1608
+6 0 1608
+3 0 1608
+4 0 1608
+4 0 1608
+4 0 1608
+3 0 1608 0 0 0 0 0 0 0 0 1608
+6 0 1608 1608 0 1 1 0 1 1
+7 0 1608 0 0 0 0 0 0 0 0 1608 7
jcnd=1486/1608 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 141 141
+6 0 141
+4 0 141
+2 0 141 0 0 0 0 0 0 0 0 141
+6 0 141
+3 0 141
+4 0 141 141
+1 0 141 141
+1 0 141 141
+2 0 141 141
+2 0 141 141
+2 0 141 141
+2 0 141 141
-14 0 1467
+4 0 1467 1467
+1 0 1467 1467
+1 0 1467 1467
+2 0 1467 1467
+2 0 1467 1467
+2 0 1467 1467
+2 0 1467 1467
+7 0 1503
+7 0 1503 0 0 1 0 0 1 0 0 1503 7
jcnd=600/1503 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 4 0 0 4
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 600 0 0 1 0 0 1
+3 0 600
+4 0 600
+4 0 600 0 0 1 0 0 1 0 0 600
jcnd=600/600 0x3877c7a1a4 0 
* 0 
+30 0 600 600
+6 0 600
+5 0 600 0 0 0 0 0 0 0 0 600 1
jcnd=599/600 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 927 253 196 8 1 0 8 1 0 193 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1502 0 0 1 0 0 1
+3 0 1502
+3 0 1502
+3 0 1502
+4 0 1502
+3 0 1502
+4 0 1502 0 1502
+5 0 1502
+3 0 1502 0 1502
+4 0 1502 0 1502
+4 0 1502 0 1502
+5 0 1502
+3 0 1502
+3 0 1502
+3 0 1502
+3 0 1502
+4 0 1502
+4 0 1502 0 0 1 0 0 1
+4 0 1502 0 1502
+4 0 1502
+4 0 1502 0 1502
+5 0 1502 0 1502
+5 0 1502
+3 0 1502
+3 0 1502 0 1502
+5 0 1502
+5 0 1502
+3 0 1502 0 1502
+4 0 1502 0 1502
+4 0 1502
+6 0 1502 0 1502
+4 0 1502 0 1502
+5 0 1502 0 0 1 0 0 1
+3 0 1502
+3 0 1502
+3 0 1502
jump=1502 +87 0 
* 0 
+8 0 711
+3 0 711
+4 0 711
+2 0 711
+2 0 711
+3 0 711
+3 0 711
+3 0 711
+2 0 711
+2 0 711
+5 0 711
+2 0 711 711
+4 0 711
+3 0 711
+4 0 711 0 711
+4 0 711 0 711
+8 0 711
+7 0 711 0 711
+4 0 711 0 711
+4 0 711 0 711
+4 0 711 0 0 0 0 0 0 0 0 711
-38 0 1034
+3 0 1034
+4 0 1034 0 1034
+4 0 1034 0 1034
+8 0 1034
+7 0 1034 0 1034
+4 0 1034 0 1034
+4 0 1034 0 1034
+4 0 1034 0 0 0 0 0 0 0 0 1034
+6 0 3248 3248 0 1 0 0 1
+4 0 3248
+3 0 3248 0 0 0 0 0 0 0 0 3248 145
jcnd=1361/3248 0x3877c79ef0 0 
* 0 
+6 0 1887 1887
+4 0 1887 1887
+4 0 1887
+4 0 1887 0 0 0 0 0 0 0 0 1887
+6 0 1887 1887 0 1 0 0 1
+7 0 1887 0 0 0 0 0 0 0 0 1887 2
+6 0 1887
+4 0 1887
+7 0 1887 0 0 0 0 0 0 0 0 1887 10
jcnd=687/1887 +11 0 
* 0 
+2 0 1200
+3 0 1200 0 0 0 0 0 0 0 0 1200 301
jcnd=866/1200 0x3877c79e28 0 
* 0 
+6 0 1781
+3 0 1781 0 1781
+4 0 1781 0 1781
+5 0 1781 0 0 0 0 0 0 0 0 1781 20
jcnd=36/1781 0x3877c7a090 0 
* 0 
+6 0 1745
+7 0 1745 0 0 0 0 0 0 0 0 1745 246
jcnd=711/1745 0x3877c79c50 0 
* 0 
+6 0 1034 0 0 1 0 0 1
+3 0 1034
+4 0 1034
+4 0 1034 0 0 0 0 0 0 0 0 1034 8
jcnd=216/1034 0x3877c79db0 0 
* 0 
+6 0 818
+3 0 818
+4 0 818
+2 0 818
+2 0 818
+3 0 818
+3 0 818
+8 0 818
+3 0 818
+2 0 818
+2 0 818
+4 0 818 818 0 0 4 0 0 4
+4 0 818
+3 0 818 0 0 1 0 0 1 0 0 818 101
jcnd=786/818 0x3877c79e15 0 
* 0 
-36 0 216
+2 0 216
+2 0 216
+3 0 216
+3 0 216
+8 0 216
+3 0 216
+2 0 216
+2 0 216
+4 0 216 216
+4 0 216
+3 0 216 0 0 0 0 0 0 0 0 216
jcnd=216/216 0x3877c79e15 0 
* 0 
+6 0 32 32
+4 0 32
+4 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=8/32 +38 0 
* 0 
+2 0 24 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24
+3 0 24
jump=24 0x3877c79c73 0 
* 0 
+13 0 8 8
+4 0 8
+3 0 8 0 0 0 0 0 0 0 0 8
+2 0 8
+3 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c79ee0 0 
* 0 
+30 0 8 8
+4 0 8
jump=8 0x3877c79c73 0 
* 0 
+14 0 216 0 0 1 0 0 1
+3 0 216
+4 0 216
+4 0 216 0 0 0 0 0 0 0 0 216
+2 0 216
+3 0 216 0 0 1 0 0 1
+7 0 216
jump=216 0x3877c79d18 0 
* 0 
+78 0 1002 0 1002
+4 0 1002 0 1002
+4 0 1002
+3 0 1002
jump=1002 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 109
jcnd=443/866 0x3877c79ce1 0 
* 0 
+6 0 423 423
+5 0 423 0 0 0 0 0 0 0 0 423 9
jcnd=317/423 0x3877c79ce1 0 
* 0 
+6 0 106 0 0 1 0 0 1
+3 0 106
+3 0 106
+3 0 106
+7 0 106 0 106
+4 0 106 0 106
+4 0 106
+3 0 106 0 106
+4 0 106 0 106 0 0 17 0 0 17
+4 0 106 0 106
+4 0 106 0 0 0 0 0 0 0 0 106 8
jcnd=95/106 +18 0 
* 0 
+2 0 11 0 11 0 0 1 0 0 1
+8 0 11 0 11
+8 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
-56 0 95
+7 0 95 0 95
+4 0 95
+3 0 95
+3 0 95
+3 0 95
+4 0 95
+3 0 95
+4 0 95
+3 0 95
+3 0 95
+4 0 95 0 95
+4 0 95 0 95 0 0 1 0 0 1
+4 0 95
+4 0 95
+3 0 95 0 95
cfn=(104)
calls=95 0x3877c77180 0 
* 0 380 190 0 0 0 0 0 0 0 95
+5 0 106
+3 0 106
jump=106 0x3877c79ae3 0 
* 0 
+39 0 8 8
+4 0 8
jump=8 0x3877c79d9e 0 
* 0 
+12 0 1361 0 0 1 0 0 1
+7 0 1361
+3 0 1361 0 0 0 0 0 0 0 0 1361 9
jcnd=592/1361 0x3877c7a0b0 0 
* 0 
+6 0 1321 1321 0 1 0 0 1
+4 0 1321
+3 0 1321
+3 0 1321
+2 0 1321
+4 0 1321
+3 0 1321
+3 0 1321
+2 0 1321
+2 0 1321
+2 0 1321
+2 0 1321 1321 0 0 1 0 0 1
+8 0 1321
+5 0 1321
+5 0 1321
+2 0 1321 0 0 0 0 0 0 0 0 1321
-2 0 628
+2 0 628 0 0 0 0 0 0 0 0 628 2
jcnd=2/628 +14 0 
* 0 
+2 0 1947
+2 0 1947 0 0 0 0 0 0 0 0 1947 52
jcnd=967/1947 +64 0 
* 0 
+2 0 980
+8 0 980
+3 0 980
+3 0 980 0 0 0 0 0 0 0 0 980 1
jcnd=1/980 0x3877c79fc0 0 
* 0 
-6 0 312
+3 0 312
+3 0 312 0 0 0 0 0 0 0 0 312 4
jcnd=185/312 0x3877c79fc0 0 
* 0 
+2 0 1106
+2 0 1106 1106 0 0 1 0 0 1
+8 0 1106
+2 0 1106 0 0 0 0 0 0 0 0 1106 17
jcnd=310/1106 -20 0 
* 0 
+2 0 796
+2 0 796
+5 0 796
+3 0 796
+3 0 796
+2 0 796
+2 0 796
+5 0 796 0 0 0 0 0 0 0 0 796 1
jcnd=3/796 +14 0 
* 0 
+2 0 793
+2 0 793
+4 0 793
+2 0 793
+2 0 793 0 0 0 0 0 0 0 0 793
jcnd=793/793 -8 0 
* 0 
-8 0 11534
+4 0 11534
+2 0 11534
+2 0 11534 0 0 0 0 0 0 0 0 11534 759
jcnd=9914/11534 -8 0 
* 0 
-2 0 967 0 0 1 0 0 1
+2 0 967 0 0 0 0 0 0 0 0 967 35
jcnd=827/967 -8 0 
* 0 
+2 0 1763 1763 0 0 16 0 0 16
+4 0 1763 0 0 1 0 0 1
+3 0 1763 0 0 0 0 0 0 0 0 1763 571
jcnd=1135/1763 0x3877c7a1cf 0 
* 0 
+6 0 628
+2 0 628
+4 0 628
+2 0 628
+2 0 628
+2 0 628 0 628
+8 0 628
jump=628 0x3877c79f30 0 
* 0 
+37 0 186 186 0 1 0 0 1
+5 0 186 186
+4 0 186
+4 0 186 186
+5 0 186 0 0 0 0 0 0 0 0 186
jcnd=186/186 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 36 0 0 1 0 0 1
+7 0 36 0 36
+6 0 36
+3 0 36 0 0 0 0 0 0 0 0 36
jcnd=36/36 0x3877c79ace 0 
* 0 
+16 0 592 592
+4 0 592
+4 0 592
+2 0 592
+5 0 592 592 0 1 0 0 1
+4 0 592
+3 0 592 0 0 0 0 0 0 0 0 592 37
jcnd=535/592 0x3877c79f00 0 
* 0 
+6 0 57 57
+4 0 57 0 0 0 0 0 0 0 0 57 4
jcnd=17/57 0x3877c79f00 0 
* 0 
+6 0 40
+3 0 40 40
+4 0 40 40
+4 0 40
+3 0 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c7a650 0 
* 0 
+26 0 40 0 0 1 0 0 1
+3 0 40 40
+4 0 40
+3 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40
+6 0 40 40
+4 0 40 0 0 0 0 0 0 0 0 40 2
+6 0 40 40
+8 0 40 0 40
+4 0 40 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40 0 1 0 0 1
+4 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 26
jcnd=40/40 0x3877c7a659 0 
* 0 
+6 0 40
+4 0 40 0 0 0 0 0 0 0 0 40 8
jcnd=16/40 0x3877c7a2e3 0 
* 0 
+6 0 24 24
+4 0 24
+7 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+4 0 24
+7 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a285 0 
* 0 
+31 0 600 0 0 1 0 0 1
+3 0 600 0 600
+4 0 600
jump=600 0x3877c79b99 0 
* 0 
+36 0 1135 1135 0 1 2 0 1 2
+4 0 1135 1135
+4 0 1135
+3 0 1135 1135
+4 0 1135
+4 0 1135
+3 0 1135
+3 0 1135 1135
+4 0 1135 0 0 0 0 0 0 0 0 1135
+6 0 1135 1135
+4 0 1135 0 0 0 0 0 0 0 0 1135
+6 0 1135 1135 0 1 0 0 1
+8 0 1135 0 1135
+4 0 1135 0 1135
+4 0 1135 0 0 0 0 0 0 0 0 1135 72
jcnd=253/1135 +38 0 
* 0 
+2 0 882 882 0 0 1 0 0 1
+4 0 882
+3 0 882 0 0 0 0 0 0 0 0 882
+2 0 882 882
+5 0 882 0 0 0 0 0 0 0 0 882
+6 0 882 882
+4 0 882 0 882
+4 0 882 882
+4 0 882 0 882
+4 0 882
+4 0 882 0 0 0 0 0 0 0 0 882
-4 0 253
+4 0 253 0 0 0 0 0 0 0 0 253 12
jcnd=20/253 0x3877c7a2e3 0 
* 0 
+6 0 1115 1115
+4 0 1115 1115 0 1 0 0 1
+4 0 1115 0 0 0 0 0 0 0 0 1115
+6 0 1115
+4 0 1115
+7 0 1115 0 1115 0 0 11 0 0 11
+4 0 1115 0 1115
+4 0 1115 0 1115
+4 0 1115 0 1115
+4 0 1115 0 0 0 0 0 0 0 0 1115 7
jcnd=366/1115 +7 0 
* 0 
+2 0 749 0 749
+5 0 749
+7 0 749 0 0 0 0 0 0 0 0 749 148
jcnd=478/749 +18 0 
* 0 
-7 0 366
+7 0 366 0 0 0 0 0 0 0 0 366 69
jcnd=141/366 +18 0 
* 0 
+2 0 496 0 496 0 0 9 0 0 9
+8 0 496 0 496 1 0 0 1
+8 0 496
+7 0 496 0 496 0 0 3 0 0 3
+4 0 496
+3 0 496
+3 0 496
+4 0 496
+3 0 496
+4 0 496
+3 0 496
+3 0 496
+4 0 496 0 496
+4 0 496 0 496 0 0 1 0 0 1
+4 0 496
jump=496 +71 0 
* 0 
-46 0 643
+7 0 643 0 643
+4 0 643
+3 0 643
+3 0 643
+4 0 643
+3 0 643
+4 0 643
+3 0 643
+3 0 643
+4 0 643 0 643
+4 0 643 0 643 0 0 1 0 0 1
+4 0 643
jump=643 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 36
+7 0 36 0 36
+6 0 36
+3 0 36 0 0 0 0 0 0 0 0 36 2
jcnd=36/36 +7 0 
* 0 
+7 0 1175
+4 0 1175 0 0 1 0 0 1
+3 0 1175
+3 0 1175 0 1175
cfn=(104)
calls=1175 0x3877c77180 0 
* 0 4700 2350 0 1 0 0 1 0 0 1175 33
+5 0 1175
+3 0 1175
jump=1175 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 186 0 0 1 0 0 1
+7 0 186
+2 0 186
+4 0 186
+3 0 186
+3 0 186 0 186
+5 0 186
+3 0 186
+4 0 186
+3 0 186 0 0 1 0 0 1
+4 0 186
+4 0 186
+3 0 186
+4 0 186 0 186
+4 0 186 0 186 0 0 7 0 0 7
+4 0 186
+3 0 186
+3 0 186 0 186
cfn=(104)
calls=186 0x3877c77180 0 
* 0 744 372 0 0 0 0 0 0 0 186 1
+5 0 186
+3 0 186
jump=186 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 40 40 0 1 0 0 1
+4 0 40
jump=40 0x3877c7a10e 0 
* 0 
+5 0 40 40
+5 0 40 0 0 0 0 0 0 0 0 40
+2 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 0x3877c7a14b 0 
* 0 

totals: 14570965 6002899 3438128 245 107 149 245 107 149 412935 7037 9638 198
