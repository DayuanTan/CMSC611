version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1066


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1295791715 - 1301823595
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 3310 0 0 1 0 0 1
+3 0 3310 0 0 0 0 0 0 0 0 3310
+2 0 3310
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=3310 0x3877c7b8b0 0 
* 0 379392 97733 50405 23 4 0 23 4 0 93110 1513
* 0 3310 3310 0 1 1 0 1 1 0 0 0 3310

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 3310 0 3310 1 0 0 1
+1 0 3310
+5 0 3310
+3 0 3310 0 3310
+1 0 3310
+4 0 3310 0 0 1 0 0 1
+3 0 3310
+4 0 3310
+3 0 3310 0 3310 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=3310 0x3877c7aa50 0 
* 0 906531 133776 136215 51 41 86 51 41 86 146734 4460
* 0 3310 3310 0 1 1 0 1 1 0 0 0 3310
+5 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310
jcnd=3310/3310 +96 0 
* 0 
+96 0 3310 0 0 1 0 0 1
+4 0 3310 3310
+1 0 3310 3310
+1 0 3310 3310

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 823 0 823 1 0 0 1
+1 * 823
+3 * 823
+4 * 823 0 823
+4 * 823 0 823
+4 +1 823 823
+4 * 823
+3 * 823 0 823
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=823 0x402d74 645 
* * 10699 4938 1646
+5 * 823
+3 * 823 0 823
+3 +1 823 823
+6 * 823 0 823
+3 * 823 823
+6 * 823 0 823
+3 +1 823 823
+6 * 823 0 823 1 0 0 1
+3 * 823 823
+6 * 823 0 823
+3 +2 823 0 823
+7 * 823
jump=823 +86 * 
* * 
+2 +1 339899 339899
+3 * 339899
+3 * 339899 339899
+4 * 339899
+3 * 339899
+3 * 339899 0 339899
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=339899 0x402d9a 770 
* * 3738889 1699495 1019697
+5 * 339899 339899
+4 * 339899 339899
+5 * 339899
+4 * 339899 0 339899
+5 +1 339899 339899
+3 * 339899
+3 * 339899 339899
+4 * 339899
+3 * 339899
+3 * 339899 0 339899
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=339899 0x402dba 770 
* * 3738889 1699495 1019697 1 0 0 1
+5 * 339899 339899
+2 * 339899
+4 * 339899 339899
+5 * 339899
+4 * 339899 0 339899
+5 -2 339899 0 339899
+4 * 339899 339899
+3 * 339899
+3 * 339899 339899
+3 * 339899 0 0 0 0 0 0 0 0 339899 826
jcnd=339076/339899 -93 +1 
* * 
-9 * 823 823 0 1 0 0 1
+3 * 823
+3 * 823 823
+3 * 823 0 0 0 0 0 0 0 0 823
jcnd=823/823 -93 +1 
* * 
+2 +4 823 823
+3 * 823
+3 * 823
+4 * 823 823 0 1 0 0 1
+5 * 823
+4 * 823
+3 * 823 0 823
+5 +1 823 823
+3 * 823
+3 * 823
+4 * 823 823
+5 * 823
+4 * 823
+3 * 823 0 823
+5 +1 823 0 823
+7 * 823
jump=823 0x4016ee * 
* * 
+2 +1 339899 339899
+3 * 339899
+3 * 339899 339899
+4 * 339899
+3 * 339899 0 0 1 0 0 1
+3 * 339899 0 339899
cfi=(2)
cfn=(146)
calls=339899 0x402dba 770 
* * 3738889 1699495 1019697
+5 * 339899 339899
+2 * 339899
+4 * 339899 339899
+5 * 339899 0 339899
+5 +1 339899 339899
+3 * 339899
+3 * 339899 339899
+4 * 339899
+3 * 339899
+3 * 339899 0 339899
cfi=(2)
cfn=(144)
calls=339899 0x402d9a 770 
* * 3738889 1699495 1019697
+5 * 339899 339899
+4 * 339899 339899
+5 * 339899 0 339899
+5 +1 339899 339899
+5 * 339899 339899
+5 * 339899 339899
+5 * 339899
+4 * 339899 0 339899
+5 +1 339899 339899
+5 * 339899 339899
+5 * 339899 339899
+5 * 339899
+4 * 339899 0 339899
+5 -4 339899 0 339899
+4 * 339899 339899
+3 * 339899
+3 * 339899 339899
+3 * 339899 0 0 0 0 0 0 0 0 339899 824
jcnd=339076/339899 0x401672 +1 
* * 
-9 * 823 823 0 1 0 0 1
+3 * 823
+3 * 823 823
+3 * 823 0 0 0 0 0 0 0 0 823
jcnd=823/823 0x401672 +1 
* * 
+6 +6 823 823 0 1 0 0 1
+5 * 823 823
+5 * 823 0 823
+5 +2 823 823
+3 +1 823 0 823
+3 * 823 823
+5 * 823 823
+1 * 823 823

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 823
+7 * 823
+7 * 823
+3 * 823
+3 * 823 0 823
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=823 0x4030b2 310 
* * 1145775 359198 343373 68 25 16 68 25 16 68426 2173 3290 411
+5 * 823
+7 * 823
+7 * 823
+3 * 823
+3 * 823 0 823
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=823 0x402ff4 310 
* * 1135834 354596 337170 46 11 166 46 11 166 66115 3163 3290
+5 * 823 0 0 1 0 0 1
+7 * 823
+7 * 823
+3 * 823
+3 * 823 0 823
cfn=(142)
calls=823 0x401585 -52 
* * 35402991 15655929 8171567 8 0 0 8 0 0 681444 1650
+5 * 823 0 823
+8 * 823 823
+6 * 823 0 823
+6 * 823
+7 * 823
+3 * 823 0 823
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=823 0x402df4 414 
* * 204282 64011 45225 33 5 0 33 5 0 22603 710 1646
+5 * 823
+7 * 823
+3 * 823 0 823 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=823 0x402e74 414 
* * 221476 70207 50623 8 1 0 8 1 0 27023 43 1646
+5 +2 823
+7 * 823
+7 * 823
+3 * 823
+3 * 823 0 823
cfi=(2)
cfn=(4)
calls=823 0x4030b2 310 
* * 1145343 359163 343253 2 1 1 2 1 1 68381 1269 3290
+5 * 823
+7 * 823
+7 * 823
+3 * 823
+3 * 823 0 823
cfi=(2)
cfn=(80)
calls=823 0x402ff4 310 
* * 1134840 354530 337018 0 0 2 0 0 2 65956 2231 3290
+5 * 823 823
+6 * 823 0 0 1 0 0 1
+7 * 823
+7 * 823 0 823
+6 * 823 823
+8 * 823
+3 * 823
+3 * 823 0 823
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=823 0x401719 -33 
* * 16363709 6816086 3751234 4 0 0 4 0 0 340722 826
+5 * 823 0 823
+8 * 823 823
+6 * 823 0 823
+6 * 823
+7 * 823 0 0 1 0 0 1
+3 * 823 0 823
cfi=(2)
cfn=(148)
calls=823 0x402df4 414 
* * 204282 64011 45225 0 0 0 0 0 0 22603 704 1646
+5 * 823
+7 * 823
+3 * 823 0 823
cfi=(2)
cfn=(178)
calls=823 0x402e74 414 
* * 221476 70207 50623 0 0 0 0 0 0 27023 36 1646
+5 +2 823 823
+7 * 823
+3 * 823 0 823
cfi=(2)
cfn=(2)
calls=823 0x402d74 645 
* * 10699 4938 1646
+5 * 823 823
+6 * 823
+3 * 823
+3 * 823
+3 * 823 823
+7 * 823
+3 * 823 0 0 1 0 0 1
+3 * 823 0 823
cfi=(2)
cfn=(144)
calls=823 0x402d9a 770 
* * 9053 4115 2469
+5 * 823
+3 * 823
+7 * 823
+3 * 823
+3 * 823 0 823
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=823 0x402eda 901 
* * 67169 25918 19591 42 62 12 42 62 12 2592 84 53
+5 +1 823 823
+7 * 823
+3 * 823 0 823
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=823 0x402f54 645 
* * 10699 4938 1646 0 1 0 0 1
+5 * 823 823
+6 * 823
+3 * 823
+3 * 823
+3 * 823 823
+7 * 823 0 0 1 0 0 1
+3 * 823
+3 * 823 0 823
cfi=(2)
cfn=(146)
calls=823 0x402dba 770 
* * 9053 4115 2469
+5 * 823
+3 * 823
+7 * 823
+3 * 823
+3 * 823 0 823
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=823 0x402f7a 901 
* * 66372 25700 19415 20 53 100 20 53 100 2430 67 53
+5 +1 823 823
+7 * 823
+3 * 823 0 823
cfi=(2)
cfn=(10)
calls=823 0x402f54 645 
* * 10699 4938 1646
+5 * 823 823
+6 * 823
+3 * 823
+3 * 823
+3 * 823 823 0 1 0 0 1
+7 * 823
+3 * 823
+3 * 823 0 823
cfi=(2)
cfn=(146)
calls=823 0x402dba 770 
* * 9053 4115 2469
+5 * 823 823
+2 * 823
+4 * 823 823
+8 * 823 823
+8 * 823 0 823
+8 +1 823 823
+7 * 823
+3 * 823 0 823
cfi=(2)
cfn=(2)
calls=823 0x402d74 645 
* * 10699 4938 1646
+5 * 823 823 0 1 0 0 1
+6 * 823
+3 * 823
+3 * 823
+3 * 823 823
+7 * 823
+3 * 823
+3 * 823 0 823
cfi=(2)
cfn=(144)
calls=823 0x402d9a 770 
* * 9053 4115 2469
+5 * 823 823
+4 * 823 823
+8 * 823
+4 * 823 823
+8 * 823
+3 * 823 0 823
+8 +2 823 0 823
+7 -12 823 823
+8 * 823 823
+7 * 823 0 0 0 0 0 0 0 0 823 3
jcnd=1/823 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 823
+7 * 823
+3 * 823 0 823
cfi=(2)
cfn=(2)
calls=823 0x402d74 645 
* * 10699 4938 1646 2 0 1 2 0 1
+5 * 823
+3 * 823 823
+7 * 823
+3 * 823 0 823
cfi=(2)
cfn=(2)
calls=823 0x402d74 645 
* * 10699 4938 1646 0 1 0 0 1
+5 * 823
+3 * 823 0 0 0 0 0 0 0 0 823 2
+2 * 823 0 0 1 0 0 1
+5 * 823
jump=823 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 823
+2 * 823 0 0 0 0 0 0 0 0 823
jcnd=823/823 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 823 0 823
+1 * 823
+3 * 823
+4 * 823 0 823
+4 * 823 0 823
+4 * 823 0 823
+5 +1 823 823
+4 * 823
+3 * 823 0 823
cfi=(2)
cfn=(2)
calls=823 0x402d74 645 
* * 10699 4938 1646
+5 * 823
+3 * 823 0 823
+3 +1 823 823 0 1 0 0 1
+6 * 823 0 823
+3 * 823 823
+6 * 823 0 823
+3 +2 823 0 823
+7 * 823
jump=823 +86 * 
* * 
+2 +1 339899 339899
+3 * 339899
+3 * 339899 339899
+4 * 339899
+3 * 339899
+3 * 339899 0 339899
cfi=(2)
cfn=(144)
calls=339899 0x402d9a 770 
* * 3738889 1699495 1019697
+5 * 339899 339899
+4 * 339899 339899
+5 * 339899
+4 * 339899 0 339899
+5 +1 339899 339899
+3 * 339899
+3 * 339899 339899
+4 * 339899
+3 * 339899
+3 * 339899 0 339899
cfi=(2)
cfn=(146)
calls=339899 0x402dba 770 
* * 3738889 1699495 1019697
+5 * 339899 339899
+2 * 339899
+4 * 339899 339899
+5 * 339899
+4 * 339899 0 339899
+5 -2 339899 0 339899
+4 * 339899 339899
+3 * 339899
+3 * 339899 339899
+3 * 339899 0 0 0 0 0 0 0 0 339899 826
jcnd=339076/339899 -93 +1 
* * 
-9 * 823 823 0 1 0 0 1
+3 * 823
+3 * 823 823
+3 * 823 0 0 0 0 0 0 0 0 823
jcnd=823/823 -93 +1 
* * 
+2 +4 823 823
+3 * 823
+3 * 823 0 0 1 0 0 1
+4 * 823 823
+5 * 823
+4 * 823
+3 * 823 0 823
+5 +1 823 823
+3 * 823
+3 * 823
+4 * 823 823
+5 * 823
+4 * 823
+3 * 823 0 823
+5 +1 823 823
+5 * 823 823
+5 * 823 823
+5 * 823 0 0 1 0 0 1
+4 * 823
+3 * 823 0 823
+5 +2 823 823
+3 +1 823 0 823
+3 * 823 823
+5 * 823 823
+1 * 823 823

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646 1 0 0 1
+4 +1 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1646 0x4049d4 -35 
* * 9876 3292 4938 1 0 0 1
+5 * 1646 1646
+1 * 1646 1646

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1646 0x404520 -35 
* * 8230 3292 3292
+5 * 1646 1646
+1 * 1646 1646

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1646 0x404a28 -35 
* * 9876 3292 4938 1 0 1 1 0 1
+5 * 1646 1646
+1 * 1646 1646

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1646 0x4044cc -35 
* * 8230 3292 3292
+5 * 1646 1646
+1 * 1646 1646

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 823 0 823
+1 * 823
+3 * 823
+4 * 823 0 823
+4 * 823 0 823
+4 * 823 0 823
+4 +1 823 823
+4 * 823 823
+4 * 823 823
+4 * 823
+3 * 823
+3 * 823 0 823
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=823 0x403df2 -87 
* * 19752 6584 7407 0 53 3 0 53 3 823 2
+5 * 823 823
+1 * 823 823

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646 0 1646
+4 * 1646 1646
+4 * 1646 1646
+1 * 1646 1646

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 823 0 823
+1 * 823
+3 * 823
+4 * 823 0 823
+4 * 823 0 823
+4 * 823 0 823
+4 +1 823 823
+4 * 823 823
+4 * 823 823
+4 * 823
+3 * 823
+3 * 823 0 823
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=823 0x40406a -87 
* * 19752 6584 7407 0 52 43 0 52 43 823
+5 * 823 823
+1 * 823 823

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+4 * 1646 1646
+4 * 1646 1646
+1 * 1646 1646

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1736 0 1736
+1 * 1736
+3 * 1736 0 1736 0 0 1 0 0 1
+4 +1 1736 1736
+4 * 1736 1736
+1 * 1736 1736

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 3292 0 3292 1 0 0 1
+1 * 3292
+3 * 3292
+4 * 3292 0 3292
+4 +1 3292
+4 * 3292
+3 * 3292 0 3292
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=3292 0x404ffe 790 
* * 19752 9876 6584 1 0 0 1
+5 * 3292 3292
+3 * 3292 3292
+1 * 3292 3292

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 3292 0 3292 1 0 0 1
+1 * 3292
+3 * 3292 0 3292
+4 +1 3292 3292
+4 * 3292 3292
+1 * 3292 3292

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 3292 0 3292 1 0 0 1
+1 * 3292
+3 * 3292
+4 * 3292 0 3292
+4 +1 3292
+4 * 3292
+3 * 3292 0 3292 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=3292 0x40500c 790 
* * 19752 9876 6584 1 0 0 1
+5 * 3292 3292
+3 * 3292 3292
+1 * 3292 3292

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1736 0 1736
+1 * 1736
+3 * 1736 0 1736
+4 +1 1736 1736
+4 * 1736 1736
+1 * 1736 1736

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 3292 0 3292 1 0 0 1
+1 * 3292
+3 * 3292 0 3292
+4 +1 3292 3292 0 1 0 0 1
+4 * 3292 3292
+1 * 3292 3292

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 1646
+4 * 1646 1646
+1 * 1646 1646

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1655 0 1655 1 0 0 1
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 +2 1655 1655
+4 * 1655
+3 * 1655 0 1655
cfn=(102)
calls=1655 0x4048de +12 
* * 9930 3310 3310 1 0 0 1
+5 * 1655 1655
+4 * 1655 0 0 1 0 0 1
+3 * 1655
+2 * 1655 0 0 0 0 0 0 0 0 1655
jcnd=1655/1655 +7 +3 
* * 
+7 +3 1655 1655
+4 * 1655
+4 * 1655
+3 * 1655 0 1655
cob=(5)
cfi=(8)
cfn=(32)
calls=1655 0x387e4bd0b0 0 
* * 469950 69013 66945 35 20 71 35 20 71 72742 3222 1655
* * 1655 1655 0 0 0 0 0 0 0 0 0 1655
+5 +1 1655 1655
+1 * 1655 1655

fn=(18)
0x404a28 81 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646 0 1646 0 0 1 0 0 1
+4 * 1646 0 1646
+4 * 1646 1646
+1 * 1646 1646

fn=(92)
0x4049d4 81 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 1646
+1 * 1646 1646

fn=(196)
0x404520 86 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+4 * 1646 1646
+1 * 1646 1646

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1655 0 1655 1 0 0 1
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 * 1655 0 1655 1 0 0 1
+4 +2 1655 1655
+4 * 1655
+3 * 1655 0 1655
cfn=(28)
calls=1655 0x404992 +12 
* * 9930 3310 3310 1 0 0 1
+5 * 1655 1655
+4 * 1655
+3 * 1655
+2 * 1655 0 0 0 0 0 0 0 0 1655
jcnd=1655/1655 +7 +3 
* * 
+7 +3 1655 1655
+4 * 1655
+4 * 1655
+3 * 1655 0 1655
cob=(5)
cfi=(8)
cfn=(32)
calls=1655 0x387e4bd0b0 0 
* * 489541 78003 79200 20 22 16 20 22 16 77302 1238 1655
* * 1655 1655 0 1 1 0 1 1 0 0 0 1655
+5 +1 1655 1655
+1 * 1655 1655

fn=(102)
0x4048de 113 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673 0 1673
+4 +1 1673
+10 * 1673 1673
+1 * 1673 1673

fn=(266)
0x40406a 129 823 0 823
+1 * 823
+3 * 823
+4 * 823 0 823
+4 * 823 0 823
+4 * 823 0 823
+4 +1 823 823
+4 * 823
+3 * 823
+5 * 823 0 823
cfi=(16)
cfn=(226)
calls=823 0x402d61 -20 
* * 5761 2469 2469
+5 * 823
+3 * 823 0 0 0 0 0 0 0 0 823
+2 * 823 823
+4 * 823 823 0 0 52 0 0 52
+2 * 823 0 823 0 0 43 0 0 43
+2 * 823 823
+1 * 823 823

fn=(28)
0x404992 113 1673 0 1673 1 0 0 1
+1 * 1673
+3 * 1673 0 1673
+4 +1 1673
+10 * 1673 1673
+1 * 1673 1673

fn=(176)
0x4044cc 86 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+4 * 1646 1646
+1 * 1646 1646

fn=(224)
0x403df2 129 823 0 823
+1 * 823
+3 * 823
+4 * 823 0 823
+4 * 823 0 823
+4 * 823 0 823
+4 +1 823 823
+4 * 823
+3 * 823
+5 * 823 0 823
cfi=(16)
cfn=(226)
calls=823 0x402d61 -20 
* * 5761 2469 2469
+5 * 823
+3 * 823 0 0 0 0 0 0 0 0 823 2
+2 * 823 823
+4 * 823 823 0 0 53 0 0 53
+2 * 823 0 823 0 0 3 0 0 3
+2 * 823 823
+1 * 823 823

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1655 0 1655
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 +1 1655 1655
+4 * 1655
+3 * 1655 0 1655
cob=(5)
cfi=(8)
cfn=(164)
calls=1655 0x387e4bb2f0 0 
* * 179094 44312 19801 23 4 0 23 4 0 43783 1422 1655
* * 1655 1655 0 1 1 0 1 1 0 0 0 1655
+5 * 1655 1655
+1 * 1655 1655

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1655 0 1655
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 +1 1655 1655
+4 * 1655
+3 * 1655 0 1655
cob=(5)
cfi=(8)
cfn=(164)
calls=1655 0x387e4bb2f0 0 
* * 213538 56731 30604 2 1 0 2 1 0 52637 91 1655
* * 1655 1655 0 0 0 0 0 0 0 0 0 1655
+5 * 1655 1655
+1 * 1655 1655

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 49 2 0 49 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 49 1 0 49 140 5 17
+5 * 18 18
+1 * 18 18

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +10 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1646 0x404829 -26 
* * 1334698 469538 459666 25 3 4 25 3 4 56548 2245 3288 411
+5 +1 1646 1646
+1 * 1646 1646

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 49 2 0 49 140 5 17
+5 * 18 18
+1 * 18 18

fn=(234)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 6 17
+5 * 18 18
+1 * 18 18

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +2 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646 1 0 0 1
cfn=(50)
calls=1646 0x404484 107 
* * 1357742 477768 467896 25 3 4 25 3 4 56548 2245 3288 411
+5 * 1646 1646
+1 * 1646 1646

fn=(230)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 6 17
+5 * 18 18
+1 * 18 18

fn=(52)
0x404829 91 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +2 1646 1646 0 1 0 0 1
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1646 0x404a36 450 
* * 1311654 461308 451436 24 3 4 24 3 4 56548 2245 3288 411
+5 * 1646 1646
+1 * 1646 1646

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +2 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1646 0x40439c 107 
* * 1357742 477768 467896 7 0 103 7 0 103 56548 2230 3288
+5 * 1646 1646
+1 * 1646 1646

fn=(116)
0x40439c 107 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +10 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1646 0x4047d7 -26 
* * 1334698 469538 459666 7 0 103 7 0 103 56548 2230 3288
+5 +1 1646 1646
+1 * 1646 1646

fn=(118)
0x4047d7 91 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +2 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1646 0x4049e2 450 
* * 1311654 461308 451436 7 0 103 7 0 103 56548 2230 3288
+5 * 1646 1646
+1 * 1646 1646

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 49 2 0 49 140 5 17
+5 +1 18 18
+1 * 18 18

fl=(2)
fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 1655 0 1655 1 0 0 1
+1 * 1655
+3 * 1655
+4 * 1655 0 1655 1 0 0 1
+4 * 1655 0 1655
+4 0 1655 1655
+5 0 1655 0 0 0 0 0 0 0 0 1655
+2 0 1655 1655
+4 0 1655 1655
+4 0 1655
+5 0 1655
+3 0 1655
+3 0 1655 0 1655
fi=(6) ???
cfi=(5)
cfn=(26)
calls=1655 0x404730 99 
* 0 532571 91243 92440 24 23 16 24 23 16 78957 1238 3310
+5 0 1655
fi=(6)
jump=1655 +7 0 
* 0 
+7 0 1655 1655
+1 0 1655 1655

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+4 * 1646 0 1646
+4 * 1646
+4 * 1646 0 0 1 0 0 1
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1646 0x404468 726 
* * 16460 8230 6584 1 0 0 1
+5 * 1646 1646
+4 * 1646 1646
+1 * 1646 1646

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+3 * 1646 0 1646
+4 * 1646
+4 * 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(10)
cfn=(44)
calls=1646 0x404468 726 
* * 16460 8230 6584
+5 * 1646 1646
+4 * 1646 1646
+1 * 1646 1646

fn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
0x403a0a 134 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1646 0x4042e2 -45 
* * 59256 21398 23044 5 0 0 5
+5 +1 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=1646 0x40432a +43 
* * 577148 109554 97656 25 11 65 25 11 65 75523 3164 3292
+5 * 1646
jump=1646 +28 * 
* * 
+28 * 1646
+4 * 1646 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(88)
0x4042e2 90 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646 1 0 0 1
cfi=(4)
cfn=(90)
calls=1646 0x4047b2 +24 
* * 29628 9876 11522 3 0 0 3
+5 * 1646 1646
+4 * 1646 0 1646
+7 * 1646 1646
+4 * 1646 0 1646
+8 * 1646 1646
+4 * 1646 0 1646
+8 +1 1646 1646
+1 * 1646 1646

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646
+4 +2 1646 1646
+4 * 1646 1646 0 1 0 0 1
+4 * 1646
+3 * 1646 1646
+4 * 1646 1646
+3 * 1646
+3 * 1646
+3 * 1646
+4 * 1646
+3 * 1646 1646
+4 * 1646 1646
+3 -1 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=1646 0x403ce6 +11 
* * 224212 60536 36132 24 5 0 24 5 0 45206 1414 3292
+5 +1 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1646 0x4031b8 -82 
* * 37858 13168 13168 1 0 0 1
+5 * 1646
jump=1646 +28 * 
* * 
+28 * 1646
+4 * 1646 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(172)
0x4031b8 79 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfi=(4)
cfn=(174)
calls=1646 0x403ccc +42 
* * 23044 8230 8230
+5 * 1646 1646
+1 * 1646 1646

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(10)
0x402f54 645 3328 0 3328 1 0 0 1
+1 * 3328
+3 * 3328 0 3328
+4 +1 3328 3328
+4 * 3328 3328 0 0 2 0 0 2
+4 * 3328
+3 * 3328 3328
+4 * 3328 3328
+3 * 3328
+3 * 3328
+3 * 3328
+4 * 3328 3328
+1 * 3328 3328

fn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
0x40325e 113 3319 0 3319 1 0 0 1
+1 * 3319
+3 * 3319 0 3319
+4 +1 3319 3319
+4 * 3319 3319
+1 * 3319 3319

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664 0 1664 0 0 1 0 0 1
+4 +1 1664 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 1664 0 1664 1 0 0 1
+1 * 1664
+3 * 1664 0 1664 1 0 0 1
+4 +1 1664 1664
+4 * 1664 1664
+1 * 1664 1664

fn=(200)
0x402eda 901 823 0 823
+1 * 823
+3 * 823
+4 * 823 0 823
+4 * 823 0 823
+4 +2 823 823
+4 * 823 823
+4 * 823 823
+4 * 823 823
+4 * 823
+3 * 823 0 0 0 0 0 0 0 0 823 10
jcnd=9/823 +51 +10 
* * 
+2 +3 814 814
+4 * 814 814
+4 * 814 814
+4 -1 814 814
+4 * 814
+3 * 814
+3 * 814 0 814
cfi=(3)
cfn=(222)
calls=814 0x403373 215 
* * 30932 10582 11396 0 52 2 0 52 2 814 2
+5 +2 814 814
+4 * 814 814
+4 * 814
+4 * 814 814
+4 * 814 0 814
+4 * 814
jump=814 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202)
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 14668 4592 4017 39 10 10 39 10 10 955 72 53
+5 +2 823 823
+1 * 823 823

fn=(4)
0x4030b2 310 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646 0 1646
+2 * 1646 0 1646
+2 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646 1 0 0 1
+4 * 1646 0 1646
+4 +2 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(6)
calls=1646 0x403b08 117 
* * 9876 4938 3292 1 0 1 1 0 1
+5 * 1646
+3 * 1646 0 1646
cfi=(3)
cfn=(8)
calls=1646 0x403afa -88 
* * 9876 4938 3292 1 0 0 1
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(10)
calls=1646 0x402f54 645 
* * 21398 9876 3292 1 1 0 1 1
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=1646 0x403b16 134 
* * 693060 151709 144660 32 22 12 32 22 12 80259 1197 3292
+5 +4 1646 1646 0 1 0 0 1
+4 * 1646
+3 * 1646 0 1646
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=1646 0x40333c 113 
* * 9876 4938 3292 2 0 0 2
+5 * 1646
+3 * 1646 1646
+4 * 1646 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(42)
calls=1646 0x403ba4 565 
* * 41150 16460 13168 3 0 0 3
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(46)
calls=1646 0x403b74 547 
* * 41150 16460 13168
+5 * 1646
+3 * 1646
+3 * 1646
+3 * 1646
+3 * 1646 0 1646 1 0 0 1
cfi=(11)
cfn=(48)
calls=1646 0x403bd5 -60 
* * 1382432 485998 477772 26 3 4 26 3 4 56548 2245 3288 411
+5 -3 1646 1646
+4 * 1646 0 1646
+4 * 1646
jump=1646 +28 +4 
* * 
+28 +4 1646
+4 * 1646 1646
+1 * 1646 1646
+2 * 1646 1646
+2 * 1646 1646
+1 * 1646 1646

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+4 * 1646 0 1646
+4 * 1646
+4 * 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1646 0x404380 726 
* * 16460 8230 6584 1 0 0 1
+5 * 1646 1646
+4 * 1646 1646
+1 * 1646 1646

fn=(178)
0x402e74 414 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646 1 0 0 1
+4 +2 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(40)
calls=1646 0x40333c 113 
* * 9876 4938 3292
+5 * 1646
+3 * 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+3 -1 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1646 0x40334a 148 
* * 51026 16460 19752 2 0 0 2
+5 +1 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=1646 0x4032ca 159 
* * 342546 104202 68326 4 1 0 4 1 0 54046 79 3292
+5 * 1646
jump=1646 +28 * 
* * 
+28 * 1646 0 0 1 0 0 1
+4 * 1646 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(210)
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82)
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1655 0 1655 1 0 0 1
+1 * 1655 0 0 1 0 0 1
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 0 1655 1655
+5 0 1655 0 0 0 0 0 0 0 0 1655
+2 0 1655 1655
+4 0 1655 1655
+4 0 1655
+5 0 1655
+3 0 1655
+3 0 1655 0 1655
fi=(6)
cfi=(5)
cfn=(100)
calls=1655 0x40461a 99 
* 0 512980 82253 80185 38 20 71 38 20 71 74397 3222 3310
+5 0 1655
fi=(6)
jump=1655 +7 0 
* 0 
+7 0 1655 1655
+1 0 1655 1655

fn=(144)
0x402d9a 770 1021343 0 1021343
+1 * 1021343
+3 * 1021343 0 1021343
+4 * 1021343 0 1021343
+4 +1 1021343 1021343
+4 * 1021343 1021343
+3 * 1021343 1021343
+4 * 1021343
+4 * 1021343
+3 * 1021343 1021343
+1 * 1021343 1021343

fn=(146)
0x402dba 770 1021343 0 1021343
+1 * 1021343
+3 * 1021343 0 1021343 1 0 0 1
+4 * 1021343 0 1021343
+4 +1 1021343 1021343
+4 * 1021343 1021343
+3 * 1021343 1021343
+4 * 1021343
+4 * 1021343
+3 * 1021343 1021343
+1 * 1021343 1021343

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfi=(4)
cfn=(194)
calls=1646 0x403d7e +42 
* * 23044 8230 8230 1 0 0 1
+5 * 1646 1646
+1 * 1646 1646

fn=(254)
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(186)
0x4032ca 159 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646
+4 +2 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646 1646
+4 * 1646 1646
+3 * 1646
+3 * 1646
+3 * 1646
+4 * 1646
+3 * 1646 1646
+4 * 1646 1646
+3 -1 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1646 0x403d98 +11 
* * 258600 72928 46928 2 1 0 2 1 0 54046 79 3292
+5 +1 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(192)
calls=1646 0x403296 -82 
* * 37858 13168 13168 1 0 0 1
+5 * 1646
jump=1646 +28 * 
* * 
+28 * 1646
+4 * 1646 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(2)
0x402d74 645 6620 0 6620 1 0 0 1
+1 * 6620
+3 * 6620 0 6620 0 0 1 0 0 1
+4 +1 6620 6620
+4 * 6620 6620 0 1 1 0 1 1
+4 * 6620
+3 * 6620 6620
+4 * 6620 6620
+3 * 6620
+3 * 6620
+3 * 6620
+4 * 6620 6620
+1 * 6620 6620

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +2 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(22)
calls=1646 0x404236 -14 
* * 556442 99037 98572 26 22 8 26 22 8 80259 1197 3292
+5 * 1646 1646
+4 * 1646 0 1646
+3 +1 1646 1646
+4 * 1646 1646 0 1 0 0 1
+3 * 1646 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+3 * 1646 1646
+4 * 1646
+4 * 1646
+3 * 1646 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+1 * 1646 1646

fn=(94)
0x40432a 179 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +2 1646 1646
+4 * 1646 1646 0 1 0 0 1
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(96)
calls=1646 0x403fbe -14 
* * 535998 89802 86134 24 11 65 24 11 65 75523 3164 3292
+5 * 1646 1646
+4 * 1646 0 1646
+3 +1 1646 1646
+4 * 1646 1646
+3 * 1646 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+3 * 1646 1646
+4 * 1646
+4 * 1646
+3 * 1646 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+1 * 1646 1646

fn=(244)
0x402f7a 901 823 0 823
+1 * 823
+3 * 823 0 0 1 0 0 1
+4 * 823 0 823
+4 * 823 0 823
+4 +2 823 823
+4 * 823 823
+4 * 823 823
+4 * 823 823
+4 * 823
+3 * 823 0 0 0 0 0 0 0 0 823
jcnd=9/823 +51 +10 
* * 
+2 +3 814 814
+4 * 814 814
+4 * 814 814
+4 -1 814 814
+4 * 814
+3 * 814
+3 * 814 0 814
cfi=(3)
cfn=(264)
calls=814 0x4036b1 215 
* * 30932 10582 11396 0 51 38 0 51 38 814
+5 +2 814 814
+4 * 814 814
+4 * 814
+4 * 814 814
+4 * 814 0 814
+4 * 814
jump=814 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246)
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 13871 4374 3841 19 2 62 19 2 62 793 67 53
+5 +2 823 823
+1 * 823 823

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40)
0x40333c 113 3319 0 3319 1 0 0 1
+1 * 3319
+3 * 3319 0 3319 1 0 0 1
+4 +1 3319 3319
+4 * 3319 3319
+1 * 3319 3319

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+3 * 1646 0 1646
+4 * 1646
+4 * 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(10)
cfn=(110)
calls=1646 0x404380 726 
* * 16460 8230 6584
+5 * 1646 1646
+4 * 1646 1646
+1 * 1646 1646

fn=(148)
0x402df4 414 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646 1 0 0 1
+4 +2 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(106)
calls=1646 0x40325e 113 
* * 9876 4938 3292
+5 * 1646
+3 * 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+3 -1 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1646 0x40326c 148 
* * 51026 16460 19752 4 0 0 4
+5 +1 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(156)
calls=1646 0x4031ec 159 
* * 308158 91810 57530 27 5 0 27 5 0 45206 1414 3292
+5 * 1646
jump=1646 +28 * 
* * 
+28 * 1646 0 0 1 0 0 1
+4 * 1646 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(158)
0x403ce6 171 1655 0 1655 1 0 0 1
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 +2 1655 1655
+5 * 1655 0 0 0 0 0 0 0 0 1655
+2 +1 1655 1655
+4 * 1655 1655
+4 * 1655 1655
+4 * 1655
+3 * 1655
+3 * 1655 0 1655
cfi=(5)
cfn=(160)
calls=1655 0x4044d6 -65 
* * 198954 50932 28076 24 5 0 24 5 0 43783 1422 3310
+5 +1 1655 1655
+1 * 1655 1655

fn=(12)
0x403b16 134 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1646 0x4043ca -45 
* * 59256 21398 23044 4 0 4 4 0 4
+5 +1 1646 1646 0 1 0 0 1
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(20)
calls=1646 0x404412 +43 
* * 597592 118789 110094 27 22 8 27 22 8 80259 1197 3292
+5 * 1646
jump=1646 +28 * 
* * 
+28 * 1646
+4 * 1646 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(14)
0x4043ca 90 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646 0 0 1 0 0 1
+4 * 1646 0 1646
+4 +1 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(4)
cfn=(16)
calls=1646 0x404804 +24 
* * 29628 9876 11522 2 0 1 2 0 1
+5 * 1646 1646
+4 * 1646 0 1646 0 0 2 0 0 2
+7 * 1646 1646
+4 * 1646 0 1646 1 0 0 1
+8 * 1646 1646
+4 * 1646 0 1646
+8 +1 1646 1646
+1 * 1646 1646

fn=(80)
0x402ff4 310 1646 0 1646 1 0 0 1
+1 * 1646
+3 * 1646 0 1646
+2 * 1646 0 1646
+2 * 1646 0 1646
+1 * 1646 0 0 1 0 0 1
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +2 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(82)
calls=1646 0x4039fc 117 
* * 9876 4938 3292 2 0 0 2
+5 * 1646
+3 * 1646 0 1646
cfi=(3)
cfn=(84)
calls=1646 0x4039ed -88 
* * 9876 4938 3292
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(2)
calls=1646 0x402d74 645 
* * 21398 9876 3292
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646
+3 * 1646 0 1646 1 0 0 1
cfn=(86)
calls=1646 0x403a0a 134 
* * 672616 142474 132222 31 11 65 31 11 65 75523 3164 3292
+5 +4 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(106)
calls=1646 0x40325e 113 
* * 9876 4938 3292 1 0 0 1
+5 * 1646
+3 * 1646 1646
+4 * 1646 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(108)
calls=1646 0x403a98 565 
* * 41150 16460 13168 2 0 0 2
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(112)
calls=1646 0x403a68 547 
* * 41150 16460 13168
+5 * 1646
+3 * 1646
+3 * 1646
+3 * 1646
+3 * 1646 0 1646
cfi=(11)
cfn=(114)
calls=1646 0x403ac9 -60 
* * 1382432 485998 477772 7 0 103 7 0 103 56548 2230 3288
+5 -3 1646 1646
+4 * 1646 0 1646
+4 * 1646
jump=1646 +28 +4 
* * 
+28 +4 1646
+4 * 1646 1646
+1 * 1646 1646
+2 * 1646 1646
+2 * 1646 1646
+1 * 1646 1646

fn=(188)
0x403d98 171 1655 0 1655 1 0 0 1
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 +2 1655 1655
+5 * 1655 0 0 0 0 0 0 0 0 1655 9
+2 +1 1655 1655
+4 * 1655 1655
+4 * 1655 1655
+4 * 1655
+3 * 1655
+3 * 1655 0 1655
cfi=(5)
cfn=(190)
calls=1655 0x40452a -65 
* * 233398 63351 38879 2 1 0 2 1 0 52637 91 3310
+5 +1 1655 1655
+1 * 1655 1655

fl=(12)
fn=(54)
0x404a36 450 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646 1 0 0 1
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +10 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1646 0x404c38 288 
* * 24690 9876 8230 3 0 0 3
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(56)
calls=1646 0x404c38 288 
* * 24690 9876 8230
+5 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1646 0x404c52 -36 
* * 1226062 431680 421808 20 3 4 20 3 4 56548 2245 3288 411
+5 +1 1646
+4 * 1646 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(60)
0x404c52 424 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+2 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +4 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1646 0x40492d 277 
* * 24690 9876 8230 2 0 0 2
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1646 0x404d9d 277 
* * 41150 14814 13168 2 0 1 2 0 1
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(66)
calls=1646 0x404d9d 277 
* * 41150 14814 13168
+5 * 1646
+3 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=1646 0x404db7 -49 
* * 1072984 380654 370782 15 3 3 15 3 3 56548 2245 3288 411
+5 +1 1646
+4 * 1646 1646
+1 * 1646 1646
+2 * 1646 1646
+1 * 1646 1646

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 49 0 0 49 140 5 17
+5 +1 18 18
+1 * 18 18

fn=(62)
0x40492d 277 1700 0 1700 1 0 0 1
+1 * 1700
+3 * 1700
+4 * 1700 0 1700
+4 +1 1700 1700
+4 * 1700
+3 * 1700 0 1700 1 0 0 1
cfi=(13)
cfn=(64)
calls=1700 -33 -66 
* * 10200 5100 3400
+5 * 1700 1700
+1 * 1700 1700

fn=(66)
0x404d9d 277 3292 0 3292
+1 * 3292
+3 * 3292
+4 * 3292 0 3292
+4 +1 3292 3292
+4 * 3292
+3 * 3292 0 3292
cfi=(13)
cfn=(68)
calls=3292 0x404f1a -58 
* * 52672 19752 16460 2 0 1 2 0 1
+5 * 3292 3292
+1 * 3292 3292

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 49 0 0 49 140 5 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +10 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1646 0x404bc6 288 
* * 24690 9876 8230 3 0 0 3
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(122)
calls=1646 0x404bc6 288 
* * 24690 9876 8230
+5 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1646 0x404be0 -36 
* * 1226062 431680 421808 4 0 103 4 0 103 56548 2230 3288
+5 +1 1646
+4 * 1646 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(128)
0x404878 277 1700 0 1700
+1 * 1700
+3 * 1700
+4 * 1700 0 1700 1 0 0 1
+4 +1 1700 1700
+4 * 1700
+3 * 1700 0 1700
cfi=(13)
cfn=(130)
calls=1700 -33 -66 
* * 10200 5100 3400 0 0 1 0 0 1
+5 * 1700 1700
+1 * 1700 1700

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 3292 0 3292
+1 * 3292
+3 * 3292
+4 * 3292 0 3292
+4 +1 3292 3292
+4 * 3292
+3 * 3292 0 3292
cfi=(13)
cfn=(134)
calls=3292 0x404e98 -58 
* * 52672 19752 16460 2 0 0 2
+5 * 3292 3292
+1 * 3292 3292

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +8 1646 0 1646
+4 +3 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1646 0x404eb5 -22 
* * 1048294 372424 360906 1 0 103 1 0 103 56548 2230 3288
+5 +1 1646 1646
+1 * 1646 1646

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 49 1 0 49 140 5 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 3292 0 3292 1 0 0 1
+1 * 3292
+3 * 3292
+4 * 3292 0 3292
+4 +1 3292 3292
+4 * 3292
+3 * 3292 0 3292
cfi=(13)
cfn=(124)
calls=3292 0x404d36 -77 
* * 19752 9876 6584 2 0 0 2
+5 * 3292 3292
+1 * 3292 3292

fn=(56)
0x404c38 288 3292 0 3292 1 0 0 1
+1 * 3292
+3 * 3292
+4 * 3292 0 3292 1 0 0 1
+4 +1 3292 3292
+4 * 3292
+3 * 3292 0 3292
cfi=(13)
cfn=(58)
calls=3292 0x404d8f -77 
* * 19752 9876 6584 1 0 0 1
+5 * 3292 3292
+1 * 3292 3292

fn=(74)
0x404f37 368 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664 1 0 0 1
+4 * 1664 0 1664
+4 * 1664 0 1664
+4 +2 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+5 * 1664 0 0 0 0 0 0 0 0 1664
jcnd=9/1664 +33 +2 
* * 
+2 +1 1655 1655
+4 * 1655
+8 * 1655 1655
+4 * 1655 1655
+4 * 1655
+3 * 1655 0 0 1 0 0 1
+3 * 1655 0 1655 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1655 0x3877c83840 0 
* * 1004054 354897 351592 11 2 51 11 2 51 55024 2250 1650 411
* * 1655 1655 0 1 1 0 1 1 0 0 0 1655
+5 +1 1664 1664
+4 * 1664
+8 * 1664 1664
+4 * 1664
+3 +1 1664 1664
+1 * 1664 1664

fn=(140)
0x404eb5 368 1664 0 1664
+1 * 1664
+3 * 1664
+4 * 1664 0 1664 1 0 0 1
+4 * 1664 0 1664
+4 * 1664 0 1664 0 0 1 0 0 1
+4 +2 1664 1664
+4 * 1664 1664
+4 * 1664
+3 * 1664
+3 * 1664
+4 * 1664 0 1664
+4 +1 1664 1664
+5 * 1664 0 0 0 0 0 0 0 0 1664
jcnd=9/1664 +33 +2 
* * 
+2 +1 1655 1655
+4 * 1655
+8 * 1655 1655
+4 * 1655 1655
+4 * 1655
+3 * 1655
+3 * 1655 0 1655
cob=(2)
cfi=(9)
cfn=(78)
calls=1655 0x3877c83840 0 
* * 1004054 354897 351592 0 0 104 0 0 104 55024 2236 1650
* * 1655 1655 0 0 0 0 0 0 0 0 0 1655
+5 +1 1664 1664
+4 * 1664
+8 * 1664 1664
+4 * 1664
+3 +1 1664 1664
+1 * 1664 1664

fn=(72)
0x404db7 379 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646 1 0 0 1
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +8 1646 0 1646
+4 +3 1646 1646
+4 * 1646 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(74)
calls=1646 0x404f37 -22 
* * 1048294 372424 360906 14 3 3 14 3 3 56548 2245 3288 411
+5 +1 1646 1646
+1 * 1646 1646

fn=(126)
0x404be0 424 1646 0 1646
+1 * 1646
+3 * 1646 0 1646
+2 * 1646 0 1646
+1 * 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 * 1646 0 1646
+4 +4 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(128)
calls=1646 0x404878 277 
* * 24690 9876 8230 1 0 0 1
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(132)
calls=1646 0x404d44 277 
* * 41150 14814 13168 2 0 0 2
+5 * 1646
+3 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(132)
calls=1646 0x404d44 277 
* * 41150 14814 13168
+5 * 1646
+3 * 1646
+3 * 1646
+3 * 1646 0 1646
cfn=(138)
calls=1646 0x404d5e -49 
* * 1072984 380654 370782 1 0 103 1 0 103 56548 2230 3288
+5 +1 1646
+4 * 1646 1646
+1 * 1646 1646
+2 * 1646 1646
+1 * 1646 1646

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 3292 0 3292 1 0 0 1
+1 * 3292
+3 * 3292 0 3292
+4 +1 3292 3292
+4 * 3292 3292
+1 * 3292 3292

fn=(110)
0x404380 726 3292 0 3292 1 0 0 1
+1 * 3292
+3 * 3292 0 3292
+4 * 3292 0 3292
+4 * 3292 3292
+4 * 3292 3292
+3 * 3292 3292
+4 * 3292 0 3292
+3 * 3292 3292
+1 * 3292 3292

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 3292 0 3292 1 0 0 1
+1 * 3292
+3 * 3292 0 3292
+4 +1 3292 3292
+4 * 3292 3292
+1 * 3292 3292

fn=(44)
0x404468 726 3292 0 3292
+1 * 3292
+3 * 3292 0 3292
+4 * 3292 0 3292
+4 * 3292 3292
+4 * 3292 3292
+3 * 3292 3292
+4 * 3292 0 3292 1 0 0 1
+3 * 3292 3292
+1 * 3292 3292

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1655 0 1655 1 0 0 1
+1 * 1655
+3 * 1655 0 1655
+4 * 1655 0 1655 1 0 0 1
+4 * 1655 1655
+1 * 1655 1655

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1655 0 1655 1 0 0 1
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 +4 1655 1655
+4 * 1655 1655
+4 * 1655
+3 * 1655
+3 * 1655 0 1655
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1655 0x40454c -14 
* * 9930 3310 4965 1 0 0 1
+5 +2 1655 1655
+1 * 1655 1655

fn=(150)
0x40326c 148 1655 0 1655
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 +3 1655 1655 0 1 0 0 1
+4 * 1655 1655
+4 * 1655
+3 * 1655
+3 * 1655 0 1655
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1655 0x403d1a -29 
* * 29790 9930 11585 3 0 0 3
+5 +1 1655 1655
+1 * 1655 1655

fn=(180)
0x40334a 148 1655 0 1655
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 +3 1655 1655
+4 * 1655 1655
+4 * 1655
+3 * 1655
+3 * 1655 0 1655
cfn=(182)
calls=1655 0x403dcc -29 
* * 29790 9930 11585 2 0 0 2
+5 +1 1655 1655
+1 * 1655 1655

fn=(152)
0x403d1a 122 1655 0 1655 1 0 0 1
+1 * 1655
+3 * 1655
+4 * 1655 0 1655
+4 * 1655 0 1655
+4 +4 1655 1655
+4 * 1655 1655
+4 * 1655
+3 * 1655
+3 * 1655 0 1655
cfn=(154)
calls=1655 0x4044f8 -14 
* * 9930 3310 4965 2 0 0 2
+5 +2 1655 1655
+1 * 1655 1655

fn=(184)
0x40454c 112 1655 0 1655 1 0 0 1
+1 * 1655
+3 * 1655 0 1655
+4 * 1655 0 1655
+4 * 1655 1655
+1 * 1655 1655

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 2609 481 488 0 1 8 0 1 8 353 41 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 1 5 0 1 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 49 3 0 49 131 5 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1278 353 226 1 0 0 1 0 0 246 21 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 3462 726 671 16 9 6 16 9 6 529 58 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 6 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1222 326 219 1 0 0 1 0 0 232 8 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 3310 0 3310 1 0 0 1
+5 0 3310 0 3310
+5 0 3310
+3 0 3310 0 3310
+5 0 3310
+4 0 3310 3310 0 0 1 0 0 1
+7 0 3310 3310 0 0 1 0 0 1
+3 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310 1
+6 0 3310 3310 0 0 1 0 0 1
+7 0 3310 3310 0 1 1 0 1 1
+4 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310
+2 0 3310 3310 0 0 1 0 0 1
+3 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310
jcnd=3310/3310 +97 0 
* 0 
+18 0 3310
+3 0 3310
+3 0 3310 0 3310
cfn=(38) _int_malloc
calls=3310 0x3877c79a00 0 
* 0 767511 97366 116355 47 35 86 47 35 86 113634 4434
+5 0 3310
+3 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310
+2 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310
+2 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310 13
+2 0 3310 3310
+7 0 3310 0 0 0 0 0 0 0 0 3310
jcnd=3310/3310 +13 0 
* 0 
+13 0 3310 0 3310
+2 0 3310 0 0 0 0 0 0 0 0 3310 12
+6 0 3310
+3 0 3310 3310
+4 0 3310 3310
+5 0 3310 3310
+5 0 3310
+4 0 3310 3310
+1 0 3310 0 0 1 0 0 1
+5 0 3310 3310 0 0 1 0 0 1
+7 0 3310 0 0 0 0 0 0 0 0 3310
jcnd=3310/3310 +14 0 
* 0 
+14 0 3310 0 3310 1 0 0 1
+3 0 3310 0 0 0 0 0 0 0 0 3310
+6 0 3310
jump=3310 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 3310 0 3310 1 0 0 1
+2 0 3310
+3 0 3310
+3 0 3310 0 3310
+2 0 3310
+3 0 3310 0 3310
+1 0 3310
+3 0 3310 0 3310
+1 0 3310
+3 0 3310
+4 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310
+6 0 3310
+4 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310 4
jcnd=10/3310 0x3877c838d1 0 
* 0 
+2 0 3300
+3 0 3300
+3 0 3300
+3 0 3300
+3 0 3300
+3 0 3300 0 0 0 0 0 0 0 0 3300
jcnd=3300/3300 +41 0 
* 0 
+41 0 3300 0 0 1 0 0 1
+3 0 3300 0 0 0 0 0 0 0 0 3300
jcnd=3300/3300 0x3877c839c0 0 
* 0 
+24 0 3300
+3 0 3300
+4 0 3300
+3 0 3300
+3 0 3300
+3 0 3300
+3 0 3300
+3 0 3300 0 0 0 0 0 0 0 0 3300 1646
jcnd=1660/3300 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1650
+10 0 1650 1650 0 0 1 0 0 1
+3 0 1650
+4 0 1650 0 1650
+3 0 1650
+4 0 1650
+4 0 1650 0 0 0 0 0 0 0 0 1650
jcnd=1650/1650 -18 0 
* 0 
-18 0 5006 5006
+3 0 5006
+4 0 5006 0 5006
+3 0 5006
+4 0 5006
+4 0 5006 0 0 0 0 0 0 0 0 5006 8
jcnd=3356/5006 -18 0 
* 0 
+2 0 3310
+4 0 3310
+3 0 3310 3310
+1 0 3310 3310
+1 0 3310 3310
+2 0 3310 3310 0 1 0 0 1
+2 0 3310 3310
0x3877c839c0 0 3300 0 0 1 0 0 1
+3 0 3300
+3 0 3300
+3 0 3300
+4 0 3300 0 3300 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=3300 0x3877c89b20 0 
* 0 1821082 686588 679988 6 1 154 6 1 154 86862 2828 3300 411
+5 0 3300
jump=3300 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 3310 3310 0 1 1 0 1 1
+7 0 3310 3310 0 0 1 0 0 1
+3 0 3310
+3 0 3310 0 0 1 0 0 1 0 0 3310
+6 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310
+6 0 3310 3310
+4 0 3310
+4 0 3310
+2 0 3310 0 0 0 0 0 0 0 0 3310
+2 0 3310
+2 0 3310
+7 0 3310 0 0 0 0 0 0 0 0 3310
jcnd=3310/3310 +14 0 
* 0 
+14 0 3310
+2 0 3310
cfn=(170) _int_free
calls=3310 0x3877c78650 0 
* 0 329742 87803 50405 21 2 0 21 2 0 79870 1513

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 8
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 2
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 3310 0 3310 1 0 0 1
+2 0 3310 0 3310
+2 0 3310 0 3310
+2 0 3310
+3 0 3310 0 3310
+2 0 3310 0 3310
+1 0 3310 0 3310
+1 0 3310
+3 0 3310
+4 0 3310 3310
+4 0 3310 0 3310
+4 0 3310
+3 0 3310
+4 0 3310
+3 0 3310
+3 0 3310
+3 0 3310 0 0 1 0 0 1 0 0 3310
+6 0 3310
+4 0 3310 0 0 0 0 0 0 0 0 3310
+6 0 3310
+4 0 3310 0 0 0 0 0 0 0 0 3310
+6 0 3310 3310
+7 0 3310 0 0 0 0 0 0 0 0 3310 2
jcnd=3186/3310 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 3186
+2 0 3186 0 0 0 0 0 0 0 0 3186
+6 0 3186 3186 0 1 0 0 1
+4 0 3186
+3 0 3186
+2 0 3186 0 0 0 0 0 0 0 0 3186
jcnd=3186/3186 0x3877c78a40 0 
* 0 
+6 0 3186 3186
+4 0 3186
+3 0 3186 0 0 0 0 0 0 0 0 3186
+6 0 3186 3186
+5 0 3186
+4 0 3186 0 0 0 0 0 0 0 0 3186
jcnd=3186/3186 0x3877c7907c 0 
* 0 
+6 0 3186 3186
+5 0 3186
+4 0 3186 0 0 0 0 0 0 0 0 3186
+6 0 3186
+4 0 3186 0 0 1 0 0 1 0 0 3186
+6 0 3186
+4 0 3186 3186
+7 0 3186 0 0 0 0 0 0 0 0 3186
+6 0 3186 3186
+6 0 3186
+2 0 3186 0 0 0 0 0 0 0 0 3186
+6 0 3186 3186
+4 0 3186 0 0 0 0 0 0 0 0 3186 6
jcnd=3181/3186 +70 0 
* 0 
+2 0 5 5
+3 0 5
+3 0 5
+3 0 5 5
+4 0 5 5
+4 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5 2
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=4/5 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 3186 3186 0 1 0 0 1
+4 0 3186 0 0 0 0 0 0 0 0 3186 1340
jcnd=1428/3186 0x3877c78bf0 0 
* 0 
+6 0 1758 1758 0 0 1 0 0 1
+6 0 1758 0 0 1 0 0 1 0 0 1758 71
jcnd=83/1758 0x3877c78a78 0 
* 0 
+6 0 1675 1675
+5 0 1675 1675
+5 0 1675 1675
+4 0 1675 0 0 0 0 0 0 0 0 1675
+6 0 1675 1675
+4 0 1675 0 0 0 0 0 0 0 0 1675
+6 0 1675 1675
+9 0 1675 0 1675
+4 0 1675 0 1675
+4 0 1675 0 0 0 0 0 0 0 0 1675 8
jcnd=1143/1675 +16 0 
* 0 
+2 0 532 532
+5 0 532
+3 0 532 0 0 1 0 0 1 0 0 532 10
jcnd=504/532 0x3877c78ee4 0 
* 0 
+6 0 1675
+3 0 1675
+4 0 1675 1675
+4 0 1675 1675
+4 0 1675 0 0 0 0 0 0 0 0 1675
-12 0 83
+4 0 83 83
+4 0 83 83
+4 0 83 0 0 0 0 0 0 0 0 83
+6 0 1758
+7 0 1758 0 1758
+4 0 1758 0 1758
+4 0 1758 0 0 0 0 0 0 0 0 1758 70
jcnd=441/1758 +18 0 
* 0 
+2 0 1317 0 1317
+8 0 1317 0 1317
+8 0 1317 0 1317
+4 0 1317
+3 0 1317 0 1317 1 0 0 1
+4 0 1317
+4 0 1317 0 1317
+4 0 1317 0 1317
+4 0 1317
+7 0 1317 0 0 0 0 0 0 0 0 1317
jcnd=1317/1317 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 1428
+7 0 1428 0 0 0 0 0 0 0 0 1428
jcnd=1428/1428 0x3877c78b20 0 
* 0 
0x3877c78a40 0 3186 0 0 1 0 0 1
+5 0 3186 3186
+4 0 3186 3186
+7 0 3186 0 0 0 0 0 0 0 0 3186
jcnd=3186/3186 +16 0 
* 0 
+16 0 3186 0 3186
+5 0 3186 0 0 0 0 0 0 0 0 3186
+6 0 3186
+3 0 3186
jump=3186 0x3877c7878f 0 
* 0 
+10 0 83 0 83
+6 0 83 0 0 1 0 0 1
jump=83 0x3877c78885 0 
* 0 
0x3877c78b20 0 3186 3186 0 1 0 0 1
+4 0 3186
+2 0 3186 0 0 0 0 0 0 0 0 3186
+6 0 3186 3186
+7 0 3186 0 0 0 0 0 0 0 0 3186
jcnd=3186/3186 +15 0 
* 0 
+15 0 3186 0 3186 1 0 0 1
+4 0 3186 0 0 0 0 0 0 0 0 3186 2
+6 0 3186
+4 0 3186 3186
+1 0 3186 3186
+1 0 3186 3186
+2 0 3186 3186
+2 0 3186 3186
+2 0 3186 3186
+2 0 3186 3186
0x3877c78bf0 0 1428 0 0 1 0 0 1
+3 0 1428 0 1428
+4 0 1428
+3 0 1428
+4 0 1428 0 1428 1 0 0 1
+4 0 1428
jump=1428 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 504 504 0 1 0 0 1
+5 0 504 0 0 0 0 0 0 0 0 504
+6 0 504 504
+5 0 504 0 504
+4 0 504 504
+5 0 504 0 504
+4 0 504
jump=504 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 3186 3186 0 1 1 0 1 1
+4 0 3186 0 0 1 0 0 1
+7 0 3186
+4 0 3186
+3 0 3186
+3 0 3186 0 0 0 0 0 0 0 0 3186
jcnd=3186/3186 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 3300 0 0 1 0 0 1
+7 0 3300
+3 0 3300
+3 0 3300 3300 0 0 1 0 0 1
+4 0 3300
+4 0 3300 0 0 0 0 0 0 0 0 0 0 3300 411
jump=408 0x3877c89be8 0 
* 0 
jump=420 0x3877c89bd0 0 
* 0 
jump=408 0x3877c89bb8 0 
* 0 
jump=408 +11 0 
* 0 
jump=408 0x3877c89c48 0 
* 0 
jump=414 0x3877c89c30 0 
* 0 
jump=416 0x3877c89c18 0 
* 0 
jump=418 0x3877c89c00 0 
* 0 
+11 0 408 408
+3 0 408
+4 0 408
+4 0 408 408
+4 0 408
+4 0 408 0 408
+4 0 408
+9 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408
+4 0 408
+4 0 408
+4 0 408 0 0 0 0 0 0 0 0 408
jcnd=8/408 0x3877c89c60 0 
* 0 
-40 0 84378 84378
+4 0 84378 0 84378 0 0 22 0 0 22
+4 0 84378 84378
+4 0 84378 0 84378 0 0 15 0 0 15
+4 0 84378 84378
+4 0 84378 0 84378 0 0 32 0 0 32
+4 0 84378 84378
+4 0 84378 0 84378
+4 0 84378
+4 0 84378
+4 0 84378 0 0 0 0 0 0 0 0 84378 2826
jcnd=3264/84378 0x3877c89c60 0 
* 0 
-32 0 414 414
+4 0 414 0 414
+4 0 414 414
+4 0 414 0 414
+4 0 414 414
+4 0 414 0 414
+4 0 414
+4 0 414
+4 0 414 0 0 0 0 0 0 0 0 414
jcnd=10/414 0x3877c89c60 0 
* 0 
-24 0 416 416
+4 0 416 0 416
+4 0 416 416
+4 0 416 0 416
+4 0 416
+4 0 416
+4 0 416 0 0 0 0 0 0 0 0 416
jcnd=8/416 0x3877c89c60 0 
* 0 
-16 0 418 418 0 1 0 0 1
+4 0 418 0 418
+4 0 418 0 0 1 0 0 1
+4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 2
jcnd=10/418 0x3877c89c60 0 
* 0 
+6 0 82734
+4 0 82734 82734
+3 0 82734 0 82734 0 0 1 0 0 1
+3 0 82734 82734
+4 0 82734 0 82734 0 0 34 0 0 34
+4 0 82734 82734
+4 0 82734 0 82734 0 0 49 0 0 49
+4 0 82734 82734
+4 0 82734 0 82734
+4 0 82734
jump=82734 -80 0 
* 0 
-30 0 408 408
+3 0 408 0 408
+3 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408 0 0 1 0 0 1
+4 0 408 408
+4 0 408 0 408
+4 0 408
jump=408 -80 0 
* 0 
-24 0 420 420
+4 0 420 0 420
+4 0 420 420
+4 0 420 0 420
+4 0 420 420
+4 0 420 0 420
+4 0 420
jump=420 -80 0 
* 0 
-16 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408
+4 0 408
jump=408 -80 0 
* 0 
+8 0 408 408
+3 0 408
+4 0 408 0 0 1 0 0 1
+4 0 408
+4 0 408
jump=408 -39 0 
* 0 
+9 0 420
+3 0 420 0 0 0 0 0 0 0 0 420
+6 0 420 420
+3 0 420
+4 0 420
jump=420 -72 0 
* 0 
+8 0 408
+4 0 408 408
+3 0 408 0 0 0 0 0 0 0 0 408
+2 0 408
+4 0 408
jump=408 -99 0 
* 0 
+11 0 418 418 0 1 0 0 1
+3 0 418
+4 0 418
+4 0 418
+4 0 418
jump=418 0x3877c89b78 0 
* 0 
+9 0 416 416
+3 0 416
+4 0 416
+4 0 416
+4 0 416
jump=416 0x3877c89b70 0 
* 0 
+9 0 414 414
+3 0 414
+4 0 414
+4 0 414
+4 0 414
jump=414 0x3877c89b68 0 
* 0 
+9 0 408 408
+3 0 408
+4 0 408
+4 0 408
+4 0 408
jump=408 0x3877c89b60 0 
* 0 
+9 0 3300 0 3300 1 0 0 1
+3 0 3300 3300

fn=(104) alloc_perturb
0x3877c77180 0 3165 3165 0 1 0 0 1
+6 0 3165
+2 0 3165 0 0 0 0 0 0 0 0 3165 2
+2 0 3165 3165

fn=(38)
0x3877c79a00 0 3310 0 3310 1 0 0 1
+2 0 3310
+3 0 3310 0 3310
+2 0 3310 0 3310
+2 0 3310 0 3310 0 0 1 0 0 1
+2 0 3310
+3 0 3310 0 3310
+1 0 3310 0 3310
+1 0 3310
+4 0 3310
+4 0 3310 0 0 0 0 0 0 0 0 3310
+6 0 3310
+4 0 3310
+6 0 3310
+3 0 3310
+4 0 3310
+4 0 3310
+4 0 3310
+3 0 3310 0 0 0 0 0 0 0 0 3310
+6 0 3310 3310 0 1 1 0 1 1
+7 0 3310 0 0 0 0 0 0 0 0 3310 5
jcnd=3188/3310 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 145 145
+6 0 145
+4 0 145
+2 0 145 0 0 0 0 0 0 0 0 145
+6 0 145
+3 0 145
+4 0 145 145
+1 0 145 145
+1 0 145 145
+2 0 145 145
+2 0 145 145
+2 0 145 145
+2 0 145 145
-14 0 3165
+4 0 3165 3165
+1 0 3165 3165
+1 0 3165 3165
+2 0 3165 3165
+2 0 3165 3165
+2 0 3165 3165
+2 0 3165 3165
+7 0 3205
+7 0 3205 0 0 1 0 0 1 0 0 3205 7
jcnd=2302/3205 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 11 0 0 11
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 2302 0 0 1 0 0 1
+3 0 2302
+4 0 2302
+4 0 2302 0 0 1 0 0 1 0 0 2302 5
jcnd=2116/2302 0x3877c7a1a4 0 
* 0 
+6 0 186
+3 0 186
+4 0 186
+4 0 186 0 0 0 0 0 0 0 0 186
+6 0 186
+3 0 186 0 186
+4 0 186 186
+6 0 186
+5 0 186 0 0 0 0 0 0 0 0 186
jcnd=186/186 +30 0 
* 0 
-11 0 2116 2116
+6 0 2116
+5 0 2116 0 0 0 0 0 0 0 0 2116 1
jcnd=2115/2116 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 921 249 195 8 2 0 8 2 0 191 30
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 3204 0 0 1 0 0 1
+3 0 3204
+3 0 3204
+3 0 3204
+4 0 3204
+3 0 3204
+4 0 3204 0 3204
+5 0 3204
+3 0 3204 0 3204
+4 0 3204 0 3204
+4 0 3204 0 3204
+5 0 3204
+3 0 3204
+3 0 3204
+3 0 3204
+3 0 3204
+4 0 3204
+4 0 3204 0 0 1 0 0 1
+4 0 3204 0 3204
+4 0 3204
+4 0 3204 0 3204
+5 0 3204 0 3204
+5 0 3204
+3 0 3204
+3 0 3204 0 3204
+5 0 3204
+5 0 3204
+3 0 3204 0 3204
+4 0 3204 0 3204
+4 0 3204
+6 0 3204 0 3204
+4 0 3204 0 3204
+5 0 3204 0 0 1 0 0 1
+3 0 3204
+3 0 3204
+3 0 3204
jump=3204 +87 0 
* 0 
+8 0 1366
+3 0 1366
+4 0 1366
+2 0 1366
+2 0 1366
+3 0 1366
+3 0 1366
+3 0 1366
+2 0 1366
+2 0 1366
+5 0 1366
+2 0 1366 1366 0 0 2 0 0 2
+4 0 1366
+3 0 1366
+4 0 1366 0 1366
+4 0 1366 0 1366
+8 0 1366
+7 0 1366 0 1366
+4 0 1366 0 1366 0 0 1 0 0 1
+4 0 1366 0 1366
+4 0 1366 0 0 0 0 0 0 0 0 1366
-38 0 1815
+3 0 1815
+4 0 1815 0 1815
+4 0 1815 0 1815
+8 0 1815
+7 0 1815 0 1815
+4 0 1815 0 1815 0 0 1 0 0 1
+4 0 1815 0 1815
+4 0 1815 0 0 0 0 0 0 0 0 1815
+6 0 6386 6386 0 1 0 0 1
+4 0 6386
+3 0 6386 0 0 0 0 0 0 0 0 6386 207
jcnd=3144/6386 0x3877c79ef0 0 
* 0 
+6 0 3242 3242
+4 0 3242 3242
+4 0 3242
+4 0 3242 0 0 0 0 0 0 0 0 3242
+6 0 3242 3242 0 1 0 0 1
+7 0 3242 0 0 0 0 0 0 0 0 3242
+6 0 3242
+4 0 3242
+7 0 3242 0 0 0 0 0 0 0 0 3242 6
jcnd=2332/3242 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 3221
+3 0 3221 0 3221
+4 0 3221 0 3221
+5 0 3221 0 0 0 0 0 0 0 0 3221 27
jcnd=40/3221 0x3877c7a090 0 
* 0 
+6 0 3181
+7 0 3181 0 0 0 0 0 0 0 0 3181 568
jcnd=1366/3181 0x3877c79c50 0 
* 0 
+6 0 1815 0 0 1 0 0 1
+3 0 1815
+4 0 1815
+4 0 1815 0 0 0 0 0 0 0 0 1815 526
jcnd=624/1815 0x3877c79db0 0 
* 0 
+6 0 1191
+3 0 1191
+4 0 1191
+2 0 1191
+2 0 1191
+3 0 1191
+3 0 1191
+8 0 1191
+3 0 1191
+2 0 1191
+2 0 1191
+4 0 1191 1191 0 0 1 0 0 1
+4 0 1191
+3 0 1191 0 0 1 0 0 1 0 0 1191 17
jcnd=1127/1191 0x3877c79e15 0 
* 0 
-36 0 624
+2 0 624
+2 0 624
+3 0 624
+3 0 624
+8 0 624
+3 0 624
+2 0 624
+2 0 624
+4 0 624 624
+4 0 624
+3 0 624 0 0 0 0 0 0 0 0 624
jcnd=624/624 0x3877c79e15 0 
* 0 
+6 0 64 64
+4 0 64
+4 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64 4
jcnd=48/64 +38 0 
* 0 
+2 0 16 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
jump=16 0x3877c79c73 0 
* 0 
+13 0 48 48
+4 0 48
+3 0 48 0 0 0 0 0 0 0 0 48
+2 0 48
+3 0 48 0 0 0 0 0 0 0 0 48 6
jcnd=16/48 0x3877c79ee0 0 
* 0 
+6 0 32 32
+4 0 32 0 32
+4 0 32 0 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32
jump=32 0x3877c79c73 0 
* 0 
-4 0 16 16
+4 0 16
jump=16 0x3877c79c73 0 
* 0 
+14 0 624 0 0 1 0 0 1
+3 0 624
+4 0 624
+4 0 624 0 0 0 0 0 0 0 0 624
+2 0 624
+3 0 624 0 0 1 0 0 1
+7 0 624
jump=624 0x3877c79d18 0 
* 0 
+78 0 1751 0 1751
+4 0 1751 0 1751
+4 0 1751
+3 0 1751
jump=1751 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 333
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 3
jcnd=385/406 0x3877c79ce1 0 
* 0 
+6 0 21 0 0 1 0 0 1
+3 0 21
+3 0 21
+3 0 21
+7 0 21 0 21
+4 0 21 0 21
+4 0 21
+3 0 21 0 21
+4 0 21 0 21 0 0 16 0 0 16
+4 0 21 0 21
+4 0 21 0 0 0 0 0 0 0 0 21 6
jcnd=10/21 +18 0 
* 0 
+2 0 11 0 11 0 0 2 0 0 2
+8 0 11 0 11
+8 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 21
+3 0 21
jump=21 0x3877c79ae3 0 
* 0 
+39 0 16 16
+4 0 16
jump=16 0x3877c79d9e 0 
* 0 
+12 0 3144 0 0 1 0 0 1
+7 0 3144
+3 0 3144 0 0 0 0 0 0 0 0 3144 38
jcnd=2282/3144 0x3877c7a0b0 0 
* 0 
+6 0 3128 3128 0 1 0 0 1
+4 0 3128
+3 0 3128
+3 0 3128
+2 0 3128
+4 0 3128
+3 0 3128
+3 0 3128
+2 0 3128
+2 0 3128
+2 0 3128
+2 0 3128 3128 0 0 1 0 0 1
+8 0 3128
+5 0 3128
+5 0 3128
+2 0 3128 0 0 0 0 0 0 0 0 3128
-2 0 1494
+2 0 1494 0 0 0 0 0 0 0 0 1494
+2 0 4622
+2 0 4622 0 0 0 0 0 0 0 0 4622 54
jcnd=1983/4622 +64 0 
* 0 
+2 0 2639
+8 0 2639
+3 0 2639
+3 0 2639 0 0 0 0 0 0 0 0 2639 68
jcnd=623/2639 0x3877c79fc0 0 
* 0 
-6 0 1234
+3 0 1234
+3 0 1234 0 0 0 0 0 0 0 0 1234 9
jcnd=809/1234 0x3877c79fc0 0 
* 0 
+2 0 2441
+2 0 2441 2441 0 0 1 0 0 1
+8 0 2441
+2 0 2441 0 0 0 0 0 0 0 0 2441 27
jcnd=1234/2441 -20 0 
* 0 
+2 0 1207
+2 0 1207
+5 0 1207
+3 0 1207
+3 0 1207
+2 0 1207
+2 0 1207
+5 0 1207 0 0 0 0 0 0 0 0 1207
+2 0 1207
+2 0 1207
+4 0 1207
+2 0 1207
+2 0 1207 0 0 0 0 0 0 0 0 1207 4
jcnd=1145/1207 -8 0 
* 0 
-8 0 13935
+4 0 13935
+2 0 13935
+2 0 13935 0 0 0 0 0 0 0 0 13935 823
jcnd=10977/13935 -8 0 
* 0 
-2 0 1983 0 0 1 0 0 1
+2 0 1983 0 0 0 0 0 0 0 0 1983 28
jcnd=1813/1983 -8 0 
* 0 
+2 0 3190 3190 0 0 5 0 0 5
+4 0 3190 0 0 1 0 0 1
+3 0 3190 0 0 0 0 0 0 0 0 3190 1475
jcnd=1696/3190 0x3877c7a1cf 0 
* 0 
+6 0 1494
+2 0 1494
+4 0 1494
+2 0 1494
+2 0 1494
+2 0 1494 0 1494
+8 0 1494
jump=1494 0x3877c79f30 0 
* 0 
+37 0 1432 1432 0 1 0 0 1
+5 0 1432 1432
+4 0 1432
+4 0 1432 1432
+5 0 1432 0 0 0 0 0 0 0 0 1432 1
jcnd=1432/1432 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 40 0 0 1 0 0 1
+7 0 40 0 40
+6 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c79ace 0 
* 0 
+16 0 2282 2282
+4 0 2282
+4 0 2282
+2 0 2282
+5 0 2282 2282 0 1 5 0 1 5
+4 0 2282
+3 0 2282 0 0 0 0 0 0 0 0 2282 17
jcnd=2194/2282 0x3877c79f00 0 
* 0 
+6 0 88 88
+4 0 88 0 0 0 0 0 0 0 0 88 4
jcnd=72/88 0x3877c79f00 0 
* 0 
+6 0 16
+3 0 16 16
+4 0 16 16
+4 0 16
+3 0 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a650 0 
* 0 
+26 0 16 0 0 1 0 0 1
+3 0 16 16
+4 0 16
+3 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16 2
+6 0 16 16
+8 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16 0 1 0 0 1
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 2
jcnd=16/16 0x3877c7a659 0 
* 0 
+6 0 16
+4 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c7a2e3 0 
* 0 
+6 0 8 8
+4 0 8
+7 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+4 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c7a285 0 
* 0 
+31 0 2116 0 0 1 0 0 1
+3 0 2116 0 2116
+4 0 2116
jump=2116 0x3877c79b99 0 
* 0 
+36 0 1696 1696 0 1 1 0 1 1
+4 0 1696 1696
+4 0 1696
+3 0 1696 1696
+4 0 1696
+4 0 1696
+3 0 1696
+3 0 1696 1696
+4 0 1696 0 0 0 0 0 0 0 0 1696
+6 0 1696 1696 0 0 1 0 0 1
+4 0 1696 0 0 0 0 0 0 0 0 1696
+6 0 1696 1696 0 1 0 0 1
+8 0 1696 0 1696
+4 0 1696 0 1696
+4 0 1696 0 0 0 0 0 0 0 0 1696 12
jcnd=418/1696 +38 0 
* 0 
+2 0 1278 1278 0 0 1 0 0 1
+4 0 1278
+3 0 1278 0 0 0 0 0 0 0 0 1278
+2 0 1278 1278
+5 0 1278 0 0 0 0 0 0 0 0 1278
+6 0 1278 1278
+4 0 1278 0 1278
+4 0 1278 1278
+4 0 1278 0 1278
+4 0 1278
+4 0 1278 0 0 0 0 0 0 0 0 1278 8
jcnd=8/1278 0x3877c7a2e3 0 
* 0 
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 1667 1667
+4 0 1667 1667 0 1 0 0 1
+4 0 1667 0 0 0 0 0 0 0 0 1667
+6 0 1667
+4 0 1667
+7 0 1667 0 1667 0 0 8 0 0 8
+4 0 1667 0 1667
+4 0 1667 0 1667
+4 0 1667 0 1667
+4 0 1667 0 0 0 0 0 0 0 0 1667 3
jcnd=1202/1667 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 2
jcnd=458/465 +18 0 
* 0 
-7 0 1202
+7 0 1202 0 0 0 0 0 0 0 0 1202 4
jcnd=678/1202 +18 0 
* 0 
+2 0 531 0 531 0 0 1 0 0 1
+8 0 531 0 531 1 0 0 1
+8 0 531
+7 0 531 0 531 0 0 2 0 0 2
+4 0 531
+3 0 531
+3 0 531
+4 0 531
+3 0 531
+4 0 531
+3 0 531
+3 0 531
+4 0 531 0 531
+4 0 531 0 531
+4 0 531
jump=531 +71 0 
* 0 
-46 0 1144
+7 0 1144 0 1144
+4 0 1144
+3 0 1144
+3 0 1144
+4 0 1144
+3 0 1144
+4 0 1144
+3 0 1144
+3 0 1144
+4 0 1144 0 1144
+4 0 1144 0 1144 0 0 1 0 0 1
+4 0 1144
jump=1144 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 37
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37 2
jcnd=37/37 +7 0 
* 0 
+7 0 1712
+4 0 1712 0 0 1 0 0 1
+3 0 1712
+3 0 1712 0 1712
cfn=(104)
calls=1712 0x3877c77180 0 
* 0 6848 3424 0 1 0 0 1 0 0 1712
+5 0 1712
+3 0 1712
jump=1712 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1432 0 0 1 0 0 1
+7 0 1432
+2 0 1432
+4 0 1432
+3 0 1432
+3 0 1432 0 1432
+5 0 1432
+3 0 1432
+4 0 1432
+3 0 1432 0 0 1 0 0 1
+4 0 1432
+4 0 1432
+3 0 1432
+4 0 1432 0 1432
+4 0 1432 0 1432 0 0 51 0 0 51
+4 0 1432
+3 0 1432
+3 0 1432 0 1432
cfn=(104)
calls=1432 0x3877c77180 0 
* 0 5728 2864 0 0 0 0 0 0 0 1432 2
+5 0 1432
+3 0 1432
jump=1432 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 16 16 0 1 0 0 1
+4 0 16
jump=16 0x3877c7a10e 0 
* 0 
+5 0 16 16
+5 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 0x3877c7a14b 0 
* 0 

totals: 57523424 24286222 13558760 245 162 299 245 162 299 1397789 12961 19850 411
