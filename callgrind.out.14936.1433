version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1433


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1836712633 - 1837315379
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 910 0 0 1 0 0 1
+3 0 910 0 0 0 0 0 0 0 0 910
+2 0 910
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=910 0x3877c7b8b0 0 
* 0 100537 25701 12859 21 3 0 21 3 0 24547 431
* 0 910 910 0 1 1 0 1 1 0 0 0 910

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 910 0 910 1 0 0 1
+1 0 910
+5 0 910
+3 0 910 0 910
+1 0 910
+4 0 910 0 0 1 0 0 1
+3 0 910
+4 0 910
+3 0 910 0 910 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=910 0x3877c7aa50 0 
* 0 245169 34951 34653 46 38 45 46 38 45 41463 1395
* 0 910 910 0 1 1 0 1 1 0 0 0 910
+5 0 910
+3 0 910 0 0 0 0 0 0 0 0 910
jcnd=910/910 +96 0 
* 0 
+96 0 910 0 0 1 0 0 1
+4 0 910 910
+1 0 910 910
+1 0 910 910

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=448 0x404a28 -35 
* * 2688 896 1344 1 0 1 1 0 1
+5 * 448 448
+1 * 448 448

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 448
+4 * 448
+3 * 448 0 448
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=448 0x4044cc -35 
* * 2240 896 896
+5 * 448 448
+1 * 448 448

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448 1 0 0 1
+4 +1 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=448 0x4049d4 -35 
* * 2688 896 1344 1 0 0 1
+5 * 448 448
+1 * 448 448

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 448
+4 * 448
+3 * 448 0 448
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=448 0x404520 -35 
* * 2240 896 896
+5 * 448 448
+1 * 448 448

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=224 0x403df2 -87 
* * 5376 1792 2016 0 15 3 0 15 3 224
+5 * 224 224
+1 * 224 224

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+4 * 448 448
+4 * 448 448
+1 * 448 448

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224
+3 * 224 0 224
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=224 0x40406a -87 
* * 5376 1792 2016 0 14 7 0 14 7 224
+5 * 224 224
+1 * 224 224

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 448 0 448
+1 * 448
+3 * 448 0 448
+4 * 448 448
+4 * 448 448
+1 * 448 448

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 518 0 518
+1 * 518
+3 * 518 0 518 0 0 1 0 0 1
+4 +1 518 518
+4 * 518 518
+1 * 518 518

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896
+4 * 896
+3 * 896 0 896
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=896 0x404ffe 790 
* * 5376 2688 1792 1 0 0 1
+5 * 896 896
+3 * 896 896
+1 * 896 896

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+4 +1 896 896
+4 * 896 896
+1 * 896 896

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896
+4 * 896
+3 * 896 0 896 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=896 0x40500c 790 
* * 5376 2688 1792 1 0 0 1
+5 * 896 896
+3 * 896 896
+1 * 896 896

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 518 0 518
+1 * 518
+3 * 518 0 518
+4 +1 518 518
+4 * 518 518
+1 * 518 518

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+4 +1 896 896 0 1 0 0 1
+4 * 896 896
+1 * 896 896

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 448 0 448
+1 * 448
+3 * 448 0 448
+4 * 448 0 448
+4 * 448 448
+4 * 448 448
+1 * 448 448

fl=(5)
fn=(28)
0x404992 113 469 0 469 1 0 0 1
+1 * 469
+3 * 469 0 469
+4 +1 469
+10 * 469 469
+1 * 469 469

fn=(176)
0x4044cc 86 448 0 448
+1 * 448
+3 * 448 0 448
+4 * 448 448
+1 * 448 448

fn=(224)
0x403df2 129 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224
+3 * 224
+5 * 224 0 224
cfi=(16)
cfn=(226)
calls=224 0x402d61 -20 
* * 1568 672 672
+5 * 224
+3 * 224 0 0 0 0 0 0 0 0 224
+2 * 224 224
+4 * 224 224 0 0 15 0 0 15
+2 * 224 0 224 0 0 3 0 0 3
+2 * 224 224
+1 * 224 224

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 455 0 455
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 * 455 0 455
+4 +1 455 455
+4 * 455
+3 * 455 0 455
cob=(5)
cfi=(8)
cfn=(164)
calls=455 0x387e4bb2f0 0 
* * 48949 12097 5566 23 4 0 23 4 0 11818 393 455
* * 455 455 0 1 1 0 1 1 0 0 0 455
+5 * 455 455
+1 * 455 455

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 455 0 455
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 * 455 0 455
+4 +1 455 455
+4 * 455
+3 * 455 0 455
cob=(5)
cfi=(8)
cfn=(164)
calls=455 0x387e4bb2f0 0 
* * 55228 14514 7293 0 0 0 0 0 0 13639 38 455
* * 455 455 0 0 0 0 0 0 0 0 0 455
+5 * 455 455
+1 * 455 455

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 455 0 455 1 0 0 1
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 * 455 0 455
+4 +2 455 455
+4 * 455
+3 * 455 0 455
cfn=(102)
calls=455 0x4048de +12 
* * 2730 910 910 1 0 0 1
+5 * 455 455
+4 * 455 0 0 1 0 0 1
+3 * 455
+2 * 455 0 0 0 0 0 0 0 0 455
jcnd=455/455 +7 +3 
* * 
+7 +3 455 455
+4 * 455
+4 * 455
+3 * 455 0 455
cob=(5)
cfi=(8)
cfn=(32)
calls=455 0x387e4bd0b0 0 
* * 131260 19140 17663 33 15 32 33 15 32 21566 710 455
* * 455 455 0 0 0 0 0 0 0 0 0 455
+5 +1 455 455
+1 * 455 455

fn=(18)
0x404a28 81 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448 0 0 1 0 0 1
+4 * 448 0 448
+4 * 448 448
+1 * 448 448

fn=(92)
0x4049d4 81 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+4 * 448 0 448
+4 * 448 448
+1 * 448 448

fn=(196)
0x404520 86 448 0 448
+1 * 448
+3 * 448 0 448
+4 * 448 448
+1 * 448 448

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 455 0 455 1 0 0 1
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 * 455 0 455 1 0 0 1
+4 +2 455 455
+4 * 455
+3 * 455 0 455
cfn=(28)
calls=455 0x404992 +12 
* * 2730 910 910 1 0 0 1
+5 * 455 455
+4 * 455
+3 * 455
+2 * 455 0 0 0 0 0 0 0 0 455
jcnd=455/455 +7 +3 
* * 
+7 +3 455 455
+4 * 455
+4 * 455
+3 * 455 0 455
cob=(5)
cfi=(8)
cfn=(32)
calls=455 0x387e4bd0b0 0 
* * 128469 19451 19720 17 24 14 17 24 14 20807 685 455
* * 455 455 0 1 1 0 1 1 0 0 0 455
+5 +1 455 455
+1 * 455 455

fn=(102)
0x4048de 113 469 0 469 1 0 0 1
+1 * 469
+3 * 469 0 469
+4 +1 469
+10 * 469 469
+1 * 469 469

fn=(266)
0x40406a 129 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224
+3 * 224
+5 * 224 0 224
cfi=(16)
cfn=(226)
calls=224 0x402d61 -20 
* * 1568 672 672
+5 * 224
+3 * 224 0 0 0 0 0 0 0 0 224
+2 * 224 224
+4 * 224 224 0 0 14 0 0 14
+2 * 224 0 224 0 0 7 0 0 7
+2 * 224 224
+1 * 224 224

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=448 0x404484 107 
* * 193490 62964 60280 25 3 4 25 3 4 7020 449 892 111
+5 * 448 448
+1 * 448 448

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +2 448 448 0 1 0 0 1
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=448 0x404a36 450 
* * 180946 58484 55800 24 3 4 24 3 4 7020 449 892 111
+5 * 448 448
+1 * 448 448

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=448 0x40439c 107 
* * 193490 62964 60280 7 1 7 7 1 7 7020 434 892
+5 * 448 448
+1 * 448 448

fn=(116)
0x40439c 107 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +10 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=448 0x4047d7 -26 
* * 187218 60724 58040 7 1 7 7 1 7 7020 434 892
+5 +1 448 448
+1 * 448 448

fn=(118)
0x4047d7 91 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=448 0x4049e2 450 
* * 180946 58484 55800 7 1 7 7 1 7 7020 434 892
+5 * 448 448
+1 * 448 448

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +10 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(52)
calls=448 0x404829 -26 
* * 187218 60724 58040 25 3 4 25 3 4 7020 449 892 111
+5 +1 448 448
+1 * 448 448

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 1820 0 1820 1 0 0 1
+1 * 1820
+3 * 1820 0 1820 0 0 1 0 0 1
+4 +1 1820 1820
+4 * 1820 1820 0 1 1 0 1 1
+4 * 1820
+3 * 1820 1820
+4 * 1820 1820
+3 * 1820
+3 * 1820
+3 * 1820
+4 * 1820 1820
+1 * 1820 1820

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=448 0x404236 -14 
* * 145455 24976 24792 23 20 8 23 20 8 21417 645 896
+5 * 448 448
+4 * 448 0 448
+3 +1 448 448
+4 * 448 448 0 1 0 0 1
+3 * 448 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+3 * 448 448
+4 * 448
+4 * 448
+3 * 448 448
+4 * 448 0 448
+4 +1 448 448
+1 * 448 448

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448 448 0 1 0 0 1
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=448 0x403fbe -14 
* * 147436 24431 22554 26 7 27 26 7 27 22006 659 896
+5 * 448 448
+4 * 448 0 448
+3 +1 448 448
+4 * 448 448
+3 * 448 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+3 * 448 448
+4 * 448
+4 * 448
+3 * 448 448
+4 * 448 0 448
+4 +1 448 448
+1 * 448 448

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 224 0 224
+1 * 224
+3 * 224 0 0 1 0 0 1
+4 * 224 0 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224 0 0 0 0 0 0 0 0 224
jcnd=7/224 +51 +10 
* * 
+2 +3 217 217
+4 * 217 217
+4 * 217 217
+4 -1 217 217
+4 * 217
+3 * 217
+3 * 217 0 217
cfi=(3)
cfn=(264)
calls=217 0x4036b1 215 
* * 8246 2821 3038 0 14 4 0 14 4 217
+5 +2 217 217
+4 * 217 217
+4 * 217
+4 * 217 217
+4 * 217 0 217
+4 * 217
jump=217 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10134 3134 2716 18 5 12 18 5 12 596 56 41
+5 +2 224 224
+1 * 224 224

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 917 0 917 1 0 0 1
+1 * 917
+3 * 917 0 917 1 0 0 1
+4 +1 917 917
+4 * 917 917
+1 * 917 917

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+3 * 448 0 448
+4 * 448
+4 * 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=448 0x404380 726 
* * 4480 2240 1792
+5 * 448 448
+4 * 448 448
+1 * 448 448

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 448 0 448
+1 * 448
+3 * 448 0 448
+1 * 448
+4 * 448 0 448 1 0 0 1
+4 +2 448 448
+4 * 448
+3 * 448 0 448
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=448 0x40325e 113 
* * 2688 1344 896
+5 * 448
+3 * 448 448
+4 * 448 448
+4 * 448 448
+4 * 448 448
+3 -1 448
+3 * 448
+3 * 448 0 448
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=448 0x40326c 148 
* * 13888 4480 5376 4 0 0 4
+5 +1 448 448
+4 * 448
+3 * 448 0 448
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=448 0x4031ec 159 
* * 83620 24916 15778 27 5 0 27 5 0 12104 390 896
+5 * 448
jump=448 +28 * 
* * 
+28 * 448 0 0 1 0 0 1
+4 * 448 448
+1 * 448 448
+1 * 448 448

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 455 0 455 1 0 0 1
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 * 455 0 455
+4 +2 455 455
+5 * 455 0 0 0 0 0 0 0 0 455
+2 +1 455 455
+4 * 455 455
+4 * 455 455
+4 * 455
+3 * 455
+3 * 455 0 455
cfi=(5)
cfn=(160)
calls=455 0x4044d6 -65 
* * 54409 13917 7841 24 5 0 24 5 0 11818 393 910
+5 +1 455 455
+1 * 455 455

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 448 0 448
+1 * 448
+3 * 448 0 448
+1 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=448 0x4043ca -45 
* * 16128 5824 6272 4 0 4 4 0 4
+5 +1 448 448 0 1 0 0 1
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(20)
calls=448 0x404412 +43 
* * 156655 30352 27928 24 20 8 24 20 8 21417 645 896
+5 * 448
jump=448 +28 * 
* * 
+28 * 448
+4 * 448 448
+1 * 448 448
+1 * 448 448

fn=(14)
0x4043ca 90 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448 0 0 1 0 0 1
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(4)
cfn=(16)
calls=448 0x404804 +24 
* * 8064 2688 3136 2 0 1 2 0 1
+5 * 448 448
+4 * 448 0 448 0 0 2 0 0 2
+7 * 448 448
+4 * 448 0 448 1 0 0 1
+8 * 448 448
+4 * 448 0 448
+8 +1 448 448
+1 * 448 448

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+2 * 448 0 448
+2 * 448 0 448
+1 * 448 0 0 1 0 0 1
+4 * 448 0 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448
+3 * 448 0 448
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=448 0x4039fc 117 
* * 2688 1344 896 2 0 0 2
+5 * 448
+3 * 448 0 448
cfi=(3)
cfn=(84)
calls=448 0x4039ed -88 
* * 2688 1344 896
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(2)
calls=448 0x402d74 645 
* * 5824 2688 896
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448
+3 * 448
+3 * 448 0 448 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=448 0x403a0a 134 
* * 184620 38767 35098 33 7 27 33 7 27 22006 659 896
+5 +4 448 448
+4 * 448
+3 * 448 0 448
cfn=(106)
calls=448 0x40325e 113 
* * 2688 1344 896 1 0 0 1
+5 * 448
+3 * 448 448
+4 * 448 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=448 0x403a98 565 
* * 11200 4480 3584 2 0 0 2
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(112)
calls=448 0x403a68 547 
* * 11200 4480 3584
+5 * 448
+3 * 448
+3 * 448
+3 * 448
+3 * 448 0 448
cfi=(11)
cfn=(114)
calls=448 0x403ac9 -60 
* * 200210 65204 62968 7 1 7 7 1 7 7020 434 892
+5 -3 448 448
+4 * 448 0 448
+4 * 448
jump=448 +28 +4 
* * 
+28 +4 448
+4 * 448 448
+1 * 448 448
+2 * 448 448
+2 * 448 448
+1 * 448 448

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 455 0 455 1 0 0 1
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 * 455 0 455
+4 +2 455 455
+5 * 455 0 0 0 0 0 0 0 0 455 7
+2 +1 455 455
+4 * 455 455
+4 * 455 455
+4 * 455
+3 * 455
+3 * 455 0 455
cfi=(5)
cfn=(190)
calls=455 0x40452a -65 
* * 60688 16334 9568 0 0 0 0 0 0 13639 38 910
+5 +1 455 455
+1 * 455 455

fn=(22)
0x404236 167 455 0 455 1 0 0 1
+1 * 455
+3 * 455
+4 * 455 0 455 1 0 0 1
+4 * 455 0 455
+4 0 455 455
+5 0 455 0 0 0 0 0 0 0 0 455
+2 0 455 455
+4 0 455 455
+4 0 455
+5 0 455
+3 0 455
+3 0 455 0 455
fi=(6) ???
cfi=(5)
cfn=(26)
calls=455 0x404730 99 
* 0 140299 23091 23360 21 25 14 21 25 14 21262 685 910
+5 0 455
fi=(6)
jump=455 +7 0 
* 0 
+7 0 455 455
+1 0 455 455

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+4 * 448 0 448
+4 * 448
+4 * 448 0 0 1 0 0 1
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=448 0x404468 726 
* * 4480 2240 1792 1 0 0 1
+5 * 448 448
+4 * 448 448
+1 * 448 448

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+3 * 448 0 448
+4 * 448
+4 * 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(10)
cfn=(44)
calls=448 0x404468 726 
* * 4480 2240 1792
+5 * 448 448
+4 * 448 448
+1 * 448 448

fn=(86)
0x403a0a 134 448 0 448
+1 * 448
+3 * 448 0 448
+1 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=448 0x4042e2 -45 
* * 16128 5824 6272 5 0 0 5
+5 +1 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448 1 0 0 1
cfn=(94)
calls=448 0x40432a +43 
* * 158636 29807 25690 27 7 27 27 7 27 22006 659 896
+5 * 448
jump=448 +28 * 
* * 
+28 * 448
+4 * 448 448
+1 * 448 448
+1 * 448 448

fn=(88)
0x4042e2 90 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448 1 0 0 1
cfi=(4)
cfn=(90)
calls=448 0x4047b2 +24 
* * 8064 2688 3136 3 0 0 3
+5 * 448 448
+4 * 448 0 448
+7 * 448 448
+4 * 448 0 448
+8 * 448 448
+4 * 448 0 448
+8 +1 448 448
+1 * 448 448

fn=(156)
0x4031ec 159 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+1 * 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448 448 0 1 0 0 1
+4 * 448
+3 * 448 448
+4 * 448 448
+3 * 448
+3 * 448
+3 * 448
+4 * 448
+3 * 448 448
+4 * 448 448
+3 -1 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(158)
calls=448 0x403ce6 +11 
* * 60772 16404 9954 24 5 0 24 5 0 12104 390 896
+5 +1 448 448
+4 * 448
+3 * 448 0 448
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=448 0x4031b8 -82 
* * 10304 3584 3584 1 0 0 1
+5 * 448
jump=448 +28 * 
* * 
+28 * 448
+4 * 448 448
+1 * 448 448
+1 * 448 448

fn=(172)
0x4031b8 79 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 448
+4 * 448
+3 * 448 0 448
cfi=(4)
cfn=(174)
calls=448 0x403ccc +42 
* * 6272 2240 2240
+5 * 448 448
+1 * 448 448

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 924 0 924 1 0 0 1
+1 * 924
+3 * 924 0 924
+4 +1 924 924
+4 * 924 924 0 0 2 0 0 2
+4 * 924
+3 * 924 924
+4 * 924 924
+3 * 924
+3 * 924
+3 * 924
+4 * 924 924
+1 * 924 924

fn=(106)
0x40325e 113 917 0 917 1 0 0 1
+1 * 917
+3 * 917 0 917
+4 +1 917 917
+4 * 917 917
+1 * 917 917

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 462 0 462 1 0 0 1
+1 * 462
+3 * 462 0 462 0 0 1 0 0 1
+4 +1 462 462
+4 * 462 462
+1 * 462 462

fn=(82)
0x4039fc 117 462 0 462 1 0 0 1
+1 * 462
+3 * 462 0 462 1 0 0 1
+4 +1 462 462
+4 * 462 462
+1 * 462 462

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 +2 224 224
+4 * 224 224
+4 * 224 224
+4 * 224 224
+4 * 224
+3 * 224 0 0 0 0 0 0 0 0 224 8
jcnd=7/224 +51 +10 
* * 
+2 +3 217 217
+4 * 217 217
+4 * 217 217
+4 -1 217 217
+4 * 217
+3 * 217
+3 * 217 0 217
cfi=(3)
cfn=(222)
calls=217 0x403373 215 
* * 8246 2821 3038 0 14 2 0 14 2 217
+5 +2 217 217
+4 * 217 217
+4 * 217
+4 * 217 217
+4 * 217 0 217
+4 * 217
jump=217 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 10911 3351 2894 35 9 9 35 9 9 757 58 41
+5 +2 224 224
+1 * 224 224

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+2 * 448 0 448
+2 * 448 0 448
+1 * 448
+4 * 448 0 448 1 0 0 1
+4 * 448 0 448
+4 +2 448 448
+4 * 448
+3 * 448 0 448
cfn=(6)
calls=448 0x403b08 117 
* * 2688 1344 896 1 0 1 1 0 1
+5 * 448
+3 * 448 0 448
cfi=(3)
cfn=(8)
calls=448 0x403afa -88 
* * 2688 1344 896 1 0 0 1
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(10)
calls=448 0x402f54 645 
* * 5824 2688 896 1 1 0 1 1
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448
+3 * 448
+3 * 448 0 448
cfn=(12)
calls=448 0x403b16 134 
* * 182639 39312 37336 29 20 12 29 20 12 21417 645 896
+5 +4 448 448 0 1 0 0 1
+4 * 448
+3 * 448 0 448
cfn=(40)
calls=448 0x40333c 113 
* * 2688 1344 896 2 0 0 2
+5 * 448
+3 * 448 448
+4 * 448 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(42)
calls=448 0x403ba4 565 
* * 11200 4480 3584 3 0 0 3
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(46)
calls=448 0x403b74 547 
* * 11200 4480 3584
+5 * 448
+3 * 448
+3 * 448
+3 * 448
+3 * 448 0 448 1 0 0 1
cfi=(11)
cfn=(48)
calls=448 0x403bd5 -60 
* * 200210 65204 62968 26 3 4 26 3 4 7020 449 892 111
+5 -3 448 448
+4 * 448 0 448
+4 * 448
jump=448 +28 +4 
* * 
+28 +4 448
+4 * 448 448
+1 * 448 448
+2 * 448 448
+2 * 448 448
+1 * 448 448

fn=(108)
0x403a98 565 448 0 448 1 0 0 1
+1 * 448
+3 * 448
+4 * 448 0 448
+4 +1 448 448
+4 * 448 448
+4 * 448 0 448
+4 * 448
+4 * 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfi=(10)
cfn=(110)
calls=448 0x404380 726 
* * 4480 2240 1792 1 0 0 1
+5 * 448 448
+4 * 448 448
+1 * 448 448

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 448 0 448
+1 * 448
+3 * 448 0 448
+1 * 448
+4 * 448 0 448 1 0 0 1
+4 +2 448 448
+4 * 448
+3 * 448 0 448
cfn=(40)
calls=448 0x40333c 113 
* * 2688 1344 896
+5 * 448
+3 * 448 448
+4 * 448 448
+4 * 448 448
+4 * 448 448
+3 -1 448
+3 * 448
+3 * 448 0 448
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=448 0x40334a 148 
* * 13888 4480 5376 2 0 0 2
+5 +1 448 448
+4 * 448
+3 * 448 0 448
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=448 0x4032ca 159 
* * 89866 27316 17502 3 0 0 3 0 0 13916 32 896
+5 * 448
jump=448 +28 * 
* * 
+28 * 448 0 0 1 0 0 1
+4 * 448 448
+1 * 448 448
+1 * 448 448

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96)
0x403fbe 167 455 0 455 1 0 0 1
+1 * 455 0 0 1 0 0 1
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 0 455 455
+5 0 455 0 0 0 0 0 0 0 0 455
+2 0 455 455
+4 0 455 455
+4 0 455
+5 0 455
+3 0 455
+3 0 455 0 455
fi=(6)
cfi=(5)
cfn=(100)
calls=455 0x40461a 99 
* 0 143090 22780 21303 36 15 32 36 15 32 22021 710 910
+5 0 455
fi=(6)
jump=455 +7 0 
* 0 
+7 0 455 455
+1 0 455 455

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 76720 0 76720
+1 * 76720
+3 * 76720 0 76720
+4 * 76720 0 76720
+4 +1 76720 76720
+4 * 76720 76720
+3 * 76720 76720
+4 * 76720
+4 * 76720
+3 * 76720 76720
+1 * 76720 76720

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 76720 0 76720
+1 * 76720
+3 * 76720 0 76720 1 0 0 1
+4 * 76720 0 76720
+4 +1 76720 76720
+4 * 76720 76720
+3 * 76720 76720
+4 * 76720
+4 * 76720
+3 * 76720 76720
+1 * 76720 76720

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 448
+4 * 448
+3 * 448 0 448
cfi=(4)
cfn=(194)
calls=448 0x403d7e +42 
* * 6272 2240 2240 1 0 0 1
+5 * 448 448
+1 * 448 448

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 448 0 448 1 0 0 1
+1 * 448
+3 * 448 0 448
+1 * 448
+4 * 448 0 448
+4 +2 448 448
+4 * 448 448
+4 * 448
+3 * 448 448
+4 * 448 448
+3 * 448
+3 * 448
+3 * 448
+4 * 448
+3 * 448 448
+4 * 448 448
+3 -1 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(188)
calls=448 0x403d98 +11 
* * 67018 18804 11678 1 0 0 1 0 0 13916 32 896
+5 +1 448 448
+4 * 448
+3 * 448 0 448
cfn=(192)
calls=448 0x403296 -82 
* * 10304 3584 3584 1 0 0 1
+5 * 448
jump=448 +28 * 
* * 
+28 * 448
+4 * 448 448
+1 * 448 448
+1 * 448 448

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896 1 0 0 1
+4 +1 896 896
+4 * 896
+3 * 896 0 896
cfi=(13)
cfn=(58)
calls=896 0x404d8f -77 
* * 5376 2688 1792 1 0 0 1
+5 * 896 896
+1 * 896 896

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 462 0 462
+1 * 462
+3 * 462
+4 * 462 0 462 1 0 0 1
+4 * 462 0 462
+4 * 462 0 462
+4 +2 462 462
+4 * 462 462
+4 * 462
+3 * 462
+3 * 462
+4 * 462 0 462
+4 +1 462 462
+5 * 462 0 0 0 0 0 0 0 0 462
jcnd=7/462 +33 +2 
* * 
+2 +1 455 455
+4 * 455
+8 * 455 455
+4 * 455 455
+4 * 455
+3 * 455 0 0 1 0 0 1
+3 * 455 0 455 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=455 0x3877c83840 0 
* * 97454 29545 28640 11 2 5 11 2 5 6634 452 450 111
* * 455 455 0 1 1 0 1 1 0 0 0 455
+5 +1 462 462
+4 * 462
+8 * 462 462
+4 * 462
+3 +1 462 462
+1 * 462 462

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 462 0 462
+1 * 462
+3 * 462
+4 * 462 0 462 1 0 0 1
+4 * 462 0 462
+4 * 462 0 462 0 0 1 0 0 1
+4 +2 462 462
+4 * 462 462
+4 * 462
+3 * 462
+3 * 462
+4 * 462 0 462
+4 +1 462 462
+5 * 462 0 0 0 0 0 0 0 0 462
jcnd=7/462 +33 +2 
* * 
+2 +1 455 455
+4 * 455
+8 * 455 455
+4 * 455 455
+4 * 455
+3 * 455
+3 * 455 0 455
cob=(2)
cfi=(9)
cfn=(78)
calls=455 0x3877c83840 0 
* * 97454 29545 28640 0 1 8 0 1 8 6634 438 450
* * 455 455 0 0 0 0 0 0 0 0 0 455
+5 +1 462 462
+4 * 462
+8 * 462 462
+4 * 462
+3 +1 462 462
+1 * 462 462

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448 1 0 0 1
+4 * 448 0 448
+4 * 448 0 448
+4 +8 448 0 448
+4 +3 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(74)
calls=448 0x404f37 -22 
* * 109266 34292 31160 14 3 3 14 3 3 7020 449 892 111
+5 +1 448 448
+1 * 448 448

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 448 0 448
+1 * 448
+3 * 448 0 448
+2 * 448 0 448
+1 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +4 448 448
+4 * 448
+3 * 448 0 448
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=448 0x404878 277 
* * 6720 2688 2240 1 0 0 1
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=448 0x404d44 277 
* * 11200 4032 3584 2 0 0 2
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(132)
calls=448 0x404d44 277 
* * 11200 4032 3584
+5 * 448
+3 * 448
+3 * 448
+3 * 448 0 448
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=448 0x404d5e -49 
* * 115986 36532 33848 1 1 7 1 1 7 7020 434 892
+5 +1 448
+4 * 448 448
+1 * 448 448
+2 * 448 448
+1 * 448 448

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(54)
0x404a36 450 448 0 448
+1 * 448
+3 * 448 0 448
+1 * 448
+4 * 448 0 448 1 0 0 1
+4 * 448 0 448
+4 * 448 0 448
+4 +10 448 448
+4 * 448
+3 * 448 0 448
cfn=(56)
calls=448 0x404c38 288 
* * 6720 2688 2240 3 0 0 3
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(56)
calls=448 0x404c38 288 
* * 6720 2688 2240
+5 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=448 0x404c52 -36 
* * 157650 50420 47736 20 3 4 20 3 4 7020 449 892 111
+5 +1 448
+4 * 448 448
+1 * 448 448
+1 * 448 448

fn=(60)
0x404c52 424 448 0 448
+1 * 448
+3 * 448 0 448
+2 * 448 0 448
+1 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +4 448 448
+4 * 448
+3 * 448 0 448
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=448 0x40492d 277 
* * 6720 2688 2240 2 0 0 2
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=448 0x404d9d 277 
* * 11200 4032 3584 2 0 1 2 0 1
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(66)
calls=448 0x404d9d 277 
* * 11200 4032 3584
+5 * 448
+3 * 448
+3 * 448
+3 * 448 0 448
cfn=(72)
calls=448 0x404db7 -49 
* * 115986 36532 33848 15 3 3 15 3 3 7020 449 892 111
+5 +1 448
+4 * 448 448
+1 * 448 448
+2 * 448 448
+1 * 448 448

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 490 0 490 1 0 0 1
+1 * 490
+3 * 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490
+3 * 490 0 490 1 0 0 1
cfi=(13)
cfn=(64)
calls=490 -33 -66 
* * 2940 1470 980
+5 * 490 490
+1 * 490 490

fn=(66)
0x404d9d 277 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896
+3 * 896 0 896
cfi=(13)
cfn=(68)
calls=896 0x404f1a -58 
* * 14336 5376 4480 2 0 1 2 0 1
+5 * 896 896
+1 * 896 896

fn=(240)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 448 0 448
+1 * 448
+3 * 448 0 448
+1 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +10 448 448
+4 * 448
+3 * 448 0 448
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=448 0x404bc6 288 
* * 6720 2688 2240 3 0 0 3
+5 * 448
+3 * 448 448
+4 * 448
+3 * 448 0 448
cfn=(122)
calls=448 0x404bc6 288 
* * 6720 2688 2240
+5 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(126)
calls=448 0x404be0 -36 
* * 157650 50420 47736 4 1 7 4 1 7 7020 434 892
+5 +1 448
+4 * 448 448
+1 * 448 448
+1 * 448 448

fn=(128)
0x404878 277 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490 1 0 0 1
+4 +1 490 490
+4 * 490
+3 * 490 0 490
cfi=(13)
cfn=(130)
calls=490 -33 -66 
* * 2940 1470 980 0 0 1 0 0 1
+5 * 490 490
+1 * 490 490

fn=(132)
0x404d44 277 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896
+3 * 896 0 896
cfi=(13)
cfn=(134)
calls=896 0x404e98 -58 
* * 14336 5376 4480 2 0 0 2
+5 * 896 896
+1 * 896 896

fn=(138)
0x404d5e 379 448 0 448
+1 * 448
+3 * 448
+4 * 448 0 448
+4 * 448 0 448
+4 * 448 0 448
+4 +8 448 0 448
+4 +3 448 448
+4 * 448 448
+4 * 448 448
+4 * 448
+3 * 448
+3 * 448 0 448
cfn=(140)
calls=448 0x404eb5 -22 
* * 109266 34292 31160 1 1 7 1 1 7 7020 434 892
+5 +1 448 448
+1 * 448 448

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 896 0 896 1 0 0 1
+1 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896 896
+4 * 896
+3 * 896 0 896
cfi=(13)
cfn=(124)
calls=896 0x404d36 -77 
* * 5376 2688 1792 2 0 0 2
+5 * 896 896
+1 * 896 896

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+4 +1 896 896
+4 * 896 896
+1 * 896 896

fn=(110)
0x404380 726 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+4 * 896 0 896
+4 * 896 896
+4 * 896 896
+3 * 896 896
+4 * 896 0 896
+3 * 896 896
+1 * 896 896

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896
+4 +1 896 896
+4 * 896 896
+1 * 896 896

fn=(44)
0x404468 726 896 0 896
+1 * 896
+3 * 896 0 896
+4 * 896 0 896
+4 * 896 896
+4 * 896 896
+3 * 896 896
+4 * 896 0 896 1 0 0 1
+3 * 896 896
+1 * 896 896

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 455 0 455 1 0 0 1
+1 * 455
+3 * 455 0 455
+4 * 455 0 455 1 0 0 1
+4 * 455 455
+1 * 455 455

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 455 0 455 1 0 0 1
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 +4 455 455
+4 * 455 455
+4 * 455
+3 * 455
+3 * 455 0 455
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=455 0x40454c -14 
* * 2730 910 1365 1 0 0 1
+5 +2 455 455
+1 * 455 455

fn=(150)
0x40326c 148 455 0 455
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 * 455 0 455
+4 +3 455 455 0 1 0 0 1
+4 * 455 455
+4 * 455
+3 * 455
+3 * 455 0 455
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=455 0x403d1a -29 
* * 8190 2730 3185 3 0 0 3
+5 +1 455 455
+1 * 455 455

fn=(180)
0x40334a 148 455 0 455
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 * 455 0 455
+4 +3 455 455
+4 * 455 455
+4 * 455
+3 * 455
+3 * 455 0 455
cfn=(182)
calls=455 0x403dcc -29 
* * 8190 2730 3185 2 0 0 2
+5 +1 455 455
+1 * 455 455

fn=(152)
0x403d1a 122 455 0 455 1 0 0 1
+1 * 455
+3 * 455
+4 * 455 0 455
+4 * 455 0 455
+4 +4 455 455
+4 * 455 455
+4 * 455
+3 * 455
+3 * 455 0 455
cfn=(154)
calls=455 0x4044f8 -14 
* * 2730 910 1365 2 0 0 2
+5 +2 455 455
+1 * 455 455

fn=(184)
0x40454c 112 455 0 455 1 0 0 1
+1 * 455
+3 * 455 0 455
+4 * 455 0 455
+4 * 455 455
+1 * 455 455

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2124 390 388 0 5 6 0 5 6 300 40 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 13 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 2934 624 569 12 8 5 12 8 5 470 51 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 3 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224
+3 * 224 0 224
cfi=(2)
cfn=(2)
calls=224 0x402d74 645 
* * 2912 1344 448
+5 * 224
+3 * 224 0 224
+3 +1 224 224
+6 * 224 0 224
+3 * 224 224
+6 * 224 0 224
+3 +1 224 224
+6 * 224 0 224 1 0 0 1
+3 * 224 224
+6 * 224 0 224
+3 +2 224 0 224
+7 * 224
jump=224 +86 * 
* * 
+2 +1 25424 25424
+3 * 25424
+3 * 25424 25424
+4 * 25424
+3 * 25424
+3 * 25424 0 25424
cfi=(2)
cfn=(144)
calls=25424 0x402d9a 770 
* * 279664 127120 76272
+5 * 25424 25424
+4 * 25424 25424
+5 * 25424
+4 * 25424 0 25424
+5 +1 25424 25424
+3 * 25424
+3 * 25424 25424
+4 * 25424
+3 * 25424
+3 * 25424 0 25424
cfi=(2)
cfn=(146)
calls=25424 0x402dba 770 
* * 279664 127120 76272 1 0 0 1
+5 * 25424 25424
+2 * 25424
+4 * 25424 25424
+5 * 25424
+4 * 25424 0 25424
+5 -2 25424 0 25424
+4 * 25424 25424
+3 * 25424
+3 * 25424 25424
+3 * 25424 0 0 0 0 0 0 0 0 25424 225
jcnd=25200/25424 -93 +1 
* * 
-9 * 224 224 0 1 0 0 1
+3 * 224
+3 * 224 224
+3 * 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 -93 +1 
* * 
+2 +4 224 224
+3 * 224
+3 * 224
+4 * 224 224 0 1 0 0 1
+5 * 224
+4 * 224
+3 * 224 0 224
+5 +1 224 224
+3 * 224
+3 * 224
+4 * 224 224
+5 * 224
+4 * 224
+3 * 224 0 224
+5 +1 224 0 224
+7 * 224
jump=224 0x4016ee * 
* * 
+2 +1 25424 25424
+3 * 25424
+3 * 25424 25424
+4 * 25424
+3 * 25424 0 0 1 0 0 1
+3 * 25424 0 25424
cfi=(2)
cfn=(146)
calls=25424 0x402dba 770 
* * 279664 127120 76272
+5 * 25424 25424
+2 * 25424
+4 * 25424 25424
+5 * 25424 0 25424
+5 +1 25424 25424
+3 * 25424
+3 * 25424 25424
+4 * 25424
+3 * 25424
+3 * 25424 0 25424
cfi=(2)
cfn=(144)
calls=25424 0x402d9a 770 
* * 279664 127120 76272
+5 * 25424 25424
+4 * 25424 25424
+5 * 25424 0 25424
+5 +1 25424 25424
+5 * 25424 25424
+5 * 25424 25424
+5 * 25424
+4 * 25424 0 25424
+5 +1 25424 25424
+5 * 25424 25424
+5 * 25424 25424
+5 * 25424
+4 * 25424 0 25424
+5 -4 25424 0 25424
+4 * 25424 25424
+3 * 25424
+3 * 25424 25424
+3 * 25424 0 0 0 0 0 0 0 0 25424 225
jcnd=25200/25424 0x401672 +1 
* * 
-9 * 224 224 0 1 0 0 1
+3 * 224
+3 * 224 224
+3 * 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 0x401672 +1 
* * 
+6 +6 224 224 0 1 0 0 1
+5 * 224 224
+5 * 224 0 224
+5 +2 224 224
+3 +1 224 0 224
+3 * 224 224
+5 * 224 224
+1 * 224 224

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 224
+7 * 224
+7 * 224
+3 * 224
+3 * 224 0 224
cfi=(2)
cfn=(4)
calls=224 0x4030b2 310 
* * 220938 63246 58940 65 23 16 65 23 16 14232 681 894 111
+5 * 224
+7 * 224
+7 * 224
+3 * 224
+3 * 224 0 224
cfi=(2)
cfn=(80)
calls=224 0x402ff4 310 
* * 222265 62996 57853 48 8 32 48 8 32 14592 692 894
+5 * 224 0 0 1 0 0 1
+7 * 224
+7 * 224
+3 * 224
+3 * 224 0 224
cfn=(142)
calls=224 0x401585 -52 
* * 2658656 1175104 613984 8 0 0 8 0 0 51296 450
+5 * 224 0 224
+8 * 224 224
+6 * 224 0 224
+6 * 224
+7 * 224
+3 * 224 0 224
cfi=(2)
cfn=(148)
calls=224 0x402df4 414 
* * 55474 17386 12369 33 5 0 33 5 0 6052 197 448
+5 * 224
+7 * 224
+3 * 224 0 224 1 0 0 1
cfi=(2)
cfn=(178)
calls=224 0x402e74 414 
* * 58597 18586 13231 7 0 0 7 0 0 6958 18 448
+5 +2 224
+7 * 224
+7 * 224
+3 * 224
+3 * 224 0 224
cfi=(2)
cfn=(4)
calls=224 0x4030b2 310 
* * 220599 63222 58836 2 1 1 2 1 1 14205 413 894
+5 * 224
+7 * 224
+7 * 224
+3 * 224
+3 * 224 0 224
cfi=(2)
cfn=(80)
calls=224 0x402ff4 310 
* * 221253 62927 57685 0 0 2 0 0 2 14434 401 894
+5 * 224 224
+6 * 224 0 0 1 0 0 1
+7 * 224
+7 * 224 0 224
+6 * 224 224
+8 * 224
+3 * 224
+3 * 224 0 224
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=224 0x401719 -33 
* * 1233568 513408 283024 4 0 0 4 0 0 25648 225
+5 * 224 0 224
+8 * 224 224
+6 * 224 0 224
+6 * 224
+7 * 224 0 0 1 0 0 1
+3 * 224 0 224
cfi=(2)
cfn=(148)
calls=224 0x402df4 414 
* * 55474 17386 12369 0 0 0 0 0 0 6052 193 448
+5 * 224
+7 * 224
+3 * 224 0 224
cfi=(2)
cfn=(178)
calls=224 0x402e74 414 
* * 58597 18586 13231 0 0 0 0 0 0 6958 14 448
+5 +2 224 224
+7 * 224
+3 * 224 0 224
cfi=(2)
cfn=(2)
calls=224 0x402d74 645 
* * 2912 1344 448
+5 * 224 224
+6 * 224
+3 * 224
+3 * 224
+3 * 224 224
+7 * 224
+3 * 224 0 0 1 0 0 1
+3 * 224 0 224
cfi=(2)
cfn=(144)
calls=224 0x402d9a 770 
* * 2464 1120 672
+5 * 224
+3 * 224
+7 * 224
+3 * 224
+3 * 224 0 224
cfi=(2)
cfn=(200)
calls=224 0x402eda 901 
* * 25114 9119 7101 38 23 11 38 23 11 1198 66 41
+5 +1 224 224
+7 * 224
+3 * 224 0 224
cfi=(2)
cfn=(10)
calls=224 0x402f54 645 
* * 2912 1344 448 0 1 0 0 1
+5 * 224 224
+6 * 224
+3 * 224
+3 * 224
+3 * 224 224
+7 * 224 0 0 1 0 0 1
+3 * 224
+3 * 224 0 224
cfi=(2)
cfn=(146)
calls=224 0x402dba 770 
* * 2464 1120 672
+5 * 224
+3 * 224
+7 * 224
+3 * 224
+3 * 224 0 224
cfi=(2)
cfn=(244)
calls=224 0x402f7a 901 
* * 24337 8902 6923 19 19 16 19 19 16 1037 56 41
+5 +1 224 224
+7 * 224
+3 * 224 0 224
cfi=(2)
cfn=(10)
calls=224 0x402f54 645 
* * 2912 1344 448
+5 * 224 224
+6 * 224
+3 * 224
+3 * 224
+3 * 224 224 0 1 0 0 1
+7 * 224
+3 * 224
+3 * 224 0 224
cfi=(2)
cfn=(146)
calls=224 0x402dba 770 
* * 2464 1120 672
+5 * 224 224
+2 * 224
+4 * 224 224
+8 * 224 224
+8 * 224 0 224
+8 +1 224 224
+7 * 224
+3 * 224 0 224
cfi=(2)
cfn=(2)
calls=224 0x402d74 645 
* * 2912 1344 448
+5 * 224 224 0 1 0 0 1
+6 * 224
+3 * 224
+3 * 224
+3 * 224 224
+7 * 224
+3 * 224
+3 * 224 0 224
cfi=(2)
cfn=(144)
calls=224 0x402d9a 770 
* * 2464 1120 672
+5 * 224 224
+4 * 224 224
+8 * 224
+4 * 224 224
+8 * 224
+3 * 224 0 224
+8 +2 224 0 224
+7 -12 224 224
+8 * 224 224
+7 * 224 0 0 0 0 0 0 0 0 224 3
jcnd=1/224 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 224
+7 * 224
+3 * 224 0 224
cfi=(2)
cfn=(2)
calls=224 0x402d74 645 
* * 2912 1344 448 2 0 1 2 0 1
+5 * 224
+3 * 224 224
+7 * 224
+3 * 224 0 224
cfi=(2)
cfn=(2)
calls=224 0x402d74 645 
* * 2912 1344 448 0 1 0 0 1
+5 * 224
+3 * 224 0 0 0 0 0 0 0 0 224
+2 * 224 0 0 1 0 0 1
+5 * 224
jump=224 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 224
+2 * 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 * 224 0 224
+4 * 224 0 224
+5 +1 224 224
+4 * 224
+3 * 224 0 224
cfi=(2)
cfn=(2)
calls=224 0x402d74 645 
* * 2912 1344 448
+5 * 224
+3 * 224 0 224
+3 +1 224 224 0 1 0 0 1
+6 * 224 0 224
+3 * 224 224
+6 * 224 0 224
+3 +2 224 0 224
+7 * 224
jump=224 +86 * 
* * 
+2 +1 25424 25424
+3 * 25424
+3 * 25424 25424
+4 * 25424
+3 * 25424
+3 * 25424 0 25424
cfi=(2)
cfn=(144)
calls=25424 0x402d9a 770 
* * 279664 127120 76272
+5 * 25424 25424
+4 * 25424 25424
+5 * 25424
+4 * 25424 0 25424
+5 +1 25424 25424
+3 * 25424
+3 * 25424 25424
+4 * 25424
+3 * 25424
+3 * 25424 0 25424
cfi=(2)
cfn=(146)
calls=25424 0x402dba 770 
* * 279664 127120 76272
+5 * 25424 25424
+2 * 25424
+4 * 25424 25424
+5 * 25424
+4 * 25424 0 25424
+5 -2 25424 0 25424
+4 * 25424 25424
+3 * 25424
+3 * 25424 25424
+3 * 25424 0 0 0 0 0 0 0 0 25424 225
jcnd=25200/25424 -93 +1 
* * 
-9 * 224 224 0 1 0 0 1
+3 * 224
+3 * 224 224
+3 * 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 -93 +1 
* * 
+2 +4 224 224
+3 * 224
+3 * 224 0 0 1 0 0 1
+4 * 224 224
+5 * 224
+4 * 224
+3 * 224 0 224
+5 +1 224 224
+3 * 224
+3 * 224
+4 * 224 224
+5 * 224
+4 * 224
+3 * 224 0 224
+5 +1 224 224
+5 * 224 224
+5 * 224 224
+5 * 224 0 0 1 0 0 1
+4 * 224
+3 * 224 0 224
+5 +2 224 224
+3 +1 224 0 224
+3 * 224 224
+5 * 224 224
+1 * 224 224

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 910 0 910 1 0 0 1
+2 0 910 0 910
+2 0 910 0 910
+2 0 910
+3 0 910 0 910
+2 0 910 0 910
+1 0 910 0 910
+1 0 910
+3 0 910
+4 0 910 910
+4 0 910 0 910
+4 0 910
+3 0 910
+4 0 910
+3 0 910
+3 0 910
+3 0 910 0 0 1 0 0 1 0 0 910
+6 0 910
+4 0 910 0 0 0 0 0 0 0 0 910
+6 0 910
+4 0 910 0 0 0 0 0 0 0 0 910
+6 0 910 910
+7 0 910 0 0 0 0 0 0 0 0 910 2
jcnd=786/910 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 786
+2 0 786 0 0 0 0 0 0 0 0 786
+6 0 786 786 0 1 0 0 1
+4 0 786
+3 0 786
+2 0 786 0 0 0 0 0 0 0 0 786
jcnd=786/786 0x3877c78a40 0 
* 0 
+6 0 786 786
+4 0 786
+3 0 786 0 0 0 0 0 0 0 0 786
+6 0 786 786
+5 0 786
+4 0 786 0 0 0 0 0 0 0 0 786
jcnd=786/786 0x3877c7907c 0 
* 0 
+6 0 786 786
+5 0 786
+4 0 786 0 0 0 0 0 0 0 0 786
+6 0 786
+4 0 786 0 0 1 0 0 1 0 0 786
+6 0 786
+4 0 786 786
+7 0 786 0 0 0 0 0 0 0 0 786
+6 0 786 786
+6 0 786
+2 0 786 0 0 0 0 0 0 0 0 786
+6 0 786 786
+4 0 786 0 0 0 0 0 0 0 0 786 5
jcnd=782/786 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 786 786 0 1 0 0 1
+4 0 786 0 0 0 0 0 0 0 0 786 310
jcnd=310/786 0x3877c78bf0 0 
* 0 
+6 0 476 476
+6 0 476 0 0 1 0 0 1 0 0 476 44
jcnd=29/476 0x3877c78a78 0 
* 0 
+6 0 447 447
+5 0 447 447
+5 0 447 447
+4 0 447 0 0 0 0 0 0 0 0 447
+6 0 447 447
+4 0 447 0 0 0 0 0 0 0 0 447
+6 0 447 447
+9 0 447 0 447
+4 0 447 0 447
+4 0 447 0 0 0 0 0 0 0 0 447 4
jcnd=439/447 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 447
+3 0 447
+4 0 447 447
+4 0 447 447
+4 0 447 0 0 0 0 0 0 0 0 447
-12 0 29
+4 0 29 29
+4 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 476
+7 0 476 0 476
+4 0 476 0 476
+4 0 476 0 0 0 0 0 0 0 0 476 62
jcnd=407/476 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 407 0 407
+4 0 407
+3 0 407 0 407
+4 0 407
+4 0 407 0 407
+4 0 407 0 407
+4 0 407
+7 0 407 0 0 0 0 0 0 0 0 407
jcnd=407/407 0x3877c78b20 0 
* 0 
-7 0 310
+7 0 310 0 0 0 0 0 0 0 0 310
jcnd=310/310 0x3877c78b20 0 
* 0 
0x3877c78a40 0 786 0 0 1 0 0 1
+5 0 786 786
+4 0 786 786
+7 0 786 0 0 0 0 0 0 0 0 786
jcnd=786/786 +16 0 
* 0 
+16 0 786 0 786
+5 0 786 0 0 0 0 0 0 0 0 786
+6 0 786
+3 0 786
jump=786 0x3877c7878f 0 
* 0 
+10 0 29 0 29
+6 0 29 0 0 1 0 0 1
jump=29 0x3877c78885 0 
* 0 
0x3877c78b20 0 786 786 0 1 0 0 1
+4 0 786
+2 0 786 0 0 0 0 0 0 0 0 786
+6 0 786 786
+7 0 786 0 0 0 0 0 0 0 0 786
jcnd=786/786 +15 0 
* 0 
+15 0 786 0 786 1 0 0 1
+4 0 786 0 0 0 0 0 0 0 0 786 2
+6 0 786
+4 0 786 786
+1 0 786 786
+1 0 786 786
+2 0 786 786
+2 0 786 786
+2 0 786 786
+2 0 786 786
0x3877c78bf0 0 310 0 0 1 0 0 1
+3 0 310 0 310
+4 0 310
+3 0 310
+4 0 310 0 310 1 0 0 1
+4 0 310
jump=310 0x3877c788cf 0 
* 0 
0x3877c7907c 0 786 786 0 1 1 0 1 1
+4 0 786 0 0 1 0 0 1
+7 0 786
+4 0 786
+3 0 786
+3 0 786 0 0 0 0 0 0 0 0 786
jcnd=786/786 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 900 0 0 1 0 0 1
+7 0 900
+3 0 900
+3 0 900 900 0 0 1 0 0 1
+4 0 900
+4 0 900 0 0 0 0 0 0 0 0 0 0 900 111
jump=104 0x3877c89be8 0 
* 0 
jump=120 0x3877c89bd0 0 
* 0 
jump=112 0x3877c89bb8 0 
* 0 
jump=112 +11 0 
* 0 
jump=112 0x3877c89c48 0 
* 0 
jump=114 0x3877c89c30 0 
* 0 
jump=112 0x3877c89c18 0 
* 0 
jump=114 0x3877c89c00 0 
* 0 
+11 0 112 112
+3 0 112
+4 0 112
+4 0 112 112
+4 0 112
+4 0 112 0 112
+4 0 112
+9 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-40 0 6190 6190
+4 0 6190 0 6190 0 0 3 0 0 3
+4 0 6190 6190
+4 0 6190 0 6190
+4 0 6190 6190
+4 0 6190 0 6190 0 0 1 0 0 1
+4 0 6190 6190
+4 0 6190 0 6190
+4 0 6190
+4 0 6190
+4 0 6190 0 0 0 0 0 0 0 0 6190 426
jcnd=864/6190 0x3877c89c60 0 
* 0 
-32 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114 114
+4 0 114 0 114
+4 0 114
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114
jcnd=10/114 0x3877c89c60 0 
* 0 
-24 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
+4 0 112
+4 0 112 0 0 0 0 0 0 0 0 112
jcnd=8/112 0x3877c89c60 0 
* 0 
-16 0 114 114 0 1 0 0 1
+4 0 114 0 114
+4 0 114 0 0 1 0 0 1
+4 0 114
+4 0 114 0 0 0 0 0 0 0 0 114 4
jcnd=10/114 0x3877c89c60 0 
* 0 
+6 0 5742
+4 0 5742 5742
+3 0 5742 0 5742 0 0 1 0 0 1
+3 0 5742 5742
+4 0 5742 0 5742 0 0 3 0 0 3
+4 0 5742 5742
+4 0 5742 0 5742 0 0 4 0 0 4
+4 0 5742 5742
+4 0 5742 0 5742
+4 0 5742
jump=5742 -80 0 
* 0 
-30 0 104 104
+3 0 104 0 104
+3 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104
jump=104 -80 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-16 0 112 112
+4 0 112 0 112
+4 0 112 112
+4 0 112 0 112
+4 0 112
jump=112 -80 0 
* 0 
+8 0 112 112
+3 0 112
+4 0 112 0 0 1 0 0 1
+4 0 112
+4 0 112
jump=112 -39 0 
* 0 
+9 0 120
+3 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+3 0 120
+4 0 120
jump=120 -72 0 
* 0 
+8 0 104
+4 0 104 104
+3 0 104 0 0 0 0 0 0 0 0 104
+2 0 104
+4 0 104
jump=104 -99 0 
* 0 
+11 0 114 114 0 1 0 0 1
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b78 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b70 0 
* 0 
+9 0 114 114
+3 0 114
+4 0 114
+4 0 114
+4 0 114
jump=114 0x3877c89b68 0 
* 0 
+9 0 112 112
+3 0 112
+4 0 112
+4 0 112
+4 0 112
jump=112 0x3877c89b60 0 
* 0 
+9 0 900 0 900 1 0 0 1
+3 0 900 900

fn=(104) alloc_perturb
0x3877c77180 0 792 792 0 1 0 0 1
+6 0 792
+2 0 792 0 0 0 0 0 0 0 0 792 1
+2 0 792 792

fn=(38) _int_malloc
0x3877c79a00 0 910 0 910 1 0 0 1
+2 0 910
+3 0 910 0 910
+2 0 910 0 910
+2 0 910 0 910 0 0 1 0 0 1
+2 0 910
+3 0 910 0 910
+1 0 910 0 910
+1 0 910
+4 0 910
+4 0 910 0 0 0 0 0 0 0 0 910
+6 0 910
+4 0 910
+6 0 910
+3 0 910
+4 0 910
+4 0 910
+4 0 910
+3 0 910 0 0 0 0 0 0 0 0 910
+6 0 910 910 0 1 1 0 1 1
+7 0 910 0 0 0 0 0 0 0 0 910 5
jcnd=788/910 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 792
+4 0 792 792
+1 0 792 792
+1 0 792 792
+2 0 792 792
+2 0 792 792
+2 0 792 792
+2 0 792 792
+7 0 805
+7 0 805 0 0 1 0 0 1 0 0 805 5
jcnd=2/805 0x3877c79b70 0 
* 0 
+2 0 803
+3 0 803
+5 0 803
+3 0 803
+4 0 803 0 803
+4 0 803
+2 0 803
+5 0 803 803 0 0 11 0 0 11
+4 0 803
+3 0 803 0 0 0 0 0 0 0 0 803
jcnd=803/803 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 894 237 190 8 2 0 8 2 0 184 22
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 804 0 0 1 0 0 1
+3 0 804
+3 0 804
+3 0 804
+4 0 804
+3 0 804
+4 0 804 0 804
+5 0 804
+3 0 804 0 804
+4 0 804 0 804
+4 0 804 0 804
+5 0 804
+3 0 804
+3 0 804
+3 0 804
+3 0 804
+4 0 804
+4 0 804 0 0 1 0 0 1
+4 0 804 0 804
+4 0 804
+4 0 804 0 804
+5 0 804 0 804
+5 0 804
+3 0 804
+3 0 804 0 804
+5 0 804
+5 0 804
+3 0 804 0 804
+4 0 804 0 804
+4 0 804
+6 0 804 0 804
+4 0 804 0 804
+5 0 804 0 0 1 0 0 1
+3 0 804
+3 0 804
+3 0 804
jump=804 +87 0 
* 0 
+8 0 764
+3 0 764
+4 0 764
+2 0 764
+2 0 764
+3 0 764
+3 0 764
+3 0 764
+2 0 764
+2 0 764
+5 0 764
+2 0 764 764 0 0 2 0 0 2
+4 0 764
+3 0 764
+4 0 764 0 764
+4 0 764 0 764 0 0 1 0 0 1
+8 0 764
+7 0 764 0 764
+4 0 764 0 764 0 0 2 0 0 2
+4 0 764 0 764
+4 0 764 0 0 0 0 0 0 0 0 764
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1637 1637 0 1 0 0 1
+4 0 1637
+3 0 1637 0 0 0 0 0 0 0 0 1637 30
jcnd=773/1637 0x3877c79ef0 0 
* 0 
+6 0 864 864
+4 0 864 864 0 0 1 0 0 1
+4 0 864
+4 0 864 0 0 0 0 0 0 0 0 864
+6 0 864 864 0 1 1 0 1 1
+7 0 864 0 0 0 0 0 0 0 0 864
+6 0 864
+4 0 864
+7 0 864 0 0 0 0 0 0 0 0 864 5
jcnd=7/864 +11 0 
* 0 
+2 0 857
+3 0 857 0 0 0 0 0 0 0 0 857 62
jcnd=781/857 0x3877c79e28 0 
* 0 
+6 0 845
+3 0 845 0 845
+4 0 845 0 845
+5 0 845 0 0 0 0 0 0 0 0 845 10
jcnd=13/845 0x3877c7a090 0 
* 0 
+6 0 832
+7 0 832 0 0 0 0 0 0 0 0 832 14
jcnd=764/832 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 7
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 781 781 0 1 0 0 1
+4 0 781
+3 0 781 0 0 0 0 0 0 0 0 781 315
jcnd=393/781 0x3877c79ce1 0 
* 0 
+6 0 388 388
+5 0 388 0 0 0 0 0 0 0 0 388 5
jcnd=369/388 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 773 0 0 1 0 0 1
+7 0 773
+3 0 773 0 0 0 0 0 0 0 0 773 3
jcnd=2/773 0x3877c7a0b0 0 
* 0 
+6 0 773 773 0 1 0 0 1
+4 0 773
+3 0 773
+3 0 773
+2 0 773
+4 0 773
+3 0 773
+3 0 773
+2 0 773
+2 0 773
+2 0 773
+2 0 773 773
+8 0 773
+5 0 773
+5 0 773
+2 0 773 0 0 0 0 0 0 0 0 773
-2 0 388
+2 0 388 0 0 0 0 0 0 0 0 388
+2 0 1161
+2 0 1161 0 0 0 0 0 0 0 0 1161 21
jcnd=576/1161 +64 0 
* 0 
+2 0 585
+8 0 585
+3 0 585
+3 0 585 0 0 0 0 0 0 0 0 585 1
jcnd=1/585 0x3877c79fc0 0 
* 0 
-6 0 684
+3 0 684
+3 0 684 0 0 0 0 0 0 0 0 684 3
jcnd=309/684 0x3877c79fc0 0 
* 0 
+2 0 959
+2 0 959 959
+8 0 959
+2 0 959 0 0 0 0 0 0 0 0 959 19
jcnd=684/959 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 6591
+4 0 6591
+2 0 6591
+2 0 6591 0 0 0 0 0 0 0 0 6591 412
jcnd=5829/6591 -8 0 
* 0 
-2 0 576 0 0 1 0 0 1
+2 0 576 0 0 0 0 0 0 0 0 576 12
jcnd=549/576 -8 0 
* 0 
+2 0 851 851 0 0 4 0 0 4
+4 0 851 0 0 1 0 0 1
+3 0 851 0 0 0 0 0 0 0 0 851 369
jcnd=463/851 0x3877c7a1cf 0 
* 0 
+6 0 388
+2 0 388
+4 0 388
+2 0 388
+2 0 388
+2 0 388 0 388
+8 0 388
jump=388 0x3877c79f30 0 
* 0 
+37 0 310 310 0 1 0 0 1
+5 0 310 310
+4 0 310
+4 0 310 310
+5 0 310 0 0 0 0 0 0 0 0 310
jcnd=310/310 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 463 463 0 1 1 0 1 1
+4 0 463 463
+4 0 463
+3 0 463 463
+4 0 463
+4 0 463
+3 0 463
+3 0 463 463
+4 0 463 0 0 0 0 0 0 0 0 463
+6 0 463 463
+4 0 463 0 0 0 0 0 0 0 0 463
+6 0 463 463 0 1 0 0 1
+8 0 463 0 463
+4 0 463 0 463
+4 0 463 0 0 0 0 0 0 0 0 463 5
jcnd=393/463 +38 0 
* 0 
+2 0 70 70 0 0 2 0 0 2
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 393
+4 0 393 0 0 0 0 0 0 0 0 393 7
jcnd=13/393 0x3877c7a2e3 0 
* 0 
+6 0 450 450
+4 0 450 450 0 1 0 0 1
+4 0 450 0 0 0 0 0 0 0 0 450
+6 0 450
+4 0 450
+7 0 450 0 450 0 0 7 0 0 7
+4 0 450 0 450
+4 0 450 0 450
+4 0 450 0 450
+4 0 450 0 0 0 0 0 0 0 0 450 4
jcnd=2/450 +7 0 
* 0 
+2 0 448 0 448
+5 0 448
+7 0 448 0 0 0 0 0 0 0 0 448 4
jcnd=441/448 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 443 0 0 1 0 0 1
+7 0 443 0 443
+4 0 443
+3 0 443
+3 0 443
+4 0 443
+3 0 443
+4 0 443
+3 0 443
+3 0 443
+4 0 443 0 443
+4 0 443 0 443 0 0 1 0 0 1
+4 0 443
jump=443 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 13
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +7 0 
* 0 
+7 0 463
+4 0 463 0 0 1 0 0 1
+3 0 463
+3 0 463 0 463
cfn=(104)
calls=463 0x3877c77180 0 
* 0 1852 926 0 1 0 0 1 0 0 463
+5 0 463
+3 0 463
jump=463 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 310 0 0 1 0 0 1
+7 0 310
+2 0 310
+4 0 310
+3 0 310
+3 0 310 0 310
+5 0 310
+3 0 310
+4 0 310
+3 0 310 0 0 1 0 0 1
+4 0 310
+4 0 310
+3 0 310
+4 0 310 0 310
+4 0 310 0 310 0 0 11 0 0 11
+4 0 310
+3 0 310
+3 0 310 0 310
cfn=(104)
calls=310 0x3877c77180 0 
* 0 1240 620 0 0 0 0 0 0 0 310 1
+5 0 310
+3 0 310
jump=310 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 910 0 910 1 0 0 1
+5 0 910 0 910
+5 0 910
+3 0 910 0 910
+5 0 910
+4 0 910 910 0 0 1 0 0 1
+7 0 910 910 0 0 1 0 0 1
+3 0 910
+3 0 910 0 0 0 0 0 0 0 0 910
+6 0 910 910 0 0 1 0 0 1
+7 0 910 910 0 1 1 0 1 1
+4 0 910
+3 0 910 0 0 0 0 0 0 0 0 910
+2 0 910 910 0 0 1 0 0 1
+3 0 910
+3 0 910 0 0 0 0 0 0 0 0 910
jcnd=910/910 +97 0 
* 0 
+18 0 910
+3 0 910
+3 0 910 0 910
cfn=(38)
calls=910 0x3877c79a00 0 
* 0 206949 24941 29193 42 32 45 42 32 45 32363 1378
+5 0 910
+3 0 910
+3 0 910 0 0 0 0 0 0 0 0 910
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 5
+2 0 910 910
+7 0 910 0 0 0 0 0 0 0 0 910
jcnd=910/910 +13 0 
* 0 
+13 0 910 0 910
+2 0 910 0 0 0 0 0 0 0 0 910 12
+6 0 910
+3 0 910 910
+4 0 910 910
+5 0 910 910
+5 0 910
+4 0 910 910
+1 0 910 0 0 1 0 0 1
+5 0 910 910 0 0 1 0 0 1
+7 0 910 0 0 0 0 0 0 0 0 910
jcnd=910/910 +14 0 
* 0 
+14 0 910 0 910 1 0 0 1
+3 0 910 0 0 0 0 0 0 0 0 910
+6 0 910
jump=910 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 910 0 910 1 0 0 1
+2 0 910
+3 0 910
+3 0 910 0 910
+2 0 910
+3 0 910 0 910
+1 0 910
+3 0 910 0 910
+1 0 910
+3 0 910
+4 0 910
+3 0 910 0 0 0 0 0 0 0 0 910
+6 0 910
+4 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 4
jcnd=10/910 0x3877c838d1 0 
* 0 
+2 0 900
+3 0 900
+3 0 900
+3 0 900
+3 0 900
+3 0 900 0 0 0 0 0 0 0 0 900
jcnd=900/900 +41 0 
* 0 
+41 0 900 0 0 1 0 0 1
+3 0 900 0 0 0 0 0 0 0 0 900
jcnd=900/900 0x3877c839c0 0 
* 0 
+24 0 900
+3 0 900
+4 0 900
+3 0 900
+3 0 900
+3 0 900
+3 0 900
+3 0 900 0 0 0 0 0 0 0 0 900 448
jcnd=456/900 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 454
+10 0 454 454 0 0 2 0 0 2
+3 0 454
+4 0 454 0 454
+3 0 454
+4 0 454
+4 0 454 0 0 0 0 0 0 0 0 454
jcnd=454/454 -18 0 
* 0 
-18 0 1418 1418
+3 0 1418
+4 0 1418 0 1418
+3 0 1418
+4 0 1418
+4 0 1418 0 0 0 0 0 0 0 0 1418 8
jcnd=964/1418 -18 0 
* 0 
+2 0 910
+4 0 910
+3 0 910 910
+1 0 910 910
+1 0 910 910
+2 0 910 910 0 1 0 0 1
+2 0 910 910
0x3877c839c0 0 900 0 0 1 0 0 1
+3 0 900
+3 0 900
+3 0 900
+4 0 900 0 900 0 0 1 0 0 1
cfn=(284)
calls=900 0x3877c89b20 0 
* 0 143382 52668 50868 6 1 12 6 1 12 6866 430 900 111
+5 0 900
jump=900 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 910 910 0 1 1 0 1 1
+7 0 910 910 0 0 1 0 0 1
+3 0 910
+3 0 910 0 0 1 0 0 1 0 0 910
+6 0 910
+3 0 910 0 0 0 0 0 0 0 0 910
+6 0 910 910
+4 0 910
+4 0 910
+2 0 910 0 0 0 0 0 0 0 0 910
+2 0 910
+2 0 910
+7 0 910 0 0 0 0 0 0 0 0 910
jcnd=910/910 +14 0 
* 0 
+14 0 910
+2 0 910
cfn=(170)
calls=910 0x3877c78650 0 
* 0 86887 22971 12859 19 1 0 19 1 0 20907 431

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=11/12 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 5112002 2049015 1207643 238 83 80 238 83 80 163336 3409 5450 111
