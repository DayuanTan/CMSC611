version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1961


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2498024037 - 2498117020
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 268 0 0 1 0 0 1
+3 0 268 0 0 0 0 0 0 0 0 268
+2 0 268
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=268 0x3877c7b8b0 0 
* 0 28068 7058 3694 19 4 0 19 4 0 6544 31
* 0 268 268 0 1 1 0 1 1 0 0 0 268

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 268 0 268 1 0 0 1
+1 0 268
+5 0 268
+3 0 268 0 268
+1 0 268
+4 0 268 0 0 1 0 0 1
+3 0 268
+4 0 268
+3 0 268 0 268 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=268 0x3877c7aa50 0 
* 0 63367 9269 8617 34 33 34 34 33 34 11200 433
* 0 268 268 0 1 1 0 1 1 0 0 0 268
+5 0 268
+3 0 268 0 0 0 0 0 0 0 0 268
jcnd=268/268 +96 0 
* 0 
+96 0 268 0 0 1 0 0 1
+4 0 268 268
+1 0 268 268
+1 0 268 268

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 128
+4 * 128
+3 * 128 0 128
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=128 0x4044cc -35 
* * 640 256 256
+5 * 128 128
+1 * 128 128

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128 1 0 0 1
+4 +1 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=128 0x4049d4 -35 
* * 768 256 384 1 0 0 1
+5 * 128 128
+1 * 128 128

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 128
+4 * 128
+3 * 128 0 128
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=128 0x404520 -35 
* * 640 256 256
+5 * 128 128
+1 * 128 128

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=128 0x404a28 -35 
* * 768 256 384 1 0 1 1 0 1
+5 * 128 128
+1 * 128 128

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+4 * 128 128
+4 * 128 128
+1 * 128 128

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=64 0x40406a -87 
* * 1536 512 576 0 4 4 0 4 4 64
+5 * 64 64
+1 * 64 64

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 128 0 128
+1 * 128
+3 * 128 0 128
+4 * 128 128
+4 * 128 128
+1 * 128 128

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=64 0x403df2 -87 
* * 1536 512 576 0 5 1 0 5 1 64
+5 * 64 64
+1 * 64 64

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 188 0 188
+1 * 188
+3 * 188 0 188
+4 +1 188 188
+4 * 188 188
+1 * 188 188

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 +1 256 256 0 1 0 0 1
+4 * 256 256
+1 * 256 256

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 188 0 188
+1 * 188
+3 * 188 0 188 0 0 1 0 0 1
+4 +1 188 188
+4 * 188 188
+1 * 188 188

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 +1 256
+4 * 256
+3 * 256 0 256
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=256 0x404ffe 790 
* * 1536 768 512 1 0 0 1
+5 * 256 256
+3 * 256 256
+1 * 256 256

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 +1 256 256
+4 * 256 256
+1 * 256 256

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 +1 256
+4 * 256
+3 * 256 0 256 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=256 0x40500c 790 
* * 1536 768 512 1 0 0 1
+5 * 256 256
+3 * 256 256
+1 * 256 256

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 128 0 128
+1 * 128
+3 * 128 0 128
+4 * 128 0 128
+4 * 128 128
+4 * 128 128
+1 * 128 128

fl=(5)
fn=(28)
0x404992 113 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+4 +1 146
+10 * 146 146
+1 * 146 146

fn=(176)
0x4044cc 86 128 0 128
+1 * 128
+3 * 128 0 128
+4 * 128 128
+1 * 128 128

fn=(224)
0x403df2 129 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64
+3 * 64
+5 * 64 0 64
cfi=(16)
cfn=(226)
calls=64 0x402d61 -20 
* * 448 192 192
+5 * 64
+3 * 64 0 0 0 0 0 0 0 0 64
+2 * 64 64
+4 * 64 64 0 0 5 0 0 5
+2 * 64 0 64 0 0 1 0 0 1
+2 * 64 64
+1 * 64 64

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 134 0 134
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 * 134 0 134
+4 +1 134 134
+4 * 134
+3 * 134 0 134
cob=(5)
cfi=(8)
cfn=(164)
calls=134 0x387e4bb2f0 0 
* * 14566 3662 1846 21 5 0 21 5 0 3406 11 134
* * 134 134 0 1 1 0 1 1 0 0 0 134
+5 * 134 134
+1 * 134 134

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 134 0 134
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 * 134 0 134
+4 +1 134 134
+4 * 134
+3 * 134 0 134
cob=(5)
cfi=(8)
cfn=(164)
calls=134 0x387e4bb2f0 0 
* * 14574 3664 1848 0 0 0 0 0 0 3406 20 134
* * 134 134 0 0 0 0 0 0 0 0 0 134
+5 * 134 134
+1 * 134 134

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 134 0 134 1 0 0 1
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 * 134 0 134
+4 +2 134 134
+4 * 134
+3 * 134 0 134
cfn=(102)
calls=134 0x4048de +12 
* * 804 268 268 1 0 0 1
+5 * 134 134
+4 * 134 0 0 1 0 0 1
+3 * 134
+2 * 134 0 0 0 0 0 0 0 0 134
jcnd=134/134 +7 +3 
* * 
+7 +3 134 134
+4 * 134
+4 * 134
+3 * 134 0 134
cob=(5)
cfi=(8)
cfn=(32)
calls=134 0x387e4bd0b0 0 
* * 36571 5036 4483 20 14 19 20 14 19 6474 229 134
* * 134 134 0 0 0 0 0 0 0 0 0 134
+5 +1 134 134
+1 * 134 134

fn=(18)
0x404a28 81 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128 0 0 1 0 0 1
+4 * 128 0 128
+4 * 128 128
+1 * 128 128

fn=(92)
0x4049d4 81 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+4 * 128 0 128
+4 * 128 128
+1 * 128 128

fn=(196)
0x404520 86 128 0 128
+1 * 128
+3 * 128 0 128
+4 * 128 128
+1 * 128 128

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 134 0 134 1 0 0 1
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 * 134 0 134 1 0 0 1
+4 +2 134 134
+4 * 134
+3 * 134 0 134
cfn=(28)
calls=134 0x404992 +12 
* * 804 268 268 1 0 0 1
+5 * 134 134
+4 * 134
+3 * 134
+2 * 134 0 0 0 0 0 0 0 0 134
jcnd=134/134 +7 +3 
* * 
+7 +3 134 134
+4 * 134
+4 * 134
+3 * 134 0 134
cob=(5)
cfi=(8)
cfn=(32)
calls=134 0x387e4bd0b0 0 
* * 31084 5305 4938 18 20 16 18 20 16 4994 204 134
* * 134 134 0 1 1 0 1 1 0 0 0 134
+5 +1 134 134
+1 * 134 134

fn=(102)
0x4048de 113 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+4 +1 146
+10 * 146 146
+1 * 146 146

fn=(266)
0x40406a 129 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64
+3 * 64
+5 * 64 0 64
cfi=(16)
cfn=(226)
calls=64 0x402d61 -20 
* * 448 192 192
+5 * 64
+3 * 64 0 0 0 0 0 0 0 0 64
+2 * 64 64
+4 * 64 64 0 0 4 0 0 4
+2 * 64 0 64 0 0 4 0 0 4
+2 * 64 64
+1 * 64 64

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=128 0x404484 107 
* * 41890 12884 12120 25 3 4 25 3 4 1380 76 252 31
+5 * 128 128
+1 * 128 128

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +2 128 128 0 1 0 0 1
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=128 0x404a36 450 
* * 38306 11604 10840 24 3 4 24 3 4 1380 76 252 31
+5 * 128 128
+1 * 128 128

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=128 0x40439c 107 
* * 41890 12884 12120 7 0 8 7 0 8 1380 72 252
+5 * 128 128
+1 * 128 128

fn=(116)
0x40439c 107 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +10 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=128 0x4047d7 -26 
* * 40098 12244 11480 7 0 8 7 0 8 1380 72 252
+5 +1 128 128
+1 * 128 128

fn=(118)
0x4047d7 91 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=128 0x4049e2 450 
* * 38306 11604 10840 7 0 8 7 0 8 1380 72 252
+5 * 128 128
+1 * 128 128

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +10 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(52)
calls=128 0x404829 -26 
* * 40098 12244 11480 25 3 4 25 3 4 1380 76 252 31
+5 +1 128 128
+1 * 128 128

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 274 0 274 1 0 0 1
+1 * 274
+3 * 274 0 274 1 0 0 1
+4 +1 274 274
+4 * 274 274
+1 * 274 274

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+3 * 128 0 128
+4 * 128
+4 * 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=128 0x404380 726 
* * 1280 640 512
+5 * 128 128
+4 * 128 128
+1 * 128 128

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 128 0 128
+1 * 128
+3 * 128 0 128
+1 * 128
+4 * 128 0 128 1 0 0 1
+4 +2 128 128
+4 * 128
+3 * 128 0 128
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=128 0x40325e 113 
* * 768 384 256
+5 * 128
+3 * 128 128
+4 * 128 128
+4 * 128 128
+4 * 128 128
+3 -1 128
+3 * 128
+3 * 128 0 128
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=128 0x40326c 148 
* * 3968 1280 1536 4 0 0 4
+5 +1 128 128
+4 * 128
+3 * 128 0 128
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=128 0x4031ec 159 
* * 24090 7236 4718 25 6 0 25 6 0 3404 9 256
+5 * 128
jump=128 +28 * 
* * 
+28 * 128 0 0 1 0 0 1
+4 * 128 128
+1 * 128 128
+1 * 128 128

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 134 0 134 1 0 0 1
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 * 134 0 134
+4 +2 134 134
+5 * 134 0 0 0 0 0 0 0 0 134
+2 +1 134 134
+4 * 134 134
+4 * 134 134
+4 * 134
+3 * 134
+3 * 134 0 134
cfi=(5)
cfn=(160)
calls=134 0x4044d6 -65 
* * 16174 4198 2516 22 6 0 22 6 0 3406 11 268
+5 +1 134 134
+1 * 134 134

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 128 0 128
+1 * 128
+3 * 128 0 128
+1 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=128 0x4043ca -45 
* * 4608 1664 1792 4 0 4 4 0 4
+5 +1 128 128 0 1 0 0 1
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=128 0x404412 +43 
* * 37950 8270 7131 22 15 9 22 15 9 4963 163 256
+5 * 128
jump=128 +28 * 
* * 
+28 * 128
+4 * 128 128
+1 * 128 128
+1 * 128 128

fn=(14)
0x4043ca 90 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128 0 0 1 0 0 1
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(4)
cfn=(16)
calls=128 0x404804 +24 
* * 2304 768 896 2 0 1 2 0 1
+5 * 128 128
+4 * 128 0 128 0 0 2 0 0 2
+7 * 128 128
+4 * 128 0 128 1 0 0 1
+8 * 128 128
+4 * 128 0 128
+8 +1 128 128
+1 * 128 128

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+2 * 128 0 128
+2 * 128 0 128
+1 * 128 0 0 1 0 0 1
+4 * 128 0 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128
+3 * 128 0 128
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=128 0x4039fc 117 
* * 768 384 256 2 0 0 2
+5 * 128
+3 * 128 0 128
cfi=(3)
cfn=(84)
calls=128 0x4039ed -88 
* * 768 384 256
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=128 0x402d74 645 
* * 1664 768 256
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128
+3 * 128
+3 * 128 0 128 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=128 0x403a0a 134 
* * 51129 10571 9371 28 11 14 28 11 14 6504 216 256
+5 +4 128 128
+4 * 128
+3 * 128 0 128
cfn=(106)
calls=128 0x40325e 113 
* * 768 384 256 1 0 0 1
+5 * 128
+3 * 128 128
+4 * 128 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=128 0x403a98 565 
* * 3200 1280 1024 2 0 0 2
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(112)
calls=128 0x403a68 547 
* * 3200 1280 1024
+5 * 128
+3 * 128
+3 * 128
+3 * 128
+3 * 128 0 128
cfi=(11)
cfn=(114)
calls=128 0x403ac9 -60 
* * 43810 13524 12888 7 0 8 7 0 8 1380 72 252
+5 -3 128 128
+4 * 128 0 128
+4 * 128
jump=128 +28 +4 
* * 
+28 +4 128
+4 * 128 128
+1 * 128 128
+2 * 128 128
+2 * 128 128
+1 * 128 128

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 134 0 134 1 0 0 1
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 * 134 0 134
+4 +2 134 134
+5 * 134 0 0 0 0 0 0 0 0 134 6
+2 +1 134 134
+4 * 134 134
+4 * 134 134
+4 * 134
+3 * 134
+3 * 134 0 134
cfi=(5)
cfn=(190)
calls=134 0x40452a -65 
* * 16182 4200 2518 0 0 0 0 0 0 3406 20 268
+5 +1 134 134
+1 * 134 134

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 134 0 134 1 0 0 1
+1 * 134
+3 * 134
+4 * 134 0 134 1 0 0 1
+4 * 134 0 134
+4 0 134 134
+5 0 134 0 0 0 0 0 0 0 0 134
+2 0 134 134
+4 0 134 134
+4 0 134
+5 0 134
+3 0 134
+3 0 134 0 134
fi=(6) ???
cfi=(5)
cfn=(26)
calls=134 0x404730 99 
* 0 34568 6377 6010 22 21 16 22 21 16 5128 204 268
+5 0 134
fi=(6)
jump=134 +7 0 
* 0 
+7 0 134 134
+1 0 134 134

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+4 * 128 0 128
+4 * 128
+4 * 128 0 0 1 0 0 1
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=128 0x404468 726 
* * 1280 640 512 1 0 0 1
+5 * 128 128
+4 * 128 128
+1 * 128 128

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+3 * 128 0 128
+4 * 128
+4 * 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(10)
cfn=(44)
calls=128 0x404468 726 
* * 1280 640 512
+5 * 128 128
+4 * 128 128
+1 * 128 128

fn=(86)
0x403a0a 134 128 0 128
+1 * 128
+3 * 128 0 128
+1 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=128 0x4042e2 -45 
* * 4608 1664 1792 5 0 0 5
+5 +1 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=128 0x40432a +43 
* * 43705 8011 6683 22 11 14 22 11 14 6504 216 256
+5 * 128
jump=128 +28 * 
* * 
+28 * 128
+4 * 128 128
+1 * 128 128
+1 * 128 128

fn=(88)
0x4042e2 90 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128 1 0 0 1
cfi=(4)
cfn=(90)
calls=128 0x4047b2 +24 
* * 2304 768 896 3 0 0 3
+5 * 128 128
+4 * 128 0 128
+7 * 128 128
+4 * 128 0 128
+8 * 128 128
+4 * 128 0 128
+8 +1 128 128
+1 * 128 128

fn=(156)
0x4031ec 159 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+1 * 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128 128 0 1 0 0 1
+4 * 128
+3 * 128 128
+4 * 128 128
+3 * 128
+3 * 128
+3 * 128
+4 * 128
+3 * 128 128
+4 * 128 128
+3 -1 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(158)
calls=128 0x403ce6 +11 
* * 17562 4804 3054 22 6 0 22 6 0 3404 9 256
+5 +1 128 128
+4 * 128
+3 * 128 0 128
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=128 0x4031b8 -82 
* * 2944 1024 1024 1 0 0 1
+5 * 128
jump=128 +28 * 
* * 
+28 * 128
+4 * 128 128
+1 * 128 128
+1 * 128 128

fn=(172)
0x4031b8 79 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 128
+4 * 128
+3 * 128 0 128
cfi=(4)
cfn=(174)
calls=128 0x403ccc +42 
* * 1792 640 640
+5 * 128 128
+1 * 128 128

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 280 0 280 1 0 0 1
+1 * 280
+3 * 280 0 280
+4 +1 280 280
+4 * 280 280 0 0 2 0 0 2
+4 * 280
+3 * 280 280
+4 * 280 280
+3 * 280
+3 * 280
+3 * 280
+4 * 280 280
+1 * 280 280

fn=(106)
0x40325e 113 274 0 274 1 0 0 1
+1 * 274
+3 * 274 0 274
+4 +1 274 274
+4 * 274 274
+1 * 274 274

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 140 0 140 1 0 0 1
+1 * 140
+3 * 140 0 140 0 0 1 0 0 1
+4 +1 140 140
+4 * 140 140
+1 * 140 140

fn=(82)
0x4039fc 117 140 0 140 1 0 0 1
+1 * 140
+3 * 140 0 140 1 0 0 1
+4 +1 140 140
+4 * 140 140
+1 * 140 140

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64 0 0 0 0 0 0 0 0 64 7
jcnd=6/64 +51 +10 
* * 
+2 +3 58 58
+4 * 58 58
+4 * 58 58
+4 -1 58 58
+4 * 58
+3 * 58
+3 * 58 0 58
cfi=(3)
cfn=(222)
calls=58 0x403373 215 
* * 2204 754 812 0 4 0 0 4 0 58
+5 +2 58 58
+4 * 58 58
+4 * 58
+4 * 58 58
+4 * 58 0 58
+4 * 58
jump=58 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8384 2585 2245 27 4 9 27 4 9 470 18 35
+5 +2 64 64
+1 * 64 64

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+2 * 128 0 128
+2 * 128 0 128
+1 * 128
+4 * 128 0 128 1 0 0 1
+4 * 128 0 128
+4 +2 128 128
+4 * 128
+3 * 128 0 128
cfn=(6)
calls=128 0x403b08 117 
* * 768 384 256 1 0 1 1 0 1
+5 * 128
+3 * 128 0 128
cfi=(3)
cfn=(8)
calls=128 0x403afa -88 
* * 768 384 256 1 0 0 1
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(10)
calls=128 0x402f54 645 
* * 1664 768 256 1 1 0 1 1
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128
+3 * 128
+3 * 128 0 128
cfn=(12)
calls=128 0x403b16 134 
* * 45374 10830 9819 27 15 13 27 15 13 4963 163 256
+5 +4 128 128 0 1 0 0 1
+4 * 128
+3 * 128 0 128
cfn=(40)
calls=128 0x40333c 113 
* * 768 384 256 2 0 0 2
+5 * 128
+3 * 128 128
+4 * 128 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(42)
calls=128 0x403ba4 565 
* * 3200 1280 1024 3 0 0 3
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(46)
calls=128 0x403b74 547 
* * 3200 1280 1024
+5 * 128
+3 * 128
+3 * 128
+3 * 128
+3 * 128 0 128 1 0 0 1
cfi=(11)
cfn=(48)
calls=128 0x403bd5 -60 
* * 43810 13524 12888 26 3 4 26 3 4 1380 76 252 31
+5 -3 128 128
+4 * 128 0 128
+4 * 128
jump=128 +28 +4 
* * 
+28 +4 128
+4 * 128 128
+1 * 128 128
+2 * 128 128
+2 * 128 128
+1 * 128 128

fn=(108)
0x403a98 565 128 0 128 1 0 0 1
+1 * 128
+3 * 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+4 * 128 0 128
+4 * 128
+4 * 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfi=(10)
cfn=(110)
calls=128 0x404380 726 
* * 1280 640 512 1 0 0 1
+5 * 128 128
+4 * 128 128
+1 * 128 128

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 128 0 128
+1 * 128
+3 * 128 0 128
+1 * 128
+4 * 128 0 128 1 0 0 1
+4 +2 128 128
+4 * 128
+3 * 128 0 128
cfn=(40)
calls=128 0x40333c 113 
* * 768 384 256
+5 * 128
+3 * 128 128
+4 * 128 128
+4 * 128 128
+4 * 128 128
+3 -1 128
+3 * 128
+3 * 128 0 128
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=128 0x40334a 148 
* * 3968 1280 1536 2 0 0 2
+5 +1 128 128
+4 * 128
+3 * 128 0 128
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=128 0x4032ca 159 
* * 24072 7226 4716 3 0 0 3 0 0 3398 16 256
+5 * 128
jump=128 +28 * 
* * 
+28 * 128 0 0 1 0 0 1
+4 * 128 128
+1 * 128 128
+1 * 128 128

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 134 0 134 1 0 0 1
+1 * 134 0 0 1 0 0 1
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 0 134 134
+5 0 134 0 0 0 0 0 0 0 0 134
+2 0 134 134
+4 0 134 134
+4 0 134
+5 0 134
+3 0 134
+3 0 134 0 134
fi=(6)
cfi=(5)
cfn=(100)
calls=134 0x40461a 99 
* 0 40055 6108 5555 23 14 19 23 14 19 6608 229 268
+5 0 134
fi=(6)
jump=134 +7 0 
* 0 
+7 0 134 134
+1 0 134 134

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 6560 0 6560
+1 * 6560
+3 * 6560 0 6560
+4 * 6560 0 6560
+4 +1 6560 6560
+4 * 6560 6560
+3 * 6560 6560
+4 * 6560
+4 * 6560
+3 * 6560 6560
+1 * 6560 6560

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 6560 0 6560
+1 * 6560
+3 * 6560 0 6560 1 0 0 1
+4 * 6560 0 6560
+4 +1 6560 6560
+4 * 6560 6560
+3 * 6560 6560
+4 * 6560
+4 * 6560
+3 * 6560 6560
+1 * 6560 6560

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 128
+4 * 128
+3 * 128 0 128
cfi=(4)
cfn=(194)
calls=128 0x403d7e +42 
* * 1792 640 640 1 0 0 1
+5 * 128 128
+1 * 128 128

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186)
0x4032ca 159 128 0 128 1 0 0 1
+1 * 128
+3 * 128 0 128
+1 * 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128 128
+4 * 128
+3 * 128 128
+4 * 128 128
+3 * 128
+3 * 128
+3 * 128
+4 * 128
+3 * 128 128
+4 * 128 128
+3 -1 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(188)
calls=128 0x403d98 +11 
* * 17544 4794 3052 1 0 0 1 0 0 3398 16 256
+5 +1 128 128
+4 * 128
+3 * 128 0 128
cfn=(192)
calls=128 0x403296 -82 
* * 2944 1024 1024 1 0 0 1
+5 * 128
jump=128 +28 * 
* * 
+28 * 128
+4 * 128 128
+1 * 128 128
+1 * 128 128

fn=(2)
0x402d74 645 536 0 536 1 0 0 1
+1 * 536
+3 * 536 0 536 0 0 1 0 0 1
+4 +1 536 536
+4 * 536 536 0 1 1 0 1 1
+4 * 536
+3 * 536 536
+4 * 536 536
+3 * 536
+3 * 536
+3 * 536
+4 * 536 536
+1 * 536 536

fn=(20)
0x404412 179 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(22)
calls=128 0x404236 -14 
* * 34750 6734 6235 21 15 9 21 15 9 4963 163 256
+5 * 128 128
+4 * 128 0 128
+3 +1 128 128
+4 * 128 128 0 1 0 0 1
+3 * 128 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+3 * 128 128
+4 * 128
+4 * 128
+3 * 128 128
+4 * 128 0 128
+4 +1 128 128
+1 * 128 128

fn=(94)
0x40432a 179 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 +2 128 128
+4 * 128 128 0 1 0 0 1
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(96)
calls=128 0x403fbe -14 
* * 40505 6475 5787 21 11 14 21 11 14 6504 216 256
+5 * 128 128
+4 * 128 0 128
+3 +1 128 128
+4 * 128 128
+3 * 128 128
+4 * 128 0 128
+4 +1 128 128
+4 * 128 128
+3 * 128 128
+4 * 128
+4 * 128
+3 * 128 128
+4 * 128 0 128
+4 +1 128 128
+1 * 128 128

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 64 0 64
+1 * 64
+3 * 64 0 0 1 0 0 1
+4 * 64 0 64
+4 * 64 0 64
+4 +2 64 64
+4 * 64 64
+4 * 64 64
+4 * 64 64
+4 * 64
+3 * 64 0 0 0 0 0 0 0 0 64
jcnd=6/64 +51 +10 
* * 
+2 +3 58 58
+4 * 58 58
+4 * 58 58
+4 -1 58 58
+4 * 58
+3 * 58
+3 * 58 0 58
cfi=(3)
cfn=(264)
calls=58 0x4036b1 215 
* * 2204 754 812 0 4 1 0 4 1 58
+5 +2 58 58
+4 * 58 58
+4 * 58
+4 * 58 58
+4 * 58 0 58
+4 * 58
jump=58 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246)
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8678 2607 2256 21 6 13 21 6 13 537 53 35
+5 +2 64 64
+1 * 64 64

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256 1 0 0 1
+4 +1 256 256
+4 * 256
+3 * 256 0 256
cfi=(13)
cfn=(58)
calls=256 0x404d8f -77 
* * 1536 768 512 1 0 0 1
+5 * 256 256
+1 * 256 256

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140 1 0 0 1
+4 * 140 0 140
+4 * 140 0 140
+4 +2 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140
+4 * 140 0 140
+4 +1 140 140
+5 * 140 0 0 0 0 0 0 0 0 140
jcnd=6/140 +33 +2 
* * 
+2 +1 134 134
+4 * 134
+8 * 134 134
+4 * 134 134
+4 * 134
+3 * 134 0 0 1 0 0 1
+3 * 134 0 134 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=134 0x3877c83840 0 
* * 14752 3394 3131 11 2 5 11 2 5 1300 78 129 31
* * 134 134 0 1 1 0 1 1 0 0 0 134
+5 +1 140 140
+4 * 140
+8 * 140 140
+4 * 140
+3 +1 140 140
+1 * 140 140

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140 1 0 0 1
+4 * 140 0 140
+4 * 140 0 140 0 0 1 0 0 1
+4 +2 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140
+4 * 140 0 140
+4 +1 140 140
+5 * 140 0 0 0 0 0 0 0 0 140
jcnd=6/140 +33 +2 
* * 
+2 +1 134 134
+4 * 134
+8 * 134 134
+4 * 134 134
+4 * 134
+3 * 134
+3 * 134 0 134
cob=(2)
cfi=(9)
cfn=(78)
calls=134 0x3877c83840 0 
* * 14752 3394 3131 0 0 9 0 0 9 1300 75 129
* * 134 134 0 0 0 0 0 0 0 0 0 134
+5 +1 140 140
+4 * 140
+8 * 140 140
+4 * 140
+3 +1 140 140
+1 * 140 140

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128 1 0 0 1
+4 * 128 0 128
+4 * 128 0 128
+4 +8 128 0 128
+4 +3 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(74)
calls=128 0x404f37 -22 
* * 17826 4692 3800 14 3 3 14 3 3 1380 76 252 31
+5 +1 128 128
+1 * 128 128

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 128 0 128
+1 * 128
+3 * 128 0 128
+2 * 128 0 128
+1 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +4 128 128
+4 * 128
+3 * 128 0 128
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=128 0x404878 277 
* * 1920 768 640 1 0 0 1
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=128 0x404d44 277 
* * 3200 1152 1024 2 0 0 2
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(132)
calls=128 0x404d44 277 
* * 3200 1152 1024
+5 * 128
+3 * 128
+3 * 128
+3 * 128 0 128
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=128 0x404d5e -49 
* * 19746 5332 4568 1 0 8 1 0 8 1380 72 252
+5 +1 128
+4 * 128 128
+1 * 128 128
+2 * 128 128
+1 * 128 128

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(54)
0x404a36 450 128 0 128
+1 * 128
+3 * 128 0 128
+1 * 128
+4 * 128 0 128 1 0 0 1
+4 * 128 0 128
+4 * 128 0 128
+4 +10 128 128
+4 * 128
+3 * 128 0 128
cfn=(56)
calls=128 0x404c38 288 
* * 1920 768 640 3 0 0 3
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(56)
calls=128 0x404c38 288 
* * 1920 768 640
+5 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=128 0x404c52 -36 
* * 31650 9300 8536 20 3 4 20 3 4 1380 76 252 31
+5 +1 128
+4 * 128 128
+1 * 128 128
+1 * 128 128

fn=(60)
0x404c52 424 128 0 128
+1 * 128
+3 * 128 0 128
+2 * 128 0 128
+1 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +4 128 128
+4 * 128
+3 * 128 0 128
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=128 0x40492d 277 
* * 1920 768 640 2 0 0 2
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=128 0x404d9d 277 
* * 3200 1152 1024 2 0 1 2 0 1
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(66)
calls=128 0x404d9d 277 
* * 3200 1152 1024
+5 * 128
+3 * 128
+3 * 128
+3 * 128 0 128
cfn=(72)
calls=128 0x404db7 -49 
* * 19746 5332 4568 15 3 3 15 3 3 1380 76 252 31
+5 +1 128
+4 * 128 128
+1 * 128 128
+2 * 128 128
+1 * 128 128

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 164 0 164 1 0 0 1
+1 * 164
+3 * 164
+4 * 164 0 164
+4 +1 164 164
+4 * 164
+3 * 164 0 164 1 0 0 1
cfi=(13)
cfn=(64)
calls=164 -33 -66 
* * 984 492 328
+5 * 164 164
+1 * 164 164

fn=(66)
0x404d9d 277 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256
+3 * 256 0 256
cfi=(13)
cfn=(68)
calls=256 0x404f1a -58 
* * 4096 1536 1280 2 0 1 2 0 1
+5 * 256 256
+1 * 256 256

fn=(240)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 128 0 128
+1 * 128
+3 * 128 0 128
+1 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +10 128 128
+4 * 128
+3 * 128 0 128
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=128 0x404bc6 288 
* * 1920 768 640 3 0 0 3
+5 * 128
+3 * 128 128
+4 * 128
+3 * 128 0 128
cfn=(122)
calls=128 0x404bc6 288 
* * 1920 768 640
+5 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(126)
calls=128 0x404be0 -36 
* * 31650 9300 8536 4 0 8 4 0 8 1380 72 252
+5 +1 128
+4 * 128 128
+1 * 128 128
+1 * 128 128

fn=(128)
0x404878 277 164 0 164
+1 * 164
+3 * 164
+4 * 164 0 164 1 0 0 1
+4 +1 164 164
+4 * 164
+3 * 164 0 164
cfi=(13)
cfn=(130)
calls=164 -33 -66 
* * 984 492 328 0 0 1 0 0 1
+5 * 164 164
+1 * 164 164

fn=(132)
0x404d44 277 256 0 256
+1 * 256
+3 * 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256
+3 * 256 0 256
cfi=(13)
cfn=(134)
calls=256 0x404e98 -58 
* * 4096 1536 1280 2 0 0 2
+5 * 256 256
+1 * 256 256

fn=(138)
0x404d5e 379 128 0 128
+1 * 128
+3 * 128
+4 * 128 0 128
+4 * 128 0 128
+4 * 128 0 128
+4 +8 128 0 128
+4 +3 128 128
+4 * 128 128
+4 * 128 128
+4 * 128
+3 * 128
+3 * 128 0 128
cfn=(140)
calls=128 0x404eb5 -22 
* * 17826 4692 3800 1 0 8 1 0 8 1380 72 252
+5 +1 128 128
+1 * 128 128

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 256 0 256 1 0 0 1
+1 * 256
+3 * 256
+4 * 256 0 256
+4 +1 256 256
+4 * 256
+3 * 256 0 256
cfi=(13)
cfn=(124)
calls=256 0x404d36 -77 
* * 1536 768 512 2 0 0 2
+5 * 256 256
+1 * 256 256

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 +1 256 256
+4 * 256 256
+1 * 256 256

fn=(110)
0x404380 726 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 * 256 0 256
+4 * 256 256
+4 * 256 256
+3 * 256 256
+4 * 256 0 256
+3 * 256 256
+1 * 256 256

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 256 0 256 1 0 0 1
+1 * 256
+3 * 256 0 256
+4 +1 256 256
+4 * 256 256
+1 * 256 256

fn=(44)
0x404468 726 256 0 256
+1 * 256
+3 * 256 0 256
+4 * 256 0 256
+4 * 256 256
+4 * 256 256
+3 * 256 256
+4 * 256 0 256 1 0 0 1
+3 * 256 256
+1 * 256 256

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262)
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 134 0 134 1 0 0 1
+1 * 134
+3 * 134 0 134
+4 * 134 0 134 1 0 0 1
+4 * 134 134
+1 * 134 134

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 134 0 134 1 0 0 1
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 +4 134 134
+4 * 134 134
+4 * 134
+3 * 134
+3 * 134 0 134
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=134 0x40454c -14 
* * 804 268 402 1 0 0 1
+5 +2 134 134
+1 * 134 134

fn=(150)
0x40326c 148 134 0 134
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 * 134 0 134
+4 +3 134 134 0 1 0 0 1
+4 * 134 134
+4 * 134
+3 * 134
+3 * 134 0 134
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=134 0x403d1a -29 
* * 2412 804 938 3 0 0 3
+5 +1 134 134
+1 * 134 134

fn=(180)
0x40334a 148 134 0 134
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 * 134 0 134
+4 +3 134 134
+4 * 134 134
+4 * 134
+3 * 134
+3 * 134 0 134
cfn=(182)
calls=134 0x403dcc -29 
* * 2412 804 938 2 0 0 2
+5 +1 134 134
+1 * 134 134

fn=(152)
0x403d1a 122 134 0 134 1 0 0 1
+1 * 134
+3 * 134
+4 * 134 0 134
+4 * 134 0 134
+4 +4 134 134
+4 * 134 134
+4 * 134
+3 * 134
+3 * 134 0 134
cfn=(154)
calls=134 0x4044f8 -14 
* * 804 268 402 2 0 0 2
+5 +2 134 134
+1 * 134 134

fn=(184)
0x40454c 112 134 0 134 1 0 0 1
+1 * 134
+3 * 134 0 134
+4 * 134 0 134
+4 * 134 134
+1 * 134 134

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1962 313 311 3 6 7 3 6 7 299 41 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1694 303 304 4 3 5 4 3 5 238 13 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 64 0 64 1 0 0 1
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 +1 64 64
+4 * 64
+3 * 64 0 64
cfi=(2)
cfn=(2)
calls=64 0x402d74 645 
* * 832 384 128
+5 * 64
+3 * 64 0 64
+3 +1 64 64
+6 * 64 0 64
+3 * 64 64
+6 * 64 0 64
+3 +1 64 64
+6 * 64 0 64 1 0 0 1
+3 * 64 64
+6 * 64 0 64
+3 +2 64 0 64
+7 * 64
jump=64 +86 * 
* * 
+2 +1 2144 2144
+3 * 2144
+3 * 2144 2144
+4 * 2144
+3 * 2144
+3 * 2144 0 2144
cfi=(2)
cfn=(144)
calls=2144 0x402d9a 770 
* * 23584 10720 6432
+5 * 2144 2144
+4 * 2144 2144
+5 * 2144
+4 * 2144 0 2144
+5 +1 2144 2144
+3 * 2144
+3 * 2144 2144
+4 * 2144
+3 * 2144
+3 * 2144 0 2144
cfi=(2)
cfn=(146)
calls=2144 0x402dba 770 
* * 23584 10720 6432 1 0 0 1
+5 * 2144 2144
+2 * 2144
+4 * 2144 2144
+5 * 2144
+4 * 2144 0 2144
+5 -2 2144 0 2144
+4 * 2144 2144
+3 * 2144
+3 * 2144 2144
+3 * 2144 0 0 0 0 0 0 0 0 2144 67
jcnd=2080/2144 -93 +1 
* * 
-9 * 64 64 0 1 0 0 1
+3 * 64
+3 * 64 64
+3 * 64 0 0 0 0 0 0 0 0 64
jcnd=64/64 -93 +1 
* * 
+2 +4 64 64
+3 * 64
+3 * 64
+4 * 64 64 0 1 0 0 1
+5 * 64
+4 * 64
+3 * 64 0 64
+5 +1 64 64
+3 * 64
+3 * 64
+4 * 64 64
+5 * 64
+4 * 64
+3 * 64 0 64
+5 +1 64 0 64
+7 * 64
jump=64 0x4016ee * 
* * 
+2 +1 2144 2144
+3 * 2144
+3 * 2144 2144
+4 * 2144
+3 * 2144 0 0 1 0 0 1
+3 * 2144 0 2144
cfi=(2)
cfn=(146)
calls=2144 0x402dba 770 
* * 23584 10720 6432
+5 * 2144 2144
+2 * 2144
+4 * 2144 2144
+5 * 2144 0 2144
+5 +1 2144 2144
+3 * 2144
+3 * 2144 2144
+4 * 2144
+3 * 2144
+3 * 2144 0 2144
cfi=(2)
cfn=(144)
calls=2144 0x402d9a 770 
* * 23584 10720 6432
+5 * 2144 2144
+4 * 2144 2144
+5 * 2144 0 2144
+5 +1 2144 2144
+5 * 2144 2144
+5 * 2144 2144
+5 * 2144
+4 * 2144 0 2144
+5 +1 2144 2144
+5 * 2144 2144
+5 * 2144 2144
+5 * 2144
+4 * 2144 0 2144
+5 -4 2144 0 2144
+4 * 2144 2144
+3 * 2144
+3 * 2144 2144
+3 * 2144 0 0 0 0 0 0 0 0 2144 65
jcnd=2080/2144 0x401672 +1 
* * 
-9 * 64 64 0 1 0 0 1
+3 * 64
+3 * 64 64
+3 * 64 0 0 0 0 0 0 0 0 64
jcnd=64/64 0x401672 +1 
* * 
+6 +6 64 64 0 1 0 0 1
+5 * 64 64
+5 * 64 0 64
+5 +2 64 64
+3 +1 64 0 64
+3 * 64 64
+5 * 64 64
+1 * 64 64

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 64
+7 * 64
+7 * 64
+3 * 64
+3 * 64 0 64
cfi=(2)
cfn=(4)
calls=64 0x4030b2 310 
* * 53268 15335 13917 63 19 17 63 19 17 3207 169 254 31
+5 * 64
+7 * 64
+7 * 64
+3 * 64
+3 * 64 0 64
cfi=(2)
cfn=(80)
calls=64 0x402ff4 310 
* * 56264 15216 13711 43 11 22 43 11 22 3997 194 254
+5 * 64 0 0 1 0 0 1
+7 * 64
+7 * 64
+3 * 64
+3 * 64 0 64
cfn=(142)
calls=64 0x401585 -52 
* * 227136 100224 52544 8 0 0 8 0 0 4416 132
+5 * 64 0 64
+8 * 64 64
+6 * 64 0 64
+6 * 64
+7 * 64
+3 * 64 0 64
cfi=(2)
cfn=(148)
calls=64 0x402df4 414 
* * 15949 5026 3639 31 6 0 31 6 0 1702 6 128
+5 * 64
+7 * 64
+3 * 64 0 64 1 0 0 1
cfi=(2)
cfn=(178)
calls=64 0x402e74 414 
* * 15940 5021 3638 7 0 0 7 0 0 1699 9 128
+5 +2 64
+7 * 64
+7 * 64
+3 * 64
+3 * 64 0 64
cfi=(2)
cfn=(4)
calls=64 0x4030b2 310 
* * 52684 15291 13782 2 0 1 2 0 1 3136 70 254
+5 * 64
+7 * 64
+7 * 64
+3 * 64
+3 * 64 0 64
cfi=(2)
cfn=(80)
calls=64 0x402ff4 310 
* * 55443 15151 13540 0 0 0 0 0 0 3887 94 254
+5 * 64 64
+6 * 64 0 0 1 0 0 1
+7 * 64
+7 * 64 0 64
+6 * 64 64
+8 * 64
+3 * 64
+3 * 64 0 64
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=64 0x401719 -33 
* * 106688 44288 24544 4 0 0 4 0 0 2208 67
+5 * 64 0 64
+8 * 64 64
+6 * 64 0 64
+6 * 64
+7 * 64 0 0 1 0 0 1
+3 * 64 0 64
cfi=(2)
cfn=(148)
calls=64 0x402df4 414 
* * 15949 5026 3639 0 0 0 0 0 0 1702 3 128
+5 * 64
+7 * 64
+3 * 64 0 64
cfi=(2)
cfn=(178)
calls=64 0x402e74 414 
* * 15940 5021 3638 0 0 0 0 0 0 1699 7 128
+5 +2 64 64
+7 * 64
+3 * 64 0 64
cfi=(2)
cfn=(2)
calls=64 0x402d74 645 
* * 832 384 128
+5 * 64 64
+6 * 64
+3 * 64
+3 * 64
+3 * 64 64
+7 * 64
+3 * 64 0 0 1 0 0 1
+3 * 64 0 64
cfi=(2)
cfn=(144)
calls=64 0x402d9a 770 
* * 704 320 192
+5 * 64
+3 * 64
+7 * 64
+3 * 64
+3 * 64 0 64
cfi=(2)
cfn=(200)
calls=64 0x402eda 901 
* * 12366 4201 3419 30 8 9 30 8 9 592 25 35
+5 +1 64 64
+7 * 64
+3 * 64 0 64
cfi=(2)
cfn=(10)
calls=64 0x402f54 645 
* * 832 384 128 0 1 0 0 1
+5 * 64 64
+6 * 64
+3 * 64
+3 * 64
+3 * 64 64
+7 * 64 0 0 1 0 0 1
+3 * 64
+3 * 64 0 64
cfi=(2)
cfn=(146)
calls=64 0x402dba 770 
* * 704 320 192
+5 * 64
+3 * 64
+7 * 64
+3 * 64
+3 * 64 0 64
cfi=(2)
cfn=(244)
calls=64 0x402f7a 901 
* * 12660 4223 3430 22 10 14 22 10 14 659 53 35
+5 +1 64 64
+7 * 64
+3 * 64 0 64
cfi=(2)
cfn=(10)
calls=64 0x402f54 645 
* * 832 384 128
+5 * 64 64
+6 * 64
+3 * 64
+3 * 64
+3 * 64 64 0 1 0 0 1
+7 * 64
+3 * 64
+3 * 64 0 64
cfi=(2)
cfn=(146)
calls=64 0x402dba 770 
* * 704 320 192
+5 * 64 64
+2 * 64
+4 * 64 64
+8 * 64 64
+8 * 64 0 64
+8 +1 64 64
+7 * 64
+3 * 64 0 64
cfi=(2)
cfn=(2)
calls=64 0x402d74 645 
* * 832 384 128
+5 * 64 64 0 1 0 0 1
+6 * 64
+3 * 64
+3 * 64
+3 * 64 64
+7 * 64
+3 * 64
+3 * 64 0 64
cfi=(2)
cfn=(144)
calls=64 0x402d9a 770 
* * 704 320 192
+5 * 64 64
+4 * 64 64
+8 * 64
+4 * 64 64
+8 * 64
+3 * 64 0 64
+8 +2 64 0 64
+7 -12 64 64
+8 * 64 64
+7 * 64 0 0 0 0 0 0 0 0 64 3
jcnd=1/64 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 64
+7 * 64
+3 * 64 0 64
cfi=(2)
cfn=(2)
calls=64 0x402d74 645 
* * 832 384 128 2 0 1 2 0 1
+5 * 64
+3 * 64 64
+7 * 64
+3 * 64 0 64
cfi=(2)
cfn=(2)
calls=64 0x402d74 645 
* * 832 384 128 0 1 0 0 1
+5 * 64
+3 * 64 0 0 0 0 0 0 0 0 64
+2 * 64 0 0 1 0 0 1
+5 * 64
jump=64 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 64
+2 * 64 0 0 0 0 0 0 0 0 64
jcnd=64/64 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 64 0 64
+1 * 64
+3 * 64
+4 * 64 0 64
+4 * 64 0 64
+4 * 64 0 64
+5 +1 64 64
+4 * 64
+3 * 64 0 64
cfi=(2)
cfn=(2)
calls=64 0x402d74 645 
* * 832 384 128
+5 * 64
+3 * 64 0 64
+3 +1 64 64 0 1 0 0 1
+6 * 64 0 64
+3 * 64 64
+6 * 64 0 64
+3 +2 64 0 64
+7 * 64
jump=64 +86 * 
* * 
+2 +1 2144 2144
+3 * 2144
+3 * 2144 2144
+4 * 2144
+3 * 2144
+3 * 2144 0 2144
cfi=(2)
cfn=(144)
calls=2144 0x402d9a 770 
* * 23584 10720 6432
+5 * 2144 2144
+4 * 2144 2144
+5 * 2144
+4 * 2144 0 2144
+5 +1 2144 2144
+3 * 2144
+3 * 2144 2144
+4 * 2144
+3 * 2144
+3 * 2144 0 2144
cfi=(2)
cfn=(146)
calls=2144 0x402dba 770 
* * 23584 10720 6432
+5 * 2144 2144
+2 * 2144
+4 * 2144 2144
+5 * 2144
+4 * 2144 0 2144
+5 -2 2144 0 2144
+4 * 2144 2144
+3 * 2144
+3 * 2144 2144
+3 * 2144 0 0 0 0 0 0 0 0 2144 67
jcnd=2080/2144 -93 +1 
* * 
-9 * 64 64 0 1 0 0 1
+3 * 64
+3 * 64 64
+3 * 64 0 0 0 0 0 0 0 0 64
jcnd=64/64 -93 +1 
* * 
+2 +4 64 64
+3 * 64
+3 * 64 0 0 1 0 0 1
+4 * 64 64
+5 * 64
+4 * 64
+3 * 64 0 64
+5 +1 64 64
+3 * 64
+3 * 64
+4 * 64 64
+5 * 64
+4 * 64
+3 * 64 0 64
+5 +1 64 64
+5 * 64 64
+5 * 64 64
+5 * 64 0 0 1 0 0 1
+4 * 64
+3 * 64 0 64
+5 +2 64 64
+3 +1 64 0 64
+3 * 64 64
+5 * 64 64
+1 * 64 64

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 268 0 268 1 0 0 1
+5 0 268 0 268
+5 0 268
+3 0 268 0 268
+5 0 268
+4 0 268 268 0 0 1 0 0 1
+7 0 268 268 0 0 1 0 0 1
+3 0 268
+3 0 268 0 0 0 0 0 0 0 0 268
+6 0 268 268 0 0 1 0 0 1
+7 0 268 268 0 1 1 0 1 1
+4 0 268
+3 0 268 0 0 0 0 0 0 0 0 268
+2 0 268 268 0 0 1 0 0 1
+3 0 268
+3 0 268 0 0 0 0 0 0 0 0 268
jcnd=268/268 +97 0 
* 0 
+18 0 268
+3 0 268
+3 0 268 0 268
cfn=(38) _int_malloc
calls=268 0x3877c79a00 0 
* 0 52111 6321 7009 30 27 34 30 27 34 8520 429
+5 0 268
+3 0 268
+3 0 268 0 0 0 0 0 0 0 0 268
+2 0 268
+3 0 268 0 0 0 0 0 0 0 0 268
+2 0 268
+3 0 268 0 0 0 0 0 0 0 0 268 1
+2 0 268 268
+7 0 268 0 0 0 0 0 0 0 0 268
jcnd=268/268 +13 0 
* 0 
+13 0 268 0 268
+2 0 268 0 0 0 0 0 0 0 0 268 3
+6 0 268
+3 0 268 268
+4 0 268 268
+5 0 268 268
+5 0 268
+4 0 268 268
+1 0 268 0 0 1 0 0 1
+5 0 268 268 0 0 1 0 0 1
+7 0 268 0 0 0 0 0 0 0 0 268
jcnd=268/268 +14 0 
* 0 
+14 0 268 0 268 1 0 0 1
+3 0 268 0 0 0 0 0 0 0 0 268
+6 0 268
jump=268 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 268 0 268 1 0 0 1
+2 0 268
+3 0 268
+3 0 268 0 268
+2 0 268
+3 0 268 0 268
+1 0 268
+3 0 268 0 268
+1 0 268
+3 0 268
+4 0 268
+3 0 268 0 0 0 0 0 0 0 0 268
+6 0 268
+4 0 268
+3 0 268 0 0 0 0 0 0 0 0 268 4
jcnd=10/268 0x3877c838d1 0 
* 0 
+2 0 258
+3 0 258
+3 0 258
+3 0 258
+3 0 258
+3 0 258 0 0 0 0 0 0 0 0 258
jcnd=258/258 +41 0 
* 0 
+41 0 258 0 0 1 0 0 1
+3 0 258 0 0 0 0 0 0 0 0 258
jcnd=258/258 0x3877c839c0 0 
* 0 
+24 0 258
+3 0 258
+4 0 258
+3 0 258
+3 0 258
+3 0 258
+3 0 258
+3 0 258 0 0 0 0 0 0 0 0 258 124
jcnd=134/258 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 134
+10 0 134 134 0 0 1 0 0 1
+3 0 134
+4 0 134 0 134
+3 0 134
+4 0 134
+4 0 134 0 0 0 0 0 0 0 0 134
jcnd=134/134 -18 0 
* 0 
-18 0 458 458
+3 0 458
+4 0 458 0 458
+3 0 458
+4 0 458
+4 0 458 0 0 0 0 0 0 0 0 458 8
jcnd=324/458 -18 0 
* 0 
+2 0 268
+4 0 268
+3 0 268 268
+1 0 268 268
+1 0 268 268
+2 0 268 268 0 1 0 0 1
+2 0 268 268
0x3877c839c0 0 258 0 0 1 0 0 1
+3 0 258
+3 0 258
+3 0 258
+4 0 258 0 258 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=258 0x3877c89b20 0 
* 0 14226 4856 4340 6 1 13 6 1 13 688 17 258 31
+5 0 258
jump=258 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 268 268 0 1 1 0 1 1
+7 0 268 268 0 0 1 0 0 1
+3 0 268
+3 0 268 0 0 1 0 0 1 0 0 268
+6 0 268
+3 0 268 0 0 0 0 0 0 0 0 268
+6 0 268 268
+4 0 268
+4 0 268
+2 0 268 0 0 0 0 0 0 0 0 268
+2 0 268
+2 0 268
+7 0 268 0 0 0 0 0 0 0 0 268
jcnd=268/268 +14 0 
* 0 
+14 0 268
+2 0 268
cfn=(170) _int_free
calls=268 0x3877c78650 0 
* 0 24048 6254 3694 17 2 0 17 2 0 5472 31

fn=(170)
0x3877c78650 0 268 0 268 1 0 0 1
+2 0 268 0 268
+2 0 268 0 268
+2 0 268
+3 0 268 0 268
+2 0 268 0 268
+1 0 268 0 268
+1 0 268
+3 0 268
+4 0 268 268
+4 0 268 0 268
+4 0 268
+3 0 268
+4 0 268
+3 0 268
+3 0 268
+3 0 268 0 0 1 0 0 1 0 0 268
+6 0 268
+4 0 268 0 0 0 0 0 0 0 0 268
+6 0 268
+4 0 268 0 0 0 0 0 0 0 0 268
+6 0 268 268
+7 0 268 0 0 0 0 0 0 0 0 268 2
jcnd=144/268 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 144
+2 0 144 0 0 0 0 0 0 0 0 144
+6 0 144 144 0 1 0 0 1
+4 0 144
+3 0 144
+2 0 144 0 0 0 0 0 0 0 0 144
jcnd=144/144 0x3877c78a40 0 
* 0 
+6 0 144 144
+4 0 144
+3 0 144 0 0 0 0 0 0 0 0 144
+6 0 144 144
+5 0 144
+4 0 144 0 0 0 0 0 0 0 0 144
jcnd=144/144 0x3877c7907c 0 
* 0 
+6 0 144 144
+5 0 144
+4 0 144 0 0 0 0 0 0 0 0 144
+6 0 144
+4 0 144 0 0 1 0 0 1 0 0 144
+6 0 144
+4 0 144 144
+7 0 144 0 0 0 0 0 0 0 0 144
+6 0 144 144
+6 0 144
+2 0 144 0 0 0 0 0 0 0 0 144
+6 0 144 144
+4 0 144 0 0 0 0 0 0 0 0 144 2
jcnd=142/144 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 144 144 0 1 0 0 1
+4 0 144 0 0 0 0 0 0 0 0 144
+6 0 144 144
+6 0 144 0 0 1 0 0 1 0 0 144 19
jcnd=14/144 0x3877c78a78 0 
* 0 
+6 0 130 130
+5 0 130 130
+5 0 130 130
+4 0 130 0 0 0 0 0 0 0 0 130
+6 0 130 130
+4 0 130 0 0 0 0 0 0 0 0 130
+6 0 130 130
+9 0 130 0 130
+4 0 130 0 130
+4 0 130 0 0 0 0 0 0 0 0 130 4
jcnd=122/130 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 130
+3 0 130
+4 0 130 130
+4 0 130 130
+4 0 130 0 0 0 0 0 0 0 0 130
-12 0 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 144
+7 0 144 0 144
+4 0 144 0 144
+4 0 144 0 0 0 0 0 0 0 0 144 2
jcnd=136/144 +18 0 
* 0 
+2 0 8 0 8
+8 0 8 0 8
+8 0 8 0 8
+4 0 8
+3 0 8 0 8 1 0 0 1
+4 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+7 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c78b20 0 
* 0 
-30 0 136 0 136
+4 0 136
+3 0 136 0 136
+4 0 136
+4 0 136 0 136
+4 0 136 0 136
+4 0 136
+7 0 136 0 0 0 0 0 0 0 0 136
jcnd=136/136 0x3877c78b20 0 
* 0 
0x3877c78a40 0 144 0 0 1 0 0 1
+5 0 144 144
+4 0 144 144
+7 0 144 0 0 0 0 0 0 0 0 144
jcnd=144/144 +16 0 
* 0 
+16 0 144 0 144
+5 0 144 0 0 0 0 0 0 0 0 144
+6 0 144
+3 0 144
jump=144 0x3877c7878f 0 
* 0 
+10 0 14 0 14
+6 0 14 0 0 1 0 0 1
jump=14 0x3877c78885 0 
* 0 
0x3877c78b20 0 144 144 0 1 0 0 1
+4 0 144
+2 0 144 0 0 0 0 0 0 0 0 144
+6 0 144 144
+7 0 144 0 0 0 0 0 0 0 0 144
jcnd=144/144 +15 0 
* 0 
+15 0 144 0 144 1 0 0 1
+4 0 144 0 0 0 0 0 0 0 0 144
+6 0 144
+4 0 144 144
+1 0 144 144
+1 0 144 144
+2 0 144 144
+2 0 144 144
+2 0 144 144
+2 0 144 144
0x3877c7907c 0 144 144 0 1 1 0 1 1
+4 0 144 0 0 1 0 0 1
+7 0 144
+4 0 144
+3 0 144
+3 0 144 0 0 0 0 0 0 0 0 144
jcnd=144/144 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 258 0 0 1 0 0 1
+7 0 258
+3 0 258
+3 0 258 258 0 0 1 0 0 1
+4 0 258
+4 0 258 0 0 0 0 0 0 0 0 0 0 258 31
jump=24 0x3877c89be8 0 
* 0 
jump=38 0x3877c89bd0 0 
* 0 
jump=32 0x3877c89bb8 0 
* 0 
jump=32 +11 0 
* 0 
jump=32 0x3877c89c48 0 
* 0 
jump=34 0x3877c89c30 0 
* 0 
jump=32 0x3877c89c18 0 
* 0 
jump=34 0x3877c89c00 0 
* 0 
+11 0 32 32
+3 0 32
+4 0 32
+4 0 32 32
+4 0 32
+4 0 32 0 32
+4 0 32
+9 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-40 0 494 494
+4 0 494 0 494
+4 0 494 494
+4 0 494 0 494
+4 0 494 494
+4 0 494 0 494 0 0 1 0 0 1
+4 0 494 494
+4 0 494 0 494 0 0 3 0 0 3
+4 0 494
+4 0 494
+4 0 494 0 0 0 0 0 0 0 0 494 15
jcnd=222/494 0x3877c89c60 0 
* 0 
-32 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
jcnd=10/34 0x3877c89c60 0 
* 0 
-24 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-16 0 34 34 0 1 0 0 1
+4 0 34 0 34
+4 0 34 0 0 1 0 0 1
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34 2
jcnd=10/34 0x3877c89c60 0 
* 0 
+6 0 368
+4 0 368 368
+3 0 368 0 368 0 0 1 0 0 1
+3 0 368 368
+4 0 368 0 368 0 0 3 0 0 3
+4 0 368 368
+4 0 368 0 368 0 0 4 0 0 4
+4 0 368 368
+4 0 368 0 368
+4 0 368
jump=368 -80 0 
* 0 
-30 0 24 24
+3 0 24 0 24
+3 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24 0 0 1 0 0 1
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
-24 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38
jump=38 -80 0 
* 0 
-16 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
+8 0 32 32
+3 0 32
+4 0 32 0 0 1 0 0 1
+4 0 32
+4 0 32
jump=32 -39 0 
* 0 
+9 0 38
+3 0 38 0 0 0 0 0 0 0 0 38
+6 0 38 38
+3 0 38
+4 0 38
jump=38 -72 0 
* 0 
+8 0 24
+4 0 24 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24
+4 0 24
jump=24 -99 0 
* 0 
+11 0 34 34 0 1 0 0 1
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b78 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b70 0 
* 0 
+9 0 34 34
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b68 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b60 0 
* 0 
+9 0 258 0 258 1 0 0 1
+3 0 258 258

fn=(104) alloc_perturb
0x3877c77180 0 159 159 0 1 0 0 1
+6 0 159
+2 0 159 0 0 0 0 0 0 0 0 159 1
+2 0 159 159

fn=(38)
0x3877c79a00 0 268 0 268 1 0 0 1
+2 0 268
+3 0 268 0 268
+2 0 268 0 268
+2 0 268 0 268 0 0 1 0 0 1
+2 0 268
+3 0 268 0 268
+1 0 268 0 268
+1 0 268
+4 0 268
+4 0 268 0 0 0 0 0 0 0 0 268
+6 0 268
+4 0 268
+6 0 268
+3 0 268
+4 0 268
+4 0 268
+4 0 268
+3 0 268 0 0 0 0 0 0 0 0 268
+6 0 268 268 0 1 1 0 1 1
+7 0 268 0 0 0 0 0 0 0 0 268 5
jcnd=146/268 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 109 109
+6 0 109
+4 0 109
+2 0 109 0 0 0 0 0 0 0 0 109
+6 0 109
+3 0 109
+4 0 109 109
+1 0 109 109
+1 0 109 109
+2 0 109 109
+2 0 109 109
+2 0 109 109
+2 0 109 109
-14 0 159
+4 0 159 159
+1 0 159 159
+1 0 159 159
+2 0 159 159
+2 0 159 159
+2 0 159 159
+2 0 159 159
+7 0 163
+7 0 163 0 0 1 0 0 1 0 0 163
+2 0 163
+3 0 163
+5 0 163
+3 0 163
+4 0 163 0 163
+4 0 163
+2 0 163
+5 0 163 163 0 0 3 0 0 3
+4 0 163
+3 0 163 0 0 0 0 0 0 0 0 163
jcnd=163/163 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 163 0 0 1 0 0 1
+3 0 163
+3 0 163
+3 0 163
+4 0 163
+3 0 163
+4 0 163 0 163
+5 0 163
+3 0 163 0 163
+4 0 163 0 163
+4 0 163 0 163
+5 0 163
+3 0 163
+3 0 163
+3 0 163
+3 0 163
+4 0 163
+4 0 163 0 0 1 0 0 1
+4 0 163 0 163
+4 0 163
+4 0 163 0 163
+5 0 163 0 163
+5 0 163
+3 0 163
+3 0 163 0 163
+5 0 163
+5 0 163
+3 0 163 0 163
+4 0 163 0 163
+4 0 163
+6 0 163 0 163
+4 0 163 0 163
+5 0 163 0 0 1 0 0 1
+3 0 163
+3 0 163
+3 0 163
jump=163 +87 0 
* 0 
+8 0 191
+3 0 191
+4 0 191
+2 0 191
+2 0 191
+3 0 191
+3 0 191
+3 0 191
+2 0 191
+2 0 191
+5 0 191
+2 0 191 191 0 0 1 0 0 1
+4 0 191
+3 0 191
+4 0 191 0 191
+4 0 191 0 191
+8 0 191
+7 0 191 0 191
+4 0 191 0 191
+4 0 191 0 191
+4 0 191 0 0 0 0 0 0 0 0 191
-38 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+8 0 5
+7 0 5 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 359 359 0 1 0 0 1
+4 0 359
+3 0 359 0 0 0 0 0 0 0 0 359 8
jcnd=139/359 0x3877c79ef0 0 
* 0 
+6 0 220 220
+4 0 220 220
+4 0 220
+4 0 220 0 0 0 0 0 0 0 0 220
+6 0 220 220 0 1 0 0 1
+7 0 220 0 0 0 0 0 0 0 0 220
+6 0 220
+4 0 220
+7 0 220 0 0 0 0 0 0 0 0 220
+2 0 220
+3 0 220 0 0 0 0 0 0 0 0 220 61
jcnd=156/220 0x3877c79e28 0 
* 0 
+6 0 200
+3 0 200 0 200
+4 0 200 0 200
+5 0 200 0 0 0 0 0 0 0 0 200 5
jcnd=4/200 0x3877c7a090 0 
* 0 
+6 0 196
+7 0 196 0 0 0 0 0 0 0 0 196 6
jcnd=191/196 0x3877c79c50 0 
* 0 
+6 0 5 0 0 1 0 0 1
+3 0 5
+4 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5
+3 0 5
+4 0 5
+2 0 5
+2 0 5
+3 0 5
+3 0 5
+8 0 5
+3 0 5
+2 0 5
+2 0 5
+4 0 5 5
+4 0 5
+3 0 5 0 0 1 0 0 1 0 0 5 1
jcnd=5/5 0x3877c79e15 0 
* 0 
0x3877c79e15 0 5 0 5
+4 0 5 0 5
+4 0 5
+3 0 5
jump=5 0x3877c79c73 0 
* 0 
+8 0 156 156 0 1 0 0 1
+4 0 156
+3 0 156 0 0 0 0 0 0 0 0 156 9
jcnd=73/156 0x3877c79ce1 0 
* 0 
+6 0 83 83
+5 0 83 0 0 0 0 0 0 0 0 83 8
jcnd=63/83 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=12/20 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 12
+7 0 12 0 12 1 0 0 1
+4 0 12
+3 0 12
+3 0 12
+3 0 12
+4 0 12
+3 0 12
+4 0 12
+3 0 12
+3 0 12
+4 0 12 0 12
+4 0 12 0 12 0 0 3 0 0 3
+4 0 12
+4 0 12
+3 0 12 0 12
cfn=(104)
calls=12 0x3877c77180 0 
* 0 48 24 0 0 0 0 0 0 0 12
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 139 0 0 1 0 0 1
+7 0 139
+3 0 139 0 0 0 0 0 0 0 0 139
+6 0 139 139 0 1 0 0 1
+4 0 139
+3 0 139
+3 0 139
+2 0 139
+4 0 139
+3 0 139
+3 0 139
+2 0 139
+2 0 139
+2 0 139
+2 0 139 139 0 0 1 0 0 1
+8 0 139
+5 0 139
+5 0 139
+2 0 139 0 0 0 0 0 0 0 0 139
-2 0 81
+2 0 81 0 0 0 0 0 0 0 0 81
+2 0 220
+2 0 220 0 0 0 0 0 0 0 0 220 17
jcnd=150/220 +64 0 
* 0 
+2 0 70
+8 0 70
+3 0 70
+3 0 70 0 0 0 0 0 0 0 0 70 1
jcnd=1/70 0x3877c79fc0 0 
* 0 
-6 0 7
+3 0 7
+3 0 7 0 0 0 0 0 0 0 0 7
+2 0 76
+2 0 76 76
+8 0 76
+2 0 76 0 0 0 0 0 0 0 0 76 4
jcnd=7/76 -20 0 
* 0 
+2 0 69
+2 0 69
+5 0 69
+3 0 69
+3 0 69
+2 0 69
+2 0 69
+5 0 69 0 0 0 0 0 0 0 0 69 3
jcnd=2/69 +14 0 
* 0 
+2 0 67
+2 0 67
+4 0 67
+2 0 67
+2 0 67 0 0 0 0 0 0 0 0 67 1
jcnd=67/67 -8 0 
* 0 
-8 0 2375
+4 0 2375
+2 0 2375
+2 0 2375 0 0 0 0 0 0 0 0 2375 174
jcnd=2173/2375 -8 0 
* 0 
-2 0 150 0 0 1 0 0 1
+2 0 150 0 0 0 0 0 0 0 0 150 10
jcnd=135/150 -8 0 
* 0 
+2 0 219 219 0 0 12 0 0 12
+4 0 219 0 0 1 0 0 1
+3 0 219 0 0 0 0 0 0 0 0 219 79
jcnd=138/219 0x3877c7a1cf 0 
* 0 
+6 0 81
+2 0 81
+4 0 81
+2 0 81
+2 0 81
+2 0 81 0 81
+8 0 81
jump=81 0x3877c79f30 0 
* 0 
+37 0 1 1 0 1 0 0 1
+5 0 1 1
+4 0 1
+4 0 1 1
+5 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 4 0 0 1 0 0 1
+7 0 4 0 4
+6 0 4
+3 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 138 138 0 1 2 0 1 2
+4 0 138 138 0 0 1 0 0 1
+4 0 138
+3 0 138 138
+4 0 138
+4 0 138
+3 0 138
+3 0 138 138
+4 0 138 0 0 0 0 0 0 0 0 138
+6 0 138 138 0 0 1 0 0 1
+4 0 138 0 0 0 0 0 0 0 0 138
+6 0 138 138 0 1 0 0 1
+8 0 138 0 138
+4 0 138 0 138
+4 0 138 0 0 0 0 0 0 0 0 138 7
jcnd=131/138 +38 0 
* 0 
+2 0 7 7 0 0 2 0 0 2
+4 0 7
+3 0 7 0 0 0 0 0 0 0 0 7
+2 0 7 7
+5 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 7
+4 0 7 7
+4 0 7 0 7
+4 0 7
+4 0 7 0 0 0 0 0 0 0 0 7
-4 0 131
+4 0 131 0 0 0 0 0 0 0 0 131
jcnd=6/131 0x3877c7a2e3 0 
* 0 
+6 0 132 132
+4 0 132 132 0 1 0 0 1
+4 0 132 0 0 0 0 0 0 0 0 132
+6 0 132
+4 0 132
+7 0 132 0 132 0 0 7 0 0 7
+4 0 132 0 132
+4 0 132 0 132
+4 0 132 0 132
+4 0 132 0 0 0 0 0 0 0 0 132
+2 0 132 0 132
+5 0 132
+7 0 132 0 0 0 0 0 0 0 0 132 1
jcnd=126/132 +18 0 
* 0 
+2 0 6 0 6
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 126 0 0 1 0 0 1
+7 0 126 0 126 0 0 1 0 0 1
+4 0 126
+3 0 126
+3 0 126
+4 0 126
+3 0 126
+4 0 126
+3 0 126
+3 0 126
+4 0 126 0 126
+4 0 126 0 126 0 0 1 0 0 1
+4 0 126
jump=126 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 6
+7 0 6 0 6
+6 0 6
+3 0 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +7 0 
* 0 
+7 0 138
+4 0 138 0 0 1 0 0 1
+3 0 138
+3 0 138 0 138
cfn=(104)
calls=138 0x3877c77180 0 
* 0 552 276 0 1 0 0 1 0 0 138
+5 0 138
+3 0 138
jump=138 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1 0 0 1 0 0 1
+7 0 1
+2 0 1
+4 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+4 0 1 0 1 0 0 1 0 0 1
+4 0 1
+3 0 1
+3 0 1 0 1
cfn=(104)
calls=1 0x3877c77180 0 
* 0 4 2 0 0 0 0 0 0 0 1 1
+5 0 1
+3 0 1
jump=1 0x3877c79ae3 0 
* 0 

totals: 656617 239210 156898 224 58 65 224 58 65 29098 832 1598 31
