version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 897


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 992986380 - 994289046
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1428 0 0 1 0 0 1
+3 0 1428 0 0 0 0 0 0 0 0 1428
+2 0 1428
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1428 0x3877c7b8b0 0 
* 0 160285 41019 20985 21 4 0 21 4 0 39297 608
* 0 1428 1428 0 1 1 0 1 1 0 0 0 1428

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1428 0 1428 1 0 0 1
+1 0 1428
+5 0 1428
+3 0 1428 0 1428
+1 0 1428
+4 0 1428 0 0 1 0 0 1
+3 0 1428
+4 0 1428
+3 0 1428 0 1428 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1428 0x3877c7aa50 0 
* 0 387978 56064 56121 49 40 52 49 40 52 64933 2364
* 0 1428 1428 0 1 1 0 1 1 0 0 0 1428
+5 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428
jcnd=1428/1428 +96 0 
* 0 
+96 0 1428 0 0 1 0 0 1
+4 0 1428 1428
+1 0 1428 1428
+1 0 1428 1428

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 786 0 786
+1 * 786
+3 * 786 0 786 0 0 1 0 0 1
+4 +1 786 786
+4 * 786 786
+1 * 786 786

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412
+4 * 1412 0 1412
+4 +1 1412
+4 * 1412
+3 * 1412 0 1412
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1412 0x404ffe 790 
* * 8472 4236 2824 1 0 0 1
+5 * 1412 1412
+3 * 1412 1412
+1 * 1412 1412

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412 0 1412
+4 +1 1412 1412
+4 * 1412 1412
+1 * 1412 1412

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412
+4 * 1412 0 1412
+4 +1 1412
+4 * 1412
+3 * 1412 0 1412 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1412 0x40500c 790 
* * 8472 4236 2824 1 0 0 1
+5 * 1412 1412
+3 * 1412 1412
+1 * 1412 1412

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 786 0 786
+1 * 786
+3 * 786 0 786
+4 +1 786 786
+4 * 786 786
+1 * 786 786

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412 0 1412
+4 +1 1412 1412 0 1 0 0 1
+4 * 1412 1412
+1 * 1412 1412

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 706 0 706
+1 * 706
+3 * 706 0 706
+4 * 706 0 706
+4 * 706 706
+4 * 706 706
+1 * 706 706

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 714 0 714 1 0 0 1
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 * 714 0 714
+4 +2 714 714
+4 * 714
+3 * 714 0 714
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=714 0x4048de +12 
* * 4284 1428 1428 1 0 0 1
+5 * 714 714
+4 * 714 0 0 1 0 0 1
+3 * 714
+2 * 714 0 0 0 0 0 0 0 0 714
jcnd=714/714 +7 +3 
* * 
+7 +3 714 714
+4 * 714
+4 * 714
+3 * 714 0 714
cob=(5)
cfi=(8)
cfn=(32)
calls=714 0x387e4bd0b0 0 
* * 206112 30108 28186 26 15 38 26 15 38 33457 1333 714
* * 714 714 0 0 0 0 0 0 0 0 0 714
+5 +1 714 714
+1 * 714 714

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 706 0 706 1 0 0 1
+1 * 706
+3 * 706 0 706 0 0 1 0 0 1
+4 * 706 0 706
+4 * 706 706
+1 * 706 706

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 706 0 706 1 0 0 1
+1 * 706
+3 * 706 0 706
+4 * 706 0 706
+4 * 706 706
+1 * 706 706

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 706 0 706
+1 * 706
+3 * 706 0 706
+4 * 706 706
+1 * 706 706

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 714 0 714 1 0 0 1
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 * 714 0 714 1 0 0 1
+4 +2 714 714
+4 * 714
+3 * 714 0 714
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=714 0x404992 +12 
* * 4284 1428 1428 1 0 0 1
+5 * 714 714
+4 * 714
+3 * 714
+2 * 714 0 0 0 0 0 0 0 0 714
jcnd=714/714 +7 +3 
* * 
+7 +3 714 714
+4 * 714
+4 * 714
+3 * 714 0 714
cob=(5)
cfi=(8)
cfn=(32)
calls=714 0x387e4bd0b0 0 
* * 204714 31668 32219 27 26 15 27 26 15 32904 1031 714
* * 714 714 0 1 1 0 1 1 0 0 0 714
+5 +1 714 714
+1 * 714 714

fn=(102)
0x4048de 113 730 0 730 1 0 0 1
+1 * 730
+3 * 730 0 730
+4 +1 730
+10 * 730 730
+1 * 730 730

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +1 353 353
+4 * 353
+3 * 353
+5 * 353 0 353
cfi=(16)
cfn=(226)
calls=353 0x402d61 -20 
* * 2471 1059 1059
+5 * 353
+3 * 353 0 0 0 0 0 0 0 0 353
+2 * 353 353
+4 * 353 353 0 0 22 0 0 22
+2 * 353 0 353 0 0 14 0 0 14
+2 * 353 353
+1 * 353 353

fn=(28)
0x404992 113 730 0 730 1 0 0 1
+1 * 730
+3 * 730 0 730
+4 +1 730
+10 * 730 730
+1 * 730 730

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 706 0 706
+1 * 706
+3 * 706 0 706
+4 * 706 706
+1 * 706 706

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +1 353 353
+4 * 353
+3 * 353
+5 * 353 0 353
cfi=(16)
cfn=(226)
calls=353 0x402d61 -20 
* * 2471 1059 1059
+5 * 353
+3 * 353 0 0 0 0 0 0 0 0 353 3
+2 * 353 353
+4 * 353 353 0 0 23 0 0 23
+2 * 353 0 353 0 0 3 0 0 3
+2 * 353 353
+1 * 353 353

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 714 0 714
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 * 714 0 714
+4 +1 714 714
+4 * 714
+3 * 714 0 714
cob=(5)
cfi=(8)
cfn=(164)
calls=714 0x387e4bb2f0 0 
* * 78358 19511 9095 23 4 0 23 4 0 19062 545 714
* * 714 714 0 1 1 0 1 1 0 0 0 714
+5 * 714 714
+1 * 714 714

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 714 0 714
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 * 714 0 714
+4 +1 714 714
+4 * 714
+3 * 714 0 714
cob=(5)
cfi=(8)
cfn=(164)
calls=714 0x387e4bb2f0 0 
* * 87639 22936 11890 0 1 0 0 1 0 21663 63 714
* * 714 714 0 0 0 0 0 0 0 0 0 714
+5 * 714 714
+1 * 714 714

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +10 706 706
+4 * 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=706 0x404829 -26 
* * 354738 118448 114216 25 3 4 25 3 4 13894 836 1408 176
+5 +1 706 706
+1 * 706 706

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +2 706 706
+4 * 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706 1 0 0 1
cfn=(50)
calls=706 0x404484 107 
* * 364622 121978 117746 25 3 4 25 3 4 13894 836 1408 176
+5 * 706 706
+1 * 706 706

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52)
0x404829 91 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +2 706 706 0 1 0 0 1
+4 * 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=706 0x404a36 450 
* * 344854 114918 110686 24 3 4 24 3 4 13894 836 1408 176
+5 * 706 706
+1 * 706 706

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +2 706 706
+4 * 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=706 0x40439c 107 
* * 364622 121978 117746 7 1 40 7 1 40 13894 821 1408
+5 * 706 706
+1 * 706 706

fn=(116)
0x40439c 107 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +10 706 706
+4 * 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=706 0x4047d7 -26 
* * 354738 118448 114216 7 1 40 7 1 40 13894 821 1408
+5 +1 706 706
+1 * 706 706

fn=(118)
0x4047d7 91 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +2 706 706
+4 * 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=706 0x4049e2 450 
* * 344854 114918 110686 7 1 40 7 1 40 13894 821 1408
+5 * 706 706
+1 * 706 706

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 706 0 706 1 0 0 1
+1 * 706
+3 * 706 0 706
+1 * 706
+4 * 706 0 706
+4 +2 706 706
+4 * 706 706
+4 * 706
+3 * 706 706
+4 * 706 706
+3 * 706
+3 * 706
+3 * 706
+4 * 706
+3 * 706 706
+4 * 706 706
+3 -1 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=706 0x403d98 +11 
* * 106524 29772 18836 1 1 0 1 1 0 22166 53 1412
+5 +1 706 706
+4 * 706
+3 * 706 0 706
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=706 0x403296 -82 
* * 16238 5648 5648 1 0 0 1
+5 * 706
jump=706 +28 * 
* * 
+28 * 706
+4 * 706 706
+1 * 706 706
+1 * 706 706

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2856 0 2856 1 0 0 1
+1 * 2856
+3 * 2856 0 2856 0 0 1 0 0 1
+4 +1 2856 2856
+4 * 2856 2856 0 1 1 0 1 1
+4 * 2856
+3 * 2856 2856
+4 * 2856 2856
+3 * 2856
+3 * 2856
+3 * 2856
+4 * 2856 2856
+1 * 2856 2856

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 +2 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=706 0x404236 -14 
* * 232281 40508 40347 24 20 8 24 20 8 33994 991 1412
+5 * 706 706
+4 * 706 0 706
+3 +1 706 706
+4 * 706 706 0 1 0 0 1
+3 * 706 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+3 * 706 706
+4 * 706
+4 * 706
+3 * 706 706
+4 * 706 0 706
+4 +1 706 706
+1 * 706 706

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 +2 706 706
+4 * 706 706 0 1 0 0 1
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=706 0x403fbe -14 
* * 232883 38712 36130 18 6 33 18 6 33 34382 1286 1412
+5 * 706 706
+4 * 706 0 706
+3 +1 706 706
+4 * 706 706
+3 * 706 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+3 * 706 706
+4 * 706
+4 * 706
+3 * 706 706
+4 * 706 0 706
+4 +1 706 706
+1 * 706 706

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 353 0 353
+1 * 353
+3 * 353 0 0 1 0 0 1
+4 * 353 0 353
+4 * 353 0 353
+4 +2 353 353
+4 * 353 353
+4 * 353 353
+4 * 353 353
+4 * 353
+3 * 353 0 0 0 0 0 0 0 0 353
jcnd=8/353 +51 +10 
* * 
+2 +3 345 345
+4 * 345 345
+4 * 345 345
+4 -1 345 345
+4 * 345
+3 * 345
+3 * 345 0 345
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=345 0x4036b1 215 
* * 13110 4485 4830 0 22 10 0 22 10 345
+5 +2 345 345
+4 * 345 345
+4 * 345
+4 * 345 345
+4 * 345 0 345
+4 * 345
jump=345 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11882 3694 3215 27 7 29 27 7 29 697 62 47
+5 +2 353 353
+1 * 353 353

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1436 0 1436 1 0 0 1
+1 * 1436
+3 * 1436 0 1436 1 0 0 1
+4 +1 1436 1436
+4 * 1436 1436
+1 * 1436 1436

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+3 * 706 0 706
+4 * 706
+4 * 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=706 0x404380 726 
* * 7060 3530 2824
+5 * 706 706
+4 * 706 706
+1 * 706 706

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 706 0 706
+1 * 706
+3 * 706 0 706
+1 * 706
+4 * 706 0 706 1 0 0 1
+4 +2 706 706
+4 * 706
+3 * 706 0 706
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=706 0x40325e 113 
* * 4236 2118 1412
+5 * 706
+3 * 706 706
+4 * 706 706
+4 * 706 706
+4 * 706 706
+3 -1 706
+3 * 706
+3 * 706 0 706
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=706 0x40326c 148 
* * 21886 7060 8472 4 0 0 4
+5 +1 706 706
+4 * 706
+3 * 706 0 706
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=706 0x4031ec 159 
* * 133282 39778 25222 27 5 0 27 5 0 19574 537 1412
+5 * 706
jump=706 +28 * 
* * 
+28 * 706 0 0 1 0 0 1
+4 * 706 706
+1 * 706 706
+1 * 706 706

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 714 0 714 1 0 0 1
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 * 714 0 714
+4 +2 714 714
+5 * 714 0 0 0 0 0 0 0 0 714
+2 +1 714 714
+4 * 714 714
+4 * 714 714
+4 * 714
+3 * 714
+3 * 714 0 714
cfi=(5)
cfn=(160)
calls=714 0x4044d6 -65 
* * 86926 22367 12665 24 5 0 24 5 0 19062 545 1428
+5 +1 714 714
+1 * 714 714

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 706 0 706
+1 * 706
+3 * 706 0 706
+1 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=706 0x4043ca -45 
* * 25416 9178 9884 4 0 4 4 0 4
+5 +1 706 706 0 1 0 0 1
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(20)
calls=706 0x404412 +43 
* * 249931 48980 45289 25 20 8 25 20 8 33994 991 1412
+5 * 706
jump=706 +28 * 
* * 
+28 * 706
+4 * 706 706
+1 * 706 706
+1 * 706 706

fn=(14)
0x4043ca 90 706 0 706 1 0 0 1
+1 * 706
+3 * 706
+4 * 706 0 706 0 0 1 0 0 1
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=706 0x404804 +24 
* * 12708 4236 4942 2 0 1 2 0 1
+5 * 706 706
+4 * 706 0 706 0 0 2 0 0 2
+7 * 706 706
+4 * 706 0 706 1 0 0 1
+8 * 706 706
+4 * 706 0 706
+8 +1 706 706
+1 * 706 706

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 706 0 706 1 0 0 1
+1 * 706
+3 * 706 0 706
+2 * 706 0 706
+2 * 706 0 706
+1 * 706 0 0 1 0 0 1
+4 * 706 0 706
+4 * 706 0 706
+4 +2 706 706
+4 * 706
+3 * 706 0 706
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=706 0x4039fc 117 
* * 4236 2118 1412 2 0 0 2
+5 * 706
+3 * 706 0 706
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=706 0x4039ed -88 
* * 4236 2118 1412
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(2)
calls=706 0x402d74 645 
* * 9178 4236 1412
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706
+3 * 706
+3 * 706 0 706 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=706 0x403a0a 134 
* * 291481 61304 55898 25 6 33 25 6 33 34382 1286 1412
+5 +4 706 706
+4 * 706
+3 * 706 0 706
cfn=(106)
calls=706 0x40325e 113 
* * 4236 2118 1412 1 0 0 1
+5 * 706
+3 * 706 706
+4 * 706 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=706 0x403a98 565 
* * 17650 7060 5648 2 0 0 2
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(112)
calls=706 0x403a68 547 
* * 17650 7060 5648
+5 * 706
+3 * 706
+3 * 706
+3 * 706
+3 * 706 0 706
cfi=(11)
cfn=(114)
calls=706 0x403ac9 -60 
* * 375212 125508 121982 7 1 40 7 1 40 13894 821 1408
+5 -3 706 706
+4 * 706 0 706
+4 * 706
jump=706 +28 +4 
* * 
+28 +4 706
+4 * 706 706
+1 * 706 706
+2 * 706 706
+2 * 706 706
+1 * 706 706

fn=(188)
0x403d98 171 714 0 714 1 0 0 1
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 * 714 0 714
+4 +2 714 714
+5 * 714 0 0 0 0 0 0 0 0 714 8
+2 +1 714 714
+4 * 714 714
+4 * 714 714
+4 * 714
+3 * 714
+3 * 714 0 714
cfi=(5)
cfn=(190)
calls=714 0x40452a -65 
* * 96207 25792 15460 0 1 0 0 1 0 21663 63 1428
+5 +1 714 714
+1 * 714 714

fn=(22)
0x404236 167 714 0 714 1 0 0 1
+1 * 714
+3 * 714
+4 * 714 0 714 1 0 0 1
+4 * 714 0 714
+4 0 714 714
+5 0 714 0 0 0 0 0 0 0 0 714
+2 0 714 714
+4 0 714 714
+4 0 714
+5 0 714
+3 0 714
+3 0 714 0 714
fi=(6) ???
cfi=(5)
cfn=(26)
calls=714 0x404730 99 
* 0 223278 37380 37931 31 27 15 31 27 15 33618 1031 1428
+5 0 714
fi=(6)
jump=714 +7 0 
* 0 
+7 0 714 714
+1 0 714 714

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 706 0 706 1 0 0 1
+1 * 706
+3 * 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+4 * 706 0 706
+4 * 706
+4 * 706 0 0 1 0 0 1
+4 * 706
+3 * 706
+3 * 706 0 706
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=706 0x404468 726 
* * 7060 3530 2824 1 0 0 1
+5 * 706 706
+4 * 706 706
+1 * 706 706

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+3 * 706 0 706
+4 * 706
+4 * 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfi=(10)
cfn=(44)
calls=706 0x404468 726 
* * 7060 3530 2824
+5 * 706 706
+4 * 706 706
+1 * 706 706

fn=(86)
0x403a0a 134 706 0 706
+1 * 706
+3 * 706 0 706
+1 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=706 0x4042e2 -45 
* * 25416 9178 9884 5 0 0 5
+5 +1 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706 1 0 0 1
cfn=(94)
calls=706 0x40432a +43 
* * 250533 47184 41072 19 6 33 19 6 33 34382 1286 1412
+5 * 706
jump=706 +28 * 
* * 
+28 * 706
+4 * 706 706
+1 * 706 706
+1 * 706 706

fn=(88)
0x4042e2 90 706 0 706 1 0 0 1
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=706 0x4047b2 +24 
* * 12708 4236 4942 3 0 0 3
+5 * 706 706
+4 * 706 0 706
+7 * 706 706
+4 * 706 0 706
+8 * 706 706
+4 * 706 0 706
+8 +1 706 706
+1 * 706 706

fn=(156)
0x4031ec 159 706 0 706 1 0 0 1
+1 * 706
+3 * 706 0 706
+1 * 706
+4 * 706 0 706
+4 +2 706 706
+4 * 706 706 0 1 0 0 1
+4 * 706
+3 * 706 706
+4 * 706 706
+3 * 706
+3 * 706
+3 * 706
+4 * 706
+3 * 706 706
+4 * 706 706
+3 -1 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(158)
calls=706 0x403ce6 +11 
* * 97276 26364 16044 24 5 0 24 5 0 19574 537 1412
+5 +1 706 706
+4 * 706
+3 * 706 0 706
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=706 0x4031b8 -82 
* * 16238 5648 5648 1 0 0 1
+5 * 706
jump=706 +28 * 
* * 
+28 * 706
+4 * 706 706
+1 * 706 706
+1 * 706 706

fn=(172)
0x4031b8 79 706 0 706 1 0 0 1
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 706
+4 * 706
+3 * 706 0 706
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=706 0x403ccc +42 
* * 9884 3530 3530
+5 * 706 706
+1 * 706 706

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1444 0 1444 1 0 0 1
+1 * 1444
+3 * 1444 0 1444
+4 +1 1444 1444
+4 * 1444 1444 0 0 2 0 0 2
+4 * 1444
+3 * 1444 1444
+4 * 1444 1444
+3 * 1444
+3 * 1444
+3 * 1444
+4 * 1444 1444
+1 * 1444 1444

fn=(106)
0x40325e 113 1436 0 1436 1 0 0 1
+1 * 1436
+3 * 1436 0 1436
+4 +1 1436 1436
+4 * 1436 1436
+1 * 1436 1436

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 722 0 722 1 0 0 1
+1 * 722
+3 * 722 0 722 0 0 1 0 0 1
+4 +1 722 722
+4 * 722 722
+1 * 722 722

fn=(82)
0x4039fc 117 722 0 722 1 0 0 1
+1 * 722
+3 * 722 0 722 1 0 0 1
+4 +1 722 722
+4 * 722 722
+1 * 722 722

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 +2 353 353
+4 * 353 353
+4 * 353 353
+4 * 353 353
+4 * 353
+3 * 353 0 0 0 0 0 0 0 0 353 9
jcnd=8/353 +51 +10 
* * 
+2 +3 345 345
+4 * 345 345
+4 * 345 345
+4 -1 345 345
+4 * 345
+3 * 345
+3 * 345 0 345
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=345 0x403373 215 
* * 13110 4485 4830 0 22 2 0 22 2 345 3
+5 +2 345 345
+4 * 345 345
+4 * 345
+4 * 345 345
+4 * 345 0 345
+4 * 345
jump=345 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12645 3913 3396 36 10 9 36 10 9 853 60 47
+5 +2 353 353
+1 * 353 353

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 706 0 706 1 0 0 1
+1 * 706
+3 * 706 0 706
+2 * 706 0 706
+2 * 706 0 706
+1 * 706
+4 * 706 0 706 1 0 0 1
+4 * 706 0 706
+4 +2 706 706
+4 * 706
+3 * 706 0 706
cfn=(6)
calls=706 0x403b08 117 
* * 4236 2118 1412 1 0 1 1 0 1
+5 * 706
+3 * 706 0 706
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=706 0x403afa -88 
* * 4236 2118 1412 1 0 0 1
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(10)
calls=706 0x402f54 645 
* * 9178 4236 1412 1 1 0 1 1
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706
+3 * 706
+3 * 706 0 706
cfn=(12)
calls=706 0x403b16 134 
* * 290879 63100 60115 30 20 12 30 20 12 33994 991 1412
+5 +4 706 706 0 1 0 0 1
+4 * 706
+3 * 706 0 706
cfn=(40)
calls=706 0x40333c 113 
* * 4236 2118 1412 2 0 0 2
+5 * 706
+3 * 706 706
+4 * 706 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(42)
calls=706 0x403ba4 565 
* * 17650 7060 5648 3 0 0 3
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(46)
calls=706 0x403b74 547 
* * 17650 7060 5648
+5 * 706
+3 * 706
+3 * 706
+3 * 706
+3 * 706 0 706 1 0 0 1
cfi=(11)
cfn=(48)
calls=706 0x403bd5 -60 
* * 375212 125508 121982 26 3 4 26 3 4 13894 836 1408 176
+5 -3 706 706
+4 * 706 0 706
+4 * 706
jump=706 +28 +4 
* * 
+28 +4 706
+4 * 706 706
+1 * 706 706
+2 * 706 706
+2 * 706 706
+1 * 706 706

fn=(108)
0x403a98 565 706 0 706 1 0 0 1
+1 * 706
+3 * 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+4 * 706 0 706
+4 * 706
+4 * 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfi=(10)
cfn=(110)
calls=706 0x404380 726 
* * 7060 3530 2824 1 0 0 1
+5 * 706 706
+4 * 706 706
+1 * 706 706

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 706 0 706
+1 * 706
+3 * 706 0 706
+1 * 706
+4 * 706 0 706 1 0 0 1
+4 +2 706 706
+4 * 706
+3 * 706 0 706
cfn=(40)
calls=706 0x40333c 113 
* * 4236 2118 1412
+5 * 706
+3 * 706 706
+4 * 706 706
+4 * 706 706
+4 * 706 706
+3 -1 706
+3 * 706
+3 * 706 0 706
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=706 0x40334a 148 
* * 21886 7060 8472 2 0 0 2
+5 +1 706 706
+4 * 706
+3 * 706 0 706
cfn=(186)
calls=706 0x4032ca 159 
* * 142530 43186 28014 3 1 0 3 1 0 22166 53 1412
+5 * 706
jump=706 +28 * 
* * 
+28 * 706 0 0 1 0 0 1
+4 * 706 706
+1 * 706 706
+1 * 706 706

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 714 0 714 1 0 0 1
+1 * 714 0 0 1 0 0 1
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 0 714 714
+5 0 714 0 0 0 0 0 0 0 0 714
+2 0 714 714
+4 0 714 714
+4 0 714
+5 0 714
+3 0 714
+3 0 714 0 714
fi=(6)
cfi=(5)
cfn=(100)
calls=714 0x40461a 99 
* 0 224676 35820 33898 29 15 38 29 15 38 34171 1333 1428
+5 0 714
fi=(6)
jump=714 +7 0 
* 0 
+7 0 714 714
+1 0 714 714

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 189208 0 189208
+1 * 189208
+3 * 189208 0 189208
+4 * 189208 0 189208
+4 +1 189208 189208
+4 * 189208 189208
+3 * 189208 189208
+4 * 189208
+4 * 189208
+3 * 189208 189208
+1 * 189208 189208

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 189208 0 189208
+1 * 189208
+3 * 189208 0 189208 1 0 0 1
+4 * 189208 0 189208
+4 +1 189208 189208
+4 * 189208 189208
+3 * 189208 189208
+4 * 189208
+4 * 189208
+3 * 189208 189208
+1 * 189208 189208

fn=(192)
0x403296 79 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 706
+4 * 706
+3 * 706 0 706
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=706 0x403d7e +42 
* * 9884 3530 3530 1 0 0 1
+5 * 706 706
+1 * 706 706

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(54)
0x404a36 450 706 0 706
+1 * 706
+3 * 706 0 706
+1 * 706
+4 * 706 0 706 1 0 0 1
+4 * 706 0 706
+4 * 706 0 706
+4 +10 706 706
+4 * 706
+3 * 706 0 706
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=706 0x404c38 288 
* * 10590 4236 3530 3 0 0 3
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(56)
calls=706 0x404c38 288 
* * 10590 4236 3530
+5 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=706 0x404c52 -36 
* * 308142 102210 97978 20 3 4 20 3 4 13894 836 1408 176
+5 +1 706
+4 * 706 706
+1 * 706 706
+1 * 706 706

fn=(60)
0x404c52 424 706 0 706
+1 * 706
+3 * 706 0 706
+2 * 706 0 706
+1 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +4 706 706
+4 * 706
+3 * 706 0 706
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=706 0x40492d 277 
* * 10590 4236 3530 2 0 0 2
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=706 0x404d9d 277 
* * 17650 6354 5648 2 0 1 2 0 1
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(66)
calls=706 0x404d9d 277 
* * 17650 6354 5648
+5 * 706
+3 * 706
+3 * 706
+3 * 706 0 706
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=706 0x404db7 -49 
* * 242484 80324 76092 15 3 3 15 3 3 13894 836 1408 176
+5 +1 706
+4 * 706 706
+1 * 706 706
+2 * 706 706
+1 * 706 706

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 754 0 754 1 0 0 1
+1 * 754
+3 * 754
+4 * 754 0 754
+4 +1 754 754
+4 * 754
+3 * 754 0 754 1 0 0 1
cfi=(13)
cfn=(64)
calls=754 -33 -66 
* * 4524 2262 1508
+5 * 754 754
+1 * 754 754

fn=(66)
0x404d9d 277 1412 0 1412
+1 * 1412
+3 * 1412
+4 * 1412 0 1412
+4 +1 1412 1412
+4 * 1412
+3 * 1412 0 1412
cfi=(13)
cfn=(68)
calls=1412 0x404f1a -58 
* * 22592 8472 7060 2 0 1 2 0 1
+5 * 1412 1412
+1 * 1412 1412

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 706 0 706
+1 * 706
+3 * 706 0 706
+1 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +10 706 706
+4 * 706
+3 * 706 0 706
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=706 0x404bc6 288 
* * 10590 4236 3530 3 0 0 3
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(122)
calls=706 0x404bc6 288 
* * 10590 4236 3530
+5 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=706 0x404be0 -36 
* * 308142 102210 97978 4 1 40 4 1 40 13894 821 1408
+5 +1 706
+4 * 706 706
+1 * 706 706
+1 * 706 706

fn=(128)
0x404878 277 754 0 754
+1 * 754
+3 * 754
+4 * 754 0 754 1 0 0 1
+4 +1 754 754
+4 * 754
+3 * 754 0 754
cfi=(13)
cfn=(130)
calls=754 -33 -66 
* * 4524 2262 1508 0 0 1 0 0 1
+5 * 754 754
+1 * 754 754

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1412 0 1412
+1 * 1412
+3 * 1412
+4 * 1412 0 1412
+4 +1 1412 1412
+4 * 1412
+3 * 1412 0 1412
cfi=(13)
cfn=(134)
calls=1412 0x404e98 -58 
* * 22592 8472 7060 2 0 0 2
+5 * 1412 1412
+1 * 1412 1412

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +8 706 0 706
+4 +3 706 706
+4 * 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=706 0x404eb5 -22 
* * 231894 76794 71856 1 1 40 1 1 40 13894 821 1408
+5 +1 706 706
+1 * 706 706

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412
+4 * 1412 0 1412
+4 +1 1412 1412
+4 * 1412
+3 * 1412 0 1412
cfi=(13)
cfn=(124)
calls=1412 0x404d36 -77 
* * 8472 4236 2824 2 0 0 2
+5 * 1412 1412
+1 * 1412 1412

fn=(56)
0x404c38 288 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412
+4 * 1412 0 1412 1 0 0 1
+4 +1 1412 1412
+4 * 1412
+3 * 1412 0 1412
cfi=(13)
cfn=(58)
calls=1412 0x404d8f -77 
* * 8472 4236 2824 1 0 0 1
+5 * 1412 1412
+1 * 1412 1412

fn=(74)
0x404f37 368 722 0 722
+1 * 722
+3 * 722
+4 * 722 0 722 1 0 0 1
+4 * 722 0 722
+4 * 722 0 722
+4 +2 722 722
+4 * 722 722
+4 * 722
+3 * 722
+3 * 722
+4 * 722 0 722
+4 +1 722 722
+5 * 722 0 0 0 0 0 0 0 0 722
jcnd=8/722 +33 +2 
* * 
+2 +1 714 714
+4 * 714
+8 * 714 714
+4 * 714 714
+4 * 714
+3 * 714 0 0 1 0 0 1
+3 * 714 0 714 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=714 0x3877c83840 0 
* * 213248 69344 67921 11 2 20 11 2 20 13272 840 709 176
* * 714 714 0 1 1 0 1 1 0 0 0 714
+5 +1 722 722
+4 * 722
+8 * 722 722
+4 * 722
+3 +1 722 722
+1 * 722 722

fn=(140)
0x404eb5 368 722 0 722
+1 * 722
+3 * 722
+4 * 722 0 722 1 0 0 1
+4 * 722 0 722
+4 * 722 0 722 0 0 1 0 0 1
+4 +2 722 722
+4 * 722 722
+4 * 722
+3 * 722
+3 * 722
+4 * 722 0 722
+4 +1 722 722
+5 * 722 0 0 0 0 0 0 0 0 722
jcnd=8/722 +33 +2 
* * 
+2 +1 714 714
+4 * 714
+8 * 714 714
+4 * 714 714
+4 * 714
+3 * 714
+3 * 714 0 714
cob=(2)
cfi=(9)
cfn=(78)
calls=714 0x3877c83840 0 
* * 213248 69344 67921 0 1 41 0 1 41 13272 826 709
* * 714 714 0 0 0 0 0 0 0 0 0 714
+5 +1 722 722
+4 * 722
+8 * 722 722
+4 * 722
+3 +1 722 722
+1 * 722 722

fn=(72)
0x404db7 379 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706 1 0 0 1
+4 * 706 0 706
+4 * 706 0 706
+4 +8 706 0 706
+4 +3 706 706
+4 * 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfn=(74)
calls=706 0x404f37 -22 
* * 231894 76794 71856 14 3 3 14 3 3 13894 836 1408 176
+5 +1 706 706
+1 * 706 706

fn=(126)
0x404be0 424 706 0 706
+1 * 706
+3 * 706 0 706
+2 * 706 0 706
+1 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 * 706 0 706
+4 +4 706 706
+4 * 706
+3 * 706 0 706
cfn=(128)
calls=706 0x404878 277 
* * 10590 4236 3530 1 0 0 1
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(132)
calls=706 0x404d44 277 
* * 17650 6354 5648 2 0 0 2
+5 * 706
+3 * 706 706
+4 * 706
+3 * 706 0 706
cfn=(132)
calls=706 0x404d44 277 
* * 17650 6354 5648
+5 * 706
+3 * 706
+3 * 706
+3 * 706 0 706
cfn=(138)
calls=706 0x404d5e -49 
* * 242484 80324 76092 1 1 40 1 1 40 13894 821 1408
+5 +1 706
+4 * 706 706
+1 * 706 706
+2 * 706 706
+1 * 706 706

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412 0 1412
+4 +1 1412 1412
+4 * 1412 1412
+1 * 1412 1412

fn=(110)
0x404380 726 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412 0 1412
+4 * 1412 0 1412
+4 * 1412 1412
+4 * 1412 1412
+3 * 1412 1412
+4 * 1412 0 1412
+3 * 1412 1412
+1 * 1412 1412

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1412 0 1412 1 0 0 1
+1 * 1412
+3 * 1412 0 1412
+4 +1 1412 1412
+4 * 1412 1412
+1 * 1412 1412

fn=(44)
0x404468 726 1412 0 1412
+1 * 1412
+3 * 1412 0 1412
+4 * 1412 0 1412
+4 * 1412 1412
+4 * 1412 1412
+3 * 1412 1412
+4 * 1412 0 1412 1 0 0 1
+3 * 1412 1412
+1 * 1412 1412

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 714 0 714 1 0 0 1
+1 * 714
+3 * 714 0 714
+4 * 714 0 714
+4 * 714 714
+1 * 714 714

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 714 0 714 1 0 0 1
+1 * 714
+3 * 714 0 714
+4 * 714 0 714 1 0 0 1
+4 * 714 714
+1 * 714 714

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 714 0 714 1 0 0 1
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 +4 714 714
+4 * 714 714
+4 * 714
+3 * 714
+3 * 714 0 714
cfn=(184)
calls=714 0x40454c -14 
* * 4284 1428 2142 1 0 0 1
+5 +2 714 714
+1 * 714 714

fn=(150)
0x40326c 148 714 0 714
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 * 714 0 714
+4 +3 714 714 0 1 0 0 1
+4 * 714 714
+4 * 714
+3 * 714
+3 * 714 0 714
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=714 0x403d1a -29 
* * 12852 4284 4998 3 0 0 3
+5 +1 714 714
+1 * 714 714

fn=(180)
0x40334a 148 714 0 714
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 * 714 0 714
+4 +3 714 714
+4 * 714 714
+4 * 714
+3 * 714
+3 * 714 0 714
cfn=(182)
calls=714 0x403dcc -29 
* * 12852 4284 4998 2 0 0 2
+5 +1 714 714
+1 * 714 714

fn=(152)
0x403d1a 122 714 0 714 1 0 0 1
+1 * 714
+3 * 714
+4 * 714 0 714
+4 * 714 0 714
+4 +4 714 714
+4 * 714 714
+4 * 714
+3 * 714
+3 * 714 0 714
cfn=(154)
calls=714 0x4044f8 -14 
* * 4284 1428 2142 2 0 0 2
+5 +2 714 714
+1 * 714 714

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2421 442 440 9 7 7 9 7 7 338 40 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 18 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3217 678 624 13 9 5 13 9 5 503 47 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 8 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 353 0 353 1 0 0 1
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 +1 353 353
+4 * 353
+3 * 353 0 353
cfi=(2)
cfn=(2)
calls=353 0x402d74 645 
* * 4589 2118 706
+5 * 353
+3 * 353 0 353
+3 +1 353 353
+6 * 353 0 353
+3 * 353 353
+6 * 353 0 353
+3 +1 353 353
+6 * 353 0 353 1 0 0 1
+3 * 353 353
+6 * 353 0 353
+3 +2 353 0 353
+7 * 353
jump=353 +86 * 
* * 
+2 +1 62834 62834
+3 * 62834
+3 * 62834 62834
+4 * 62834
+3 * 62834
+3 * 62834 0 62834
cfi=(2)
cfn=(144)
calls=62834 0x402d9a 770 
* * 691174 314170 188502
+5 * 62834 62834
+4 * 62834 62834
+5 * 62834
+4 * 62834 0 62834
+5 +1 62834 62834
+3 * 62834
+3 * 62834 62834
+4 * 62834
+3 * 62834
+3 * 62834 0 62834
cfi=(2)
cfn=(146)
calls=62834 0x402dba 770 
* * 691174 314170 188502 1 0 0 1
+5 * 62834 62834
+2 * 62834
+4 * 62834 62834
+5 * 62834
+4 * 62834 0 62834
+5 -2 62834 0 62834
+4 * 62834 62834
+3 * 62834
+3 * 62834 62834
+3 * 62834 0 0 0 0 0 0 0 0 62834 354
jcnd=62481/62834 -93 +1 
* * 
-9 * 353 353 0 1 0 0 1
+3 * 353
+3 * 353 353
+3 * 353 0 0 0 0 0 0 0 0 353
jcnd=353/353 -93 +1 
* * 
+2 +4 353 353
+3 * 353
+3 * 353
+4 * 353 353 0 1 0 0 1
+5 * 353
+4 * 353
+3 * 353 0 353
+5 +1 353 353
+3 * 353
+3 * 353
+4 * 353 353
+5 * 353
+4 * 353
+3 * 353 0 353
+5 +1 353 0 353
+7 * 353
jump=353 0x4016ee * 
* * 
+2 +1 62834 62834
+3 * 62834
+3 * 62834 62834
+4 * 62834
+3 * 62834 0 0 1 0 0 1
+3 * 62834 0 62834
cfi=(2)
cfn=(146)
calls=62834 0x402dba 770 
* * 691174 314170 188502
+5 * 62834 62834
+2 * 62834
+4 * 62834 62834
+5 * 62834 0 62834
+5 +1 62834 62834
+3 * 62834
+3 * 62834 62834
+4 * 62834
+3 * 62834
+3 * 62834 0 62834
cfi=(2)
cfn=(144)
calls=62834 0x402d9a 770 
* * 691174 314170 188502
+5 * 62834 62834
+4 * 62834 62834
+5 * 62834 0 62834
+5 +1 62834 62834
+5 * 62834 62834
+5 * 62834 62834
+5 * 62834
+4 * 62834 0 62834
+5 +1 62834 62834
+5 * 62834 62834
+5 * 62834 62834
+5 * 62834
+4 * 62834 0 62834
+5 -4 62834 0 62834
+4 * 62834 62834
+3 * 62834
+3 * 62834 62834
+3 * 62834 0 0 0 0 0 0 0 0 62834 354
jcnd=62481/62834 0x401672 +1 
* * 
-9 * 353 353 0 1 0 0 1
+3 * 353
+3 * 353 353
+3 * 353 0 0 0 0 0 0 0 0 353
jcnd=353/353 0x401672 +1 
* * 
+6 +6 353 353 0 1 0 0 1
+5 * 353 353
+5 * 353 0 353
+5 +2 353 353
+3 +1 353 0 353
+3 * 353 353
+5 * 353 353
+1 * 353 353

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 353
+7 * 353
+7 * 353
+3 * 353
+3 * 353 0 353
cfi=(2)
cfn=(4)
calls=353 0x4030b2 310 
* * 379480 111616 104871 66 23 16 66 23 16 23962 1117 1410 176
+5 * 353
+7 * 353
+7 * 353
+3 * 353
+3 * 353 0 353
cfi=(2)
cfn=(80)
calls=353 0x402ff4 310 
* * 380027 110729 102779 40 7 71 40 7 71 24205 1267 1410
+5 * 353 0 0 1 0 0 1
+7 * 353
+7 * 353
+3 * 353
+3 * 353 0 353
cfn=(142)
calls=353 0x401585 -52 
* * 6557681 2899189 1514017 8 0 0 8 0 0 126374 708
+5 * 353 0 353
+8 * 353 353
+6 * 353 0 353
+6 * 353
+7 * 353
+3 * 353 0 353
cfi=(2)
cfn=(148)
calls=353 0x402df4 414 
* * 88174 27655 19671 33 5 0 33 5 0 9787 271 706
+5 * 353
+7 * 353
+3 * 353 0 353 1 0 0 1
cfi=(2)
cfn=(178)
calls=353 0x402e74 414 
* * 92798 29359 21067 7 1 0 7 1 0 11083 29 706
+5 +2 353
+7 * 353
+7 * 353
+3 * 353
+3 * 353 0 353
cfi=(2)
cfn=(4)
calls=353 0x4030b2 310 
* * 379097 111586 104760 2 1 1 2 1 1 23926 710 1410
+5 * 353
+7 * 353
+7 * 353
+3 * 353
+3 * 353 0 353
cfi=(2)
cfn=(80)
calls=353 0x402ff4 310 
* * 379152 110677 102635 0 0 2 0 0 2 24071 840 1410
+5 * 353 353
+6 * 353 0 0 1 0 0 1
+7 * 353
+7 * 353 0 353
+6 * 353 353
+8 * 353
+3 * 353
+3 * 353 0 353
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=353 0x401719 -33 
* * 3036859 1264446 696469 4 0 0 4 0 0 63187 354
+5 * 353 0 353
+8 * 353 353
+6 * 353 0 353
+6 * 353
+7 * 353 0 0 1 0 0 1
+3 * 353 0 353
cfi=(2)
cfn=(148)
calls=353 0x402df4 414 
* * 88174 27655 19671 0 0 0 0 0 0 9787 266 706
+5 * 353
+7 * 353
+3 * 353 0 353
cfi=(2)
cfn=(178)
calls=353 0x402e74 414 
* * 92798 29359 21067 0 0 0 0 0 0 11083 24 706
+5 +2 353 353
+7 * 353
+3 * 353 0 353
cfi=(2)
cfn=(2)
calls=353 0x402d74 645 
* * 4589 2118 706
+5 * 353 353
+6 * 353
+3 * 353
+3 * 353
+3 * 353 353
+7 * 353
+3 * 353 0 0 1 0 0 1
+3 * 353 0 353
cfi=(2)
cfn=(144)
calls=353 0x402d9a 770 
* * 3883 1765 1059
+5 * 353
+3 * 353
+7 * 353
+3 * 353
+3 * 353 0 353
cfi=(2)
cfn=(200)
calls=353 0x402eda 901 
* * 35085 13027 10047 39 32 11 39 32 11 1551 72 47
+5 +1 353 353
+7 * 353
+3 * 353 0 353
cfi=(2)
cfn=(10)
calls=353 0x402f54 645 
* * 4589 2118 706 0 1 0 0 1
+5 * 353 353
+6 * 353
+3 * 353
+3 * 353
+3 * 353 353
+7 * 353 0 0 1 0 0 1
+3 * 353
+3 * 353 0 353
cfi=(2)
cfn=(146)
calls=353 0x402dba 770 
* * 3883 1765 1059
+5 * 353
+3 * 353
+7 * 353
+3 * 353
+3 * 353 0 353
cfi=(2)
cfn=(244)
calls=353 0x402f7a 901 
* * 34322 12808 9866 28 29 39 28 29 39 1395 62 47
+5 +1 353 353
+7 * 353
+3 * 353 0 353
cfi=(2)
cfn=(10)
calls=353 0x402f54 645 
* * 4589 2118 706
+5 * 353 353
+6 * 353
+3 * 353
+3 * 353
+3 * 353 353 0 1 0 0 1
+7 * 353
+3 * 353
+3 * 353 0 353
cfi=(2)
cfn=(146)
calls=353 0x402dba 770 
* * 3883 1765 1059
+5 * 353 353
+2 * 353
+4 * 353 353
+8 * 353 353
+8 * 353 0 353
+8 +1 353 353
+7 * 353
+3 * 353 0 353
cfi=(2)
cfn=(2)
calls=353 0x402d74 645 
* * 4589 2118 706
+5 * 353 353 0 1 0 0 1
+6 * 353
+3 * 353
+3 * 353
+3 * 353 353
+7 * 353
+3 * 353
+3 * 353 0 353
cfi=(2)
cfn=(144)
calls=353 0x402d9a 770 
* * 3883 1765 1059
+5 * 353 353
+4 * 353 353
+8 * 353
+4 * 353 353
+8 * 353
+3 * 353 0 353
+8 +2 353 0 353
+7 -12 353 353
+8 * 353 353
+7 * 353 0 0 0 0 0 0 0 0 353 2
jcnd=1/353 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 353
+7 * 353
+3 * 353 0 353
cfi=(2)
cfn=(2)
calls=353 0x402d74 645 
* * 4589 2118 706 2 0 1 2 0 1
+5 * 353
+3 * 353 353
+7 * 353
+3 * 353 0 353
cfi=(2)
cfn=(2)
calls=353 0x402d74 645 
* * 4589 2118 706 0 1 0 0 1
+5 * 353
+3 * 353 0 0 0 0 0 0 0 0 353 1
+2 * 353 0 0 1 0 0 1
+5 * 353
jump=353 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 353
+2 * 353 0 0 0 0 0 0 0 0 353
jcnd=353/353 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+5 +1 353 353
+4 * 353
+3 * 353 0 353
cfi=(2)
cfn=(2)
calls=353 0x402d74 645 
* * 4589 2118 706
+5 * 353
+3 * 353 0 353
+3 +1 353 353 0 1 0 0 1
+6 * 353 0 353
+3 * 353 353
+6 * 353 0 353
+3 +2 353 0 353
+7 * 353
jump=353 +86 * 
* * 
+2 +1 62834 62834
+3 * 62834
+3 * 62834 62834
+4 * 62834
+3 * 62834
+3 * 62834 0 62834
cfi=(2)
cfn=(144)
calls=62834 0x402d9a 770 
* * 691174 314170 188502
+5 * 62834 62834
+4 * 62834 62834
+5 * 62834
+4 * 62834 0 62834
+5 +1 62834 62834
+3 * 62834
+3 * 62834 62834
+4 * 62834
+3 * 62834
+3 * 62834 0 62834
cfi=(2)
cfn=(146)
calls=62834 0x402dba 770 
* * 691174 314170 188502
+5 * 62834 62834
+2 * 62834
+4 * 62834 62834
+5 * 62834
+4 * 62834 0 62834
+5 -2 62834 0 62834
+4 * 62834 62834
+3 * 62834
+3 * 62834 62834
+3 * 62834 0 0 0 0 0 0 0 0 62834 354
jcnd=62481/62834 -93 +1 
* * 
-9 * 353 353 0 1 0 0 1
+3 * 353
+3 * 353 353
+3 * 353 0 0 0 0 0 0 0 0 353
jcnd=353/353 -93 +1 
* * 
+2 +4 353 353
+3 * 353
+3 * 353 0 0 1 0 0 1
+4 * 353 353
+5 * 353
+4 * 353
+3 * 353 0 353
+5 +1 353 353
+3 * 353
+3 * 353
+4 * 353 353
+5 * 353
+4 * 353
+3 * 353 0 353
+5 +1 353 353
+5 * 353 353
+5 * 353 353
+5 * 353 0 0 1 0 0 1
+4 * 353
+3 * 353 0 353
+5 +2 353 353
+3 +1 353 0 353
+3 * 353 353
+5 * 353 353
+1 * 353 353

fl=(4)
fn=(174)
0x403ccc 121 706 0 706
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 706
+4 * 706
+3 * 706 0 706
cfi=(5)
cfn=(176)
calls=706 0x4044cc -35 
* * 3530 1412 1412
+5 * 706 706
+1 * 706 706

fn=(90)
0x4047b2 115 706 0 706 1 0 0 1
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706 1 0 0 1
+4 +1 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfi=(5)
cfn=(92)
calls=706 0x4049d4 -35 
* * 4236 1412 2118 1 0 0 1
+5 * 706 706
+1 * 706 706

fn=(194)
0x403d7e 121 706 0 706 1 0 0 1
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 706
+4 * 706
+3 * 706 0 706
cfi=(5)
cfn=(196)
calls=706 0x404520 -35 
* * 3530 1412 1412
+5 * 706 706
+1 * 706 706

fn=(16)
0x404804 115 706 0 706 1 0 0 1
+1 * 706
+3 * 706
+4 * 706 0 706
+4 * 706 0 706
+4 +1 706 706
+4 * 706 706
+4 * 706
+3 * 706
+3 * 706 0 706
cfi=(5)
cfn=(18)
calls=706 0x404a28 -35 
* * 4236 1412 2118 1 0 1 1 0 1
+5 * 706 706
+1 * 706 706

fl=(3)
fn=(222)
0x403373 215 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +1 353 353
+4 * 353 353
+4 * 353 353
+4 * 353
+3 * 353
+3 * 353 0 353
cfi=(5)
cfn=(224)
calls=353 0x403df2 -87 
* * 8472 2824 3177 0 23 3 0 23 3 353 3
+5 * 353 353
+1 * 353 353

fn=(8)
0x403afa 224 706 0 706 1 0 0 1
+1 * 706
+3 * 706 0 706
+4 * 706 706
+4 * 706 706
+1 * 706 706

fn=(264)
0x4036b1 215 353 0 353
+1 * 353
+3 * 353
+4 * 353 0 353
+4 * 353 0 353
+4 * 353 0 353
+4 +1 353 353
+4 * 353 353
+4 * 353 353
+4 * 353
+3 * 353
+3 * 353 0 353
cfi=(5)
cfn=(266)
calls=353 0x40406a -87 
* * 8472 2824 3177 0 22 14 0 22 14 353
+5 * 353 353
+1 * 353 353

fn=(212)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102)
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28)
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84)
0x4039ed 224 706 0 706
+1 * 706
+3 * 706 0 706
+4 * 706 706
+4 * 706 706
+1 * 706 706

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1428 0 1428 1 0 0 1
+2 0 1428 0 1428
+2 0 1428 0 1428
+2 0 1428
+3 0 1428 0 1428
+2 0 1428 0 1428
+1 0 1428 0 1428
+1 0 1428
+3 0 1428
+4 0 1428 1428
+4 0 1428 0 1428
+4 0 1428
+3 0 1428
+4 0 1428
+3 0 1428
+3 0 1428
+3 0 1428 0 0 1 0 0 1 0 0 1428
+6 0 1428
+4 0 1428 0 0 0 0 0 0 0 0 1428
+6 0 1428
+4 0 1428 0 0 0 0 0 0 0 0 1428
+6 0 1428 1428
+7 0 1428 0 0 0 0 0 0 0 0 1428 2
jcnd=1304/1428 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1304
+2 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304 1304 0 1 0 0 1
+4 0 1304
+3 0 1304
+2 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 0x3877c78a40 0 
* 0 
+6 0 1304 1304
+4 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304 1304
+5 0 1304
+4 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 0x3877c7907c 0 
* 0 
+6 0 1304 1304
+5 0 1304
+4 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304
+4 0 1304 0 0 1 0 0 1 0 0 1304
+6 0 1304
+4 0 1304 1304
+7 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304 1304
+6 0 1304
+2 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304 1304
+4 0 1304 0 0 0 0 0 0 0 0 1304 5
jcnd=1300/1304 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1304 1304 0 1 0 0 1
+4 0 1304 0 0 0 0 0 0 0 0 1304 460
jcnd=512/1304 0x3877c78bf0 0 
* 0 
+6 0 792 792 0 0 1 0 0 1
+6 0 792 0 0 1 0 0 1 0 0 792 64
jcnd=61/792 0x3877c78a78 0 
* 0 
+6 0 731 731
+5 0 731 731
+5 0 731 731
+4 0 731 0 0 0 0 0 0 0 0 731
+6 0 731 731
+4 0 731 0 0 0 0 0 0 0 0 731
+6 0 731 731
+9 0 731 0 731
+4 0 731 0 731
+4 0 731 0 0 0 0 0 0 0 0 731 4
jcnd=723/731 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 731
+3 0 731
+4 0 731 731
+4 0 731 731
+4 0 731 0 0 0 0 0 0 0 0 731
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 792
+7 0 792 0 792
+4 0 792 0 792
+4 0 792 0 0 0 0 0 0 0 0 792 69
jcnd=441/792 +18 0 
* 0 
+2 0 351 0 351
+8 0 351 0 351
+8 0 351 0 351
+4 0 351
+3 0 351 0 351 1 0 0 1
+4 0 351
+4 0 351 0 351
+4 0 351 0 351
+4 0 351
+7 0 351 0 0 0 0 0 0 0 0 351
jcnd=351/351 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 512
+7 0 512 0 0 0 0 0 0 0 0 512
jcnd=512/512 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1304 0 0 1 0 0 1
+5 0 1304 1304
+4 0 1304 1304
+7 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 +16 0 
* 0 
+16 0 1304 0 1304
+5 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304
+3 0 1304
jump=1304 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1304 1304 0 1 0 0 1
+4 0 1304
+2 0 1304 0 0 0 0 0 0 0 0 1304
+6 0 1304 1304
+7 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 +15 0 
* 0 
+15 0 1304 0 1304 1 0 0 1
+4 0 1304 0 0 0 0 0 0 0 0 1304 2
+6 0 1304
+4 0 1304 1304
+1 0 1304 1304
+1 0 1304 1304
+2 0 1304 1304
+2 0 1304 1304
+2 0 1304 1304
+2 0 1304 1304
0x3877c78bf0 0 512 0 0 1 0 0 1
+3 0 512 0 512
+4 0 512
+3 0 512
+4 0 512 0 512 1 0 0 1
+4 0 512
jump=512 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1304 1304 0 1 1 0 1 1
+4 0 1304 0 0 1 0 0 1
+7 0 1304
+4 0 1304
+3 0 1304
+3 0 1304 0 0 0 0 0 0 0 0 1304
jcnd=1304/1304 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1418 0 0 1 0 0 1
+7 0 1418
+3 0 1418
+3 0 1418 1418 0 0 1 0 0 1
+4 0 1418
+4 0 1418 0 0 0 0 0 0 0 0 0 0 1418 176
jump=172 0x3877c89be8 0 
* 0 
jump=186 0x3877c89bd0 0 
* 0 
jump=176 0x3877c89bb8 0 
* 0 
jump=176 +11 0 
* 0 
jump=176 0x3877c89c48 0 
* 0 
jump=178 0x3877c89c30 0 
* 0 
jump=176 0x3877c89c18 0 
* 0 
jump=178 0x3877c89c00 0 
* 0 
+11 0 176 176
+3 0 176
+4 0 176
+4 0 176 176
+4 0 176
+4 0 176 0 176
+4 0 176
+9 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176
+4 0 176
+4 0 176 0 0 0 0 0 0 0 0 176
jcnd=8/176 0x3877c89c60 0 
* 0 
-40 0 15462 15462
+4 0 15462 0 15462 0 0 3 0 0 3
+4 0 15462 15462
+4 0 15462 0 15462 0 0 15 0 0 15
+4 0 15462 15462
+4 0 15462 0 15462 0 0 19 0 0 19
+4 0 15462 15462
+4 0 15462 0 15462
+4 0 15462
+4 0 15462
+4 0 15462 0 0 0 0 0 0 0 0 15462 944
jcnd=1382/15462 0x3877c89c60 0 
* 0 
-32 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178
+4 0 178
+4 0 178 0 0 0 0 0 0 0 0 178
jcnd=10/178 0x3877c89c60 0 
* 0 
-24 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176
+4 0 176
+4 0 176 0 0 0 0 0 0 0 0 176
jcnd=8/176 0x3877c89c60 0 
* 0 
-16 0 178 178 0 1 0 0 1
+4 0 178 0 178
+4 0 178 0 0 1 0 0 1
+4 0 178
+4 0 178 0 0 0 0 0 0 0 0 178 4
jcnd=10/178 0x3877c89c60 0 
* 0 
+6 0 14752
+4 0 14752 14752
+3 0 14752 0 14752 0 0 1 0 0 1
+3 0 14752 14752
+4 0 14752 0 14752 0 0 3 0 0 3
+4 0 14752 14752
+4 0 14752 0 14752 0 0 18 0 0 18
+4 0 14752 14752
+4 0 14752 0 14752
+4 0 14752
jump=14752 -80 0 
* 0 
-30 0 172 172
+3 0 172 0 172
+3 0 172 172
+4 0 172 0 172
+4 0 172 172
+4 0 172 0 172 0 0 1 0 0 1
+4 0 172 172
+4 0 172 0 172
+4 0 172
jump=172 -80 0 
* 0 
-24 0 186 186
+4 0 186 0 186
+4 0 186 186
+4 0 186 0 186
+4 0 186 186
+4 0 186 0 186
+4 0 186
jump=186 -80 0 
* 0 
-16 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176
jump=176 -80 0 
* 0 
+8 0 176 176
+3 0 176
+4 0 176 0 0 1 0 0 1
+4 0 176
+4 0 176
jump=176 -39 0 
* 0 
+9 0 186
+3 0 186 0 0 0 0 0 0 0 0 186
+6 0 186 186
+3 0 186
+4 0 186
jump=186 -72 0 
* 0 
+8 0 172
+4 0 172 172
+3 0 172 0 0 0 0 0 0 0 0 172
+2 0 172
+4 0 172
jump=172 -99 0 
* 0 
+11 0 178 178 0 1 0 0 1
+3 0 178
+4 0 178
+4 0 178
+4 0 178
jump=178 0x3877c89b78 0 
* 0 
+9 0 176 176
+3 0 176
+4 0 176
+4 0 176
+4 0 176
jump=176 0x3877c89b70 0 
* 0 
+9 0 178 178
+3 0 178
+4 0 178
+4 0 178
+4 0 178
jump=178 0x3877c89b68 0 
* 0 
+9 0 176 176
+3 0 176
+4 0 176
+4 0 176
+4 0 176
jump=176 0x3877c89b60 0 
* 0 
+9 0 1418 0 1418 1 0 0 1
+3 0 1418 1418

fn=(104) alloc_perturb
0x3877c77180 0 1294 1294 0 1 0 0 1
+6 0 1294
+2 0 1294 0 0 0 0 0 0 0 0 1294 1
+2 0 1294 1294

fn=(38) _int_malloc
0x3877c79a00 0 1428 0 1428 1 0 0 1
+2 0 1428
+3 0 1428 0 1428
+2 0 1428 0 1428
+2 0 1428 0 1428 0 0 1 0 0 1
+2 0 1428
+3 0 1428 0 1428
+1 0 1428 0 1428
+1 0 1428
+4 0 1428
+4 0 1428 0 0 0 0 0 0 0 0 1428
+6 0 1428
+4 0 1428
+6 0 1428
+3 0 1428
+4 0 1428
+4 0 1428
+4 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428
+6 0 1428 1428 0 1 1 0 1 1
+7 0 1428 0 0 0 0 0 0 0 0 1428 5
jcnd=1306/1428 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1294
+4 0 1294 1294
+1 0 1294 1294
+1 0 1294 1294
+2 0 1294 1294
+2 0 1294 1294
+2 0 1294 1294
+2 0 1294 1294
+7 0 1323
+7 0 1323 0 0 1 0 0 1 0 0 1323 5
jcnd=420/1323 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 11 0 0 11
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 420 0 0 1 0 0 1
+3 0 420
+4 0 420
+4 0 420 0 0 1 0 0 1 0 0 420
jcnd=420/420 0x3877c7a1a4 0 
* 0 
+30 0 420 420
+6 0 420
+5 0 420 0 0 0 0 0 0 0 0 420 1
jcnd=419/420 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 911 244 193 8 3 0 8 3 0 187 20
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1322 0 0 1 0 0 1
+3 0 1322
+3 0 1322
+3 0 1322
+4 0 1322
+3 0 1322
+4 0 1322 0 1322
+5 0 1322
+3 0 1322 0 1322
+4 0 1322 0 1322
+4 0 1322 0 1322
+5 0 1322
+3 0 1322
+3 0 1322
+3 0 1322
+3 0 1322
+4 0 1322
+4 0 1322 0 0 1 0 0 1
+4 0 1322 0 1322
+4 0 1322
+4 0 1322 0 1322
+5 0 1322 0 1322
+5 0 1322
+3 0 1322
+3 0 1322 0 1322
+5 0 1322
+5 0 1322
+3 0 1322 0 1322
+4 0 1322 0 1322
+4 0 1322
+6 0 1322 0 1322
+4 0 1322 0 1322
+5 0 1322 0 0 1 0 0 1
+3 0 1322
+3 0 1322
+3 0 1322
jump=1322 +87 0 
* 0 
+8 0 987
+3 0 987
+4 0 987
+2 0 987
+2 0 987
+3 0 987
+3 0 987
+3 0 987
+2 0 987
+2 0 987
+5 0 987
+2 0 987 987 0 0 2 0 0 2
+4 0 987
+3 0 987
+4 0 987 0 987
+4 0 987 0 987
+8 0 987
+7 0 987 0 987
+4 0 987 0 987 0 0 1 0 0 1
+4 0 987 0 987
+4 0 987 0 0 0 0 0 0 0 0 987
-38 0 341
+3 0 341
+4 0 341 0 341
+4 0 341 0 341
+8 0 341
+7 0 341 0 341
+4 0 341 0 341
+4 0 341 0 341
+4 0 341 0 0 0 0 0 0 0 0 341
+6 0 2651 2651 0 1 0 0 1
+4 0 2651
+3 0 2651 0 0 0 0 0 0 0 0 2651 145
jcnd=1274/2651 0x3877c79ef0 0 
* 0 
+6 0 1377 1377
+4 0 1377 1377
+4 0 1377
+4 0 1377 0 0 0 0 0 0 0 0 1377
+6 0 1377 1377 0 1 1 0 1 1
+7 0 1377 0 0 0 0 0 0 0 0 1377
+6 0 1377
+4 0 1377
+7 0 1377 0 0 0 0 0 0 0 0 1377 4
jcnd=467/1377 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1357
+3 0 1357 0 1357
+4 0 1357 0 1357
+5 0 1357 0 0 0 0 0 0 0 0 1357 15
jcnd=29/1357 0x3877c7a090 0 
* 0 
+6 0 1328
+7 0 1328 0 0 0 0 0 0 0 0 1328 260
jcnd=987/1328 0x3877c79c50 0 
* 0 
+6 0 341 0 0 1 0 0 1
+3 0 341
+4 0 341
+4 0 341 0 0 0 0 0 0 0 0 341 1
+6 0 341
+3 0 341
+4 0 341
+2 0 341
+2 0 341
+3 0 341
+3 0 341
+8 0 341
+3 0 341
+2 0 341
+2 0 341
+4 0 341 341 0 0 2 0 0 2
+4 0 341
+3 0 341 0 0 1 0 0 1 0 0 341 9
jcnd=341/341 0x3877c79e15 0 
* 0 
0x3877c79e15 0 341 0 341
+4 0 341 0 341
+4 0 341
+3 0 341
jump=341 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 333
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 6
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 1274 0 0 1 0 0 1
+7 0 1274
+3 0 1274 0 0 0 0 0 0 0 0 1274 2
jcnd=412/1274 0x3877c7a0b0 0 
* 0 
+6 0 1250 1250 0 1 0 0 1
+4 0 1250
+3 0 1250
+3 0 1250
+2 0 1250
+4 0 1250
+3 0 1250
+3 0 1250
+2 0 1250
+2 0 1250
+2 0 1250
+2 0 1250 1250 0 0 1 0 0 1
+8 0 1250
+5 0 1250
+5 0 1250
+2 0 1250 0 0 0 0 0 0 0 0 1250
-2 0 577
+2 0 577 0 0 0 0 0 0 0 0 577
+2 0 1827
+2 0 1827 0 0 0 0 0 0 0 0 1827 26
jcnd=1038/1827 +64 0 
* 0 
+2 0 789
+8 0 789
+3 0 789
+3 0 789 0 0 0 0 0 0 0 0 789 1
jcnd=1/789 0x3877c79fc0 0 
* 0 
-6 0 938
+3 0 938
+3 0 938 0 0 0 0 0 0 0 0 938 9
jcnd=513/938 0x3877c79fc0 0 
* 0 
+2 0 1213
+2 0 1213 1213
+8 0 1213
+2 0 1213 0 0 0 0 0 0 0 0 1213 22
jcnd=938/1213 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 9878
+4 0 9878
+2 0 9878
+2 0 9878 0 0 0 0 0 0 0 0 9878 730
jcnd=8733/9878 -8 0 
* 0 
-2 0 1038 0 0 1 0 0 1
+2 0 1038 0 0 0 0 0 0 0 0 1038 19
jcnd=932/1038 -8 0 
* 0 
+2 0 1313 1313 0 0 5 0 0 5
+4 0 1313 0 0 1 0 0 1
+3 0 1313 0 0 0 0 0 0 0 0 1313 555
jcnd=736/1313 0x3877c7a1cf 0 
* 0 
+6 0 577
+2 0 577
+4 0 577
+2 0 577
+2 0 577
+2 0 577 0 577
+8 0 577
jump=577 0x3877c79f30 0 
* 0 
+37 0 514 514 0 1 0 0 1
+5 0 514 514
+4 0 514
+4 0 514 514
+5 0 514 0 0 0 0 0 0 0 0 514
jcnd=514/514 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 412 412
+4 0 412
+4 0 412
+2 0 412
+5 0 412 412 0 1 1 0 1 1
+4 0 412
+3 0 412 0 0 0 0 0 0 0 0 412 4
jcnd=388/412 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 420 0 0 1 0 0 1
+3 0 420 0 420
+4 0 420
jump=420 0x3877c79b99 0 
* 0 
+36 0 736 736 0 1 1 0 1 1
+4 0 736 736
+4 0 736
+3 0 736 736
+4 0 736
+4 0 736
+3 0 736
+3 0 736 736
+4 0 736 0 0 0 0 0 0 0 0 736
+6 0 736 736
+4 0 736 0 0 0 0 0 0 0 0 736
+6 0 736 736 0 1 0 0 1
+8 0 736 0 736
+4 0 736 0 736
+4 0 736 0 0 0 0 0 0 0 0 736 11
jcnd=418/736 +38 0 
* 0 
+2 0 318 318 0 0 2 0 0 2
+4 0 318
+3 0 318 0 0 0 0 0 0 0 0 318
+2 0 318 318
+5 0 318 0 0 0 0 0 0 0 0 318
+6 0 318 318
+4 0 318 0 318
+4 0 318 318
+4 0 318 0 318
+4 0 318
+4 0 318 0 0 0 0 0 0 0 0 318
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 715 715
+4 0 715 715 0 1 0 0 1
+4 0 715 0 0 0 0 0 0 0 0 715
+6 0 715
+4 0 715
+7 0 715 0 715 0 0 7 0 0 7
+4 0 715 0 715
+4 0 715 0 715
+4 0 715 0 715
+4 0 715 0 0 0 0 0 0 0 0 715 3
jcnd=250/715 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 250
+7 0 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 724
+7 0 724 0 724
+4 0 724
+3 0 724
+3 0 724
+4 0 724
+3 0 724
+4 0 724
+3 0 724
+3 0 724
+4 0 724 0 724
+4 0 724 0 724 0 0 1 0 0 1
+4 0 724
jump=724 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 760
+4 0 760 0 0 1 0 0 1
+3 0 760
+3 0 760 0 760
cfn=(104)
calls=760 0x3877c77180 0 
* 0 3040 1520 0 0 0 0 0 0 0 760
+5 0 760
+3 0 760
jump=760 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 514 0 0 1 0 0 1
+7 0 514
+2 0 514
+4 0 514
+3 0 514
+3 0 514 0 514
+5 0 514
+3 0 514
+4 0 514
+3 0 514 0 0 1 0 0 1
+4 0 514
+4 0 514
+3 0 514
+4 0 514 0 514
+4 0 514 0 514 0 0 19 0 0 19
+4 0 514
+3 0 514
+3 0 514 0 514
cfn=(104)
calls=514 0x3877c77180 0 
* 0 2056 1028 0 0 0 0 0 0 0 514 1
+5 0 514
+3 0 514
jump=514 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1428 0 1428 1 0 0 1
+5 0 1428 0 1428
+5 0 1428
+3 0 1428 0 1428
+5 0 1428
+4 0 1428 1428 0 0 1 0 0 1
+7 0 1428 1428 0 0 1 0 0 1
+3 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428
+6 0 1428 1428 0 0 1 0 0 1
+7 0 1428 1428 0 1 1 0 1 1
+4 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428
+2 0 1428 1428 0 0 1 0 0 1
+3 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428
jcnd=1428/1428 +97 0 
* 0 
+18 0 1428
+3 0 1428
+3 0 1428 0 1428
cfn=(38)
calls=1428 0x3877c79a00 0 
* 0 328002 40356 47553 45 34 52 45 34 52 50653 2331
+5 0 1428
+3 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428
+2 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428
+2 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428 21
+2 0 1428 1428
+7 0 1428 0 0 0 0 0 0 0 0 1428
jcnd=1428/1428 +13 0 
* 0 
+13 0 1428 0 1428
+2 0 1428 0 0 0 0 0 0 0 0 1428 12
+6 0 1428
+3 0 1428 1428
+4 0 1428 1428
+5 0 1428 1428
+5 0 1428
+4 0 1428 1428
+1 0 1428 0 0 1 0 0 1
+5 0 1428 1428 0 0 1 0 0 1
+7 0 1428 0 0 0 0 0 0 0 0 1428
jcnd=1428/1428 +14 0 
* 0 
+14 0 1428 0 1428 1 0 0 1
+3 0 1428 0 0 0 0 0 0 0 0 1428
+6 0 1428
jump=1428 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1428 0 1428 1 0 0 1
+2 0 1428
+3 0 1428
+3 0 1428 0 1428
+2 0 1428
+3 0 1428 0 1428
+1 0 1428
+3 0 1428 0 1428
+1 0 1428
+3 0 1428
+4 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428
+6 0 1428
+4 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428 4
jcnd=10/1428 0x3877c838d1 0 
* 0 
+2 0 1418
+3 0 1418
+3 0 1418
+3 0 1418
+3 0 1418
+3 0 1418 0 0 0 0 0 0 0 0 1418
jcnd=1418/1418 +41 0 
* 0 
+41 0 1418 0 0 1 0 0 1
+3 0 1418 0 0 0 0 0 0 0 0 1418
jcnd=1418/1418 0x3877c839c0 0 
* 0 
+24 0 1418
+3 0 1418
+4 0 1418
+3 0 1418
+3 0 1418
+3 0 1418
+3 0 1418
+3 0 1418 0 0 0 0 0 0 0 0 1418 706
jcnd=718/1418 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 710
+10 0 710 710 0 0 2 0 0 2
+3 0 710
+4 0 710 0 710
+3 0 710
+4 0 710
+4 0 710 0 0 0 0 0 0 0 0 710
jcnd=710/710 -18 0 
* 0 
-18 0 2186 2186
+3 0 2186
+4 0 2186 0 2186
+3 0 2186
+4 0 2186
+4 0 2186 0 0 0 0 0 0 0 0 2186 8
jcnd=1476/2186 -18 0 
* 0 
+2 0 1428
+4 0 1428
+3 0 1428 1428
+1 0 1428 1428
+1 0 1428 1428
+2 0 1428 1428 0 1 0 0 1
+2 0 1428 1428
0x3877c839c0 0 1418 0 0 1 0 0 1
+3 0 1418
+3 0 1418
+3 0 1418
+4 0 1418 0 1418 0 0 1 0 0 1
cfn=(284)
calls=1418 0x3877c89b20 0 
* 0 345778 128652 125816 6 1 60 6 1 60 16528 948 1418 176
+5 0 1418
jump=1418 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1428 1428 0 1 1 0 1 1
+7 0 1428 1428 0 0 1 0 0 1
+3 0 1428
+3 0 1428 0 0 1 0 0 1 0 0 1428
+6 0 1428
+3 0 1428 0 0 0 0 0 0 0 0 1428
+6 0 1428 1428
+4 0 1428
+4 0 1428
+2 0 1428 0 0 0 0 0 0 0 0 1428
+2 0 1428
+2 0 1428
+7 0 1428 0 0 0 0 0 0 0 0 1428
jcnd=1428/1428 +14 0 
* 0 
+14 0 1428
+2 0 1428
cfn=(170)
calls=1428 0x3877c78650 0 
* 0 138865 36735 20985 19 2 0 19 2 0 33585 608

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 10
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 3 0 0 3
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 11633672 4776702 2745983 241 102 142 241 102 142 331472 5723 8558 176
