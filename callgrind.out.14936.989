version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 989


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1154271815 - 1155914193
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1624 0 0 1 0 0 1
+3 0 1624 0 0 0 0 0 0 0 0 1624
+2 0 1624
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1624 0x3877c7b8b0 0 
* 0 198611 52118 29048 23 4 0 23 4 0 49035 311
* 0 1624 1624 0 1 1 0 1 1 0 0 0 1624

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1624 0 1624 1 0 0 1
+1 0 1624
+5 0 1624
+3 0 1624 0 1624
+1 0 1624
+4 0 1624 0 0 1 0 0 1
+3 0 1624
+4 0 1624
+3 0 1624 0 1624 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1624 0x3877c7aa50 0 
* 0 453754 68333 72112 51 42 61 51 42 61 75579 2546
* 0 1624 1624 0 1 1 0 1 1 0 0 0 1624
+5 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624
jcnd=1624/1624 +96 0 
* 0 
+96 0 1624 0 0 1 0 0 1
+4 0 1624 1624
+1 0 1624 1624
+1 0 1624 1624

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 402 0 402 1 0 0 1
+1 * 402
+3 * 402
+4 * 402 0 402
+4 * 402 0 402
+4 +1 402 402
+4 * 402
+3 * 402 0 402
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=402 0x402d74 645 
* * 5226 2412 804
+5 * 402
+3 * 402 0 402
+3 +1 402 402
+6 * 402 0 402
+3 * 402 402
+6 * 402 0 402
+3 +1 402 402
+6 * 402 0 402 1 0 0 1
+3 * 402 402
+6 * 402 0 402
+3 +2 402 0 402
+7 * 402
jump=402 +86 * 
* * 
+2 +1 81405 81405
+3 * 81405
+3 * 81405 81405
+4 * 81405
+3 * 81405
+3 * 81405 0 81405
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=81405 0x402d9a 770 
* * 895455 407025 244215
+5 * 81405 81405
+4 * 81405 81405
+5 * 81405
+4 * 81405 0 81405
+5 +1 81405 81405
+3 * 81405
+3 * 81405 81405
+4 * 81405
+3 * 81405
+3 * 81405 0 81405
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=81405 0x402dba 770 
* * 895455 407025 244215 1 0 0 1
+5 * 81405 81405
+2 * 81405
+4 * 81405 81405
+5 * 81405
+4 * 81405 0 81405
+5 -2 81405 0 81405
+4 * 81405 81405
+3 * 81405
+3 * 81405 81405
+3 * 81405 0 0 0 0 0 0 0 0 81405 403
jcnd=81003/81405 -93 +1 
* * 
-9 * 402 402 0 1 0 0 1
+3 * 402
+3 * 402 402
+3 * 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 -93 +1 
* * 
+2 +4 402 402
+3 * 402
+3 * 402
+4 * 402 402 0 1 0 0 1
+5 * 402
+4 * 402
+3 * 402 0 402
+5 +1 402 402
+3 * 402
+3 * 402
+4 * 402 402
+5 * 402
+4 * 402
+3 * 402 0 402
+5 +1 402 0 402
+7 * 402
jump=402 0x4016ee * 
* * 
+2 +1 81405 81405
+3 * 81405
+3 * 81405 81405
+4 * 81405
+3 * 81405 0 0 1 0 0 1
+3 * 81405 0 81405
cfi=(2)
cfn=(146)
calls=81405 0x402dba 770 
* * 895455 407025 244215
+5 * 81405 81405
+2 * 81405
+4 * 81405 81405
+5 * 81405 0 81405
+5 +1 81405 81405
+3 * 81405
+3 * 81405 81405
+4 * 81405
+3 * 81405
+3 * 81405 0 81405
cfi=(2)
cfn=(144)
calls=81405 0x402d9a 770 
* * 895455 407025 244215
+5 * 81405 81405
+4 * 81405 81405
+5 * 81405 0 81405
+5 +1 81405 81405
+5 * 81405 81405
+5 * 81405 81405
+5 * 81405
+4 * 81405 0 81405
+5 +1 81405 81405
+5 * 81405 81405
+5 * 81405 81405
+5 * 81405
+4 * 81405 0 81405
+5 -4 81405 0 81405
+4 * 81405 81405
+3 * 81405
+3 * 81405 81405
+3 * 81405 0 0 0 0 0 0 0 0 81405 403
jcnd=81003/81405 0x401672 +1 
* * 
-9 * 402 402 0 1 0 0 1
+3 * 402
+3 * 402 402
+3 * 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 0x401672 +1 
* * 
+6 +6 402 402 0 1 0 0 1
+5 * 402 402
+5 * 402 0 402
+5 +2 402 402
+3 +1 402 0 402
+3 * 402 402
+5 * 402 402
+1 * 402 402

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 402
+7 * 402
+7 * 402
+3 * 402
+3 * 402 0 402
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=402 0x4030b2 310 
* * 455844 133863 126849 68 24 19 68 24 19 29663 1265 1606 200
+5 * 402
+7 * 402
+7 * 402
+3 * 402
+3 * 402 0 402
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=402 0x402ff4 310 
* * 441192 131491 123623 46 13 94 46 13 94 27282 1278 1606
+5 * 402 0 0 1 0 0 1
+7 * 402
+7 * 402
+3 * 402
+3 * 402 0 402
cfn=(142)
calls=402 0x401585 -52 
* * 8492250 3754680 1960554 8 0 0 8 0 0 163614 806
+5 * 402 0 402
+8 * 402 402
+6 * 402 0 402
+6 * 402
+7 * 402
+3 * 402 0 402
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=402 0x402df4 414 
* * 107462 33944 24571 33 5 0 33 5 0 13058 96 804
+5 * 402
+7 * 402
+3 * 402 0 402 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=402 0x402e74 414 
* * 106781 33714 24411 7 1 0 7 1 0 12876 54 804
+5 +2 402
+7 * 402
+7 * 402
+3 * 402
+3 * 402 0 402
cfi=(2)
cfn=(4)
calls=402 0x4030b2 310 
* * 455280 133822 126705 2 0 1 2 0 1 29601 928 1606
+5 * 402
+7 * 402
+7 * 402
+3 * 402
+3 * 402 0 402
cfi=(2)
cfn=(80)
calls=402 0x402ff4 310 
* * 439954 131416 123438 0 0 0 0 0 0 27070 946 1606
+5 * 402 402
+6 * 402 0 0 1 0 0 1
+7 * 402
+7 * 402 0 402
+6 * 402 402
+8 * 402
+3 * 402
+3 * 402 0 402
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=402 0x401719 -33 
* * 3931158 1636944 901485 4 0 0 4 0 0 81807 403
+5 * 402 0 402
+8 * 402 402
+6 * 402 0 402
+6 * 402
+7 * 402 0 0 1 0 0 1
+3 * 402 0 402
cfi=(2)
cfn=(148)
calls=402 0x402df4 414 
* * 107462 33944 24571 0 0 0 0 0 0 13058 93 804
+5 * 402
+7 * 402
+3 * 402 0 402
cfi=(2)
cfn=(178)
calls=402 0x402e74 414 
* * 106781 33714 24411 0 0 0 0 0 0 12876 51 804
+5 +2 402 402
+7 * 402
+3 * 402 0 402
cfi=(2)
cfn=(2)
calls=402 0x402d74 645 
* * 5226 2412 804
+5 * 402 402
+6 * 402
+3 * 402
+3 * 402
+3 * 402 402
+7 * 402
+3 * 402 0 0 1 0 0 1
+3 * 402 0 402
cfi=(2)
cfn=(144)
calls=402 0x402d9a 770 
* * 4422 2010 1206
+5 * 402
+3 * 402
+7 * 402
+3 * 402
+3 * 402 0 402
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=402 0x402eda 901 
* * 38460 14329 11012 42 29 12 42 29 12 1701 81 47
+5 +1 402 402
+7 * 402
+3 * 402 0 402
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=402 0x402f54 645 
* * 5226 2412 804 0 1 0 0 1
+5 * 402 402
+6 * 402
+3 * 402
+3 * 402
+3 * 402 402
+7 * 402 0 0 1 0 0 1
+3 * 402
+3 * 402 0 402
cfi=(2)
cfn=(146)
calls=402 0x402dba 770 
* * 4422 2010 1206
+5 * 402
+3 * 402
+7 * 402
+3 * 402
+3 * 402 0 402
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=402 0x402f7a 901 
* * 37705 14094 10823 21 33 43 21 33 43 1549 69 47
+5 +1 402 402
+7 * 402
+3 * 402 0 402
cfi=(2)
cfn=(10)
calls=402 0x402f54 645 
* * 5226 2412 804
+5 * 402 402
+6 * 402
+3 * 402
+3 * 402
+3 * 402 402 0 1 0 0 1
+7 * 402
+3 * 402
+3 * 402 0 402
cfi=(2)
cfn=(146)
calls=402 0x402dba 770 
* * 4422 2010 1206
+5 * 402 402
+2 * 402
+4 * 402 402
+8 * 402 402
+8 * 402 0 402
+8 +1 402 402
+7 * 402
+3 * 402 0 402
cfi=(2)
cfn=(2)
calls=402 0x402d74 645 
* * 5226 2412 804
+5 * 402 402 0 1 0 0 1
+6 * 402
+3 * 402
+3 * 402
+3 * 402 402
+7 * 402
+3 * 402
+3 * 402 0 402
cfi=(2)
cfn=(144)
calls=402 0x402d9a 770 
* * 4422 2010 1206
+5 * 402 402
+4 * 402 402
+8 * 402
+4 * 402 402
+8 * 402
+3 * 402 0 402
+8 +2 402 0 402
+7 -12 402 402
+8 * 402 402
+7 * 402 0 0 0 0 0 0 0 0 402 1
jcnd=1/402 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 402
+7 * 402
+3 * 402 0 402
cfi=(2)
cfn=(2)
calls=402 0x402d74 645 
* * 5226 2412 804 2 0 1 2 0 1
+5 * 402
+3 * 402 402
+7 * 402
+3 * 402 0 402
cfi=(2)
cfn=(2)
calls=402 0x402d74 645 
* * 5226 2412 804 0 1 0 0 1
+5 * 402
+3 * 402 0 0 0 0 0 0 0 0 402 2
+2 * 402 0 0 1 0 0 1
+5 * 402
jump=402 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 402
+2 * 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 402 0 402
+1 * 402
+3 * 402
+4 * 402 0 402
+4 * 402 0 402
+4 * 402 0 402
+5 +1 402 402
+4 * 402
+3 * 402 0 402
cfi=(2)
cfn=(2)
calls=402 0x402d74 645 
* * 5226 2412 804
+5 * 402
+3 * 402 0 402
+3 +1 402 402 0 1 0 0 1
+6 * 402 0 402
+3 * 402 402
+6 * 402 0 402
+3 +2 402 0 402
+7 * 402
jump=402 +86 * 
* * 
+2 +1 81405 81405
+3 * 81405
+3 * 81405 81405
+4 * 81405
+3 * 81405
+3 * 81405 0 81405
cfi=(2)
cfn=(144)
calls=81405 0x402d9a 770 
* * 895455 407025 244215
+5 * 81405 81405
+4 * 81405 81405
+5 * 81405
+4 * 81405 0 81405
+5 +1 81405 81405
+3 * 81405
+3 * 81405 81405
+4 * 81405
+3 * 81405
+3 * 81405 0 81405
cfi=(2)
cfn=(146)
calls=81405 0x402dba 770 
* * 895455 407025 244215
+5 * 81405 81405
+2 * 81405
+4 * 81405 81405
+5 * 81405
+4 * 81405 0 81405
+5 -2 81405 0 81405
+4 * 81405 81405
+3 * 81405
+3 * 81405 81405
+3 * 81405 0 0 0 0 0 0 0 0 81405 403
jcnd=81003/81405 -93 +1 
* * 
-9 * 402 402 0 1 0 0 1
+3 * 402
+3 * 402 402
+3 * 402 0 0 0 0 0 0 0 0 402
jcnd=402/402 -93 +1 
* * 
+2 +4 402 402
+3 * 402
+3 * 402 0 0 1 0 0 1
+4 * 402 402
+5 * 402
+4 * 402
+3 * 402 0 402
+5 +1 402 402
+3 * 402
+3 * 402
+4 * 402 402
+5 * 402
+4 * 402
+3 * 402 0 402
+5 +1 402 402
+5 * 402 402
+5 * 402 402
+5 * 402 0 0 1 0 0 1
+4 * 402
+3 * 402 0 402
+5 +2 402 402
+3 +1 402 0 402
+3 * 402 402
+5 * 402 402
+1 * 402 402

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=804 0x404a28 -35 
* * 4824 1608 2412 1 0 1 1 0 1
+5 * 804 804
+1 * 804 804

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 804
+4 * 804
+3 * 804 0 804
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=804 0x4044cc -35 
* * 4020 1608 1608
+5 * 804 804
+1 * 804 804

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804 1 0 0 1
+4 +1 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=804 0x4049d4 -35 
* * 4824 1608 2412 1 0 0 1
+5 * 804 804
+1 * 804 804

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 804
+4 * 804
+3 * 804 0 804
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=804 0x404520 -35 
* * 4020 1608 1608
+5 * 804 804
+1 * 804 804

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 402 0 402
+1 * 402
+3 * 402
+4 * 402 0 402
+4 * 402 0 402
+4 * 402 0 402
+4 +1 402 402
+4 * 402 402
+4 * 402 402
+4 * 402
+3 * 402
+3 * 402 0 402
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=402 0x403df2 -87 
* * 9648 3216 3618 0 24 3 0 24 3 402 2
+5 * 402 402
+1 * 402 402

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 804 0 804 1 0 0 1
+1 * 804
+3 * 804 0 804
+4 * 804 804
+4 * 804 804
+1 * 804 804

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 402 0 402
+1 * 402
+3 * 402
+4 * 402 0 402
+4 * 402 0 402
+4 * 402 0 402
+4 +1 402 402
+4 * 402 402
+4 * 402 402
+4 * 402
+3 * 402
+3 * 402 0 402
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=402 0x40406a -87 
* * 9648 3216 3618 0 27 17 0 27 17 402
+5 * 402 402
+1 * 402 402

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 804 0 804
+1 * 804
+3 * 804 0 804
+4 * 804 804
+4 * 804 804
+1 * 804 804

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 884 0 884
+1 * 884
+3 * 884 0 884
+4 +1 884 884
+4 * 884 884
+1 * 884 884

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1608 0 1608 1 0 0 1
+1 * 1608
+3 * 1608 0 1608
+4 +1 1608 1608 0 1 0 0 1
+4 * 1608 1608
+1 * 1608 1608

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 884 0 884
+1 * 884
+3 * 884 0 884 0 0 1 0 0 1
+4 +1 884 884
+4 * 884 884
+1 * 884 884

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1608 0 1608 1 0 0 1
+1 * 1608
+3 * 1608
+4 * 1608 0 1608
+4 +1 1608
+4 * 1608
+3 * 1608 0 1608
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1608 0x404ffe 790 
* * 9648 4824 3216 1 0 0 1
+5 * 1608 1608
+3 * 1608 1608
+1 * 1608 1608

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1608 0 1608 1 0 0 1
+1 * 1608
+3 * 1608 0 1608
+4 +1 1608 1608
+4 * 1608 1608
+1 * 1608 1608

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1608 0 1608 1 0 0 1
+1 * 1608
+3 * 1608
+4 * 1608 0 1608
+4 +1 1608
+4 * 1608
+3 * 1608 0 1608 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1608 0x40500c 790 
* * 9648 4824 3216 1 0 0 1
+5 * 1608 1608
+3 * 1608 1608
+1 * 1608 1608

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 804 0 804
+1 * 804
+3 * 804 0 804
+4 * 804 0 804
+4 * 804 804
+4 * 804 804
+1 * 804 804

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 812 0 812 1 0 0 1
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 * 812 0 812 1 0 0 1
+4 +2 812 812
+4 * 812
+3 * 812 0 812
cfn=(28)
calls=812 0x404992 +12 
* * 4872 1624 1624 1 0 0 1
+5 * 812 812
+4 * 812
+3 * 812
+2 * 812 0 0 0 0 0 0 0 0 812
jcnd=812/812 +7 +3 
* * 
+7 +3 812 812
+4 * 812
+4 * 812
+3 * 812 0 812
cob=(5)
cfi=(8)
cfn=(32)
calls=812 0x387e4bd0b0 0 
* * 254469 39681 41642 20 25 20 20 25 20 40979 1240 812
* * 812 812 0 1 1 0 1 1 0 0 0 812
+5 +1 812 812
+1 * 812 812

fn=(102)
0x4048de 113 828 0 828 1 0 0 1
+1 * 828
+3 * 828 0 828
+4 +1 828
+10 * 828 828
+1 * 828 828

fn=(266)
0x40406a 129 402 0 402
+1 * 402
+3 * 402
+4 * 402 0 402
+4 * 402 0 402
+4 * 402 0 402
+4 +1 402 402
+4 * 402
+3 * 402
+5 * 402 0 402
cfi=(16)
cfn=(226)
calls=402 0x402d61 -20 
* * 2814 1206 1206
+5 * 402
+3 * 402 0 0 0 0 0 0 0 0 402
+2 * 402 402
+4 * 402 402 0 0 27 0 0 27
+2 * 402 0 402 0 0 17 0 0 17
+2 * 402 402
+1 * 402 402

fn=(28)
0x404992 113 828 0 828 1 0 0 1
+1 * 828
+3 * 828 0 828
+4 +1 828
+10 * 828 828
+1 * 828 828

fn=(176)
0x4044cc 86 804 0 804
+1 * 804
+3 * 804 0 804
+4 * 804 804
+1 * 804 804

fn=(224)
0x403df2 129 402 0 402
+1 * 402
+3 * 402
+4 * 402 0 402
+4 * 402 0 402
+4 * 402 0 402
+4 +1 402 402
+4 * 402
+3 * 402
+5 * 402 0 402
cfi=(16)
cfn=(226)
calls=402 0x402d61 -20 
* * 2814 1206 1206
+5 * 402
+3 * 402 0 0 0 0 0 0 0 0 402 2
+2 * 402 402
+4 * 402 402 0 0 24 0 0 24
+2 * 402 0 402 0 0 3 0 0 3
+2 * 402 402
+1 * 402 402

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 812 0 812
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 * 812 0 812
+4 +1 812 812
+4 * 812
+3 * 812 0 812
cob=(5)
cfi=(8)
cfn=(164)
calls=812 0x387e4bb2f0 0 
* * 103223 27096 14682 23 4 0 23 4 0 25509 198 812
* * 812 812 0 1 1 0 1 1 0 0 0 812
+5 * 812 812
+1 * 812 812

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 812 0 812
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 * 812 0 812
+4 +1 812 812
+4 * 812
+3 * 812 0 812
cob=(5)
cfi=(8)
cfn=(164)
calls=812 0x387e4bb2f0 0 
* * 101884 26646 14366 2 1 0 2 1 0 25150 113 812
* * 812 812 0 0 0 0 0 0 0 0 0 812
+5 * 812 812
+1 * 812 812

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 812 0 812 1 0 0 1
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 * 812 0 812
+4 +2 812 812
+4 * 812
+3 * 812 0 812
cfn=(102)
calls=812 0x4048de +12 
* * 4872 1624 1624 1 0 0 1
+5 * 812 812
+4 * 812 0 0 1 0 0 1
+3 * 812
+2 * 812 0 0 0 0 0 0 0 0 812
jcnd=812/812 +7 +3 
* * 
+7 +3 812 812
+4 * 812
+4 * 812
+3 * 812 0 812
cob=(5)
cfi=(8)
cfn=(32)
calls=812 0x387e4bd0b0 0 
* * 225269 35148 35342 35 18 42 35 18 42 36224 1306 812
* * 812 812 0 0 0 0 0 0 0 0 0 812
+5 +1 812 812
+1 * 812 812

fn=(18)
0x404a28 81 804 0 804 1 0 0 1
+1 * 804
+3 * 804 0 804 0 0 1 0 0 1
+4 * 804 0 804
+4 * 804 804
+1 * 804 804

fn=(92)
0x4049d4 81 804 0 804 1 0 0 1
+1 * 804
+3 * 804 0 804
+4 * 804 0 804
+4 * 804 804
+1 * 804 804

fn=(196)
0x404520 86 804 0 804
+1 * 804
+3 * 804 0 804
+4 * 804 804
+1 * 804 804

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 17 2 0 17 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 17 1 0 17 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +10 804 804
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=804 0x404829 -26 
* * 429848 144740 139920 25 3 4 25 3 4 17056 1002 1604 200
+5 +1 804 804
+1 * 804 804

fn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 17 2 0 17 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804 1 0 0 1
cfn=(50)
calls=804 0x404484 107 
* * 441104 148760 143940 25 3 4 25 3 4 17056 1002 1604 200
+5 * 804 804
+1 * 804 804

fn=(230)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52)
0x404829 91 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804 0 1 0 0 1
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=804 0x404a36 450 
* * 418592 140720 135900 24 3 4 24 3 4 17056 1002 1604 200
+5 * 804 804
+1 * 804 804

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=804 0x40439c 107 
* * 441104 148760 143940 7 0 58 7 0 58 17056 974 1604
+5 * 804 804
+1 * 804 804

fn=(116)
0x40439c 107 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +10 804 804
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=804 0x4047d7 -26 
* * 429848 144740 139920 7 0 58 7 0 58 17056 974 1604
+5 +1 804 804
+1 * 804 804

fn=(118)
0x4047d7 91 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=804 0x4049e2 450 
* * 418592 140720 135900 7 0 58 7 0 58 17056 974 1604
+5 * 804 804
+1 * 804 804

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 17 2 0 17 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(2)
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 812 0 812 1 0 0 1
+1 * 812 0 0 1 0 0 1
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 0 812 812
+5 0 812 0 0 0 0 0 0 0 0 812
+2 0 812 812
+4 0 812 812
+4 0 812
+5 0 812
+3 0 812
+3 0 812 0 812
fi=(6) ???
cfi=(5)
cfn=(100)
calls=812 0x40461a 99 
* 0 246381 41644 41838 38 18 42 38 18 42 37036 1306 1624
+5 0 812
fi=(6)
jump=812 +7 0 
* 0 
+7 0 812 812
+1 0 812 812

fn=(144)
0x402d9a 770 245019 0 245019
+1 * 245019
+3 * 245019 0 245019
+4 * 245019 0 245019
+4 +1 245019 245019
+4 * 245019 245019
+3 * 245019 245019
+4 * 245019
+4 * 245019
+3 * 245019 245019
+1 * 245019 245019

fn=(146)
0x402dba 770 245019 0 245019
+1 * 245019
+3 * 245019 0 245019 1 0 0 1
+4 * 245019 0 245019
+4 +1 245019 245019
+4 * 245019 245019
+3 * 245019 245019
+4 * 245019
+4 * 245019
+3 * 245019 245019
+1 * 245019 245019

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 804
+4 * 804
+3 * 804 0 804
cfi=(4)
cfn=(194)
calls=804 0x403d7e +42 
* * 11256 4020 4020 1 0 0 1
+5 * 804 804
+1 * 804 804

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 804 0 804 1 0 0 1
+1 * 804
+3 * 804 0 804
+1 * 804
+4 * 804 0 804
+4 +2 804 804
+4 * 804 804
+4 * 804
+3 * 804 804
+4 * 804 804
+3 * 804
+3 * 804
+3 * 804
+4 * 804
+3 * 804 804
+4 * 804 804
+3 -1 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=804 0x403d98 +11 
* * 123514 34464 22290 1 1 0 1 1 0 25752 105 1608
+5 +1 804 804
+4 * 804
+3 * 804 0 804
cfn=(192)
calls=804 0x403296 -82 
* * 18492 6432 6432 1 0 0 1
+5 * 804
jump=804 +28 * 
* * 
+28 * 804
+4 * 804 804
+1 * 804 804
+1 * 804 804

fn=(2)
0x402d74 645 3248 0 3248 1 0 0 1
+1 * 3248
+3 * 3248 0 3248 0 0 1 0 0 1
+4 +1 3248 3248
+4 * 3248 3248 0 1 1 0 1 1
+4 * 3248
+3 * 3248 3248
+4 * 3248 3248
+3 * 3248
+3 * 3248
+3 * 3248
+4 * 3248 3248
+1 * 3248 3248

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=804 0x404236 -14 
* * 285904 49781 50922 26 20 11 26 20 11 42208 1191 1608
+5 * 804 804
+4 * 804 0 804
+3 +1 804 804
+4 * 804 804 0 1 0 0 1
+3 * 804 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+3 * 804 804
+4 * 804
+4 * 804
+3 * 804 804
+4 * 804 0 804
+4 +1 804 804
+1 * 804 804

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804
+4 * 804 804 0 1 0 0 1
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(96)
calls=804 0x403fbe -14 
* * 255926 45003 44429 24 13 36 24 13 36 37296 1250 1608
+5 * 804 804
+4 * 804 0 804
+3 +1 804 804
+4 * 804 804
+3 * 804 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+3 * 804 804
+4 * 804
+4 * 804
+3 * 804 804
+4 * 804 0 804
+4 +1 804 804
+1 * 804 804

fn=(244)
0x402f7a 901 402 0 402
+1 * 402
+3 * 402 0 0 1 0 0 1
+4 * 402 0 402
+4 * 402 0 402
+4 +2 402 402
+4 * 402 402
+4 * 402 402
+4 * 402 402
+4 * 402
+3 * 402 0 0 0 0 0 0 0 0 402
jcnd=8/402 +51 +10 
* * 
+2 +3 394 394
+4 * 394 394
+4 * 394 394
+4 -1 394 394
+4 * 394
+3 * 394
+3 * 394 0 394
cfi=(3)
cfn=(264)
calls=394 0x4036b1 215 
* * 14972 5122 5516 0 26 13 0 26 13 394
+5 +2 394 394
+4 * 394 394
+4 * 394
+4 * 394 394
+4 * 394 0 394
+4 * 394
jump=394 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12129 3706 3241 20 7 30 20 7 30 753 69 47
+5 +2 402 402
+1 * 402 402

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1632 0 1632 1 0 0 1
+1 * 1632
+3 * 1632 0 1632 1 0 0 1
+4 +1 1632 1632
+4 * 1632 1632
+1 * 1632 1632

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+3 * 804 0 804
+4 * 804
+4 * 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=804 0x404380 726 
* * 8040 4020 3216
+5 * 804 804
+4 * 804 804
+1 * 804 804

fn=(148)
0x402df4 414 804 0 804
+1 * 804
+3 * 804 0 804
+1 * 804
+4 * 804 0 804 1 0 0 1
+4 +2 804 804
+4 * 804
+3 * 804 0 804
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=804 0x40325e 113 
* * 4824 2412 1608
+5 * 804
+3 * 804 804
+4 * 804 804
+4 * 804 804
+4 * 804 804
+3 -1 804
+3 * 804
+3 * 804 0 804
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=804 0x40326c 148 
* * 24924 8040 9648 4 0 0 4
+5 +1 804 804
+4 * 804
+3 * 804 0 804
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=804 0x4031ec 159 
* * 165880 50200 33062 27 5 0 27 5 0 26116 189 1608
+5 * 804
jump=804 +28 * 
* * 
+28 * 804 0 0 1 0 0 1
+4 * 804 804
+1 * 804 804
+1 * 804 804

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 812 0 812 1 0 0 1
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 * 812 0 812
+4 +2 812 812
+5 * 812 0 0 0 0 0 0 0 0 812
+2 +1 812 812
+4 * 812 812
+4 * 812 812
+4 * 812
+3 * 812
+3 * 812 0 812
cfi=(5)
cfn=(160)
calls=812 0x4044d6 -65 
* * 112967 30344 18742 24 5 0 24 5 0 25509 198 1624
+5 +1 812 812
+1 * 812 812

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 804 0 804
+1 * 804
+3 * 804 0 804
+1 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=804 0x4043ca -45 
* * 28944 10452 11256 4 0 4 4 0 4
+5 +1 804 804 0 1 0 0 1
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(20)
calls=804 0x404412 +43 
* * 306004 59429 56550 27 20 11 27 20 11 42208 1191 1608
+5 * 804
jump=804 +28 * 
* * 
+28 * 804
+4 * 804 804
+1 * 804 804
+1 * 804 804

fn=(14)
0x4043ca 90 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804 0 0 1 0 0 1
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(4)
cfn=(16)
calls=804 0x404804 +24 
* * 14472 4824 5628 2 0 1 2 0 1
+5 * 804 804
+4 * 804 0 804 0 0 2 0 0 2
+7 * 804 804
+4 * 804 0 804 1 0 0 1
+8 * 804 804
+4 * 804 0 804
+8 +1 804 804
+1 * 804 804

fn=(80)
0x402ff4 310 804 0 804 1 0 0 1
+1 * 804
+3 * 804 0 804
+2 * 804 0 804
+2 * 804 0 804
+1 * 804 0 0 1 0 0 1
+4 * 804 0 804
+4 * 804 0 804
+4 +2 804 804
+4 * 804
+3 * 804 0 804
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=804 0x4039fc 117 
* * 4824 2412 1608 2 0 0 2
+5 * 804
+3 * 804 0 804
cfi=(3)
cfn=(84)
calls=804 0x4039ed -88 
* * 4824 2412 1608
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(2)
calls=804 0x402d74 645 
* * 10452 4824 1608
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804
+3 * 804
+3 * 804 0 804 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=804 0x403a0a 134 
* * 322658 70731 66941 31 13 36 31 13 36 37296 1250 1608
+5 +4 804 804
+4 * 804
+3 * 804 0 804
cfn=(106)
calls=804 0x40325e 113 
* * 4824 2412 1608 1 0 0 1
+5 * 804
+3 * 804 804
+4 * 804 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=804 0x403a98 565 
* * 20100 8040 6432 2 0 0 2
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(112)
calls=804 0x403a68 547 
* * 20100 8040 6432
+5 * 804
+3 * 804
+3 * 804
+3 * 804
+3 * 804 0 804
cfi=(11)
cfn=(114)
calls=804 0x403ac9 -60 
* * 453164 152780 148764 7 0 58 7 0 58 17056 974 1604
+5 -3 804 804
+4 * 804 0 804
+4 * 804
jump=804 +28 +4 
* * 
+28 +4 804
+4 * 804 804
+1 * 804 804
+2 * 804 804
+2 * 804 804
+1 * 804 804

fn=(188)
0x403d98 171 812 0 812 1 0 0 1
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 * 812 0 812
+4 +2 812 812
+5 * 812 0 0 0 0 0 0 0 0 812 8
+2 +1 812 812
+4 * 812 812
+4 * 812 812
+4 * 812
+3 * 812
+3 * 812 0 812
cfi=(5)
cfn=(190)
calls=812 0x40452a -65 
* * 111628 29894 18426 2 1 0 2 1 0 25150 113 1624
+5 +1 812 812
+1 * 812 812

fn=(22)
0x404236 167 812 0 812 1 0 0 1
+1 * 812
+3 * 812
+4 * 812 0 812 1 0 0 1
+4 * 812 0 812
+4 0 812 812
+5 0 812 0 0 0 0 0 0 0 0 812
+2 0 812 812
+4 0 812 812
+4 0 812
+5 0 812
+3 0 812
+3 0 812 0 812
fi=(6)
cfi=(5)
cfn=(26)
calls=812 0x404730 99 
* 0 275581 46177 48138 24 26 20 24 26 20 41791 1240 1624
+5 0 812
fi=(6)
jump=812 +7 0 
* 0 
+7 0 812 812
+1 0 812 812

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+4 * 804 0 804
+4 * 804
+4 * 804 0 0 1 0 0 1
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=804 0x404468 726 
* * 8040 4020 3216 1 0 0 1
+5 * 804 804
+4 * 804 804
+1 * 804 804

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+3 * 804 0 804
+4 * 804
+4 * 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(10)
cfn=(44)
calls=804 0x404468 726 
* * 8040 4020 3216
+5 * 804 804
+4 * 804 804
+1 * 804 804

fn=(86)
0x403a0a 134 804 0 804
+1 * 804
+3 * 804 0 804
+1 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=804 0x4042e2 -45 
* * 28944 10452 11256 5 0 0 5
+5 +1 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804 1 0 0 1
cfn=(94)
calls=804 0x40432a +43 
* * 276026 54651 50057 25 13 36 25 13 36 37296 1250 1608
+5 * 804
jump=804 +28 * 
* * 
+28 * 804
+4 * 804 804
+1 * 804 804
+1 * 804 804

fn=(88)
0x4042e2 90 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804 1 0 0 1
cfi=(4)
cfn=(90)
calls=804 0x4047b2 +24 
* * 14472 4824 5628 3 0 0 3
+5 * 804 804
+4 * 804 0 804
+7 * 804 804
+4 * 804 0 804
+8 * 804 804
+4 * 804 0 804
+8 +1 804 804
+1 * 804 804

fn=(156)
0x4031ec 159 804 0 804 1 0 0 1
+1 * 804
+3 * 804 0 804
+1 * 804
+4 * 804 0 804
+4 +2 804 804
+4 * 804 804 0 1 0 0 1
+4 * 804
+3 * 804 804
+4 * 804 804
+3 * 804
+3 * 804
+3 * 804
+4 * 804
+3 * 804 804
+4 * 804 804
+3 -1 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(158)
calls=804 0x403ce6 +11 
* * 124876 34924 22610 24 5 0 24 5 0 26116 189 1608
+5 +1 804 804
+4 * 804
+3 * 804 0 804
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=804 0x4031b8 -82 
* * 18492 6432 6432 1 0 0 1
+5 * 804
jump=804 +28 * 
* * 
+28 * 804
+4 * 804 804
+1 * 804 804
+1 * 804 804

fn=(172)
0x4031b8 79 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 804
+4 * 804
+3 * 804 0 804
cfi=(4)
cfn=(174)
calls=804 0x403ccc +42 
* * 11256 4020 4020
+5 * 804 804
+1 * 804 804

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1640 0 1640 1 0 0 1
+1 * 1640
+3 * 1640 0 1640
+4 +1 1640 1640
+4 * 1640 1640 0 0 2 0 0 2
+4 * 1640
+3 * 1640 1640
+4 * 1640 1640
+3 * 1640
+3 * 1640
+3 * 1640
+4 * 1640 1640
+1 * 1640 1640

fn=(106)
0x40325e 113 1632 0 1632 1 0 0 1
+1 * 1632
+3 * 1632 0 1632
+4 +1 1632 1632
+4 * 1632 1632
+1 * 1632 1632

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 820 0 820 1 0 0 1
+1 * 820
+3 * 820 0 820 0 0 1 0 0 1
+4 +1 820 820
+4 * 820 820
+1 * 820 820

fn=(82)
0x4039fc 117 820 0 820 1 0 0 1
+1 * 820
+3 * 820 0 820 1 0 0 1
+4 +1 820 820
+4 * 820 820
+1 * 820 820

fn=(200)
0x402eda 901 402 0 402
+1 * 402
+3 * 402
+4 * 402 0 402
+4 * 402 0 402
+4 +2 402 402
+4 * 402 402
+4 * 402 402
+4 * 402 402
+4 * 402
+3 * 402 0 0 0 0 0 0 0 0 402 8
jcnd=8/402 +51 +10 
* * 
+2 +3 394 394
+4 * 394 394
+4 * 394 394
+4 -1 394 394
+4 * 394
+3 * 394
+3 * 394 0 394
cfi=(3)
cfn=(222)
calls=394 0x403373 215 
* * 14972 5122 5516 0 24 2 0 24 2 394 2
+5 +2 394 394
+4 * 394 394
+4 * 394
+4 * 394 394
+4 * 394 0 394
+4 * 394
jump=394 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12884 3941 3430 39 5 10 39 5 10 905 71 47
+5 +2 402 402
+1 * 402 402

fn=(4)
0x4030b2 310 804 0 804 1 0 0 1
+1 * 804
+3 * 804 0 804
+2 * 804 0 804
+2 * 804 0 804
+1 * 804
+4 * 804 0 804 1 0 0 1
+4 * 804 0 804
+4 +2 804 804
+4 * 804
+3 * 804 0 804
cfn=(6)
calls=804 0x403b08 117 
* * 4824 2412 1608 1 0 1 1 0 1
+5 * 804
+3 * 804 0 804
cfi=(3)
cfn=(8)
calls=804 0x403afa -88 
* * 4824 2412 1608 1 0 0 1
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(10)
calls=804 0x402f54 645 
* * 10452 4824 1608 1 1 0 1 1
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804
+3 * 804
+3 * 804 0 804
cfn=(12)
calls=804 0x403b16 134 
* * 352636 75509 73434 32 20 15 32 20 15 42208 1191 1608
+5 +4 804 804 0 1 0 0 1
+4 * 804
+3 * 804 0 804
cfn=(40)
calls=804 0x40333c 113 
* * 4824 2412 1608 2 0 0 2
+5 * 804
+3 * 804 804
+4 * 804 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(42)
calls=804 0x403ba4 565 
* * 20100 8040 6432 3 0 0 3
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(46)
calls=804 0x403b74 547 
* * 20100 8040 6432
+5 * 804
+3 * 804
+3 * 804
+3 * 804
+3 * 804 0 804 1 0 0 1
cfi=(11)
cfn=(48)
calls=804 0x403bd5 -60 
* * 453164 152780 148764 26 3 4 26 3 4 17056 1002 1604 200
+5 -3 804 804
+4 * 804 0 804
+4 * 804
jump=804 +28 +4 
* * 
+28 +4 804
+4 * 804 804
+1 * 804 804
+2 * 804 804
+2 * 804 804
+1 * 804 804

fn=(108)
0x403a98 565 804 0 804 1 0 0 1
+1 * 804
+3 * 804
+4 * 804 0 804
+4 +1 804 804
+4 * 804 804
+4 * 804 0 804
+4 * 804
+4 * 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfi=(10)
cfn=(110)
calls=804 0x404380 726 
* * 8040 4020 3216 1 0 0 1
+5 * 804 804
+4 * 804 804
+1 * 804 804

fn=(178)
0x402e74 414 804 0 804
+1 * 804
+3 * 804 0 804
+1 * 804
+4 * 804 0 804 1 0 0 1
+4 +2 804 804
+4 * 804
+3 * 804 0 804
cfn=(40)
calls=804 0x40333c 113 
* * 4824 2412 1608
+5 * 804
+3 * 804 804
+4 * 804 804
+4 * 804 804
+4 * 804 804
+3 -1 804
+3 * 804
+3 * 804 0 804
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=804 0x40334a 148 
* * 24924 8040 9648 2 0 0 2
+5 +1 804 804
+4 * 804
+3 * 804 0 804
cfn=(186)
calls=804 0x4032ca 159 
* * 164518 49740 32742 3 1 0 3 1 0 25752 105 1608
+5 * 804
jump=804 +28 * 
* * 
+28 * 804 0 0 1 0 0 1
+4 * 804 804
+1 * 804 804
+1 * 804 804

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(54)
0x404a36 450 804 0 804
+1 * 804
+3 * 804 0 804
+1 * 804
+4 * 804 0 804 1 0 0 1
+4 * 804 0 804
+4 * 804 0 804
+4 +10 804 804
+4 * 804
+3 * 804 0 804
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=804 0x404c38 288 
* * 12060 4824 4020 3 0 0 3
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(56)
calls=804 0x404c38 288 
* * 12060 4824 4020
+5 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=804 0x404c52 -36 
* * 376784 126248 121428 20 3 4 20 3 4 17056 1002 1604 200
+5 +1 804
+4 * 804 804
+1 * 804 804
+1 * 804 804

fn=(60)
0x404c52 424 804 0 804
+1 * 804
+3 * 804 0 804
+2 * 804 0 804
+1 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +4 804 804
+4 * 804
+3 * 804 0 804
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=804 0x40492d 277 
* * 12060 4824 4020 2 0 0 2
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=804 0x404d9d 277 
* * 20100 7236 6432 2 0 1 2 0 1
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(66)
calls=804 0x404d9d 277 
* * 20100 7236 6432
+5 * 804
+3 * 804
+3 * 804
+3 * 804 0 804
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=804 0x404db7 -49 
* * 302012 101324 96504 15 3 3 15 3 3 17056 1002 1604 200
+5 +1 804
+4 * 804 804
+1 * 804 804
+2 * 804 804
+1 * 804 804

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 17 0 0 17 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 852 0 852 1 0 0 1
+1 * 852
+3 * 852
+4 * 852 0 852
+4 +1 852 852
+4 * 852
+3 * 852 0 852 1 0 0 1
cfi=(13)
cfn=(64)
calls=852 -33 -66 
* * 5112 2556 1704
+5 * 852 852
+1 * 852 852

fn=(66)
0x404d9d 277 1608 0 1608
+1 * 1608
+3 * 1608
+4 * 1608 0 1608
+4 +1 1608 1608
+4 * 1608
+3 * 1608 0 1608
cfi=(13)
cfn=(68)
calls=1608 0x404f1a -58 
* * 25728 9648 8040 2 0 1 2 0 1
+5 * 1608 1608
+1 * 1608 1608

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 17 0 0 17 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 804 0 804
+1 * 804
+3 * 804 0 804
+1 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +10 804 804
+4 * 804
+3 * 804 0 804
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=804 0x404bc6 288 
* * 12060 4824 4020 3 0 0 3
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(122)
calls=804 0x404bc6 288 
* * 12060 4824 4020
+5 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=804 0x404be0 -36 
* * 376784 126248 121428 4 0 58 4 0 58 17056 974 1604
+5 +1 804
+4 * 804 804
+1 * 804 804
+1 * 804 804

fn=(128)
0x404878 277 852 0 852
+1 * 852
+3 * 852
+4 * 852 0 852 1 0 0 1
+4 +1 852 852
+4 * 852
+3 * 852 0 852
cfi=(13)
cfn=(130)
calls=852 -33 -66 
* * 5112 2556 1704 0 0 1 0 0 1
+5 * 852 852
+1 * 852 852

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1608 0 1608
+1 * 1608
+3 * 1608
+4 * 1608 0 1608
+4 +1 1608 1608
+4 * 1608
+3 * 1608 0 1608
cfi=(13)
cfn=(134)
calls=1608 0x404e98 -58 
* * 25728 9648 8040 2 0 0 2
+5 * 1608 1608
+1 * 1608 1608

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +8 804 0 804
+4 +3 804 804
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=804 0x404eb5 -22 
* * 289952 97304 91680 1 0 58 1 0 58 17056 974 1604
+5 +1 804 804
+1 * 804 804

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 17 1 0 17 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1608 0 1608 1 0 0 1
+1 * 1608
+3 * 1608
+4 * 1608 0 1608
+4 +1 1608 1608
+4 * 1608
+3 * 1608 0 1608
cfi=(13)
cfn=(124)
calls=1608 0x404d36 -77 
* * 9648 4824 3216 2 0 0 2
+5 * 1608 1608
+1 * 1608 1608

fn=(56)
0x404c38 288 1608 0 1608 1 0 0 1
+1 * 1608
+3 * 1608
+4 * 1608 0 1608 1 0 0 1
+4 +1 1608 1608
+4 * 1608
+3 * 1608 0 1608
cfi=(13)
cfn=(58)
calls=1608 0x404d8f -77 
* * 9648 4824 3216 1 0 0 1
+5 * 1608 1608
+1 * 1608 1608

fn=(74)
0x404f37 368 820 0 820
+1 * 820
+3 * 820
+4 * 820 0 820 1 0 0 1
+4 * 820 0 820
+4 * 820 0 820
+4 +2 820 820
+4 * 820 820
+4 * 820
+3 * 820
+3 * 820
+4 * 820 0 820
+4 +1 820 820
+5 * 820 0 0 0 0 0 0 0 0 820
jcnd=8/820 +33 +2 
* * 
+2 +1 812 812
+4 * 812
+8 * 812 812
+4 * 812 812
+4 * 812
+3 * 812 0 0 1 0 0 1
+3 * 812 0 812 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=812 0x3877c83840 0 
* * 268562 88776 87157 11 2 19 11 2 19 16336 1006 807 200
* * 812 812 0 1 1 0 1 1 0 0 0 812
+5 +1 820 820
+4 * 820
+8 * 820 820
+4 * 820
+3 +1 820 820
+1 * 820 820

fn=(140)
0x404eb5 368 820 0 820
+1 * 820
+3 * 820
+4 * 820 0 820 1 0 0 1
+4 * 820 0 820
+4 * 820 0 820 0 0 1 0 0 1
+4 +2 820 820
+4 * 820 820
+4 * 820
+3 * 820
+3 * 820
+4 * 820 0 820
+4 +1 820 820
+5 * 820 0 0 0 0 0 0 0 0 820
jcnd=8/820 +33 +2 
* * 
+2 +1 812 812
+4 * 812
+8 * 812 812
+4 * 812 812
+4 * 812
+3 * 812
+3 * 812 0 812
cob=(2)
cfi=(9)
cfn=(78)
calls=812 0x3877c83840 0 
* * 268562 88776 87157 0 0 59 0 0 59 16336 980 807
* * 812 812 0 0 0 0 0 0 0 0 0 812
+5 +1 820 820
+4 * 820
+8 * 820 820
+4 * 820
+3 +1 820 820
+1 * 820 820

fn=(72)
0x404db7 379 804 0 804
+1 * 804
+3 * 804
+4 * 804 0 804 1 0 0 1
+4 * 804 0 804
+4 * 804 0 804
+4 +8 804 0 804
+4 +3 804 804
+4 * 804 804
+4 * 804 804
+4 * 804
+3 * 804
+3 * 804 0 804
cfn=(74)
calls=804 0x404f37 -22 
* * 289952 97304 91680 14 3 3 14 3 3 17056 1002 1604 200
+5 +1 804 804
+1 * 804 804

fn=(126)
0x404be0 424 804 0 804
+1 * 804
+3 * 804 0 804
+2 * 804 0 804
+1 * 804
+4 * 804 0 804
+4 * 804 0 804
+4 * 804 0 804
+4 +4 804 804
+4 * 804
+3 * 804 0 804
cfn=(128)
calls=804 0x404878 277 
* * 12060 4824 4020 1 0 0 1
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(132)
calls=804 0x404d44 277 
* * 20100 7236 6432 2 0 0 2
+5 * 804
+3 * 804 804
+4 * 804
+3 * 804 0 804
cfn=(132)
calls=804 0x404d44 277 
* * 20100 7236 6432
+5 * 804
+3 * 804
+3 * 804
+3 * 804 0 804
cfn=(138)
calls=804 0x404d5e -49 
* * 302012 101324 96504 1 0 58 1 0 58 17056 974 1604
+5 +1 804
+4 * 804 804
+1 * 804 804
+2 * 804 804
+1 * 804 804

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1608 0 1608 1 0 0 1
+1 * 1608
+3 * 1608 0 1608
+4 +1 1608 1608
+4 * 1608 1608
+1 * 1608 1608

fn=(110)
0x404380 726 1608 0 1608 1 0 0 1
+1 * 1608
+3 * 1608 0 1608
+4 * 1608 0 1608
+4 * 1608 1608
+4 * 1608 1608
+3 * 1608 1608
+4 * 1608 0 1608
+3 * 1608 1608
+1 * 1608 1608

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1608 0 1608 1 0 0 1
+1 * 1608
+3 * 1608 0 1608
+4 +1 1608 1608
+4 * 1608 1608
+1 * 1608 1608

fn=(44)
0x404468 726 1608 0 1608
+1 * 1608
+3 * 1608 0 1608
+4 * 1608 0 1608
+4 * 1608 1608
+4 * 1608 1608
+3 * 1608 1608
+4 * 1608 0 1608 1 0 0 1
+3 * 1608 1608
+1 * 1608 1608

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262)
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 812 0 812 1 0 0 1
+1 * 812
+3 * 812 0 812
+4 * 812 0 812 1 0 0 1
+4 * 812 812
+1 * 812 812

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 812 0 812 1 0 0 1
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 +4 812 812
+4 * 812 812
+4 * 812
+3 * 812
+3 * 812 0 812
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=812 0x40454c -14 
* * 4872 1624 2436 1 0 0 1
+5 +2 812 812
+1 * 812 812

fn=(150)
0x40326c 148 812 0 812
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 * 812 0 812
+4 +3 812 812 0 1 0 0 1
+4 * 812 812
+4 * 812
+3 * 812
+3 * 812 0 812
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=812 0x403d1a -29 
* * 14616 4872 5684 3 0 0 3
+5 +1 812 812
+1 * 812 812

fn=(180)
0x40334a 148 812 0 812
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 * 812 0 812
+4 +3 812 812
+4 * 812 812
+4 * 812
+3 * 812
+3 * 812 0 812
cfn=(182)
calls=812 0x403dcc -29 
* * 14616 4872 5684 2 0 0 2
+5 +1 812 812
+1 * 812 812

fn=(152)
0x403d1a 122 812 0 812 1 0 0 1
+1 * 812
+3 * 812
+4 * 812 0 812
+4 * 812 0 812
+4 +4 812 812
+4 * 812 812
+4 * 812
+3 * 812
+3 * 812 0 812
cfn=(154)
calls=812 0x4044f8 -14 
* * 4872 1624 2436 2 0 0 2
+5 +2 812 812
+1 * 812 812

fn=(184)
0x40454c 112 812 0 812 1 0 0 1
+1 * 812
+3 * 812 0 812
+4 * 812 0 812
+4 * 812 812
+1 * 812 812

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2669 456 464 0 6 9 0 6 9 395 49 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 17 3 0 17 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1106 302 196 2 0 0 2 0 0 210 16 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3447 701 657 16 5 6 16 5 6 552 56 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 0 1 0 0 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1083 292 192 1 0 0 1 0 0 205 9 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1624 0 1624 1 0 0 1
+5 0 1624 0 1624
+5 0 1624
+3 0 1624 0 1624
+5 0 1624
+4 0 1624 1624 0 0 1 0 0 1
+7 0 1624 1624 0 0 1 0 0 1
+3 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624 2
+6 0 1624 1624 0 0 1 0 0 1
+7 0 1624 1624 0 1 1 0 1 1
+4 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624
+2 0 1624 1624 0 0 1 0 0 1
+3 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624
jcnd=1624/1624 +97 0 
* 0 
+18 0 1624
+3 0 1624
+3 0 1624 0 1624
cfn=(38) _int_malloc
calls=1624 0x3877c79a00 0 
* 0 385546 50469 62368 47 36 61 47 36 61 59339 2493
+5 0 1624
+3 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624
+2 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624
+2 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624 21
+2 0 1624 1624
+7 0 1624 0 0 0 0 0 0 0 0 1624
jcnd=1624/1624 +13 0 
* 0 
+13 0 1624 0 1624
+2 0 1624 0 0 0 0 0 0 0 0 1624 30
+6 0 1624
+3 0 1624 1624
+4 0 1624 1624
+5 0 1624 1624
+5 0 1624
+4 0 1624 1624
+1 0 1624 0 0 1 0 0 1
+5 0 1624 1624 0 0 1 0 0 1
+7 0 1624 0 0 0 0 0 0 0 0 1624
jcnd=1624/1624 +14 0 
* 0 
+14 0 1624 0 1624 1 0 0 1
+3 0 1624 0 0 0 0 0 0 0 0 1624
+6 0 1624
jump=1624 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1624 0 1624 1 0 0 1
+2 0 1624
+3 0 1624
+3 0 1624 0 1624
+2 0 1624
+3 0 1624 0 1624
+1 0 1624
+3 0 1624 0 1624
+1 0 1624
+3 0 1624
+4 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624
+6 0 1624
+4 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624 7
jcnd=10/1624 0x3877c838d1 0 
* 0 
+2 0 1614
+3 0 1614
+3 0 1614
+3 0 1614
+3 0 1614
+3 0 1614 0 0 0 0 0 0 0 0 1614
jcnd=1614/1614 +41 0 
* 0 
+41 0 1614 0 0 1 0 0 1
+3 0 1614 0 0 0 0 0 0 0 0 1614
jcnd=1614/1614 0x3877c839c0 0 
* 0 
+24 0 1614
+3 0 1614
+4 0 1614
+3 0 1614
+3 0 1614
+3 0 1614
+3 0 1614
+3 0 1614 0 0 0 0 0 0 0 0 1614 823
jcnd=814/1614 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 810
+10 0 810 810 0 0 1 0 0 1
+3 0 810
+4 0 810 0 810
+3 0 810
+4 0 810
+4 0 810 0 0 0 0 0 0 0 0 810
jcnd=810/810 -18 0 
* 0 
-18 0 2486 2486
+3 0 2486
+4 0 2486 0 2486
+3 0 2486
+4 0 2486
+4 0 2486 0 0 0 0 0 0 0 0 2486 11
jcnd=1676/2486 -18 0 
* 0 
+2 0 1624
+4 0 1624
+3 0 1624 1624
+1 0 1624 1624
+1 0 1624 1624
+2 0 1624 1624 0 1 0 0 1
+2 0 1624 1624
0x3877c839c0 0 1614 0 0 1 0 0 1
+3 0 1614
+3 0 1614
+3 0 1614
+4 0 1614 0 1614 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1614 0x3877c89b20 0 
* 0 445282 166136 162908 6 1 77 6 1 77 21276 1145 1614 200
+5 0 1614
jump=1614 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1624 1624 0 1 1 0 1 1
+7 0 1624 1624 0 0 1 0 0 1
+3 0 1624
+3 0 1624 0 0 1 0 0 1 0 0 1624
+6 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624
+6 0 1624 1624
+4 0 1624
+4 0 1624
+2 0 1624 0 0 0 0 0 0 0 0 1624
+2 0 1624
+2 0 1624
+7 0 1624 0 0 0 0 0 0 0 0 1624
jcnd=1624/1624 +14 0 
* 0 
+14 0 1624
+2 0 1624
cfn=(170) _int_free
calls=1624 0x3877c78650 0 
* 0 174251 47246 29048 21 2 0 21 2 0 42539 311

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 2
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 7 7
+5 0 7
+3 0 7 7
+5 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+9 0 7 0 7
+4 0 7 0 7
+4 0 7 0 0 0 0 0 0 0 0 7 3
jcnd=7/7 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=16/20 +18 0 
* 0 
+2 0 4 0 4
+8 0 4 0 4
+8 0 4
+3 0 4 0 4
+4 0 4 0 4
+4 0 4
+4 0 4 0 4
+4 0 4 0 4
+4 0 4
+3 0 4
+3 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=2/4 0x3877c75f78 0 
* 0 
-29 0 16
+3 0 16 0 16
+4 0 16 0 16
+4 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 6
jcnd=5/16 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=10/13 +15 0 
* 0 
+2 0 3 3
+4 0 3
+3 0 3 0 0 0 0 0 0 0 0 3
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 9
jcnd=7/20 0x3877c75e68 0 
* 0 
+6 0 13 0 13
+6 0 13
jump=13 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1624 0 1624 1 0 0 1
+2 0 1624 0 1624
+2 0 1624 0 1624
+2 0 1624
+3 0 1624 0 1624
+2 0 1624 0 1624
+1 0 1624 0 1624
+1 0 1624
+3 0 1624
+4 0 1624 1624
+4 0 1624 0 1624
+4 0 1624
+3 0 1624
+4 0 1624
+3 0 1624
+3 0 1624
+3 0 1624 0 0 1 0 0 1 0 0 1624
+6 0 1624
+4 0 1624 0 0 0 0 0 0 0 0 1624
+6 0 1624
+4 0 1624 0 0 0 0 0 0 0 0 1624
+6 0 1624 1624
+7 0 1624 0 0 0 0 0 0 0 0 1624 4
jcnd=1500/1624 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1500
+2 0 1500 0 0 0 0 0 0 0 0 1500
+6 0 1500 1500 0 1 0 0 1
+4 0 1500
+3 0 1500
+2 0 1500 0 0 0 0 0 0 0 0 1500
jcnd=1500/1500 0x3877c78a40 0 
* 0 
+6 0 1500 1500
+4 0 1500
+3 0 1500 0 0 0 0 0 0 0 0 1500
+6 0 1500 1500
+5 0 1500
+4 0 1500 0 0 0 0 0 0 0 0 1500
jcnd=1500/1500 0x3877c7907c 0 
* 0 
+6 0 1500 1500
+5 0 1500
+4 0 1500 0 0 0 0 0 0 0 0 1500
+6 0 1500
+4 0 1500 0 0 1 0 0 1 0 0 1500
+6 0 1500
+4 0 1500 1500
+7 0 1500 0 0 0 0 0 0 0 0 1500
+6 0 1500 1500
+6 0 1500
+2 0 1500 0 0 0 0 0 0 0 0 1500
+6 0 1500 1500
+4 0 1500 0 0 0 0 0 0 0 0 1500 3
jcnd=1497/1500 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3
jcnd=3/3 +15 0 
* 0 
+15 0 1500 1500 0 1 0 0 1
+4 0 1500 0 0 0 0 0 0 0 0 1500 2
jcnd=2/1500 0x3877c78bf0 0 
* 0 
+6 0 1498 1498 0 0 1 0 0 1
+6 0 1498 0 0 1 0 0 1 0 0 1498 69
jcnd=88/1498 0x3877c78a78 0 
* 0 
+6 0 1410 1410
+5 0 1410 1410
+5 0 1410 1410
+4 0 1410 0 0 0 0 0 0 0 0 1410
+6 0 1410 1410
+4 0 1410 0 0 0 0 0 0 0 0 1410
+6 0 1410 1410
+9 0 1410 0 1410
+4 0 1410 0 1410
+4 0 1410 0 0 0 0 0 0 0 0 1410 197
jcnd=719/1410 +16 0 
* 0 
+2 0 691 691
+5 0 691
+3 0 691 0 0 1 0 0 1 0 0 691 3
jcnd=3/691 0x3877c78ee4 0 
* 0 
+6 0 1410
+3 0 1410
+4 0 1410 1410
+4 0 1410 1410
+4 0 1410 0 0 0 0 0 0 0 0 1410
-12 0 88
+4 0 88 88
+4 0 88 88
+4 0 88 0 0 0 0 0 0 0 0 88
+6 0 1498
+7 0 1498 0 1498
+4 0 1498 0 1498
+4 0 1498 0 0 0 0 0 0 0 0 1498 31
jcnd=300/1498 +18 0 
* 0 
+2 0 1198 0 1198
+8 0 1198 0 1198
+8 0 1198 0 1198
+4 0 1198
+3 0 1198 0 1198 1 0 0 1
+4 0 1198
+4 0 1198 0 1198
+4 0 1198 0 1198
+4 0 1198
+7 0 1198 0 0 0 0 0 0 0 0 1198
jcnd=1198/1198 0x3877c78b20 0 
* 0 
-30 0 300 0 300
+4 0 300
+3 0 300 0 300
+4 0 300
+4 0 300 0 300
+4 0 300 0 300
+4 0 300
+7 0 300 0 0 0 0 0 0 0 0 300
jcnd=300/300 0x3877c78b20 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1500 0 0 1 0 0 1
+5 0 1500 1500
+4 0 1500 1500
+7 0 1500 0 0 0 0 0 0 0 0 1500
jcnd=1500/1500 +16 0 
* 0 
+16 0 1500 0 1500
+5 0 1500 0 0 0 0 0 0 0 0 1500
+6 0 1500
+3 0 1500
jump=1500 0x3877c7878f 0 
* 0 
+10 0 88 0 88
+6 0 88 0 0 1 0 0 1
jump=88 0x3877c78885 0 
* 0 
0x3877c78b20 0 1500 1500 0 1 0 0 1
+4 0 1500
+2 0 1500 0 0 0 0 0 0 0 0 1500
+6 0 1500 1500
+7 0 1500 0 0 0 0 0 0 0 0 1500
jcnd=1500/1500 +15 0 
* 0 
+15 0 1500 0 1500 1 0 0 1
+4 0 1500 0 0 0 0 0 0 0 0 1500
+6 0 1500
+4 0 1500 1500
+1 0 1500 1500
+1 0 1500 1500
+2 0 1500 1500
+2 0 1500 1500
+2 0 1500 1500
+2 0 1500 1500
0x3877c78bf0 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
+3 0 2
+4 0 2 0 2 1 0 0 1
+4 0 2
jump=2 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 3 3 0 1 0 0 1
+5 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+5 0 3 0 3
+4 0 3 3
+5 0 3 0 3 1 0 0 1
+4 0 3
jump=3 0x3877c78882 0 
* 0 
0x3877c7907c 0 1500 1500 0 1 1 0 1 1
+4 0 1500 0 0 1 0 0 1
+7 0 1500
+4 0 1500
+3 0 1500
+3 0 1500 0 0 0 0 0 0 0 0 1500
jcnd=1500/1500 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1614 0 0 1 0 0 1
+7 0 1614
+3 0 1614
+3 0 1614 1614 0 0 1 0 0 1
+4 0 1614
+4 0 1614 0 0 0 0 0 0 0 0 0 0 1614 200
jump=200 0x3877c89be8 0 
* 0 
jump=210 0x3877c89bd0 0 
* 0 
jump=200 0x3877c89bb8 0 
* 0 
jump=200 +11 0 
* 0 
jump=200 0x3877c89c48 0 
* 0 
jump=202 0x3877c89c30 0 
* 0 
jump=200 0x3877c89c18 0 
* 0 
jump=202 0x3877c89c00 0 
* 0 
+11 0 200 200
+3 0 200
+4 0 200
+4 0 200 200
+4 0 200
+4 0 200 0 200
+4 0 200
+9 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-40 0 20062 20062
+4 0 20062 0 20062
+4 0 20062 20062
+4 0 20062 0 20062
+4 0 20062 20062
+4 0 20062 0 20062 0 0 28 0 0 28
+4 0 20062 20062
+4 0 20062 0 20062
+4 0 20062
+4 0 20062
+4 0 20062 0 0 0 0 0 0 0 0 20062 1141
jcnd=1578/20062 0x3877c89c60 0 
* 0 
-32 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202
jcnd=10/202 0x3877c89c60 0 
* 0 
-24 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
+4 0 200
+4 0 200 0 0 0 0 0 0 0 0 200
jcnd=8/200 0x3877c89c60 0 
* 0 
-16 0 202 202 0 1 0 0 1
+4 0 202 0 202
+4 0 202 0 0 1 0 0 1
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202 4
jcnd=10/202 0x3877c89c60 0 
* 0 
+6 0 19252
+4 0 19252 19252
+3 0 19252 0 19252 0 0 2 0 0 2
+3 0 19252 19252
+4 0 19252 0 19252 0 0 18 0 0 18
+4 0 19252 19252
+4 0 19252 0 19252 0 0 26 0 0 26
+4 0 19252 19252
+4 0 19252 0 19252 0 0 2 0 0 2
+4 0 19252
jump=19252 -80 0 
* 0 
-30 0 200 200
+3 0 200 0 200
+3 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200 0 0 1 0 0 1
+4 0 200 200
+4 0 200 0 200
+4 0 200
jump=200 -80 0 
* 0 
-24 0 210 210
+4 0 210 0 210
+4 0 210 210
+4 0 210 0 210
+4 0 210 210
+4 0 210 0 210
+4 0 210
jump=210 -80 0 
* 0 
-16 0 200 200
+4 0 200 0 200
+4 0 200 200
+4 0 200 0 200
+4 0 200
jump=200 -80 0 
* 0 
+8 0 200 200
+3 0 200
+4 0 200 0 0 1 0 0 1
+4 0 200
+4 0 200
jump=200 -39 0 
* 0 
+9 0 210
+3 0 210 0 0 0 0 0 0 0 0 210
+6 0 210 210
+3 0 210
+4 0 210
jump=210 -72 0 
* 0 
+8 0 200
+4 0 200 200
+3 0 200 0 0 0 0 0 0 0 0 200
+2 0 200
+4 0 200
jump=200 -99 0 
* 0 
+11 0 202 202 0 1 0 0 1
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b78 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b70 0 
* 0 
+9 0 202 202
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b68 0 
* 0 
+9 0 200 200
+3 0 200
+4 0 200
+4 0 200
+4 0 200
jump=200 0x3877c89b60 0 
* 0 
+9 0 1614 0 1614 1 0 0 1
+3 0 1614 1614

fn=(104) alloc_perturb
0x3877c77180 0 1475 1475 0 1 0 0 1
+6 0 1475
+2 0 1475 0 0 0 0 0 0 0 0 1475 34
+2 0 1475 1475

fn=(38)
0x3877c79a00 0 1624 0 1624 1 0 0 1
+2 0 1624
+3 0 1624 0 1624
+2 0 1624 0 1624
+2 0 1624 0 1624 0 0 1 0 0 1
+2 0 1624
+3 0 1624 0 1624
+1 0 1624 0 1624
+1 0 1624
+4 0 1624
+4 0 1624 0 0 0 0 0 0 0 0 1624
+6 0 1624
+4 0 1624
+6 0 1624
+3 0 1624
+4 0 1624
+4 0 1624
+4 0 1624
+3 0 1624 0 0 0 0 0 0 0 0 1624
+6 0 1624 1624 0 1 1 0 1 1
+7 0 1624 0 0 0 0 0 0 0 0 1624 7
jcnd=1502/1624 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 149 149
+6 0 149
+4 0 149
+2 0 149 0 0 0 0 0 0 0 0 149
+6 0 149
+3 0 149
+4 0 149 149
+1 0 149 149
+1 0 149 149
+2 0 149 149
+2 0 149 149
+2 0 149 149
+2 0 149 149
-14 0 1475
+4 0 1475 1475
+1 0 1475 1475
+1 0 1475 1475
+2 0 1475 1475
+2 0 1475 1475
+2 0 1475 1475
+2 0 1475 1475
+7 0 1519
+7 0 1519 0 0 1 0 0 1 0 0 1519 7
jcnd=616/1519 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 7 0 0 7
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 616 0 0 1 0 0 1
+3 0 616
+4 0 616
+4 0 616 0 0 1 0 0 1 0 0 616
jcnd=616/616 0x3877c7a1a4 0 
* 0 
+30 0 616 616
+6 0 616
+5 0 616 0 0 0 0 0 0 0 0 616 1
jcnd=615/616 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 935 255 198 8 1 0 8 1 0 195 28
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1518 0 0 1 0 0 1
+3 0 1518
+3 0 1518
+3 0 1518
+4 0 1518
+3 0 1518
+4 0 1518 0 1518
+5 0 1518
+3 0 1518 0 1518
+4 0 1518 0 1518
+4 0 1518 0 1518
+5 0 1518
+3 0 1518
+3 0 1518
+3 0 1518
+3 0 1518
+4 0 1518
+4 0 1518 0 0 1 0 0 1
+4 0 1518 0 1518
+4 0 1518
+4 0 1518 0 1518
+5 0 1518 0 1518
+5 0 1518
+3 0 1518
+3 0 1518 0 1518
+5 0 1518
+5 0 1518
+3 0 1518 0 1518
+4 0 1518 0 1518
+4 0 1518
+6 0 1518 0 1518
+4 0 1518 0 1518
+5 0 1518 0 0 1 0 0 1
+3 0 1518
+3 0 1518
+3 0 1518
jump=1518 +87 0 
* 0 
+8 0 718
+3 0 718
+4 0 718
+2 0 718
+2 0 718
+3 0 718
+3 0 718
+3 0 718
+2 0 718
+2 0 718
+5 0 718
+2 0 718 718 0 0 1 0 0 1
+4 0 718
+3 0 718
+4 0 718 0 718
+4 0 718 0 718
+8 0 718
+7 0 718 0 718
+4 0 718 0 718
+4 0 718 0 718
+4 0 718 0 0 0 0 0 0 0 0 718
-38 0 968
+3 0 968
+4 0 968 0 968
+4 0 968 0 968
+8 0 968
+7 0 968 0 968
+4 0 968 0 968
+4 0 968 0 968
+4 0 968 0 0 0 0 0 0 0 0 968
+6 0 3205 3205 0 1 0 0 1
+4 0 3205
+3 0 3205 0 0 0 0 0 0 0 0 3205 559
jcnd=1237/3205 0x3877c79ef0 0 
* 0 
+6 0 1968 1968
+4 0 1968 1968
+4 0 1968
+4 0 1968 0 0 0 0 0 0 0 0 1968
+6 0 1968 1968 0 1 0 0 1
+7 0 1968 0 0 0 0 0 0 0 0 1968
+6 0 1968
+4 0 1968
+7 0 1968 0 0 0 0 0 0 0 0 1968 10
jcnd=882/1968 +11 0 
* 0 
+2 0 1086
+3 0 1086 0 0 0 0 0 0 0 0 1086 194
jcnd=866/1086 0x3877c79e28 0 
* 0 
+6 0 1730
+3 0 1730 0 1730
+4 0 1730 0 1730
+5 0 1730 0 0 0 0 0 0 0 0 1730 25
jcnd=44/1730 0x3877c7a090 0 
* 0 
+6 0 1686
+7 0 1686 0 0 0 0 0 0 0 0 1686 274
jcnd=718/1686 0x3877c79c50 0 
* 0 
+6 0 968 0 0 1 0 0 1
+3 0 968
+4 0 968
+4 0 968 0 0 0 0 0 0 0 0 968 9
jcnd=387/968 0x3877c79db0 0 
* 0 
+6 0 581
+3 0 581
+4 0 581
+2 0 581
+2 0 581
+3 0 581
+3 0 581
+8 0 581
+3 0 581
+2 0 581
+2 0 581
+4 0 581 581 0 0 2 0 0 2
+4 0 581
+3 0 581 0 0 1 0 0 1 0 0 581 7
jcnd=581/581 0x3877c79e15 0 
* 0 
-36 0 387
+2 0 387
+2 0 387
+3 0 387
+3 0 387
+8 0 387
+3 0 387
+2 0 387
+2 0 387
+4 0 387 387
+4 0 387
+3 0 387 0 0 0 0 0 0 0 0 387
jcnd=387/387 0x3877c79e15 0 
* 0 
0x3877c79db0 0 387 0 0 1 0 0 1
+3 0 387
+4 0 387
+4 0 387 0 0 0 0 0 0 0 0 387
+2 0 387
+3 0 387 0 0 1 0 0 1
+7 0 387
jump=387 0x3877c79d18 0 
* 0 
+78 0 968 0 968
+4 0 968 0 968
+4 0 968
+3 0 968
jump=968 0x3877c79c73 0 
* 0 
+8 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866 227
jcnd=443/866 0x3877c79ce1 0 
* 0 
+6 0 423 423
+5 0 423 0 0 0 0 0 0 0 0 423 5
jcnd=185/423 0x3877c79ce1 0 
* 0 
+6 0 238 0 0 1 0 0 1
+3 0 238
+3 0 238
+3 0 238
+7 0 238 0 238
+4 0 238 0 238
+4 0 238
+3 0 238 0 238
+4 0 238 0 238 0 0 18 0 0 18
+4 0 238 0 238
+4 0 238 0 0 0 0 0 0 0 0 238 4
jcnd=10/238 +18 0 
* 0 
+2 0 228 0 228 0 0 16 0 0 16
+8 0 228 0 228
+8 0 228
+7 0 228 0 228 1 0 0 1
+4 0 228
+3 0 228
+3 0 228
+3 0 228
+4 0 228
+3 0 228
+4 0 228
+3 0 228
+3 0 228
+4 0 228 0 228
+4 0 228 0 228
+4 0 228
+4 0 228
+3 0 228 0 228
cfn=(104)
calls=228 0x3877c77180 0 
* 0 912 456 0 0 0 0 0 0 0 228
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 238
+3 0 238
jump=238 0x3877c79ae3 0 
* 0 
+55 0 1237 0 0 1 0 0 1
+7 0 1237
+3 0 1237 0 0 0 0 0 0 0 0 1237 8
jcnd=600/1237 0x3877c7a0b0 0 
* 0 
+6 0 1205 1205 0 1 0 0 1
+4 0 1205
+3 0 1205
+3 0 1205
+2 0 1205
+4 0 1205
+3 0 1205
+3 0 1205
+2 0 1205
+2 0 1205
+2 0 1205
+2 0 1205 1205 0 0 1 0 0 1
+8 0 1205
+5 0 1205
+5 0 1205
+2 0 1205 0 0 0 0 0 0 0 0 1205
-2 0 490
+2 0 490 0 0 0 0 0 0 0 0 490
+2 0 1695
+2 0 1695 0 0 0 0 0 0 0 0 1695 38
jcnd=1043/1695 +64 0 
* 0 
+2 0 652
+8 0 652
+3 0 652
+3 0 652 0 0 0 0 0 0 0 0 652 1
jcnd=1/652 0x3877c79fc0 0 
* 0 
-6 0 358
+3 0 358
+3 0 358 0 0 0 0 0 0 0 0 358 1
jcnd=1/358 0x3877c79fc0 0 
* 0 
+2 0 1008
+2 0 1008 1008 0 0 1 0 0 1
+8 0 1008
+2 0 1008 0 0 0 0 0 0 0 0 1008 20
jcnd=358/1008 -20 0 
* 0 
+2 0 650
+2 0 650
+5 0 650
+3 0 650
+3 0 650
+2 0 650
+2 0 650
+5 0 650 0 0 0 0 0 0 0 0 650 1
jcnd=1/650 +14 0 
* 0 
+2 0 649
+2 0 649
+4 0 649
+2 0 649
+2 0 649 0 0 0 0 0 0 0 0 649 2
jcnd=647/649 -8 0 
* 0 
-8 0 7503
+4 0 7503
+2 0 7503
+2 0 7503 0 0 0 0 0 0 0 0 7503 312
jcnd=6002/7503 -8 0 
* 0 
-2 0 1043 0 0 1 0 0 1
+2 0 1043 0 0 0 0 0 0 0 0 1043 28
jcnd=854/1043 -8 0 
* 0 
+2 0 1693 1693 0 0 12 0 0 12
+4 0 1693 0 0 1 0 0 1
+3 0 1693 0 0 0 0 0 0 0 0 1693 508
jcnd=1203/1693 0x3877c7a1cf 0 
* 0 
+6 0 490
+2 0 490
+4 0 490
+2 0 490
+2 0 490
+2 0 490 0 490
+8 0 490
jump=490 0x3877c79f30 0 
* 0 
+37 0 2 2 0 1 0 0 1
+5 0 2 2
+4 0 2
+4 0 2 2
+5 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 44 0 0 1 0 0 1
+7 0 44 0 44
+6 0 44
+3 0 44 0 0 0 0 0 0 0 0 44
jcnd=44/44 0x3877c79ace 0 
* 0 
+16 0 600 600
+4 0 600
+4 0 600
+2 0 600
+5 0 600 600 0 1 2 0 1 2
+4 0 600
+3 0 600 0 0 0 0 0 0 0 0 600 8
jcnd=564/600 0x3877c79f00 0 
* 0 
+6 0 36 36
+4 0 36 0 0 0 0 0 0 0 0 36 2
jcnd=4/36 0x3877c79f00 0 
* 0 
+6 0 32
+3 0 32 32
+4 0 32 32
+4 0 32
+3 0 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32
jcnd=32/32 0x3877c7a650 0 
* 0 
+26 0 32 0 0 1 0 0 1
+3 0 32 32
+4 0 32
+3 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 2
+6 0 32 32
+8 0 32 0 32
+4 0 32 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32 0 1 0 0 1
+4 0 32
+3 0 32 0 0 0 0 0 0 0 0 32 32
jcnd=32/32 0x3877c7a659 0 
* 0 
+6 0 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=16/32 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 616 0 0 1 0 0 1
+3 0 616 0 616
+4 0 616
jump=616 0x3877c79b99 0 
* 0 
+36 0 1203 1203 0 1 3 0 1 3
+4 0 1203 1203 0 0 1 0 0 1
+4 0 1203
+3 0 1203 1203
+4 0 1203
+4 0 1203
+3 0 1203
+3 0 1203 1203
+4 0 1203 0 0 0 0 0 0 0 0 1203
+6 0 1203 1203
+4 0 1203 0 0 0 0 0 0 0 0 1203
+6 0 1203 1203 0 1 0 0 1
+8 0 1203 0 1203
+4 0 1203 0 1203
+4 0 1203 0 0 0 0 0 0 0 0 1203 24
jcnd=269/1203 +38 0 
* 0 
+2 0 934 934 0 0 1 0 0 1
+4 0 934
+3 0 934 0 0 0 0 0 0 0 0 934
+2 0 934 934
+5 0 934 0 0 0 0 0 0 0 0 934
+6 0 934 934
+4 0 934 0 934
+4 0 934 934
+4 0 934 0 934
+4 0 934
+4 0 934 0 0 0 0 0 0 0 0 934
-4 0 269
+4 0 269 0 0 0 0 0 0 0 0 269 4
jcnd=24/269 0x3877c7a2e3 0 
* 0 
+6 0 1179 1179
+4 0 1179 1179 0 1 0 0 1
+4 0 1179 0 0 0 0 0 0 0 0 1179
+6 0 1179
+4 0 1179
+7 0 1179 0 1179 0 0 10 0 0 10
+4 0 1179 0 1179
+4 0 1179 0 1179
+4 0 1179 0 1179
+4 0 1179 0 0 0 0 0 0 0 0 1179 7
jcnd=566/1179 +7 0 
* 0 
+2 0 613 0 613
+5 0 613
+7 0 613 0 0 0 0 0 0 0 0 613 1
jcnd=246/613 +18 0 
* 0 
-7 0 566
+7 0 566 0 0 0 0 0 0 0 0 566 70
jcnd=458/566 +18 0 
* 0 
+2 0 475 0 475 0 0 8 0 0 8
+8 0 475 0 475 1 0 0 1
+8 0 475
+7 0 475 0 475 0 0 3 0 0 3
+4 0 475
+3 0 475
+3 0 475
+4 0 475
+3 0 475
+4 0 475
+3 0 475
+3 0 475
+4 0 475 0 475
+4 0 475 0 475 0 0 1 0 0 1
+4 0 475
jump=475 +71 0 
* 0 
-46 0 720
+7 0 720 0 720
+4 0 720
+3 0 720
+3 0 720
+4 0 720
+3 0 720
+4 0 720
+3 0 720
+3 0 720
+4 0 720 0 720
+4 0 720 0 720 0 0 1 0 0 1
+4 0 720
jump=720 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 40
+7 0 40 0 40
+6 0 40
+3 0 40 0 0 0 0 0 0 0 0 40 2
jcnd=40/40 +7 0 
* 0 
+7 0 1235
+4 0 1235 0 0 1 0 0 1
+3 0 1235
+3 0 1235 0 1235
cfn=(104)
calls=1235 0x3877c77180 0 
* 0 4940 2470 0 1 0 0 1 0 0 1235 33
+5 0 1235
+3 0 1235
jump=1235 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 2 0 0 1 0 0 1
+7 0 2
+2 0 2
+4 0 2
+3 0 2
+3 0 2 0 2
+5 0 2
+3 0 2
+4 0 2
+3 0 2 0 0 1 0 0 1
+4 0 2
+4 0 2
+3 0 2
+4 0 2 0 2
+4 0 2 0 2 0 0 1 0 0 1
+4 0 2
+3 0 2
+3 0 2 0 2
cfn=(104)
calls=2 0x3877c77180 0 
* 0 8 4 0 0 0 0 0 0 0 2 1
+5 0 2
+3 0 2
jump=2 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 32 32 0 1 0 0 1
+4 0 32
jump=32 0x3877c7a10e 0 
* 0 
+5 0 32 32
+5 0 32 0 0 0 0 0 0 0 0 32
+2 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 0x3877c7a14b 0 
* 0 

totals: 14822849 6118520 3504162 245 109 171 245 109 171 415363 6073 9734 200
