version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1602


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2033485882 - 2035491846
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1820 0 0 1 0 0 1
+3 0 1820 0 0 0 0 0 0 0 0 1820
+2 0 1820
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1820 0x3877c7b8b0 0 
* 0 204777 52387 26865 21 4 0 21 4 0 50273 805
* 0 1820 1820 0 1 1 0 1 1 0 0 0 1820

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1820 0 1820 1 0 0 1
+1 0 1820
+5 0 1820
+3 0 1820 0 1820
+1 0 1820
+4 0 1820 0 0 1 0 0 1
+3 0 1820
+4 0 1820
+3 0 1820 0 1820 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1820 0x3877c7aa50 0 
* 0 495784 72148 72403 49 38 60 49 38 60 82373 2831
* 0 1820 1820 0 1 1 0 1 1 0 0 0 1820
+5 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820
jcnd=1820/1820 +96 0 
* 0 
+96 0 1820 0 0 1 0 0 1
+4 0 1820 1820
+1 0 1820 1820
+1 0 1820 1820

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 902
+4 * 902
+3 * 902 0 902
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=902 0x4044cc -35 
* * 4510 1804 1804
+5 * 902 902
+1 * 902 902

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 902 0 902 1 0 0 1
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902 1 0 0 1
+4 +1 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=902 0x4049d4 -35 
* * 5412 1804 2706 1 0 0 1
+5 * 902 902
+1 * 902 902

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 902 0 902 1 0 0 1
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 902
+4 * 902
+3 * 902 0 902
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=902 0x404520 -35 
* * 4510 1804 1804
+5 * 902 902
+1 * 902 902

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 902 0 902 1 0 0 1
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=902 0x404a28 -35 
* * 5412 1804 2706 1 0 1 1 0 1
+5 * 902 902
+1 * 902 902

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 902 0 902 1 0 0 1
+1 * 902
+3 * 902 0 902
+4 * 902 902
+4 * 902 902
+1 * 902 902

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +1 451 451
+4 * 451 451
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=451 0x40406a -87 
* * 10824 3608 4059 0 28 20 0 28 20 451
+5 * 451 451
+1 * 451 451

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 902 0 902
+1 * 902
+3 * 902 0 902
+4 * 902 902
+4 * 902 902
+1 * 902 902

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +1 451 451
+4 * 451 451
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=451 0x403df2 -87 
* * 10824 3608 4059 0 29 3 0 29 3 451 2
+5 * 451 451
+1 * 451 451

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 982 0 982
+1 * 982
+3 * 982 0 982
+4 +1 982 982
+4 * 982 982
+1 * 982 982

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804 0 1804
+4 +1 1804 1804 0 1 0 0 1
+4 * 1804 1804
+1 * 1804 1804

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 982 0 982
+1 * 982
+3 * 982 0 982 0 0 1 0 0 1
+4 +1 982 982
+4 * 982 982
+1 * 982 982

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804
+4 * 1804 0 1804
+4 +1 1804
+4 * 1804
+3 * 1804 0 1804
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1804 0x404ffe 790 
* * 10824 5412 3608 1 0 0 1
+5 * 1804 1804
+3 * 1804 1804
+1 * 1804 1804

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804 0 1804
+4 +1 1804 1804
+4 * 1804 1804
+1 * 1804 1804

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804
+4 * 1804 0 1804
+4 +1 1804
+4 * 1804
+3 * 1804 0 1804 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1804 0x40500c 790 
* * 10824 5412 3608 1 0 0 1
+5 * 1804 1804
+3 * 1804 1804
+1 * 1804 1804

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 902 0 902
+1 * 902
+3 * 902 0 902
+4 * 902 0 902
+4 * 902 902
+4 * 902 902
+1 * 902 902

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 910 0 910 1 0 0 1
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 * 910 0 910 1 0 0 1
+4 +2 910 910
+4 * 910
+3 * 910 0 910
cfn=(28)
calls=910 0x404992 +12 
* * 5460 1820 1820 1 0 0 1
+5 * 910 910
+4 * 910
+3 * 910
+2 * 910 0 0 0 0 0 0 0 0 910
jcnd=910/910 +7 +3 
* * 
+7 +3 910 910
+4 * 910
+4 * 910
+3 * 910 0 910
cob=(5)
cfi=(8)
cfn=(32)
calls=910 0x387e4bd0b0 0 
* * 263662 41273 41824 20 24 15 20 24 15 42300 1131 910
* * 910 910 0 1 1 0 1 1 0 0 0 910
+5 +1 910 910
+1 * 910 910

fn=(102)
0x4048de 113 926 0 926 1 0 0 1
+1 * 926
+3 * 926 0 926
+4 +1 926
+10 * 926 926
+1 * 926 926

fn=(266)
0x40406a 129 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +1 451 451
+4 * 451
+3 * 451
+5 * 451 0 451
cfi=(16)
cfn=(226)
calls=451 0x402d61 -20 
* * 3157 1353 1353
+5 * 451
+3 * 451 0 0 0 0 0 0 0 0 451
+2 * 451 451
+4 * 451 451 0 0 28 0 0 28
+2 * 451 0 451 0 0 20 0 0 20
+2 * 451 451
+1 * 451 451

fn=(28)
0x404992 113 926 0 926 1 0 0 1
+1 * 926
+3 * 926 0 926
+4 +1 926
+10 * 926 926
+1 * 926 926

fn=(176)
0x4044cc 86 902 0 902
+1 * 902
+3 * 902 0 902
+4 * 902 902
+1 * 902 902

fn=(224)
0x403df2 129 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+4 +1 451 451
+4 * 451
+3 * 451
+5 * 451 0 451
cfi=(16)
cfn=(226)
calls=451 0x402d61 -20 
* * 3157 1353 1353
+5 * 451
+3 * 451 0 0 0 0 0 0 0 0 451 2
+2 * 451 451
+4 * 451 451 0 0 29 0 0 29
+2 * 451 0 451 0 0 3 0 0 3
+2 * 451 451
+1 * 451 451

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 910 0 910
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 * 910 0 910
+4 +1 910 910
+4 * 910
+3 * 910 0 910
cob=(5)
cfi=(8)
cfn=(164)
calls=910 0x387e4bb2f0 0 
* * 99134 24607 11251 23 4 0 23 4 0 24158 741 910
* * 910 910 0 1 1 0 1 1 0 0 0 910
+5 * 910 910
+1 * 910 910

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 910 0 910
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 * 910 0 910
+4 +1 910 910
+4 * 910
+3 * 910 0 910
cob=(5)
cfi=(8)
cfn=(164)
calls=910 0x387e4bb2f0 0 
* * 112923 29600 15614 0 1 0 0 1 0 27935 64 910
* * 910 910 0 0 0 0 0 0 0 0 0 910
+5 * 910 910
+1 * 910 910

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 910 0 910 1 0 0 1
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 * 910 0 910
+4 +2 910 910
+4 * 910
+3 * 910 0 910
cfn=(102)
calls=910 0x4048de +12 
* * 5460 1820 1820 1 0 0 1
+5 * 910 910
+4 * 910 0 0 1 0 0 1
+3 * 910
+2 * 910 0 0 0 0 0 0 0 0 910
jcnd=910/910 +7 +3 
* * 
+7 +3 910 910
+4 * 910
+4 * 910
+3 * 910 0 910
cob=(5)
cfi=(8)
cfn=(32)
calls=910 0x387e4bd0b0 0 
* * 261242 38155 36039 33 15 46 33 15 46 41893 1700 910
* * 910 910 0 0 0 0 0 0 0 0 0 910
+5 +1 910 910
+1 * 910 910

fn=(18)
0x404a28 81 902 0 902 1 0 0 1
+1 * 902
+3 * 902 0 902 0 0 1 0 0 1
+4 * 902 0 902
+4 * 902 902
+1 * 902 902

fn=(92)
0x4049d4 81 902 0 902 1 0 0 1
+1 * 902
+3 * 902 0 902
+4 * 902 0 902
+4 * 902 902
+1 * 902 902

fn=(196)
0x404520 86 902 0 902
+1 * 902
+3 * 902 0 902
+4 * 902 902
+1 * 902 902

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +2 902 902
+4 * 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=902 0x404484 107 
* * 523848 177936 172528 25 3 4 25 3 4 20510 1130 1800 225
+5 * 902 902
+1 * 902 902

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +2 902 902 0 1 0 0 1
+4 * 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=902 0x404a36 450 
* * 498592 168916 163508 24 3 4 24 3 4 20510 1130 1800 225
+5 * 902 902
+1 * 902 902

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +2 902 902
+4 * 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=902 0x40439c 107 
* * 523848 177936 172528 7 1 40 7 1 40 20510 1115 1800
+5 * 902 902
+1 * 902 902

fn=(116)
0x40439c 107 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +10 902 902
+4 * 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=902 0x4047d7 -26 
* * 511220 173426 168018 7 1 40 7 1 40 20510 1115 1800
+5 +1 902 902
+1 * 902 902

fn=(118)
0x4047d7 91 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +2 902 902
+4 * 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=902 0x4049e2 450 
* * 498592 168916 163508 7 1 40 7 1 40 20510 1115 1800
+5 * 902 902
+1 * 902 902

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +10 902 902
+4 * 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(52)
calls=902 0x404829 -26 
* * 511220 173426 168018 25 3 4 25 3 4 20510 1130 1800 225
+5 +1 902 902
+1 * 902 902

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 5 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 902 0 902 1 0 0 1
+1 * 902
+3 * 902 0 902
+2 * 902 0 902
+2 * 902 0 902
+1 * 902
+4 * 902 0 902 1 0 0 1
+4 * 902 0 902
+4 +2 902 902
+4 * 902
+3 * 902 0 902
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=902 0x403b08 117 
* * 5412 2706 1804 1 0 1 1 0 1
+5 * 902
+3 * 902 0 902
cfi=(3)
cfn=(8)
calls=902 0x403afa -88 
* * 5412 2706 1804 1 0 0 1
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=902 0x402f54 645 
* * 11726 5412 1804 1 1 0 1 1
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902
+3 * 902
+3 * 902 0 902
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=902 0x403b16 134 
* * 374327 81524 77559 32 20 12 32 20 12 43782 1081 1804
+5 +4 902 902 0 1 0 0 1
+4 * 902
+3 * 902 0 902
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=902 0x40333c 113 
* * 5412 2706 1804 2 0 0 2
+5 * 902
+3 * 902 902
+4 * 902 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=902 0x403ba4 565 
* * 22550 9020 7216 3 0 0 3
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=902 0x403b74 547 
* * 22550 9020 7216
+5 * 902
+3 * 902
+3 * 902
+3 * 902
+3 * 902 0 902 1 0 0 1
cfi=(11)
cfn=(48)
calls=902 0x403bd5 -60 
* * 537378 182446 177940 26 3 4 26 3 4 20510 1130 1800 225
+5 -3 902 902
+4 * 902 0 902
+4 * 902
jump=902 +28 +4 
* * 
+28 +4 902
+4 * 902 902
+1 * 902 902
+2 * 902 902
+2 * 902 902
+1 * 902 902

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 902 0 902 1 0 0 1
+1 * 902
+3 * 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+4 * 902 0 902
+4 * 902
+4 * 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=902 0x404380 726 
* * 9020 4510 3608 1 0 0 1
+5 * 902 902
+4 * 902 902
+1 * 902 902

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 902 0 902
+1 * 902
+3 * 902 0 902
+1 * 902
+4 * 902 0 902 1 0 0 1
+4 +2 902 902
+4 * 902
+3 * 902 0 902
cfn=(40)
calls=902 0x40333c 113 
* * 5412 2706 1804
+5 * 902
+3 * 902 902
+4 * 902 902
+4 * 902 902
+4 * 902 902
+3 -1 902
+3 * 902
+3 * 902 0 902
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=902 0x40334a 148 
* * 27962 9020 10824 2 0 0 2
+5 +1 902 902
+4 * 902
+3 * 902 0 902
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=902 0x4032ca 159 
* * 183298 55534 36246 3 1 0 3 1 0 28634 55 1804
+5 * 902
jump=902 +28 * 
* * 
+28 * 902 0 0 1 0 0 1
+4 * 902 902
+1 * 902 902
+1 * 902 902

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 910 0 910 1 0 0 1
+1 * 910 0 0 1 0 0 1
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 0 910 910
+5 0 910 0 0 0 0 0 0 0 0 910
+2 0 910 910
+4 0 910 910
+4 0 910
+5 0 910
+3 0 910
+3 0 910 0 910
fi=(6) ???
cfi=(5)
cfn=(100)
calls=910 0x40461a 99 
* 0 284902 45435 43319 36 15 46 36 15 46 42803 1700 1820
+5 0 910
fi=(6)
jump=910 +7 0 
* 0 
+7 0 910 910
+1 0 910 910

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 308033 0 308033
+1 * 308033
+3 * 308033 0 308033
+4 * 308033 0 308033
+4 +1 308033 308033
+4 * 308033 308033
+3 * 308033 308033
+4 * 308033
+4 * 308033
+3 * 308033 308033
+1 * 308033 308033

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 308033 0 308033
+1 * 308033
+3 * 308033 0 308033 1 0 0 1
+4 * 308033 0 308033
+4 +1 308033 308033
+4 * 308033 308033
+3 * 308033 308033
+4 * 308033
+4 * 308033
+3 * 308033 308033
+1 * 308033 308033

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 902
+4 * 902
+3 * 902 0 902
cfi=(4)
cfn=(194)
calls=902 0x403d7e +42 
* * 12628 4510 4510 1 0 0 1
+5 * 902 902
+1 * 902 902

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 902 0 902 1 0 0 1
+1 * 902
+3 * 902 0 902
+1 * 902
+4 * 902 0 902
+4 +2 902 902
+4 * 902 902
+4 * 902
+3 * 902 902
+4 * 902 902
+3 * 902
+3 * 902
+3 * 902
+4 * 902
+3 * 902 902
+4 * 902 902
+3 -1 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=902 0x403d98 +11 
* * 137296 38396 24520 1 1 0 1 1 0 28634 55 1804
+5 +1 902 902
+4 * 902
+3 * 902 0 902
cfn=(192)
calls=902 0x403296 -82 
* * 20746 7216 7216 1 0 0 1
+5 * 902
jump=902 +28 * 
* * 
+28 * 902
+4 * 902 902
+1 * 902 902
+1 * 902 902

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 3640 0 3640 1 0 0 1
+1 * 3640
+3 * 3640 0 3640 0 0 1 0 0 1
+4 +1 3640 3640
+4 * 3640 3640 0 1 1 0 1 1
+4 * 3640
+3 * 3640 3640
+4 * 3640 3640
+3 * 3640
+3 * 3640
+3 * 3640
+4 * 3640 3640
+1 * 3640 3640

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 +2 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=902 0x404236 -14 
* * 299461 52660 52303 26 20 8 26 20 8 43782 1081 1804
+5 * 902 902
+4 * 902 0 902
+3 +1 902 902
+4 * 902 902 0 1 0 0 1
+3 * 902 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+3 * 902 902
+4 * 902
+4 * 902
+3 * 902 902
+4 * 902 0 902
+4 +1 902 902
+1 * 902 902

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 +2 902 902
+4 * 902 902 0 1 0 0 1
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(96)
calls=902 0x403fbe -14 
* * 296280 49313 46346 26 7 41 26 7 41 43214 1645 1804
+5 * 902 902
+4 * 902 0 902
+3 +1 902 902
+4 * 902 902
+3 * 902 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+3 * 902 902
+4 * 902
+4 * 902
+3 * 902 902
+4 * 902 0 902
+4 +1 902 902
+1 * 902 902

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 451 0 451
+1 * 451
+3 * 451 0 0 1 0 0 1
+4 * 451 0 451
+4 * 451 0 451
+4 +2 451 451
+4 * 451 451
+4 * 451 451
+4 * 451 451
+4 * 451
+3 * 451 0 0 0 0 0 0 0 0 451
jcnd=8/451 +51 +10 
* * 
+2 +3 443 443
+4 * 443 443
+4 * 443 443
+4 -1 443 443
+4 * 443
+3 * 443
+3 * 443 0 443
cfi=(3)
cfn=(264)
calls=443 0x4036b1 215 
* * 16834 5759 6202 0 28 16 0 28 16 443
+5 +2 443 443
+4 * 443 443
+4 * 443
+4 * 443 443
+4 * 443 0 443
+4 * 443
jump=443 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11882 3695 3216 18 5 29 18 5 29 697 71 47
+5 +2 451 451
+1 * 451 451

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828 0 1828 1 0 0 1
+4 +1 1828 1828
+4 * 1828 1828
+1 * 1828 1828

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+3 * 902 0 902
+4 * 902
+4 * 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfi=(10)
cfn=(110)
calls=902 0x404380 726 
* * 9020 4510 3608
+5 * 902 902
+4 * 902 902
+1 * 902 902

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 902 0 902
+1 * 902
+3 * 902 0 902
+1 * 902
+4 * 902 0 902 1 0 0 1
+4 +2 902 902
+4 * 902
+3 * 902 0 902
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=902 0x40325e 113 
* * 5412 2706 1804
+5 * 902
+3 * 902 902
+4 * 902 902
+4 * 902 902
+4 * 902 902
+3 -1 902
+3 * 902
+3 * 902 0 902
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=902 0x40326c 148 
* * 27962 9020 10824 4 0 0 4
+5 +1 902 902
+4 * 902
+3 * 902 0 902
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=902 0x4031ec 159 
* * 169542 50558 31886 27 5 0 27 5 0 24866 734 1804
+5 * 902
jump=902 +28 * 
* * 
+28 * 902 0 0 1 0 0 1
+4 * 902 902
+1 * 902 902
+1 * 902 902

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 910 0 910 1 0 0 1
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 * 910 0 910
+4 +2 910 910
+5 * 910 0 0 0 0 0 0 0 0 910
+2 +1 910 910
+4 * 910 910
+4 * 910 910
+4 * 910
+3 * 910
+3 * 910 0 910
cfi=(5)
cfn=(160)
calls=910 0x4044d6 -65 
* * 110054 28247 15801 24 5 0 24 5 0 24158 741 1820
+5 +1 910 910
+1 * 910 910

fn=(12)
0x403b16 134 902 0 902
+1 * 902
+3 * 902 0 902
+1 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=902 0x4043ca -45 
* * 32472 11726 12628 4 0 4 4 0 4
+5 +1 902 902 0 1 0 0 1
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(20)
calls=902 0x404412 +43 
* * 322011 63484 58617 27 20 8 27 20 8 43782 1081 1804
+5 * 902
jump=902 +28 * 
* * 
+28 * 902
+4 * 902 902
+1 * 902 902
+1 * 902 902

fn=(14)
0x4043ca 90 902 0 902 1 0 0 1
+1 * 902
+3 * 902
+4 * 902 0 902 0 0 1 0 0 1
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfi=(4)
cfn=(16)
calls=902 0x404804 +24 
* * 16236 5412 6314 2 0 1 2 0 1
+5 * 902 902
+4 * 902 0 902 0 0 2 0 0 2
+7 * 902 902
+4 * 902 0 902 1 0 0 1
+8 * 902 902
+4 * 902 0 902
+8 +1 902 902
+1 * 902 902

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 902 0 902 1 0 0 1
+1 * 902
+3 * 902 0 902
+2 * 902 0 902
+2 * 902 0 902
+1 * 902 0 0 1 0 0 1
+4 * 902 0 902
+4 * 902 0 902
+4 +2 902 902
+4 * 902
+3 * 902 0 902
cfn=(82)
calls=902 0x4039fc 117 
* * 5412 2706 1804 2 0 0 2
+5 * 902
+3 * 902 0 902
cfi=(3)
cfn=(84)
calls=902 0x4039ed -88 
* * 5412 2706 1804
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(2)
calls=902 0x402d74 645 
* * 11726 5412 1804
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902
+3 * 902
+3 * 902 0 902 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=902 0x403a0a 134 
* * 371146 78177 71602 33 7 41 33 7 41 43214 1645 1804
+5 +4 902 902
+4 * 902
+3 * 902 0 902
cfn=(106)
calls=902 0x40325e 113 
* * 5412 2706 1804 1 0 0 1
+5 * 902
+3 * 902 902
+4 * 902 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(108)
calls=902 0x403a98 565 
* * 22550 9020 7216 2 0 0 2
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(112)
calls=902 0x403a68 547 
* * 22550 9020 7216
+5 * 902
+3 * 902
+3 * 902
+3 * 902
+3 * 902 0 902
cfi=(11)
cfn=(114)
calls=902 0x403ac9 -60 
* * 537378 182446 177940 7 1 40 7 1 40 20510 1115 1800
+5 -3 902 902
+4 * 902 0 902
+4 * 902
jump=902 +28 +4 
* * 
+28 +4 902
+4 * 902 902
+1 * 902 902
+2 * 902 902
+2 * 902 902
+1 * 902 902

fn=(188)
0x403d98 171 910 0 910 1 0 0 1
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 * 910 0 910
+4 +2 910 910
+5 * 910 0 0 0 0 0 0 0 0 910 8
+2 +1 910 910
+4 * 910 910
+4 * 910 910
+4 * 910
+3 * 910
+3 * 910 0 910
cfi=(5)
cfn=(190)
calls=910 0x40452a -65 
* * 123843 33240 20164 0 1 0 0 1 0 27935 64 1820
+5 +1 910 910
+1 * 910 910

fn=(22)
0x404236 167 910 0 910 1 0 0 1
+1 * 910
+3 * 910
+4 * 910 0 910 1 0 0 1
+4 * 910 0 910
+4 0 910 910
+5 0 910 0 0 0 0 0 0 0 0 910
+2 0 910 910
+4 0 910 910
+4 0 910
+5 0 910
+3 0 910
+3 0 910 0 910
fi=(6)
cfi=(5)
cfn=(26)
calls=910 0x404730 99 
* 0 287322 48553 49104 24 25 15 24 25 15 43210 1131 1820
+5 0 910
fi=(6)
jump=910 +7 0 
* 0 
+7 0 910 910
+1 0 910 910

fn=(42)
0x403ba4 565 902 0 902 1 0 0 1
+1 * 902
+3 * 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+4 * 902 0 902
+4 * 902
+4 * 902 0 0 1 0 0 1
+4 * 902
+3 * 902
+3 * 902 0 902
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=902 0x404468 726 
* * 9020 4510 3608 1 0 0 1
+5 * 902 902
+4 * 902 902
+1 * 902 902

fn=(46)
0x403b74 547 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+3 * 902 0 902
+4 * 902
+4 * 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfi=(10)
cfn=(44)
calls=902 0x404468 726 
* * 9020 4510 3608
+5 * 902 902
+4 * 902 902
+1 * 902 902

fn=(86)
0x403a0a 134 902 0 902
+1 * 902
+3 * 902 0 902
+1 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=902 0x4042e2 -45 
* * 32472 11726 12628 5 0 0 5
+5 +1 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902 1 0 0 1
cfn=(94)
calls=902 0x40432a +43 
* * 318830 60137 52660 27 7 41 27 7 41 43214 1645 1804
+5 * 902
jump=902 +28 * 
* * 
+28 * 902
+4 * 902 902
+1 * 902 902
+1 * 902 902

fn=(88)
0x4042e2 90 902 0 902 1 0 0 1
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 +1 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902 1 0 0 1
cfi=(4)
cfn=(90)
calls=902 0x4047b2 +24 
* * 16236 5412 6314 3 0 0 3
+5 * 902 902
+4 * 902 0 902
+7 * 902 902
+4 * 902 0 902
+8 * 902 902
+4 * 902 0 902
+8 +1 902 902
+1 * 902 902

fn=(156)
0x4031ec 159 902 0 902 1 0 0 1
+1 * 902
+3 * 902 0 902
+1 * 902
+4 * 902 0 902
+4 +2 902 902
+4 * 902 902 0 1 0 0 1
+4 * 902
+3 * 902 902
+4 * 902 902
+3 * 902
+3 * 902
+3 * 902
+4 * 902
+3 * 902 902
+4 * 902 902
+3 -1 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(158)
calls=902 0x403ce6 +11 
* * 123540 33420 20160 24 5 0 24 5 0 24866 734 1804
+5 +1 902 902
+4 * 902
+3 * 902 0 902
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=902 0x4031b8 -82 
* * 20746 7216 7216 1 0 0 1
+5 * 902
jump=902 +28 * 
* * 
+28 * 902
+4 * 902 902
+1 * 902 902
+1 * 902 902

fn=(172)
0x4031b8 79 902 0 902 1 0 0 1
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 902
+4 * 902
+3 * 902 0 902
cfi=(4)
cfn=(174)
calls=902 0x403ccc +42 
* * 12628 4510 4510
+5 * 902 902
+1 * 902 902

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1836 0 1836 1 0 0 1
+1 * 1836
+3 * 1836 0 1836
+4 +1 1836 1836
+4 * 1836 1836 0 0 2 0 0 2
+4 * 1836
+3 * 1836 1836
+4 * 1836 1836
+3 * 1836
+3 * 1836
+3 * 1836
+4 * 1836 1836
+1 * 1836 1836

fn=(106)
0x40325e 113 1828 0 1828 1 0 0 1
+1 * 1828
+3 * 1828 0 1828
+4 +1 1828 1828
+4 * 1828 1828
+1 * 1828 1828

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 918 0 918 1 0 0 1
+1 * 918
+3 * 918 0 918 0 0 1 0 0 1
+4 +1 918 918
+4 * 918 918
+1 * 918 918

fn=(82)
0x4039fc 117 918 0 918 1 0 0 1
+1 * 918
+3 * 918 0 918 1 0 0 1
+4 +1 918 918
+4 * 918 918
+1 * 918 918

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 +2 451 451
+4 * 451 451
+4 * 451 451
+4 * 451 451
+4 * 451
+3 * 451 0 0 0 0 0 0 0 0 451 9
jcnd=8/451 +51 +10 
* * 
+2 +3 443 443
+4 * 443 443
+4 * 443 443
+4 -1 443 443
+4 * 443
+3 * 443
+3 * 443 0 443
cfi=(3)
cfn=(222)
calls=443 0x403373 215 
* * 16834 5759 6202 0 28 2 0 28 2 443 2
+5 +2 443 443
+4 * 443 443
+4 * 443
+4 * 443 443
+4 * 443 0 443
+4 * 443
jump=443 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12610 3907 3385 35 9 9 35 9 9 849 67 47
+5 +2 451 451
+1 * 451 451

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804
+4 * 1804 0 1804 1 0 0 1
+4 +1 1804 1804
+4 * 1804
+3 * 1804 0 1804
cfi=(13)
cfn=(58)
calls=1804 0x404d8f -77 
* * 10824 5412 3608 1 0 0 1
+5 * 1804 1804
+1 * 1804 1804

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 918 0 918
+1 * 918
+3 * 918
+4 * 918 0 918 1 0 0 1
+4 * 918 0 918
+4 * 918 0 918
+4 +2 918 918
+4 * 918 918
+4 * 918
+3 * 918
+3 * 918
+4 * 918 0 918
+4 +1 918 918
+5 * 918 0 0 0 0 0 0 0 0 918
jcnd=8/918 +33 +2 
* * 
+2 +1 910 910
+4 * 910
+8 * 910 910
+4 * 910 910
+4 * 910
+3 * 910 0 0 1 0 0 1
+3 * 910 0 910 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=910 0x3877c83840 0 
* * 330138 110602 108787 11 2 20 11 2 20 19692 1134 905 225
* * 910 910 0 1 1 0 1 1 0 0 0 910
+5 +1 918 918
+4 * 918
+8 * 918 918
+4 * 918
+3 +1 918 918
+1 * 918 918

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 918 0 918
+1 * 918
+3 * 918
+4 * 918 0 918 1 0 0 1
+4 * 918 0 918
+4 * 918 0 918 0 0 1 0 0 1
+4 +2 918 918
+4 * 918 918
+4 * 918
+3 * 918
+3 * 918
+4 * 918 0 918
+4 +1 918 918
+5 * 918 0 0 0 0 0 0 0 0 918
jcnd=8/918 +33 +2 
* * 
+2 +1 910 910
+4 * 910
+8 * 910 910
+4 * 910 910
+4 * 910
+3 * 910
+3 * 910 0 910
cob=(2)
cfi=(9)
cfn=(78)
calls=910 0x3877c83840 0 
* * 330138 110602 108787 0 1 41 0 1 41 19692 1120 905
* * 910 910 0 0 0 0 0 0 0 0 0 910
+5 +1 918 918
+4 * 918
+8 * 918 918
+4 * 918
+3 +1 918 918
+1 * 918 918

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902 1 0 0 1
+4 * 902 0 902
+4 * 902 0 902
+4 +8 902 0 902
+4 +3 902 902
+4 * 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(74)
calls=902 0x404f37 -22 
* * 354272 120208 113898 14 3 3 14 3 3 20510 1130 1800 225
+5 +1 902 902
+1 * 902 902

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 902 0 902
+1 * 902
+3 * 902 0 902
+2 * 902 0 902
+1 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +4 902 902
+4 * 902
+3 * 902 0 902
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=902 0x404878 277 
* * 13530 5412 4510 1 0 0 1
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=902 0x404d44 277 
* * 22550 8118 7216 2 0 0 2
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(132)
calls=902 0x404d44 277 
* * 22550 8118 7216
+5 * 902
+3 * 902
+3 * 902
+3 * 902 0 902
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=902 0x404d5e -49 
* * 367802 124718 119310 1 1 40 1 1 40 20510 1115 1800
+5 +1 902
+4 * 902 902
+1 * 902 902
+2 * 902 902
+1 * 902 902

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 902 0 902
+1 * 902
+3 * 902 0 902
+1 * 902
+4 * 902 0 902 1 0 0 1
+4 * 902 0 902
+4 * 902 0 902
+4 +10 902 902
+4 * 902
+3 * 902 0 902
cfn=(56)
calls=902 0x404c38 288 
* * 13530 5412 4510 3 0 0 3
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(56)
calls=902 0x404c38 288 
* * 13530 5412 4510
+5 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=902 0x404c52 -36 
* * 451688 152680 147272 20 3 4 20 3 4 20510 1130 1800 225
+5 +1 902
+4 * 902 902
+1 * 902 902
+1 * 902 902

fn=(60)
0x404c52 424 902 0 902
+1 * 902
+3 * 902 0 902
+2 * 902 0 902
+1 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +4 902 902
+4 * 902
+3 * 902 0 902
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=902 0x40492d 277 
* * 13530 5412 4510 2 0 0 2
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=902 0x404d9d 277 
* * 22550 8118 7216 2 0 1 2 0 1
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(66)
calls=902 0x404d9d 277 
* * 22550 8118 7216
+5 * 902
+3 * 902
+3 * 902
+3 * 902 0 902
cfn=(72)
calls=902 0x404db7 -49 
* * 367802 124718 119310 15 3 3 15 3 3 20510 1130 1800 225
+5 +1 902
+4 * 902 902
+1 * 902 902
+2 * 902 902
+1 * 902 902

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 950 0 950 1 0 0 1
+1 * 950
+3 * 950
+4 * 950 0 950
+4 +1 950 950
+4 * 950
+3 * 950 0 950 1 0 0 1
cfi=(13)
cfn=(64)
calls=950 -33 -66 
* * 5700 2850 1900
+5 * 950 950
+1 * 950 950

fn=(66)
0x404d9d 277 1804 0 1804
+1 * 1804
+3 * 1804
+4 * 1804 0 1804
+4 +1 1804 1804
+4 * 1804
+3 * 1804 0 1804
cfi=(13)
cfn=(68)
calls=1804 0x404f1a -58 
* * 28864 10824 9020 2 0 1 2 0 1
+5 * 1804 1804
+1 * 1804 1804

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 902 0 902
+1 * 902
+3 * 902 0 902
+1 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +10 902 902
+4 * 902
+3 * 902 0 902
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=902 0x404bc6 288 
* * 13530 5412 4510 3 0 0 3
+5 * 902
+3 * 902 902
+4 * 902
+3 * 902 0 902
cfn=(122)
calls=902 0x404bc6 288 
* * 13530 5412 4510
+5 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(126)
calls=902 0x404be0 -36 
* * 451688 152680 147272 4 1 40 4 1 40 20510 1115 1800
+5 +1 902
+4 * 902 902
+1 * 902 902
+1 * 902 902

fn=(128)
0x404878 277 950 0 950
+1 * 950
+3 * 950
+4 * 950 0 950 1 0 0 1
+4 +1 950 950
+4 * 950
+3 * 950 0 950
cfi=(13)
cfn=(130)
calls=950 -33 -66 
* * 5700 2850 1900 0 0 1 0 0 1
+5 * 950 950
+1 * 950 950

fn=(132)
0x404d44 277 1804 0 1804
+1 * 1804
+3 * 1804
+4 * 1804 0 1804
+4 +1 1804 1804
+4 * 1804
+3 * 1804 0 1804
cfi=(13)
cfn=(134)
calls=1804 0x404e98 -58 
* * 28864 10824 9020 2 0 0 2
+5 * 1804 1804
+1 * 1804 1804

fn=(138)
0x404d5e 379 902 0 902
+1 * 902
+3 * 902
+4 * 902 0 902
+4 * 902 0 902
+4 * 902 0 902
+4 +8 902 0 902
+4 +3 902 902
+4 * 902 902
+4 * 902 902
+4 * 902
+3 * 902
+3 * 902 0 902
cfn=(140)
calls=902 0x404eb5 -22 
* * 354272 120208 113898 1 1 40 1 1 40 20510 1115 1800
+5 +1 902 902
+1 * 902 902

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804
+4 * 1804 0 1804
+4 +1 1804 1804
+4 * 1804
+3 * 1804 0 1804
cfi=(13)
cfn=(124)
calls=1804 0x404d36 -77 
* * 10824 5412 3608 2 0 0 2
+5 * 1804 1804
+1 * 1804 1804

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804 0 1804
+4 +1 1804 1804
+4 * 1804 1804
+1 * 1804 1804

fn=(110)
0x404380 726 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804 0 1804
+4 * 1804 0 1804
+4 * 1804 1804
+4 * 1804 1804
+3 * 1804 1804
+4 * 1804 0 1804
+3 * 1804 1804
+1 * 1804 1804

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804 0 1804
+4 +1 1804 1804
+4 * 1804 1804
+1 * 1804 1804

fn=(44)
0x404468 726 1804 0 1804
+1 * 1804
+3 * 1804 0 1804
+4 * 1804 0 1804
+4 * 1804 1804
+4 * 1804 1804
+3 * 1804 1804
+4 * 1804 0 1804 1 0 0 1
+3 * 1804 1804
+1 * 1804 1804

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 910 0 910 1 0 0 1
+1 * 910
+3 * 910 0 910
+4 * 910 0 910
+4 * 910 910
+1 * 910 910

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 910 0 910 1 0 0 1
+1 * 910
+3 * 910 0 910
+4 * 910 0 910 1 0 0 1
+4 * 910 910
+1 * 910 910

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 910 0 910 1 0 0 1
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 +4 910 910
+4 * 910 910
+4 * 910
+3 * 910
+3 * 910 0 910
cfn=(184)
calls=910 0x40454c -14 
* * 5460 1820 2730 1 0 0 1
+5 +2 910 910
+1 * 910 910

fn=(150)
0x40326c 148 910 0 910
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 * 910 0 910
+4 +3 910 910 0 1 0 0 1
+4 * 910 910
+4 * 910
+3 * 910
+3 * 910 0 910
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=910 0x403d1a -29 
* * 16380 5460 6370 3 0 0 3
+5 +1 910 910
+1 * 910 910

fn=(180)
0x40334a 148 910 0 910
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 * 910 0 910
+4 +3 910 910
+4 * 910 910
+4 * 910
+3 * 910
+3 * 910 0 910
cfn=(182)
calls=910 0x403dcc -29 
* * 16380 5460 6370 2 0 0 2
+5 +1 910 910
+1 * 910 910

fn=(152)
0x403d1a 122 910 0 910 1 0 0 1
+1 * 910
+3 * 910
+4 * 910 0 910
+4 * 910 0 910
+4 +4 910 910
+4 * 910 910
+4 * 910
+3 * 910
+3 * 910 0 910
cfn=(154)
calls=910 0x4044f8 -14 
* * 5460 1820 2730 2 0 0 2
+5 +2 910 910
+1 * 910 910

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2421 443 441 0 5 7 0 5 7 338 50 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3182 672 613 12 8 5 12 8 5 499 55 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 451 0 451 1 0 0 1
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 +1 451 451
+4 * 451
+3 * 451 0 451
cfi=(2)
cfn=(2)
calls=451 0x402d74 645 
* * 5863 2706 902
+5 * 451
+3 * 451 0 451
+3 +1 451 451
+6 * 451 0 451
+3 * 451 451
+6 * 451 0 451
+3 +1 451 451
+6 * 451 0 451 1 0 0 1
+3 * 451 451
+6 * 451 0 451
+3 +2 451 0 451
+7 * 451
jump=451 +86 * 
* * 
+2 +1 102377 102377
+3 * 102377
+3 * 102377 102377
+4 * 102377
+3 * 102377
+3 * 102377 0 102377
cfi=(2)
cfn=(144)
calls=102377 0x402d9a 770 
* * 1126147 511885 307131
+5 * 102377 102377
+4 * 102377 102377
+5 * 102377
+4 * 102377 0 102377
+5 +1 102377 102377
+3 * 102377
+3 * 102377 102377
+4 * 102377
+3 * 102377
+3 * 102377 0 102377
cfi=(2)
cfn=(146)
calls=102377 0x402dba 770 
* * 1126147 511885 307131 1 0 0 1
+5 * 102377 102377
+2 * 102377
+4 * 102377 102377
+5 * 102377
+4 * 102377 0 102377
+5 -2 102377 0 102377
+4 * 102377 102377
+3 * 102377
+3 * 102377 102377
+3 * 102377 0 0 0 0 0 0 0 0 102377 452
jcnd=101926/102377 -93 +1 
* * 
-9 * 451 451 0 1 0 0 1
+3 * 451
+3 * 451 451
+3 * 451 0 0 0 0 0 0 0 0 451
jcnd=451/451 -93 +1 
* * 
+2 +4 451 451
+3 * 451
+3 * 451
+4 * 451 451 0 1 0 0 1
+5 * 451
+4 * 451
+3 * 451 0 451
+5 +1 451 451
+3 * 451
+3 * 451
+4 * 451 451
+5 * 451
+4 * 451
+3 * 451 0 451
+5 +1 451 0 451
+7 * 451
jump=451 0x4016ee * 
* * 
+2 +1 102377 102377
+3 * 102377
+3 * 102377 102377
+4 * 102377
+3 * 102377 0 0 1 0 0 1
+3 * 102377 0 102377
cfi=(2)
cfn=(146)
calls=102377 0x402dba 770 
* * 1126147 511885 307131
+5 * 102377 102377
+2 * 102377
+4 * 102377 102377
+5 * 102377 0 102377
+5 +1 102377 102377
+3 * 102377
+3 * 102377 102377
+4 * 102377
+3 * 102377
+3 * 102377 0 102377
cfi=(2)
cfn=(144)
calls=102377 0x402d9a 770 
* * 1126147 511885 307131
+5 * 102377 102377
+4 * 102377 102377
+5 * 102377 0 102377
+5 +1 102377 102377
+5 * 102377 102377
+5 * 102377 102377
+5 * 102377
+4 * 102377 0 102377
+5 +1 102377 102377
+5 * 102377 102377
+5 * 102377 102377
+5 * 102377
+4 * 102377 0 102377
+5 -4 102377 0 102377
+4 * 102377 102377
+3 * 102377
+3 * 102377 102377
+3 * 102377 0 0 0 0 0 0 0 0 102377 452
jcnd=101926/102377 0x401672 +1 
* * 
-9 * 451 451 0 1 0 0 1
+3 * 451
+3 * 451 451
+3 * 451 0 0 0 0 0 0 0 0 451
jcnd=451/451 0x401672 +1 
* * 
+6 +6 451 451 0 1 0 0 1
+5 * 451 451
+5 * 451 0 451
+5 +2 451 451
+3 +1 451 0 451
+3 * 451 451
+5 * 451 451
+1 * 451 451

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 451
+7 * 451
+7 * 451
+3 * 451
+3 * 451 0 451
cfi=(2)
cfn=(4)
calls=451 0x4030b2 310 
* * 515125 154099 145394 68 23 16 68 23 16 32164 1361 1802 225
+5 * 451
+7 * 451
+7 * 451
+3 * 451
+3 * 451 0 451
cfi=(2)
cfn=(80)
calls=451 0x402ff4 310 
* * 513849 152445 142444 48 8 79 48 8 79 31941 1649 1802
+5 * 451 0 0 1 0 0 1
+7 * 451
+7 * 451
+3 * 451
+3 * 451 0 451
cfn=(142)
calls=451 0x401585 -52 
* * 10676523 4720617 2464715 8 0 0 8 0 0 205656 904
+5 * 451 0 451
+8 * 451 451
+6 * 451 0 451
+6 * 451
+7 * 451
+3 * 451 0 451
cfi=(2)
cfn=(148)
calls=451 0x402df4 414 
* * 112282 35201 24963 33 5 0 33 5 0 12433 370 902
+5 * 451
+7 * 451
+3 * 451 0 451 1 0 0 1
cfi=(2)
cfn=(178)
calls=451 0x402e74 414 
* * 119160 37689 27143 7 1 0 7 1 0 14317 30 902
+5 +2 451
+7 * 451
+7 * 451
+3 * 451
+3 * 451 0 451
cfi=(2)
cfn=(4)
calls=451 0x4030b2 310 
* * 514742 154069 145283 2 1 1 2 1 1 32128 850 1802
+5 * 451
+7 * 451
+7 * 451
+3 * 451
+3 * 451 0 451
cfi=(2)
cfn=(80)
calls=451 0x402ff4 310 
* * 512837 152376 142276 0 0 2 0 0 2 31783 1111 1802
+5 * 451 451
+6 * 451 0 0 1 0 0 1
+7 * 451
+7 * 451 0 451
+6 * 451 451
+8 * 451
+3 * 451
+3 * 451 0 451
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=451 0x401719 -33 
* * 4940705 2057462 1132912 4 0 0 4 0 0 102828 452
+5 * 451 0 451
+8 * 451 451
+6 * 451 0 451
+6 * 451
+7 * 451 0 0 1 0 0 1
+3 * 451 0 451
cfi=(2)
cfn=(148)
calls=451 0x402df4 414 
* * 112282 35201 24963 0 0 0 0 0 0 12433 364 902
+5 * 451
+7 * 451
+3 * 451 0 451
cfi=(2)
cfn=(178)
calls=451 0x402e74 414 
* * 119160 37689 27143 0 0 0 0 0 0 14317 25 902
+5 +2 451 451
+7 * 451
+3 * 451 0 451
cfi=(2)
cfn=(2)
calls=451 0x402d74 645 
* * 5863 2706 902
+5 * 451 451
+6 * 451
+3 * 451
+3 * 451
+3 * 451 451
+7 * 451
+3 * 451 0 0 1 0 0 1
+3 * 451 0 451
cfi=(2)
cfn=(144)
calls=451 0x402d9a 770 
* * 4961 2255 1353
+5 * 451
+3 * 451
+7 * 451
+3 * 451
+3 * 451 0 451
cfi=(2)
cfn=(200)
calls=451 0x402eda 901 
* * 41322 15569 11898 38 37 11 38 37 11 1743 78 47
+5 +1 451 451
+7 * 451
+3 * 451 0 451
cfi=(2)
cfn=(10)
calls=451 0x402f54 645 
* * 5863 2706 902 0 1 0 0 1
+5 * 451 451
+6 * 451
+3 * 451
+3 * 451
+3 * 451 451
+7 * 451 0 0 1 0 0 1
+3 * 451
+3 * 451 0 451
cfi=(2)
cfn=(146)
calls=451 0x402dba 770 
* * 4961 2255 1353
+5 * 451
+3 * 451
+7 * 451
+3 * 451
+3 * 451 0 451
cfi=(2)
cfn=(244)
calls=451 0x402f7a 901 
* * 40594 15357 11729 19 33 45 19 33 45 1591 71 47
+5 +1 451 451
+7 * 451
+3 * 451 0 451
cfi=(2)
cfn=(10)
calls=451 0x402f54 645 
* * 5863 2706 902
+5 * 451 451
+6 * 451
+3 * 451
+3 * 451
+3 * 451 451 0 1 0 0 1
+7 * 451
+3 * 451
+3 * 451 0 451
cfi=(2)
cfn=(146)
calls=451 0x402dba 770 
* * 4961 2255 1353
+5 * 451 451
+2 * 451
+4 * 451 451
+8 * 451 451
+8 * 451 0 451
+8 +1 451 451
+7 * 451
+3 * 451 0 451
cfi=(2)
cfn=(2)
calls=451 0x402d74 645 
* * 5863 2706 902
+5 * 451 451 0 1 0 0 1
+6 * 451
+3 * 451
+3 * 451
+3 * 451 451
+7 * 451
+3 * 451
+3 * 451 0 451
cfi=(2)
cfn=(144)
calls=451 0x402d9a 770 
* * 4961 2255 1353
+5 * 451 451
+4 * 451 451
+8 * 451
+4 * 451 451
+8 * 451
+3 * 451 0 451
+8 +2 451 0 451
+7 -12 451 451
+8 * 451 451
+7 * 451 0 0 0 0 0 0 0 0 451 2
jcnd=1/451 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 451
+7 * 451
+3 * 451 0 451
cfi=(2)
cfn=(2)
calls=451 0x402d74 645 
* * 5863 2706 902 2 0 1 2 0 1
+5 * 451
+3 * 451 451
+7 * 451
+3 * 451 0 451
cfi=(2)
cfn=(2)
calls=451 0x402d74 645 
* * 5863 2706 902 0 1 0 0 1
+5 * 451
+3 * 451 0 0 0 0 0 0 0 0 451 1
+2 * 451 0 0 1 0 0 1
+5 * 451
jump=451 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 451
+2 * 451 0 0 0 0 0 0 0 0 451
jcnd=451/451 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 451 0 451
+1 * 451
+3 * 451
+4 * 451 0 451
+4 * 451 0 451
+4 * 451 0 451
+5 +1 451 451
+4 * 451
+3 * 451 0 451
cfi=(2)
cfn=(2)
calls=451 0x402d74 645 
* * 5863 2706 902
+5 * 451
+3 * 451 0 451
+3 +1 451 451 0 1 0 0 1
+6 * 451 0 451
+3 * 451 451
+6 * 451 0 451
+3 +2 451 0 451
+7 * 451
jump=451 +86 * 
* * 
+2 +1 102377 102377
+3 * 102377
+3 * 102377 102377
+4 * 102377
+3 * 102377
+3 * 102377 0 102377
cfi=(2)
cfn=(144)
calls=102377 0x402d9a 770 
* * 1126147 511885 307131
+5 * 102377 102377
+4 * 102377 102377
+5 * 102377
+4 * 102377 0 102377
+5 +1 102377 102377
+3 * 102377
+3 * 102377 102377
+4 * 102377
+3 * 102377
+3 * 102377 0 102377
cfi=(2)
cfn=(146)
calls=102377 0x402dba 770 
* * 1126147 511885 307131
+5 * 102377 102377
+2 * 102377
+4 * 102377 102377
+5 * 102377
+4 * 102377 0 102377
+5 -2 102377 0 102377
+4 * 102377 102377
+3 * 102377
+3 * 102377 102377
+3 * 102377 0 0 0 0 0 0 0 0 102377 452
jcnd=101926/102377 -93 +1 
* * 
-9 * 451 451 0 1 0 0 1
+3 * 451
+3 * 451 451
+3 * 451 0 0 0 0 0 0 0 0 451
jcnd=451/451 -93 +1 
* * 
+2 +4 451 451
+3 * 451
+3 * 451 0 0 1 0 0 1
+4 * 451 451
+5 * 451
+4 * 451
+3 * 451 0 451
+5 +1 451 451
+3 * 451
+3 * 451
+4 * 451 451
+5 * 451
+4 * 451
+3 * 451 0 451
+5 +1 451 451
+5 * 451 451
+5 * 451 451
+5 * 451 0 0 1 0 0 1
+4 * 451
+3 * 451 0 451
+5 +2 451 451
+3 +1 451 0 451
+3 * 451 451
+5 * 451 451
+1 * 451 451

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1820 0 1820 1 0 0 1
+5 0 1820 0 1820
+5 0 1820
+3 0 1820 0 1820
+5 0 1820
+4 0 1820 1820 0 0 1 0 0 1
+7 0 1820 1820 0 0 1 0 0 1
+3 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820
+6 0 1820 1820 0 0 1 0 0 1
+7 0 1820 1820 0 1 1 0 1 1
+4 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820
+2 0 1820 1820 0 0 1 0 0 1
+3 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820
jcnd=1820/1820 +97 0 
* 0 
+18 0 1820
+3 0 1820
+3 0 1820 0 1820
cfn=(38) _int_malloc
calls=1820 0x3877c79a00 0 
* 0 419344 52128 61483 45 32 60 45 32 60 64173 2797
+5 0 1820
+3 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820
+2 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820
+2 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820 22
+2 0 1820 1820
+7 0 1820 0 0 0 0 0 0 0 0 1820
jcnd=1820/1820 +13 0 
* 0 
+13 0 1820 0 1820
+2 0 1820 0 0 0 0 0 0 0 0 1820 12
+6 0 1820
+3 0 1820 1820
+4 0 1820 1820
+5 0 1820 1820
+5 0 1820
+4 0 1820 1820
+1 0 1820 0 0 1 0 0 1
+5 0 1820 1820 0 0 1 0 0 1
+7 0 1820 0 0 0 0 0 0 0 0 1820
jcnd=1820/1820 +14 0 
* 0 
+14 0 1820 0 1820 1 0 0 1
+3 0 1820 0 0 0 0 0 0 0 0 1820
+6 0 1820
jump=1820 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1820 0 1820 1 0 0 1
+2 0 1820
+3 0 1820
+3 0 1820 0 1820
+2 0 1820
+3 0 1820 0 1820
+1 0 1820
+3 0 1820 0 1820
+1 0 1820
+3 0 1820
+4 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820
+6 0 1820
+4 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820 4
jcnd=10/1820 0x3877c838d1 0 
* 0 
+2 0 1810
+3 0 1810
+3 0 1810
+3 0 1810
+3 0 1810
+3 0 1810 0 0 0 0 0 0 0 0 1810
jcnd=1810/1810 +41 0 
* 0 
+41 0 1810 0 0 1 0 0 1
+3 0 1810 0 0 0 0 0 0 0 0 1810
jcnd=1810/1810 0x3877c839c0 0 
* 0 
+24 0 1810
+3 0 1810
+4 0 1810
+3 0 1810
+3 0 1810
+3 0 1810
+3 0 1810
+3 0 1810 0 0 0 0 0 0 0 0 1810 902
jcnd=914/1810 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 906
+10 0 906 906 0 0 2 0 0 2
+3 0 906
+4 0 906 0 906
+3 0 906
+4 0 906
+4 0 906 0 0 0 0 0 0 0 0 906
jcnd=906/906 -18 0 
* 0 
-18 0 2774 2774
+3 0 2774
+4 0 2774 0 2774
+3 0 2774
+4 0 2774
+4 0 2774 0 0 0 0 0 0 0 0 2774 8
jcnd=1868/2774 -18 0 
* 0 
+2 0 1820
+4 0 1820
+3 0 1820 1820
+1 0 1820 1820
+1 0 1820 1820
+2 0 1820 1820 0 1 0 0 1
+2 0 1820 1820
0x3877c839c0 0 1810 0 0 1 0 0 1
+3 0 1810
+3 0 1810
+3 0 1810
+4 0 1810 0 1810 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1810 0x3877c89b20 0 
* 0 557410 208424 204804 6 1 60 6 1 60 26624 1340 1810 225
+5 0 1810
jump=1810 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1820 1820 0 1 1 0 1 1
+7 0 1820 1820 0 0 1 0 0 1
+3 0 1820
+3 0 1820 0 0 1 0 0 1 0 0 1820
+6 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820
+6 0 1820 1820
+4 0 1820
+4 0 1820
+2 0 1820 0 0 0 0 0 0 0 0 1820
+2 0 1820
+2 0 1820
+7 0 1820 0 0 0 0 0 0 0 0 1820
jcnd=1820/1820 +14 0 
* 0 
+14 0 1820
+2 0 1820
cfn=(170) _int_free
calls=1820 0x3877c78650 0 
* 0 177477 46927 26865 19 2 0 19 2 0 42993 805

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 9
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12 1
jcnd=11/12 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1820 0 1820 1 0 0 1
+2 0 1820 0 1820
+2 0 1820 0 1820
+2 0 1820
+3 0 1820 0 1820
+2 0 1820 0 1820
+1 0 1820 0 1820
+1 0 1820
+3 0 1820
+4 0 1820 1820
+4 0 1820 0 1820
+4 0 1820
+3 0 1820
+4 0 1820
+3 0 1820
+3 0 1820
+3 0 1820 0 0 1 0 0 1 0 0 1820
+6 0 1820
+4 0 1820 0 0 0 0 0 0 0 0 1820
+6 0 1820
+4 0 1820 0 0 0 0 0 0 0 0 1820
+6 0 1820 1820
+7 0 1820 0 0 0 0 0 0 0 0 1820 2
jcnd=1696/1820 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1696
+2 0 1696 0 0 0 0 0 0 0 0 1696
+6 0 1696 1696 0 1 0 0 1
+4 0 1696
+3 0 1696
+2 0 1696 0 0 0 0 0 0 0 0 1696
jcnd=1696/1696 0x3877c78a40 0 
* 0 
+6 0 1696 1696
+4 0 1696
+3 0 1696 0 0 0 0 0 0 0 0 1696
+6 0 1696 1696
+5 0 1696
+4 0 1696 0 0 0 0 0 0 0 0 1696
jcnd=1696/1696 0x3877c7907c 0 
* 0 
+6 0 1696 1696
+5 0 1696
+4 0 1696 0 0 0 0 0 0 0 0 1696
+6 0 1696
+4 0 1696 0 0 1 0 0 1 0 0 1696
+6 0 1696
+4 0 1696 1696
+7 0 1696 0 0 0 0 0 0 0 0 1696
+6 0 1696 1696
+6 0 1696
+2 0 1696 0 0 0 0 0 0 0 0 1696
+6 0 1696 1696
+4 0 1696 0 0 0 0 0 0 0 0 1696 5
jcnd=1692/1696 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1696 1696 0 1 0 0 1
+4 0 1696 0 0 0 0 0 0 0 0 1696 656
jcnd=708/1696 0x3877c78bf0 0 
* 0 
+6 0 988 988 0 0 1 0 0 1
+6 0 988 0 0 1 0 0 1 0 0 988 65
jcnd=61/988 0x3877c78a78 0 
* 0 
+6 0 927 927
+5 0 927 927
+5 0 927 927
+4 0 927 0 0 0 0 0 0 0 0 927
+6 0 927 927
+4 0 927 0 0 0 0 0 0 0 0 927
+6 0 927 927
+9 0 927 0 927
+4 0 927 0 927
+4 0 927 0 0 0 0 0 0 0 0 927 4
jcnd=919/927 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 927
+3 0 927
+4 0 927 927
+4 0 927 927
+4 0 927 0 0 0 0 0 0 0 0 927
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 988
+7 0 988 0 988
+4 0 988 0 988
+4 0 988 0 0 0 0 0 0 0 0 988 69
jcnd=441/988 +18 0 
* 0 
+2 0 547 0 547
+8 0 547 0 547
+8 0 547 0 547
+4 0 547
+3 0 547 0 547 1 0 0 1
+4 0 547
+4 0 547 0 547
+4 0 547 0 547
+4 0 547
+7 0 547 0 0 0 0 0 0 0 0 547
jcnd=547/547 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 708
+7 0 708 0 0 0 0 0 0 0 0 708
jcnd=708/708 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1696 0 0 1 0 0 1
+5 0 1696 1696
+4 0 1696 1696
+7 0 1696 0 0 0 0 0 0 0 0 1696
jcnd=1696/1696 +16 0 
* 0 
+16 0 1696 0 1696
+5 0 1696 0 0 0 0 0 0 0 0 1696
+6 0 1696
+3 0 1696
jump=1696 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1696 1696 0 1 0 0 1
+4 0 1696
+2 0 1696 0 0 0 0 0 0 0 0 1696
+6 0 1696 1696
+7 0 1696 0 0 0 0 0 0 0 0 1696
jcnd=1696/1696 +15 0 
* 0 
+15 0 1696 0 1696 1 0 0 1
+4 0 1696 0 0 0 0 0 0 0 0 1696 2
+6 0 1696
+4 0 1696 1696
+1 0 1696 1696
+1 0 1696 1696
+2 0 1696 1696
+2 0 1696 1696
+2 0 1696 1696
+2 0 1696 1696
0x3877c78bf0 0 708 0 0 1 0 0 1
+3 0 708 0 708
+4 0 708
+3 0 708
+4 0 708 0 708 1 0 0 1
+4 0 708
jump=708 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1696 1696 0 1 1 0 1 1
+4 0 1696 0 0 1 0 0 1
+7 0 1696
+4 0 1696
+3 0 1696
+3 0 1696 0 0 0 0 0 0 0 0 1696
jcnd=1696/1696 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1810 0 0 1 0 0 1
+7 0 1810
+3 0 1810
+3 0 1810 1810 0 0 1 0 0 1
+4 0 1810
+4 0 1810 0 0 0 0 0 0 0 0 0 0 1810 225
jump=224 0x3877c89be8 0 
* 0 
jump=234 0x3877c89bd0 0 
* 0 
jump=224 0x3877c89bb8 0 
* 0 
jump=224 +11 0 
* 0 
jump=224 0x3877c89c48 0 
* 0 
jump=226 0x3877c89c30 0 
* 0 
jump=224 0x3877c89c18 0 
* 0 
jump=230 0x3877c89c00 0 
* 0 
+11 0 224 224
+3 0 224
+4 0 224
+4 0 224 224
+4 0 224
+4 0 224 0 224
+4 0 224
+9 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-40 0 25262 25262
+4 0 25262 0 25262 0 0 3 0 0 3
+4 0 25262 25262
+4 0 25262 0 25262 0 0 15 0 0 15
+4 0 25262 25262
+4 0 25262 0 25262 0 0 19 0 0 19
+4 0 25262 25262
+4 0 25262 0 25262
+4 0 25262
+4 0 25262
+4 0 25262 0 0 0 0 0 0 0 0 25262 1336
jcnd=1774/25262 0x3877c89c60 0 
* 0 
-32 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226
+4 0 226
+4 0 226 0 0 0 0 0 0 0 0 226
jcnd=10/226 0x3877c89c60 0 
* 0 
-24 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-16 0 230 230 0 1 0 0 1
+4 0 230 0 230
+4 0 230 0 0 1 0 0 1
+4 0 230
+4 0 230 0 0 0 0 0 0 0 0 230 4
jcnd=10/230 0x3877c89c60 0 
* 0 
+6 0 24356
+4 0 24356 24356
+3 0 24356 0 24356 0 0 1 0 0 1
+3 0 24356 24356
+4 0 24356 0 24356 0 0 3 0 0 3
+4 0 24356 24356
+4 0 24356 0 24356 0 0 18 0 0 18
+4 0 24356 24356
+4 0 24356 0 24356
+4 0 24356
jump=24356 -80 0 
* 0 
-30 0 224 224
+3 0 224 0 224
+3 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224 0 0 1 0 0 1
+4 0 224 224
+4 0 224 0 224
+4 0 224
jump=224 -80 0 
* 0 
-24 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234
jump=234 -80 0 
* 0 
-16 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
jump=224 -80 0 
* 0 
+8 0 224 224
+3 0 224
+4 0 224 0 0 1 0 0 1
+4 0 224
+4 0 224
jump=224 -39 0 
* 0 
+9 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+6 0 234 234
+3 0 234
+4 0 234
jump=234 -72 0 
* 0 
+8 0 224
+4 0 224 224
+3 0 224 0 0 0 0 0 0 0 0 224
+2 0 224
+4 0 224
jump=224 -99 0 
* 0 
+11 0 230 230 0 1 0 0 1
+3 0 230
+4 0 230
+4 0 230
+4 0 230
jump=230 0x3877c89b78 0 
* 0 
+9 0 224 224
+3 0 224
+4 0 224
+4 0 224
+4 0 224
jump=224 0x3877c89b70 0 
* 0 
+9 0 226 226
+3 0 226
+4 0 226
+4 0 226
+4 0 226
jump=226 0x3877c89b68 0 
* 0 
+9 0 224 224
+3 0 224
+4 0 224
+4 0 224
+4 0 224
jump=224 0x3877c89b60 0 
* 0 
+9 0 1810 0 1810 1 0 0 1
+3 0 1810 1810

fn=(104) alloc_perturb
0x3877c77180 0 1686 1686 0 1 0 0 1
+6 0 1686
+2 0 1686 0 0 0 0 0 0 0 0 1686 1
+2 0 1686 1686

fn=(38)
0x3877c79a00 0 1820 0 1820 1 0 0 1
+2 0 1820
+3 0 1820 0 1820
+2 0 1820 0 1820
+2 0 1820 0 1820 0 0 1 0 0 1
+2 0 1820
+3 0 1820 0 1820
+1 0 1820 0 1820
+1 0 1820
+4 0 1820
+4 0 1820 0 0 0 0 0 0 0 0 1820
+6 0 1820
+4 0 1820
+6 0 1820
+3 0 1820
+4 0 1820
+4 0 1820
+4 0 1820
+3 0 1820 0 0 0 0 0 0 0 0 1820
+6 0 1820 1820 0 1 1 0 1 1
+7 0 1820 0 0 0 0 0 0 0 0 1820 5
jcnd=1698/1820 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1686
+4 0 1686 1686
+1 0 1686 1686
+1 0 1686 1686
+2 0 1686 1686
+2 0 1686 1686
+2 0 1686 1686
+2 0 1686 1686
+7 0 1715
+7 0 1715 0 0 1 0 0 1 0 0 1715 7
jcnd=812/1715 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 11 0 0 11
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 812 0 0 1 0 0 1
+3 0 812
+4 0 812
+4 0 812 0 0 1 0 0 1 0 0 812
jcnd=812/812 0x3877c7a1a4 0 
* 0 
+30 0 812 812
+6 0 812
+5 0 812 0 0 0 0 0 0 0 0 812 1
jcnd=811/812 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 894 237 190 8 2 0 8 2 0 184 24
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1714 0 0 1 0 0 1
+3 0 1714
+3 0 1714
+3 0 1714
+4 0 1714
+3 0 1714
+4 0 1714 0 1714
+5 0 1714
+3 0 1714 0 1714
+4 0 1714 0 1714
+4 0 1714 0 1714
+5 0 1714
+3 0 1714
+3 0 1714
+3 0 1714
+3 0 1714
+4 0 1714
+4 0 1714 0 0 1 0 0 1
+4 0 1714 0 1714
+4 0 1714
+4 0 1714 0 1714
+5 0 1714 0 1714
+5 0 1714
+3 0 1714
+3 0 1714 0 1714
+5 0 1714
+5 0 1714
+3 0 1714 0 1714
+4 0 1714 0 1714
+4 0 1714
+6 0 1714 0 1714
+4 0 1714 0 1714
+5 0 1714 0 0 1 0 0 1
+3 0 1714
+3 0 1714
+3 0 1714
jump=1714 +87 0 
* 0 
+8 0 1185
+3 0 1185
+4 0 1185
+2 0 1185
+2 0 1185
+3 0 1185
+3 0 1185
+3 0 1185
+2 0 1185
+2 0 1185
+5 0 1185
+2 0 1185 1185 0 0 2 0 0 2
+4 0 1185
+3 0 1185
+4 0 1185 0 1185
+4 0 1185 0 1185 0 0 1 0 0 1
+8 0 1185
+7 0 1185 0 1185
+4 0 1185 0 1185 0 0 2 0 0 2
+4 0 1185 0 1185
+4 0 1185 0 0 0 0 0 0 0 0 1185
-38 0 537
+3 0 537
+4 0 537 0 537
+4 0 537 0 537
+8 0 537
+7 0 537 0 537
+4 0 537 0 537
+4 0 537 0 537
+4 0 537 0 0 0 0 0 0 0 0 537
+6 0 3437 3437 0 1 0 0 1
+4 0 3437
+3 0 3437 0 0 0 0 0 0 0 0 3437 149
jcnd=1667/3437 0x3877c79ef0 0 
* 0 
+6 0 1770 1770
+4 0 1770 1770 0 0 1 0 0 1
+4 0 1770
+4 0 1770 0 0 0 0 0 0 0 0 1770
+6 0 1770 1770 0 1 1 0 1 1
+7 0 1770 0 0 0 0 0 0 0 0 1770 2
+6 0 1770
+4 0 1770
+7 0 1770 0 0 0 0 0 0 0 0 1770 6
jcnd=860/1770 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1751
+3 0 1751 0 1751
+4 0 1751 0 1751
+5 0 1751 0 0 0 0 0 0 0 0 1751 17
jcnd=29/1751 0x3877c7a090 0 
* 0 
+6 0 1722
+7 0 1722 0 0 0 0 0 0 0 0 1722 390
jcnd=1185/1722 0x3877c79c50 0 
* 0 
+6 0 537 0 0 1 0 0 1
+3 0 537
+4 0 537
+4 0 537 0 0 0 0 0 0 0 0 537
+6 0 537
+3 0 537
+4 0 537
+2 0 537
+2 0 537
+3 0 537
+3 0 537
+8 0 537
+3 0 537
+2 0 537
+2 0 537
+4 0 537 537 0 0 2 0 0 2
+4 0 537
+3 0 537 0 0 1 0 0 1 0 0 537 9
jcnd=537/537 0x3877c79e15 0 
* 0 
0x3877c79e15 0 537 0 537
+4 0 537 0 537
+4 0 537
+3 0 537
jump=537 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 333
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=387/406 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1667 0 0 1 0 0 1
+7 0 1667
+3 0 1667 0 0 0 0 0 0 0 0 1667 4
jcnd=804/1667 0x3877c7a0b0 0 
* 0 
+6 0 1643 1643 0 1 0 0 1
+4 0 1643
+3 0 1643
+3 0 1643
+2 0 1643
+4 0 1643
+3 0 1643
+3 0 1643
+2 0 1643
+2 0 1643
+2 0 1643
+2 0 1643 1643
+8 0 1643
+5 0 1643
+5 0 1643
+2 0 1643 0 0 0 0 0 0 0 0 1643
-2 0 774
+2 0 774 0 0 0 0 0 0 0 0 774
+2 0 2417
+2 0 2417 0 0 0 0 0 0 0 0 2417 34
jcnd=1432/2417 +64 0 
* 0 
+2 0 985
+8 0 985
+3 0 985
+3 0 985 0 0 0 0 0 0 0 0 985 1
jcnd=1/985 0x3877c79fc0 0 
* 0 
-6 0 1134
+3 0 1134
+3 0 1134 0 0 0 0 0 0 0 0 1134 11
jcnd=709/1134 0x3877c79fc0 0 
* 0 
+2 0 1409
+2 0 1409 1409
+8 0 1409
+2 0 1409 0 0 0 0 0 0 0 0 1409 24
jcnd=1134/1409 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 11811
+4 0 11811
+2 0 11811
+2 0 11811 0 0 0 0 0 0 0 0 11811 845
jcnd=10273/11811 -8 0 
* 0 
-2 0 1432 0 0 1 0 0 1
+2 0 1432 0 0 0 0 0 0 0 0 1432 22
jcnd=1325/1432 -8 0 
* 0 
+2 0 1707 1707 0 0 4 0 0 4
+4 0 1707 0 0 1 0 0 1
+3 0 1707 0 0 0 0 0 0 0 0 1707 749
jcnd=933/1707 0x3877c7a1cf 0 
* 0 
+6 0 774
+2 0 774
+4 0 774
+2 0 774
+2 0 774
+2 0 774 0 774
+8 0 774
jump=774 0x3877c79f30 0 
* 0 
+37 0 710 710 0 1 0 0 1
+5 0 710 710
+4 0 710
+4 0 710 710
+5 0 710 0 0 0 0 0 0 0 0 710
jcnd=710/710 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 804 804
+4 0 804
+4 0 804
+2 0 804
+5 0 804 804 0 1 1 0 1 1
+4 0 804
+3 0 804 0 0 0 0 0 0 0 0 804 6
jcnd=780/804 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 3
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 812 0 0 1 0 0 1
+3 0 812 0 812
+4 0 812
jump=812 0x3877c79b99 0 
* 0 
+36 0 933 933 0 1 1 0 1 1
+4 0 933 933
+4 0 933
+3 0 933 933
+4 0 933
+4 0 933
+3 0 933
+3 0 933 933
+4 0 933 0 0 0 0 0 0 0 0 933
+6 0 933 933
+4 0 933 0 0 0 0 0 0 0 0 933
+6 0 933 933 0 1 0 0 1
+8 0 933 0 933
+4 0 933 0 933
+4 0 933 0 0 0 0 0 0 0 0 933 10
jcnd=419/933 +38 0 
* 0 
+2 0 514 514 0 0 2 0 0 2
+4 0 514
+3 0 514 0 0 0 0 0 0 0 0 514
+2 0 514 514
+5 0 514 0 0 0 0 0 0 0 0 514
+6 0 514 514
+4 0 514 0 514
+4 0 514 514
+4 0 514 0 514
+4 0 514
+4 0 514 0 0 0 0 0 0 0 0 514
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 912 912
+4 0 912 912 0 1 0 0 1
+4 0 912 0 0 0 0 0 0 0 0 912
+6 0 912
+4 0 912
+7 0 912 0 912 0 0 7 0 0 7
+4 0 912 0 912
+4 0 912 0 912
+4 0 912 0 912
+4 0 912 0 0 0 0 0 0 0 0 912 4
jcnd=446/912 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 446
+7 0 446 0 0 0 0 0 0 0 0 446
jcnd=446/446 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 921 0 0 1 0 0 1
+7 0 921 0 921
+4 0 921
+3 0 921
+3 0 921
+4 0 921
+3 0 921
+4 0 921
+3 0 921
+3 0 921
+4 0 921 0 921
+4 0 921 0 921 0 0 1 0 0 1
+4 0 921
jump=921 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 957
+4 0 957 0 0 1 0 0 1
+3 0 957
+3 0 957 0 957
cfn=(104)
calls=957 0x3877c77180 0 
* 0 3828 1914 0 1 0 0 1 0 0 957
+5 0 957
+3 0 957
jump=957 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 710 0 0 1 0 0 1
+7 0 710
+2 0 710
+4 0 710
+3 0 710
+3 0 710 0 710
+5 0 710
+3 0 710
+4 0 710
+3 0 710 0 0 1 0 0 1
+4 0 710
+4 0 710
+3 0 710
+4 0 710 0 710
+4 0 710 0 710 0 0 26 0 0 26
+4 0 710
+3 0 710
+3 0 710 0 710
cfn=(104)
calls=710 0x3877c77180 0 
* 0 2840 1420 0 0 0 0 0 0 0 710 1
+5 0 710
+3 0 710
jump=710 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

totals: 18333596 7604308 4325218 241 112 156 241 112 156 494689 7268 10910 225
