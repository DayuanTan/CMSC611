version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1067


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1301823595 - 1307869496
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 3314 0 0 1 0 0 1
+3 0 3314 0 0 0 0 0 0 0 0 3314
+2 0 3314
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=3314 0x3877c7b8b0 0 
* 0 379846 97849 50465 23 4 0 23 4 0 93222 1524
* 0 3314 3314 0 1 1 0 1 1 0 0 0 3314

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 3314 0 3314 1 0 0 1
+1 0 3314
+5 0 3314
+3 0 3314 0 3314
+1 0 3314
+4 0 3314 0 0 1 0 0 1
+3 0 3314
+4 0 3314
+3 0 3314 0 3314 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=3314 0x3877c7aa50 0 
* 0 908599 134004 136447 51 42 84 51 42 84 147152 4528
* 0 3314 3314 0 1 1 0 1 1 0 0 0 3314
+5 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314
jcnd=3314/3314 +96 0 
* 0 
+96 0 3314 0 0 1 0 0 1
+4 0 3314 3314
+1 0 3314 3314
+1 0 3314 3314

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=1648 0x4044cc -35 
* * 8240 3296 3296
+5 * 1648 1648
+1 * 1648 1648

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648 1 0 0 1
+4 +1 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=1648 0x4049d4 -35 
* * 9888 3296 4944 1 0 0 1
+5 * 1648 1648
+1 * 1648 1648

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=1648 0x404520 -35 
* * 8240 3296 3296
+5 * 1648 1648
+1 * 1648 1648

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=1648 0x404a28 -35 
* * 9888 3296 4944 1 0 1 1 0 1
+5 * 1648 1648
+1 * 1648 1648

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 824 0 824
+1 * 824
+3 * 824
+4 * 824 0 824
+4 * 824 0 824
+4 * 824 0 824
+4 +1 824 824
+4 * 824 824
+4 * 824 824
+4 * 824
+3 * 824
+3 * 824 0 824
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=824 0x403df2 -87 
* * 19776 6592 7416 0 53 3 0 53 3 824 2
+5 * 824 824
+1 * 824 824

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648 0 1648
+4 * 1648 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 824 0 824
+1 * 824
+3 * 824
+4 * 824 0 824
+4 * 824 0 824
+4 * 824 0 824
+4 +1 824 824
+4 * 824 824
+4 * 824 824
+4 * 824
+3 * 824
+3 * 824 0 824
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=824 0x40406a -87 
* * 19776 6592 7416 0 52 43 0 52 43 824
+5 * 824 824
+1 * 824 824

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=18 +8 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=18 +7 113 
* * 108 36 36
+5 * 18 18
+1 * 18 18

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+4 * 1648 1648
+4 * 1648 1648
+1 * 1648 1648

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 1738 0 1738
+1 * 1738
+3 * 1738 0 1738
+4 +1 1738 1738
+4 * 1738 1738
+1 * 1738 1738

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 3296 0 3296 1 0 0 1
+1 * 3296
+3 * 3296 0 3296
+4 +1 3296 3296 0 1 0 0 1
+4 * 3296 3296
+1 * 3296 3296

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 1738 0 1738
+1 * 1738
+3 * 1738 0 1738 0 0 1 0 0 1
+4 +1 1738 1738
+4 * 1738 1738
+1 * 1738 1738

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 3296 0 3296 1 0 0 1
+1 * 3296
+3 * 3296
+4 * 3296 0 3296
+4 +1 3296
+4 * 3296
+3 * 3296 0 3296
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=3296 0x404ffe 790 
* * 19776 9888 6592 1 0 0 1
+5 * 3296 3296
+3 * 3296 3296
+1 * 3296 3296

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 3296 0 3296 1 0 0 1
+1 * 3296
+3 * 3296 0 3296
+4 +1 3296 3296
+4 * 3296 3296
+1 * 3296 3296

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 3296 0 3296 1 0 0 1
+1 * 3296
+3 * 3296
+4 * 3296 0 3296
+4 +1 3296
+4 * 3296
+3 * 3296 0 3296 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=3296 0x40500c 790 
* * 19776 9888 6592 1 0 0 1
+5 * 3296 3296
+3 * 3296 3296
+1 * 3296 3296

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 1648
+4 * 1648 1648
+1 * 1648 1648

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 1657 0 1657 1 0 0 1
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 +2 1657 1657
+4 * 1657
+3 * 1657 0 1657
cfn=(102)
calls=1657 0x4048de +12 
* * 9942 3314 3314 1 0 0 1
+5 * 1657 1657
+4 * 1657 0 0 1 0 0 1
+3 * 1657
+2 * 1657 0 0 0 0 0 0 0 0 1657
jcnd=1657/1657 +7 +3 
* * 
+7 +3 1657 1657
+4 * 1657
+4 * 1657
+3 * 1657 0 1657
cob=(5)
cfi=(8)
cfn=(32)
calls=1657 0x387e4bd0b0 0 
* * 471496 69159 67091 35 30 70 35 30 70 73072 3269 1657
* * 1657 1657 0 0 0 0 0 0 0 0 0 1657
+5 +1 1657 1657
+1 * 1657 1657

fn=(18)
0x404a28 81 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648 0 1648 0 0 1 0 0 1
+4 * 1648 0 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(92)
0x4049d4 81 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(196)
0x404520 86 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 1657 0 1657 1 0 0 1
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 * 1657 0 1657 1 0 0 1
+4 +2 1657 1657
+4 * 1657
+3 * 1657 0 1657
cfn=(28)
calls=1657 0x404992 +12 
* * 9942 3314 3314 1 0 0 1
+5 * 1657 1657
+4 * 1657
+3 * 1657
+2 * 1657 0 0 0 0 0 0 0 0 1657
jcnd=1657/1657 +7 +3 
* * 
+7 +3 1657 1657
+4 * 1657
+4 * 1657
+3 * 1657 0 1657
cob=(5)
cfi=(8)
cfn=(32)
calls=1657 0x387e4bd0b0 0 
* * 490127 78101 79298 20 13 15 20 13 15 77394 1259 1657
* * 1657 1657 0 1 1 0 1 1 0 0 0 1657
+5 +1 1657 1657
+1 * 1657 1657

fn=(102)
0x4048de 113 1675 0 1675 1 0 0 1
+1 * 1675
+3 * 1675 0 1675
+4 +1 1675
+10 * 1675 1675
+1 * 1675 1675

fn=(266)
0x40406a 129 824 0 824
+1 * 824
+3 * 824
+4 * 824 0 824
+4 * 824 0 824
+4 * 824 0 824
+4 +1 824 824
+4 * 824
+3 * 824
+5 * 824 0 824
cfi=(16)
cfn=(226)
calls=824 0x402d61 -20 
* * 5768 2472 2472
+5 * 824
+3 * 824 0 0 0 0 0 0 0 0 824
+2 * 824 824
+4 * 824 824 0 0 52 0 0 52
+2 * 824 0 824 0 0 43 0 0 43
+2 * 824 824
+1 * 824 824

fn=(28)
0x404992 113 1675 0 1675 1 0 0 1
+1 * 1675
+3 * 1675 0 1675
+4 +1 1675
+10 * 1675 1675
+1 * 1675 1675

fn=(176)
0x4044cc 86 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(224)
0x403df2 129 824 0 824
+1 * 824
+3 * 824
+4 * 824 0 824
+4 * 824 0 824
+4 * 824 0 824
+4 +1 824 824
+4 * 824
+3 * 824
+5 * 824 0 824
cfi=(16)
cfn=(226)
calls=824 0x402d61 -20 
* * 5768 2472 2472
+5 * 824
+3 * 824 0 0 0 0 0 0 0 0 824 2
+2 * 824 824
+4 * 824 824 0 0 53 0 0 53
+2 * 824 0 824 0 0 3 0 0 3
+2 * 824 824
+1 * 824 824

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 1657 0 1657
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 +1 1657 1657
+4 * 1657
+3 * 1657 0 1657
cob=(5)
cfi=(8)
cfn=(164)
calls=1657 0x387e4bb2f0 0 
* * 179306 44364 19823 23 4 0 23 4 0 43835 1429 1657
* * 1657 1657 0 1 1 0 1 1 0 0 0 1657
+5 * 1657 1657
+1 * 1657 1657

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 1657 0 1657
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 +1 1657 1657
+4 * 1657
+3 * 1657 0 1657
cob=(5)
cfi=(8)
cfn=(164)
calls=1657 0x387e4bb2f0 0 
* * 213796 56799 30642 2 1 0 2 1 0 52701 95 1657
* * 1657 1657 0 0 0 0 0 0 0 0 0 1657
+5 * 1657 1657
+1 * 1657 1657

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=18 0x404caa 450 
* * 4800 1605 1543 2 0 3 2 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +2 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1648 0x404484 107 
* * 1360498 478764 468880 25 3 4 25 3 4 56672 2252 3292 411
+5 * 1648 1648
+1 * 1648 1648

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 0 0 1 0 0 1
+3 * 18
+3 * 18 0 18
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=18 0x4048f2 107 
* * 5304 1785 1723 4 0 3 4 0 3 140 8 17
+5 * 18 18
+1 * 18 18

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +2 1648 1648 0 1 0 0 1
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1648 0x404a36 450 
* * 1314354 462284 452400 24 3 4 24 3 4 56672 2252 3292 411
+5 * 1648 1648
+1 * 1648 1648

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +2 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1648 0x40439c 107 
* * 1360498 478764 468880 7 0 103 7 0 103 56672 2236 3292
+5 * 1648 1648
+1 * 1648 1648

fn=(116)
0x40439c 107 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +10 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1648 0x4047d7 -26 
* * 1337426 470524 460640 7 0 103 7 0 103 56672 2236 3292
+5 +1 1648 1648
+1 * 1648 1648

fn=(118)
0x4047d7 91 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +2 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1648 0x4049e2 450 
* * 1314354 462284 452400 7 0 103 7 0 103 56672 2236 3292
+5 * 1648 1648
+1 * 1648 1648

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=18 0x404772 -25 
* * 5574 1875 1831 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18 1 0 0 1
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +7 18 18
+4 * 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(230)
calls=18 0x40465c -25 
* * 5574 1875 1831 5 0 3 5 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(232)
0x4048f2 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(234)
calls=18 0x404af4 -26 
* * 5052 1695 1633 4 0 3 4 0 3 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=18 0x404b99 -26 
* * 5052 1695 1633 2 0 49 2 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(274)
0x404b99 91 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=18 0x404cf0 450 
* * 4800 1605 1543 1 0 49 1 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fn=(50)
0x404484 107 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +10 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(52)
calls=1648 0x404829 -26 
* * 1337426 470524 460640 25 3 4 25 3 4 56672 2252 3292 411
+5 +1 1648 1648
+1 * 1648 1648

fn=(270)
0x404772 256 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +2 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(272)
calls=18 0x4049a6 107 
* * 5304 1785 1723 2 0 49 2 0 49 140 6 17
+5 * 18 18
+1 * 18 18

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 1657 0 1657 1 0 0 1
+1 * 1657
+3 * 1657
+4 * 1657 0 1657 1 0 0 1
+4 * 1657 0 1657
+4 0 1657 1657
+5 0 1657 0 0 0 0 0 0 0 0 1657
+2 0 1657 1657
+4 0 1657 1657
+4 0 1657
+5 0 1657
+3 0 1657
+3 0 1657 0 1657
fi=(6) ???
cfi=(5)
cfn=(26)
calls=1657 0x404730 99 
* 0 533209 91357 92554 24 14 15 24 14 15 79051 1259 3314
+5 0 1657
fi=(6)
jump=1657 +7 0 
* 0 
+7 0 1657 1657
+1 0 1657 1657

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+4 * 1648 0 1648
+4 * 1648
+4 * 1648 0 0 1 0 0 1
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=1648 0x404468 726 
* * 16480 8240 6592 1 0 0 1
+5 * 1648 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+3 * 1648 0 1648
+4 * 1648
+4 * 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(10)
cfn=(44)
calls=1648 0x404468 726 
* * 16480 8240 6592
+5 * 1648 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
0x403a0a 134 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=1648 0x4042e2 -45 
* * 59328 21424 23072 5 0 0 5
+5 +1 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=1648 0x40432a +43 
* * 578828 109750 97840 25 26 65 25 26 65 75857 3207 3296
+5 * 1648
jump=1648 +28 * 
* * 
+28 * 1648
+4 * 1648 1648
+1 * 1648 1648
+1 * 1648 1648

fn=(88)
0x4042e2 90 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648 1 0 0 1
cfi=(4)
cfn=(90)
calls=1648 0x4047b2 +24 
* * 29664 9888 11536 3 0 0 3
+5 * 1648 1648
+4 * 1648 0 1648
+7 * 1648 1648
+4 * 1648 0 1648
+8 * 1648 1648
+4 * 1648 0 1648
+8 +1 1648 1648
+1 * 1648 1648

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648
+4 +2 1648 1648
+4 * 1648 1648 0 1 0 0 1
+4 * 1648
+3 * 1648 1648
+4 * 1648 1648
+3 * 1648
+3 * 1648
+3 * 1648
+4 * 1648
+3 * 1648 1648
+4 * 1648 1648
+3 -1 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=1648 0x403ce6 +11 
* * 224480 60608 36174 24 5 0 24 5 0 45260 1421 3296
+5 +1 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=1648 0x4031b8 -82 
* * 37904 13184 13184 1 0 0 1
+5 * 1648
jump=1648 +28 * 
* * 
+28 * 1648
+4 * 1648 1648
+1 * 1648 1648
+1 * 1648 1648

fn=(172)
0x4031b8 79 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfi=(4)
cfn=(174)
calls=1648 0x403ccc +42 
* * 23072 8240 8240
+5 * 1648 1648
+1 * 1648 1648

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=9 0x40404e 726 
* * 90 45 36 1 0 0 1
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=9 0x4045cc 650 
* * 288 99 99 1 0 0 1
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 9
+4 * 9
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(2)
calls=9 0x402d74 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(210)
calls=9 0x4045cc 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 3332 0 3332 1 0 0 1
+1 * 3332
+3 * 3332 0 3332
+4 +1 3332 3332
+4 * 3332 3332 0 0 2 0 0 2
+4 * 3332
+3 * 3332 3332
+4 * 3332 3332
+3 * 3332
+3 * 3332
+3 * 3332
+4 * 3332 3332
+1 * 3332 3332

fn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
0x40325e 113 3323 0 3323 1 0 0 1
+1 * 3323
+3 * 3323 0 3323
+4 +1 3323 3323
+4 * 3323 3323
+1 * 3323 3323

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(204)
calls=9 0x40404e 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9
+3 * 9 9
+4 * 9 0 0 1 0 0 1
+3 * 9
+3 * 9
+2 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +14 +3 
* * 
+14 +3 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(12)
cfn=(214)
calls=9 0x4045ee 216 
* * 117 63 27 0 0 0 0 0 0 9
+5 * 9 9
+3 * 9
+3 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfn=(10)
calls=9 0x402f54 645 
* * 117 54 18
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
+2 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(254)
calls=9 0x40470e 650 
* * 288 99 99
+5 * 9 9
+4 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +16 * 
* * 
+16 * 9 9 0 1 0 0 1
+4 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 1666 0 1666 1 0 0 1
+1 * 1666
+3 * 1666 0 1666 0 0 1 0 0 1
+4 +1 1666 1666
+4 * 1666 1666
+1 * 1666 1666

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 1666 0 1666 1 0 0 1
+1 * 1666
+3 * 1666 0 1666 1 0 0 1
+4 +1 1666 1666
+4 * 1666 1666
+1 * 1666 1666

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 824 0 824
+1 * 824
+3 * 824
+4 * 824 0 824
+4 * 824 0 824
+4 +2 824 824
+4 * 824 824
+4 * 824 824
+4 * 824 824
+4 * 824
+3 * 824 0 0 0 0 0 0 0 0 824 9
jcnd=9/824 +51 +10 
* * 
+2 +3 815 815
+4 * 815 815
+4 * 815 815
+4 -1 815 815
+4 * 815
+3 * 815
+3 * 815 0 815
cfi=(3)
cfn=(222)
calls=815 0x403373 215 
* * 30970 10595 11410 0 52 2 0 52 2 815 2
+5 +2 815 815
+4 * 815 815
+4 * 815
+4 * 815 815
+4 * 815 0 815
+4 * 815
jump=815 +36 +8 
* * 
+2 +6 9 9 0 1 0 0 1
+4 * 9
+3 * 9 0 9
cfn=(202)
calls=9 0x403688 556 
* * 207 81 63 2 0 0 2
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=9 0x4033a0 318 
* * 14668 4592 4017 39 5 9 39 5 9 955 78 53
+5 +2 824 824
+1 * 824 824

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648 0 1648
+2 * 1648 0 1648
+2 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648 1 0 0 1
+4 * 1648 0 1648
+4 +2 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(6)
calls=1648 0x403b08 117 
* * 9888 4944 3296 1 0 1 1 0 1
+5 * 1648
+3 * 1648 0 1648
cfi=(3)
cfn=(8)
calls=1648 0x403afa -88 
* * 9888 4944 3296 1 0 0 1
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(10)
calls=1648 0x402f54 645 
* * 21424 9888 3296 1 1 0 1 1
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=1648 0x403b16 134 
* * 693896 151897 144838 32 14 12 32 14 12 80355 1211 3296
+5 +4 1648 1648 0 1 0 0 1
+4 * 1648
+3 * 1648 0 1648
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=1648 0x40333c 113 
* * 9888 4944 3296 2 0 0 2
+5 * 1648
+3 * 1648 1648
+4 * 1648 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(42)
calls=1648 0x403ba4 565 
* * 41200 16480 13184 3 0 0 3
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(46)
calls=1648 0x403b74 547 
* * 41200 16480 13184
+5 * 1648
+3 * 1648
+3 * 1648
+3 * 1648
+3 * 1648 0 1648 1 0 0 1
cfi=(11)
cfn=(48)
calls=1648 0x403bd5 -60 
* * 1385218 487004 478768 26 3 4 26 3 4 56672 2252 3292 411
+5 -3 1648 1648
+4 * 1648 0 1648
+4 * 1648
jump=1648 +28 +4 
* * 
+28 +4 1648
+4 * 1648 1648
+1 * 1648 1648
+2 * 1648 1648
+2 * 1648 1648
+1 * 1648 1648

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+4 * 1648 0 1648
+4 * 1648
+4 * 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=1648 0x404380 726 
* * 16480 8240 6592 1 0 0 1
+5 * 1648 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648 1 0 0 1
+4 +2 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(40)
calls=1648 0x40333c 113 
* * 9888 4944 3296
+5 * 1648
+3 * 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+3 -1 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=1648 0x40334a 148 
* * 51088 16480 19776 2 0 0 2
+5 +1 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=1648 0x4032ca 159 
* * 342962 104328 68410 4 1 0 4 1 0 54112 83 3296
+5 * 1648
jump=1648 +28 * 
* * 
+28 * 1648 0 0 1 0 0 1
+4 * 1648 1648
+1 * 1648 1648
+1 * 1648 1648

fn=(210)
0x4045cc 650 18 0 18 1 0 0 1
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(82)
calls=18 0x4039fc 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(212)
calls=18 0x4048c3 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 1657 0 1657 1 0 0 1
+1 * 1657 0 0 1 0 0 1
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 0 1657 1657
+5 0 1657 0 0 0 0 0 0 0 0 1657
+2 0 1657 1657
+4 0 1657 1657
+4 0 1657
+5 0 1657
+3 0 1657
+3 0 1657 0 1657
fi=(6)
cfi=(5)
cfn=(100)
calls=1657 0x40461a 99 
* 0 514578 82415 80347 38 30 70 38 30 70 74729 3269 3314
+5 0 1657
fi=(6)
jump=1657 +7 0 
* 0 
+7 0 1657 1657
+1 0 1657 1657

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 1023820 0 1023820
+1 * 1023820
+3 * 1023820 0 1023820
+4 * 1023820 0 1023820
+4 +1 1023820 1023820
+4 * 1023820 1023820
+3 * 1023820 1023820
+4 * 1023820
+4 * 1023820
+3 * 1023820 1023820
+1 * 1023820 1023820

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 1023820 0 1023820
+1 * 1023820
+3 * 1023820 0 1023820 1 0 0 1
+4 * 1023820 0 1023820
+4 +1 1023820 1023820
+4 * 1023820 1023820
+3 * 1023820 1023820
+4 * 1023820
+4 * 1023820
+3 * 1023820 1023820
+1 * 1023820 1023820

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfi=(4)
cfn=(194)
calls=1648 0x403d7e +42 
* * 23072 8240 8240 1 0 0 1
+5 * 1648 1648
+1 * 1648 1648

fn=(254)
0x40470e 650 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 +1 18 18
+4 * 18
+3 * 18 0 18
cfn=(6)
calls=18 0x403b08 117 
* * 108 54 36
+5 * 18
+3 * 18 0 18
cfi=(3)
cfn=(256)
calls=18 0x404978 221 
* * 270 90 90
+5 * 18 18
+1 * 18 18

fn=(186)
0x4032ca 159 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648
+4 +2 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648 1648
+4 * 1648 1648
+3 * 1648
+3 * 1648
+3 * 1648
+4 * 1648
+3 * 1648 1648
+4 * 1648 1648
+3 -1 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=1648 0x403d98 +11 
* * 258914 73016 46986 2 1 0 2 1 0 54112 83 3296
+5 +1 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(192)
calls=1648 0x403296 -82 
* * 37904 13184 13184 1 0 0 1
+5 * 1648
jump=1648 +28 * 
* * 
+28 * 1648
+4 * 1648 1648
+1 * 1648 1648
+1 * 1648 1648

fn=(2)
0x402d74 645 6628 0 6628 1 0 0 1
+1 * 6628
+3 * 6628 0 6628 0 0 1 0 0 1
+4 +1 6628 6628
+4 * 6628 6628 0 1 1 0 1 1
+4 * 6628
+3 * 6628 6628
+4 * 6628 6628
+3 * 6628
+3 * 6628
+3 * 6628
+4 * 6628 6628
+1 * 6628 6628

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +2 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(22)
calls=1648 0x404236 -14 
* * 557112 99161 98694 26 14 8 26 14 8 80355 1211 3296
+5 * 1648 1648
+4 * 1648 0 1648
+3 +1 1648 1648
+4 * 1648 1648 0 1 0 0 1
+3 * 1648 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+3 * 1648 1648
+4 * 1648
+4 * 1648
+3 * 1648 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+1 * 1648 1648

fn=(94)
0x40432a 179 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +2 1648 1648
+4 * 1648 1648 0 1 0 0 1
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(96)
calls=1648 0x403fbe -14 
* * 537628 89974 86304 24 26 65 24 26 65 75857 3207 3296
+5 * 1648 1648
+4 * 1648 0 1648
+3 +1 1648 1648
+4 * 1648 1648
+3 * 1648 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+3 * 1648 1648
+4 * 1648
+4 * 1648
+3 * 1648 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+1 * 1648 1648

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 824 0 824
+1 * 824
+3 * 824 0 0 1 0 0 1
+4 * 824 0 824
+4 * 824 0 824
+4 +2 824 824
+4 * 824 824
+4 * 824 824
+4 * 824 824
+4 * 824
+3 * 824 0 0 0 0 0 0 0 0 824
jcnd=9/824 +51 +10 
* * 
+2 +3 815 815
+4 * 815 815
+4 * 815 815
+4 -1 815 815
+4 * 815
+3 * 815
+3 * 815 0 815
cfi=(3)
cfn=(264)
calls=815 0x4036b1 215 
* * 30970 10595 11410 0 51 38 0 51 38 815
+5 +2 815 815
+4 * 815 815
+4 * 815
+4 * 815 815
+4 * 815 0 815
+4 * 815
jump=815 +36 +8 
* * 
+2 +6 9 9
+4 * 9
+3 * 9 0 9
cfn=(246)
calls=9 0x4039c4 556 
* * 207 81 63
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=9 0x4036de 318 
* * 13871 4374 3841 19 1 61 19 1 61 793 75 53
+5 +2 824 824
+1 * 824 824

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 9 0 9
+1 * 9
+3 * 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(248)
calls=9 0x4042c6 726 
* * 90 45 36
+5 * 9 9
+4 * 9 9
+1 * 9 9

fn=(40)
0x40333c 113 3323 0 3323 1 0 0 1
+1 * 3323
+3 * 3323 0 3323 1 0 0 1
+4 +1 3323 3323
+4 * 3323 3323
+1 * 3323 3323

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+3 * 1648 0 1648
+4 * 1648
+4 * 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(10)
cfn=(110)
calls=1648 0x404380 726 
* * 16480 8240 6592
+5 * 1648 1648
+4 * 1648 1648
+1 * 1648 1648

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648 1 0 0 1
+4 +2 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(106)
calls=1648 0x40325e 113 
* * 9888 4944 3296
+5 * 1648
+3 * 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+3 -1 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=1648 0x40326c 148 
* * 51088 16480 19776 4 0 0 4
+5 +1 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(156)
calls=1648 0x4031ec 159 
* * 308528 91920 57598 27 5 0 27 5 0 45260 1421 3296
+5 * 1648
jump=1648 +28 * 
* * 
+28 * 1648 0 0 1 0 0 1
+4 * 1648 1648
+1 * 1648 1648
+1 * 1648 1648

fn=(158)
0x403ce6 171 1657 0 1657 1 0 0 1
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 +2 1657 1657
+5 * 1657 0 0 0 0 0 0 0 0 1657
+2 +1 1657 1657
+4 * 1657 1657
+4 * 1657 1657
+4 * 1657
+3 * 1657
+3 * 1657 0 1657
cfi=(5)
cfn=(160)
calls=1657 0x4044d6 -65 
* * 199190 50992 28108 24 5 0 24 5 0 43835 1429 3314
+5 +1 1657 1657
+1 * 1657 1657

fn=(12)
0x403b16 134 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=1648 0x4043ca -45 
* * 59328 21424 23072 4 0 4 4 0 4
+5 +1 1648 1648 0 1 0 0 1
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(20)
calls=1648 0x404412 +43 
* * 598312 118937 110230 27 14 8 27 14 8 80355 1211 3296
+5 * 1648
jump=1648 +28 * 
* * 
+28 * 1648
+4 * 1648 1648
+1 * 1648 1648
+1 * 1648 1648

fn=(14)
0x4043ca 90 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648
+4 * 1648 0 1648 0 0 1 0 0 1
+4 * 1648 0 1648
+4 +1 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(4)
cfn=(16)
calls=1648 0x404804 +24 
* * 29664 9888 11536 2 0 1 2 0 1
+5 * 1648 1648
+4 * 1648 0 1648 0 0 2 0 0 2
+7 * 1648 1648
+4 * 1648 0 1648 1 0 0 1
+8 * 1648 1648
+4 * 1648 0 1648
+8 +1 1648 1648
+1 * 1648 1648

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 1648 0 1648 1 0 0 1
+1 * 1648
+3 * 1648 0 1648
+2 * 1648 0 1648
+2 * 1648 0 1648
+1 * 1648 0 0 1 0 0 1
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +2 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(82)
calls=1648 0x4039fc 117 
* * 9888 4944 3296 2 0 0 2
+5 * 1648
+3 * 1648 0 1648
cfi=(3)
cfn=(84)
calls=1648 0x4039ed -88 
* * 9888 4944 3296
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(2)
calls=1648 0x402d74 645 
* * 21424 9888 3296
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648
+3 * 1648 0 1648 1 0 0 1
cfn=(86)
calls=1648 0x403a0a 134 
* * 674412 142710 132448 31 26 65 31 26 65 75857 3207 3296
+5 +4 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(106)
calls=1648 0x40325e 113 
* * 9888 4944 3296 1 0 0 1
+5 * 1648
+3 * 1648 1648
+4 * 1648 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(108)
calls=1648 0x403a98 565 
* * 41200 16480 13184 2 0 0 2
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(112)
calls=1648 0x403a68 547 
* * 41200 16480 13184
+5 * 1648
+3 * 1648
+3 * 1648
+3 * 1648
+3 * 1648 0 1648
cfi=(11)
cfn=(114)
calls=1648 0x403ac9 -60 
* * 1385218 487004 478768 7 0 103 7 0 103 56672 2236 3292
+5 -3 1648 1648
+4 * 1648 0 1648
+4 * 1648
jump=1648 +28 +4 
* * 
+28 +4 1648
+4 * 1648 1648
+1 * 1648 1648
+2 * 1648 1648
+2 * 1648 1648
+1 * 1648 1648

fn=(188)
0x403d98 171 1657 0 1657 1 0 0 1
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 +2 1657 1657
+5 * 1657 0 0 0 0 0 0 0 0 1657 9
+2 +1 1657 1657
+4 * 1657 1657
+4 * 1657 1657
+4 * 1657
+3 * 1657
+3 * 1657 0 1657
cfi=(5)
cfn=(190)
calls=1657 0x40452a -65 
* * 233680 63427 38927 2 1 0 2 1 0 52701 95 3314
+5 +1 1657 1657
+1 * 1657 1657

fl=(12)
fn=(54)
0x404a36 450 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648 1 0 0 1
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +10 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1648 0x404c38 288 
* * 24720 9888 8240 3 0 0 3
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(56)
calls=1648 0x404c38 288 
* * 24720 9888 8240
+5 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=1648 0x404c52 -36 
* * 1228658 432620 422736 20 3 4 20 3 4 56672 2252 3292 411
+5 +1 1648
+4 * 1648 1648
+1 * 1648 1648
+1 * 1648 1648

fn=(60)
0x404c52 424 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+2 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +4 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=1648 0x40492d 277 
* * 24720 9888 8240 2 0 0 2
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=1648 0x404d9d 277 
* * 41200 14832 13184 2 0 1 2 0 1
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(66)
calls=1648 0x404d9d 277 
* * 41200 14832 13184
+5 * 1648
+3 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=1648 0x404db7 -49 
* * 1075394 381532 371648 15 3 3 15 3 3 56672 2252 3292 411
+5 +1 1648
+4 * 1648 1648
+1 * 1648 1648
+2 * 1648 1648
+1 * 1648 1648

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=18 0x404f37 -22 
* * 2280 741 661 0 0 49 0 0 49 140 6 17
+5 +1 18 18
+1 * 18 18

fn=(62)
0x40492d 277 1702 0 1702 1 0 0 1
+1 * 1702
+3 * 1702
+4 * 1702 0 1702
+4 +1 1702 1702
+4 * 1702
+3 * 1702 0 1702 1 0 0 1
cfi=(13)
cfn=(64)
calls=1702 -33 -66 
* * 10212 5106 3404
+5 * 1702 1702
+1 * 1702 1702

fn=(66)
0x404d9d 277 3296 0 3296
+1 * 3296
+3 * 3296
+4 * 3296 0 3296
+4 +1 3296 3296
+4 * 3296
+3 * 3296 0 3296
cfi=(13)
cfn=(68)
calls=3296 0x404f1a -58 
* * 52736 19776 16480 2 0 1 2 0 1
+5 * 3296 3296
+1 * 3296 3296

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 18 0 18
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=18 0x404878 277 
* * 270 108 90 0 0 1 0 0 1
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(128)
calls=18 0x404878 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=18 0x404f9c -49 
* * 2550 831 769 0 0 2 0 0 2 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(214)
0x4045ee 216 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 +5 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 18
+3 * 18
+3 * 18 0 0 0 0 0 0 0 0 18
jcnd=18/18 +8 +2 
* * 
+8 +2 18 18
+4 +1 18 18
+1 * 18 18

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(130)
calls=36 0x40486a -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+2 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +4 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(62)
calls=18 0x40492d 277 
* * 270 108 90
+5 * 18
+3 * 18
+3 * 18
+3 * 18 0 18
cfn=(282)
calls=18 0x404fcd -49 
* * 2550 831 769 0 0 49 0 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+2 * 18 18
+1 * 18 18

fn=(120)
0x4049e2 450 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +10 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=1648 0x404bc6 288 
* * 24720 9888 8240 3 0 0 3
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(122)
calls=1648 0x404bc6 288 
* * 24720 9888 8240
+5 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=1648 0x404be0 -36 
* * 1228658 432620 422736 4 0 103 4 0 103 56672 2236 3292
+5 +1 1648
+4 * 1648 1648
+1 * 1648 1648
+1 * 1648 1648

fn=(128)
0x404878 277 1702 0 1702
+1 * 1702
+3 * 1702
+4 * 1702 0 1702 1 0 0 1
+4 +1 1702 1702
+4 * 1702
+3 * 1702 0 1702
cfi=(13)
cfn=(130)
calls=1702 -33 -66 
* * 10212 5106 3404 0 0 1 0 0 1
+5 * 1702 1702
+1 * 1702 1702

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 3296 0 3296
+1 * 3296
+3 * 3296
+4 * 3296 0 3296
+4 +1 3296 3296
+4 * 3296
+3 * 3296 0 3296
cfi=(13)
cfn=(134)
calls=3296 0x404e98 -58 
* * 52736 19776 16480 2 0 0 2
+5 * 3296 3296
+1 * 3296 3296

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +8 1648 0 1648
+4 +3 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=1648 0x404eb5 -22 
* * 1050674 373292 361760 1 0 103 1 0 103 56672 2236 3292
+5 +1 1648 1648
+1 * 1648 1648

fn=(242)
0x404f9c 379 18 0 18
+1 * 18
+3 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +8 18 0 18
+4 +3 18 18
+4 * 18 18
+4 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(140)
calls=18 0x404eb5 -22 
* * 2280 741 661 0 0 2 0 0 2 140 8 17
+5 +1 18 18
+1 * 18 18

fn=(276)
0x404cf0 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18
+4 * 18
+3 * 18 0 18
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(278)
calls=18 0x40469c 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(280)
calls=18 0x404e40 -36 
* * 3864 1281 1219 1 0 49 1 0 49 140 6 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fn=(278)
0x40469c 288 36 0 36
+1 * 36
+3 * 36
+4 * 36 0 36
+4 +1 36 36
+4 * 36
+3 * 36 0 36
cfi=(13)
cfn=(64)
calls=36 0x40491f -77 
* * 216 108 72
+5 * 36 36
+1 * 36 36

fn=(122)
0x404bc6 288 3296 0 3296 1 0 0 1
+1 * 3296
+3 * 3296
+4 * 3296 0 3296
+4 +1 3296 3296
+4 * 3296
+3 * 3296 0 3296
cfi=(13)
cfn=(124)
calls=3296 0x404d36 -77 
* * 19776 9888 6592 2 0 0 2
+5 * 3296 3296
+1 * 3296 3296

fn=(56)
0x404c38 288 3296 0 3296 1 0 0 1
+1 * 3296
+3 * 3296
+4 * 3296 0 3296 1 0 0 1
+4 +1 3296 3296
+4 * 3296
+3 * 3296 0 3296
cfi=(13)
cfn=(58)
calls=3296 0x404d8f -77 
* * 19776 9888 6592 1 0 0 1
+5 * 3296 3296
+1 * 3296 3296

fn=(74)
0x404f37 368 1666 0 1666
+1 * 1666
+3 * 1666
+4 * 1666 0 1666 1 0 0 1
+4 * 1666 0 1666
+4 * 1666 0 1666
+4 +2 1666 1666
+4 * 1666 1666
+4 * 1666
+3 * 1666
+3 * 1666
+4 * 1666 0 1666
+4 +1 1666 1666
+5 * 1666 0 0 0 0 0 0 0 0 1666
jcnd=9/1666 +33 +2 
* * 
+2 +1 1657 1657
+4 * 1657
+8 * 1657 1657
+4 * 1657 1657
+4 * 1657
+3 * 1657 0 0 1 0 0 1
+3 * 1657 0 1657 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=1657 0x3877c83840 0 
* * 1006378 355743 352434 11 2 51 11 2 51 55146 2258 1652 411
* * 1657 1657 0 1 1 0 1 1 0 0 0 1657
+5 +1 1666 1666
+4 * 1666
+8 * 1666 1666
+4 * 1666
+3 +1 1666 1666
+1 * 1666 1666

fn=(140)
0x404eb5 368 1666 0 1666
+1 * 1666
+3 * 1666
+4 * 1666 0 1666 1 0 0 1
+4 * 1666 0 1666
+4 * 1666 0 1666 0 0 1 0 0 1
+4 +2 1666 1666
+4 * 1666 1666
+4 * 1666
+3 * 1666
+3 * 1666
+4 * 1666 0 1666
+4 +1 1666 1666
+5 * 1666 0 0 0 0 0 0 0 0 1666
jcnd=9/1666 +33 +2 
* * 
+2 +1 1657 1657
+4 * 1657
+8 * 1657 1657
+4 * 1657 1657
+4 * 1657
+3 * 1657
+3 * 1657 0 1657
cob=(2)
cfi=(9)
cfn=(78)
calls=1657 0x3877c83840 0 
* * 1006378 355743 352434 0 0 104 0 0 104 55146 2244 1652
* * 1657 1657 0 0 0 0 0 0 0 0 0 1657
+5 +1 1666 1666
+4 * 1666
+8 * 1666 1666
+4 * 1666
+3 +1 1666 1666
+1 * 1666 1666

fn=(72)
0x404db7 379 1648 0 1648
+1 * 1648
+3 * 1648
+4 * 1648 0 1648 1 0 0 1
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +8 1648 0 1648
+4 +3 1648 1648
+4 * 1648 1648
+4 * 1648 1648
+4 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(74)
calls=1648 0x404f37 -22 
* * 1050674 373292 361760 14 3 3 14 3 3 56672 2252 3292 411
+5 +1 1648 1648
+1 * 1648 1648

fn=(126)
0x404be0 424 1648 0 1648
+1 * 1648
+3 * 1648 0 1648
+2 * 1648 0 1648
+1 * 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 * 1648 0 1648
+4 +4 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(128)
calls=1648 0x404878 277 
* * 24720 9888 8240 1 0 0 1
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(132)
calls=1648 0x404d44 277 
* * 41200 14832 13184 2 0 0 2
+5 * 1648
+3 * 1648 1648
+4 * 1648
+3 * 1648 0 1648
cfn=(132)
calls=1648 0x404d44 277 
* * 41200 14832 13184
+5 * 1648
+3 * 1648
+3 * 1648
+3 * 1648 0 1648
cfn=(138)
calls=1648 0x404d5e -49 
* * 1075394 381532 371648 1 0 103 1 0 103 56672 2236 3292
+5 +1 1648
+4 * 1648 1648
+1 * 1648 1648
+2 * 1648 1648
+1 * 1648 1648

fn=(236)
0x404caa 450 18 0 18
+1 * 18
+3 * 18 0 18
+1 * 18
+4 * 18 0 18
+4 * 18 0 18
+4 * 18 0 18
+4 +10 18 18 0 1 0 0 1
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18
+3 * 18 18
+4 * 18
+3 * 18 0 18
cfn=(238)
calls=18 0x40455a 288 
* * 270 108 90
+5 * 18 18
+4 * 18
+3 * 18
+3 * 18 0 18
cfn=(240)
calls=18 0x404de8 -36 
* * 3864 1281 1219 1 0 3 1 0 3 140 8 17
+5 +1 18
+4 * 18 18
+1 * 18 18
+1 * 18 18

fl=(10)
fn=(204)
0x40404e 726 18 0 18 1 0 0 1
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=9 0x403e26 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(70)
0x40500c 790 3296 0 3296 1 0 0 1
+1 * 3296
+3 * 3296 0 3296
+4 +1 3296 3296
+4 * 3296 3296
+1 * 3296 3296

fn=(110)
0x404380 726 3296 0 3296 1 0 0 1
+1 * 3296
+3 * 3296 0 3296
+4 * 3296 0 3296
+4 * 3296 3296
+4 * 3296 3296
+3 * 3296 3296
+4 * 3296 0 3296
+3 * 3296 3296
+1 * 3296 3296

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 9 0 9
+1 * 9
+3 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 +2 9 9
+4 * 9
+3 * 9 0 9
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=9 0x40409e 790 
* * 54 27 18 1 0 0 1
+5 * 9 9
+3 * 9
+3 * 9 9
+4 * 9
+3 * 9 0 9
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+4 * 9 9
+1 * 9 9
+1 * 9 9

fn=(136)
0x404ffe 790 3296 0 3296 1 0 0 1
+1 * 3296
+3 * 3296 0 3296
+4 +1 3296 3296
+4 * 3296 3296
+1 * 3296 3296

fn=(44)
0x404468 726 3296 0 3296
+1 * 3296
+3 * 3296 0 3296
+4 * 3296 0 3296
+4 * 3296 3296
+4 * 3296 3296
+3 * 3296 3296
+4 * 3296 0 3296 1 0 0 1
+3 * 3296 3296
+1 * 3296 3296

fn=(248)
0x4042c6 726 18 0 18
+1 * 18
+3 * 18 0 18
+4 * 18 0 18
+4 * 18 18
+4 * 18 18
+3 * 18 18
+4 * 18 0 18
+3 * 18 18
+1 * 18 18

fn=(220)
0x403e26 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fn=(262)
0x40409e 790 36 0 36 1 0 0 1
+1 * 36
+3 * 36 0 36
+4 +1 36 36
+4 * 36 36
+1 * 36 36

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 1657 0 1657 1 0 0 1
+1 * 1657
+3 * 1657 0 1657
+4 * 1657 0 1657 1 0 0 1
+4 * 1657 1657
+1 * 1657 1657

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 1657 0 1657 1 0 0 1
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 +4 1657 1657
+4 * 1657 1657
+4 * 1657
+3 * 1657
+3 * 1657 0 1657
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=1657 0x40454c -14 
* * 9942 3314 4971 1 0 0 1
+5 +2 1657 1657
+1 * 1657 1657

fn=(150)
0x40326c 148 1657 0 1657
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 +3 1657 1657 0 1 0 0 1
+4 * 1657 1657
+4 * 1657
+3 * 1657
+3 * 1657 0 1657
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=1657 0x403d1a -29 
* * 29826 9942 11599 3 0 0 3
+5 +1 1657 1657
+1 * 1657 1657

fn=(180)
0x40334a 148 1657 0 1657
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 +3 1657 1657
+4 * 1657 1657
+4 * 1657
+3 * 1657
+3 * 1657 0 1657
cfn=(182)
calls=1657 0x403dcc -29 
* * 29826 9942 11599 2 0 0 2
+5 +1 1657 1657
+1 * 1657 1657

fn=(152)
0x403d1a 122 1657 0 1657 1 0 0 1
+1 * 1657
+3 * 1657
+4 * 1657 0 1657
+4 * 1657 0 1657
+4 +4 1657 1657
+4 * 1657 1657
+4 * 1657
+3 * 1657
+3 * 1657 0 1657
cfn=(154)
calls=1657 0x4044f8 -14 
* * 9942 3314 4971 2 0 0 2
+5 +2 1657 1657
+1 * 1657 1657

fn=(184)
0x40454c 112 1657 0 1657 1 0 0 1
+1 * 1657
+3 * 1657 0 1657
+4 * 1657 0 1657
+4 * 1657 1657
+1 * 1657 1657

fl=(15)
fn=(250)
0x4036de 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x403799 +21 
* * 
0x403799 +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(252)
calls=9 0x404104 1336 
* * 1629 603 423 4 0 0 4 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(258)
calls=9 0x4041ce 538 
* * 198 81 63
+5 * 9 0 9 1 0 0 1
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(260)
calls=9 0x4041f3 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(22)
calls=9 0x404236 167 
* * 2609 481 488 0 0 7 0 0 7 353 48 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9
+4 * 9 0 0 1 0 0 1
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(264)
calls=9 0x4036b1 215 
* * 342 117 126 0 1 5 0 1 5 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -88 
* * 3882 1299 1255 3 0 49 3 0 49 131 6 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(262)
calls=9 0x40409e 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(268)
calls=9 0x40426e -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(40)
calls=9 0x40333c 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9
+4 * 9 9
+3 -1 9 0 0 1 0 0 1
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(180)
calls=9 0x40334a 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(188)
calls=9 0x403d98 171 
* * 1278 353 226 1 0 0 1 0 0 246 21 18
+5 +3 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x4039ba * 
* * 
0x4039ba * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fn=(206)
0x4033a0 318 9 0 9 1 0 0 1
+1 * 9
+3 * 9 0 9
+2 * 9 0 9
+1 * 9
+4 * 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +4 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+4 * 9
+3 * 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 0x40345e +21 
* * 
0x40345e +21 9 9 0 1 0 0 1
+4 * 9
+5 * 9
+5 * 9
+3 * 9 0 9
cfi=(2)
cfn=(208)
calls=9 0x403e8c 1336 
* * 1629 603 423 5 0 0 5 0 0 36
+5 * 9 0 9
+4 +1 9 9
+4 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(216)
calls=9 0x403f56 538 
* * 198 81 63
+5 * 9 0 9
+4 * 9
+4 * 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(10)
cfn=(218)
calls=9 0x403f7b 896 
* * 306 117 90 1 0 0 1
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(2)
cfn=(96)
calls=9 0x403fbe 167 
* * 3462 726 671 16 4 5 16 4 5 529 62 18
+5 * 9 0 9
+4 +1 9 9
+4 * 9 0 9
+4 +12 9 9 0 1 0 0 1
+4 * 9
+8 * 9 9
+4 * 9
+4 * 9 9
+4 -5 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(3)
cfn=(222)
calls=9 0x403373 215 
* * 342 117 126 0 1 1 0 1 1 9
+5 +7 9 0 9
+8 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9
+4 * 9 0 0 1 0 0 1
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 * 9 9
+4 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -88 
* * 3882 1299 1255 6 0 3 6 0 3 131 8 17
+5 * 9 0 9
+4 +5 9 0 9
+5 +5 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9
+4 * 9
+3 * 9 0 9
cfi=(10)
cfn=(220)
calls=9 0x403e26 790 
* * 54 27 18
+5 * 9 9
+3 -3 9 9
+4 * 9
+3 * 9
+3 * 9
+3 * 9 0 9
cfi=(11)
cfn=(228)
calls=9 0x403ff6 -95 
* * 1962 684 684 0 0 0 0 0 0 9
+5 * 9 0 9
+4 +16 9 9
+4 * 9
+3 * 9 0 9
cfi=(2)
cfn=(106)
calls=9 0x40325e 113 
* * 54 27 18
+5 * 9
+3 * 9 9
+4 * 9 9
+4 * 9 9 0 1 0 0 1
+4 * 9 9
+3 -1 9
+3 * 9
+3 * 9 0 9
cfi=(14)
cfn=(150)
calls=9 0x40326c 148 
* * 279 90 108
+5 +4 9 9
+4 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9
+3 * 9
+3 * 9
+4 * 9
+3 * 9 9
+4 * 9 9
+3 * 9 9
+4 -2 9
+3 * 9
+3 * 9 0 9 1 0 0 1
cfi=(2)
cfn=(158)
calls=9 0x403ce6 171 
* * 1222 326 219 1 0 0 1 0 0 232 8 18
+5 +3 9 9
+4 * 9 9
+4 * 9 0 9
+3 +1 9 9
+4 * 9 9
+4 * 9 0 9
+4 +1 9 9
+4 * 9
+8 * 9 9
+4 * 9
+3 * 9 9
+4 * 9 0 9
+4 +2 9
jump=9 0x40367f * 
* * 
0x40367f * 9 0 0 1 0 0 1
+4 * 9 9
+1 * 9 9
+2 * 9 9
+1 * 9 9

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 824 0 824 1 0 0 1
+1 * 824
+3 * 824
+4 * 824 0 824
+4 * 824 0 824
+4 +1 824 824
+4 * 824
+3 * 824 0 824
cfi=(2)
cfn=(2)
calls=824 0x402d74 645 
* * 10712 4944 1648
+5 * 824
+3 * 824 0 824
+3 +1 824 824
+6 * 824 0 824
+3 * 824 824
+6 * 824 0 824
+3 +1 824 824
+6 * 824 0 824 1 0 0 1
+3 * 824 824
+6 * 824 0 824
+3 +2 824 0 824
+7 * 824
jump=824 +86 * 
* * 
+2 +1 340724 340724
+3 * 340724
+3 * 340724 340724
+4 * 340724
+3 * 340724
+3 * 340724 0 340724
cfi=(2)
cfn=(144)
calls=340724 0x402d9a 770 
* * 3747964 1703620 1022172
+5 * 340724 340724
+4 * 340724 340724
+5 * 340724
+4 * 340724 0 340724
+5 +1 340724 340724
+3 * 340724
+3 * 340724 340724
+4 * 340724
+3 * 340724
+3 * 340724 0 340724
cfi=(2)
cfn=(146)
calls=340724 0x402dba 770 
* * 3747964 1703620 1022172 1 0 0 1
+5 * 340724 340724
+2 * 340724
+4 * 340724 340724
+5 * 340724
+4 * 340724 0 340724
+5 -2 340724 0 340724
+4 * 340724 340724
+3 * 340724
+3 * 340724 340724
+3 * 340724 0 0 0 0 0 0 0 0 340724 825
jcnd=339900/340724 -93 +1 
* * 
-9 * 824 824 0 1 0 0 1
+3 * 824
+3 * 824 824
+3 * 824 0 0 0 0 0 0 0 0 824
jcnd=824/824 -93 +1 
* * 
+2 +4 824 824
+3 * 824
+3 * 824
+4 * 824 824 0 1 0 0 1
+5 * 824
+4 * 824
+3 * 824 0 824
+5 +1 824 824
+3 * 824
+3 * 824
+4 * 824 824
+5 * 824
+4 * 824
+3 * 824 0 824
+5 +1 824 0 824
+7 * 824
jump=824 0x4016ee * 
* * 
+2 +1 340724 340724
+3 * 340724
+3 * 340724 340724
+4 * 340724
+3 * 340724 0 0 1 0 0 1
+3 * 340724 0 340724
cfi=(2)
cfn=(146)
calls=340724 0x402dba 770 
* * 3747964 1703620 1022172
+5 * 340724 340724
+2 * 340724
+4 * 340724 340724
+5 * 340724 0 340724
+5 +1 340724 340724
+3 * 340724
+3 * 340724 340724
+4 * 340724
+3 * 340724
+3 * 340724 0 340724
cfi=(2)
cfn=(144)
calls=340724 0x402d9a 770 
* * 3747964 1703620 1022172
+5 * 340724 340724
+4 * 340724 340724
+5 * 340724 0 340724
+5 +1 340724 340724
+5 * 340724 340724
+5 * 340724 340724
+5 * 340724
+4 * 340724 0 340724
+5 +1 340724 340724
+5 * 340724 340724
+5 * 340724 340724
+5 * 340724
+4 * 340724 0 340724
+5 -4 340724 0 340724
+4 * 340724 340724
+3 * 340724
+3 * 340724 340724
+3 * 340724 0 0 0 0 0 0 0 0 340724 825
jcnd=339900/340724 0x401672 +1 
* * 
-9 * 824 824 0 1 0 0 1
+3 * 824
+3 * 824 824
+3 * 824 0 0 0 0 0 0 0 0 824
jcnd=824/824 0x401672 +1 
* * 
+6 +6 824 824 0 1 0 0 1
+5 * 824 824
+5 * 824 0 824
+5 +2 824 824
+3 +1 824 0 824
+3 * 824 824
+5 * 824 824
+1 * 824 824

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 824
+7 * 824
+7 * 824
+3 * 824
+3 * 824 0 824
cfi=(2)
cfn=(4)
calls=824 0x4030b2 310 
* * 1147717 359844 343999 68 18 16 68 18 16 68536 2184 3294 411
+5 * 824
+7 * 824
+7 * 824
+3 * 824
+3 * 824 0 824
cfi=(2)
cfn=(80)
calls=824 0x402ff4 310 
* * 1138768 355299 337853 46 26 166 46 26 166 66471 3204 3294
+5 * 824 0 0 1 0 0 1
+7 * 824
+7 * 824
+3 * 824
+3 * 824 0 824
cfn=(142)
calls=824 0x401585 -52 
* * 35488856 15693904 8191384 8 0 0 8 0 0 683096 1650
+5 * 824 0 824
+8 * 824 824
+6 * 824 0 824
+6 * 824
+7 * 824
+3 * 824 0 824
cfi=(2)
cfn=(148)
calls=824 0x402df4 414 
* * 204528 64088 45279 33 5 0 33 5 0 22630 715 1648
+5 * 824
+7 * 824
+3 * 824 0 824 1 0 0 1
cfi=(2)
cfn=(178)
calls=824 0x402e74 414 
* * 221745 70292 50685 8 1 0 8 1 0 27056 47 1648
+5 +2 824
+7 * 824
+7 * 824
+3 * 824
+3 * 824 0 824
cfi=(2)
cfn=(4)
calls=824 0x4030b2 310 
* * 1147285 359809 343879 2 0 1 2 0 1 68491 1279 3294
+5 * 824
+7 * 824
+7 * 824
+3 * 824
+3 * 824 0 824
cfi=(2)
cfn=(80)
calls=824 0x402ff4 310 
* * 1136750 355167 337635 0 0 2 0 0 2 66058 2239 3294
+5 * 824 824
+6 * 824 0 0 1 0 0 1
+7 * 824
+7 * 824 0 824
+6 * 824 824
+8 * 824
+3 * 824
+3 * 824 0 824
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=824 0x401719 -33 
* * 16403368 6832608 3760324 4 0 0 4 0 0 341548 825
+5 * 824 0 824
+8 * 824 824
+6 * 824 0 824
+6 * 824
+7 * 824 0 0 1 0 0 1
+3 * 824 0 824
cfi=(2)
cfn=(148)
calls=824 0x402df4 414 
* * 204528 64088 45279 0 0 0 0 0 0 22630 706 1648
+5 * 824
+7 * 824
+3 * 824 0 824
cfi=(2)
cfn=(178)
calls=824 0x402e74 414 
* * 221745 70292 50685 0 0 0 0 0 0 27056 36 1648
+5 +2 824 824
+7 * 824
+3 * 824 0 824
cfi=(2)
cfn=(2)
calls=824 0x402d74 645 
* * 10712 4944 1648
+5 * 824 824
+6 * 824
+3 * 824
+3 * 824
+3 * 824 824
+7 * 824
+3 * 824 0 0 1 0 0 1
+3 * 824 0 824
cfi=(2)
cfn=(144)
calls=824 0x402d9a 770 
* * 9064 4120 2472
+5 * 824
+3 * 824
+7 * 824
+3 * 824
+3 * 824 0 824
cfi=(2)
cfn=(200)
calls=824 0x402eda 901 
* * 67233 25944 19610 42 57 11 42 57 11 2594 89 53
+5 +1 824 824
+7 * 824
+3 * 824 0 824
cfi=(2)
cfn=(10)
calls=824 0x402f54 645 
* * 10712 4944 1648 0 1 0 0 1
+5 * 824 824
+6 * 824
+3 * 824
+3 * 824
+3 * 824 824
+7 * 824 0 0 1 0 0 1
+3 * 824
+3 * 824 0 824
cfi=(2)
cfn=(146)
calls=824 0x402dba 770 
* * 9064 4120 2472
+5 * 824
+3 * 824
+7 * 824
+3 * 824
+3 * 824 0 824
cfi=(2)
cfn=(244)
calls=824 0x402f7a 901 
* * 66436 25726 19434 20 52 99 20 52 99 2432 75 53
+5 +1 824 824
+7 * 824
+3 * 824 0 824
cfi=(2)
cfn=(10)
calls=824 0x402f54 645 
* * 10712 4944 1648
+5 * 824 824
+6 * 824
+3 * 824
+3 * 824
+3 * 824 824 0 1 0 0 1
+7 * 824
+3 * 824
+3 * 824 0 824
cfi=(2)
cfn=(146)
calls=824 0x402dba 770 
* * 9064 4120 2472
+5 * 824 824
+2 * 824
+4 * 824 824
+8 * 824 824
+8 * 824 0 824
+8 +1 824 824
+7 * 824
+3 * 824 0 824
cfi=(2)
cfn=(2)
calls=824 0x402d74 645 
* * 10712 4944 1648
+5 * 824 824 0 1 0 0 1
+6 * 824
+3 * 824
+3 * 824
+3 * 824 824
+7 * 824
+3 * 824
+3 * 824 0 824
cfi=(2)
cfn=(144)
calls=824 0x402d9a 770 
* * 9064 4120 2472
+5 * 824 824
+4 * 824 824
+8 * 824
+4 * 824 824
+8 * 824
+3 * 824 0 824
+8 +2 824 0 824
+7 -12 824 824
+8 * 824 824
+7 * 824 0 0 0 0 0 0 0 0 824 1
jcnd=1/824 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 824
+7 * 824
+3 * 824 0 824
cfi=(2)
cfn=(2)
calls=824 0x402d74 645 
* * 10712 4944 1648 2 0 1 2 0 1
+5 * 824
+3 * 824 824
+7 * 824
+3 * 824 0 824
cfi=(2)
cfn=(2)
calls=824 0x402d74 645 
* * 10712 4944 1648 0 1 0 0 1
+5 * 824
+3 * 824 0 0 0 0 0 0 0 0 824 2
+2 * 824 0 0 1 0 0 1
+5 * 824
jump=824 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 824
+2 * 824 0 0 0 0 0 0 0 0 824
jcnd=824/824 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 824 0 824
+1 * 824
+3 * 824
+4 * 824 0 824
+4 * 824 0 824
+4 * 824 0 824
+5 +1 824 824
+4 * 824
+3 * 824 0 824
cfi=(2)
cfn=(2)
calls=824 0x402d74 645 
* * 10712 4944 1648
+5 * 824
+3 * 824 0 824
+3 +1 824 824 0 1 0 0 1
+6 * 824 0 824
+3 * 824 824
+6 * 824 0 824
+3 +2 824 0 824
+7 * 824
jump=824 +86 * 
* * 
+2 +1 340724 340724
+3 * 340724
+3 * 340724 340724
+4 * 340724
+3 * 340724
+3 * 340724 0 340724
cfi=(2)
cfn=(144)
calls=340724 0x402d9a 770 
* * 3747964 1703620 1022172
+5 * 340724 340724
+4 * 340724 340724
+5 * 340724
+4 * 340724 0 340724
+5 +1 340724 340724
+3 * 340724
+3 * 340724 340724
+4 * 340724
+3 * 340724
+3 * 340724 0 340724
cfi=(2)
cfn=(146)
calls=340724 0x402dba 770 
* * 3747964 1703620 1022172
+5 * 340724 340724
+2 * 340724
+4 * 340724 340724
+5 * 340724
+4 * 340724 0 340724
+5 -2 340724 0 340724
+4 * 340724 340724
+3 * 340724
+3 * 340724 340724
+3 * 340724 0 0 0 0 0 0 0 0 340724 825
jcnd=339900/340724 -93 +1 
* * 
-9 * 824 824 0 1 0 0 1
+3 * 824
+3 * 824 824
+3 * 824 0 0 0 0 0 0 0 0 824
jcnd=824/824 -93 +1 
* * 
+2 +4 824 824
+3 * 824
+3 * 824 0 0 1 0 0 1
+4 * 824 824
+5 * 824
+4 * 824
+3 * 824 0 824
+5 +1 824 824
+3 * 824
+3 * 824
+4 * 824 824
+5 * 824
+4 * 824
+3 * 824 0 824
+5 +1 824 824
+5 * 824 824
+5 * 824 824
+5 * 824 0 0 1 0 0 1
+4 * 824
+3 * 824 0 824
+5 +2 824 824
+3 +1 824 0 824
+3 * 824 824
+5 * 824 824
+1 * 824 824

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 3314 0 3314 1 0 0 1
+2 0 3314 0 3314
+2 0 3314 0 3314
+2 0 3314
+3 0 3314 0 3314
+2 0 3314 0 3314
+1 0 3314 0 3314
+1 0 3314
+3 0 3314
+4 0 3314 3314
+4 0 3314 0 3314
+4 0 3314
+3 0 3314
+4 0 3314
+3 0 3314
+3 0 3314
+3 0 3314 0 0 1 0 0 1 0 0 3314
+6 0 3314
+4 0 3314 0 0 0 0 0 0 0 0 3314
+6 0 3314
+4 0 3314 0 0 0 0 0 0 0 0 3314
+6 0 3314 3314
+7 0 3314 0 0 0 0 0 0 0 0 3314 4
jcnd=3190/3314 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124 2
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 3190
+2 0 3190 0 0 0 0 0 0 0 0 3190
+6 0 3190 3190 0 1 0 0 1
+4 0 3190
+3 0 3190
+2 0 3190 0 0 0 0 0 0 0 0 3190
jcnd=3190/3190 0x3877c78a40 0 
* 0 
+6 0 3190 3190
+4 0 3190
+3 0 3190 0 0 0 0 0 0 0 0 3190
+6 0 3190 3190
+5 0 3190
+4 0 3190 0 0 0 0 0 0 0 0 3190
jcnd=3190/3190 0x3877c7907c 0 
* 0 
+6 0 3190 3190
+5 0 3190
+4 0 3190 0 0 0 0 0 0 0 0 3190
+6 0 3190
+4 0 3190 0 0 1 0 0 1 0 0 3190
+6 0 3190
+4 0 3190 3190
+7 0 3190 0 0 0 0 0 0 0 0 3190
+6 0 3190 3190
+6 0 3190
+2 0 3190 0 0 0 0 0 0 0 0 3190
+6 0 3190 3190
+4 0 3190 0 0 0 0 0 0 0 0 3190 6
jcnd=3185/3190 +70 0 
* 0 
+2 0 5 5
+3 0 5
+3 0 5
+3 0 5 5
+4 0 5 5
+4 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5 2
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+8 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 1
jcnd=4/5 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 3190 3190 0 1 0 0 1
+4 0 3190 0 0 0 0 0 0 0 0 3190 1342
jcnd=1430/3190 0x3877c78bf0 0 
* 0 
+6 0 1760 1760 0 0 1 0 0 1
+6 0 1760 0 0 1 0 0 1 0 0 1760 71
jcnd=83/1760 0x3877c78a78 0 
* 0 
+6 0 1677 1677
+5 0 1677 1677
+5 0 1677 1677
+4 0 1677 0 0 0 0 0 0 0 0 1677
+6 0 1677 1677
+4 0 1677 0 0 0 0 0 0 0 0 1677
+6 0 1677 1677
+9 0 1677 0 1677
+4 0 1677 0 1677
+4 0 1677 0 0 0 0 0 0 0 0 1677 8
jcnd=1145/1677 +16 0 
* 0 
+2 0 532 532
+5 0 532
+3 0 532 0 0 1 0 0 1 0 0 532 12
jcnd=504/532 0x3877c78ee4 0 
* 0 
+6 0 1677
+3 0 1677
+4 0 1677 1677
+4 0 1677 1677
+4 0 1677 0 0 0 0 0 0 0 0 1677
-12 0 83
+4 0 83 83
+4 0 83 83
+4 0 83 0 0 0 0 0 0 0 0 83
+6 0 1760
+7 0 1760 0 1760
+4 0 1760 0 1760
+4 0 1760 0 0 0 0 0 0 0 0 1760 70
jcnd=441/1760 +18 0 
* 0 
+2 0 1319 0 1319
+8 0 1319 0 1319
+8 0 1319 0 1319
+4 0 1319
+3 0 1319 0 1319 1 0 0 1
+4 0 1319
+4 0 1319 0 1319
+4 0 1319 0 1319
+4 0 1319
+7 0 1319 0 0 0 0 0 0 0 0 1319
jcnd=1319/1319 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 1430
+7 0 1430 0 0 0 0 0 0 0 0 1430
jcnd=1430/1430 0x3877c78b20 0 
* 0 
0x3877c78a40 0 3190 0 0 1 0 0 1
+5 0 3190 3190
+4 0 3190 3190
+7 0 3190 0 0 0 0 0 0 0 0 3190
jcnd=3190/3190 +16 0 
* 0 
+16 0 3190 0 3190
+5 0 3190 0 0 0 0 0 0 0 0 3190
+6 0 3190
+3 0 3190
jump=3190 0x3877c7878f 0 
* 0 
+10 0 83 0 83
+6 0 83 0 0 1 0 0 1
jump=83 0x3877c78885 0 
* 0 
0x3877c78b20 0 3190 3190 0 1 0 0 1
+4 0 3190
+2 0 3190 0 0 0 0 0 0 0 0 3190
+6 0 3190 3190
+7 0 3190 0 0 0 0 0 0 0 0 3190
jcnd=3190/3190 +15 0 
* 0 
+15 0 3190 0 3190 1 0 0 1
+4 0 3190 0 0 0 0 0 0 0 0 3190 2
+6 0 3190
+4 0 3190 3190
+1 0 3190 3190
+1 0 3190 3190
+2 0 3190 3190
+2 0 3190 3190
+2 0 3190 3190
+2 0 3190 3190
0x3877c78bf0 0 1430 0 0 1 0 0 1
+3 0 1430 0 1430
+4 0 1430
+3 0 1430
+4 0 1430 0 1430 1 0 0 1
+4 0 1430
jump=1430 0x3877c788cf 0 
* 0 
0x3877c78ee4 0 504 504 0 1 0 0 1
+5 0 504 0 0 0 0 0 0 0 0 504
+6 0 504 504
+5 0 504 0 504
+4 0 504 504
+5 0 504 0 504
+4 0 504
jump=504 0x3877c78882 0 
* 0 
+17 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 3190 3190 0 1 1 0 1 1
+4 0 3190 0 0 1 0 0 1
+7 0 3190
+4 0 3190
+3 0 3190
+3 0 3190 0 0 0 0 0 0 0 0 3190
jcnd=3190/3190 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 3304 0 0 1 0 0 1
+7 0 3304
+3 0 3304
+3 0 3304 3304 0 0 1 0 0 1
+4 0 3304
+4 0 3304 0 0 0 0 0 0 0 0 0 0 3304 411
jump=408 0x3877c89be8 0 
* 0 
jump=420 0x3877c89bd0 0 
* 0 
jump=408 0x3877c89bb8 0 
* 0 
jump=408 +11 0 
* 0 
jump=408 0x3877c89c48 0 
* 0 
jump=418 0x3877c89c30 0 
* 0 
jump=416 0x3877c89c18 0 
* 0 
jump=418 0x3877c89c00 0 
* 0 
+11 0 408 408
+3 0 408
+4 0 408
+4 0 408 408
+4 0 408
+4 0 408 0 408
+4 0 408
+9 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408
+4 0 408
+4 0 408
+4 0 408 0 0 0 0 0 0 0 0 408
jcnd=8/408 0x3877c89c60 0 
* 0 
-40 0 84582 84582
+4 0 84582 0 84582 0 0 22 0 0 22
+4 0 84582 84582
+4 0 84582 0 84582 0 0 15 0 0 15
+4 0 84582 84582
+4 0 84582 0 84582 0 0 32 0 0 32
+4 0 84582 84582
+4 0 84582 0 84582
+4 0 84582
+4 0 84582
+4 0 84582 0 0 0 0 0 0 0 0 84582 2830
jcnd=3268/84582 0x3877c89c60 0 
* 0 
-32 0 418 418
+4 0 418 0 418
+4 0 418 418
+4 0 418 0 418
+4 0 418 418
+4 0 418 0 418
+4 0 418
+4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418
jcnd=10/418 0x3877c89c60 0 
* 0 
-24 0 416 416
+4 0 416 0 416
+4 0 416 416
+4 0 416 0 416
+4 0 416
+4 0 416
+4 0 416 0 0 0 0 0 0 0 0 416
jcnd=8/416 0x3877c89c60 0 
* 0 
-16 0 418 418 0 1 0 0 1
+4 0 418 0 418
+4 0 418 0 0 1 0 0 1
+4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 6
jcnd=10/418 0x3877c89c60 0 
* 0 
+6 0 82938
+4 0 82938 82938
+3 0 82938 0 82938 0 0 1 0 0 1
+3 0 82938 82938
+4 0 82938 0 82938 0 0 34 0 0 34
+4 0 82938 82938
+4 0 82938 0 82938 0 0 49 0 0 49
+4 0 82938 82938
+4 0 82938 0 82938
+4 0 82938
jump=82938 -80 0 
* 0 
-30 0 408 408
+3 0 408 0 408
+3 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408 0 0 1 0 0 1
+4 0 408 408
+4 0 408 0 408
+4 0 408
jump=408 -80 0 
* 0 
-24 0 420 420
+4 0 420 0 420
+4 0 420 420
+4 0 420 0 420
+4 0 420 420
+4 0 420 0 420
+4 0 420
jump=420 -80 0 
* 0 
-16 0 408 408
+4 0 408 0 408
+4 0 408 408
+4 0 408 0 408
+4 0 408
jump=408 -80 0 
* 0 
+8 0 408 408
+3 0 408
+4 0 408 0 0 1 0 0 1
+4 0 408
+4 0 408
jump=408 -39 0 
* 0 
+9 0 420
+3 0 420 0 0 0 0 0 0 0 0 420
+6 0 420 420
+3 0 420
+4 0 420
jump=420 -72 0 
* 0 
+8 0 408
+4 0 408 408
+3 0 408 0 0 0 0 0 0 0 0 408
+2 0 408
+4 0 408
jump=408 -99 0 
* 0 
+11 0 418 418 0 1 0 0 1
+3 0 418
+4 0 418
+4 0 418
+4 0 418
jump=418 0x3877c89b78 0 
* 0 
+9 0 416 416
+3 0 416
+4 0 416
+4 0 416
+4 0 416
jump=416 0x3877c89b70 0 
* 0 
+9 0 418 418
+3 0 418
+4 0 418
+4 0 418
+4 0 418
jump=418 0x3877c89b68 0 
* 0 
+9 0 408 408
+3 0 408
+4 0 408
+4 0 408
+4 0 408
jump=408 0x3877c89b60 0 
* 0 
+9 0 3304 0 3304 1 0 0 1
+3 0 3304 3304

fn=(104) alloc_perturb
0x3877c77180 0 3169 3169 0 1 0 0 1
+6 0 3169
+2 0 3169 0 0 0 0 0 0 0 0 3169 2
+2 0 3169 3169

fn=(38) _int_malloc
0x3877c79a00 0 3314 0 3314 1 0 0 1
+2 0 3314
+3 0 3314 0 3314
+2 0 3314 0 3314
+2 0 3314 0 3314 0 0 1 0 0 1
+2 0 3314
+3 0 3314 0 3314
+1 0 3314 0 3314
+1 0 3314
+4 0 3314
+4 0 3314 0 0 0 0 0 0 0 0 3314
+6 0 3314
+4 0 3314
+6 0 3314
+3 0 3314
+4 0 3314
+4 0 3314
+4 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314
+6 0 3314 3314 0 1 1 0 1 1
+7 0 3314 0 0 0 0 0 0 0 0 3314 7
jcnd=3192/3314 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 145 145
+6 0 145
+4 0 145
+2 0 145 0 0 0 0 0 0 0 0 145
+6 0 145
+3 0 145
+4 0 145 145
+1 0 145 145
+1 0 145 145
+2 0 145 145
+2 0 145 145
+2 0 145 145
+2 0 145 145
-14 0 3169
+4 0 3169 3169
+1 0 3169 3169
+1 0 3169 3169
+2 0 3169 3169
+2 0 3169 3169
+2 0 3169 3169
+2 0 3169 3169
+7 0 3209
+7 0 3209 0 0 1 0 0 1 0 0 3209 7
jcnd=2306/3209 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 1 0 0 1
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 2306 0 0 1 0 0 1
+3 0 2306
+4 0 2306
+4 0 2306 0 0 1 0 0 1 0 0 2306 7
jcnd=2116/2306 0x3877c7a1a4 0 
* 0 
+6 0 190
+3 0 190
+4 0 190
+4 0 190 0 0 0 0 0 0 0 0 190
+6 0 190
+3 0 190 0 190
+4 0 190 190
+6 0 190
+5 0 190 0 0 0 0 0 0 0 0 190
jcnd=190/190 +30 0 
* 0 
-11 0 2116 2116
+6 0 2116
+5 0 2116 0 0 0 0 0 0 0 0 2116 1
jcnd=2115/2116 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 921 249 195 8 2 0 8 2 0 191 30
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 3208 0 0 1 0 0 1
+3 0 3208
+3 0 3208
+3 0 3208
+4 0 3208
+3 0 3208
+4 0 3208 0 3208
+5 0 3208
+3 0 3208 0 3208
+4 0 3208 0 3208
+4 0 3208 0 3208
+5 0 3208
+3 0 3208
+3 0 3208
+3 0 3208
+3 0 3208
+4 0 3208
+4 0 3208 0 0 1 0 0 1
+4 0 3208 0 3208
+4 0 3208
+4 0 3208 0 3208
+5 0 3208 0 3208
+5 0 3208
+3 0 3208
+3 0 3208 0 3208
+5 0 3208
+5 0 3208
+3 0 3208 0 3208
+4 0 3208 0 3208
+4 0 3208
+6 0 3208 0 3208
+4 0 3208 0 3208
+5 0 3208 0 0 1 0 0 1
+3 0 3208
+3 0 3208
+3 0 3208
jump=3208 +87 0 
* 0 
+8 0 1368
+3 0 1368
+4 0 1368
+2 0 1368
+2 0 1368
+3 0 1368
+3 0 1368
+3 0 1368
+2 0 1368
+2 0 1368
+5 0 1368
+2 0 1368 1368
+4 0 1368
+3 0 1368
+4 0 1368 0 1368
+4 0 1368 0 1368
+8 0 1368
+7 0 1368 0 1368
+4 0 1368 0 1368
+4 0 1368 0 1368
+4 0 1368 0 0 0 0 0 0 0 0 1368
-38 0 1817
+3 0 1817
+4 0 1817 0 1817
+4 0 1817 0 1817
+8 0 1817
+7 0 1817 0 1817
+4 0 1817 0 1817
+4 0 1817 0 1817
+4 0 1817 0 0 0 0 0 0 0 0 1817
+6 0 6394 6394 0 1 0 0 1
+4 0 6394
+3 0 6394 0 0 0 0 0 0 0 0 6394 211
jcnd=3148/6394 0x3877c79ef0 0 
* 0 
+6 0 3246 3246
+4 0 3246 3246
+4 0 3246
+4 0 3246 0 0 0 0 0 0 0 0 3246
+6 0 3246 3246 0 1 0 0 1
+7 0 3246 0 0 0 0 0 0 0 0 3246 2
+6 0 3246
+4 0 3246
+7 0 3246 0 0 0 0 0 0 0 0 3246 6
jcnd=2336/3246 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 3225
+3 0 3225 0 3225
+4 0 3225 0 3225
+5 0 3225 0 0 0 0 0 0 0 0 3225 28
jcnd=40/3225 0x3877c7a090 0 
* 0 
+6 0 3185
+7 0 3185 0 0 0 0 0 0 0 0 3185 575
jcnd=1368/3185 0x3877c79c50 0 
* 0 
+6 0 1817 0 0 1 0 0 1
+3 0 1817
+4 0 1817
+4 0 1817 0 0 0 0 0 0 0 0 1817 524
jcnd=626/1817 0x3877c79db0 0 
* 0 
+6 0 1191
+3 0 1191
+4 0 1191
+2 0 1191
+2 0 1191
+3 0 1191
+3 0 1191
+8 0 1191
+3 0 1191
+2 0 1191
+2 0 1191
+4 0 1191 1191
+4 0 1191
+3 0 1191 0 0 1 0 0 1 0 0 1191 17
jcnd=1127/1191 0x3877c79e15 0 
* 0 
-36 0 626
+2 0 626
+2 0 626
+3 0 626
+3 0 626
+8 0 626
+3 0 626
+2 0 626
+2 0 626
+4 0 626 626
+4 0 626
+3 0 626 0 0 0 0 0 0 0 0 626
jcnd=626/626 0x3877c79e15 0 
* 0 
+6 0 64 64
+4 0 64
+4 0 64 64
+4 0 64 0 0 0 0 0 0 0 0 64 4
jcnd=48/64 +38 0 
* 0 
+2 0 16 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+3 0 16
jump=16 0x3877c79c73 0 
* 0 
+13 0 48 48
+4 0 48
+3 0 48 0 0 0 0 0 0 0 0 48
+2 0 48
+3 0 48 0 0 0 0 0 0 0 0 48 8
jcnd=16/48 0x3877c79ee0 0 
* 0 
+6 0 32 32
+4 0 32 0 32
+4 0 32 0 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32
jump=32 0x3877c79c73 0 
* 0 
-4 0 16 16
+4 0 16
jump=16 0x3877c79c73 0 
* 0 
+14 0 626 0 0 1 0 0 1
+3 0 626
+4 0 626
+4 0 626 0 0 0 0 0 0 0 0 626
+2 0 626
+3 0 626 0 0 1 0 0 1
+7 0 626
jump=626 0x3877c79d18 0 
* 0 
+78 0 1753 0 1753
+4 0 1753 0 1753
+4 0 1753
+3 0 1753
jump=1753 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=385/406 0x3877c79ce1 0 
* 0 
+6 0 21 0 0 1 0 0 1
+3 0 21
+3 0 21
+3 0 21
+7 0 21 0 21
+4 0 21 0 21
+4 0 21
+3 0 21 0 21
+4 0 21 0 21 0 0 16 0 0 16
+4 0 21 0 21
+4 0 21 0 0 0 0 0 0 0 0 21 4
jcnd=10/21 +18 0 
* 0 
+2 0 11 0 11 0 0 2 0 0 2
+8 0 11 0 11
+8 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 21
+3 0 21
jump=21 0x3877c79ae3 0 
* 0 
+39 0 16 16
+4 0 16
jump=16 0x3877c79d9e 0 
* 0 
+12 0 3148 0 0 1 0 0 1
+7 0 3148
+3 0 3148 0 0 0 0 0 0 0 0 3148 38
jcnd=2286/3148 0x3877c7a0b0 0 
* 0 
+6 0 3132 3132 0 1 0 0 1
+4 0 3132
+3 0 3132
+3 0 3132
+2 0 3132
+4 0 3132
+3 0 3132
+3 0 3132
+2 0 3132
+2 0 3132
+2 0 3132
+2 0 3132 3132 0 0 1 0 0 1
+8 0 3132
+5 0 3132
+5 0 3132
+2 0 3132 0 0 0 0 0 0 0 0 3132
-2 0 1562
+2 0 1562 0 0 0 0 0 0 0 0 1562 2
jcnd=2/1562 +14 0 
* 0 
+2 0 4692
+2 0 4692 0 0 0 0 0 0 0 0 4692 61
jcnd=2052/4692 +64 0 
* 0 
+2 0 2640
+8 0 2640
+3 0 2640
+3 0 2640 0 0 0 0 0 0 0 0 2640 68
jcnd=625/2640 0x3877c79fc0 0 
* 0 
-6 0 1235
+3 0 1235
+3 0 1235 0 0 0 0 0 0 0 0 1235 11
jcnd=809/1235 0x3877c79fc0 0 
* 0 
+2 0 2441
+2 0 2441 2441 0 0 1 0 0 1
+8 0 2441
+2 0 2441 0 0 0 0 0 0 0 0 2441 30
jcnd=1233/2441 -20 0 
* 0 
+2 0 1208
+2 0 1208
+5 0 1208
+3 0 1208
+3 0 1208
+2 0 1208
+2 0 1208
+5 0 1208 0 0 0 0 0 0 0 0 1208
jcnd=2/1208 +14 0 
* 0 
+2 0 1206
+2 0 1206
+4 0 1206
+2 0 1206
+2 0 1206 0 0 0 0 0 0 0 0 1206 6
jcnd=1144/1206 -8 0 
* 0 
-8 0 13932
+4 0 13932
+2 0 13932
+2 0 13932 0 0 0 0 0 0 0 0 13932 830
jcnd=10972/13932 -8 0 
* 0 
-2 0 2052 0 0 1 0 0 1
+2 0 2052 0 0 0 0 0 0 0 0 2052 35
jcnd=1816/2052 -8 0 
* 0 
+2 0 3260 3260 0 0 21 0 0 21
+4 0 3260 0 0 1 0 0 1
+3 0 3260 0 0 0 0 0 0 0 0 3260 1483
jcnd=1698/3260 0x3877c7a1cf 0 
* 0 
+6 0 1562
+2 0 1562
+4 0 1562
+2 0 1562
+2 0 1562
+2 0 1562 0 1562
+8 0 1562
jump=1562 0x3877c79f30 0 
* 0 
+37 0 1434 1434 0 1 0 0 1
+5 0 1434 1434
+4 0 1434
+4 0 1434 1434
+5 0 1434 0 0 0 0 0 0 0 0 1434 1
jcnd=1434/1434 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 40 0 0 1 0 0 1
+7 0 40 0 40
+6 0 40
+3 0 40 0 0 0 0 0 0 0 0 40
jcnd=40/40 0x3877c79ace 0 
* 0 
+16 0 2286 2286
+4 0 2286
+4 0 2286
+2 0 2286
+5 0 2286 2286 0 1 4 0 1 4
+4 0 2286
+3 0 2286 0 0 0 0 0 0 0 0 2286 17
jcnd=2198/2286 0x3877c79f00 0 
* 0 
+6 0 88 88
+4 0 88 0 0 0 0 0 0 0 0 88 4
jcnd=72/88 0x3877c79f00 0 
* 0 
+6 0 16
+3 0 16 16
+4 0 16 16
+4 0 16
+3 0 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a650 0 
* 0 
+26 0 16 0 0 1 0 0 1
+3 0 16 16
+4 0 16
+3 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16 2
+6 0 16 16
+8 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16 0 1 0 0 1
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 2
jcnd=16/16 0x3877c7a659 0 
* 0 
+6 0 16
+4 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c7a2e3 0 
* 0 
+6 0 8 8
+4 0 8
+7 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+4 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c7a285 0 
* 0 
+31 0 2116 0 0 1 0 0 1
+3 0 2116 0 2116
+4 0 2116
jump=2116 0x3877c79b99 0 
* 0 
+36 0 1698 1698 0 1 1 0 1 1
+4 0 1698 1698
+4 0 1698
+3 0 1698 1698
+4 0 1698
+4 0 1698
+3 0 1698
+3 0 1698 1698
+4 0 1698 0 0 0 0 0 0 0 0 1698
+6 0 1698 1698
+4 0 1698 0 0 0 0 0 0 0 0 1698
+6 0 1698 1698 0 1 0 0 1
+8 0 1698 0 1698
+4 0 1698 0 1698
+4 0 1698 0 0 0 0 0 0 0 0 1698 12
jcnd=418/1698 +38 0 
* 0 
+2 0 1280 1280 0 0 1 0 0 1
+4 0 1280
+3 0 1280 0 0 0 0 0 0 0 0 1280
+2 0 1280 1280
+5 0 1280 0 0 0 0 0 0 0 0 1280
+6 0 1280 1280
+4 0 1280 0 1280
+4 0 1280 1280
+4 0 1280 0 1280
+4 0 1280
+4 0 1280 0 0 0 0 0 0 0 0 1280 8
jcnd=8/1280 0x3877c7a2e3 0 
* 0 
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 1669 1669
+4 0 1669 1669 0 1 0 0 1
+4 0 1669 0 0 0 0 0 0 0 0 1669
+6 0 1669
+4 0 1669
+7 0 1669 0 1669 0 0 8 0 0 8
+4 0 1669 0 1669
+4 0 1669 0 1669
+4 0 1669 0 1669
+4 0 1669 0 0 0 0 0 0 0 0 1669 4
jcnd=1204/1669 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 1204
+7 0 1204 0 0 0 0 0 0 0 0 1204 4
jcnd=680/1204 +18 0 
* 0 
+2 0 531 0 531 0 0 1 0 0 1
+8 0 531 0 531 1 0 0 1
+8 0 531
+7 0 531 0 531 0 0 2 0 0 2
+4 0 531
+3 0 531
+3 0 531
+4 0 531
+3 0 531
+4 0 531
+3 0 531
+3 0 531
+4 0 531 0 531
+4 0 531 0 531
+4 0 531
jump=531 +71 0 
* 0 
-46 0 1146
+7 0 1146 0 1146
+4 0 1146
+3 0 1146
+3 0 1146
+4 0 1146
+3 0 1146
+4 0 1146
+3 0 1146
+3 0 1146
+4 0 1146 0 1146
+4 0 1146 0 1146 0 0 1 0 0 1
+4 0 1146
jump=1146 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 37
+7 0 37 0 37
+6 0 37
+3 0 37 0 0 0 0 0 0 0 0 37 2
jcnd=37/37 +7 0 
* 0 
+7 0 1714
+4 0 1714 0 0 1 0 0 1
+3 0 1714
+3 0 1714 0 1714
cfn=(104)
calls=1714 0x3877c77180 0 
* 0 6856 3428 0 1 0 0 1 0 0 1714
+5 0 1714
+3 0 1714
jump=1714 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 1434 0 0 1 0 0 1
+7 0 1434
+2 0 1434
+4 0 1434
+3 0 1434
+3 0 1434 0 1434
+5 0 1434
+3 0 1434
+4 0 1434
+3 0 1434 0 0 1 0 0 1
+4 0 1434
+4 0 1434
+3 0 1434
+4 0 1434 0 1434
+4 0 1434 0 1434 0 0 51 0 0 51
+4 0 1434
+3 0 1434
+3 0 1434 0 1434
cfn=(104)
calls=1434 0x3877c77180 0 
* 0 5736 2868 0 0 0 0 0 0 0 1434 2
+5 0 1434
+3 0 1434
jump=1434 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 16 16 0 1 0 0 1
+4 0 16
jump=16 0x3877c7a10e 0 
* 0 
+5 0 16 16
+5 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 3314 0 3314 1 0 0 1
+5 0 3314 0 3314
+5 0 3314
+3 0 3314 0 3314
+5 0 3314
+4 0 3314 3314 0 0 1 0 0 1
+7 0 3314 3314 0 0 1 0 0 1
+3 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314 2
+6 0 3314 3314 0 0 1 0 0 1
+7 0 3314 3314 0 1 1 0 1 1
+4 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314
+2 0 3314 3314 0 0 1 0 0 1
+3 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314
jcnd=3314/3314 +97 0 
* 0 
+18 0 3314
+3 0 3314
+3 0 3314 0 3314
cfn=(38)
calls=3314 0x3877c79a00 0 
* 0 769411 97550 116563 47 36 84 47 36 84 114012 4497
+5 0 3314
+3 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314
+2 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314
+2 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314 15
+2 0 3314 3314
+7 0 3314 0 0 0 0 0 0 0 0 3314
jcnd=3314/3314 +13 0 
* 0 
+13 0 3314 0 3314
+2 0 3314 0 0 0 0 0 0 0 0 3314 14
+6 0 3314
+3 0 3314 3314
+4 0 3314 3314
+5 0 3314 3314
+5 0 3314
+4 0 3314 3314
+1 0 3314 0 0 1 0 0 1
+5 0 3314 3314 0 0 1 0 0 1
+7 0 3314 0 0 0 0 0 0 0 0 3314
jcnd=3314/3314 +14 0 
* 0 
+14 0 3314 0 3314 1 0 0 1
+3 0 3314 0 0 0 0 0 0 0 0 3314
+6 0 3314
jump=3314 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 3314 0 3314 1 0 0 1
+2 0 3314
+3 0 3314
+3 0 3314 0 3314
+2 0 3314
+3 0 3314 0 3314
+1 0 3314
+3 0 3314 0 3314
+1 0 3314
+3 0 3314
+4 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314
+6 0 3314
+4 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314 7
jcnd=10/3314 0x3877c838d1 0 
* 0 
+2 0 3304
+3 0 3304
+3 0 3304
+3 0 3304
+3 0 3304
+3 0 3304 0 0 0 0 0 0 0 0 3304
jcnd=3304/3304 +41 0 
* 0 
+41 0 3304 0 0 1 0 0 1
+3 0 3304 0 0 0 0 0 0 0 0 3304
jcnd=3304/3304 0x3877c839c0 0 
* 0 
+24 0 3304
+3 0 3304
+4 0 3304
+3 0 3304
+3 0 3304
+3 0 3304
+3 0 3304
+3 0 3304 0 0 0 0 0 0 0 0 3304 1648
jcnd=1660/3304 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 1654
+10 0 1654 1654 0 0 1 0 0 1
+3 0 1654
+4 0 1654 0 1654
+3 0 1654
+4 0 1654
+4 0 1654 0 0 0 0 0 0 0 0 1654
jcnd=1654/1654 -18 0 
* 0 
-18 0 5018 5018
+3 0 5018
+4 0 5018 0 5018
+3 0 5018
+4 0 5018
+4 0 5018 0 0 0 0 0 0 0 0 5018 11
jcnd=3364/5018 -18 0 
* 0 
+2 0 3314
+4 0 3314
+3 0 3314 3314
+1 0 3314 3314
+1 0 3314 3314
+2 0 3314 3314 0 1 0 0 1
+2 0 3314 3314
0x3877c839c0 0 3304 0 0 1 0 0 1
+3 0 3304
+3 0 3304
+3 0 3304
+4 0 3304 0 3304 0 0 1 0 0 1
cfn=(284)
calls=3304 0x3877c89b20 0 
* 0 1825454 688244 681636 6 1 154 6 1 154 87070 2836 3304 411
+5 0 3304
jump=3304 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 3314 3314 0 1 1 0 1 1
+7 0 3314 3314 0 0 1 0 0 1
+3 0 3314
+3 0 3314 0 0 1 0 0 1 0 0 3314
+6 0 3314
+3 0 3314 0 0 0 0 0 0 0 0 3314 2
+6 0 3314 3314
+4 0 3314
+4 0 3314
+2 0 3314 0 0 0 0 0 0 0 0 3314 1
+2 0 3314
+2 0 3314
+7 0 3314 0 0 0 0 0 0 0 0 3314
jcnd=3314/3314 +14 0 
* 0 
+14 0 3314
+2 0 3314
cfn=(170)
calls=3314 0x3877c78650 0 
* 0 330136 87907 50465 21 2 0 21 2 0 79966 1521

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 6 6
+5 0 6
+3 0 6 6
+5 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 6 6
+9 0 6 0 6
+4 0 6 0 6
+4 0 6 0 0 0 0 0 0 0 0 6 3
jcnd=6/6 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=17/20 +18 0 
* 0 
+2 0 3 0 3
+8 0 3 0 3
+8 0 3
+3 0 3 0 3
+4 0 3 0 3
+4 0 3
+4 0 3 0 3
+4 0 3 0 3
+4 0 3
+3 0 3
+3 0 3 0 0 0 0 0 0 0 0 3 2
jcnd=1/3 0x3877c75f78 0 
* 0 
-29 0 17
+3 0 17 0 17
+4 0 17 0 17
+4 0 17
+4 0 17 0 17
+4 0 17 0 17
+4 0 17
+3 0 17
+3 0 17 0 0 0 0 0 0 0 0 17 9
jcnd=6/17 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 2
jcnd=11/13 +15 0 
* 0 
+2 0 2 2
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=6/20 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 57659089 24343808 13590543 245 163 297 245 163 297 1401072 13052 19874 411
