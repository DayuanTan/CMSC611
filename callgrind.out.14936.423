version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 423


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 482391265 - 483310820
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1168 0 0 1 0 0 1
+3 0 1168 0 0 0 0 0 0 0 0 1168
+2 0 1168
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1168 0x3877c7b8b0 0 
* 0 130872 33586 16960 22 5 0 22 5 0 32109 641
* 0 1168 1168 0 1 1 0 1 1 0 0 0 1168

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1168 0 1168 1 0 0 1
+1 0 1168
+5 0 1168
+3 0 1168 0 1168
+1 0 1168
+4 0 1168 0 0 1 0 0 1
+3 0 1168
+4 0 1168
+3 0 1168 0 1168 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1168 0x3877c7aa50 0 
* 0 320406 44740 45014 49 34 44 49 34 44 54652 2176
* 0 1168 1168 0 1 1 0 1 1 0 0 0 1168
+5 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168
jcnd=1168/1168 +96 0 
* 0 
+96 0 1168 0 0 1 0 0 1
+4 0 1168 1168
+1 0 1168 1168
+1 0 1168 1168

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 576 0 576 1 0 0 1
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576 1 0 0 1
+4 +1 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=576 0x4049d4 -35 
* * 3456 1152 1728 1 0 0 1
+5 * 576 576
+1 * 576 576

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 576 0 576 1 0 0 1
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 576
+4 * 576
+3 * 576 0 576
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=576 0x404520 -35 
* * 2880 1152 1152
+5 * 576 576
+1 * 576 576

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 576 0 576 1 0 0 1
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=576 0x404a28 -35 
* * 3456 1152 1728 1 0 1 1 0 1
+5 * 576 576
+1 * 576 576

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 576
+4 * 576
+3 * 576 0 576
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=576 0x4044cc -35 
* * 2880 1152 1152
+5 * 576 576
+1 * 576 576

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 576 0 576 1 0 0 1
+1 * 576
+3 * 576 0 576
+4 * 576 576
+4 * 576 576
+1 * 576 576

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 288 0 288
+1 * 288
+3 * 288
+4 * 288 0 288
+4 * 288 0 288
+4 * 288 0 288
+4 +1 288 288
+4 * 288 288
+4 * 288 288
+4 * 288
+3 * 288
+3 * 288 0 288
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=288 0x40406a -87 
* * 6912 2304 2592 0 19 10 0 19 10 288
+5 * 288 288
+1 * 288 288

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 576 0 576
+1 * 576
+3 * 576 0 576
+4 * 576 576
+4 * 576 576
+1 * 576 576

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 288 0 288
+1 * 288
+3 * 288
+4 * 288 0 288
+4 * 288 0 288
+4 * 288 0 288
+4 +1 288 288
+4 * 288 288
+4 * 288 288
+4 * 288
+3 * 288
+3 * 288 0 288
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=288 0x403df2 -87 
* * 6912 2304 2592 0 19 3 0 19 3 288 3
+5 * 288 288
+1 * 288 288

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 656 0 656
+1 * 656
+3 * 656 0 656
+4 +1 656 656
+4 * 656 656
+1 * 656 656

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1152 0 1152 1 0 0 1
+1 * 1152
+3 * 1152 0 1152
+4 +1 1152 1152 0 1 0 0 1
+4 * 1152 1152
+1 * 1152 1152

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 656 0 656
+1 * 656
+3 * 656 0 656 0 0 1 0 0 1
+4 +1 656 656
+4 * 656 656
+1 * 656 656

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1152 0 1152 1 0 0 1
+1 * 1152
+3 * 1152
+4 * 1152 0 1152
+4 +1 1152
+4 * 1152
+3 * 1152 0 1152
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1152 0x404ffe 790 
* * 6912 3456 2304 1 0 0 1
+5 * 1152 1152
+3 * 1152 1152
+1 * 1152 1152

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1152 0 1152 1 0 0 1
+1 * 1152
+3 * 1152 0 1152
+4 +1 1152 1152
+4 * 1152 1152
+1 * 1152 1152

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1152 0 1152 1 0 0 1
+1 * 1152
+3 * 1152
+4 * 1152 0 1152
+4 +1 1152
+4 * 1152
+3 * 1152 0 1152 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1152 0x40500c 790 
* * 6912 3456 2304 1 0 0 1
+5 * 1152 1152
+3 * 1152 1152
+1 * 1152 1152

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 576 0 576
+1 * 576
+3 * 576 0 576
+4 * 576 0 576
+4 * 576 576
+4 * 576 576
+1 * 576 576

fl=(5)
fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 584 0 584 1 0 0 1
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 * 584 0 584 1 0 0 1
+4 +2 584 584
+4 * 584
+3 * 584 0 584
cfn=(28)
calls=584 0x404992 +12 
* * 3504 1168 1168 1 0 0 1
+5 * 584 584
+4 * 584
+3 * 584
+2 * 584 0 0 0 0 0 0 0 0 584
jcnd=584/584 +7 +3 
* * 
+7 +3 584 584
+4 * 584
+4 * 584
+3 * 584 0 584
cob=(5)
cfi=(8)
cfn=(32)
calls=584 0x387e4bd0b0 0 
* * 165694 25261 25660 18 29 19 18 29 19 26952 829 584
* * 584 584 0 1 1 0 1 1 0 0 0 584
+5 +1 584 584
+1 * 584 584

fn=(102)
0x4048de 113 600 0 600 1 0 0 1
+1 * 600
+3 * 600 0 600
+4 +1 600
+10 * 600 600
+1 * 600 600

fn=(266)
0x40406a 129 288 0 288
+1 * 288
+3 * 288
+4 * 288 0 288
+4 * 288 0 288
+4 * 288 0 288
+4 +1 288 288
+4 * 288
+3 * 288
+5 * 288 0 288
cfi=(16)
cfn=(226)
calls=288 0x402d61 -20 
* * 2016 864 864
+5 * 288
+3 * 288 0 0 0 0 0 0 0 0 288
+2 * 288 288
+4 * 288 288 0 0 19 0 0 19
+2 * 288 0 288 0 0 10 0 0 10
+2 * 288 288
+1 * 288 288

fn=(28)
0x404992 113 600 0 600 1 0 0 1
+1 * 600
+3 * 600 0 600
+4 +1 600
+10 * 600 600
+1 * 600 600

fn=(176)
0x4044cc 86 576 0 576
+1 * 576
+3 * 576 0 576
+4 * 576 576
+1 * 576 576

fn=(224)
0x403df2 129 288 0 288
+1 * 288
+3 * 288
+4 * 288 0 288
+4 * 288 0 288
+4 * 288 0 288
+4 +1 288 288
+4 * 288
+3 * 288
+5 * 288 0 288
cfi=(16)
cfn=(226)
calls=288 0x402d61 -20 
* * 2016 864 864
+5 * 288
+3 * 288 0 0 0 0 0 0 0 0 288 3
+2 * 288 288
+4 * 288 288 0 0 19 0 0 19
+2 * 288 0 288 0 0 3 0 0 3
+2 * 288 288
+1 * 288 288

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 584 0 584
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 * 584 0 584
+4 +1 584 584
+4 * 584
+3 * 584 0 584
cob=(5)
cfi=(8)
cfn=(164)
calls=584 0x387e4bb2f0 0 
* * 64853 16332 7564 24 4 0 24 4 0 15831 332 584
* * 584 584 0 1 1 0 1 1 0 0 0 584
+5 * 584 584
+1 * 584 584

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 584 0 584
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 * 584 0 584
+4 +1 584 584
+4 * 584
+3 * 584 0 584
cob=(5)
cfi=(8)
cfn=(164)
calls=584 0x387e4bb2f0 0 
* * 70691 18422 9396 0 2 0 0 2 0 17446 309 584
* * 584 584 0 0 0 0 0 0 0 0 0 584
+5 * 584 584
+1 * 584 584

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 584 0 584 1 0 0 1
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 * 584 0 584
+4 +2 584 584
+4 * 584
+3 * 584 0 584
cfn=(102)
calls=584 0x4048de +12 
* * 3504 1168 1168 1 0 0 1
+5 * 584 584
+4 * 584 0 0 1 0 0 1
+3 * 584
+2 * 584 0 0 0 0 0 0 0 0 584
jcnd=584/584 +7 +3 
* * 
+7 +3 584 584
+4 * 584
+4 * 584
+3 * 584 0 584
cob=(5)
cfi=(8)
cfn=(32)
calls=584 0x387e4bd0b0 0 
* * 173400 24151 22858 35 6 26 35 6 26 28868 1347 584
* * 584 584 0 0 0 0 0 0 0 0 0 584
+5 +1 584 584
+1 * 584 584

fn=(18)
0x404a28 81 576 0 576 1 0 0 1
+1 * 576
+3 * 576 0 576 0 0 1 0 0 1
+4 * 576 0 576
+4 * 576 576
+1 * 576 576

fn=(92)
0x4049d4 81 576 0 576 1 0 0 1
+1 * 576
+3 * 576 0 576
+4 * 576 0 576
+4 * 576 576
+1 * 576 576

fn=(196)
0x404520 86 576 0 576
+1 * 576
+3 * 576 0 576
+4 * 576 576
+1 * 576 576

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +2 576 576 0 1 0 0 1
+4 * 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=576 0x404a36 450 
* * 256818 84404 80952 24 3 5 24 3 5 10172 640 1148 143
+5 * 576 576
+1 * 576 576

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +2 576 576
+4 * 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=576 0x40439c 107 
* * 272946 90164 86712 7 1 44 7 1 44 10172 629 1148
+5 * 576 576
+1 * 576 576

fn=(116)
0x40439c 107 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +10 576 576
+4 * 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=576 0x4047d7 -26 
* * 264882 87284 83832 7 1 44 7 1 44 10172 629 1148
+5 +1 576 576
+1 * 576 576

fn=(118)
0x4047d7 91 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +2 576 576
+4 * 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=576 0x4049e2 450 
* * 256818 84404 80952 7 1 44 7 1 44 10172 629 1148
+5 * 576 576
+1 * 576 576

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404484 107 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +10 576 576
+4 * 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(52)
calls=576 0x404829 -26 
* * 264882 87284 83832 25 3 5 25 3 5 10172 640 1148 143
+5 +1 576 576
+1 * 576 576

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +2 576 576
+4 * 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576 1 0 0 1
cfn=(50)
calls=576 0x404484 107 
* * 272946 90164 86712 25 3 5 25 3 5 10172 640 1148 143
+5 * 576 576
+1 * 576 576

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 2336 0 2336 1 0 0 1
+1 * 2336
+3 * 2336 0 2336 0 0 1 0 0 1
+4 +1 2336 2336
+4 * 2336 2336 0 1 1 0 1 1
+4 * 2336
+3 * 2336 2336
+4 * 2336 2336
+3 * 2336
+3 * 2336
+3 * 2336
+4 * 2336 2336
+1 * 2336 2336

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 +2 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=576 0x404236 -14 
* * 187545 32411 32231 21 29 14 21 29 14 27721 779 1152
+5 * 576 576
+4 * 576 0 576
+3 +1 576 576
+4 * 576 576 0 1 0 0 1
+3 * 576 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+3 * 576 576
+4 * 576
+4 * 576
+3 * 576 576
+4 * 576 0 576
+4 +1 576 576
+1 * 576 576

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 +2 576 576
+4 * 576 576 0 1 0 0 1
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=576 0x403fbe -14 
* * 194446 31036 29218 25 2 21 25 2 21 29473 1276 1152
+5 * 576 576
+4 * 576 0 576
+3 +1 576 576
+4 * 576 576
+3 * 576 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+3 * 576 576
+4 * 576
+4 * 576
+3 * 576 576
+4 * 576 0 576
+4 +1 576 576
+1 * 576 576

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 288 0 288
+1 * 288
+3 * 288 0 0 1 0 0 1
+4 * 288 0 288
+4 * 288 0 288
+4 +2 288 288
+4 * 288 288
+4 * 288 288
+4 * 288 288
+4 * 288
+3 * 288 0 0 0 0 0 0 0 0 288
jcnd=8/288 +51 +10 
* * 
+2 +3 280 280
+4 * 280 280
+4 * 280 280
+4 -1 280 280
+4 * 280
+3 * 280
+3 * 280 0 280
cfi=(3)
cfn=(264)
calls=280 0x4036b1 215 
* * 10640 3640 3920 0 18 6 0 18 6 280
+5 +2 280 280
+4 * 280 280
+4 * 280
+4 * 280 280
+4 * 280 0 280
+4 * 280
jump=280 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12104 3680 3204 21 2 27 21 2 27 749 70 47
+5 +2 288 288
+1 * 288 288

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1176 0 1176 1 0 0 1
+1 * 1176
+3 * 1176 0 1176 1 0 0 1
+4 +1 1176 1176
+4 * 1176 1176
+1 * 1176 1176

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+3 * 576 0 576
+4 * 576
+4 * 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=576 0x404380 726 
* * 5760 2880 2304
+5 * 576 576
+4 * 576 576
+1 * 576 576

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 576 0 576
+1 * 576
+3 * 576 0 576
+1 * 576
+4 * 576 0 576 1 0 0 1
+4 +2 576 576
+4 * 576
+3 * 576 0 576
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=576 0x40325e 113 
* * 3456 1728 1152
+5 * 576
+3 * 576 576
+4 * 576 576
+4 * 576 576
+4 * 576 576
+3 -1 576
+3 * 576
+3 * 576 0 576
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=576 0x40326c 148 
* * 17856 5760 6912 4 0 0 4
+5 +1 576 576
+4 * 576
+3 * 576 0 576
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=576 0x4031ec 159 
* * 109488 32820 20698 27 5 0 27 5 0 16208 324 1152
+5 * 576
jump=576 +28 * 
* * 
+28 * 576 0 0 1 0 0 1
+4 * 576 576
+1 * 576 576
+1 * 576 576

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 584 0 584 1 0 0 1
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 * 584 0 584
+4 +2 584 584
+5 * 584 0 0 0 0 0 0 0 0 584
+2 +1 584 584
+4 * 584 584
+4 * 584 584
+4 * 584
+3 * 584
+3 * 584 0 584
cfi=(5)
cfn=(160)
calls=584 0x4044d6 -65 
* * 71861 18668 10484 25 5 0 25 5 0 15831 332 1168
+5 +1 584 584
+1 * 584 584

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 576 0 576
+1 * 576
+3 * 576 0 576
+1 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=576 0x4043ca -45 
* * 20736 7488 8064 4 0 4 4 0 4
+5 +1 576 576 0 1 0 0 1
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(20)
calls=576 0x404412 +43 
* * 201945 39323 36263 22 29 14 22 29 14 27721 779 1152
+5 * 576
jump=576 +28 * 
* * 
+28 * 576
+4 * 576 576
+1 * 576 576
+1 * 576 576

fn=(14)
0x4043ca 90 576 0 576 1 0 0 1
+1 * 576
+3 * 576
+4 * 576 0 576 0 0 1 0 0 1
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfi=(4)
cfn=(16)
calls=576 0x404804 +24 
* * 10368 3456 4032 2 0 1 2 0 1
+5 * 576 576
+4 * 576 0 576 0 0 2 0 0 2
+7 * 576 576
+4 * 576 0 576 1 0 0 1
+8 * 576 576
+4 * 576 0 576
+8 +1 576 576
+1 * 576 576

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 576 0 576 1 0 0 1
+1 * 576
+3 * 576 0 576
+2 * 576 0 576
+2 * 576 0 576
+1 * 576 0 0 1 0 0 1
+4 * 576 0 576
+4 * 576 0 576
+4 +2 576 576
+4 * 576
+3 * 576 0 576
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=576 0x4039fc 117 
* * 3456 1728 1152 2 0 0 2
+5 * 576
+3 * 576 0 576
cfi=(3)
cfn=(84)
calls=576 0x4039ed -88 
* * 3456 1728 1152
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(2)
calls=576 0x402d74 645 
* * 7488 3456 1152
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576
+3 * 576
+3 * 576 0 576 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=576 0x403a0a 134 
* * 242254 49468 45346 32 2 21 32 2 21 29473 1276 1152
+5 +4 576 576
+4 * 576
+3 * 576 0 576
cfn=(106)
calls=576 0x40325e 113 
* * 3456 1728 1152 1 0 0 1
+5 * 576
+3 * 576 576
+4 * 576 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=576 0x403a98 565 
* * 14400 5760 4608 2 0 0 2
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(112)
calls=576 0x403a68 547 
* * 14400 5760 4608
+5 * 576
+3 * 576
+3 * 576
+3 * 576
+3 * 576 0 576
cfi=(11)
cfn=(114)
calls=576 0x403ac9 -60 
* * 281586 93044 90168 7 1 44 7 1 44 10172 629 1148
+5 -3 576 576
+4 * 576 0 576
+4 * 576
jump=576 +28 +4 
* * 
+28 +4 576
+4 * 576 576
+1 * 576 576
+2 * 576 576
+2 * 576 576
+1 * 576 576

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 584 0 584 1 0 0 1
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 * 584 0 584
+4 +2 584 584
+5 * 584 0 0 0 0 0 0 0 0 584 8
+2 +1 584 584
+4 * 584 584
+4 * 584 584
+4 * 584
+3 * 584
+3 * 584 0 584
cfi=(5)
cfn=(190)
calls=584 0x40452a -65 
* * 77699 20758 12316 0 2 0 0 2 0 17446 309 1168
+5 +1 584 584
+1 * 584 584

fn=(22)
0x404236 167 584 0 584 1 0 0 1
+1 * 584
+3 * 584
+4 * 584 0 584 1 0 0 1
+4 * 584 0 584
+4 0 584 584
+5 0 584 0 0 0 0 0 0 0 0 584
+2 0 584 584
+4 0 584 584
+4 0 584
+5 0 584
+3 0 584
+3 0 584 0 584
fi=(6) ???
cfi=(5)
cfn=(26)
calls=584 0x404730 99 
* 0 180878 29933 30332 22 30 19 22 30 19 27536 829 1168
+5 0 584
fi=(6)
jump=584 +7 0 
* 0 
+7 0 584 584
+1 0 584 584

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 576 0 576 1 0 0 1
+1 * 576
+3 * 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+4 * 576 0 576
+4 * 576
+4 * 576 0 0 1 0 0 1
+4 * 576
+3 * 576
+3 * 576 0 576
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=576 0x404468 726 
* * 5760 2880 2304 1 0 0 1
+5 * 576 576
+4 * 576 576
+1 * 576 576

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+3 * 576 0 576
+4 * 576
+4 * 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfi=(10)
cfn=(44)
calls=576 0x404468 726 
* * 5760 2880 2304
+5 * 576 576
+4 * 576 576
+1 * 576 576

fn=(86)
0x403a0a 134 576 0 576
+1 * 576
+3 * 576 0 576
+1 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=576 0x4042e2 -45 
* * 20736 7488 8064 5 0 0 5
+5 +1 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576 1 0 0 1
cfn=(94)
calls=576 0x40432a +43 
* * 208846 37948 33250 26 2 21 26 2 21 29473 1276 1152
+5 * 576
jump=576 +28 * 
* * 
+28 * 576
+4 * 576 576
+1 * 576 576
+1 * 576 576

fn=(88)
0x4042e2 90 576 0 576 1 0 0 1
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576 1 0 0 1
cfi=(4)
cfn=(90)
calls=576 0x4047b2 +24 
* * 10368 3456 4032 3 0 0 3
+5 * 576 576
+4 * 576 0 576
+7 * 576 576
+4 * 576 0 576
+8 * 576 576
+4 * 576 0 576
+8 +1 576 576
+1 * 576 576

fn=(156)
0x4031ec 159 576 0 576 1 0 0 1
+1 * 576
+3 * 576 0 576
+1 * 576
+4 * 576 0 576
+4 +2 576 576
+4 * 576 576 0 1 0 0 1
+4 * 576
+3 * 576 576
+4 * 576 576
+3 * 576
+3 * 576
+3 * 576
+4 * 576
+3 * 576 576
+4 * 576 576
+3 -1 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(158)
calls=576 0x403ce6 +11 
* * 80112 21876 13210 24 5 0 24 5 0 16208 324 1152
+5 +1 576 576
+4 * 576
+3 * 576 0 576
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=576 0x4031b8 -82 
* * 13248 4608 4608 1 0 0 1
+5 * 576
jump=576 +28 * 
* * 
+28 * 576
+4 * 576 576
+1 * 576 576
+1 * 576 576

fn=(172)
0x4031b8 79 576 0 576 1 0 0 1
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 576
+4 * 576
+3 * 576 0 576
cfi=(4)
cfn=(174)
calls=576 0x403ccc +42 
* * 8064 2880 2880
+5 * 576 576
+1 * 576 576

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1184 0 1184 1 0 0 1
+1 * 1184
+3 * 1184 0 1184
+4 +1 1184 1184
+4 * 1184 1184 0 0 2 0 0 2
+4 * 1184
+3 * 1184 1184
+4 * 1184 1184
+3 * 1184
+3 * 1184
+3 * 1184
+4 * 1184 1184
+1 * 1184 1184

fn=(106)
0x40325e 113 1176 0 1176 1 0 0 1
+1 * 1176
+3 * 1176 0 1176
+4 +1 1176 1176
+4 * 1176 1176
+1 * 1176 1176

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 592 0 592 1 0 0 1
+1 * 592
+3 * 592 0 592 0 0 1 0 0 1
+4 +1 592 592
+4 * 592 592
+1 * 592 592

fn=(82)
0x4039fc 117 592 0 592 1 0 0 1
+1 * 592
+3 * 592 0 592 1 0 0 1
+4 +1 592 592
+4 * 592 592
+1 * 592 592

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 288 0 288
+1 * 288
+3 * 288
+4 * 288 0 288
+4 * 288 0 288
+4 +2 288 288
+4 * 288 288
+4 * 288 288
+4 * 288 288
+4 * 288
+3 * 288 0 0 0 0 0 0 0 0 288 8
jcnd=8/288 +51 +10 
* * 
+2 +3 280 280
+4 * 280 280
+4 * 280 280
+4 -1 280 280
+4 * 280
+3 * 280
+3 * 280 0 280
cfi=(3)
cfn=(222)
calls=280 0x403373 215 
* * 10640 3640 3920 0 18 2 0 18 2 280 3
+5 +2 280 280
+4 * 280 280
+4 * 280
+4 * 280 280
+4 * 280 0 280
+4 * 280
jump=280 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12929 3951 3423 39 5 9 39 5 9 918 85 47
+5 +2 288 288
+1 * 288 288

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 576 0 576 1 0 0 1
+1 * 576
+3 * 576 0 576
+2 * 576 0 576
+2 * 576 0 576
+1 * 576
+4 * 576 0 576 1 0 0 1
+4 * 576 0 576
+4 +2 576 576
+4 * 576
+3 * 576 0 576
cfn=(6)
calls=576 0x403b08 117 
* * 3456 1728 1152 1 0 1 1 0 1
+5 * 576
+3 * 576 0 576
cfi=(3)
cfn=(8)
calls=576 0x403afa -88 
* * 3456 1728 1152 1 0 0 1
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(10)
calls=576 0x402f54 645 
* * 7488 3456 1152 1 1 0 1 1
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576
+3 * 576
+3 * 576 0 576
cfn=(12)
calls=576 0x403b16 134 
* * 235353 50843 48359 27 29 18 27 29 18 27721 779 1152
+5 +4 576 576 0 1 0 0 1
+4 * 576
+3 * 576 0 576
cfn=(40)
calls=576 0x40333c 113 
* * 3456 1728 1152 2 0 0 2
+5 * 576
+3 * 576 576
+4 * 576 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(42)
calls=576 0x403ba4 565 
* * 14400 5760 4608 3 0 0 3
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(46)
calls=576 0x403b74 547 
* * 14400 5760 4608
+5 * 576
+3 * 576
+3 * 576
+3 * 576
+3 * 576 0 576 1 0 0 1
cfi=(11)
cfn=(48)
calls=576 0x403bd5 -60 
* * 281586 93044 90168 26 3 5 26 3 5 10172 640 1148 143
+5 -3 576 576
+4 * 576 0 576
+4 * 576
jump=576 +28 +4 
* * 
+28 +4 576
+4 * 576 576
+1 * 576 576
+2 * 576 576
+2 * 576 576
+1 * 576 576

fn=(108)
0x403a98 565 576 0 576 1 0 0 1
+1 * 576
+3 * 576
+4 * 576 0 576
+4 +1 576 576
+4 * 576 576
+4 * 576 0 576
+4 * 576
+4 * 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfi=(10)
cfn=(110)
calls=576 0x404380 726 
* * 5760 2880 2304 1 0 0 1
+5 * 576 576
+4 * 576 576
+1 * 576 576

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 576 0 576
+1 * 576
+3 * 576 0 576
+1 * 576
+4 * 576 0 576 1 0 0 1
+4 +2 576 576
+4 * 576
+3 * 576 0 576
cfn=(40)
calls=576 0x40333c 113 
* * 3456 1728 1152
+5 * 576
+3 * 576 576
+4 * 576 576
+4 * 576 576
+4 * 576 576
+3 -1 576
+3 * 576
+3 * 576 0 576
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=576 0x40334a 148 
* * 17856 5760 6912 2 0 0 2
+5 +1 576 576
+4 * 576
+3 * 576 0 576
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=576 0x4032ca 159 
* * 115346 34916 22538 3 2 0 3 2 0 17828 301 1152
+5 * 576
jump=576 +28 * 
* * 
+28 * 576 0 0 1 0 0 1
+4 * 576 576
+1 * 576 576
+1 * 576 576

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 584 0 584 1 0 0 1
+1 * 584 0 0 1 0 0 1
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 0 584 584
+5 0 584 0 0 0 0 0 0 0 0 584
+2 0 584 584
+4 0 584 584
+4 0 584
+5 0 584
+3 0 584
+3 0 584 0 584
fi=(6)
cfi=(5)
cfn=(100)
calls=584 0x40461a 99 
* 0 188584 28823 27530 38 6 26 38 6 26 29452 1347 1168
+5 0 584
fi=(6)
jump=584 +7 0 
* 0 
+7 0 584 584
+1 0 584 584

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 126288 0 126288
+1 * 126288
+3 * 126288 0 126288
+4 * 126288 0 126288
+4 +1 126288 126288
+4 * 126288 126288
+3 * 126288 126288
+4 * 126288
+4 * 126288
+3 * 126288 126288
+1 * 126288 126288

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 126288 0 126288
+1 * 126288
+3 * 126288 0 126288 1 0 0 1
+4 * 126288 0 126288
+4 +1 126288 126288
+4 * 126288 126288
+3 * 126288 126288
+4 * 126288
+4 * 126288
+3 * 126288 126288
+1 * 126288 126288

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 576
+4 * 576
+3 * 576 0 576
cfi=(4)
cfn=(194)
calls=576 0x403d7e +42 
* * 8064 2880 2880 1 0 0 1
+5 * 576 576
+1 * 576 576

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 576 0 576 1 0 0 1
+1 * 576
+3 * 576 0 576
+1 * 576
+4 * 576 0 576
+4 +2 576 576
+4 * 576 576
+4 * 576
+3 * 576 576
+4 * 576 576
+3 * 576
+3 * 576
+3 * 576
+4 * 576
+3 * 576 576
+4 * 576 576
+3 -1 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(188)
calls=576 0x403d98 +11 
* * 85970 23972 15050 1 2 0 1 2 0 17828 301 1152
+5 +1 576 576
+4 * 576
+3 * 576 0 576
cfn=(192)
calls=576 0x403296 -82 
* * 13248 4608 4608 1 0 0 1
+5 * 576
jump=576 +28 * 
* * 
+28 * 576
+4 * 576 576
+1 * 576 576
+1 * 576 576

fl=(12)
fn=(54)
0x404a36 450 576 0 576
+1 * 576
+3 * 576 0 576
+1 * 576
+4 * 576 0 576 1 0 0 1
+4 * 576 0 576
+4 * 576 0 576
+4 +10 576 576
+4 * 576
+3 * 576 0 576
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=576 0x404c38 288 
* * 8640 3456 2880 3 0 0 3
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(56)
calls=576 0x404c38 288 
* * 8640 3456 2880
+5 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=576 0x404c52 -36 
* * 226866 74036 70584 20 3 5 20 3 5 10172 640 1148 143
+5 +1 576
+4 * 576 576
+1 * 576 576
+1 * 576 576

fn=(60)
0x404c52 424 576 0 576
+1 * 576
+3 * 576 0 576
+2 * 576 0 576
+1 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +4 576 576
+4 * 576
+3 * 576 0 576
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=576 0x40492d 277 
* * 8640 3456 2880 2 0 0 2
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=576 0x404d9d 277 
* * 14400 5184 4608 2 0 1 2 0 1
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(66)
calls=576 0x404d9d 277 
* * 14400 5184 4608
+5 * 576
+3 * 576
+3 * 576
+3 * 576 0 576
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=576 0x404db7 -49 
* * 173298 56180 52728 15 3 4 15 3 4 10172 640 1148 143
+5 +1 576
+4 * 576 576
+1 * 576 576
+2 * 576 576
+1 * 576 576

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 624 0 624 1 0 0 1
+1 * 624
+3 * 624
+4 * 624 0 624
+4 +1 624 624
+4 * 624
+3 * 624 0 624 1 0 0 1
cfi=(13)
cfn=(64)
calls=624 -33 -66 
* * 3744 1872 1248
+5 * 624 624
+1 * 624 624

fn=(66)
0x404d9d 277 1152 0 1152
+1 * 1152
+3 * 1152
+4 * 1152 0 1152
+4 +1 1152 1152
+4 * 1152
+3 * 1152 0 1152
cfi=(13)
cfn=(68)
calls=1152 0x404f1a -58 
* * 18432 6912 5760 2 0 1 2 0 1
+5 * 1152 1152
+1 * 1152 1152

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 576 0 576
+1 * 576
+3 * 576 0 576
+1 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +10 576 576
+4 * 576
+3 * 576 0 576
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=576 0x404bc6 288 
* * 8640 3456 2880 3 0 0 3
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(122)
calls=576 0x404bc6 288 
* * 8640 3456 2880
+5 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=576 0x404be0 -36 
* * 226866 74036 70584 4 1 44 4 1 44 10172 629 1148
+5 +1 576
+4 * 576 576
+1 * 576 576
+1 * 576 576

fn=(128)
0x404878 277 624 0 624
+1 * 624
+3 * 624
+4 * 624 0 624 1 0 0 1
+4 +1 624 624
+4 * 624
+3 * 624 0 624
cfi=(13)
cfn=(130)
calls=624 -33 -66 
* * 3744 1872 1248 0 0 1 0 0 1
+5 * 624 624
+1 * 624 624

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1152 0 1152
+1 * 1152
+3 * 1152
+4 * 1152 0 1152
+4 +1 1152 1152
+4 * 1152
+3 * 1152 0 1152
cfi=(13)
cfn=(134)
calls=1152 0x404e98 -58 
* * 18432 6912 5760 2 0 0 2
+5 * 1152 1152
+1 * 1152 1152

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +8 576 0 576
+4 +3 576 576
+4 * 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=576 0x404eb5 -22 
* * 164658 53300 49272 1 1 44 1 1 44 10172 629 1148
+5 +1 576 576
+1 * 576 576

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1152 0 1152 1 0 0 1
+1 * 1152
+3 * 1152
+4 * 1152 0 1152
+4 +1 1152 1152
+4 * 1152
+3 * 1152 0 1152
cfi=(13)
cfn=(124)
calls=1152 0x404d36 -77 
* * 6912 3456 2304 2 0 0 2
+5 * 1152 1152
+1 * 1152 1152

fn=(56)
0x404c38 288 1152 0 1152 1 0 0 1
+1 * 1152
+3 * 1152
+4 * 1152 0 1152 1 0 0 1
+4 +1 1152 1152
+4 * 1152
+3 * 1152 0 1152
cfi=(13)
cfn=(58)
calls=1152 0x404d8f -77 
* * 6912 3456 2304 1 0 0 1
+5 * 1152 1152
+1 * 1152 1152

fn=(74)
0x404f37 368 592 0 592
+1 * 592
+3 * 592
+4 * 592 0 592 1 0 0 1
+4 * 592 0 592
+4 * 592 0 592
+4 +2 592 592
+4 * 592 592
+4 * 592
+3 * 592
+3 * 592
+4 * 592 0 592
+4 +1 592 592
+5 * 592 0 0 0 0 0 0 0 0 592
jcnd=8/592 +33 +2 
* * 
+2 +1 584 584
+4 * 584
+8 * 584 584
+4 * 584 584
+4 * 584
+3 * 584 0 0 1 0 0 1
+3 * 584 0 584 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=584 0x3877c83840 0 
* * 149652 47280 46117 11 2 21 11 2 21 9680 644 579 143
* * 584 584 0 1 1 0 1 1 0 0 0 584
+5 +1 592 592
+4 * 592
+8 * 592 592
+4 * 592
+3 +1 592 592
+1 * 592 592

fn=(140)
0x404eb5 368 592 0 592
+1 * 592
+3 * 592
+4 * 592 0 592 1 0 0 1
+4 * 592 0 592
+4 * 592 0 592 0 0 1 0 0 1
+4 +2 592 592
+4 * 592 592
+4 * 592
+3 * 592
+3 * 592
+4 * 592 0 592
+4 +1 592 592
+5 * 592 0 0 0 0 0 0 0 0 592
jcnd=8/592 +33 +2 
* * 
+2 +1 584 584
+4 * 584
+8 * 584 584
+4 * 584 584
+4 * 584
+3 * 584
+3 * 584 0 584
cob=(2)
cfi=(9)
cfn=(78)
calls=584 0x3877c83840 0 
* * 149652 47280 46117 0 1 45 0 1 45 9680 635 579
* * 584 584 0 0 0 0 0 0 0 0 0 584
+5 +1 592 592
+4 * 592
+8 * 592 592
+4 * 592
+3 +1 592 592
+1 * 592 592

fn=(72)
0x404db7 379 576 0 576
+1 * 576
+3 * 576
+4 * 576 0 576 1 0 0 1
+4 * 576 0 576
+4 * 576 0 576
+4 +8 576 0 576
+4 +3 576 576
+4 * 576 576
+4 * 576 576
+4 * 576
+3 * 576
+3 * 576 0 576
cfn=(74)
calls=576 0x404f37 -22 
* * 164658 53300 49272 14 3 4 14 3 4 10172 640 1148 143
+5 +1 576 576
+1 * 576 576

fn=(126)
0x404be0 424 576 0 576
+1 * 576
+3 * 576 0 576
+2 * 576 0 576
+1 * 576
+4 * 576 0 576
+4 * 576 0 576
+4 * 576 0 576
+4 +4 576 576
+4 * 576
+3 * 576 0 576
cfn=(128)
calls=576 0x404878 277 
* * 8640 3456 2880 1 0 0 1
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(132)
calls=576 0x404d44 277 
* * 14400 5184 4608 2 0 0 2
+5 * 576
+3 * 576 576
+4 * 576
+3 * 576 0 576
cfn=(132)
calls=576 0x404d44 277 
* * 14400 5184 4608
+5 * 576
+3 * 576
+3 * 576
+3 * 576 0 576
cfn=(138)
calls=576 0x404d5e -49 
* * 173298 56180 52728 1 1 44 1 1 44 10172 629 1148
+5 +1 576
+4 * 576 576
+1 * 576 576
+2 * 576 576
+1 * 576 576

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1152 0 1152 1 0 0 1
+1 * 1152
+3 * 1152 0 1152
+4 +1 1152 1152
+4 * 1152 1152
+1 * 1152 1152

fn=(110)
0x404380 726 1152 0 1152 1 0 0 1
+1 * 1152
+3 * 1152 0 1152
+4 * 1152 0 1152
+4 * 1152 1152
+4 * 1152 1152
+3 * 1152 1152
+4 * 1152 0 1152
+3 * 1152 1152
+1 * 1152 1152

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1152 0 1152 1 0 0 1
+1 * 1152
+3 * 1152 0 1152
+4 +1 1152 1152
+4 * 1152 1152
+1 * 1152 1152

fn=(44)
0x404468 726 1152 0 1152
+1 * 1152
+3 * 1152 0 1152
+4 * 1152 0 1152
+4 * 1152 1152
+4 * 1152 1152
+3 * 1152 1152
+4 * 1152 0 1152 1 0 0 1
+3 * 1152 1152
+1 * 1152 1152

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 584 0 584 1 0 0 1
+1 * 584
+3 * 584 0 584
+4 * 584 0 584 1 0 0 1
+4 * 584 584
+1 * 584 584

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 584 0 584 1 0 0 1
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 +4 584 584
+4 * 584 584
+4 * 584
+3 * 584
+3 * 584 0 584
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=584 0x40454c -14 
* * 3504 1168 1752 1 0 0 1
+5 +2 584 584
+1 * 584 584

fn=(150)
0x40326c 148 584 0 584
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 * 584 0 584
+4 +3 584 584 0 1 0 0 1
+4 * 584 584
+4 * 584
+3 * 584
+3 * 584 0 584
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=584 0x403d1a -29 
* * 10512 3504 4088 3 0 0 3
+5 +1 584 584
+1 * 584 584

fn=(180)
0x40334a 148 584 0 584
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 * 584 0 584
+4 +3 584 584
+4 * 584 584
+4 * 584
+3 * 584
+3 * 584 0 584
cfn=(182)
calls=584 0x403dcc -29 
* * 10512 3504 4088 2 0 0 2
+5 +1 584 584
+1 * 584 584

fn=(152)
0x403d1a 122 584 0 584 1 0 0 1
+1 * 584
+3 * 584
+4 * 584 0 584
+4 * 584 0 584
+4 +4 584 584
+4 * 584 584
+4 * 584
+3 * 584
+3 * 584 0 584
cfn=(154)
calls=584 0x4044f8 -14 
* * 3504 1168 1752 2 0 0 2
+5 +2 584 584
+1 * 584 584

fn=(184)
0x40454c 112 584 0 584 1 0 0 1
+1 * 584
+3 * 584 0 584
+4 * 584 0 584
+4 * 584 584
+1 * 584 584

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2677 442 437 3 1 5 3 1 5 399 50 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1073 290 186 0 0 0 0 0 0 202 16 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3482 707 648 15 4 5 15 4 5 563 71 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1093 296 194 2 0 0 2 0 0 207 8 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 288 0 288 1 0 0 1
+1 * 288
+3 * 288
+4 * 288 0 288
+4 * 288 0 288
+4 +1 288 288
+4 * 288
+3 * 288 0 288
cfi=(2)
cfn=(2)
calls=288 0x402d74 645 
* * 3744 1728 576
+5 * 288
+3 * 288 0 288
+3 +1 288 288
+6 * 288 0 288
+3 * 288 288
+6 * 288 0 288
+3 +1 288 288
+6 * 288 0 288 1 0 0 1
+3 * 288 288
+6 * 288 0 288
+3 +2 288 0 288
+7 * 288
jump=288 +86 * 
* * 
+2 +1 41904 41904
+3 * 41904
+3 * 41904 41904
+4 * 41904
+3 * 41904
+3 * 41904 0 41904
cfi=(2)
cfn=(144)
calls=41904 0x402d9a 770 
* * 460944 209520 125712
+5 * 41904 41904
+4 * 41904 41904
+5 * 41904
+4 * 41904 0 41904
+5 +1 41904 41904
+3 * 41904
+3 * 41904 41904
+4 * 41904
+3 * 41904
+3 * 41904 0 41904
cfi=(2)
cfn=(146)
calls=41904 0x402dba 770 
* * 460944 209520 125712 1 0 0 1
+5 * 41904 41904
+2 * 41904
+4 * 41904 41904
+5 * 41904
+4 * 41904 0 41904
+5 -2 41904 0 41904
+4 * 41904 41904
+3 * 41904
+3 * 41904 41904
+3 * 41904 0 0 0 0 0 0 0 0 41904 289
jcnd=41616/41904 -93 +1 
* * 
-9 * 288 288 0 1 0 0 1
+3 * 288
+3 * 288 288
+3 * 288 0 0 0 0 0 0 0 0 288
jcnd=288/288 -93 +1 
* * 
+2 +4 288 288
+3 * 288
+3 * 288
+4 * 288 288 0 1 0 0 1
+5 * 288
+4 * 288
+3 * 288 0 288
+5 +1 288 288
+3 * 288
+3 * 288
+4 * 288 288
+5 * 288
+4 * 288
+3 * 288 0 288
+5 +1 288 0 288
+7 * 288
jump=288 0x4016ee * 
* * 
+2 +1 41904 41904
+3 * 41904
+3 * 41904 41904
+4 * 41904
+3 * 41904 0 0 1 0 0 1
+3 * 41904 0 41904
cfi=(2)
cfn=(146)
calls=41904 0x402dba 770 
* * 460944 209520 125712
+5 * 41904 41904
+2 * 41904
+4 * 41904 41904
+5 * 41904 0 41904
+5 +1 41904 41904
+3 * 41904
+3 * 41904 41904
+4 * 41904
+3 * 41904
+3 * 41904 0 41904
cfi=(2)
cfn=(144)
calls=41904 0x402d9a 770 
* * 460944 209520 125712
+5 * 41904 41904
+4 * 41904 41904
+5 * 41904 0 41904
+5 +1 41904 41904
+5 * 41904 41904
+5 * 41904 41904
+5 * 41904
+4 * 41904 0 41904
+5 +1 41904 41904
+5 * 41904 41904
+5 * 41904 41904
+5 * 41904
+4 * 41904 0 41904
+5 -4 41904 0 41904
+4 * 41904 41904
+3 * 41904
+3 * 41904 41904
+3 * 41904 0 0 0 0 0 0 0 0 41904 289
jcnd=41616/41904 0x401672 +1 
* * 
-9 * 288 288 0 1 0 0 1
+3 * 288
+3 * 288 288
+3 * 288 0 0 0 0 0 0 0 0 288
jcnd=288/288 0x401672 +1 
* * 
+6 +6 288 288 0 1 0 0 1
+5 * 288 288
+5 * 288 0 288
+5 +2 288 288
+3 +1 288 0 288
+3 * 288 288
+5 * 288 288
+1 * 288 288

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 288
+7 * 288
+7 * 288
+3 * 288
+3 * 288 0 288
cfi=(2)
cfn=(4)
calls=288 0x4030b2 310 
* * 296830 86100 80586 63 32 22 63 32 22 19063 900 1150 143
+5 * 288
+7 * 288
+7 * 288
+3 * 288
+3 * 288 0 288
cfi=(2)
cfn=(80)
calls=288 0x402ff4 310 
* * 300007 85393 79070 47 3 65 47 3 65 19866 1137 1150
+5 * 288 0 0 1 0 0 1
+7 * 288
+7 * 288
+3 * 288
+3 * 288 0 288
cfn=(142)
calls=288 0x401585 -52 
* * 4376736 1934784 1010592 8 0 0 8 0 0 84384 578
+5 * 288 0 288
+8 * 288 288
+6 * 288 0 288
+6 * 288
+7 * 288
+3 * 288 0 288
cfi=(2)
cfn=(148)
calls=288 0x402df4 414 
* * 72312 22746 16109 33 5 0 33 5 0 8104 165 576
+5 * 288
+7 * 288
+3 * 288 0 288 1 0 0 1
cfi=(2)
cfn=(178)
calls=288 0x402e74 414 
* * 75241 23794 17029 7 2 0 7 2 0 8914 153 576
+5 +2 288
+7 * 288
+7 * 288
+3 * 288
+3 * 288 0 288
cfi=(2)
cfn=(4)
calls=288 0x4030b2 310 
* * 295565 86011 80405 2 1 2 2 1 2 18830 519 1150
+5 * 288
+7 * 288
+7 * 288
+3 * 288
+3 * 288 0 288
cfi=(2)
cfn=(80)
calls=288 0x402ff4 310 
* * 299289 85343 78908 0 0 0 0 0 0 19779 768 1150
+5 * 288 288
+6 * 288 0 0 1 0 0 1
+7 * 288
+7 * 288 0 288
+6 * 288 288
+8 * 288
+3 * 288
+3 * 288 0 288
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=288 0x401719 -33 
* * 2028384 844416 465264 4 0 0 4 0 0 42192 289
+5 * 288 0 288
+8 * 288 288
+6 * 288 0 288
+6 * 288
+7 * 288 0 0 1 0 0 1
+3 * 288 0 288
cfi=(2)
cfn=(148)
calls=288 0x402df4 414 
* * 72312 22746 16109 0 0 0 0 0 0 8104 159 576
+5 * 288
+7 * 288
+3 * 288 0 288
cfi=(2)
cfn=(178)
calls=288 0x402e74 414 
* * 75241 23794 17029 0 0 0 0 0 0 8914 148 576
+5 +2 288 288
+7 * 288
+3 * 288 0 288
cfi=(2)
cfn=(2)
calls=288 0x402d74 645 
* * 3744 1728 576
+5 * 288 288
+6 * 288
+3 * 288
+3 * 288
+3 * 288 288
+7 * 288
+3 * 288 0 0 1 0 0 1
+3 * 288 0 288
cfi=(2)
cfn=(144)
calls=288 0x402d9a 770 
* * 3168 1440 864
+5 * 288
+3 * 288
+7 * 288
+3 * 288
+3 * 288 0 288
cfi=(2)
cfn=(200)
calls=288 0x402eda 901 
* * 31209 11375 8839 42 23 11 42 23 11 1486 96 47
+5 +1 288 288
+7 * 288
+3 * 288 0 288
cfi=(2)
cfn=(10)
calls=288 0x402f54 645 
* * 3744 1728 576 0 1 0 0 1
+5 * 288 288
+6 * 288
+3 * 288
+3 * 288
+3 * 288 288
+7 * 288 0 0 1 0 0 1
+3 * 288
+3 * 288 0 288
cfi=(2)
cfn=(146)
calls=288 0x402dba 770 
* * 3168 1440 864
+5 * 288
+3 * 288
+7 * 288
+3 * 288
+3 * 288 0 288
cfi=(2)
cfn=(244)
calls=288 0x402f7a 901 
* * 30384 11104 8620 22 20 33 22 20 33 1317 70 47
+5 +1 288 288
+7 * 288
+3 * 288 0 288
cfi=(2)
cfn=(10)
calls=288 0x402f54 645 
* * 3744 1728 576
+5 * 288 288
+6 * 288
+3 * 288
+3 * 288
+3 * 288 288 0 1 0 0 1
+7 * 288
+3 * 288
+3 * 288 0 288
cfi=(2)
cfn=(146)
calls=288 0x402dba 770 
* * 3168 1440 864
+5 * 288 288
+2 * 288
+4 * 288 288
+8 * 288 288
+8 * 288 0 288
+8 +1 288 288
+7 * 288
+3 * 288 0 288
cfi=(2)
cfn=(2)
calls=288 0x402d74 645 
* * 3744 1728 576
+5 * 288 288 0 1 0 0 1
+6 * 288
+3 * 288
+3 * 288
+3 * 288 288
+7 * 288
+3 * 288
+3 * 288 0 288
cfi=(2)
cfn=(144)
calls=288 0x402d9a 770 
* * 3168 1440 864
+5 * 288 288
+4 * 288 288
+8 * 288
+4 * 288 288
+8 * 288
+3 * 288 0 288
+8 +2 288 0 288
+7 -12 288 288
+8 * 288 288
+7 * 288 0 0 0 0 0 0 0 0 288 1
jcnd=1/288 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 288
+7 * 288
+3 * 288 0 288
cfi=(2)
cfn=(2)
calls=288 0x402d74 645 
* * 3744 1728 576 2 0 1 2 0 1
+5 * 288
+3 * 288 288
+7 * 288
+3 * 288 0 288
cfi=(2)
cfn=(2)
calls=288 0x402d74 645 
* * 3744 1728 576 0 1 0 0 1
+5 * 288
+3 * 288 0 0 0 0 0 0 0 0 288 1
+2 * 288 0 0 1 0 0 1
+5 * 288
jump=288 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 288
+2 * 288 0 0 0 0 0 0 0 0 288
jcnd=288/288 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 288 0 288
+1 * 288
+3 * 288
+4 * 288 0 288
+4 * 288 0 288
+4 * 288 0 288
+5 +1 288 288
+4 * 288
+3 * 288 0 288
cfi=(2)
cfn=(2)
calls=288 0x402d74 645 
* * 3744 1728 576
+5 * 288
+3 * 288 0 288
+3 +1 288 288 0 1 0 0 1
+6 * 288 0 288
+3 * 288 288
+6 * 288 0 288
+3 +2 288 0 288
+7 * 288
jump=288 +86 * 
* * 
+2 +1 41904 41904
+3 * 41904
+3 * 41904 41904
+4 * 41904
+3 * 41904
+3 * 41904 0 41904
cfi=(2)
cfn=(144)
calls=41904 0x402d9a 770 
* * 460944 209520 125712
+5 * 41904 41904
+4 * 41904 41904
+5 * 41904
+4 * 41904 0 41904
+5 +1 41904 41904
+3 * 41904
+3 * 41904 41904
+4 * 41904
+3 * 41904
+3 * 41904 0 41904
cfi=(2)
cfn=(146)
calls=41904 0x402dba 770 
* * 460944 209520 125712
+5 * 41904 41904
+2 * 41904
+4 * 41904 41904
+5 * 41904
+4 * 41904 0 41904
+5 -2 41904 0 41904
+4 * 41904 41904
+3 * 41904
+3 * 41904 41904
+3 * 41904 0 0 0 0 0 0 0 0 41904 289
jcnd=41616/41904 -93 +1 
* * 
-9 * 288 288 0 1 0 0 1
+3 * 288
+3 * 288 288
+3 * 288 0 0 0 0 0 0 0 0 288
jcnd=288/288 -93 +1 
* * 
+2 +4 288 288
+3 * 288
+3 * 288 0 0 1 0 0 1
+4 * 288 288
+5 * 288
+4 * 288
+3 * 288 0 288
+5 +1 288 288
+3 * 288
+3 * 288
+4 * 288 288
+5 * 288
+4 * 288
+3 * 288 0 288
+5 +1 288 288
+5 * 288 288
+5 * 288 288
+5 * 288 0 0 1 0 0 1
+4 * 288
+3 * 288 0 288
+5 +2 288 288
+3 +1 288 0 288
+3 * 288 288
+5 * 288 288
+1 * 288 288

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1168 0 1168 1 0 0 1
+2 0 1168 0 1168
+2 0 1168 0 1168
+2 0 1168
+3 0 1168 0 1168
+2 0 1168 0 1168
+1 0 1168 0 1168
+1 0 1168
+3 0 1168
+4 0 1168 1168
+4 0 1168 0 1168
+4 0 1168
+3 0 1168
+4 0 1168
+3 0 1168
+3 0 1168
+3 0 1168 0 0 1 0 0 1 0 0 1168
+6 0 1168
+4 0 1168 0 0 0 0 0 0 0 0 1168
+6 0 1168
+4 0 1168 0 0 0 0 0 0 0 0 1168
+6 0 1168 1168
+7 0 1168 0 0 0 0 0 0 0 0 1168 4
jcnd=1044/1168 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1044
+2 0 1044 0 0 0 0 0 0 0 0 1044
+6 0 1044 1044 0 1 0 0 1
+4 0 1044
+3 0 1044
+2 0 1044 0 0 0 0 0 0 0 0 1044
jcnd=1044/1044 0x3877c78a40 0 
* 0 
+6 0 1044 1044
+4 0 1044
+3 0 1044 0 0 0 0 0 0 0 0 1044
+6 0 1044 1044
+5 0 1044
+4 0 1044 0 0 0 0 0 0 0 0 1044
jcnd=1044/1044 0x3877c7907c 0 
* 0 
+6 0 1044 1044
+5 0 1044
+4 0 1044 0 0 0 0 0 0 0 0 1044
+6 0 1044
+4 0 1044 0 0 1 0 0 1 0 0 1044
+6 0 1044
+4 0 1044 1044
+7 0 1044 0 0 0 0 0 0 0 0 1044
+6 0 1044 1044
+6 0 1044
+2 0 1044 0 0 0 0 0 0 0 0 1044
+6 0 1044 1044
+4 0 1044 0 0 0 0 0 0 0 0 1044 3
jcnd=1041/1044 +70 0 
* 0 
+2 0 3 3
+3 0 3
+3 0 3
+3 0 3 3
+4 0 3 3
+4 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3 2
+6 0 3 3
+4 0 3 0 0 0 0 0 0 0 0 3
+6 0 3 3
+8 0 3 0 3
+4 0 3 0 3
+4 0 3 0 0 0 0 0 0 0 0 3 1
jcnd=2/3 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c78f12 0 
* 0 
+6 0 1044 1044 0 1 0 0 1
+4 0 1044 0 0 0 0 0 0 0 0 1044 534
jcnd=359/1044 0x3877c78bf0 0 
* 0 
+6 0 685 685 0 0 2 0 0 2
+6 0 685 0 0 1 0 0 1 0 0 685 80
jcnd=76/685 0x3877c78a78 0 
* 0 
+6 0 609 609
+5 0 609 609
+5 0 609 609
+4 0 609 0 0 0 0 0 0 0 0 609
+6 0 609 609
+4 0 609 0 0 0 0 0 0 0 0 609
+6 0 609 609
+9 0 609 0 609
+4 0 609 0 609
+4 0 609 0 0 0 0 0 0 0 0 609 4
jcnd=601/609 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 609
+3 0 609
+4 0 609 609
+4 0 609 609
+4 0 609 0 0 0 0 0 0 0 0 609
-12 0 76
+4 0 76 76
+4 0 76 76
+4 0 76 0 0 0 0 0 0 0 0 76
+6 0 685
+7 0 685 0 685
+4 0 685 0 685
+4 0 685 0 0 0 0 0 0 0 0 685 8
jcnd=588/685 +18 0 
* 0 
+2 0 97 0 97
+8 0 97 0 97
+8 0 97 0 97
+4 0 97
+3 0 97 0 97 1 0 0 1
+4 0 97
+4 0 97 0 97
+4 0 97 0 97
+4 0 97
+7 0 97 0 0 0 0 0 0 0 0 97
jcnd=97/97 0x3877c78b20 0 
* 0 
-30 0 588 0 588
+4 0 588
+3 0 588 0 588
+4 0 588
+4 0 588 0 588
+4 0 588 0 588
+4 0 588
+7 0 588 0 0 0 0 0 0 0 0 588
jcnd=588/588 0x3877c78b20 0 
* 0 
-7 0 359
+7 0 359 0 0 0 0 0 0 0 0 359
jcnd=359/359 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1044 0 0 1 0 0 1
+5 0 1044 1044
+4 0 1044 1044
+7 0 1044 0 0 0 0 0 0 0 0 1044
jcnd=1044/1044 +16 0 
* 0 
+16 0 1044 0 1044
+5 0 1044 0 0 0 0 0 0 0 0 1044
+6 0 1044
+3 0 1044
jump=1044 0x3877c7878f 0 
* 0 
+10 0 76 0 76
+6 0 76 0 0 1 0 0 1
jump=76 0x3877c78885 0 
* 0 
0x3877c78b20 0 1044 1044 0 1 0 0 1
+4 0 1044
+2 0 1044 0 0 0 0 0 0 0 0 1044
+6 0 1044 1044
+7 0 1044 0 0 0 0 0 0 0 0 1044
jcnd=1044/1044 +15 0 
* 0 
+15 0 1044 0 1044 1 0 0 1
+4 0 1044 0 0 0 0 0 0 0 0 1044 2
+6 0 1044
+4 0 1044 1044
+1 0 1044 1044
+1 0 1044 1044
+2 0 1044 1044
+2 0 1044 1044
+2 0 1044 1044
+2 0 1044 1044
0x3877c78bf0 0 359 0 0 1 0 0 1
+3 0 359 0 359
+4 0 359
+3 0 359
+4 0 359 0 359 1 0 0 1
+4 0 359
jump=359 0x3877c788cf 0 
* 0 
0x3877c78f12 0 1 1 0 1 0 0 1
+5 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
jump=1 0x3877c7882d 0 
* 0 
0x3877c7907c 0 1044 1044 0 1 1 0 1 1
+4 0 1044 0 0 1 0 0 1
+7 0 1044
+4 0 1044
+3 0 1044
+3 0 1044 0 0 0 0 0 0 0 0 1044
jcnd=1044/1044 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1158 0 0 1 0 0 1
+7 0 1158
+3 0 1158
+3 0 1158 1158 0 0 1 0 0 1
+4 0 1158
+4 0 1158 0 0 0 0 0 0 0 0 0 0 1158 143
jump=136 0x3877c89be8 0 
* 0 
jump=154 0x3877c89bd0 0 
* 0 
jump=144 0x3877c89bb8 0 
* 0 
jump=144 +11 0 
* 0 
jump=144 0x3877c89c48 0 
* 0 
jump=146 0x3877c89c30 0 
* 0 
jump=144 0x3877c89c18 0 
* 0 
jump=146 0x3877c89c00 0 
* 0 
+11 0 144 144
+3 0 144
+4 0 144
+4 0 144 144
+4 0 144
+4 0 144 0 144
+4 0 144
+9 0 144 144
+4 0 144 0 144
+4 0 144 144
+4 0 144 0 144
+4 0 144 144
+4 0 144 0 144
+4 0 144 144
+4 0 144 0 144
+4 0 144
+4 0 144
+4 0 144 0 0 0 0 0 0 0 0 144
jcnd=8/144 0x3877c89c60 0 
* 0 
-40 0 10286 10286
+4 0 10286 0 10286 0 0 6 0 0 6
+4 0 10286 10286
+4 0 10286 0 10286 0 0 15 0 0 15
+4 0 10286 10286
+4 0 10286 0 10286 0 0 17 0 0 17
+4 0 10286 10286
+4 0 10286 0 10286 0 0 3 0 0 3
+4 0 10286
+4 0 10286
+4 0 10286 0 0 0 0 0 0 0 0 10286 684
jcnd=1122/10286 0x3877c89c60 0 
* 0 
-32 0 146 146
+4 0 146 0 146
+4 0 146 146
+4 0 146 0 146
+4 0 146 146
+4 0 146 0 146
+4 0 146
+4 0 146
+4 0 146 0 0 0 0 0 0 0 0 146
jcnd=10/146 0x3877c89c60 0 
* 0 
-24 0 144 144
+4 0 144 0 144
+4 0 144 144
+4 0 144 0 144
+4 0 144
+4 0 144
+4 0 144 0 0 0 0 0 0 0 0 144
jcnd=8/144 0x3877c89c60 0 
* 0 
-16 0 146 146 0 1 0 0 1
+4 0 146 0 146
+4 0 146 0 0 1 0 0 1
+4 0 146
+4 0 146 0 0 0 0 0 0 0 0 146 4
jcnd=10/146 0x3877c89c60 0 
* 0 
+6 0 9708
+4 0 9708 9708
+3 0 9708 0 9708 0 0 1 0 0 1
+3 0 9708 9708
+4 0 9708 0 9708 0 0 3 0 0 3
+4 0 9708 9708
+4 0 9708 0 9708 0 0 18 0 0 18
+4 0 9708 9708
+4 0 9708 0 9708
+4 0 9708
jump=9708 -80 0 
* 0 
-30 0 136 136
+3 0 136 0 136
+3 0 136 136
+4 0 136 0 136
+4 0 136 136
+4 0 136 0 136 0 0 2 0 0 2
+4 0 136 136
+4 0 136 0 136
+4 0 136
jump=136 -80 0 
* 0 
-24 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154 154
+4 0 154 0 154
+4 0 154
jump=154 -80 0 
* 0 
-16 0 144 144
+4 0 144 0 144
+4 0 144 144
+4 0 144 0 144
+4 0 144
jump=144 -80 0 
* 0 
+8 0 144 144
+3 0 144
+4 0 144 0 0 1 0 0 1
+4 0 144
+4 0 144
jump=144 -39 0 
* 0 
+9 0 154
+3 0 154 0 0 0 0 0 0 0 0 154
+6 0 154 154
+3 0 154
+4 0 154
jump=154 -72 0 
* 0 
+8 0 136
+4 0 136 136
+3 0 136 0 0 0 0 0 0 0 0 136
+2 0 136
+4 0 136
jump=136 -99 0 
* 0 
+11 0 146 146 0 1 0 0 1
+3 0 146
+4 0 146
+4 0 146
+4 0 146
jump=146 0x3877c89b78 0 
* 0 
+9 0 144 144
+3 0 144
+4 0 144
+4 0 144
+4 0 144
jump=144 0x3877c89b70 0 
* 0 
+9 0 146 146
+3 0 146
+4 0 146
+4 0 146
+4 0 146
jump=146 0x3877c89b68 0 
* 0 
+9 0 144 144
+3 0 144
+4 0 144
+4 0 144
+4 0 144
jump=144 0x3877c89b60 0 
* 0 
+9 0 1158 0 1158 1 0 0 1
+3 0 1158 1158

fn=(104) alloc_perturb
0x3877c77180 0 1027 1027 0 1 0 0 1
+6 0 1027
+2 0 1027 0 0 0 0 0 0 0 0 1027 1
+2 0 1027 1027

fn=(38) _int_malloc
0x3877c79a00 0 1168 0 1168 1 0 0 1
+2 0 1168
+3 0 1168 0 1168
+2 0 1168 0 1168
+2 0 1168 0 1168 0 0 1 0 0 1
+2 0 1168
+3 0 1168 0 1168
+1 0 1168 0 1168
+1 0 1168
+4 0 1168
+4 0 1168 0 0 0 0 0 0 0 0 1168
+6 0 1168
+4 0 1168
+6 0 1168
+3 0 1168
+4 0 1168
+4 0 1168
+4 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168
+6 0 1168 1168 0 1 1 0 1 1
+7 0 1168 0 0 0 0 0 0 0 0 1168 7
jcnd=1046/1168 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 141 141
+6 0 141
+4 0 141
+2 0 141 0 0 0 0 0 0 0 0 141
+6 0 141
+3 0 141
+4 0 141 141
+1 0 141 141
+1 0 141 141
+2 0 141 141
+2 0 141 141
+2 0 141 141
+2 0 141 141
-14 0 1027
+4 0 1027 1027
+1 0 1027 1027
+1 0 1027 1027
+2 0 1027 1027
+2 0 1027 1027
+2 0 1027 1027
+2 0 1027 1027
+7 0 1063
+7 0 1063 0 0 1 0 0 1 0 0 1063 7
jcnd=160/1063 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 5 0 0 5
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 160 0 0 1 0 0 1
+3 0 160
+4 0 160
+4 0 160 0 0 1 0 0 1 0 0 160
jcnd=160/160 0x3877c7a1a4 0 
* 0 
+30 0 160 160
+6 0 160
+5 0 160 0 0 0 0 0 0 0 0 160 1
jcnd=159/160 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 914 250 192 8 0 0 8 0 0 192 32
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1062 0 0 1 0 0 1
+3 0 1062
+3 0 1062
+3 0 1062
+4 0 1062
+3 0 1062
+4 0 1062 0 1062
+5 0 1062
+3 0 1062 0 1062
+4 0 1062 0 1062
+4 0 1062 0 1062
+5 0 1062
+3 0 1062
+3 0 1062
+3 0 1062
+3 0 1062
+4 0 1062
+4 0 1062 0 0 1 0 0 1
+4 0 1062 0 1062
+4 0 1062
+4 0 1062 0 1062
+5 0 1062 0 1062
+5 0 1062
+3 0 1062
+3 0 1062 0 1062
+5 0 1062
+5 0 1062
+3 0 1062 0 1062
+4 0 1062 0 1062
+4 0 1062
+6 0 1062 0 1062
+4 0 1062 0 1062
+5 0 1062 0 0 1 0 0 1
+3 0 1062
+3 0 1062
+3 0 1062
jump=1062 +87 0 
* 0 
+8 0 985
+3 0 985
+4 0 985
+2 0 985
+2 0 985
+3 0 985
+3 0 985
+3 0 985
+2 0 985
+2 0 985
+5 0 985
+2 0 985 985
+4 0 985
+3 0 985
+4 0 985 0 985
+4 0 985 0 985 0 0 1 0 0 1
+8 0 985
+7 0 985 0 985
+4 0 985 0 985 0 0 1 0 0 1
+4 0 985 0 985
+4 0 985 0 0 0 0 0 0 0 0 985
-38 0 87
+3 0 87
+4 0 87 0 87
+4 0 87 0 87
+8 0 87
+7 0 87 0 87
+4 0 87 0 87 0 0 1 0 0 1
+4 0 87 0 87
+4 0 87 0 0 0 0 0 0 0 0 87
+6 0 2135 2135 0 1 0 0 1
+4 0 2135
+3 0 2135 0 0 0 0 0 0 0 0 2135 98
jcnd=1008/2135 0x3877c79ef0 0 
* 0 
+6 0 1127 1127
+4 0 1127 1127
+4 0 1127
+4 0 1127 0 0 0 0 0 0 0 0 1127
+6 0 1127 1127 0 1 1 0 1 1
+7 0 1127 0 0 0 0 0 0 0 0 1127
+6 0 1127
+4 0 1127
+7 0 1127 0 0 0 0 0 0 0 0 1127 6
jcnd=144/1127 +11 0 
* 0 
+2 0 983
+3 0 983 0 0 0 0 0 0 0 0 983 135
jcnd=820/983 0x3877c79e28 0 
* 0 
+6 0 1108
+3 0 1108 0 1108
+4 0 1108 0 1108
+5 0 1108 0 0 0 0 0 0 0 0 1108 20
jcnd=36/1108 0x3877c7a090 0 
* 0 
+6 0 1072
+7 0 1072 0 0 0 0 0 0 0 0 1072 60
jcnd=985/1072 0x3877c79c50 0 
* 0 
+6 0 87 0 0 1 0 0 1
+3 0 87
+4 0 87
+4 0 87 0 0 0 0 0 0 0 0 87
+6 0 87
+3 0 87
+4 0 87
+2 0 87
+2 0 87
+3 0 87
+3 0 87
+8 0 87
+3 0 87
+2 0 87
+2 0 87
+4 0 87 87 0 0 1 0 0 1
+4 0 87
+3 0 87 0 0 1 0 0 1 0 0 87 8
jcnd=86/87 0x3877c79e15 0 
* 0 
+6 0 1 1
+4 0 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
jump=1 0x3877c79c73 0 
* 0 
0x3877c79e15 0 86 0 86
+4 0 86 0 86
+4 0 86
+3 0 86
jump=86 0x3877c79c73 0 
* 0 
+8 0 820 820 0 1 0 0 1
+4 0 820
+3 0 820 0 0 0 0 0 0 0 0 820 248
jcnd=428/820 0x3877c79ce1 0 
* 0 
+6 0 392 392
+5 0 392 0 0 0 0 0 0 0 0 392 5
jcnd=373/392 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 1 0 0 1
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1008 0 0 1 0 0 1
+7 0 1008
+3 0 1008 0 0 0 0 0 0 0 0 1008 5
jcnd=152/1008 0x3877c7a0b0 0 
* 0 
+6 0 995 995 0 1 0 0 1
+4 0 995
+3 0 995
+3 0 995
+2 0 995
+4 0 995
+3 0 995
+3 0 995
+2 0 995
+2 0 995
+2 0 995
+2 0 995 995
+8 0 995
+5 0 995
+5 0 995
+2 0 995 0 0 0 0 0 0 0 0 995
-2 0 481
+2 0 481 0 0 0 0 0 0 0 0 481
+2 0 1476
+2 0 1476 0 0 0 0 0 0 0 0 1476 38
jcnd=940/1476 +64 0 
* 0 
+2 0 536
+8 0 536
+3 0 536
+3 0 536 0 0 0 0 0 0 0 0 536 1
jcnd=1/536 0x3877c79fc0 0 
* 0 
-6 0 637
+3 0 637
+3 0 637 0 0 0 0 0 0 0 0 637 11
jcnd=360/637 0x3877c79fc0 0 
* 0 
+2 0 812
+2 0 812 812
+8 0 812
+2 0 812 0 0 0 0 0 0 0 0 812 21
jcnd=637/812 -20 0 
* 0 
+2 0 175
+2 0 175
+5 0 175
+3 0 175
+3 0 175
+2 0 175
+2 0 175
+5 0 175 0 0 0 0 0 0 0 0 175 3
jcnd=3/175 +14 0 
* 0 
+2 0 172
+2 0 172
+4 0 172
+2 0 172
+2 0 172 0 0 0 0 0 0 0 0 172
jcnd=172/172 -8 0 
* 0 
-8 0 10665
+4 0 10665
+2 0 10665
+2 0 10665 0 0 0 0 0 0 0 0 10665 715
jcnd=9640/10665 -8 0 
* 0 
-2 0 940 0 0 1 0 0 1
+2 0 940 0 0 0 0 0 0 0 0 940 30
jcnd=853/940 -8 0 
* 0 
+2 0 1115 1115 0 0 13 0 0 13
+4 0 1115 0 0 1 0 0 1
+3 0 1115 0 0 0 0 0 0 0 0 1115 627
jcnd=634/1115 0x3877c7a1cf 0 
* 0 
+6 0 481
+2 0 481
+4 0 481
+2 0 481
+2 0 481
+2 0 481 0 481
+8 0 481
jump=481 0x3877c79f30 0 
* 0 
+37 0 361 361 0 1 0 0 1
+5 0 361 361
+4 0 361
+4 0 361 361
+5 0 361 0 0 0 0 0 0 0 0 361
jcnd=361/361 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 36 0 0 1 0 0 1
+7 0 36 0 36
+6 0 36
+3 0 36 0 0 0 0 0 0 0 0 36
jcnd=36/36 0x3877c79ace 0 
* 0 
+16 0 152 152
+4 0 152
+4 0 152
+2 0 152
+5 0 152 152 0 1 0 0 1
+4 0 152
+3 0 152 0 0 0 0 0 0 0 0 152 4
jcnd=139/152 0x3877c79f00 0 
* 0 
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13
+3 0 13 13
+4 0 13 13
+4 0 13
+3 0 13
+4 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=1/13 -18 0 
* 0 
-18 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+2 0 13 13
+4 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=12/13 0x3877c7a650 0 
* 0 
+6 0 1 1
+4 0 1 1 0 1 0 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1
+3 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
-14 0 12
+3 0 12 12
+4 0 12
+3 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13 2
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13
+2 0 13 13 0 1 0 0 1
+4 0 13
+3 0 13 0 0 0 0 0 0 0 0 13 12
jcnd=13/13 0x3877c7a659 0 
* 0 
+6 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 4
jcnd=8/13 0x3877c7a2e3 0 
* 0 
+6 0 5 5
+4 0 5
+7 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5
+4 0 5
+7 0 5 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x3877c7a285 0 
* 0 
+31 0 160 0 0 1 0 0 1
+3 0 160 0 160
+4 0 160
jump=160 0x3877c79b99 0 
* 0 
+36 0 634 634 0 1 1 0 1 1
+4 0 634 634 0 0 1 0 0 1
+4 0 634
+3 0 634 634
+4 0 634
+4 0 634
+3 0 634
+3 0 634 634
+4 0 634 0 0 0 0 0 0 0 0 634
+6 0 634 634
+4 0 634 0 0 0 0 0 0 0 0 634
+6 0 634 634 0 1 0 0 1
+8 0 634 0 634
+4 0 634 0 634
+4 0 634 0 0 0 0 0 0 0 0 634 6
jcnd=560/634 +38 0 
* 0 
+2 0 74 74 0 0 2 0 0 2
+4 0 74
+3 0 74 0 0 0 0 0 0 0 0 74
+2 0 74 74
+5 0 74 0 0 0 0 0 0 0 0 74
+6 0 74 74
+4 0 74 0 74
+4 0 74 74
+4 0 74 0 74
+4 0 74
+4 0 74 0 0 0 0 0 0 0 0 74
-4 0 560
+4 0 560 0 0 0 0 0 0 0 0 560 13
jcnd=28/560 0x3877c7a2e3 0 
* 0 
+6 0 606 606
+4 0 606 606 0 1 0 0 1
+4 0 606 0 0 0 0 0 0 0 0 606
+6 0 606
+4 0 606
+7 0 606 0 606 0 0 10 0 0 10
+4 0 606 0 606
+4 0 606 0 606
+4 0 606 0 606
+4 0 606 0 0 0 0 0 0 0 0 606 4
jcnd=67/606 +7 0 
* 0 
+2 0 539 0 539
+5 0 539
+7 0 539 0 0 0 0 0 0 0 0 539 1
jcnd=533/539 +18 0 
* 0 
-7 0 67
+7 0 67 0 0 0 0 0 0 0 0 67
jcnd=67/67 +18 0 
* 0 
+2 0 6 0 6
+8 0 6 0 6
+8 0 6
+7 0 6 0 6 0 0 2 0 0 2
+4 0 6
+3 0 6
+3 0 6
+4 0 6
+3 0 6
+4 0 6
+3 0 6
+3 0 6
+4 0 6 0 6
+4 0 6 0 6
+4 0 6
jump=6 +71 0 
* 0 
-46 0 605 0 0 1 0 0 1
+7 0 605 0 605 0 0 1 0 0 1
+4 0 605
+3 0 605
+3 0 605
+4 0 605
+3 0 605
+4 0 605
+3 0 605
+3 0 605
+4 0 605 0 605
+4 0 605 0 605 0 0 1 0 0 1
+4 0 605
jump=605 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 36
+7 0 36 0 36
+6 0 36
+3 0 36 0 0 0 0 0 0 0 0 36 2
jcnd=36/36 +7 0 
* 0 
+7 0 647
+4 0 647 0 0 1 0 0 1
+3 0 647
+3 0 647 0 647
cfn=(104)
calls=647 0x3877c77180 0 
* 0 2588 1294 0 1 0 0 1 0 0 647
+5 0 647
+3 0 647
jump=647 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 361 0 0 1 0 0 1
+7 0 361
+2 0 361
+4 0 361
+3 0 361
+3 0 361 0 361
+5 0 361
+3 0 361
+4 0 361
+3 0 361 0 0 1 0 0 1
+4 0 361
+4 0 361
+3 0 361
+4 0 361 0 361
+4 0 361 0 361 0 0 8 0 0 8
+4 0 361
+3 0 361
+3 0 361 0 361
cfn=(104)
calls=361 0x3877c77180 0 
* 0 1444 722 0 0 0 0 0 0 0 361 1
+5 0 361
+3 0 361
jump=361 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 12 12
+4 0 12
jump=12 0x3877c7a10e 0 
* 0 
+5 0 13 13 0 1 0 0 1
+5 0 13 0 0 0 0 0 0 0 0 13
+2 0 13 13
+4 0 13 0 13
+4 0 13 13
+4 0 13 0 13
+4 0 13
jump=13 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1168 0 1168 1 0 0 1
+5 0 1168 0 1168
+5 0 1168
+3 0 1168 0 1168
+5 0 1168
+4 0 1168 1168 0 0 1 0 0 1
+7 0 1168 1168 0 0 1 0 0 1
+3 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168 2
+6 0 1168 1168 0 0 1 0 0 1
+7 0 1168 1168 0 1 1 0 1 1
+4 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168
+2 0 1168 1168 0 0 1 0 0 1
+3 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168
jcnd=1168/1168 +97 0 
* 0 
+18 0 1168
+3 0 1168
+3 0 1168 0 1168
cfn=(38)
calls=1168 0x3877c79a00 0 
* 0 271350 31892 38006 45 28 44 45 28 44 42972 2158
+5 0 1168
+3 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168
+2 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168
+2 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168 8
+2 0 1168 1168
+7 0 1168 0 0 0 0 0 0 0 0 1168
jcnd=1168/1168 +13 0 
* 0 
+13 0 1168 0 1168
+2 0 1168 0 0 0 0 0 0 0 0 1168 8
+6 0 1168
+3 0 1168 1168
+4 0 1168 1168
+5 0 1168 1168
+5 0 1168
+4 0 1168 1168
+1 0 1168 0 0 1 0 0 1
+5 0 1168 1168 0 0 1 0 0 1
+7 0 1168 0 0 0 0 0 0 0 0 1168
jcnd=1168/1168 +14 0 
* 0 
+14 0 1168 0 1168 1 0 0 1
+3 0 1168 0 0 0 0 0 0 0 0 1168
+6 0 1168
jump=1168 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1168 0 1168 1 0 0 1
+2 0 1168
+3 0 1168
+3 0 1168 0 1168
+2 0 1168
+3 0 1168 0 1168
+1 0 1168
+3 0 1168 0 1168
+1 0 1168
+3 0 1168
+4 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168
+6 0 1168
+4 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168 7
jcnd=10/1168 0x3877c838d1 0 
* 0 
+2 0 1158
+3 0 1158
+3 0 1158
+3 0 1158
+3 0 1158
+3 0 1158 0 0 0 0 0 0 0 0 1158
jcnd=1158/1158 +41 0 
* 0 
+41 0 1158 0 0 1 0 0 1
+3 0 1158 0 0 0 0 0 0 0 0 1158
jcnd=1158/1158 0x3877c839c0 0 
* 0 
+24 0 1158
+3 0 1158
+4 0 1158
+3 0 1158
+3 0 1158
+3 0 1158
+3 0 1158
+3 0 1158 0 0 0 0 0 0 0 0 1158 573
jcnd=586/1158 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 582
+10 0 582 582 0 0 2 0 0 2
+3 0 582
+4 0 582 0 582
+3 0 582
+4 0 582
+4 0 582 0 0 0 0 0 0 0 0 582
jcnd=582/582 -18 0 
* 0 
-18 0 1802 1802
+3 0 1802
+4 0 1802 0 1802
+3 0 1802
+4 0 1802
+4 0 1802 0 0 0 0 0 0 0 0 1802 11
jcnd=1220/1802 -18 0 
* 0 
+2 0 1168
+4 0 1168
+3 0 1168 1168
+1 0 1168 1168
+1 0 1168 1168
+2 0 1168 1168 0 1 0 0 1
+2 0 1168 1168
0x3877c839c0 0 1158 0 0 1 0 0 1
+3 0 1158
+3 0 1158
+3 0 1158
+4 0 1158 0 1158 0 0 1 0 0 1
cfn=(284)
calls=1158 0x3877c89b20 0 
* 0 233226 86336 84020 6 1 65 6 1 65 11156 688 1158 143
+5 0 1158
jump=1158 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1168 1168 0 1 1 0 1 1
+7 0 1168 1168 0 0 1 0 0 1
+3 0 1168
+3 0 1168 0 0 1 0 0 1 0 0 1168 1
+6 0 1168
+3 0 1168 0 0 0 0 0 0 0 0 1168
+6 0 1168 1168
+4 0 1168
+4 0 1168
+2 0 1168 0 0 0 0 0 0 0 0 1168 2
+2 0 1168
+2 0 1168
+7 0 1168 0 0 0 0 0 0 0 0 1168
jcnd=1168/1168 +14 0 
* 0 
+14 0 1168
+2 0 1168
cfn=(170)
calls=1168 0x3877c78650 0 
* 0 113352 30082 16960 20 3 0 20 3 0 27437 638

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 9 9
+5 0 9
+3 0 9 9
+5 0 9 9
+4 0 9 0 0 0 0 0 0 0 0 9
+6 0 9 9
+4 0 9 0 0 0 0 0 0 0 0 9
+6 0 9 9
+9 0 9 0 9
+4 0 9 0 9
+4 0 9 0 0 0 0 0 0 0 0 9 4
jcnd=9/9 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=5/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=9/20 +70 0 
* 0 
+2 0 11 11
+3 0 11
+3 0 11
+3 0 11 11
+4 0 11 11
+4 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+8 0 11 0 11
+4 0 11 0 11
+4 0 11 0 0 0 0 0 0 0 0 11
jcnd=11/11 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20
+6 0 20 0 0 0 0 0 0 0 0 20 8
jcnd=9/20 0x3877c75e68 0 
* 0 
+6 0 11 0 11
+6 0 11
jump=11 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 8026960 3260937 1894113 242 90 135 242 90 135 241819 4984 6998 143
