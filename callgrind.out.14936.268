version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 268


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 236499822 - 236603040
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 292 0 0 1 0 0 1
+3 0 292 0 0 0 0 0 0 0 0 292
+2 0 292
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=292 0x3877c7b8b0 0 
* 0 31008 7784 4200 21 3 0 21 3 0 7246 117
* 0 292 292 0 1 1 0 1 1 0 0 0 292

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 292 0 292 1 0 0 1
+1 0 292
+5 0 292
+3 0 292 0 292
+1 0 292
+4 0 292 0 0 1 0 0 1
+3 0 292
+4 0 292
+3 0 292 0 292 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=292 0x3877c7aa50 0 
* 0 62978 10406 9740 34 29 33 34 29 33 10578 348
* 0 292 292 0 1 1 0 1 1 0 0 0 292
+5 0 292
+3 0 292 0 0 0 0 0 0 0 0 292
jcnd=292/292 +96 0 
* 0 
+96 0 292 0 0 1 0 0 1
+4 0 292 292
+1 0 292 292
+1 0 292 292

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 70 0 70 1 0 0 1
+1 * 70
+3 * 70
+4 * 70 0 70
+4 * 70 0 70
+4 +1 70 70
+4 * 70
+3 * 70 0 70
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=70 0x402d74 645 
* * 910 420 140
+5 * 70
+3 * 70 0 70
+3 +1 70 70
+6 * 70 0 70
+3 * 70 70
+6 * 70 0 70
+3 +1 70 70
+6 * 70 0 70 1 0 0 1
+3 * 70 70
+6 * 70 0 70
+3 +2 70 0 70
+7 * 70
jump=70 +86 * 
* * 
+2 +1 2555 2555
+3 * 2555
+3 * 2555 2555
+4 * 2555
+3 * 2555
+3 * 2555 0 2555
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=2555 0x402d9a 770 
* * 28105 12775 7665
+5 * 2555 2555
+4 * 2555 2555
+5 * 2555
+4 * 2555 0 2555
+5 +1 2555 2555
+3 * 2555
+3 * 2555 2555
+4 * 2555
+3 * 2555
+3 * 2555 0 2555
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=2555 0x402dba 770 
* * 28105 12775 7665 1 0 0 1
+5 * 2555 2555
+2 * 2555
+4 * 2555 2555
+5 * 2555
+4 * 2555 0 2555
+5 -2 2555 0 2555
+4 * 2555 2555
+3 * 2555
+3 * 2555 2555
+3 * 2555 0 0 0 0 0 0 0 0 2555 72
jcnd=2485/2555 -93 +1 
* * 
-9 * 70 70 0 1 0 0 1
+3 * 70
+3 * 70 70
+3 * 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 -93 +1 
* * 
+2 +4 70 70
+3 * 70
+3 * 70
+4 * 70 70 0 1 0 0 1
+5 * 70
+4 * 70
+3 * 70 0 70
+5 +1 70 70
+3 * 70
+3 * 70
+4 * 70 70
+5 * 70
+4 * 70
+3 * 70 0 70
+5 +1 70 0 70
+7 * 70
jump=70 0x4016ee * 
* * 
+2 +1 2555 2555
+3 * 2555
+3 * 2555 2555
+4 * 2555
+3 * 2555 0 0 1 0 0 1
+3 * 2555 0 2555
cfi=(2)
cfn=(146)
calls=2555 0x402dba 770 
* * 28105 12775 7665
+5 * 2555 2555
+2 * 2555
+4 * 2555 2555
+5 * 2555 0 2555
+5 +1 2555 2555
+3 * 2555
+3 * 2555 2555
+4 * 2555
+3 * 2555
+3 * 2555 0 2555
cfi=(2)
cfn=(144)
calls=2555 0x402d9a 770 
* * 28105 12775 7665
+5 * 2555 2555
+4 * 2555 2555
+5 * 2555 0 2555
+5 +1 2555 2555
+5 * 2555 2555
+5 * 2555 2555
+5 * 2555
+4 * 2555 0 2555
+5 +1 2555 2555
+5 * 2555 2555
+5 * 2555 2555
+5 * 2555
+4 * 2555 0 2555
+5 -4 2555 0 2555
+4 * 2555 2555
+3 * 2555
+3 * 2555 2555
+3 * 2555 0 0 0 0 0 0 0 0 2555 72
jcnd=2485/2555 0x401672 +1 
* * 
-9 * 70 70 0 1 0 0 1
+3 * 70
+3 * 70 70
+3 * 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 0x401672 +1 
* * 
+6 +6 70 70 0 1 0 0 1
+5 * 70 70
+5 * 70 0 70
+5 +2 70 70
+3 +1 70 0 70
+3 * 70 70
+5 * 70 70
+1 * 70 70

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 70
+7 * 70
+7 * 70
+3 * 70
+3 * 70 0 70
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=70 0x4030b2 310 
* * 58580 16848 15371 63 17 16 63 17 16 3534 163 278 33
+5 * 70
+7 * 70
+7 * 70
+3 * 70
+3 * 70 0 70
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=70 0x402ff4 310 
* * 58684 16898 15178 38 7 20 38 7 20 3572 171 278
+5 * 70 0 0 1 0 0 1
+7 * 70
+7 * 70
+3 * 70
+3 * 70 0 70
cfn=(142)
calls=70 0x401585 -52 
* * 270270 119280 62510 8 0 0 8 0 0 5250 144
+5 * 70 0 70
+8 * 70 70
+6 * 70 0 70
+6 * 70
+7 * 70
+3 * 70 0 70
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=70 0x402df4 414 
* * 17590 5528 4053 33 5 0 33 5 0 1894 44 140
+5 * 70
+7 * 70
+3 * 70 0 70 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=70 0x402e74 414 
* * 17497 5506 3993 7 0 0 7 0 0 1882 17 140
+5 +2 70
+7 * 70
+7 * 70
+3 * 70
+3 * 70 0 70
cfi=(2)
cfn=(4)
calls=70 0x4030b2 310 
* * 58253 16825 15268 2 1 1 2 1 1 3510 80 278
+5 * 70
+7 * 70
+7 * 70
+3 * 70
+3 * 70 0 70
cfi=(2)
cfn=(80)
calls=70 0x402ff4 310 
* * 57877 16848 15041 0 0 2 0 0 2 3447 53 278
+5 * 70 70
+6 * 70 0 0 1 0 0 1
+7 * 70
+7 * 70 0 70
+6 * 70 70
+8 * 70
+3 * 70
+3 * 70 0 70
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=70 0x401719 -33 
* * 126770 52640 29155 4 0 0 4 0 0 2625 72
+5 * 70 0 70
+8 * 70 70
+6 * 70 0 70
+6 * 70
+7 * 70 0 0 1 0 0 1
+3 * 70 0 70
cfi=(2)
cfn=(148)
calls=70 0x402df4 414 
* * 17590 5528 4053 0 0 0 0 0 0 1894 39 140
+5 * 70
+7 * 70
+3 * 70 0 70
cfi=(2)
cfn=(178)
calls=70 0x402e74 414 
* * 17497 5506 3993 0 0 0 0 0 0 1882 11 140
+5 +2 70 70
+7 * 70
+3 * 70 0 70
cfi=(2)
cfn=(2)
calls=70 0x402d74 645 
* * 910 420 140
+5 * 70 70
+6 * 70
+3 * 70
+3 * 70
+3 * 70 70
+7 * 70
+3 * 70 0 0 1 0 0 1
+3 * 70 0 70
cfi=(2)
cfn=(144)
calls=70 0x402d9a 770 
* * 770 350 210
+5 * 70
+3 * 70
+7 * 70
+3 * 70
+3 * 70 0 70
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=70 0x402eda 901 
* * 12807 4377 3546 36 15 10 36 15 10 611 36 35
+5 +1 70 70
+7 * 70
+3 * 70 0 70
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=70 0x402f54 645 
* * 910 420 140 0 1 0 0 1
+5 * 70 70
+6 * 70
+3 * 70
+3 * 70
+3 * 70 70
+7 * 70 0 0 1 0 0 1
+3 * 70
+3 * 70 0 70
cfi=(2)
cfn=(146)
calls=70 0x402dba 770 
* * 770 350 210
+5 * 70
+3 * 70
+7 * 70
+3 * 70
+3 * 70 0 70
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=70 0x402f7a 901 
* * 12707 4374 3546 21 6 12 21 6 12 590 30 35
+5 +1 70 70
+7 * 70
+3 * 70 0 70
cfi=(2)
cfn=(10)
calls=70 0x402f54 645 
* * 910 420 140
+5 * 70 70
+6 * 70
+3 * 70
+3 * 70
+3 * 70 70 0 1 0 0 1
+7 * 70
+3 * 70
+3 * 70 0 70
cfi=(2)
cfn=(146)
calls=70 0x402dba 770 
* * 770 350 210
+5 * 70 70
+2 * 70
+4 * 70 70
+8 * 70 70
+8 * 70 0 70
+8 +1 70 70
+7 * 70
+3 * 70 0 70
cfi=(2)
cfn=(2)
calls=70 0x402d74 645 
* * 910 420 140
+5 * 70 70 0 1 0 0 1
+6 * 70
+3 * 70
+3 * 70
+3 * 70 70
+7 * 70
+3 * 70
+3 * 70 0 70
cfi=(2)
cfn=(144)
calls=70 0x402d9a 770 
* * 770 350 210
+5 * 70 70
+4 * 70 70
+8 * 70
+4 * 70 70
+8 * 70
+3 * 70 0 70
+8 +2 70 0 70
+7 -12 70 70
+8 * 70 70
+7 * 70 0 0 0 0 0 0 0 0 70 3
jcnd=1/70 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 70
+7 * 70
+3 * 70 0 70
cfi=(2)
cfn=(2)
calls=70 0x402d74 645 
* * 910 420 140 2 0 1 2 0 1
+5 * 70
+3 * 70 70
+7 * 70
+3 * 70 0 70
cfi=(2)
cfn=(2)
calls=70 0x402d74 645 
* * 910 420 140 0 1 0 0 1
+5 * 70
+3 * 70 0 0 0 0 0 0 0 0 70
+2 * 70 0 0 1 0 0 1
+5 * 70
jump=70 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 70
+2 * 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 70 0 70
+1 * 70
+3 * 70
+4 * 70 0 70
+4 * 70 0 70
+4 * 70 0 70
+5 +1 70 70
+4 * 70
+3 * 70 0 70
cfi=(2)
cfn=(2)
calls=70 0x402d74 645 
* * 910 420 140
+5 * 70
+3 * 70 0 70
+3 +1 70 70 0 1 0 0 1
+6 * 70 0 70
+3 * 70 70
+6 * 70 0 70
+3 +2 70 0 70
+7 * 70
jump=70 +86 * 
* * 
+2 +1 2555 2555
+3 * 2555
+3 * 2555 2555
+4 * 2555
+3 * 2555
+3 * 2555 0 2555
cfi=(2)
cfn=(144)
calls=2555 0x402d9a 770 
* * 28105 12775 7665
+5 * 2555 2555
+4 * 2555 2555
+5 * 2555
+4 * 2555 0 2555
+5 +1 2555 2555
+3 * 2555
+3 * 2555 2555
+4 * 2555
+3 * 2555
+3 * 2555 0 2555
cfi=(2)
cfn=(146)
calls=2555 0x402dba 770 
* * 28105 12775 7665
+5 * 2555 2555
+2 * 2555
+4 * 2555 2555
+5 * 2555
+4 * 2555 0 2555
+5 -2 2555 0 2555
+4 * 2555 2555
+3 * 2555
+3 * 2555 2555
+3 * 2555 0 0 0 0 0 0 0 0 2555 72
jcnd=2485/2555 -93 +1 
* * 
-9 * 70 70 0 1 0 0 1
+3 * 70
+3 * 70 70
+3 * 70 0 0 0 0 0 0 0 0 70
jcnd=70/70 -93 +1 
* * 
+2 +4 70 70
+3 * 70
+3 * 70 0 0 1 0 0 1
+4 * 70 70
+5 * 70
+4 * 70
+3 * 70 0 70
+5 +1 70 70
+3 * 70
+3 * 70
+4 * 70 70
+5 * 70
+4 * 70
+3 * 70 0 70
+5 +1 70 70
+5 * 70 70
+5 * 70 70
+5 * 70 0 0 1 0 0 1
+4 * 70
+3 * 70 0 70
+5 +2 70 70
+3 +1 70 0 70
+3 * 70 70
+5 * 70 70
+1 * 70 70

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 140
+4 * 140
+3 * 140 0 140
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=140 0x4044cc -35 
* * 700 280 280
+5 * 140 140
+1 * 140 140

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 140 0 140 1 0 0 1
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140 1 0 0 1
+4 +1 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=140 0x4049d4 -35 
* * 840 280 420 1 0 0 1
+5 * 140 140
+1 * 140 140

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 140 0 140 1 0 0 1
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 140
+4 * 140
+3 * 140 0 140
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=140 0x404520 -35 
* * 700 280 280
+5 * 140 140
+1 * 140 140

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 140 0 140 1 0 0 1
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=140 0x404a28 -35 
* * 840 280 420 1 0 1 1 0 1
+5 * 140 140
+1 * 140 140

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 140 0 140 1 0 0 1
+1 * 140
+3 * 140 0 140
+4 * 140 140
+4 * 140 140
+1 * 140 140

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 70 0 70
+1 * 70
+3 * 70
+4 * 70 0 70
+4 * 70 0 70
+4 * 70 0 70
+4 +1 70 70
+4 * 70 70
+4 * 70 70
+4 * 70
+3 * 70
+3 * 70 0 70
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=70 0x40406a -87 
* * 1680 560 630 0 4 4 0 4 4 70
+5 * 70 70
+1 * 70 70

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 140 0 140
+1 * 140
+3 * 140 0 140
+4 * 140 140
+4 * 140 140
+1 * 140 140

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 70 0 70
+1 * 70
+3 * 70
+4 * 70 0 70
+4 * 70 0 70
+4 * 70 0 70
+4 +1 70 70
+4 * 70 70
+4 * 70 70
+4 * 70
+3 * 70
+3 * 70 0 70
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=70 0x403df2 -87 
* * 1680 560 630 0 6 1 0 6 1 70 1
+5 * 70 70
+1 * 70 70

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 200 0 200
+1 * 200
+3 * 200 0 200
+4 +1 200 200
+4 * 200 200
+1 * 200 200

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 280 0 280 1 0 0 1
+1 * 280
+3 * 280 0 280
+4 +1 280 280 0 1 0 0 1
+4 * 280 280
+1 * 280 280

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 200 0 200
+1 * 200
+3 * 200 0 200 0 0 1 0 0 1
+4 +1 200 200
+4 * 200 200
+1 * 200 200

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 280 0 280 1 0 0 1
+1 * 280
+3 * 280
+4 * 280 0 280
+4 +1 280
+4 * 280
+3 * 280 0 280
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=280 0x404ffe 790 
* * 1680 840 560 1 0 0 1
+5 * 280 280
+3 * 280 280
+1 * 280 280

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 280 0 280 1 0 0 1
+1 * 280
+3 * 280 0 280
+4 +1 280 280
+4 * 280 280
+1 * 280 280

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 280 0 280 1 0 0 1
+1 * 280
+3 * 280
+4 * 280 0 280
+4 +1 280
+4 * 280
+3 * 280 0 280 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=280 0x40500c 790 
* * 1680 840 560 1 0 0 1
+5 * 280 280
+3 * 280 280
+1 * 280 280

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 140 0 140
+1 * 140
+3 * 140 0 140
+4 * 140 0 140
+4 * 140 140
+4 * 140 140
+1 * 140 140

fl=(5)
fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146
+3 * 146 0 146
cob=(5)
cfi=(8)
cfn=(164)
calls=146 0x387e4bb2f0 0 
* * 16168 4054 2158 23 4 0 23 4 0 3778 85 146
* * 146 146 0 1 1 0 1 1 0 0 0 146
+5 * 146 146
+1 * 146 146

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +1 146 146
+4 * 146
+3 * 146 0 146
cob=(5)
cfi=(8)
cfn=(164)
calls=146 0x387e4bb2f0 0 
* * 16008 4022 2042 0 0 0 0 0 0 3760 32 146
* * 146 146 0 0 0 0 0 0 0 0 0 146
+5 * 146 146
+1 * 146 146

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146
+3 * 146 0 146
cfn=(102)
calls=146 0x4048de +12 
* * 876 292 292 1 0 0 1
+5 * 146 146
+4 * 146 0 0 1 0 0 1
+3 * 146
+2 * 146 0 0 0 0 0 0 0 0 146
jcnd=146/146 +7 +3 
* * 
+7 +3 146 146
+4 * 146
+4 * 146
+3 * 146 0 146
cob=(5)
cfi=(8)
cfn=(32)
calls=146 0x387e4bd0b0 0 
* * 33752 5831 5100 21 15 21 21 15 21 5436 172 146
* * 146 146 0 0 0 0 0 0 0 0 0 146
+5 +1 146 146
+1 * 146 146

fn=(18)
0x404a28 81 140 0 140 1 0 0 1
+1 * 140
+3 * 140 0 140 0 0 1 0 0 1
+4 * 140 0 140
+4 * 140 140
+1 * 140 140

fn=(92)
0x4049d4 81 140 0 140 1 0 0 1
+1 * 140
+3 * 140 0 140
+4 * 140 0 140
+4 * 140 140
+1 * 140 140

fn=(196)
0x404520 86 140 0 140
+1 * 140
+3 * 140 0 140
+4 * 140 140
+1 * 140 140

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146 1 0 0 1
+4 +2 146 146
+4 * 146
+3 * 146 0 146
cfn=(28)
calls=146 0x404992 +12 
* * 876 292 292 1 0 0 1
+5 * 146 146
+4 * 146
+3 * 146
+2 * 146 0 0 0 0 0 0 0 0 146
jcnd=146/146 +7 +3 
* * 
+7 +3 146 146
+4 * 146
+4 * 146
+3 * 146 0 146
cob=(5)
cfi=(8)
cfn=(32)
calls=146 0x387e4bd0b0 0 
* * 33898 5743 5516 17 15 13 17 15 13 5434 176 146
* * 146 146 0 1 1 0 1 1 0 0 0 146
+5 +1 146 146
+1 * 146 146

fn=(102)
0x4048de 113 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158
+4 +1 158
+10 * 158 158
+1 * 158 158

fn=(266)
0x40406a 129 70 0 70
+1 * 70
+3 * 70
+4 * 70 0 70
+4 * 70 0 70
+4 * 70 0 70
+4 +1 70 70
+4 * 70
+3 * 70
+5 * 70 0 70
cfi=(16)
cfn=(226)
calls=70 0x402d61 -20 
* * 490 210 210
+5 * 70
+3 * 70 0 0 0 0 0 0 0 0 70
+2 * 70 70
+4 * 70 70 0 0 4 0 0 4
+2 * 70 0 70 0 0 4 0 0 4
+2 * 70 70
+1 * 70 70

fn=(28)
0x404992 113 158 0 158 1 0 0 1
+1 * 158
+3 * 158 0 158
+4 +1 158
+10 * 158 158
+1 * 158 158

fn=(176)
0x4044cc 86 140 0 140
+1 * 140
+3 * 140 0 140
+4 * 140 140
+1 * 140 140

fn=(224)
0x403df2 129 70 0 70
+1 * 70
+3 * 70
+4 * 70 0 70
+4 * 70 0 70
+4 * 70 0 70
+4 +1 70 70
+4 * 70
+3 * 70
+5 * 70 0 70
cfi=(16)
cfn=(226)
calls=70 0x402d61 -20 
* * 490 210 210
+5 * 70
+3 * 70 0 0 0 0 0 0 0 0 70 1
+2 * 70 70
+4 * 70 70 0 0 6 0 0 6
+2 * 70 0 70 0 0 1 0 0 1
+2 * 70 70
+1 * 70 70

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +2 140 140
+4 * 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=140 0x404484 107 
* * 46368 14300 13464 25 3 4 25 3 4 1536 85 276 33
+5 * 140 140
+1 * 140 140

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +2 140 140 0 1 0 0 1
+4 * 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=140 0x404a36 450 
* * 42448 12900 12064 24 3 4 24 3 4 1536 85 276 33
+5 * 140 140
+1 * 140 140

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +2 140 140
+4 * 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=140 0x40439c 107 
* * 46368 14300 13464 7 1 7 7 1 7 1536 75 276
+5 * 140 140
+1 * 140 140

fn=(116)
0x40439c 107 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +10 140 140
+4 * 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=140 0x4047d7 -26 
* * 44408 13600 12764 7 1 7 7 1 7 1536 75 276
+5 +1 140 140
+1 * 140 140

fn=(118)
0x4047d7 91 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +2 140 140
+4 * 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=140 0x4049e2 450 
* * 42448 12900 12064 7 1 7 7 1 7 1536 75 276
+5 * 140 140
+1 * 140 140

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +10 140 140
+4 * 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(52)
calls=140 0x404829 -26 
* * 44408 13600 12764 25 3 4 25 3 4 1536 85 276 33
+5 +1 140 140
+1 * 140 140

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(234)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 3 11
+5 * 12 12
+1 * 12 12

fl=(2)
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 140 0 140
+1 * 140
+3 * 140 0 140
+1 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=140 0x4043ca -45 
* * 5040 1820 1960 4 0 4 4 0 4
+5 +1 140 140 0 1 0 0 1
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=140 0x404412 +43 
* * 41905 9013 7935 22 14 8 22 14 8 5508 158 280
+5 * 140
jump=140 +28 * 
* * 
+28 * 140
+4 * 140 140
+1 * 140 140
+1 * 140 140

fn=(14)
0x4043ca 90 140 0 140 1 0 0 1
+1 * 140
+3 * 140
+4 * 140 0 140 0 0 1 0 0 1
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfi=(4)
cfn=(16)
calls=140 0x404804 +24 
* * 2520 840 980 2 0 1 2 0 1
+5 * 140 140
+4 * 140 0 140 0 0 2 0 0 2
+7 * 140 140
+4 * 140 0 140 1 0 0 1
+8 * 140 140
+4 * 140 0 140
+8 +1 140 140
+1 * 140 140

fn=(80)
0x402ff4 310 140 0 140 1 0 0 1
+1 * 140
+3 * 140 0 140
+2 * 140 0 140
+2 * 140 0 140
+1 * 140 0 0 1 0 0 1
+4 * 140 0 140
+4 * 140 0 140
+4 +2 140 140
+4 * 140
+3 * 140 0 140
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=140 0x4039fc 117 
* * 840 420 280 2 0 0 2
+5 * 140
+3 * 140 0 140
cfi=(3)
cfn=(84)
calls=140 0x4039ed -88 
* * 840 420 280
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(2)
calls=140 0x402d74 645 
* * 1820 840 280
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140
+3 * 140
+3 * 140 0 140 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=140 0x403a0a 134 
* * 49753 11886 10455 23 6 15 23 6 15 5483 149 280
+5 +4 140 140
+4 * 140
+3 * 140 0 140
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=140 0x40325e 113 
* * 840 420 280 1 0 0 1
+5 * 140
+3 * 140 140
+4 * 140 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=140 0x403a98 565 
* * 3500 1400 1120 2 0 0 2
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=140 0x403a68 547 
* * 3500 1400 1120
+5 * 140
+3 * 140
+3 * 140
+3 * 140
+3 * 140 0 140
cfi=(11)
cfn=(114)
calls=140 0x403ac9 -60 
* * 48468 15000 14304 7 1 7 7 1 7 1536 75 276
+5 -3 140 140
+4 * 140 0 140
+4 * 140
jump=140 +28 +4 
* * 
+28 +4 140
+4 * 140 140
+1 * 140 140
+2 * 140 140
+2 * 140 140
+1 * 140 140

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+5 * 146 0 0 0 0 0 0 0 0 146 6
+2 +1 146 146
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(5)
cfn=(190)
calls=146 0x40452a -65 
* * 17760 4606 2772 0 0 0 0 0 0 3760 32 292
+5 +1 146 146
+1 * 146 146

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146 1 0 0 1
+4 * 146 0 146
+4 0 146 146
+5 0 146 0 0 0 0 0 0 0 0 146
+2 0 146 146
+4 0 146 146
+4 0 146
+5 0 146
+3 0 146
+3 0 146 0 146
fi=(6) ???
cfi=(5)
cfn=(26)
calls=146 0x404730 99 
* 0 37694 6911 6684 21 16 13 21 16 13 5580 176 292
+5 0 146
fi=(6)
jump=146 +7 0 
* 0 
+7 0 146 146
+1 0 146 146

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 140 0 140 1 0 0 1
+1 * 140
+3 * 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+4 * 140 0 140
+4 * 140
+4 * 140 0 0 1 0 0 1
+4 * 140
+3 * 140
+3 * 140 0 140
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=140 0x404468 726 
* * 1400 700 560 1 0 0 1
+5 * 140 140
+4 * 140 140
+1 * 140 140

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+3 * 140 0 140
+4 * 140
+4 * 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfi=(10)
cfn=(44)
calls=140 0x404468 726 
* * 1400 700 560
+5 * 140 140
+4 * 140 140
+1 * 140 140

fn=(86)
0x403a0a 134 140 0 140
+1 * 140
+3 * 140 0 140
+1 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=140 0x4042e2 -45 
* * 5040 1820 1960 5 0 0 5
+5 +1 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=140 0x40432a +43 
* * 41633 9086 7515 17 6 15 17 6 15 5483 149 280
+5 * 140
jump=140 +28 * 
* * 
+28 * 140
+4 * 140 140
+1 * 140 140
+1 * 140 140

fn=(88)
0x4042e2 90 140 0 140 1 0 0 1
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140 1 0 0 1
cfi=(4)
cfn=(90)
calls=140 0x4047b2 +24 
* * 2520 840 980 3 0 0 3
+5 * 140 140
+4 * 140 0 140
+7 * 140 140
+4 * 140 0 140
+8 * 140 140
+4 * 140 0 140
+8 +1 140 140
+1 * 140 140

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 140 0 140 1 0 0 1
+1 * 140
+3 * 140 0 140
+1 * 140
+4 * 140 0 140
+4 +2 140 140
+4 * 140 140 0 1 0 0 1
+4 * 140
+3 * 140 140
+4 * 140 140
+3 * 140
+3 * 140
+3 * 140
+4 * 140
+3 * 140 140
+4 * 140 140
+3 -1 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=140 0x403ce6 +11 
* * 19500 5316 3486 24 5 0 24 5 0 3788 83 280
+5 +1 140 140
+4 * 140
+3 * 140 0 140
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=140 0x4031b8 -82 
* * 3220 1120 1120 1 0 0 1
+5 * 140
jump=140 +28 * 
* * 
+28 * 140
+4 * 140 140
+1 * 140 140
+1 * 140 140

fn=(172)
0x4031b8 79 140 0 140 1 0 0 1
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 140
+4 * 140
+3 * 140 0 140
cfi=(4)
cfn=(174)
calls=140 0x403ccc +42 
* * 1960 700 700
+5 * 140 140
+1 * 140 140

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10)
0x402f54 645 304 0 304 1 0 0 1
+1 * 304
+3 * 304 0 304
+4 +1 304 304
+4 * 304 304 0 0 2 0 0 2
+4 * 304
+3 * 304 304
+4 * 304 304
+3 * 304
+3 * 304
+3 * 304
+4 * 304 304
+1 * 304 304

fn=(106)
0x40325e 113 298 0 298 1 0 0 1
+1 * 298
+3 * 298 0 298
+4 +1 298 298
+4 * 298 298
+1 * 298 298

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 152 0 152 1 0 0 1
+1 * 152
+3 * 152 0 152 0 0 1 0 0 1
+4 +1 152 152
+4 * 152 152
+1 * 152 152

fn=(82)
0x4039fc 117 152 0 152 1 0 0 1
+1 * 152
+3 * 152 0 152 1 0 0 1
+4 +1 152 152
+4 * 152 152
+1 * 152 152

fn=(200)
0x402eda 901 70 0 70
+1 * 70
+3 * 70
+4 * 70 0 70
+4 * 70 0 70
+4 +2 70 70
+4 * 70 70
+4 * 70 70
+4 * 70 70
+4 * 70
+3 * 70 0 0 0 0 0 0 0 0 70 7
jcnd=6/70 +51 +10 
* * 
+2 +3 64 64
+4 * 64 64
+4 * 64 64
+4 -1 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(3)
cfn=(222)
calls=64 0x403373 215 
* * 2432 832 896 0 5 0 0 5 0 64 1
+5 +2 64 64
+4 * 64 64
+4 * 64
+4 * 64 64
+4 * 64 0 64
+4 * 64
jump=64 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8441 2605 2258 33 10 10 33 10 10 477 28 35
+5 +2 70 70
+1 * 70 70

fn=(4)
0x4030b2 310 140 0 140 1 0 0 1
+1 * 140
+3 * 140 0 140
+2 * 140 0 140
+2 * 140 0 140
+1 * 140
+4 * 140 0 140 1 0 0 1
+4 * 140 0 140
+4 +2 140 140
+4 * 140
+3 * 140 0 140
cfn=(6)
calls=140 0x403b08 117 
* * 840 420 280 1 0 1 1 0 1
+5 * 140
+3 * 140 0 140
cfi=(3)
cfn=(8)
calls=140 0x403afa -88 
* * 840 420 280 1 0 0 1
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(10)
calls=140 0x402f54 645 
* * 1820 840 280 1 1 0 1 1
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140
+3 * 140
+3 * 140 0 140
cfn=(12)
calls=140 0x403b16 134 
* * 50025 11813 10875 27 14 12 27 14 12 5508 158 280
+5 +4 140 140 0 1 0 0 1
+4 * 140
+3 * 140 0 140
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=140 0x40333c 113 
* * 840 420 280 2 0 0 2
+5 * 140
+3 * 140 140
+4 * 140 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(42)
calls=140 0x403ba4 565 
* * 3500 1400 1120 3 0 0 3
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(46)
calls=140 0x403b74 547 
* * 3500 1400 1120
+5 * 140
+3 * 140
+3 * 140
+3 * 140
+3 * 140 0 140 1 0 0 1
cfi=(11)
cfn=(48)
calls=140 0x403bd5 -60 
* * 48468 15000 14304 26 3 4 26 3 4 1536 85 276 33
+5 -3 140 140
+4 * 140 0 140
+4 * 140
jump=140 +28 +4 
* * 
+28 +4 140
+4 * 140 140
+1 * 140 140
+2 * 140 140
+2 * 140 140
+1 * 140 140

fn=(108)
0x403a98 565 140 0 140 1 0 0 1
+1 * 140
+3 * 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+4 * 140 0 140
+4 * 140
+4 * 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=140 0x404380 726 
* * 1400 700 560 1 0 0 1
+5 * 140 140
+4 * 140 140
+1 * 140 140

fn=(178)
0x402e74 414 140 0 140
+1 * 140
+3 * 140 0 140
+1 * 140
+4 * 140 0 140 1 0 0 1
+4 +2 140 140
+4 * 140
+3 * 140 0 140
cfn=(40)
calls=140 0x40333c 113 
* * 840 420 280
+5 * 140
+3 * 140 140
+4 * 140 140
+4 * 140 140
+4 * 140 140
+3 -1 140
+3 * 140
+3 * 140 0 140
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=140 0x40334a 148 
* * 4340 1400 1680 2 0 0 2
+5 +1 140 140
+4 * 140
+3 * 140 0 140
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=140 0x4032ca 159 
* * 26454 7932 5186 3 0 0 3 0 0 3764 28 280
+5 * 140
jump=140 +28 * 
* * 
+28 * 140 0 0 1 0 0 1
+4 * 140 140
+1 * 140 140
+1 * 140 140

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 146 0 146 1 0 0 1
+1 * 146 0 0 1 0 0 1
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 0 146 146
+5 0 146 0 0 0 0 0 0 0 0 146
+2 0 146 146
+4 0 146 146
+4 0 146
+5 0 146
+3 0 146
+3 0 146 0 146
fi=(6)
cfi=(5)
cfn=(100)
calls=146 0x40461a 99 
* 0 37548 6999 6268 24 15 21 24 15 21 5582 172 292
+5 0 146
fi=(6)
jump=146 +7 0 
* 0 
+7 0 146 146
+1 0 146 146

fn=(144)
0x402d9a 770 7805 0 7805
+1 * 7805
+3 * 7805 0 7805
+4 * 7805 0 7805
+4 +1 7805 7805
+4 * 7805 7805
+3 * 7805 7805
+4 * 7805
+4 * 7805
+3 * 7805 7805
+1 * 7805 7805

fn=(146)
0x402dba 770 7805 0 7805
+1 * 7805
+3 * 7805 0 7805 1 0 0 1
+4 * 7805 0 7805
+4 +1 7805 7805
+4 * 7805 7805
+3 * 7805 7805
+4 * 7805
+4 * 7805
+3 * 7805 7805
+1 * 7805 7805

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 140
+4 * 140
+3 * 140 0 140
cfi=(4)
cfn=(194)
calls=140 0x403d7e +42 
* * 1960 700 700 1 0 0 1
+5 * 140 140
+1 * 140 140

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(186)
0x4032ca 159 140 0 140 1 0 0 1
+1 * 140
+3 * 140 0 140
+1 * 140
+4 * 140 0 140
+4 +2 140 140
+4 * 140 140
+4 * 140
+3 * 140 140
+4 * 140 140
+3 * 140
+3 * 140
+3 * 140
+4 * 140
+3 * 140 140
+4 * 140 140
+3 -1 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(188)
calls=140 0x403d98 +11 
* * 19314 5272 3366 1 0 0 1 0 0 3764 28 280
+5 +1 140 140
+4 * 140
+3 * 140 0 140
cfn=(192)
calls=140 0x403296 -82 
* * 3220 1120 1120 1 0 0 1
+5 * 140
jump=140 +28 * 
* * 
+28 * 140
+4 * 140 140
+1 * 140 140
+1 * 140 140

fn=(2)
0x402d74 645 584 0 584 1 0 0 1
+1 * 584
+3 * 584 0 584 0 0 1 0 0 1
+4 +1 584 584
+4 * 584 584 0 1 1 0 1 1
+4 * 584
+3 * 584 584
+4 * 584 584
+3 * 584
+3 * 584
+3 * 584
+4 * 584 584
+1 * 584 584

fn=(20)
0x404412 179 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 +2 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(22)
calls=140 0x404236 -14 
* * 38405 7333 6955 21 14 8 21 14 8 5508 158 280
+5 * 140 140
+4 * 140 0 140
+3 +1 140 140
+4 * 140 140 0 1 0 0 1
+3 * 140 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+3 * 140 140
+4 * 140
+4 * 140
+3 * 140 140
+4 * 140 0 140
+4 +1 140 140
+1 * 140 140

fn=(94)
0x40432a 179 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 +2 140 140
+4 * 140 140 0 1 0 0 1
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(96)
calls=140 0x403fbe -14 
* * 38133 7406 6535 16 6 15 16 6 15 5483 149 280
+5 * 140 140
+4 * 140 0 140
+3 +1 140 140
+4 * 140 140
+3 * 140 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+3 * 140 140
+4 * 140
+4 * 140
+3 * 140 140
+4 * 140 0 140
+4 +1 140 140
+1 * 140 140

fn=(244)
0x402f7a 901 70 0 70
+1 * 70
+3 * 70 0 0 1 0 0 1
+4 * 70 0 70
+4 * 70 0 70
+4 +2 70 70
+4 * 70 70
+4 * 70 70
+4 * 70 70
+4 * 70
+3 * 70 0 0 0 0 0 0 0 0 70
jcnd=6/70 +51 +10 
* * 
+2 +3 64 64
+4 * 64 64
+4 * 64 64
+4 -1 64 64
+4 * 64
+3 * 64
+3 * 64 0 64
cfi=(3)
cfn=(264)
calls=64 0x4036b1 215 
* * 2432 832 896 0 4 1 0 4 1 64
+5 +2 64 64
+4 * 64 64
+4 * 64
+4 * 64 64
+4 * 64 0 64
+4 * 64
jump=64 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246)
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8341 2602 2258 20 2 11 20 2 11 456 30 35
+5 +2 70 70
+1 * 70 70

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40)
0x40333c 113 298 0 298 1 0 0 1
+1 * 298
+3 * 298 0 298 1 0 0 1
+4 +1 298 298
+4 * 298 298
+1 * 298 298

fn=(112)
0x403a68 547 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 +1 140 140
+4 * 140 140
+3 * 140 0 140
+4 * 140
+4 * 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfi=(10)
cfn=(110)
calls=140 0x404380 726 
* * 1400 700 560
+5 * 140 140
+4 * 140 140
+1 * 140 140

fn=(148)
0x402df4 414 140 0 140
+1 * 140
+3 * 140 0 140
+1 * 140
+4 * 140 0 140 1 0 0 1
+4 +2 140 140
+4 * 140
+3 * 140 0 140
cfn=(106)
calls=140 0x40325e 113 
* * 840 420 280
+5 * 140
+3 * 140 140
+4 * 140 140
+4 * 140 140
+4 * 140 140
+3 -1 140
+3 * 140
+3 * 140 0 140
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=140 0x40326c 148 
* * 4340 1400 1680 4 0 0 4
+5 +1 140 140
+4 * 140
+3 * 140 0 140
cfn=(156)
calls=140 0x4031ec 159 
* * 26640 7976 5306 27 5 0 27 5 0 3788 83 280
+5 * 140
jump=140 +28 * 
* * 
+28 * 140 0 0 1 0 0 1
+4 * 140 140
+1 * 140 140
+1 * 140 140

fn=(158)
0x403ce6 171 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+5 * 146 0 0 0 0 0 0 0 0 146
+2 +1 146 146
+4 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(5)
cfn=(160)
calls=146 0x4044d6 -65 
* * 17920 4638 2888 24 5 0 24 5 0 3778 85 292
+5 +1 146 146
+1 * 146 146

fl=(12)
fn=(54)
0x404a36 450 140 0 140
+1 * 140
+3 * 140 0 140
+1 * 140
+4 * 140 0 140 1 0 0 1
+4 * 140 0 140
+4 * 140 0 140
+4 +10 140 140
+4 * 140
+3 * 140 0 140
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=140 0x404c38 288 
* * 2100 840 700 3 0 0 3
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(56)
calls=140 0x404c38 288 
* * 2100 840 700
+5 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=140 0x404c52 -36 
* * 35168 10380 9544 20 3 4 20 3 4 1536 85 276 33
+5 +1 140
+4 * 140 140
+1 * 140 140
+1 * 140 140

fn=(60)
0x404c52 424 140 0 140
+1 * 140
+3 * 140 0 140
+2 * 140 0 140
+1 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +4 140 140
+4 * 140
+3 * 140 0 140
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=140 0x40492d 277 
* * 2100 840 700 2 0 0 2
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=140 0x404d9d 277 
* * 3500 1260 1120 2 0 1 2 0 1
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(66)
calls=140 0x404d9d 277 
* * 3500 1260 1120
+5 * 140
+3 * 140
+3 * 140
+3 * 140 0 140
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=140 0x404db7 -49 
* * 22148 6040 5204 15 3 3 15 3 3 1536 85 276 33
+5 +1 140
+4 * 140 140
+1 * 140 140
+2 * 140 140
+1 * 140 140

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 176 0 176 1 0 0 1
+1 * 176
+3 * 176
+4 * 176 0 176
+4 +1 176 176
+4 * 176
+3 * 176 0 176 1 0 0 1
cfi=(13)
cfn=(64)
calls=176 -33 -66 
* * 1056 528 352
+5 * 176 176
+1 * 176 176

fn=(66)
0x404d9d 277 280 0 280
+1 * 280
+3 * 280
+4 * 280 0 280
+4 +1 280 280
+4 * 280
+3 * 280 0 280
cfi=(13)
cfn=(68)
calls=280 0x404f1a -58 
* * 4480 1680 1400 2 0 1 2 0 1
+5 * 280 280
+1 * 280 280

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 140 0 140
+1 * 140
+3 * 140 0 140
+1 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +10 140 140
+4 * 140
+3 * 140 0 140
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=140 0x404bc6 288 
* * 2100 840 700 3 0 0 3
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(122)
calls=140 0x404bc6 288 
* * 2100 840 700
+5 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=140 0x404be0 -36 
* * 35168 10380 9544 4 1 7 4 1 7 1536 75 276
+5 +1 140
+4 * 140 140
+1 * 140 140
+1 * 140 140

fn=(128)
0x404878 277 176 0 176
+1 * 176
+3 * 176
+4 * 176 0 176 1 0 0 1
+4 +1 176 176
+4 * 176
+3 * 176 0 176
cfi=(13)
cfn=(130)
calls=176 -33 -66 
* * 1056 528 352 0 0 1 0 0 1
+5 * 176 176
+1 * 176 176

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 280 0 280
+1 * 280
+3 * 280
+4 * 280 0 280
+4 +1 280 280
+4 * 280
+3 * 280 0 280
cfi=(13)
cfn=(134)
calls=280 0x404e98 -58 
* * 4480 1680 1400 2 0 0 2
+5 * 280 280
+1 * 280 280

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +8 140 0 140
+4 +3 140 140
+4 * 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=140 0x404eb5 -22 
* * 20048 5340 4364 1 1 7 1 1 7 1536 75 276
+5 +1 140 140
+1 * 140 140

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 3 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 280 0 280 1 0 0 1
+1 * 280
+3 * 280
+4 * 280 0 280
+4 +1 280 280
+4 * 280
+3 * 280 0 280
cfi=(13)
cfn=(124)
calls=280 0x404d36 -77 
* * 1680 840 560 2 0 0 2
+5 * 280 280
+1 * 280 280

fn=(56)
0x404c38 288 280 0 280 1 0 0 1
+1 * 280
+3 * 280
+4 * 280 0 280 1 0 0 1
+4 +1 280 280
+4 * 280
+3 * 280 0 280
cfi=(13)
cfn=(58)
calls=280 0x404d8f -77 
* * 1680 840 560 1 0 0 1
+5 * 280 280
+1 * 280 280

fn=(74)
0x404f37 368 152 0 152
+1 * 152
+3 * 152
+4 * 152 0 152 1 0 0 1
+4 * 152 0 152
+4 * 152 0 152
+4 +2 152 152
+4 * 152 152
+4 * 152
+3 * 152
+3 * 152
+4 * 152 0 152
+4 +1 152 152
+5 * 152 0 0 0 0 0 0 0 0 152
jcnd=6/152 +33 +2 
* * 
+2 +1 146 146
+4 * 146
+8 * 146 146
+4 * 146 146
+4 * 146
+3 * 146 0 0 1 0 0 1
+3 * 146 0 146 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=146 0x3877c83840 0 
* * 16638 3910 3623 11 2 5 11 2 5 1444 87 141 33
* * 146 146 0 1 1 0 1 1 0 0 0 146
+5 +1 152 152
+4 * 152
+8 * 152 152
+4 * 152
+3 +1 152 152
+1 * 152 152

fn=(140)
0x404eb5 368 152 0 152
+1 * 152
+3 * 152
+4 * 152 0 152 1 0 0 1
+4 * 152 0 152
+4 * 152 0 152 0 0 1 0 0 1
+4 +2 152 152
+4 * 152 152
+4 * 152
+3 * 152
+3 * 152
+4 * 152 0 152
+4 +1 152 152
+5 * 152 0 0 0 0 0 0 0 0 152
jcnd=6/152 +33 +2 
* * 
+2 +1 146 146
+4 * 146
+8 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cob=(2)
cfi=(9)
cfn=(78)
calls=146 0x3877c83840 0 
* * 16638 3910 3623 0 1 8 0 1 8 1444 78 141
* * 146 146 0 0 0 0 0 0 0 0 0 146
+5 +1 152 152
+4 * 152
+8 * 152 152
+4 * 152
+3 +1 152 152
+1 * 152 152

fn=(72)
0x404db7 379 140 0 140
+1 * 140
+3 * 140
+4 * 140 0 140 1 0 0 1
+4 * 140 0 140
+4 * 140 0 140
+4 +8 140 0 140
+4 +3 140 140
+4 * 140 140
+4 * 140 140
+4 * 140
+3 * 140
+3 * 140 0 140
cfn=(74)
calls=140 0x404f37 -22 
* * 20048 5340 4364 14 3 3 14 3 3 1536 85 276 33
+5 +1 140 140
+1 * 140 140

fn=(126)
0x404be0 424 140 0 140
+1 * 140
+3 * 140 0 140
+2 * 140 0 140
+1 * 140
+4 * 140 0 140
+4 * 140 0 140
+4 * 140 0 140
+4 +4 140 140
+4 * 140
+3 * 140 0 140
cfn=(128)
calls=140 0x404878 277 
* * 2100 840 700 1 0 0 1
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(132)
calls=140 0x404d44 277 
* * 3500 1260 1120 2 0 0 2
+5 * 140
+3 * 140 140
+4 * 140
+3 * 140 0 140
cfn=(132)
calls=140 0x404d44 277 
* * 3500 1260 1120
+5 * 140
+3 * 140
+3 * 140
+3 * 140 0 140
cfn=(138)
calls=140 0x404d5e -49 
* * 22148 6040 5204 1 1 7 1 1 7 1536 75 276
+5 +1 140
+4 * 140 140
+1 * 140 140
+2 * 140 140
+1 * 140 140

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 3 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fl=(10)
fn=(136)
0x404ffe 790 280 0 280 1 0 0 1
+1 * 280
+3 * 280 0 280
+4 +1 280 280
+4 * 280 280
+1 * 280 280

fn=(44)
0x404468 726 280 0 280
+1 * 280
+3 * 280 0 280
+4 * 280 0 280
+4 * 280 280
+4 * 280 280
+3 * 280 280
+4 * 280 0 280 1 0 0 1
+3 * 280 280
+1 * 280 280

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 280 0 280 1 0 0 1
+1 * 280
+3 * 280 0 280
+4 +1 280 280
+4 * 280 280
+1 * 280 280

fn=(110)
0x404380 726 280 0 280 1 0 0 1
+1 * 280
+3 * 280 0 280
+4 * 280 0 280
+4 * 280 280
+4 * 280 280
+3 * 280 280
+4 * 280 0 280
+3 * 280 280
+1 * 280 280

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+4 * 146 0 146 1 0 0 1
+4 * 146 146
+1 * 146 146

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 +4 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=146 0x40454c -14 
* * 876 292 438 1 0 0 1
+5 +2 146 146
+1 * 146 146

fn=(150)
0x40326c 148 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +3 146 146 0 1 0 0 1
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=146 0x403d1a -29 
* * 2628 876 1022 3 0 0 3
+5 +1 146 146
+1 * 146 146

fn=(180)
0x40334a 148 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +3 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(182)
calls=146 0x403dcc -29 
* * 2628 876 1022 2 0 0 2
+5 +1 146 146
+1 * 146 146

fn=(152)
0x403d1a 122 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
+4 * 146 0 146
+4 +4 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(154)
calls=146 0x4044f8 -14 
* * 876 292 438 2 0 0 2
+5 +2 146 146
+1 * 146 146

fn=(184)
0x40454c 112 146 0 146 1 0 0 1
+1 * 146
+3 * 146 0 146
+4 * 146 0 146
+4 * 146 146
+1 * 146 146

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1625 308 313 2 2 5 2 2 5 218 18 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1751 323 317 10 9 6 10 9 6 245 23 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 3 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 292 0 292 1 0 0 1
+5 0 292 0 292
+5 0 292
+3 0 292 0 292
+5 0 292
+4 0 292 292 0 0 1 0 0 1
+7 0 292 292 0 0 1 0 0 1
+3 0 292
+3 0 292 0 0 0 0 0 0 0 0 292
+6 0 292 292 0 0 1 0 0 1
+7 0 292 292 0 1 1 0 1 1
+4 0 292
+3 0 292 0 0 0 0 0 0 0 0 292
+2 0 292 292 0 0 1 0 0 1
+3 0 292
+3 0 292 0 0 0 0 0 0 0 0 292
jcnd=292/292 +97 0 
* 0 
+18 0 292
+3 0 292
+3 0 292 0 292
cfn=(38) _int_malloc
calls=292 0x3877c79a00 0 
* 0 50714 7194 7988 30 23 33 30 23 33 7658 338
+5 0 292
+3 0 292
+3 0 292 0 0 0 0 0 0 0 0 292
+2 0 292
+3 0 292 0 0 0 0 0 0 0 0 292
+2 0 292
+3 0 292 0 0 0 0 0 0 0 0 292 2
+2 0 292 292
+7 0 292 0 0 0 0 0 0 0 0 292
jcnd=292/292 +13 0 
* 0 
+13 0 292 0 292
+2 0 292 0 0 0 0 0 0 0 0 292 8
+6 0 292
+3 0 292 292
+4 0 292 292
+5 0 292 292
+5 0 292
+4 0 292 292
+1 0 292 0 0 1 0 0 1
+5 0 292 292 0 0 1 0 0 1
+7 0 292 0 0 0 0 0 0 0 0 292
jcnd=292/292 +14 0 
* 0 
+14 0 292 0 292 1 0 0 1
+3 0 292 0 0 0 0 0 0 0 0 292
+6 0 292
jump=292 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 292 0 292 1 0 0 1
+2 0 292
+3 0 292
+3 0 292 0 292
+2 0 292
+3 0 292 0 292
+1 0 292
+3 0 292 0 292
+1 0 292
+3 0 292
+4 0 292
+3 0 292 0 0 0 0 0 0 0 0 292
+6 0 292
+4 0 292
+3 0 292 0 0 0 0 0 0 0 0 292 4
jcnd=10/292 0x3877c838d1 0 
* 0 
+2 0 282
+3 0 282
+3 0 282
+3 0 282
+3 0 282
+3 0 282 0 0 0 0 0 0 0 0 282
jcnd=282/282 +41 0 
* 0 
+41 0 282 0 0 1 0 0 1
+3 0 282 0 0 0 0 0 0 0 0 282
jcnd=282/282 0x3877c839c0 0 
* 0 
+24 0 282
+3 0 282
+4 0 282
+3 0 282
+3 0 282
+3 0 282
+3 0 282
+3 0 282 0 0 0 0 0 0 0 0 282 134
jcnd=146/282 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 146
+10 0 146 146 0 0 2 0 0 2
+3 0 146
+4 0 146 0 146
+3 0 146
+4 0 146
+4 0 146 0 0 0 0 0 0 0 0 146
jcnd=146/146 -18 0 
* 0 
-18 0 494 494
+3 0 494
+4 0 494 0 494
+3 0 494
+4 0 494
+4 0 494 0 0 0 0 0 0 0 0 494 8
jcnd=348/494 -18 0 
* 0 
+2 0 292
+4 0 292
+3 0 292 292
+1 0 292 292
+1 0 292 292
+2 0 292 292 0 1 0 0 1
+2 0 292 292
0x3877c839c0 0 282 0 0 1 0 0 1
+3 0 282
+3 0 282
+3 0 282
+4 0 282 0 282 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=282 0x3877c89b20 0 
* 0 16642 5720 5156 6 1 12 6 1 12 808 19 282 33
+5 0 282
jump=282 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 292 292 0 1 1 0 1 1
+7 0 292 292 0 0 1 0 0 1
+3 0 292
+3 0 292 0 0 1 0 0 1 0 0 292
+6 0 292
+3 0 292 0 0 0 0 0 0 0 0 292
+6 0 292 292
+4 0 292
+4 0 292
+2 0 292 0 0 0 0 0 0 0 0 292
+2 0 292
+2 0 292
+7 0 292 0 0 0 0 0 0 0 0 292
jcnd=292/292 +14 0 
* 0 
+14 0 292
+2 0 292
cfn=(170) _int_free
calls=292 0x3877c78650 0 
* 0 26628 6908 4200 19 1 0 19 1 0 6078 117

fn=(170)
0x3877c78650 0 292 0 292 1 0 0 1
+2 0 292 0 292
+2 0 292 0 292
+2 0 292
+3 0 292 0 292
+2 0 292 0 292
+1 0 292 0 292
+1 0 292
+3 0 292
+4 0 292 292
+4 0 292 0 292
+4 0 292
+3 0 292
+4 0 292
+3 0 292
+3 0 292
+3 0 292 0 0 1 0 0 1 0 0 292
+6 0 292
+4 0 292 0 0 0 0 0 0 0 0 292
+6 0 292
+4 0 292 0 0 0 0 0 0 0 0 292
+6 0 292 292
+7 0 292 0 0 0 0 0 0 0 0 292 2
jcnd=168/292 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 168
+2 0 168 0 0 0 0 0 0 0 0 168
+6 0 168 168 0 1 0 0 1
+4 0 168
+3 0 168
+2 0 168 0 0 0 0 0 0 0 0 168
jcnd=168/168 0x3877c78a40 0 
* 0 
+6 0 168 168
+4 0 168
+3 0 168 0 0 0 0 0 0 0 0 168
+6 0 168 168
+5 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=168/168 0x3877c7907c 0 
* 0 
+6 0 168 168
+5 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
+6 0 168
+4 0 168 0 0 1 0 0 1 0 0 168
+6 0 168
+4 0 168 168
+7 0 168 0 0 0 0 0 0 0 0 168
+6 0 168 168
+6 0 168
+2 0 168 0 0 0 0 0 0 0 0 168
+6 0 168 168
+4 0 168 0 0 0 0 0 0 0 0 168 2
jcnd=166/168 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 168 168 0 1 0 0 1
+4 0 168 0 0 0 0 0 0 0 0 168 4
jcnd=2/168 0x3877c78bf0 0 
* 0 
+6 0 166 166
+6 0 166 0 0 1 0 0 1 0 0 166 41
jcnd=24/166 0x3877c78a78 0 
* 0 
+6 0 142 142
+5 0 142 142
+5 0 142 142
+4 0 142 0 0 0 0 0 0 0 0 142
+6 0 142 142
+4 0 142 0 0 0 0 0 0 0 0 142
+6 0 142 142
+9 0 142 0 142
+4 0 142 0 142
+4 0 142 0 0 0 0 0 0 0 0 142 4
jcnd=134/142 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 142
+3 0 142
+4 0 142 142
+4 0 142 142
+4 0 142 0 0 0 0 0 0 0 0 142
-12 0 24
+4 0 24 24
+4 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 166
+7 0 166 0 166
+4 0 166 0 166
+4 0 166 0 0 0 0 0 0 0 0 166 60
jcnd=98/166 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 98 0 98
+4 0 98
+3 0 98 0 98
+4 0 98
+4 0 98 0 98
+4 0 98 0 98
+4 0 98
+7 0 98 0 0 0 0 0 0 0 0 98
jcnd=98/98 0x3877c78b20 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c78b20 0 
* 0 
0x3877c78a40 0 168 0 0 1 0 0 1
+5 0 168 168
+4 0 168 168
+7 0 168 0 0 0 0 0 0 0 0 168
jcnd=168/168 +16 0 
* 0 
+16 0 168 0 168
+5 0 168 0 0 0 0 0 0 0 0 168
+6 0 168
+3 0 168
jump=168 0x3877c7878f 0 
* 0 
+10 0 24 0 24
+6 0 24 0 0 1 0 0 1
jump=24 0x3877c78885 0 
* 0 
0x3877c78b20 0 168 168 0 1 0 0 1
+4 0 168
+2 0 168 0 0 0 0 0 0 0 0 168
+6 0 168 168
+7 0 168 0 0 0 0 0 0 0 0 168
jcnd=168/168 +15 0 
* 0 
+15 0 168 0 168 1 0 0 1
+4 0 168 0 0 0 0 0 0 0 0 168 2
+6 0 168
+4 0 168 168
+1 0 168 168
+1 0 168 168
+2 0 168 168
+2 0 168 168
+2 0 168 168
+2 0 168 168
0x3877c78bf0 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
+3 0 2
+4 0 2 0 2 1 0 0 1
+4 0 2
jump=2 0x3877c788cf 0 
* 0 
0x3877c7907c 0 168 168 0 1 1 0 1 1
+4 0 168 0 0 1 0 0 1
+7 0 168
+4 0 168
+3 0 168
+3 0 168 0 0 0 0 0 0 0 0 168
jcnd=168/168 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 282 0 0 1 0 0 1
+7 0 282
+3 0 282
+3 0 282 282 0 0 1 0 0 1
+4 0 282
+4 0 282 0 0 0 0 0 0 0 0 0 0 282 33
jump=32 0x3877c89be8 0 
* 0 
jump=38 0x3877c89bd0 0 
* 0 
jump=32 0x3877c89bb8 0 
* 0 
jump=32 +11 0 
* 0 
jump=32 0x3877c89c48 0 
* 0 
jump=34 0x3877c89c30 0 
* 0 
jump=40 0x3877c89c18 0 
* 0 
jump=42 0x3877c89c00 0 
* 0 
+11 0 32 32
+3 0 32
+4 0 32
+4 0 32 32
+4 0 32
+4 0 32 0 32
+4 0 32
+9 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-40 0 590 590
+4 0 590 0 590 0 0 3 0 0 3
+4 0 590 590
+4 0 590 0 590
+4 0 590 590
+4 0 590 0 590 0 0 1 0 0 1
+4 0 590 590
+4 0 590 0 590
+4 0 590
+4 0 590
+4 0 590 0 0 0 0 0 0 0 0 590 17
jcnd=246/590 0x3877c89c60 0 
* 0 
-32 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
jcnd=10/34 0x3877c89c60 0 
* 0 
-24 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-16 0 42 42 0 1 0 0 1
+4 0 42 0 42
+4 0 42 0 0 1 0 0 1
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42 2
jcnd=10/42 0x3877c89c60 0 
* 0 
+6 0 456
+4 0 456 456
+3 0 456 0 456 0 0 1 0 0 1
+3 0 456 456
+4 0 456 0 456 0 0 3 0 0 3
+4 0 456 456
+4 0 456 0 456 0 0 4 0 0 4
+4 0 456 456
+4 0 456 0 456
+4 0 456
jump=456 -80 0 
* 0 
-30 0 32 32
+3 0 32 0 32
+3 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
-24 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38 38
+4 0 38 0 38
+4 0 38
jump=38 -80 0 
* 0 
-16 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
jump=32 -80 0 
* 0 
+8 0 32 32
+3 0 32
+4 0 32 0 0 1 0 0 1
+4 0 32
+4 0 32
jump=32 -39 0 
* 0 
+9 0 38
+3 0 38 0 0 0 0 0 0 0 0 38
+6 0 38 38
+3 0 38
+4 0 38
jump=38 -72 0 
* 0 
+8 0 32
+4 0 32 32
+3 0 32 0 0 0 0 0 0 0 0 32
+2 0 32
+4 0 32
jump=32 -99 0 
* 0 
+11 0 42 42 0 1 0 0 1
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b78 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b70 0 
* 0 
+9 0 34 34
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b68 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b60 0 
* 0 
+9 0 282 0 282 1 0 0 1
+3 0 282 282

fn=(104) alloc_perturb
0x3877c77180 0 174 174 0 1 0 0 1
+6 0 174
+2 0 174 0 0 0 0 0 0 0 0 174 1
+2 0 174 174

fn=(38)
0x3877c79a00 0 292 0 292 1 0 0 1
+2 0 292
+3 0 292 0 292
+2 0 292 0 292
+2 0 292 0 292 0 0 1 0 0 1
+2 0 292
+3 0 292 0 292
+1 0 292 0 292
+1 0 292
+4 0 292
+4 0 292 0 0 0 0 0 0 0 0 292
+6 0 292
+4 0 292
+6 0 292
+3 0 292
+4 0 292
+4 0 292
+4 0 292
+3 0 292 0 0 0 0 0 0 0 0 292
+6 0 292 292 0 1 1 0 1 1
+7 0 292 0 0 0 0 0 0 0 0 292 5
jcnd=170/292 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 174
+4 0 174 174
+1 0 174 174
+1 0 174 174
+2 0 174 174
+2 0 174 174
+2 0 174 174
+2 0 174 174
+7 0 187
+7 0 187 0 0 1 0 0 1 0 0 187
+2 0 187
+3 0 187
+5 0 187
+3 0 187
+4 0 187 0 187
+4 0 187
+2 0 187
+5 0 187 187 0 0 5 0 0 5
+4 0 187
+3 0 187 0 0 0 0 0 0 0 0 187
jcnd=187/187 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 187 0 0 1 0 0 1
+3 0 187
+3 0 187
+3 0 187
+4 0 187
+3 0 187
+4 0 187 0 187
+5 0 187
+3 0 187 0 187
+4 0 187 0 187
+4 0 187 0 187
+5 0 187
+3 0 187
+3 0 187
+3 0 187
+3 0 187
+4 0 187
+4 0 187 0 0 1 0 0 1
+4 0 187 0 187
+4 0 187
+4 0 187 0 187
+5 0 187 0 187
+5 0 187
+3 0 187
+3 0 187 0 187
+5 0 187
+5 0 187
+3 0 187 0 187
+4 0 187 0 187
+4 0 187
+6 0 187 0 187
+4 0 187 0 187
+5 0 187 0 0 1 0 0 1
+3 0 187
+3 0 187
+3 0 187
jump=187 +87 0 
* 0 
+8 0 146
+3 0 146
+4 0 146
+2 0 146
+2 0 146
+3 0 146
+3 0 146
+3 0 146
+2 0 146
+2 0 146
+5 0 146
+2 0 146 146 0 0 1 0 0 1
+4 0 146
+3 0 146
+4 0 146 0 146
+4 0 146 0 146
+8 0 146
+7 0 146 0 146
+4 0 146 0 146
+4 0 146 0 146
+4 0 146 0 0 0 0 0 0 0 0 146
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 399 399 0 1 0 0 1
+4 0 399
+3 0 399 0 0 0 0 0 0 0 0 399 20
jcnd=154/399 0x3877c79ef0 0 
* 0 
+6 0 245 245
+4 0 245 245
+4 0 245
+4 0 245 0 0 0 0 0 0 0 0 245
+6 0 245 245 0 1 1 0 1 1
+7 0 245 0 0 0 0 0 0 0 0 245
+6 0 245
+4 0 245
+7 0 245 0 0 0 0 0 0 0 0 245
+2 0 245
+3 0 245 0 0 0 0 0 0 0 0 245 62
jcnd=169/245 0x3877c79e28 0 
* 0 
+6 0 225
+3 0 225 0 225
+4 0 225 0 225
+5 0 225 0 0 0 0 0 0 0 0 225 8
jcnd=13/225 0x3877c7a090 0 
* 0 
+6 0 212
+7 0 212 0 0 0 0 0 0 0 0 212 8
jcnd=146/212 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66 0 0 2 0 0 2
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 4
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 169 169 0 1 0 0 1
+4 0 169
+3 0 169 0 0 0 0 0 0 0 0 169 9
jcnd=85/169 0x3877c79ce1 0 
* 0 
+6 0 84 84
+5 0 84 0 0 0 0 0 0 0 0 84 5
jcnd=64/84 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 16 0 0 16
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=10/20 +18 0 
* 0 
+2 0 10 0 10 0 0 1 0 0 1
+8 0 10 0 10
+8 0 10
+7 0 10 0 10 1 0 0 1
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 154 0 0 1 0 0 1
+7 0 154
+3 0 154 0 0 0 0 0 0 0 0 154
+6 0 154 154 0 1 0 0 1
+4 0 154
+3 0 154
+3 0 154
+2 0 154
+4 0 154
+3 0 154
+3 0 154
+2 0 154
+2 0 154
+2 0 154
+2 0 154 154 0 0 1 0 0 1
+8 0 154
+5 0 154
+5 0 154
+2 0 154 0 0 0 0 0 0 0 0 154
-2 0 78
+2 0 78 0 0 0 0 0 0 0 0 78
+2 0 232
+2 0 232 0 0 0 0 0 0 0 0 232 17
jcnd=144/232 +64 0 
* 0 
+2 0 88
+8 0 88
+3 0 88
+3 0 88 0 0 0 0 0 0 0 0 88 1
jcnd=1/88 0x3877c79fc0 0 
* 0 
-6 0 69
+3 0 69
+3 0 69 0 0 0 0 0 0 0 0 69 1
jcnd=1/69 0x3877c79fc0 0 
* 0 
+2 0 155
+2 0 155 155
+8 0 155
+2 0 155 0 0 0 0 0 0 0 0 155 14
jcnd=69/155 -20 0 
* 0 
+2 0 86
+2 0 86
+5 0 86
+3 0 86
+3 0 86
+2 0 86
+2 0 86
+5 0 86 0 0 0 0 0 0 0 0 86
+2 0 86
+2 0 86
+4 0 86
+2 0 86
+2 0 86 0 0 0 0 0 0 0 0 86 5
jcnd=24/86 -8 0 
* 0 
-8 0 573
+4 0 573
+2 0 573
+2 0 573 0 0 0 0 0 0 0 0 573 64
jcnd=425/573 -8 0 
* 0 
-2 0 144 0 0 1 0 0 1
+2 0 144 0 0 0 0 0 0 0 0 144 6
jcnd=124/144 -8 0 
* 0 
+2 0 230 230 0 0 5 0 0 5
+4 0 230 0 0 1 0 0 1
+3 0 230 0 0 0 0 0 0 0 0 230 65
jcnd=152/230 0x3877c7a1cf 0 
* 0 
+6 0 78
+2 0 78
+4 0 78
+2 0 78
+2 0 78
+2 0 78 0 78
+8 0 78
jump=78 0x3877c79f30 0 
* 0 
+37 0 2 2 0 1 0 0 1
+5 0 2 2
+4 0 2
+4 0 2 2
+5 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 152 152 0 1 1 0 1 1
+4 0 152 152 0 0 1 0 0 1
+4 0 152
+3 0 152 152
+4 0 152
+4 0 152
+3 0 152
+3 0 152 152
+4 0 152 0 0 0 0 0 0 0 0 152
+6 0 152 152
+4 0 152 0 0 0 0 0 0 0 0 152
+6 0 152 152 0 1 0 0 1
+8 0 152 0 152
+4 0 152 0 152
+4 0 152 0 0 0 0 0 0 0 0 152 6
jcnd=84/152 +38 0 
* 0 
+2 0 68 68 0 0 1 0 0 1
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 84
+4 0 84 0 0 0 0 0 0 0 0 84 5
jcnd=9/84 0x3877c7a2e3 0 
* 0 
+6 0 143 143
+4 0 143 143 0 1 0 0 1
+4 0 143 0 0 0 0 0 0 0 0 143
+6 0 143
+4 0 143
+7 0 143 0 143 0 0 7 0 0 7
+4 0 143 0 143
+4 0 143 0 143
+4 0 143 0 143
+4 0 143 0 0 0 0 0 0 0 0 143
+2 0 143 0 143
+5 0 143
+7 0 143 0 0 0 0 0 0 0 0 143 3
jcnd=136/143 +18 0 
* 0 
+2 0 7 0 7 0 0 2 0 0 2
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 136
+7 0 136 0 136
+4 0 136
+3 0 136
+3 0 136
+4 0 136
+3 0 136
+4 0 136
+3 0 136
+3 0 136
+4 0 136 0 136
+4 0 136 0 136 0 0 1 0 0 1
+4 0 136
jump=136 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 9
+7 0 9 0 9
+6 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +7 0 
* 0 
+7 0 152
+4 0 152 0 0 1 0 0 1
+3 0 152
+3 0 152 0 152
cfn=(104)
calls=152 0x3877c77180 0 
* 0 608 304 0 1 0 0 1 0 0 152
+5 0 152
+3 0 152
jump=152 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 2 0 0 1 0 0 1
+7 0 2
+2 0 2
+4 0 2
+3 0 2
+3 0 2 0 2
+5 0 2
+3 0 2
+4 0 2
+3 0 2 0 0 1 0 0 1
+4 0 2
+4 0 2
+3 0 2
+4 0 2 0 2
+4 0 2 0 2 0 0 1 0 0 1
+4 0 2
+3 0 2
+3 0 2 0 2
cfn=(104)
calls=2 0x3877c77180 0 
* 0 8 4 0 0 0 0 0 0 0 2 1
+5 0 2
+3 0 2
jump=2 0x3877c79ae3 0 
* 0 

totals: 743982 275831 179488 226 55 63 226 55 63 30903 863 1742 33
