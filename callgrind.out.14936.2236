version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2236


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2654505243 - 2654582106
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 234 0 0 1 0 0 1
+3 0 234 0 0 0 0 0 0 0 0 234
+2 0 234
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=234 0x3877c7b8b0 0 
* 0 23945 5970 3122 19 3 0 19 3 0 5511 17
* 0 234 234 0 1 1 0 1 1 0 0 0 234

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 234 0 234 1 0 0 1
+1 0 234
+5 0 234
+3 0 234 0 234
+1 0 234
+4 0 234 0 0 1 0 0 1
+3 0 234
+4 0 234
+3 0 234 0 234 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=234 0x3877c7aa50 0 
* 0 51871 7824 7092 31 26 29 31 26 29 9152 320
* 0 234 234 0 1 1 0 1 1 0 0 0 234
+5 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
jcnd=234/234 +96 0 
* 0 
+96 0 234 0 0 1 0 0 1
+4 0 234 234
+1 0 234 234
+1 0 234 234

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 162 0 162
+1 * 162
+3 * 162 0 162 0 0 1 0 0 1
+4 +1 162 162
+4 * 162 162
+1 * 162 162

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 +1 224
+4 * 224
+3 * 224 0 224
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=224 0x404ffe 790 
* * 1344 672 448 1 0 0 1
+5 * 224 224
+3 * 224 224
+1 * 224 224

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+4 +1 224 224
+4 * 224 224
+1 * 224 224

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 +1 224
+4 * 224
+3 * 224 0 224 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=224 0x40500c 790 
* * 1344 672 448 1 0 0 1
+5 * 224 224
+3 * 224 224
+1 * 224 224

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 162 0 162
+1 * 162
+3 * 162 0 162
+4 +1 162 162
+4 * 162 162
+1 * 162 162

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+4 +1 224 224 0 1 0 0 1
+4 * 224 224
+1 * 224 224

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 112 0 112
+1 * 112
+3 * 112 0 112
+4 * 112 0 112
+4 * 112 112
+4 * 112 112
+1 * 112 112

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(28) __gnu_cxx::new_allocator<int>::max_size() const
0x404992 113 127 0 127 1 0 0 1
+1 * 127
+3 * 127 0 127
+4 +1 127
+10 * 127 127
+1 * 127 127

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 112 0 112
+1 * 112
+3 * 112 0 112
+4 * 112 112
+1 * 112 112

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 56 0 56
+1 * 56
+3 * 56
+4 * 56 0 56
+4 * 56 0 56
+4 * 56 0 56
+4 +1 56 56
+4 * 56
+3 * 56
+5 * 56 0 56
cfi=(16)
cfn=(226)
calls=56 0x402d61 -20 
* * 392 168 168
+5 * 56
+3 * 56 0 0 0 0 0 0 0 0 56
+2 * 56 56
+4 * 56 56 0 0 5 0 0 5
+2 * 56 0 56 0 0 1 0 0 1
+2 * 56 56
+1 * 56 56

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 117 0 117
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 * 117 0 117
+4 +1 117 117
+4 * 117
+3 * 117 0 117
cob=(5)
cfi=(8)
cfn=(164)
calls=117 0x387e4bb2f0 0 
* * 12416 3089 1558 21 4 0 21 4 0 2865 7 117
* * 117 117 0 1 1 0 1 1 0 0 0 117
+5 * 117 117
+1 * 117 117

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 117 0 117
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 * 117 0 117
+4 +1 117 117
+4 * 117
+3 * 117 0 117
cob=(5)
cfi=(8)
cfn=(164)
calls=117 0x387e4bb2f0 0 
* * 12465 3115 1564 0 0 0 0 0 0 2880 10 117
* * 117 117 0 0 0 0 0 0 0 0 0 117
+5 * 117 117
+1 * 117 117

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 117 0 117 1 0 0 1
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 * 117 0 117
+4 +2 117 117
+4 * 117
+3 * 117 0 117
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=117 0x4048de +12 
* * 702 234 234 1 0 0 1
+5 * 117 117
+4 * 117 0 0 1 0 0 1
+3 * 117
+2 * 117 0 0 0 0 0 0 0 0 117
jcnd=117/117 +7 +3 
* * 
+7 +3 117 117
+4 * 117
+4 * 117
+3 * 117 0 117
cob=(5)
cfi=(8)
cfn=(32)
calls=117 0x387e4bd0b0 0 
* * 29993 4290 3720 18 12 15 18 12 15 5288 165 117
* * 117 117 0 0 0 0 0 0 0 0 0 117
+5 +1 117 117
+1 * 117 117

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 112 0 112 1 0 0 1
+1 * 112
+3 * 112 0 112 0 0 1 0 0 1
+4 * 112 0 112
+4 * 112 112
+1 * 112 112

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 112 0 112 1 0 0 1
+1 * 112
+3 * 112 0 112
+4 * 112 0 112
+4 * 112 112
+1 * 112 112

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 112 0 112
+1 * 112
+3 * 112 0 112
+4 * 112 112
+1 * 112 112

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 117 0 117 1 0 0 1
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 * 117 0 117 1 0 0 1
+4 +2 117 117
+4 * 117
+3 * 117 0 117
cfn=(28)
calls=117 0x404992 +12 
* * 702 234 234 1 0 0 1
+5 * 117 117
+4 * 117
+3 * 117
+2 * 117 0 0 0 0 0 0 0 0 117
jcnd=117/117 +7 +3 
* * 
+7 +3 117 117
+4 * 117
+4 * 117
+3 * 117 0 117
cob=(5)
cfi=(8)
cfn=(32)
calls=117 0x387e4bd0b0 0 
* * 25622 4470 4074 17 15 15 17 15 15 4098 155 117
* * 117 117 0 1 1 0 1 1 0 0 0 117
+5 +1 117 117
+1 * 117 117

fn=(102)
0x4048de 113 127 0 127 1 0 0 1
+1 * 127
+3 * 127 0 127
+4 +1 127
+10 * 127 127
+1 * 127 127

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 56 0 56
+1 * 56
+3 * 56
+4 * 56 0 56
+4 * 56 0 56
+4 * 56 0 56
+4 +1 56 56
+4 * 56
+3 * 56
+5 * 56 0 56
cfi=(16)
cfn=(226)
calls=56 0x402d61 -20 
* * 392 168 168
+5 * 56
+3 * 56 0 0 0 0 0 0 0 0 56
+2 * 56 56
+4 * 56 56 0 0 3 0 0 3
+2 * 56 0 56 0 0 3 0 0 3
+2 * 56 56
+1 * 56 56

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=10 0x404caa 450 
* * 2012 641 607 2 0 3 2 0 3 48 2 9
+5 * 10 10
+1 * 10 10

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=112 0x404484 107 
* * 36082 11052 10384 25 3 4 25 3 4 1184 61 220 26
+5 * 112 112
+1 * 112 112

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=10 0x4048f2 107 
* * 2292 741 707 4 0 3 4 0 3 48 2 9
+5 * 10 10
+1 * 10 10

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +2 112 112 0 1 0 0 1
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=112 0x404a36 450 
* * 32946 9932 9264 24 3 4 24 3 4 1184 61 220 26
+5 * 112 112
+1 * 112 112

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=112 0x40439c 107 
* * 36082 11052 10384 7 1 5 7 1 5 1184 59 220
+5 * 112 112
+1 * 112 112

fn=(116)
0x40439c 107 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +10 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=112 0x4047d7 -26 
* * 34514 10492 9824 7 1 5 7 1 5 1184 59 220
+5 +1 112 112
+1 * 112 112

fn=(118)
0x4047d7 91 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=112 0x4049e2 450 
* * 32946 9932 9264 7 1 5 7 1 5 1184 59 220
+5 * 112 112
+1 * 112 112

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=10 0x404772 -25 
* * 2442 791 767 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(230)
calls=10 0x40465c -25 
* * 2442 791 767 5 0 3 5 0 3 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(232)
0x4048f2 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(234)
calls=10 0x404af4 -26 
* * 2152 691 657 4 0 3 4 0 3 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=10 0x404b99 -26 
* * 2152 691 657 2 0 0 2 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(274)
0x404b99 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=10 0x404cf0 450 
* * 2012 641 607 1 0 0 1 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fn=(50)
0x404484 107 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +10 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(52)
calls=112 0x404829 -26 
* * 34514 10492 9824 25 3 4 25 3 4 1184 61 220 26
+5 +1 112 112
+1 * 112 112

fn=(270)
0x404772 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(272)
calls=10 0x4049a6 107 
* * 2292 741 707 2 0 0 2 0 0 48 2 9
+5 * 10 10
+1 * 10 10

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 239 0 239 1 0 0 1
+1 * 239
+3 * 239 0 239 1 0 0 1
+4 +1 239 239
+4 * 239 239
+1 * 239 239

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+3 * 112 0 112
+4 * 112
+4 * 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=112 0x404380 726 
* * 1120 560 448
+5 * 112 112
+4 * 112 112
+1 * 112 112

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 112 0 112
+1 * 112
+3 * 112 0 112
+1 * 112
+4 * 112 0 112 1 0 0 1
+4 +2 112 112
+4 * 112
+3 * 112 0 112
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=112 0x40325e 113 
* * 672 336 224
+5 * 112
+3 * 112 112
+4 * 112 112
+4 * 112 112
+4 * 112 112
+3 -1 112
+3 * 112
+3 * 112 0 112
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=112 0x40326c 148 
* * 3472 1120 1344 4 0 0 4
+5 +1 112 112
+4 * 112
+3 * 112 0 112
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=112 0x4031ec 159 
* * 20794 6228 4078 25 5 0 25 5 0 2876 6 224
+5 * 112
jump=112 +28 * 
* * 
+28 * 112 0 0 1 0 0 1
+4 * 112 112
+1 * 112 112
+1 * 112 112

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 117 0 117 1 0 0 1
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 * 117 0 117
+4 +2 117 117
+5 * 117 0 0 0 0 0 0 0 0 117
+2 +1 117 117
+4 * 117 117
+4 * 117 117
+4 * 117
+3 * 117
+3 * 117 0 117
cfi=(5)
cfn=(160)
calls=117 0x4044d6 -65 
* * 13820 3557 2143 22 5 0 22 5 0 2865 7 234
+5 +1 117 117
+1 * 117 117

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 112 0 112
+1 * 112
+3 * 112 0 112
+1 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=112 0x4043ca -45 
* * 4032 1456 1568 4 0 4 4 0 4
+5 +1 112 112 0 1 0 0 1
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=112 0x404412 +43 
* * 32079 7089 6018 22 16 10 22 16 10 4168 142 224
+5 * 112
jump=112 +28 * 
* * 
+28 * 112
+4 * 112 112
+1 * 112 112
+1 * 112 112

fn=(14)
0x4043ca 90 112 0 112 1 0 0 1
+1 * 112
+3 * 112
+4 * 112 0 112 0 0 1 0 0 1
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=112 0x404804 +24 
* * 2016 672 784 2 0 1 2 0 1
+5 * 112 112
+4 * 112 0 112 0 0 2 0 0 2
+7 * 112 112
+4 * 112 0 112 1 0 0 1
+8 * 112 112
+4 * 112 0 112
+8 +1 112 112
+1 * 112 112

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 112 0 112 1 0 0 1
+1 * 112
+3 * 112 0 112
+2 * 112 0 112
+2 * 112 0 112
+1 * 112 0 0 1 0 0 1
+4 * 112 0 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112
+3 * 112 0 112
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=112 0x4039fc 117 
* * 672 336 224 2 0 0 2
+5 * 112
+3 * 112 0 112
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=112 0x4039ed -88 
* * 672 336 224
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=112 0x402d74 645 
* * 1456 672 224
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112
+3 * 112
+3 * 112 0 112 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=112 0x403a0a 134 
* * 42705 9125 8004 20 2 10 20 2 10 5304 152 224
+5 +4 112 112
+4 * 112
+3 * 112 0 112
cfn=(106)
calls=112 0x40325e 113 
* * 672 336 224 1 0 0 1
+5 * 112
+3 * 112 112
+4 * 112 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=112 0x403a98 565 
* * 2800 1120 896 2 0 0 2
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(112)
calls=112 0x403a68 547 
* * 2800 1120 896
+5 * 112
+3 * 112
+3 * 112
+3 * 112
+3 * 112 0 112
cfi=(11)
cfn=(114)
calls=112 0x403ac9 -60 
* * 37762 11612 11056 7 1 5 7 1 5 1184 59 220
+5 -3 112 112
+4 * 112 0 112
+4 * 112
jump=112 +28 +4 
* * 
+28 +4 112
+4 * 112 112
+1 * 112 112
+2 * 112 112
+2 * 112 112
+1 * 112 112

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 117 0 117 1 0 0 1
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 * 117 0 117
+4 +2 117 117
+5 * 117 0 0 0 0 0 0 0 0 117 5
+2 +1 117 117
+4 * 117 117
+4 * 117 117
+4 * 117
+3 * 117
+3 * 117 0 117
cfi=(5)
cfn=(190)
calls=117 0x40452a -65 
* * 13869 3583 2149 0 0 0 0 0 0 2880 10 234
+5 +1 117 117
+1 * 117 117

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 117 0 117 1 0 0 1
+1 * 117
+3 * 117
+4 * 117 0 117 1 0 0 1
+4 * 117 0 117
+4 0 117 117
+5 0 117 0 0 0 0 0 0 0 0 117
+2 0 117 117
+4 0 117 117
+4 0 117
+5 0 117
+3 0 117
+3 0 117 0 117
fi=(6) ???
cfi=(5)
cfn=(26)
calls=117 0x404730 99 
* 0 28664 5406 5010 21 16 15 21 16 15 4215 155 234
+5 0 117
fi=(6)
jump=117 +7 0 
* 0 
+7 0 117 117
+1 0 117 117

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 112 0 112 1 0 0 1
+1 * 112
+3 * 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+4 * 112 0 112
+4 * 112
+4 * 112 0 0 1 0 0 1
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=112 0x404468 726 
* * 1120 560 448 1 0 0 1
+5 * 112 112
+4 * 112 112
+1 * 112 112

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+3 * 112 0 112
+4 * 112
+4 * 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(10)
cfn=(44)
calls=112 0x404468 726 
* * 1120 560 448
+5 * 112 112
+4 * 112 112
+1 * 112 112

fn=(86)
0x403a0a 134 112 0 112
+1 * 112
+3 * 112 0 112
+1 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=112 0x4042e2 -45 
* * 4032 1456 1568 5 0 0 5
+5 +1 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=112 0x40432a +43 
* * 36209 6885 5652 14 2 10 14 2 10 5304 152 224
+5 * 112
jump=112 +28 * 
* * 
+28 * 112
+4 * 112 112
+1 * 112 112
+1 * 112 112

fn=(88)
0x4042e2 90 112 0 112 1 0 0 1
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=112 0x4047b2 +24 
* * 2016 672 784 3 0 0 3
+5 * 112 112
+4 * 112 0 112
+7 * 112 112
+4 * 112 0 112
+8 * 112 112
+4 * 112 0 112
+8 +1 112 112
+1 * 112 112

fn=(156)
0x4031ec 159 112 0 112 1 0 0 1
+1 * 112
+3 * 112 0 112
+1 * 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112 112 0 1 0 0 1
+4 * 112
+3 * 112 112
+4 * 112 112
+3 * 112
+3 * 112
+3 * 112
+4 * 112
+3 * 112 112
+4 * 112 112
+3 -1 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(158)
calls=112 0x403ce6 +11 
* * 15082 4100 2622 22 5 0 22 5 0 2876 6 224
+5 +1 112 112
+4 * 112
+3 * 112 0 112
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=112 0x4031b8 -82 
* * 2576 896 896 1 0 0 1
+5 * 112
jump=112 +28 * 
* * 
+28 * 112
+4 * 112 112
+1 * 112 112
+1 * 112 112

fn=(172)
0x4031b8 79 112 0 112 1 0 0 1
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 112
+4 * 112
+3 * 112 0 112
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=112 0x403ccc +42 
* * 1568 560 560
+5 * 112 112
+1 * 112 112

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=5 0x40404e 726 
* * 50 25 20 1 0 0 1
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=5 0x4045cc 650 
* * 160 55 55 1 0 0 1
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 5
+4 * 5
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(210)
calls=5 0x4045cc 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 244 0 244 1 0 0 1
+1 * 244
+3 * 244 0 244
+4 +1 244 244
+4 * 244 244 0 0 2 0 0 2
+4 * 244
+3 * 244 244
+4 * 244 244
+3 * 244
+3 * 244
+3 * 244
+4 * 244 244
+1 * 244 244

fn=(106)
0x40325e 113 239 0 239 1 0 0 1
+1 * 239
+3 * 239 0 239
+4 +1 239 239
+4 * 239 239
+1 * 239 239

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204)
calls=5 0x40404e 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5
+3 * 5 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(12)
cfn=(214)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(254)
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 122 0 122 1 0 0 1
+1 * 122
+3 * 122 0 122 0 0 1 0 0 1
+4 +1 122 122
+4 * 122 122
+1 * 122 122

fn=(82)
0x4039fc 117 122 0 122 1 0 0 1
+1 * 122
+3 * 122 0 122 1 0 0 1
+4 +1 122 122
+4 * 122 122
+1 * 122 122

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 56 0 56
+1 * 56
+3 * 56
+4 * 56 0 56
+4 * 56 0 56
+4 +2 56 56
+4 * 56 56
+4 * 56 56
+4 * 56 56
+4 * 56
+3 * 56 0 0 0 0 0 0 0 0 56 6
jcnd=5/56 +51 +10 
* * 
+2 +3 51 51
+4 * 51 51
+4 * 51 51
+4 -1 51 51
+4 * 51
+3 * 51
+3 * 51 0 51
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=51 0x403373 215 
* * 1938 663 714 0 4 0 0 4 0 51
+5 +2 51 51
+4 * 51 51
+4 * 51
+4 * 51 51
+4 * 51 0 51
+4 * 51
jump=51 +36 +8 
* * 
+2 +6 5 5 0 1 0 0 1
+4 * 5
+3 * 5 0 5
cfn=(202)
calls=5 0x403688 556 
* * 115 45 35 2 0 0 2
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=5 0x4033a0 318 
* * 7000 2145 1849 33 11 9 33 11 9 402 16 29
+5 +2 56 56
+1 * 56 56

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 112 0 112 1 0 0 1
+1 * 112
+3 * 112 0 112
+2 * 112 0 112
+2 * 112 0 112
+1 * 112
+4 * 112 0 112 1 0 0 1
+4 * 112 0 112
+4 +2 112 112
+4 * 112
+3 * 112 0 112
cfn=(6)
calls=112 0x403b08 117 
* * 672 336 224 1 0 1 1 0 1
+5 * 112
+3 * 112 0 112
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=112 0x403afa -88 
* * 672 336 224 1 0 0 1
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(10)
calls=112 0x402f54 645 
* * 1456 672 224 1 1 0 1 1
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112
+3 * 112
+3 * 112 0 112
cfn=(12)
calls=112 0x403b16 134 
* * 38575 9329 8370 27 16 14 27 16 14 4168 142 224
+5 +4 112 112 0 1 0 0 1
+4 * 112
+3 * 112 0 112
cfn=(40)
calls=112 0x40333c 113 
* * 672 336 224 2 0 0 2
+5 * 112
+3 * 112 112
+4 * 112 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(42)
calls=112 0x403ba4 565 
* * 2800 1120 896 3 0 0 3
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(46)
calls=112 0x403b74 547 
* * 2800 1120 896
+5 * 112
+3 * 112
+3 * 112
+3 * 112
+3 * 112 0 112 1 0 0 1
cfi=(11)
cfn=(48)
calls=112 0x403bd5 -60 
* * 37762 11612 11056 26 3 4 26 3 4 1184 61 220 26
+5 -3 112 112
+4 * 112 0 112
+4 * 112
jump=112 +28 +4 
* * 
+28 +4 112
+4 * 112 112
+1 * 112 112
+2 * 112 112
+2 * 112 112
+1 * 112 112

fn=(108)
0x403a98 565 112 0 112 1 0 0 1
+1 * 112
+3 * 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+4 * 112 0 112
+4 * 112
+4 * 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(10)
cfn=(110)
calls=112 0x404380 726 
* * 1120 560 448 1 0 0 1
+5 * 112 112
+4 * 112 112
+1 * 112 112

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 112 0 112
+1 * 112
+3 * 112 0 112
+1 * 112
+4 * 112 0 112 1 0 0 1
+4 +2 112 112
+4 * 112
+3 * 112 0 112
cfn=(40)
calls=112 0x40333c 113 
* * 672 336 224
+5 * 112
+3 * 112 112
+4 * 112 112
+4 * 112 112
+4 * 112 112
+3 -1 112
+3 * 112
+3 * 112 0 112
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=112 0x40334a 148 
* * 3472 1120 1344 2 0 0 2
+5 +1 112 112
+4 * 112
+3 * 112 0 112
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=112 0x4032ca 159 
* * 20830 6248 4082 3 0 0 3 0 0 2888 8 224
+5 * 112
jump=112 +28 * 
* * 
+28 * 112 0 0 1 0 0 1
+4 * 112 112
+1 * 112 112
+1 * 112 112

fn=(210)
0x4045cc 650 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(82)
calls=10 0x4039fc 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=10 0x4048c3 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 117 0 117 1 0 0 1
+1 * 117 0 0 1 0 0 1
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 0 117 117
+5 0 117 0 0 0 0 0 0 0 0 117
+2 0 117 117
+4 0 117 117
+4 0 117
+5 0 117
+3 0 117
+3 0 117 0 117
fi=(6)
cfi=(5)
cfn=(100)
calls=117 0x40461a 99 
* 0 33035 5226 4656 21 12 15 21 12 15 5405 165 234
+5 0 117
fi=(6)
jump=117 +7 0 
* 0 
+7 0 117 117
+1 0 117 117

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 5068 0 5068
+1 * 5068
+3 * 5068 0 5068
+4 * 5068 0 5068
+4 +1 5068 5068
+4 * 5068 5068
+3 * 5068 5068
+4 * 5068
+4 * 5068
+3 * 5068 5068
+1 * 5068 5068

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 5068 0 5068
+1 * 5068
+3 * 5068 0 5068 1 0 0 1
+4 * 5068 0 5068
+4 +1 5068 5068
+4 * 5068 5068
+3 * 5068 5068
+4 * 5068
+4 * 5068
+3 * 5068 5068
+1 * 5068 5068

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 112
+4 * 112
+3 * 112 0 112
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=112 0x403d7e +42 
* * 1568 560 560 1 0 0 1
+5 * 112 112
+1 * 112 112

fn=(254)
0x40470e 650 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(6)
calls=10 0x403b08 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=10 0x404978 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(186)
0x4032ca 159 112 0 112 1 0 0 1
+1 * 112
+3 * 112 0 112
+1 * 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112 112
+4 * 112
+3 * 112 112
+4 * 112 112
+3 * 112
+3 * 112
+3 * 112
+4 * 112
+3 * 112 112
+4 * 112 112
+3 -1 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(188)
calls=112 0x403d98 +11 
* * 15118 4120 2626 1 0 0 1 0 0 2888 8 224
+5 +1 112 112
+4 * 112
+3 * 112 0 112
cfn=(192)
calls=112 0x403296 -82 
* * 2576 896 896 1 0 0 1
+5 * 112
jump=112 +28 * 
* * 
+28 * 112
+4 * 112 112
+1 * 112 112
+1 * 112 112

fn=(2)
0x402d74 645 468 0 468 1 0 0 1
+1 * 468
+3 * 468 0 468 0 0 1 0 0 1
+4 +1 468 468
+4 * 468 468 0 1 1 0 1 1
+4 * 468
+3 * 468 468
+4 * 468 468
+3 * 468
+3 * 468
+3 * 468
+4 * 468 468
+1 * 468 468

fn=(20)
0x404412 179 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(22)
calls=112 0x404236 -14 
* * 29279 5745 5234 21 16 10 21 16 10 4168 142 224
+5 * 112 112
+4 * 112 0 112
+3 +1 112 112
+4 * 112 112 0 1 0 0 1
+3 * 112 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+3 * 112 112
+4 * 112
+4 * 112
+3 * 112 112
+4 * 112 0 112
+4 +1 112 112
+1 * 112 112

fn=(94)
0x40432a 179 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 +2 112 112
+4 * 112 112 0 1 0 0 1
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(96)
calls=112 0x403fbe -14 
* * 33409 5541 4868 13 2 10 13 2 10 5304 152 224
+5 * 112 112
+4 * 112 0 112
+3 +1 112 112
+4 * 112 112
+3 * 112 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+3 * 112 112
+4 * 112
+4 * 112
+3 * 112 112
+4 * 112 0 112
+4 +1 112 112
+1 * 112 112

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 56 0 56
+1 * 56
+3 * 56 0 0 1 0 0 1
+4 * 56 0 56
+4 * 56 0 56
+4 +2 56 56
+4 * 56 56
+4 * 56 56
+4 * 56 56
+4 * 56
+3 * 56 0 0 0 0 0 0 0 0 56
jcnd=5/56 +51 +10 
* * 
+2 +3 51 51
+4 * 51 51
+4 * 51 51
+4 -1 51 51
+4 * 51
+3 * 51
+3 * 51 0 51
cfi=(3)
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=51 0x4036b1 215 
* * 1938 663 714 0 3 1 0 3 1 51
+5 +2 51 51
+4 * 51 51
+4 * 51
+4 * 51 51
+4 * 51 0 51
+4 * 51
jump=51 +36 +8 
* * 
+2 +6 5 5
+4 * 5
+3 * 5 0 5
cfn=(246)
calls=5 0x4039c4 556 
* * 115 45 35
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=5 0x4036de 318 
* * 6772 2127 1839 20 0 7 20 0 7 351 22 29
+5 +2 56 56
+1 * 56 56

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 142 0 142 1 0 0 1
+1 * 142
+3 * 142
+4 * 142 0 142
+4 +1 142 142
+4 * 142
+3 * 142 0 142 1 0 0 1
cfi=(13)
cfn=(64)
calls=142 -33 -66 
* * 852 426 284
+5 * 142 142
+1 * 142 142

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224
+3 * 224 0 224
cfi=(13)
cfn=(68)
calls=224 0x404f1a -58 
* * 3584 1344 1120 2 0 1 2 0 1
+5 * 224 224
+1 * 224 224

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 10 0 10
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=10 0x404878 277 
* * 150 60 50 0 0 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=10 0x404f9c -49 
* * 762 211 177 0 0 2 0 0 2 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(214)
0x4045ee 216 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 +5 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +8 +2 
* * 
+8 +2 10 10
+4 +1 10 10
+1 * 10 10

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(130)
calls=20 0x40486a -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=10 0x404fcd -49 
* * 762 211 177 0 0 0 0 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(120)
0x4049e2 450 112 0 112
+1 * 112
+3 * 112 0 112
+1 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +10 112 112
+4 * 112
+3 * 112 0 112
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=112 0x404bc6 288 
* * 1680 672 560 3 0 0 3
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(122)
calls=112 0x404bc6 288 
* * 1680 672 560
+5 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=112 0x404be0 -36 
* * 27122 7916 7248 4 1 5 4 1 5 1184 59 220
+5 +1 112
+4 * 112 112
+1 * 112 112
+1 * 112 112

fn=(128)
0x404878 277 142 0 142
+1 * 142
+3 * 142
+4 * 142 0 142 1 0 0 1
+4 +1 142 142
+4 * 142
+3 * 142 0 142
cfi=(13)
cfn=(130)
calls=142 -33 -66 
* * 852 426 284 0 0 1 0 0 1
+5 * 142 142
+1 * 142 142

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 224 0 224
+1 * 224
+3 * 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224
+3 * 224 0 224
cfi=(13)
cfn=(134)
calls=224 0x404e98 -58 
* * 3584 1344 1120 2 0 0 2
+5 * 224 224
+1 * 224 224

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +8 112 0 112
+4 +3 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=112 0x404eb5 -22 
* * 15026 3884 3104 1 1 5 1 1 5 1184 59 220
+5 +1 112 112
+1 * 112 112

fn=(242)
0x404f9c 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(140)
calls=10 0x404eb5 -22 
* * 612 161 117 0 0 2 0 0 2 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(276)
0x404cf0 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10
+3 * 10 0 10
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(278)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(280)
calls=10 0x404e40 -36 
* * 1492 461 427 1 0 0 1 0 0 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(278)
0x40469c 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(64)
calls=20 0x40491f -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(122)
0x404bc6 288 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224
+4 +1 224 224
+4 * 224
+3 * 224 0 224
cfi=(13)
cfn=(124)
calls=224 0x404d36 -77 
* * 1344 672 448 2 0 0 2
+5 * 224 224
+1 * 224 224

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 224 0 224 1 0 0 1
+1 * 224
+3 * 224
+4 * 224 0 224 1 0 0 1
+4 +1 224 224
+4 * 224
+3 * 224 0 224
cfi=(13)
cfn=(58)
calls=224 0x404d8f -77 
* * 1344 672 448 1 0 0 1
+5 * 224 224
+1 * 224 224

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 122 0 122
+1 * 122
+3 * 122
+4 * 122 0 122 1 0 0 1
+4 * 122 0 122
+4 * 122 0 122
+4 +2 122 122
+4 * 122 122
+4 * 122
+3 * 122
+3 * 122
+4 * 122 0 122
+4 +1 122 122
+5 * 122 0 0 0 0 0 0 0 0 122
jcnd=5/122 +33 +2 
* * 
+2 +1 117 117
+4 * 117
+8 * 117 117
+4 * 117 117
+4 * 117
+3 * 117 0 0 1 0 0 1
+3 * 117 0 117 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=117 0x3877c83840 0 
* * 12262 2723 2494 11 2 2 11 2 2 1110 63 112 26
* * 117 117 0 1 1 0 1 1 0 0 0 117
+5 +1 122 122
+4 * 122
+8 * 122 122
+4 * 122
+3 +1 122 122
+1 * 122 122

fn=(140)
0x404eb5 368 122 0 122
+1 * 122
+3 * 122
+4 * 122 0 122 1 0 0 1
+4 * 122 0 122
+4 * 122 0 122 0 0 1 0 0 1
+4 +2 122 122
+4 * 122 122
+4 * 122
+3 * 122
+3 * 122
+4 * 122 0 122
+4 +1 122 122
+5 * 122 0 0 0 0 0 0 0 0 122
jcnd=5/122 +33 +2 
* * 
+2 +1 117 117
+4 * 117
+8 * 117 117
+4 * 117 117
+4 * 117
+3 * 117
+3 * 117 0 117
cob=(2)
cfi=(9)
cfn=(78)
calls=117 0x3877c83840 0 
* * 12262 2723 2494 0 1 6 0 1 6 1110 61 112
* * 117 117 0 0 0 0 0 0 0 0 0 117
+5 +1 122 122
+4 * 122
+8 * 122 122
+4 * 122
+3 +1 122 122
+1 * 122 122

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112 1 0 0 1
+4 * 112 0 112
+4 * 112 0 112
+4 +8 112 0 112
+4 +3 112 112
+4 * 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(74)
calls=112 0x404f37 -22 
* * 15026 3884 3104 14 3 3 14 3 3 1184 61 220 26
+5 +1 112 112
+1 * 112 112

fn=(126)
0x404be0 424 112 0 112
+1 * 112
+3 * 112 0 112
+2 * 112 0 112
+1 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +4 112 112
+4 * 112
+3 * 112 0 112
cfn=(128)
calls=112 0x404878 277 
* * 1680 672 560 1 0 0 1
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(132)
calls=112 0x404d44 277 
* * 2800 1008 896 2 0 0 2
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(132)
calls=112 0x404d44 277 
* * 2800 1008 896
+5 * 112
+3 * 112
+3 * 112
+3 * 112 0 112
cfn=(138)
calls=112 0x404d5e -49 
* * 16706 4444 3776 1 1 5 1 1 5 1184 59 220
+5 +1 112
+4 * 112 112
+1 * 112 112
+2 * 112 112
+1 * 112 112

fn=(236)
0x404caa 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(240)
calls=10 0x404de8 -36 
* * 1492 461 427 1 0 3 1 0 3 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(54)
0x404a36 450 112 0 112
+1 * 112
+3 * 112 0 112
+1 * 112
+4 * 112 0 112 1 0 0 1
+4 * 112 0 112
+4 * 112 0 112
+4 +10 112 112
+4 * 112
+3 * 112 0 112
cfn=(56)
calls=112 0x404c38 288 
* * 1680 672 560 3 0 0 3
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(56)
calls=112 0x404c38 288 
* * 1680 672 560
+5 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=112 0x404c52 -36 
* * 27122 7916 7248 20 3 4 20 3 4 1184 61 220 26
+5 +1 112
+4 * 112 112
+1 * 112 112
+1 * 112 112

fn=(60)
0x404c52 424 112 0 112
+1 * 112
+3 * 112 0 112
+2 * 112 0 112
+1 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 * 112 0 112
+4 +4 112 112
+4 * 112
+3 * 112 0 112
cfn=(62)
calls=112 0x40492d 277 
* * 1680 672 560 2 0 0 2
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112 1 0 0 1
cfn=(66)
calls=112 0x404d9d 277 
* * 2800 1008 896 2 0 1 2 0 1
+5 * 112
+3 * 112 112
+4 * 112
+3 * 112 0 112
cfn=(66)
calls=112 0x404d9d 277 
* * 2800 1008 896
+5 * 112
+3 * 112
+3 * 112
+3 * 112 0 112
cfn=(72)
calls=112 0x404db7 -49 
* * 16706 4444 3776 15 3 3 15 3 3 1184 61 220 26
+5 +1 112
+4 * 112 112
+1 * 112 112
+2 * 112 112
+1 * 112 112

fn=(282)
0x404fcd 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(74)
calls=10 0x404f37 -22 
* * 612 161 117 0 0 0 0 0 0 48 2 9
+5 +1 10 10
+1 * 10 10

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(204)
0x40404e 726 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=5 0x403e26 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(70)
0x40500c 790 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+4 +1 224 224
+4 * 224 224
+1 * 224 224

fn=(110)
0x404380 726 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+4 * 224 0 224
+4 * 224 224
+4 * 224 224
+3 * 224 224
+4 * 224 0 224
+3 * 224 224
+1 * 224 224

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(136)
0x404ffe 790 224 0 224 1 0 0 1
+1 * 224
+3 * 224 0 224
+4 +1 224 224
+4 * 224 224
+1 * 224 224

fn=(44)
0x404468 726 224 0 224
+1 * 224
+3 * 224 0 224
+4 * 224 0 224
+4 * 224 224
+4 * 224 224
+3 * 224 224
+4 * 224 0 224 1 0 0 1
+3 * 224 224
+1 * 224 224

fn=(248)
0x4042c6 726 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(220)
0x403e26 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 117 0 117 1 0 0 1
+1 * 117
+3 * 117 0 117
+4 * 117 0 117
+4 * 117 117
+1 * 117 117

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 117 0 117 1 0 0 1
+1 * 117
+3 * 117 0 117
+4 * 117 0 117 1 0 0 1
+4 * 117 117
+1 * 117 117

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 117 0 117 1 0 0 1
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 +4 117 117
+4 * 117 117
+4 * 117
+3 * 117
+3 * 117 0 117
cfn=(184)
calls=117 0x40454c -14 
* * 702 234 351 1 0 0 1
+5 +2 117 117
+1 * 117 117

fn=(150)
0x40326c 148 117 0 117
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 * 117 0 117
+4 +3 117 117 0 1 0 0 1
+4 * 117 117
+4 * 117
+3 * 117
+3 * 117 0 117
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=117 0x403d1a -29 
* * 2106 702 819 3 0 0 3
+5 +1 117 117
+1 * 117 117

fn=(180)
0x40334a 148 117 0 117
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 * 117 0 117
+4 +3 117 117
+4 * 117 117
+4 * 117
+3 * 117
+3 * 117 0 117
cfn=(182)
calls=117 0x403dcc -29 
* * 2106 702 819 2 0 0 2
+5 +1 117 117
+1 * 117 117

fn=(152)
0x403d1a 122 117 0 117 1 0 0 1
+1 * 117
+3 * 117
+4 * 117 0 117
+4 * 117 0 117
+4 +4 117 117
+4 * 117 117
+4 * 117
+3 * 117
+3 * 117 0 117
cfn=(154)
calls=117 0x4044f8 -14 
* * 702 234 351 2 0 0 2
+5 +2 117 117
+1 * 117 117

fl=(15)
fn=(250)
0x4036de 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x403799 +21 
* * 
0x403799 +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(252)
calls=5 0x404104 1336 
* * 905 335 235 4 0 0 4 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(258)
calls=5 0x4041ce 538 
* * 110 45 35
+5 * 5 0 5 1 0 0 1
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(260)
calls=5 0x4041f3 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(22)
calls=5 0x404236 167 
* * 1257 246 244 2 0 5 2 0 5 164 13 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5
+4 * 5 0 0 1 0 0 1
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(264)
calls=5 0x4036b1 215 
* * 190 65 70 0 0 2 0 0 2 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -88 
* * 1502 471 447 3 0 0 3 0 0 43 2 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 5
+3 -1 5 0 0 1 0 0 1
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(180)
calls=5 0x40334a 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(188)
calls=5 0x403d98 171 
* * 623 165 108 0 0 0 0 0 0 109 7 10
+5 +3 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x4039ba * 
* * 
0x4039ba * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fn=(206)
0x4033a0 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x40345e +21 
* * 
0x40345e +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(208)
calls=5 0x403e8c 1336 
* * 905 335 235 5 0 0 5 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(216)
calls=5 0x403f56 538 
* * 110 45 35
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(218)
calls=5 0x403f7b 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(96)
calls=5 0x403fbe 167 
* * 1498 270 256 10 10 5 10 10 5 218 13 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5 0 1 0 0 1
+4 * 5
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(222)
calls=5 0x403373 215 
* * 190 65 70 0 1 1 0 1 1 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -88 
* * 1502 471 447 6 0 3 6 0 3 43 2 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5
+4 * 5
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+3 -1 5
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(150)
calls=5 0x40326c 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(158)
calls=5 0x403ce6 171 
* * 610 159 106 1 0 0 1 0 0 106 1 10
+5 +3 5 5
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x40367f * 
* * 
0x40367f * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 56 0 56 1 0 0 1
+1 * 56
+3 * 56
+4 * 56 0 56
+4 * 56 0 56
+4 +1 56 56
+4 * 56
+3 * 56 0 56
cfi=(2)
cfn=(2)
calls=56 0x402d74 645 
* * 728 336 112
+5 * 56
+3 * 56 0 56
+3 +1 56 56
+6 * 56 0 56
+3 * 56 56
+6 * 56 0 56
+3 +1 56 56
+6 * 56 0 56 1 0 0 1
+3 * 56 56
+6 * 56 0 56
+3 +2 56 0 56
+7 * 56
jump=56 +86 * 
* * 
+2 +1 1652 1652
+3 * 1652
+3 * 1652 1652
+4 * 1652
+3 * 1652
+3 * 1652 0 1652
cfi=(2)
cfn=(144)
calls=1652 0x402d9a 770 
* * 18172 8260 4956
+5 * 1652 1652
+4 * 1652 1652
+5 * 1652
+4 * 1652 0 1652
+5 +1 1652 1652
+3 * 1652
+3 * 1652 1652
+4 * 1652
+3 * 1652
+3 * 1652 0 1652
cfi=(2)
cfn=(146)
calls=1652 0x402dba 770 
* * 18172 8260 4956 1 0 0 1
+5 * 1652 1652
+2 * 1652
+4 * 1652 1652
+5 * 1652
+4 * 1652 0 1652
+5 -2 1652 0 1652
+4 * 1652 1652
+3 * 1652
+3 * 1652 1652
+3 * 1652 0 0 0 0 0 0 0 0 1652 58
jcnd=1596/1652 -93 +1 
* * 
-9 * 56 56 0 1 0 0 1
+3 * 56
+3 * 56 56
+3 * 56 0 0 0 0 0 0 0 0 56
jcnd=56/56 -93 +1 
* * 
+2 +4 56 56
+3 * 56
+3 * 56
+4 * 56 56 0 1 0 0 1
+5 * 56
+4 * 56
+3 * 56 0 56
+5 +1 56 56
+3 * 56
+3 * 56
+4 * 56 56
+5 * 56
+4 * 56
+3 * 56 0 56
+5 +1 56 0 56
+7 * 56
jump=56 0x4016ee * 
* * 
+2 +1 1652 1652
+3 * 1652
+3 * 1652 1652
+4 * 1652
+3 * 1652 0 0 1 0 0 1
+3 * 1652 0 1652
cfi=(2)
cfn=(146)
calls=1652 0x402dba 770 
* * 18172 8260 4956
+5 * 1652 1652
+2 * 1652
+4 * 1652 1652
+5 * 1652 0 1652
+5 +1 1652 1652
+3 * 1652
+3 * 1652 1652
+4 * 1652
+3 * 1652
+3 * 1652 0 1652
cfi=(2)
cfn=(144)
calls=1652 0x402d9a 770 
* * 18172 8260 4956
+5 * 1652 1652
+4 * 1652 1652
+5 * 1652 0 1652
+5 +1 1652 1652
+5 * 1652 1652
+5 * 1652 1652
+5 * 1652
+4 * 1652 0 1652
+5 +1 1652 1652
+5 * 1652 1652
+5 * 1652 1652
+5 * 1652
+4 * 1652 0 1652
+5 -4 1652 0 1652
+4 * 1652 1652
+3 * 1652
+3 * 1652 1652
+3 * 1652 0 0 0 0 0 0 0 0 1652 58
jcnd=1596/1652 0x401672 +1 
* * 
-9 * 56 56 0 1 0 0 1
+3 * 56
+3 * 56 56
+3 * 56 0 0 0 0 0 0 0 0 56
jcnd=56/56 0x401672 +1 
* * 
+6 +6 56 56 0 1 0 0 1
+5 * 56 56
+5 * 56 0 56
+5 +2 56 56
+3 +1 56 0 56
+3 * 56 56
+5 * 56 56
+1 * 56 56

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 56
+7 * 56
+7 * 56
+3 * 56
+3 * 56 0 56
cfi=(2)
cfn=(4)
calls=56 0x4030b2 310 
* * 45771 13232 11963 63 20 18 63 20 18 2706 140 222 26
+5 * 56
+7 * 56
+7 * 56
+3 * 56
+3 * 56 0 56
cfi=(2)
cfn=(80)
calls=56 0x402ff4 310 
* * 47871 13136 11791 35 3 15 35 3 15 3277 143 222
+5 * 56 0 0 1 0 0 1
+7 * 56
+7 * 56
+3 * 56
+3 * 56 0 56
cfn=(142)
calls=56 0x401585 -52 
* * 175448 77392 40600 8 0 0 8 0 0 3416 116
+5 * 56 0 56
+8 * 56 56
+6 * 56 0 56
+6 * 56
+7 * 56
+3 * 56 0 56
cfi=(2)
cfn=(148)
calls=56 0x402df4 414 
* * 13813 4346 3159 31 5 0 31 5 0 1438 4 112
+5 * 56
+7 * 56
+3 * 56 0 56 1 0 0 1
cfi=(2)
cfn=(178)
calls=56 0x402e74 414 
* * 13831 4356 3161 7 0 0 7 0 0 1444 5 112
+5 +2 56
+7 * 56
+7 * 56
+3 * 56
+3 * 56 0 56
cfi=(2)
cfn=(4)
calls=56 0x4030b2 310 
* * 45238 13197 11831 2 0 1 2 0 1 2646 63 222
+5 * 56
+7 * 56
+7 * 56
+3 * 56
+3 * 56 0 56
cfi=(2)
cfn=(80)
calls=56 0x402ff4 310 
* * 47268 13089 11637 0 0 0 0 0 0 3211 68 222
+5 * 56 56
+6 * 56 0 0 1 0 0 1
+7 * 56
+7 * 56 0 56
+6 * 56 56
+8 * 56
+3 * 56
+3 * 56 0 56
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=56 0x401719 -33 
* * 82600 34272 19012 4 0 0 4 0 0 1708 58
+5 * 56 0 56
+8 * 56 56
+6 * 56 0 56
+6 * 56
+7 * 56 0 0 1 0 0 1
+3 * 56 0 56
cfi=(2)
cfn=(148)
calls=56 0x402df4 414 
* * 13813 4346 3159 0 0 0 0 0 0 1438 2 112
+5 * 56
+7 * 56
+3 * 56 0 56
cfi=(2)
cfn=(178)
calls=56 0x402e74 414 
* * 13831 4356 3161 0 0 0 0 0 0 1444 3 112
+5 +2 56 56
+7 * 56
+3 * 56 0 56
cfi=(2)
cfn=(2)
calls=56 0x402d74 645 
* * 728 336 112
+5 * 56 56
+6 * 56
+3 * 56
+3 * 56
+3 * 56 56
+7 * 56
+3 * 56 0 0 1 0 0 1
+3 * 56 0 56
cfi=(2)
cfn=(144)
calls=56 0x402d9a 770 
* * 616 280 168
+5 * 56
+3 * 56
+7 * 56
+3 * 56
+3 * 56 0 56
cfi=(2)
cfn=(200)
calls=56 0x402eda 901 
* * 10489 3561 2878 36 15 9 36 15 9 509 22 29
+5 +1 56 56
+7 * 56
+3 * 56 0 56
cfi=(2)
cfn=(10)
calls=56 0x402f54 645 
* * 728 336 112 0 1 0 0 1
+5 * 56 56
+6 * 56
+3 * 56
+3 * 56
+3 * 56 56
+7 * 56 0 0 1 0 0 1
+3 * 56
+3 * 56 0 56
cfi=(2)
cfn=(146)
calls=56 0x402dba 770 
* * 616 280 168
+5 * 56
+3 * 56
+7 * 56
+3 * 56
+3 * 56 0 56
cfi=(2)
cfn=(244)
calls=56 0x402f7a 901 
* * 10261 3543 2868 21 3 8 21 3 8 458 22 29
+5 +1 56 56
+7 * 56
+3 * 56 0 56
cfi=(2)
cfn=(10)
calls=56 0x402f54 645 
* * 728 336 112
+5 * 56 56
+6 * 56
+3 * 56
+3 * 56
+3 * 56 56 0 1 0 0 1
+7 * 56
+3 * 56
+3 * 56 0 56
cfi=(2)
cfn=(146)
calls=56 0x402dba 770 
* * 616 280 168
+5 * 56 56
+2 * 56
+4 * 56 56
+8 * 56 56
+8 * 56 0 56
+8 +1 56 56
+7 * 56
+3 * 56 0 56
cfi=(2)
cfn=(2)
calls=56 0x402d74 645 
* * 728 336 112
+5 * 56 56 0 1 0 0 1
+6 * 56
+3 * 56
+3 * 56
+3 * 56 56
+7 * 56
+3 * 56
+3 * 56 0 56
cfi=(2)
cfn=(144)
calls=56 0x402d9a 770 
* * 616 280 168
+5 * 56 56
+4 * 56 56
+8 * 56
+4 * 56 56
+8 * 56
+3 * 56 0 56
+8 +2 56 0 56
+7 -12 56 56
+8 * 56 56
+7 * 56 0 0 0 0 0 0 0 0 56 3
jcnd=1/56 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 56
+7 * 56
+3 * 56 0 56
cfi=(2)
cfn=(2)
calls=56 0x402d74 645 
* * 728 336 112 2 0 1 2 0 1
+5 * 56
+3 * 56 56
+7 * 56
+3 * 56 0 56
cfi=(2)
cfn=(2)
calls=56 0x402d74 645 
* * 728 336 112 0 1 0 0 1
+5 * 56
+3 * 56 0 0 0 0 0 0 0 0 56
+2 * 56 0 0 1 0 0 1
+5 * 56
jump=56 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 56
+2 * 56 0 0 0 0 0 0 0 0 56
jcnd=56/56 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 56 0 56
+1 * 56
+3 * 56
+4 * 56 0 56
+4 * 56 0 56
+4 * 56 0 56
+5 +1 56 56
+4 * 56
+3 * 56 0 56
cfi=(2)
cfn=(2)
calls=56 0x402d74 645 
* * 728 336 112
+5 * 56
+3 * 56 0 56
+3 +1 56 56 0 1 0 0 1
+6 * 56 0 56
+3 * 56 56
+6 * 56 0 56
+3 +2 56 0 56
+7 * 56
jump=56 +86 * 
* * 
+2 +1 1652 1652
+3 * 1652
+3 * 1652 1652
+4 * 1652
+3 * 1652
+3 * 1652 0 1652
cfi=(2)
cfn=(144)
calls=1652 0x402d9a 770 
* * 18172 8260 4956
+5 * 1652 1652
+4 * 1652 1652
+5 * 1652
+4 * 1652 0 1652
+5 +1 1652 1652
+3 * 1652
+3 * 1652 1652
+4 * 1652
+3 * 1652
+3 * 1652 0 1652
cfi=(2)
cfn=(146)
calls=1652 0x402dba 770 
* * 18172 8260 4956
+5 * 1652 1652
+2 * 1652
+4 * 1652 1652
+5 * 1652
+4 * 1652 0 1652
+5 -2 1652 0 1652
+4 * 1652 1652
+3 * 1652
+3 * 1652 1652
+3 * 1652 0 0 0 0 0 0 0 0 1652 58
jcnd=1596/1652 -93 +1 
* * 
-9 * 56 56 0 1 0 0 1
+3 * 56
+3 * 56 56
+3 * 56 0 0 0 0 0 0 0 0 56
jcnd=56/56 -93 +1 
* * 
+2 +4 56 56
+3 * 56
+3 * 56 0 0 1 0 0 1
+4 * 56 56
+5 * 56
+4 * 56
+3 * 56 0 56
+5 +1 56 56
+3 * 56
+3 * 56
+4 * 56 56
+5 * 56
+4 * 56
+3 * 56 0 56
+5 +1 56 56
+5 * 56 56
+5 * 56 56
+5 * 56 0 0 1 0 0 1
+4 * 56
+3 * 56 0 56
+5 +2 56 56
+3 +1 56 0 56
+3 * 56 56
+5 * 56 56
+1 * 56 56

fl=(4)
fn=(16)
0x404804 115 112 0 112 1 0 0 1
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112
+4 +1 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(5)
cfn=(18)
calls=112 0x404a28 -35 
* * 672 224 336 1 0 1 1 0 1
+5 * 112 112
+1 * 112 112

fn=(174)
0x403ccc 121 112 0 112
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 112
+4 * 112
+3 * 112 0 112
cfi=(5)
cfn=(176)
calls=112 0x4044cc -35 
* * 560 224 224
+5 * 112 112
+1 * 112 112

fn=(90)
0x4047b2 115 112 0 112 1 0 0 1
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 0 112 1 0 0 1
+4 +1 112 112
+4 * 112 112
+4 * 112
+3 * 112
+3 * 112 0 112
cfi=(5)
cfn=(92)
calls=112 0x4049d4 -35 
* * 672 224 336 1 0 0 1
+5 * 112 112
+1 * 112 112

fn=(194)
0x403d7e 121 112 0 112 1 0 0 1
+1 * 112
+3 * 112
+4 * 112 0 112
+4 * 112 112
+4 * 112
+3 * 112 0 112
cfi=(5)
cfn=(196)
calls=112 0x404520 -35 
* * 560 224 224
+5 * 112 112
+1 * 112 112

fl=(3)
fn=(222)
0x403373 215 56 0 56
+1 * 56
+3 * 56
+4 * 56 0 56
+4 * 56 0 56
+4 * 56 0 56
+4 +1 56 56
+4 * 56 56
+4 * 56 56
+4 * 56
+3 * 56
+3 * 56 0 56
cfi=(5)
cfn=(224)
calls=56 0x403df2 -87 
* * 1344 448 504 0 5 1 0 5 1 56
+5 * 56 56
+1 * 56 56

fn=(8)
0x403afa 224 112 0 112 1 0 0 1
+1 * 112
+3 * 112 0 112
+4 * 112 112
+4 * 112 112
+1 * 112 112

fn=(264)
0x4036b1 215 56 0 56
+1 * 56
+3 * 56
+4 * 56 0 56
+4 * 56 0 56
+4 * 56 0 56
+4 +1 56 56
+4 * 56 56
+4 * 56 56
+4 * 56
+3 * 56
+3 * 56 0 56
cfi=(5)
cfn=(266)
calls=56 0x40406a -87 
* * 1344 448 504 0 3 3 0 3 3 56
+5 * 56 56
+1 * 56 56

fn=(212)
0x4048c3 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(102)
calls=10 +8 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(256)
0x404978 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(28)
calls=10 +7 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(84)
0x4039ed 224 112 0 112
+1 * 112
+3 * 112 0 112
+4 * 112 112
+4 * 112 112
+1 * 112 112

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 124 124 0 1 0 0 1
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+2 0 124 124

fn=(38) _int_malloc
0x3877c79a00 0 234 0 234 1 0 0 1
+2 0 234
+3 0 234 0 234
+2 0 234 0 234
+2 0 234 0 234 0 0 1 0 0 1
+2 0 234
+3 0 234 0 234
+1 0 234 0 234
+1 0 234
+4 0 234
+4 0 234 0 0 0 0 0 0 0 0 234
+6 0 234
+4 0 234
+6 0 234
+3 0 234
+4 0 234
+4 0 234
+4 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+6 0 234 234 0 1 1 0 1 1
+7 0 234 0 0 0 0 0 0 0 0 234 5
jcnd=112/234 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 110 110
+6 0 110
+4 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+3 0 110
+4 0 110 110
+1 0 110 110
+1 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
-14 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+7 0 129
+7 0 129 0 0 1 0 0 1 0 0 129
+2 0 129
+3 0 129
+5 0 129
+3 0 129
+4 0 129 0 129
+4 0 129
+2 0 129
+5 0 129 129 0 0 2 0 0 2
+4 0 129
+3 0 129 0 0 0 0 0 0 0 0 129
jcnd=129/129 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 129 0 0 1 0 0 1
+3 0 129
+3 0 129
+3 0 129
+4 0 129
+3 0 129
+4 0 129 0 129
+5 0 129
+3 0 129 0 129
+4 0 129 0 129
+4 0 129 0 129
+5 0 129
+3 0 129
+3 0 129
+3 0 129
+3 0 129
+4 0 129
+4 0 129 0 0 1 0 0 1
+4 0 129 0 129
+4 0 129
+4 0 129 0 129
+5 0 129 0 129
+5 0 129
+3 0 129
+3 0 129 0 129
+5 0 129
+5 0 129
+3 0 129 0 129
+4 0 129 0 129
+4 0 129
+6 0 129 0 129
+4 0 129 0 129
+5 0 129 0 0 1 0 0 1
+3 0 129
+3 0 129
+3 0 129
jump=129 +87 0 
* 0 
+8 0 146
+3 0 146
+4 0 146
+2 0 146
+2 0 146
+3 0 146
+3 0 146
+3 0 146
+2 0 146
+2 0 146
+5 0 146
+2 0 146 146
+4 0 146
+3 0 146
+4 0 146 0 146
+4 0 146 0 146
+8 0 146
+7 0 146 0 146
+4 0 146 0 146
+4 0 146 0 146
+4 0 146 0 0 0 0 0 0 0 0 146
-38 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+8 0 5
+7 0 5 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 280 280 0 1 0 0 1
+4 0 280
+3 0 280 0 0 0 0 0 0 0 0 280 1
jcnd=105/280 0x3877c79ef0 0 
* 0 
+6 0 175 175
+4 0 175 175
+4 0 175
+4 0 175 0 0 0 0 0 0 0 0 175
+6 0 175 175 0 1 1 0 1 1
+7 0 175 0 0 0 0 0 0 0 0 175
+6 0 175
+4 0 175
+7 0 175 0 0 0 0 0 0 0 0 175
+2 0 175
+3 0 175 0 0 0 0 0 0 0 0 175 48
jcnd=128/175 0x3877c79e28 0 
* 0 
+6 0 156
+3 0 156 0 156
+4 0 156 0 156
+5 0 156 0 0 0 0 0 0 0 0 156 5
jcnd=5/156 0x3877c7a090 0 
* 0 
+6 0 151
+7 0 151 0 0 0 0 0 0 0 0 151 6
jcnd=146/151 0x3877c79c50 0 
* 0 
+6 0 5 0 0 1 0 0 1
+3 0 5
+4 0 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5
+3 0 5
+4 0 5
+2 0 5
+2 0 5
+3 0 5
+3 0 5
+8 0 5
+3 0 5
+2 0 5
+2 0 5
+4 0 5 5
+4 0 5
+3 0 5 0 0 1 0 0 1 0 0 5 1
jcnd=5/5 0x3877c79e15 0 
* 0 
0x3877c79e15 0 5 0 5
+4 0 5 0 5
+4 0 5
+3 0 5
jump=5 0x3877c79c73 0 
* 0 
+8 0 128 128 0 1 0 0 1
+4 0 128
+3 0 128 0 0 0 0 0 0 0 0 128 8
jcnd=55/128 0x3877c79ce1 0 
* 0 
+6 0 73 73
+5 0 73 0 0 0 0 0 0 0 0 73 8
jcnd=54/73 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 15 0 0 15
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 2
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 3 0 0 3
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 0 0 0 0 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 105 0 0 1 0 0 1
+7 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+6 0 105 105 0 1 0 0 1
+4 0 105
+3 0 105
+3 0 105
+2 0 105
+4 0 105
+3 0 105
+3 0 105
+2 0 105
+2 0 105
+2 0 105
+2 0 105 105 0 0 1 0 0 1
+8 0 105
+5 0 105
+5 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
-2 0 54
+2 0 54 0 0 0 0 0 0 0 0 54
+2 0 159
+2 0 159 0 0 0 0 0 0 0 0 159 6
jcnd=106/159 +64 0 
* 0 
+2 0 53
+8 0 53
+3 0 53
+3 0 53 0 0 0 0 0 0 0 0 53
-6 0 7
+3 0 7
+3 0 7 0 0 0 0 0 0 0 0 7
+2 0 60
+2 0 60 60
+8 0 60
+2 0 60 0 0 0 0 0 0 0 0 60 2
jcnd=7/60 -20 0 
* 0 
+2 0 53
+2 0 53
+5 0 53
+3 0 53
+3 0 53
+2 0 53
+2 0 53
+5 0 53 0 0 0 0 0 0 0 0 53 3
jcnd=2/53 +14 0 
* 0 
+2 0 51
+2 0 51
+4 0 51
+2 0 51
+2 0 51 0 0 0 0 0 0 0 0 51 2
jcnd=51/51 -8 0 
* 0 
-8 0 1847
+4 0 1847
+2 0 1847
+2 0 1847 0 0 0 0 0 0 0 0 1847 133
jcnd=1692/1847 -8 0 
* 0 
-2 0 106 0 0 1 0 0 1
+2 0 106 0 0 0 0 0 0 0 0 106 1
jcnd=104/106 -8 0 
* 0 
+2 0 159 159 0 0 7 0 0 7
+4 0 159 0 0 1 0 0 1
+3 0 159 0 0 0 0 0 0 0 0 159 54
jcnd=105/159 0x3877c7a1cf 0 
* 0 
+6 0 54
+2 0 54
+4 0 54
+2 0 54
+2 0 54
+2 0 54 0 54
+8 0 54
jump=54 0x3877c79f30 0 
* 0 
0x3877c7a090 0 5 0 0 1 0 0 1
+7 0 5 0 5
+6 0 5
+3 0 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 105 105 0 1 2 0 1 2
+4 0 105 105
+4 0 105
+3 0 105 105
+4 0 105
+4 0 105
+3 0 105
+3 0 105 105
+4 0 105 0 0 0 0 0 0 0 0 105
+6 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 0 0 0 0 0 0 105
+6 0 105 105 0 1 0 0 1
+8 0 105 0 105
+4 0 105 0 105
+4 0 105 0 0 0 0 0 0 0 0 105 5
jcnd=98/105 +38 0 
* 0 
+2 0 7 7 0 0 1 0 0 1
+4 0 7
+3 0 7 0 0 0 0 0 0 0 0 7
+2 0 7 7
+5 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 7
+4 0 7 7
+4 0 7 0 7
+4 0 7
+4 0 7 0 0 0 0 0 0 0 0 7
-4 0 98
+4 0 98 0 0 0 0 0 0 0 0 98
+6 0 105 105
+4 0 105 105 0 1 0 0 1
+4 0 105 0 0 0 0 0 0 0 0 105
+6 0 105
+4 0 105
+7 0 105 0 105 0 0 6 0 0 6
+4 0 105 0 105
+4 0 105 0 105
+4 0 105 0 105
+4 0 105 0 0 0 0 0 0 0 0 105
+2 0 105 0 105
+5 0 105
+7 0 105 0 0 0 0 0 0 0 0 105 3
jcnd=100/105 +18 0 
* 0 
+2 0 5 0 5
+8 0 5 0 5
+8 0 5
+7 0 5 0 5 0 0 1 0 0 1
+4 0 5
+3 0 5
+3 0 5
+4 0 5
+3 0 5
+4 0 5
+3 0 5
+3 0 5
+4 0 5 0 5
+4 0 5 0 5
+4 0 5
jump=5 +71 0 
* 0 
-46 0 100 0 0 1 0 0 1
+7 0 100 0 100 0 0 2 0 0 2
+4 0 100
+3 0 100
+3 0 100
+4 0 100
+3 0 100
+4 0 100
+3 0 100
+3 0 100
+4 0 100 0 100
+4 0 100 0 100
+4 0 100
jump=100 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+28 0 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105 0 105
cfn=(104)
calls=105 0x3877c77180 0 
* 0 420 210 0 1 0 0 1 0 0 105
+5 0 105
+3 0 105
jump=105 0x3877c79ae3 0 
* 0 

fn=(36)
0x3877c7aa50 0 234 0 234 1 0 0 1
+5 0 234 0 234
+5 0 234
+3 0 234 0 234
+5 0 234
+4 0 234 234 0 0 1 0 0 1
+7 0 234 234 0 0 1 0 0 1
+3 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+6 0 234 234 0 0 1 0 0 1
+7 0 234 234 0 1 1 0 1 1
+4 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+2 0 234 234 0 0 1 0 0 1
+3 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
jcnd=234/234 +97 0 
* 0 
+18 0 234
+3 0 234
+3 0 234 0 234
cfn=(38)
calls=234 0x3877c79a00 0 
* 0 42043 5250 5688 27 20 29 27 20 29 6812 318
+5 0 234
+3 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+2 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+2 0 234
+3 0 234 0 0 0 0 0 0 0 0 234 2
+2 0 234 234
+7 0 234 0 0 0 0 0 0 0 0 234
jcnd=234/234 +13 0 
* 0 
+13 0 234 0 234
+2 0 234 0 0 0 0 0 0 0 0 234
+6 0 234
+3 0 234 234
+4 0 234 234
+5 0 234 234
+5 0 234
+4 0 234 234
+1 0 234 0 0 1 0 0 1
+5 0 234 234 0 0 1 0 0 1
+7 0 234 0 0 0 0 0 0 0 0 234
jcnd=234/234 +14 0 
* 0 
+14 0 234 0 234 1 0 0 1
+3 0 234 0 0 0 0 0 0 0 0 234
+6 0 234
jump=234 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 234 0 234 1 0 0 1
+2 0 234
+3 0 234
+3 0 234 0 234
+2 0 234
+3 0 234 0 234
+1 0 234
+3 0 234 0 234
+1 0 234
+3 0 234
+4 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+6 0 234
+4 0 234
+3 0 234 0 0 0 0 0 0 0 0 234 4
jcnd=10/234 0x3877c838d1 0 
* 0 
+2 0 224
+3 0 224
+3 0 224
+3 0 224
+3 0 224
+3 0 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 +41 0 
* 0 
+41 0 224 0 0 1 0 0 1
+3 0 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 0x3877c839c0 0 
* 0 
+24 0 224
+3 0 224
+4 0 224
+3 0 224
+3 0 224
+3 0 224
+3 0 224
+3 0 224 0 0 0 0 0 0 0 0 224 102
jcnd=116/224 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 118
+10 0 118 118 0 0 2 0 0 2
+3 0 118
+4 0 118 0 118
+3 0 118
+4 0 118
+4 0 118 0 0 0 0 0 0 0 0 118
jcnd=118/118 -18 0 
* 0 
-18 0 410 410
+3 0 410
+4 0 410 0 410
+3 0 410
+4 0 410
+4 0 410 0 0 0 0 0 0 0 0 410 8
jcnd=292/410 -18 0 
* 0 
+2 0 234
+4 0 234
+3 0 234 234
+1 0 234 234
+1 0 234 234
+2 0 234 234 0 1 0 0 1
+2 0 234 234
0x3877c839c0 0 224 0 0 1 0 0 1
+3 0 224
+3 0 224
+3 0 224
+4 0 224 0 224 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=224 0x3877c89b20 0 
* 0 11142 3748 3300 6 1 7 6 1 7 542 10 224 26
+5 0 224
jump=224 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 234 234 0 1 1 0 1 1
+7 0 234 234 0 0 1 0 0 1
+3 0 234
+3 0 234 0 0 1 0 0 1 0 0 234
+6 0 234
+3 0 234 0 0 0 0 0 0 0 0 234
+6 0 234 234
+4 0 234
+4 0 234
+2 0 234 0 0 0 0 0 0 0 0 234
+2 0 234
+2 0 234
+7 0 234 0 0 0 0 0 0 0 0 234
jcnd=234/234 +14 0 
* 0 
+14 0 234
+2 0 234
cfn=(170) _int_free
calls=234 0x3877c78650 0 
* 0 20435 5268 3122 17 1 0 17 1 0 4575 17

fn=(170)
0x3877c78650 0 234 0 234 1 0 0 1
+2 0 234 0 234
+2 0 234 0 234
+2 0 234
+3 0 234 0 234
+2 0 234 0 234
+1 0 234 0 234
+1 0 234
+3 0 234
+4 0 234 234
+4 0 234 0 234
+4 0 234
+3 0 234
+4 0 234
+3 0 234
+3 0 234
+3 0 234 0 0 1 0 0 1 0 0 234
+6 0 234
+4 0 234 0 0 0 0 0 0 0 0 234
+6 0 234
+4 0 234 0 0 0 0 0 0 0 0 234
+6 0 234 234
+7 0 234 0 0 0 0 0 0 0 0 234 2
jcnd=110/234 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110 110 0 1 0 0 1
+4 0 110
+3 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
jcnd=110/110 0x3877c78a40 0 
* 0 
+6 0 110 110
+4 0 110
+3 0 110 0 0 0 0 0 0 0 0 110
+6 0 110 110
+5 0 110
+4 0 110 0 0 0 0 0 0 0 0 110
jcnd=110/110 0x3877c7907c 0 
* 0 
+6 0 110 110
+5 0 110
+4 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+4 0 110 0 0 1 0 0 1 0 0 110
+6 0 110
+4 0 110 110
+7 0 110 0 0 0 0 0 0 0 0 110
+6 0 110 110
+6 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110 110
+4 0 110 0 0 0 0 0 0 0 0 110 1
jcnd=109/110 +70 0 
* 0 
+2 0 1 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +15 0 
* 0 
+15 0 110 110 0 1 0 0 1
+4 0 110 0 0 0 0 0 0 0 0 110
+6 0 110 110
+6 0 110 0 0 1 0 0 1 0 0 110 9
jcnd=6/110 0x3877c78a78 0 
* 0 
+6 0 104 104
+5 0 104 104
+5 0 104 104
+4 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104
+4 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104
+9 0 104 0 104
+4 0 104 0 104
+4 0 104 0 0 0 0 0 0 0 0 104 4
jcnd=96/104 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 104
+3 0 104
+4 0 104 104
+4 0 104 104
+4 0 104 0 0 0 0 0 0 0 0 104
-12 0 6
+4 0 6 6
+4 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 110
+7 0 110 0 110
+4 0 110 0 110
+4 0 110 0 0 0 0 0 0 0 0 110
jcnd=102/110 +18 0 
* 0 
+2 0 8 0 8
+8 0 8 0 8
+8 0 8 0 8
+4 0 8
+3 0 8 0 8 1 0 0 1
+4 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8
+7 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c78b20 0 
* 0 
-30 0 102 0 102
+4 0 102
+3 0 102 0 102
+4 0 102
+4 0 102 0 102
+4 0 102 0 102
+4 0 102
+7 0 102 0 0 0 0 0 0 0 0 102
jcnd=102/102 0x3877c78b20 0 
* 0 
0x3877c78a40 0 110 0 0 1 0 0 1
+5 0 110 110
+4 0 110 110
+7 0 110 0 0 0 0 0 0 0 0 110
jcnd=110/110 +16 0 
* 0 
+16 0 110 0 110
+5 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+3 0 110
jump=110 0x3877c7878f 0 
* 0 
+10 0 6 0 6
+6 0 6 0 0 1 0 0 1
jump=6 0x3877c78885 0 
* 0 
0x3877c78b20 0 110 110 0 1 0 0 1
+4 0 110
+2 0 110 0 0 0 0 0 0 0 0 110
+6 0 110 110
+7 0 110 0 0 0 0 0 0 0 0 110
jcnd=110/110 +15 0 
* 0 
+15 0 110 0 110 1 0 0 1
+4 0 110 0 0 0 0 0 0 0 0 110
+6 0 110
+4 0 110 110
+1 0 110 110
+1 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
+2 0 110 110
0x3877c7907c 0 110 110 0 1 1 0 1 1
+4 0 110 0 0 1 0 0 1
+7 0 110
+4 0 110
+3 0 110
+3 0 110 0 0 0 0 0 0 0 0 110
jcnd=110/110 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 224 0 0 1 0 0 1
+7 0 224
+3 0 224
+3 0 224 224 0 0 1 0 0 1
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 0 0 224 26
jump=24 0x3877c89be8 0 
* 0 
jump=28 0x3877c89bd0 0 
* 0 
jump=24 0x3877c89bb8 0 
* 0 
jump=24 +11 0 
* 0 
jump=24 0x3877c89c48 0 
* 0 
jump=34 0x3877c89c30 0 
* 0 
jump=32 0x3877c89c18 0 
* 0 
jump=34 0x3877c89c00 0 
* 0 
+11 0 24 24
+3 0 24
+4 0 24
+4 0 24 24
+4 0 24
+4 0 24 0 24
+4 0 24
+9 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
+4 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
jcnd=8/24 0x3877c89c60 0 
* 0 
-40 0 366 366
+4 0 366 0 366
+4 0 366 366
+4 0 366 0 366
+4 0 366 366
+4 0 366 0 366 0 0 1 0 0 1
+4 0 366 366
+4 0 366 0 366
+4 0 366
+4 0 366
+4 0 366 0 0 0 0 0 0 0 0 366 8
jcnd=188/366 0x3877c89c60 0 
* 0 
-32 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
jcnd=10/34 0x3877c89c60 0 
* 0 
-24 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-16 0 34 34 0 1 0 0 1
+4 0 34 0 34
+4 0 34 0 0 1 0 0 1
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34 2
jcnd=10/34 0x3877c89c60 0 
* 0 
+6 0 266
+4 0 266 266
+3 0 266 0 266 0 0 1 0 0 1
+3 0 266 266
+4 0 266 0 266
+4 0 266 266
+4 0 266 0 266 0 0 4 0 0 4
+4 0 266 266
+4 0 266 0 266
+4 0 266
jump=266 -80 0 
* 0 
-30 0 24 24
+3 0 24 0 24
+3 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24 0 0 1 0 0 1
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
-24 0 28 28
+4 0 28 0 28
+4 0 28 28
+4 0 28 0 28
+4 0 28 28
+4 0 28 0 28
+4 0 28
jump=28 -80 0 
* 0 
-16 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
+8 0 24 24
+3 0 24
+4 0 24 0 0 1 0 0 1
+4 0 24
+4 0 24
jump=24 -39 0 
* 0 
+9 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
+6 0 28 28
+3 0 28
+4 0 28
jump=28 -72 0 
* 0 
+8 0 24
+4 0 24 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24
+4 0 24
jump=24 -99 0 
* 0 
+11 0 34 34 0 1 0 0 1
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b78 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b70 0 
* 0 
+9 0 34 34
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b68 0 
* 0 
+9 0 24 24
+3 0 24
+4 0 24
+4 0 24
+4 0 24
jump=24 0x3877c89b60 0 
* 0 
+9 0 224 0 224 1 0 0 1
+3 0 224 224

totals: 534524 193365 128245 221 50 53 221 50 53 23865 649 1394 26
