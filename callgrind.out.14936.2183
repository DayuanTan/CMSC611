version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2183


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2648254573 - 2648947688
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 990 0 0 1 0 0 1
+3 0 990 0 0 0 0 0 0 0 0 990
+2 0 990
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=990 0x3877c7b8b0 0 
* 0 109267 27893 13927 21 5 0 21 5 0 26703 472
* 0 990 990 0 1 1 0 1 1 0 0 0 990

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 990 0 990 1 0 0 1
+1 0 990
+5 0 990
+3 0 990 0 990
+1 0 990
+4 0 990 0 0 1 0 0 1
+3 0 990
+4 0 990
+3 0 990 0 990 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=990 0x3877c7aa50 0 
* 0 262809 37723 37428 46 38 47 46 38 47 44175 1505
* 0 990 990 0 1 1 0 1 1 0 0 0 990
+5 0 990
+3 0 990 0 0 0 0 0 0 0 0 990
jcnd=990/990 +96 0 
* 0 
+96 0 990 0 0 1 0 0 1
+4 0 990 990
+1 0 990 990
+1 0 990 990

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 558 0 558
+1 * 558
+3 * 558 0 558 0 0 1 0 0 1
+4 +1 558 558
+4 * 558 558
+1 * 558 558

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 976 0 976 1 0 0 1
+1 * 976
+3 * 976
+4 * 976 0 976
+4 +1 976
+4 * 976
+3 * 976 0 976
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=976 0x404ffe 790 
* * 5856 2928 1952 1 0 0 1
+5 * 976 976
+3 * 976 976
+1 * 976 976

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 976 0 976 1 0 0 1
+1 * 976
+3 * 976 0 976
+4 +1 976 976
+4 * 976 976
+1 * 976 976

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 976 0 976 1 0 0 1
+1 * 976
+3 * 976
+4 * 976 0 976
+4 +1 976
+4 * 976
+3 * 976 0 976 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=976 0x40500c 790 
* * 5856 2928 1952 1 0 0 1
+5 * 976 976
+3 * 976 976
+1 * 976 976

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 558 0 558
+1 * 558
+3 * 558 0 558
+4 +1 558 558
+4 * 558 558
+1 * 558 558

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 976 0 976 1 0 0 1
+1 * 976
+3 * 976 0 976
+4 +1 976 976 0 1 0 0 1
+4 * 976 976
+1 * 976 976

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 488 0 488
+1 * 488
+3 * 488 0 488
+4 * 488 0 488
+4 * 488 488
+4 * 488 488
+1 * 488 488

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 495 0 495 1 0 0 1
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 * 495 0 495
+4 +2 495 495
+4 * 495
+3 * 495 0 495
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=495 0x4048de +12 
* * 2970 990 990 1 0 0 1
+5 * 495 495
+4 * 495 0 0 1 0 0 1
+3 * 495
+2 * 495 0 0 0 0 0 0 0 0 495
jcnd=495/495 +7 +3 
* * 
+7 +3 495 495
+4 * 495
+4 * 495
+3 * 495 0 495
cob=(5)
cfi=(8)
cfn=(32)
calls=495 0x387e4bd0b0 0 
* * 140850 20654 19091 33 15 34 33 15 34 22959 776 495
* * 495 495 0 0 0 0 0 0 0 0 0 495
+5 +1 495 495
+1 * 495 495

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 488 0 488 1 0 0 1
+1 * 488
+3 * 488 0 488 0 0 1 0 0 1
+4 * 488 0 488
+4 * 488 488
+1 * 488 488

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 488 0 488 1 0 0 1
+1 * 488
+3 * 488 0 488
+4 * 488 0 488
+4 * 488 488
+1 * 488 488

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 488 0 488
+1 * 488
+3 * 488 0 488
+4 * 488 488
+1 * 488 488

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 495 0 495 1 0 0 1
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 * 495 0 495 1 0 0 1
+4 +2 495 495
+4 * 495
+3 * 495 0 495
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=495 0x404992 +12 
* * 2970 990 990 1 0 0 1
+5 * 495 495
+4 * 495
+3 * 495
+2 * 495 0 0 0 0 0 0 0 0 495
jcnd=495/495 +7 +3 
* * 
+7 +3 495 495
+4 * 495
+4 * 495
+3 * 495 0 495
cob=(5)
cfi=(8)
cfn=(32)
calls=495 0x387e4bd0b0 0 
* * 137799 21029 21307 17 24 14 17 24 14 22206 729 495
* * 495 495 0 1 1 0 1 1 0 0 0 495
+5 +1 495 495
+1 * 495 495

fn=(102)
0x4048de 113 509 0 509 1 0 0 1
+1 * 509
+3 * 509 0 509
+4 +1 509
+10 * 509 509
+1 * 509 509

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 244 0 244
+1 * 244
+3 * 244
+4 * 244 0 244
+4 * 244 0 244
+4 * 244 0 244
+4 +1 244 244
+4 * 244
+3 * 244
+5 * 244 0 244
cfi=(16)
cfn=(226)
calls=244 0x402d61 -20 
* * 1708 732 732
+5 * 244
+3 * 244 0 0 0 0 0 0 0 0 244
+2 * 244 244
+4 * 244 244 0 0 15 0 0 15
+2 * 244 0 244 0 0 7 0 0 7
+2 * 244 244
+1 * 244 244

fn=(28)
0x404992 113 509 0 509 1 0 0 1
+1 * 509
+3 * 509 0 509
+4 +1 509
+10 * 509 509
+1 * 509 509

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 488 0 488
+1 * 488
+3 * 488 0 488
+4 * 488 488
+1 * 488 488

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 244 0 244
+1 * 244
+3 * 244
+4 * 244 0 244
+4 * 244 0 244
+4 * 244 0 244
+4 +1 244 244
+4 * 244
+3 * 244
+5 * 244 0 244
cfi=(16)
cfn=(226)
calls=244 0x402d61 -20 
* * 1708 732 732
+5 * 244
+3 * 244 0 0 0 0 0 0 0 0 244
+2 * 244 244
+4 * 244 244 0 0 16 0 0 16
+2 * 244 0 244 0 0 3 0 0 3
+2 * 244 244
+1 * 244 244

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 495 0 495
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 * 495 0 495
+4 +1 495 495
+4 * 495
+3 * 495 0 495
cob=(5)
cfi=(8)
cfn=(164)
calls=495 0x387e4bb2f0 0 
* * 53189 13137 6006 23 5 0 23 5 0 12858 429 495
* * 495 495 0 1 1 0 1 1 0 0 0 495
+5 * 495 495
+1 * 495 495

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 495 0 495
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 * 495 0 495
+4 +1 495 495
+4 * 495
+3 * 495 0 495
cob=(5)
cfi=(8)
cfn=(164)
calls=495 0x387e4bb2f0 0 
* * 60038 15746 7921 0 1 0 0 1 0 14835 43 495
* * 495 495 0 0 0 0 0 0 0 0 0 495
+5 * 495 495
+1 * 495 495

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +2 488 488
+4 * 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=488 0x404484 107 
* * 217166 71024 68100 25 3 4 25 3 4 7952 509 972 120
+5 * 488 488
+1 * 488 488

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +2 488 488 0 1 0 0 1
+4 * 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=488 0x404a36 450 
* * 203502 66144 63220 24 3 4 24 3 4 7952 509 972 120
+5 * 488 488
+1 * 488 488

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +2 488 488
+4 * 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=488 0x40439c 107 
* * 217166 71024 68100 7 0 22 7 0 22 7952 493 972
+5 * 488 488
+1 * 488 488

fn=(116)
0x40439c 107 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +10 488 488
+4 * 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=488 0x4047d7 -26 
* * 210334 68584 65660 7 0 22 7 0 22 7952 493 972
+5 +1 488 488
+1 * 488 488

fn=(118)
0x4047d7 91 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +2 488 488
+4 * 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=488 0x4049e2 450 
* * 203502 66144 63220 7 0 22 7 0 22 7952 493 972
+5 * 488 488
+1 * 488 488

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 3 2 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 3 1 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +10 488 488
+4 * 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(52)
calls=488 0x404829 -26 
* * 210334 68584 65660 25 3 4 25 3 4 7952 509 972 120
+5 +1 488 488
+1 * 488 488

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 3 2 0 3 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 495 0 495 1 0 0 1
+1 * 495
+3 * 495
+4 * 495 0 495 1 0 0 1
+4 * 495 0 495
+4 0 495 495
+5 0 495 0 0 0 0 0 0 0 0 495
+2 0 495 495
+4 0 495 495
+4 0 495
+5 0 495
+3 0 495
+3 0 495 0 495
fi=(6) ???
cfi=(5)
cfn=(26)
calls=495 0x404730 99 
* 0 150669 24989 25267 21 25 14 21 25 14 22701 729 990
+5 0 495
fi=(6)
jump=495 +7 0 
* 0 
+7 0 495 495
+1 0 495 495

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 488 0 488 1 0 0 1
+1 * 488
+3 * 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+4 * 488 0 488
+4 * 488
+4 * 488 0 0 1 0 0 1
+4 * 488
+3 * 488
+3 * 488 0 488
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=488 0x404468 726 
* * 4880 2440 1952 1 0 0 1
+5 * 488 488
+4 * 488 488
+1 * 488 488

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+3 * 488 0 488
+4 * 488
+4 * 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfi=(10)
cfn=(44)
calls=488 0x404468 726 
* * 4880 2440 1952
+5 * 488 488
+4 * 488 488
+1 * 488 488

fn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
0x403a0a 134 488 0 488
+1 * 488
+3 * 488 0 488
+1 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=488 0x4042e2 -45 
* * 17568 6344 6832 5 0 0 5
+5 +1 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=488 0x40432a +43 
* * 170932 32320 27883 27 7 29 27 7 29 23483 724 976
+5 * 488
jump=488 +28 * 
* * 
+28 * 488
+4 * 488 488
+1 * 488 488
+1 * 488 488

fn=(88)
0x4042e2 90 488 0 488 1 0 0 1
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488 1 0 0 1
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=488 0x4047b2 +24 
* * 8784 2928 3416 3 0 0 3
+5 * 488 488
+4 * 488 0 488
+7 * 488 488
+4 * 488 0 488
+8 * 488 488
+4 * 488 0 488
+8 +1 488 488
+1 * 488 488

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 488 0 488 1 0 0 1
+1 * 488
+3 * 488 0 488
+1 * 488
+4 * 488 0 488
+4 +2 488 488
+4 * 488 488 0 1 0 0 1
+4 * 488
+3 * 488 488
+4 * 488 488
+3 * 488
+3 * 488
+3 * 488
+4 * 488
+3 * 488 488
+4 * 488 488
+3 -1 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=488 0x403ce6 +11 
* * 66132 17844 10794 24 5 0 24 5 0 13184 425 976
+5 +1 488 488
+4 * 488
+3 * 488 0 488
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=488 0x4031b8 -82 
* * 11224 3904 3904 1 0 0 1
+5 * 488
jump=488 +28 * 
* * 
+28 * 488
+4 * 488 488
+1 * 488 488
+1 * 488 488

fn=(172)
0x4031b8 79 488 0 488 1 0 0 1
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 488
+4 * 488
+3 * 488 0 488
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=488 0x403ccc +42 
* * 6832 2440 2440
+5 * 488 488
+1 * 488 488

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1004 0 1004 1 0 0 1
+1 * 1004
+3 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004 1004 0 0 2 0 0 2
+4 * 1004
+3 * 1004 1004
+4 * 1004 1004
+3 * 1004
+3 * 1004
+3 * 1004
+4 * 1004 1004
+1 * 1004 1004

fn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
0x40325e 113 997 0 997 1 0 0 1
+1 * 997
+3 * 997 0 997
+4 +1 997 997
+4 * 997 997
+1 * 997 997

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 502 0 502 1 0 0 1
+1 * 502
+3 * 502 0 502 0 0 1 0 0 1
+4 +1 502 502
+4 * 502 502
+1 * 502 502

fn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
0x4039fc 117 502 0 502 1 0 0 1
+1 * 502
+3 * 502 0 502 1 0 0 1
+4 +1 502 502
+4 * 502 502
+1 * 502 502

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 244 0 244
+1 * 244
+3 * 244
+4 * 244 0 244
+4 * 244 0 244
+4 +2 244 244
+4 * 244 244
+4 * 244 244
+4 * 244 244
+4 * 244
+3 * 244 0 0 0 0 0 0 0 0 244 8
jcnd=7/244 +51 +10 
* * 
+2 +3 237 237
+4 * 237 237
+4 * 237 237
+4 -1 237 237
+4 * 237
+3 * 237
+3 * 237 0 237
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=237 0x403373 215 
* * 9006 3081 3318 0 15 2 0 15 2 237
+5 +2 237 237
+4 * 237 237
+4 * 237
+4 * 237 237
+4 * 237 0 237
+4 * 237
jump=237 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 10885 3352 2889 35 10 9 35 10 9 753 60 41
+5 +2 244 244
+1 * 244 244

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 488 0 488 1 0 0 1
+1 * 488
+3 * 488 0 488
+2 * 488 0 488
+2 * 488 0 488
+1 * 488
+4 * 488 0 488 1 0 0 1
+4 * 488 0 488
+4 +2 488 488
+4 * 488
+3 * 488 0 488
cfn=(6)
calls=488 0x403b08 117 
* * 2928 1464 976 1 0 1 1 0 1
+5 * 488
+3 * 488 0 488
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=488 0x403afa -88 
* * 2928 1464 976 1 0 0 1
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(10)
calls=488 0x402f54 645 
* * 6344 2928 976 1 1 0 1 1
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488
+3 * 488
+3 * 488 0 488
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=488 0x403b16 134 
* * 196969 42690 40523 29 20 12 29 20 12 22896 691 976
+5 +4 488 488 0 1 0 0 1
+4 * 488
+3 * 488 0 488
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=488 0x40333c 113 
* * 2928 1464 976 2 0 0 2
+5 * 488
+3 * 488 488
+4 * 488 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(42)
calls=488 0x403ba4 565 
* * 12200 4880 3904 3 0 0 3
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(46)
calls=488 0x403b74 547 
* * 12200 4880 3904
+5 * 488
+3 * 488
+3 * 488
+3 * 488
+3 * 488 0 488 1 0 0 1
cfi=(11)
cfn=(48)
calls=488 0x403bd5 -60 
* * 224486 73464 71028 26 3 4 26 3 4 7952 509 972 120
+5 -3 488 488
+4 * 488 0 488
+4 * 488
jump=488 +28 +4 
* * 
+28 +4 488
+4 * 488 488
+1 * 488 488
+2 * 488 488
+2 * 488 488
+1 * 488 488

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 488 0 488 1 0 0 1
+1 * 488
+3 * 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+4 * 488 0 488
+4 * 488
+4 * 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=488 0x404380 726 
* * 4880 2440 1952 1 0 0 1
+5 * 488 488
+4 * 488 488
+1 * 488 488

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 488 0 488
+1 * 488
+3 * 488 0 488
+1 * 488
+4 * 488 0 488 1 0 0 1
+4 +2 488 488
+4 * 488
+3 * 488 0 488
cfn=(40)
calls=488 0x40333c 113 
* * 2928 1464 976
+5 * 488
+3 * 488 488
+4 * 488 488
+4 * 488 488
+4 * 488 488
+3 -1 488
+3 * 488
+3 * 488 0 488
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=488 0x40334a 148 
* * 15128 4880 5856 2 0 0 2
+5 +1 488 488
+4 * 488
+3 * 488 0 488
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=488 0x4032ca 159 
* * 97836 29708 19050 3 1 0 3 1 0 15152 35 976
+5 * 488
jump=488 +28 * 
* * 
+28 * 488 0 0 1 0 0 1
+4 * 488 488
+1 * 488 488
+1 * 488 488

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 495 0 495 1 0 0 1
+1 * 495 0 0 1 0 0 1
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 0 495 495
+5 0 495 0 0 0 0 0 0 0 0 495
+2 0 495 495
+4 0 495 495
+4 0 495
+5 0 495
+3 0 495
+3 0 495 0 495
fi=(6)
cfi=(5)
cfn=(100)
calls=495 0x40461a 99 
* 0 153720 24614 23051 36 15 34 36 15 34 23454 776 990
+5 0 495
fi=(6)
jump=495 +7 0 
* 0 
+7 0 495 495
+1 0 495 495

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 90890 0 90890
+1 * 90890
+3 * 90890 0 90890
+4 * 90890 0 90890
+4 +1 90890 90890
+4 * 90890 90890
+3 * 90890 90890
+4 * 90890
+4 * 90890
+3 * 90890 90890
+1 * 90890 90890

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 90890 0 90890
+1 * 90890
+3 * 90890 0 90890 1 0 0 1
+4 * 90890 0 90890
+4 +1 90890 90890
+4 * 90890 90890
+3 * 90890 90890
+4 * 90890
+4 * 90890
+3 * 90890 90890
+1 * 90890 90890

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 488
+4 * 488
+3 * 488 0 488
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=488 0x403d7e +42 
* * 6832 2440 2440 1 0 0 1
+5 * 488 488
+1 * 488 488

fn=(254)
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6)
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186)
0x4032ca 159 488 0 488 1 0 0 1
+1 * 488
+3 * 488 0 488
+1 * 488
+4 * 488 0 488
+4 +2 488 488
+4 * 488 488
+4 * 488
+3 * 488 488
+4 * 488 488
+3 * 488
+3 * 488
+3 * 488
+4 * 488
+3 * 488 488
+4 * 488 488
+3 -1 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=488 0x403d98 +11 
* * 72948 20436 12706 1 1 0 1 1 0 15152 35 976
+5 +1 488 488
+4 * 488
+3 * 488 0 488
cfn=(192)
calls=488 0x403296 -82 
* * 11224 3904 3904 1 0 0 1
+5 * 488
jump=488 +28 * 
* * 
+28 * 488
+4 * 488 488
+1 * 488 488
+1 * 488 488

fn=(2)
0x402d74 645 1980 0 1980 1 0 0 1
+1 * 1980
+3 * 1980 0 1980 0 0 1 0 0 1
+4 +1 1980 1980
+4 * 1980 1980 0 1 1 0 1 1
+4 * 1980
+3 * 1980 1980
+4 * 1980 1980
+3 * 1980
+3 * 1980
+3 * 1980
+4 * 1980 1980
+1 * 1980 1980

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 +2 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(22)
calls=488 0x404236 -14 
* * 156465 27074 26859 23 20 8 23 20 8 22896 691 976
+5 * 488 488
+4 * 488 0 488
+3 +1 488 488
+4 * 488 488 0 1 0 0 1
+3 * 488 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+3 * 488 488
+4 * 488
+4 * 488
+3 * 488 488
+4 * 488 0 488
+4 +1 488 488
+1 * 488 488

fn=(94)
0x40432a 179 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 +2 488 488
+4 * 488 488 0 1 0 0 1
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(96)
calls=488 0x403fbe -14 
* * 158732 26464 24467 26 7 29 26 7 29 23483 724 976
+5 * 488 488
+4 * 488 0 488
+3 +1 488 488
+4 * 488 488
+3 * 488 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+3 * 488 488
+4 * 488
+4 * 488
+3 * 488 488
+4 * 488 0 488
+4 +1 488 488
+1 * 488 488

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 244 0 244
+1 * 244
+3 * 244 0 0 1 0 0 1
+4 * 244 0 244
+4 * 244 0 244
+4 +2 244 244
+4 * 244 244
+4 * 244 244
+4 * 244 244
+4 * 244
+3 * 244 0 0 0 0 0 0 0 0 244
jcnd=7/244 +51 +10 
* * 
+2 +3 237 237
+4 * 237 237
+4 * 237 237
+4 -1 237 237
+4 * 237
+3 * 237
+3 * 237 0 237
cfi=(3)
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=237 0x4036b1 215 
* * 9006 3081 3318 0 15 4 0 15 4 237
+5 +2 237 237
+4 * 237 237
+4 * 237
+4 * 237 237
+4 * 237 0 237
+4 * 237
jump=237 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246)
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10134 3134 2716 18 5 12 18 5 12 596 56 41
+5 +2 244 244
+1 * 244 244

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40)
0x40333c 113 997 0 997 1 0 0 1
+1 * 997
+3 * 997 0 997 1 0 0 1
+4 +1 997 997
+4 * 997 997
+1 * 997 997

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+3 * 488 0 488
+4 * 488
+4 * 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfi=(10)
cfn=(110)
calls=488 0x404380 726 
* * 4880 2440 1952
+5 * 488 488
+4 * 488 488
+1 * 488 488

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 488 0 488
+1 * 488
+3 * 488 0 488
+1 * 488
+4 * 488 0 488 1 0 0 1
+4 +2 488 488
+4 * 488
+3 * 488 0 488
cfn=(106)
calls=488 0x40325e 113 
* * 2928 1464 976
+5 * 488
+3 * 488 488
+4 * 488 488
+4 * 488 488
+4 * 488 488
+3 -1 488
+3 * 488
+3 * 488 0 488
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=488 0x40326c 148 
* * 15128 4880 5856 4 0 0 4
+5 +1 488 488
+4 * 488
+3 * 488 0 488
cfn=(156)
calls=488 0x4031ec 159 
* * 91020 27116 17138 27 5 0 27 5 0 13184 425 976
+5 * 488
jump=488 +28 * 
* * 
+28 * 488 0 0 1 0 0 1
+4 * 488 488
+1 * 488 488
+1 * 488 488

fn=(158)
0x403ce6 171 495 0 495 1 0 0 1
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 * 495 0 495
+4 +2 495 495
+5 * 495 0 0 0 0 0 0 0 0 495
+2 +1 495 495
+4 * 495 495
+4 * 495 495
+4 * 495
+3 * 495
+3 * 495 0 495
cfi=(5)
cfn=(160)
calls=495 0x4044d6 -65 
* * 59129 15117 8481 24 6 0 24 6 0 12858 429 990
+5 +1 495 495
+1 * 495 495

fn=(12)
0x403b16 134 488 0 488
+1 * 488
+3 * 488 0 488
+1 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=488 0x4043ca -45 
* * 17568 6344 6832 4 0 4 4 0 4
+5 +1 488 488 0 1 0 0 1
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(20)
calls=488 0x404412 +43 
* * 168665 32930 30275 24 20 8 24 20 8 22896 691 976
+5 * 488
jump=488 +28 * 
* * 
+28 * 488
+4 * 488 488
+1 * 488 488
+1 * 488 488

fn=(14)
0x4043ca 90 488 0 488 1 0 0 1
+1 * 488
+3 * 488
+4 * 488 0 488 0 0 1 0 0 1
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfi=(4)
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=488 0x404804 +24 
* * 8784 2928 3416 2 0 1 2 0 1
+5 * 488 488
+4 * 488 0 488 0 0 2 0 0 2
+7 * 488 488
+4 * 488 0 488 1 0 0 1
+8 * 488 488
+4 * 488 0 488
+8 +1 488 488
+1 * 488 488

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 488 0 488 1 0 0 1
+1 * 488
+3 * 488 0 488
+2 * 488 0 488
+2 * 488 0 488
+1 * 488 0 0 1 0 0 1
+4 * 488 0 488
+4 * 488 0 488
+4 +2 488 488
+4 * 488
+3 * 488 0 488
cfn=(82)
calls=488 0x4039fc 117 
* * 2928 1464 976 2 0 0 2
+5 * 488
+3 * 488 0 488
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=488 0x4039ed -88 
* * 2928 1464 976
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(2)
calls=488 0x402d74 645 
* * 6344 2928 976
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488
+3 * 488
+3 * 488 0 488 1 0 0 1
cfn=(86)
calls=488 0x403a0a 134 
* * 199236 42080 38131 33 7 29 33 7 29 23483 724 976
+5 +4 488 488
+4 * 488
+3 * 488 0 488
cfn=(106)
calls=488 0x40325e 113 
* * 2928 1464 976 1 0 0 1
+5 * 488
+3 * 488 488
+4 * 488 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(108)
calls=488 0x403a98 565 
* * 12200 4880 3904 2 0 0 2
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(112)
calls=488 0x403a68 547 
* * 12200 4880 3904
+5 * 488
+3 * 488
+3 * 488
+3 * 488
+3 * 488 0 488
cfi=(11)
cfn=(114)
calls=488 0x403ac9 -60 
* * 224486 73464 71028 7 0 22 7 0 22 7952 493 972
+5 -3 488 488
+4 * 488 0 488
+4 * 488
jump=488 +28 +4 
* * 
+28 +4 488
+4 * 488 488
+1 * 488 488
+2 * 488 488
+2 * 488 488
+1 * 488 488

fn=(188)
0x403d98 171 495 0 495 1 0 0 1
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 * 495 0 495
+4 +2 495 495
+5 * 495 0 0 0 0 0 0 0 0 495 7
+2 +1 495 495
+4 * 495 495
+4 * 495 495
+4 * 495
+3 * 495
+3 * 495 0 495
cfi=(5)
cfn=(190)
calls=495 0x40452a -65 
* * 65978 17726 10396 0 1 0 0 1 0 14835 43 990
+5 +1 495 495
+1 * 495 495

fl=(12)
fn=(54)
0x404a36 450 488 0 488
+1 * 488
+3 * 488 0 488
+1 * 488
+4 * 488 0 488 1 0 0 1
+4 * 488 0 488
+4 * 488 0 488
+4 +10 488 488
+4 * 488
+3 * 488 0 488
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=488 0x404c38 288 
* * 7320 2928 2440 3 0 0 3
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(56)
calls=488 0x404c38 288 
* * 7320 2928 2440
+5 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=488 0x404c52 -36 
* * 178126 57360 54436 20 3 4 20 3 4 7952 509 972 120
+5 +1 488
+4 * 488 488
+1 * 488 488
+1 * 488 488

fn=(60)
0x404c52 424 488 0 488
+1 * 488
+3 * 488 0 488
+2 * 488 0 488
+1 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +4 488 488
+4 * 488
+3 * 488 0 488
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=488 0x40492d 277 
* * 7320 2928 2440 2 0 0 2
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=488 0x404d9d 277 
* * 12200 4392 3904 2 0 1 2 0 1
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(66)
calls=488 0x404d9d 277 
* * 12200 4392 3904
+5 * 488
+3 * 488
+3 * 488
+3 * 488 0 488
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=488 0x404db7 -49 
* * 132742 42232 39308 15 3 3 15 3 3 7952 509 972 120
+5 +1 488
+4 * 488 488
+1 * 488 488
+2 * 488 488
+1 * 488 488

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 3 0 0 3 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 530 0 530 1 0 0 1
+1 * 530
+3 * 530
+4 * 530 0 530
+4 +1 530 530
+4 * 530
+3 * 530 0 530 1 0 0 1
cfi=(13)
cfn=(64)
calls=530 -33 -66 
* * 3180 1590 1060
+5 * 530 530
+1 * 530 530

fn=(66)
0x404d9d 277 976 0 976
+1 * 976
+3 * 976
+4 * 976 0 976
+4 +1 976 976
+4 * 976
+3 * 976 0 976
cfi=(13)
cfn=(68)
calls=976 0x404f1a -58 
* * 15616 5856 4880 2 0 1 2 0 1
+5 * 976 976
+1 * 976 976

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 3 0 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 488 0 488
+1 * 488
+3 * 488 0 488
+1 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +10 488 488
+4 * 488
+3 * 488 0 488
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=488 0x404bc6 288 
* * 7320 2928 2440 3 0 0 3
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(122)
calls=488 0x404bc6 288 
* * 7320 2928 2440
+5 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=488 0x404be0 -36 
* * 178126 57360 54436 4 0 22 4 0 22 7952 493 972
+5 +1 488
+4 * 488 488
+1 * 488 488
+1 * 488 488

fn=(128)
0x404878 277 530 0 530
+1 * 530
+3 * 530
+4 * 530 0 530 1 0 0 1
+4 +1 530 530
+4 * 530
+3 * 530 0 530
cfi=(13)
cfn=(130)
calls=530 -33 -66 
* * 3180 1590 1060 0 0 1 0 0 1
+5 * 530 530
+1 * 530 530

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 976 0 976
+1 * 976
+3 * 976
+4 * 976 0 976
+4 +1 976 976
+4 * 976
+3 * 976 0 976
cfi=(13)
cfn=(134)
calls=976 0x404e98 -58 
* * 15616 5856 4880 2 0 0 2
+5 * 976 976
+1 * 976 976

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +8 488 0 488
+4 +3 488 488
+4 * 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=488 0x404eb5 -22 
* * 125422 39792 36380 1 0 22 1 0 22 7952 493 972
+5 +1 488 488
+1 * 488 488

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 3 1 0 3 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 976 0 976 1 0 0 1
+1 * 976
+3 * 976
+4 * 976 0 976
+4 +1 976 976
+4 * 976
+3 * 976 0 976
cfi=(13)
cfn=(124)
calls=976 0x404d36 -77 
* * 5856 2928 1952 2 0 0 2
+5 * 976 976
+1 * 976 976

fn=(56)
0x404c38 288 976 0 976 1 0 0 1
+1 * 976
+3 * 976
+4 * 976 0 976 1 0 0 1
+4 +1 976 976
+4 * 976
+3 * 976 0 976
cfi=(13)
cfn=(58)
calls=976 0x404d8f -77 
* * 5856 2928 1952 1 0 0 1
+5 * 976 976
+1 * 976 976

fn=(74)
0x404f37 368 502 0 502
+1 * 502
+3 * 502
+4 * 502 0 502 1 0 0 1
+4 * 502 0 502
+4 * 502 0 502
+4 +2 502 502
+4 * 502 502
+4 * 502
+3 * 502
+3 * 502
+4 * 502 0 502
+4 +1 502 502
+5 * 502 0 0 0 0 0 0 0 0 502
jcnd=7/502 +33 +2 
* * 
+2 +1 495 495
+4 * 495
+8 * 495 495
+4 * 495 495
+4 * 495
+3 * 495 0 0 1 0 0 1
+3 * 495 0 495 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=495 0x3877c83840 0 
* * 112490 34605 33620 11 2 5 11 2 5 7526 512 490 120
* * 495 495 0 1 1 0 1 1 0 0 0 495
+5 +1 502 502
+4 * 502
+8 * 502 502
+4 * 502
+3 +1 502 502
+1 * 502 502

fn=(140)
0x404eb5 368 502 0 502
+1 * 502
+3 * 502
+4 * 502 0 502 1 0 0 1
+4 * 502 0 502
+4 * 502 0 502 0 0 1 0 0 1
+4 +2 502 502
+4 * 502 502
+4 * 502
+3 * 502
+3 * 502
+4 * 502 0 502
+4 +1 502 502
+5 * 502 0 0 0 0 0 0 0 0 502
jcnd=7/502 +33 +2 
* * 
+2 +1 495 495
+4 * 495
+8 * 495 495
+4 * 495 495
+4 * 495
+3 * 495
+3 * 495 0 495
cob=(2)
cfi=(9)
cfn=(78)
calls=495 0x3877c83840 0 
* * 112490 34605 33620 0 0 23 0 0 23 7526 497 490
* * 495 495 0 0 0 0 0 0 0 0 0 495
+5 +1 502 502
+4 * 502
+8 * 502 502
+4 * 502
+3 +1 502 502
+1 * 502 502

fn=(72)
0x404db7 379 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488 1 0 0 1
+4 * 488 0 488
+4 * 488 0 488
+4 +8 488 0 488
+4 +3 488 488
+4 * 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfn=(74)
calls=488 0x404f37 -22 
* * 125422 39792 36380 14 3 3 14 3 3 7952 509 972 120
+5 +1 488 488
+1 * 488 488

fn=(126)
0x404be0 424 488 0 488
+1 * 488
+3 * 488 0 488
+2 * 488 0 488
+1 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 * 488 0 488
+4 +4 488 488
+4 * 488
+3 * 488 0 488
cfn=(128)
calls=488 0x404878 277 
* * 7320 2928 2440 1 0 0 1
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(132)
calls=488 0x404d44 277 
* * 12200 4392 3904 2 0 0 2
+5 * 488
+3 * 488 488
+4 * 488
+3 * 488 0 488
cfn=(132)
calls=488 0x404d44 277 
* * 12200 4392 3904
+5 * 488
+3 * 488
+3 * 488
+3 * 488 0 488
cfn=(138)
calls=488 0x404d5e -49 
* * 132742 42232 39308 1 0 22 1 0 22 7952 493 972
+5 +1 488
+4 * 488 488
+1 * 488 488
+2 * 488 488
+1 * 488 488

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fl=(10)
fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 976 0 976 1 0 0 1
+1 * 976
+3 * 976 0 976
+4 +1 976 976
+4 * 976 976
+1 * 976 976

fn=(110)
0x404380 726 976 0 976 1 0 0 1
+1 * 976
+3 * 976 0 976
+4 * 976 0 976
+4 * 976 976
+4 * 976 976
+3 * 976 976
+4 * 976 0 976
+3 * 976 976
+1 * 976 976

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 976 0 976 1 0 0 1
+1 * 976
+3 * 976 0 976
+4 +1 976 976
+4 * 976 976
+1 * 976 976

fn=(44)
0x404468 726 976 0 976
+1 * 976
+3 * 976 0 976
+4 * 976 0 976
+4 * 976 976
+4 * 976 976
+3 * 976 976
+4 * 976 0 976 1 0 0 1
+3 * 976 976
+1 * 976 976

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(262)
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 495 0 495 1 0 0 1
+1 * 495
+3 * 495 0 495
+4 * 495 0 495 1 0 0 1
+4 * 495 495
+1 * 495 495

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 495 0 495 1 0 0 1
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 +4 495 495
+4 * 495 495
+4 * 495
+3 * 495
+3 * 495 0 495
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=495 0x40454c -14 
* * 2970 990 1485 1 0 0 1
+5 +2 495 495
+1 * 495 495

fn=(150)
0x40326c 148 495 0 495
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 * 495 0 495
+4 +3 495 495 0 1 0 0 1
+4 * 495 495
+4 * 495
+3 * 495
+3 * 495 0 495
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=495 0x403d1a -29 
* * 8910 2970 3465 3 0 0 3
+5 +1 495 495
+1 * 495 495

fn=(180)
0x40334a 148 495 0 495
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 * 495 0 495
+4 +3 495 495
+4 * 495 495
+4 * 495
+3 * 495
+3 * 495 0 495
cfn=(182)
calls=495 0x403dcc -29 
* * 8910 2970 3465 2 0 0 2
+5 +1 495 495
+1 * 495 495

fn=(152)
0x403d1a 122 495 0 495 1 0 0 1
+1 * 495
+3 * 495
+4 * 495 0 495
+4 * 495 0 495
+4 +4 495 495
+4 * 495 495
+4 * 495
+3 * 495
+3 * 495 0 495
cfn=(154)
calls=495 0x4044f8 -14 
* * 2970 990 1485 2 0 0 2
+5 +2 495 495
+1 * 495 495

fn=(184)
0x40454c 112 495 0 495 1 0 0 1
+1 * 495
+3 * 495 0 495
+4 * 495 0 495
+4 * 495 495
+1 * 495 495

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2124 390 388 0 5 6 0 5 6 300 38 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 0 3 0 0 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 3 3 0 3 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 15 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 2908 625 564 12 8 5 12 8 5 466 52 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 1 0 1 1 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 244 0 244 1 0 0 1
+1 * 244
+3 * 244
+4 * 244 0 244
+4 * 244 0 244
+4 +1 244 244
+4 * 244
+3 * 244 0 244
cfi=(2)
cfn=(2)
calls=244 0x402d74 645 
* * 3172 1464 488
+5 * 244
+3 * 244 0 244
+3 +1 244 244
+6 * 244 0 244
+3 * 244 244
+6 * 244 0 244
+3 +1 244 244
+6 * 244 0 244 1 0 0 1
+3 * 244 244
+6 * 244 0 244
+3 +2 244 0 244
+7 * 244
jump=244 +86 * 
* * 
+2 +1 30134 30134
+3 * 30134
+3 * 30134 30134
+4 * 30134
+3 * 30134
+3 * 30134 0 30134
cfi=(2)
cfn=(144)
calls=30134 0x402d9a 770 
* * 331474 150670 90402
+5 * 30134 30134
+4 * 30134 30134
+5 * 30134
+4 * 30134 0 30134
+5 +1 30134 30134
+3 * 30134
+3 * 30134 30134
+4 * 30134
+3 * 30134
+3 * 30134 0 30134
cfi=(2)
cfn=(146)
calls=30134 0x402dba 770 
* * 331474 150670 90402 1 0 0 1
+5 * 30134 30134
+2 * 30134
+4 * 30134 30134
+5 * 30134
+4 * 30134 0 30134
+5 -2 30134 0 30134
+4 * 30134 30134
+3 * 30134
+3 * 30134 30134
+3 * 30134 0 0 0 0 0 0 0 0 30134 245
jcnd=29890/30134 -93 +1 
* * 
-9 * 244 244 0 1 0 0 1
+3 * 244
+3 * 244 244
+3 * 244 0 0 0 0 0 0 0 0 244
jcnd=244/244 -93 +1 
* * 
+2 +4 244 244
+3 * 244
+3 * 244
+4 * 244 244 0 1 0 0 1
+5 * 244
+4 * 244
+3 * 244 0 244
+5 +1 244 244
+3 * 244
+3 * 244
+4 * 244 244
+5 * 244
+4 * 244
+3 * 244 0 244
+5 +1 244 0 244
+7 * 244
jump=244 0x4016ee * 
* * 
+2 +1 30134 30134
+3 * 30134
+3 * 30134 30134
+4 * 30134
+3 * 30134 0 0 1 0 0 1
+3 * 30134 0 30134
cfi=(2)
cfn=(146)
calls=30134 0x402dba 770 
* * 331474 150670 90402
+5 * 30134 30134
+2 * 30134
+4 * 30134 30134
+5 * 30134 0 30134
+5 +1 30134 30134
+3 * 30134
+3 * 30134 30134
+4 * 30134
+3 * 30134
+3 * 30134 0 30134
cfi=(2)
cfn=(144)
calls=30134 0x402d9a 770 
* * 331474 150670 90402
+5 * 30134 30134
+4 * 30134 30134
+5 * 30134 0 30134
+5 +1 30134 30134
+5 * 30134 30134
+5 * 30134 30134
+5 * 30134
+4 * 30134 0 30134
+5 +1 30134 30134
+5 * 30134 30134
+5 * 30134 30134
+5 * 30134
+4 * 30134 0 30134
+5 -4 30134 0 30134
+4 * 30134 30134
+3 * 30134
+3 * 30134 30134
+3 * 30134 0 0 0 0 0 0 0 0 30134 245
jcnd=29890/30134 0x401672 +1 
* * 
-9 * 244 244 0 1 0 0 1
+3 * 244
+3 * 244 244
+3 * 244 0 0 0 0 0 0 0 0 244
jcnd=244/244 0x401672 +1 
* * 
+6 +6 244 244 0 1 0 0 1
+5 * 244 244
+5 * 244 0 244
+5 +2 244 244
+3 +1 244 0 244
+3 * 244 244
+5 * 244 244
+1 * 244 244

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 244
+7 * 244
+7 * 244
+3 * 244
+3 * 244 0 244
cfi=(2)
cfn=(4)
calls=244 0x4030b2 310 
* * 242883 70048 65347 65 23 16 65 23 16 15442 746 974 120
+5 * 244
+7 * 244
+7 * 244
+3 * 244
+3 * 244 0 244
cfi=(2)
cfn=(80)
calls=244 0x402ff4 310 
* * 244337 69763 64180 48 7 49 48 7 49 15798 767 974
+5 * 244 0 0 1 0 0 1
+7 * 244
+7 * 244
+3 * 244
+3 * 244 0 244
cfn=(142)
calls=244 0x401585 -52 
* * 3149796 1392264 727364 8 0 0 8 0 0 60756 490
+5 * 244 0 244
+8 * 244 244
+6 * 244 0 244
+6 * 244
+7 * 244
+3 * 244 0 244
cfi=(2)
cfn=(148)
calls=244 0x402df4 414 
* * 60394 18926 13449 33 5 0 33 5 0 6592 215 488
+5 * 244
+7 * 244
+3 * 244 0 244 1 0 0 1
cfi=(2)
cfn=(178)
calls=244 0x402e74 414 
* * 63802 20222 14405 7 1 0 7 1 0 7576 20 488
+5 +2 244
+7 * 244
+7 * 244
+3 * 244
+3 * 244 0 244
cfi=(2)
cfn=(4)
calls=244 0x4030b2 310 
* * 242500 70018 65236 2 1 1 2 1 1 15406 454 974
+5 * 244
+7 * 244
+7 * 244
+3 * 244
+3 * 244 0 244
cfi=(2)
cfn=(80)
calls=244 0x402ff4 310 
* * 243313 69693 64011 0 0 2 0 0 2 15637 450 974
+5 * 244 244
+6 * 244 0 0 1 0 0 1
+7 * 244
+7 * 244 0 244
+6 * 244 244
+8 * 244
+3 * 244
+3 * 244 0 244
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=244 0x401719 -33 
* * 1460828 608048 335134 4 0 0 4 0 0 30378 245
+5 * 244 0 244
+8 * 244 244
+6 * 244 0 244
+6 * 244
+7 * 244 0 0 1 0 0 1
+3 * 244 0 244
cfi=(2)
cfn=(148)
calls=244 0x402df4 414 
* * 60394 18926 13449 0 0 0 0 0 0 6592 210 488
+5 * 244
+7 * 244
+3 * 244 0 244
cfi=(2)
cfn=(178)
calls=244 0x402e74 414 
* * 63802 20222 14405 0 0 0 0 0 0 7576 15 488
+5 +2 244 244
+7 * 244
+3 * 244 0 244
cfi=(2)
cfn=(2)
calls=244 0x402d74 645 
* * 3172 1464 488
+5 * 244 244
+6 * 244
+3 * 244
+3 * 244
+3 * 244 244
+7 * 244
+3 * 244 0 0 1 0 0 1
+3 * 244 0 244
cfi=(2)
cfn=(144)
calls=244 0x402d9a 770 
* * 2684 1220 732
+5 * 244
+3 * 244
+7 * 244
+3 * 244
+3 * 244 0 244
cfi=(2)
cfn=(200)
calls=244 0x402eda 901 
* * 26368 9640 7476 38 25 11 38 25 11 1234 68 41
+5 +1 244 244
+7 * 244
+3 * 244 0 244
cfi=(2)
cfn=(10)
calls=244 0x402f54 645 
* * 3172 1464 488 0 1 0 0 1
+5 * 244 244
+6 * 244
+3 * 244
+3 * 244
+3 * 244 244
+7 * 244 0 0 1 0 0 1
+3 * 244
+3 * 244 0 244
cfi=(2)
cfn=(146)
calls=244 0x402dba 770 
* * 2684 1220 732
+5 * 244
+3 * 244
+7 * 244
+3 * 244
+3 * 244 0 244
cfi=(2)
cfn=(244)
calls=244 0x402f7a 901 
* * 25617 9422 7303 19 20 16 19 20 16 1077 56 41
+5 +1 244 244
+7 * 244
+3 * 244 0 244
cfi=(2)
cfn=(10)
calls=244 0x402f54 645 
* * 3172 1464 488
+5 * 244 244
+6 * 244
+3 * 244
+3 * 244
+3 * 244 244 0 1 0 0 1
+7 * 244
+3 * 244
+3 * 244 0 244
cfi=(2)
cfn=(146)
calls=244 0x402dba 770 
* * 2684 1220 732
+5 * 244 244
+2 * 244
+4 * 244 244
+8 * 244 244
+8 * 244 0 244
+8 +1 244 244
+7 * 244
+3 * 244 0 244
cfi=(2)
cfn=(2)
calls=244 0x402d74 645 
* * 3172 1464 488
+5 * 244 244 0 1 0 0 1
+6 * 244
+3 * 244
+3 * 244
+3 * 244 244
+7 * 244
+3 * 244
+3 * 244 0 244
cfi=(2)
cfn=(144)
calls=244 0x402d9a 770 
* * 2684 1220 732
+5 * 244 244
+4 * 244 244
+8 * 244
+4 * 244 244
+8 * 244
+3 * 244 0 244
+8 +2 244 0 244
+7 -12 244 244
+8 * 244 244
+7 * 244 0 0 0 0 0 0 0 0 244 3
jcnd=1/244 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 244
+7 * 244
+3 * 244 0 244
cfi=(2)
cfn=(2)
calls=244 0x402d74 645 
* * 3172 1464 488 2 0 1 2 0 1
+5 * 244
+3 * 244 244
+7 * 244
+3 * 244 0 244
cfi=(2)
cfn=(2)
calls=244 0x402d74 645 
* * 3172 1464 488 0 1 0 0 1
+5 * 244
+3 * 244 0 0 0 0 0 0 0 0 244
+2 * 244 0 0 1 0 0 1
+5 * 244
jump=244 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 244
+2 * 244 0 0 0 0 0 0 0 0 244
jcnd=244/244 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 244 0 244
+1 * 244
+3 * 244
+4 * 244 0 244
+4 * 244 0 244
+4 * 244 0 244
+5 +1 244 244
+4 * 244
+3 * 244 0 244
cfi=(2)
cfn=(2)
calls=244 0x402d74 645 
* * 3172 1464 488
+5 * 244
+3 * 244 0 244
+3 +1 244 244 0 1 0 0 1
+6 * 244 0 244
+3 * 244 244
+6 * 244 0 244
+3 +2 244 0 244
+7 * 244
jump=244 +86 * 
* * 
+2 +1 30134 30134
+3 * 30134
+3 * 30134 30134
+4 * 30134
+3 * 30134
+3 * 30134 0 30134
cfi=(2)
cfn=(144)
calls=30134 0x402d9a 770 
* * 331474 150670 90402
+5 * 30134 30134
+4 * 30134 30134
+5 * 30134
+4 * 30134 0 30134
+5 +1 30134 30134
+3 * 30134
+3 * 30134 30134
+4 * 30134
+3 * 30134
+3 * 30134 0 30134
cfi=(2)
cfn=(146)
calls=30134 0x402dba 770 
* * 331474 150670 90402
+5 * 30134 30134
+2 * 30134
+4 * 30134 30134
+5 * 30134
+4 * 30134 0 30134
+5 -2 30134 0 30134
+4 * 30134 30134
+3 * 30134
+3 * 30134 30134
+3 * 30134 0 0 0 0 0 0 0 0 30134 245
jcnd=29890/30134 -93 +1 
* * 
-9 * 244 244 0 1 0 0 1
+3 * 244
+3 * 244 244
+3 * 244 0 0 0 0 0 0 0 0 244
jcnd=244/244 -93 +1 
* * 
+2 +4 244 244
+3 * 244
+3 * 244 0 0 1 0 0 1
+4 * 244 244
+5 * 244
+4 * 244
+3 * 244 0 244
+5 +1 244 244
+3 * 244
+3 * 244
+4 * 244 244
+5 * 244
+4 * 244
+3 * 244 0 244
+5 +1 244 244
+5 * 244 244
+5 * 244 244
+5 * 244 0 0 1 0 0 1
+4 * 244
+3 * 244 0 244
+5 +2 244 244
+3 +1 244 0 244
+3 * 244 244
+5 * 244 244
+1 * 244 244

fl=(4)
fn=(90)
0x4047b2 115 488 0 488 1 0 0 1
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488 1 0 0 1
+4 +1 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfi=(5)
cfn=(92)
calls=488 0x4049d4 -35 
* * 2928 976 1464 1 0 0 1
+5 * 488 488
+1 * 488 488

fn=(194)
0x403d7e 121 488 0 488 1 0 0 1
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 488
+4 * 488
+3 * 488 0 488
cfi=(5)
cfn=(196)
calls=488 0x404520 -35 
* * 2440 976 976
+5 * 488 488
+1 * 488 488

fn=(16)
0x404804 115 488 0 488 1 0 0 1
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 0 488
+4 +1 488 488
+4 * 488 488
+4 * 488
+3 * 488
+3 * 488 0 488
cfi=(5)
cfn=(18)
calls=488 0x404a28 -35 
* * 2928 976 1464 1 0 1 1 0 1
+5 * 488 488
+1 * 488 488

fn=(174)
0x403ccc 121 488 0 488
+1 * 488
+3 * 488
+4 * 488 0 488
+4 * 488 488
+4 * 488
+3 * 488 0 488
cfi=(5)
cfn=(176)
calls=488 0x4044cc -35 
* * 2440 976 976
+5 * 488 488
+1 * 488 488

fl=(3)
fn=(8)
0x403afa 224 488 0 488 1 0 0 1
+1 * 488
+3 * 488 0 488
+4 * 488 488
+4 * 488 488
+1 * 488 488

fn=(264)
0x4036b1 215 244 0 244
+1 * 244
+3 * 244
+4 * 244 0 244
+4 * 244 0 244
+4 * 244 0 244
+4 +1 244 244
+4 * 244 244
+4 * 244 244
+4 * 244
+3 * 244
+3 * 244 0 244
cfi=(5)
cfn=(266)
calls=244 0x40406a -87 
* * 5856 1952 2196 0 15 7 0 15 7 244
+5 * 244 244
+1 * 244 244

fn=(212)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102)
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28)
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84)
0x4039ed 224 488 0 488
+1 * 488
+3 * 488 0 488
+4 * 488 488
+4 * 488 488
+1 * 488 488

fn=(222)
0x403373 215 244 0 244
+1 * 244
+3 * 244
+4 * 244 0 244
+4 * 244 0 244
+4 * 244 0 244
+4 +1 244 244
+4 * 244 244
+4 * 244 244
+4 * 244
+3 * 244
+3 * 244 0 244
cfi=(5)
cfn=(224)
calls=244 0x403df2 -87 
* * 5856 1952 2196 0 16 3 0 16 3 244
+5 * 244 244
+1 * 244 244

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 990 0 990 1 0 0 1
+5 0 990 0 990
+5 0 990
+3 0 990 0 990
+5 0 990
+4 0 990 990 0 0 1 0 0 1
+7 0 990 990 0 0 1 0 0 1
+3 0 990
+3 0 990 0 0 0 0 0 0 0 0 990
+6 0 990 990 0 0 1 0 0 1
+7 0 990 990 0 1 1 0 1 1
+4 0 990
+3 0 990 0 0 0 0 0 0 0 0 990
+2 0 990 990 0 0 1 0 0 1
+3 0 990
+3 0 990 0 0 0 0 0 0 0 0 990
jcnd=990/990 +97 0 
* 0 
+18 0 990
+3 0 990
+3 0 990 0 990
cfn=(38) _int_malloc
calls=990 0x3877c79a00 0 
* 0 221229 26833 31488 42 32 47 42 32 47 34275 1488
+5 0 990
+3 0 990
+3 0 990 0 0 0 0 0 0 0 0 990
+2 0 990
+3 0 990 0 0 0 0 0 0 0 0 990
+2 0 990
+3 0 990 0 0 0 0 0 0 0 0 990 5
+2 0 990 990
+7 0 990 0 0 0 0 0 0 0 0 990
jcnd=990/990 +13 0 
* 0 
+13 0 990 0 990
+2 0 990 0 0 0 0 0 0 0 0 990 12
+6 0 990
+3 0 990 990
+4 0 990 990
+5 0 990 990
+5 0 990
+4 0 990 990
+1 0 990 0 0 1 0 0 1
+5 0 990 990 0 0 1 0 0 1
+7 0 990 0 0 0 0 0 0 0 0 990
jcnd=990/990 +14 0 
* 0 
+14 0 990 0 990 1 0 0 1
+3 0 990 0 0 0 0 0 0 0 0 990
+6 0 990
jump=990 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 990 0 990 1 0 0 1
+2 0 990
+3 0 990
+3 0 990 0 990
+2 0 990
+3 0 990 0 990
+1 0 990
+3 0 990 0 990
+1 0 990
+3 0 990
+4 0 990
+3 0 990 0 0 0 0 0 0 0 0 990
+6 0 990
+4 0 990
+3 0 990 0 0 0 0 0 0 0 0 990 4
jcnd=10/990 0x3877c838d1 0 
* 0 
+2 0 980
+3 0 980
+3 0 980
+3 0 980
+3 0 980
+3 0 980 0 0 0 0 0 0 0 0 980
jcnd=980/980 +41 0 
* 0 
+41 0 980 0 0 1 0 0 1
+3 0 980 0 0 0 0 0 0 0 0 980
jcnd=980/980 0x3877c839c0 0 
* 0 
+24 0 980
+3 0 980
+4 0 980
+3 0 980
+3 0 980
+3 0 980
+3 0 980
+3 0 980 0 0 0 0 0 0 0 0 980 488
jcnd=496/980 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 494
+10 0 494 494 0 0 1 0 0 1
+3 0 494
+4 0 494 0 494
+3 0 494
+4 0 494
+4 0 494 0 0 0 0 0 0 0 0 494
jcnd=494/494 -18 0 
* 0 
-18 0 1538 1538
+3 0 1538
+4 0 1538 0 1538
+3 0 1538
+4 0 1538
+4 0 1538 0 0 0 0 0 0 0 0 1538 8
jcnd=1044/1538 -18 0 
* 0 
+2 0 990
+4 0 990
+3 0 990 990
+1 0 990 990
+1 0 990 990
+2 0 990 990 0 1 0 0 1
+2 0 990 990
0x3877c839c0 0 980 0 0 1 0 0 1
+3 0 980
+3 0 980
+3 0 980
+4 0 980 0 980 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=980 0x3877c89b20 0 
* 0 168934 62228 60268 6 1 27 6 1 27 8090 509 980 120
+5 0 980
jump=980 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 990 990 0 1 1 0 1 1
+7 0 990 990 0 0 1 0 0 1
+3 0 990
+3 0 990 0 0 1 0 0 1 0 0 990
+6 0 990
+3 0 990 0 0 0 0 0 0 0 0 990
+6 0 990 990
+4 0 990
+4 0 990
+2 0 990 0 0 0 0 0 0 0 0 990
+2 0 990
+2 0 990
+7 0 990 0 0 0 0 0 0 0 0 990
jcnd=990/990 +14 0 
* 0 
+14 0 990
+2 0 990
cfn=(170) _int_free
calls=990 0x3877c78650 0 
* 0 94417 24923 13927 19 3 0 19 3 0 22743 472

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 9
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13 1
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 2 0 0 2
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 990 0 990 1 0 0 1
+2 0 990 0 990
+2 0 990 0 990
+2 0 990
+3 0 990 0 990
+2 0 990 0 990
+1 0 990 0 990
+1 0 990
+3 0 990
+4 0 990 990
+4 0 990 0 990
+4 0 990
+3 0 990
+4 0 990
+3 0 990
+3 0 990
+3 0 990 0 0 1 0 0 1 0 0 990
+6 0 990
+4 0 990 0 0 0 0 0 0 0 0 990
+6 0 990
+4 0 990 0 0 0 0 0 0 0 0 990
+6 0 990 990
+7 0 990 0 0 0 0 0 0 0 0 990 2
jcnd=866/990 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 866
+2 0 866 0 0 0 0 0 0 0 0 866
+6 0 866 866 0 1 0 0 1
+4 0 866
+3 0 866
+2 0 866 0 0 0 0 0 0 0 0 866
jcnd=866/866 0x3877c78a40 0 
* 0 
+6 0 866 866
+4 0 866
+3 0 866 0 0 0 0 0 0 0 0 866
+6 0 866 866
+5 0 866
+4 0 866 0 0 0 0 0 0 0 0 866
jcnd=866/866 0x3877c7907c 0 
* 0 
+6 0 866 866
+5 0 866
+4 0 866 0 0 0 0 0 0 0 0 866
+6 0 866
+4 0 866 0 0 1 0 0 1 0 0 866
+6 0 866
+4 0 866 866
+7 0 866 0 0 0 0 0 0 0 0 866
+6 0 866 866
+6 0 866
+2 0 866 0 0 0 0 0 0 0 0 866
+6 0 866 866
+4 0 866 0 0 0 0 0 0 0 0 866 5
jcnd=862/866 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 866 866 0 1 0 0 1
+4 0 866 0 0 0 0 0 0 0 0 866 346
jcnd=356/866 0x3877c78bf0 0 
* 0 
+6 0 510 510 0 0 1 0 0 1
+6 0 510 0 0 1 0 0 1 0 0 510 46
jcnd=45/510 0x3877c78a78 0 
* 0 
+6 0 465 465
+5 0 465 465
+5 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
+6 0 465 465
+9 0 465 0 465
+4 0 465 0 465
+4 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=457/465 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 465
+3 0 465
+4 0 465 465
+4 0 465 465
+4 0 465 0 0 0 0 0 0 0 0 465
-12 0 45
+4 0 45 45
+4 0 45 45
+4 0 45 0 0 0 0 0 0 0 0 45
+6 0 510
+7 0 510 0 510
+4 0 510 0 510
+4 0 510 0 0 0 0 0 0 0 0 510 63
jcnd=441/510 +18 0 
* 0 
+2 0 69 0 69
+8 0 69 0 69
+8 0 69 0 69
+4 0 69
+3 0 69 0 69 1 0 0 1
+4 0 69
+4 0 69 0 69
+4 0 69 0 69
+4 0 69
+7 0 69 0 0 0 0 0 0 0 0 69
jcnd=69/69 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 356
+7 0 356 0 0 0 0 0 0 0 0 356
jcnd=356/356 0x3877c78b20 0 
* 0 
0x3877c78a40 0 866 0 0 1 0 0 1
+5 0 866 866
+4 0 866 866
+7 0 866 0 0 0 0 0 0 0 0 866
jcnd=866/866 +16 0 
* 0 
+16 0 866 0 866
+5 0 866 0 0 0 0 0 0 0 0 866
+6 0 866
+3 0 866
jump=866 0x3877c7878f 0 
* 0 
+10 0 45 0 45
+6 0 45 0 0 1 0 0 1
jump=45 0x3877c78885 0 
* 0 
0x3877c78b20 0 866 866 0 1 0 0 1
+4 0 866
+2 0 866 0 0 0 0 0 0 0 0 866
+6 0 866 866
+7 0 866 0 0 0 0 0 0 0 0 866
jcnd=866/866 +15 0 
* 0 
+15 0 866 0 866 1 0 0 1
+4 0 866 0 0 0 0 0 0 0 0 866 2
+6 0 866
+4 0 866 866
+1 0 866 866
+1 0 866 866
+2 0 866 866
+2 0 866 866
+2 0 866 866
+2 0 866 866
0x3877c78bf0 0 356 0 0 1 0 0 1
+3 0 356 0 356
+4 0 356
+3 0 356
+4 0 356 0 356 1 0 0 1
+4 0 356
jump=356 0x3877c788cf 0 
* 0 
0x3877c7907c 0 866 866 0 1 1 0 1 1
+4 0 866 0 0 1 0 0 1
+7 0 866
+4 0 866
+3 0 866
+3 0 866 0 0 0 0 0 0 0 0 866
jcnd=866/866 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 980 0 0 1 0 0 1
+7 0 980
+3 0 980
+3 0 980 980 0 0 1 0 0 1
+4 0 980
+4 0 980 0 0 0 0 0 0 0 0 0 0 980 120
jump=120 0x3877c89be8 0 
* 0 
jump=128 0x3877c89bd0 0 
* 0 
jump=120 0x3877c89bb8 0 
* 0 
jump=120 +11 0 
* 0 
jump=120 0x3877c89c48 0 
* 0 
jump=122 0x3877c89c30 0 
* 0 
jump=120 0x3877c89c18 0 
* 0 
jump=130 0x3877c89c00 0 
* 0 
+11 0 120 120
+3 0 120
+4 0 120
+4 0 120 120
+4 0 120
+4 0 120 0 120
+4 0 120
+9 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-40 0 7350 7350
+4 0 7350 0 7350 0 0 3 0 0 3
+4 0 7350 7350
+4 0 7350 0 7350
+4 0 7350 7350
+4 0 7350 0 7350 0 0 1 0 0 1
+4 0 7350 7350
+4 0 7350 0 7350
+4 0 7350
+4 0 7350
+4 0 7350 0 0 0 0 0 0 0 0 7350 505
jcnd=944/7350 0x3877c89c60 0 
* 0 
-32 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122 122
+4 0 122 0 122
+4 0 122
+4 0 122
+4 0 122 0 0 0 0 0 0 0 0 122
jcnd=10/122 0x3877c89c60 0 
* 0 
-24 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
+4 0 120
+4 0 120 0 0 0 0 0 0 0 0 120
jcnd=8/120 0x3877c89c60 0 
* 0 
-16 0 130 130 0 1 0 0 1
+4 0 130 0 130
+4 0 130 0 0 1 0 0 1
+4 0 130
+4 0 130 0 0 0 0 0 0 0 0 130 4
jcnd=10/130 0x3877c89c60 0 
* 0 
+6 0 6862
+4 0 6862 6862
+3 0 6862 0 6862 0 0 1 0 0 1
+3 0 6862 6862
+4 0 6862 0 6862 0 0 3 0 0 3
+4 0 6862 6862
+4 0 6862 0 6862 0 0 18 0 0 18
+4 0 6862 6862
+4 0 6862 0 6862
+4 0 6862
jump=6862 -80 0 
* 0 
-30 0 120 120
+3 0 120 0 120
+3 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120 0 0 1 0 0 1
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
-24 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128 128
+4 0 128 0 128
+4 0 128
jump=128 -80 0 
* 0 
-16 0 120 120
+4 0 120 0 120
+4 0 120 120
+4 0 120 0 120
+4 0 120
jump=120 -80 0 
* 0 
+8 0 120 120
+3 0 120
+4 0 120 0 0 1 0 0 1
+4 0 120
+4 0 120
jump=120 -39 0 
* 0 
+9 0 128
+3 0 128 0 0 0 0 0 0 0 0 128
+6 0 128 128
+3 0 128
+4 0 128
jump=128 -72 0 
* 0 
+8 0 120
+4 0 120 120
+3 0 120 0 0 0 0 0 0 0 0 120
+2 0 120
+4 0 120
jump=120 -99 0 
* 0 
+11 0 130 130 0 1 0 0 1
+3 0 130
+4 0 130
+4 0 130
+4 0 130
jump=130 0x3877c89b78 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b70 0 
* 0 
+9 0 122 122
+3 0 122
+4 0 122
+4 0 122
+4 0 122
jump=122 0x3877c89b68 0 
* 0 
+9 0 120 120
+3 0 120
+4 0 120
+4 0 120
+4 0 120
jump=120 0x3877c89b60 0 
* 0 
+9 0 980 0 980 1 0 0 1
+3 0 980 980

fn=(104) alloc_perturb
0x3877c77180 0 864 864 0 1 0 0 1
+6 0 864
+2 0 864 0 0 0 0 0 0 0 0 864 1
+2 0 864 864

fn=(38)
0x3877c79a00 0 990 0 990 1 0 0 1
+2 0 990
+3 0 990 0 990
+2 0 990 0 990
+2 0 990 0 990 0 0 1 0 0 1
+2 0 990
+3 0 990 0 990
+1 0 990 0 990
+1 0 990
+4 0 990
+4 0 990 0 0 0 0 0 0 0 0 990
+6 0 990
+4 0 990
+6 0 990
+3 0 990
+4 0 990
+4 0 990
+4 0 990
+3 0 990 0 0 0 0 0 0 0 0 990
+6 0 990 990 0 1 1 0 1 1
+7 0 990 0 0 0 0 0 0 0 0 990 5
jcnd=868/990 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 24
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 126 126
+6 0 126
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
-14 0 864
+4 0 864 864
+1 0 864 864
+1 0 864 864
+2 0 864 864
+2 0 864 864
+2 0 864 864
+2 0 864 864
+7 0 885
+7 0 885 0 0 1 0 0 1 0 0 885 3
jcnd=2/885 0x3877c79b70 0 
* 0 
+2 0 883
+3 0 883
+5 0 883
+3 0 883
+4 0 883 0 883
+4 0 883
+2 0 883
+5 0 883 883 0 0 11 0 0 11
+4 0 883
+3 0 883 0 0 0 0 0 0 0 0 883
jcnd=883/883 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 907 243 192 8 2 0 8 2 0 187 26
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 884 0 0 1 0 0 1
+3 0 884
+3 0 884
+3 0 884
+4 0 884
+3 0 884
+4 0 884 0 884
+5 0 884
+3 0 884 0 884
+4 0 884 0 884
+4 0 884 0 884
+5 0 884
+3 0 884
+3 0 884
+3 0 884
+3 0 884
+4 0 884
+4 0 884 0 0 1 0 0 1
+4 0 884 0 884
+4 0 884
+4 0 884 0 884
+5 0 884 0 884
+5 0 884
+3 0 884
+3 0 884 0 884
+5 0 884
+5 0 884
+3 0 884 0 884
+4 0 884 0 884
+4 0 884
+6 0 884 0 884
+4 0 884 0 884
+5 0 884 0 0 1 0 0 1
+3 0 884
+3 0 884
+3 0 884
jump=884 +87 0 
* 0 
+8 0 808
+3 0 808
+4 0 808
+2 0 808
+2 0 808
+3 0 808
+3 0 808
+3 0 808
+2 0 808
+2 0 808
+5 0 808
+2 0 808 808 0 0 2 0 0 2
+4 0 808
+3 0 808
+4 0 808 0 808
+4 0 808 0 808 0 0 1 0 0 1
+8 0 808
+7 0 808 0 808
+4 0 808 0 808 0 0 2 0 0 2
+4 0 808 0 808
+4 0 808 0 0 0 0 0 0 0 0 808
-38 0 68
+3 0 68
+4 0 68 0 68
+4 0 68 0 68
+8 0 68
+7 0 68 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 1761 1761 0 1 0 0 1
+4 0 1761
+3 0 1761 0 0 0 0 0 0 0 0 1761 44
jcnd=845/1761 0x3877c79ef0 0 
* 0 
+6 0 916 916
+4 0 916 916 0 0 1 0 0 1
+4 0 916
+4 0 916 0 0 0 0 0 0 0 0 916
+6 0 916 916 0 1 1 0 1 1
+7 0 916 0 0 0 0 0 0 0 0 916
+6 0 916
+4 0 916
+7 0 916 0 0 0 0 0 0 0 0 916 3
jcnd=6/916 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 897
+3 0 897 0 897
+4 0 897 0 897
+5 0 897 0 0 0 0 0 0 0 0 897 12
jcnd=21/897 0x3877c7a090 0 
* 0 
+6 0 876
+7 0 876 0 0 0 0 0 0 0 0 876 10
jcnd=808/876 0x3877c79c50 0 
* 0 
+6 0 68 0 0 1 0 0 1
+3 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 5
jcnd=68/68 0x3877c79e15 0 
* 0 
0x3877c79e15 0 68 0 68
+4 0 68 0 68
+4 0 68
+3 0 68
jump=68 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 333
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 5
jcnd=387/406 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 845 0 0 1 0 0 1
+7 0 845
+3 0 845 0 0 0 0 0 0 0 0 845 1
jcnd=2/845 0x3877c7a0b0 0 
* 0 
+6 0 845 845 0 1 0 0 1
+4 0 845
+3 0 845
+3 0 845
+2 0 845
+4 0 845
+3 0 845
+3 0 845
+2 0 845
+2 0 845
+2 0 845
+2 0 845 845
+8 0 845
+5 0 845
+5 0 845
+2 0 845 0 0 0 0 0 0 0 0 845
-2 0 415
+2 0 415 0 0 0 0 0 0 0 0 415
+2 0 1260
+2 0 1260 0 0 0 0 0 0 0 0 1260 26
jcnd=629/1260 +64 0 
* 0 
+2 0 631
+8 0 631
+3 0 631
+3 0 631 0 0 0 0 0 0 0 0 631 1
jcnd=1/631 0x3877c79fc0 0 
* 0 
-6 0 776
+3 0 776
+3 0 776 0 0 0 0 0 0 0 0 776 5
jcnd=355/776 0x3877c79fc0 0 
* 0 
+2 0 1051
+2 0 1051 1051
+8 0 1051
+2 0 1051 0 0 0 0 0 0 0 0 1051 22
jcnd=776/1051 -20 0 
* 0 
+2 0 275
+2 0 275
+5 0 275
+3 0 275
+3 0 275
+2 0 275
+2 0 275
+5 0 275 0 0 0 0 0 0 0 0 275
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 6650
+4 0 6650
+2 0 6650
+2 0 6650 0 0 0 0 0 0 0 0 6650 422
jcnd=5852/6650 -8 0 
* 0 
-2 0 629 0 0 1 0 0 1
+2 0 629 0 0 0 0 0 0 0 0 629 15
jcnd=585/629 -8 0 
* 0 
+2 0 904 904 0 0 4 0 0 4
+4 0 904 0 0 1 0 0 1
+3 0 904 0 0 0 0 0 0 0 0 904 429
jcnd=489/904 0x3877c7a1cf 0 
* 0 
+6 0 415
+2 0 415
+4 0 415
+2 0 415
+2 0 415
+2 0 415 0 415
+8 0 415
jump=415 0x3877c79f30 0 
* 0 
+37 0 356 356 0 1 0 0 1
+5 0 356 356
+4 0 356
+4 0 356 356
+5 0 356 0 0 0 0 0 0 0 0 356
jcnd=356/356 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 21 0 0 1 0 0 1
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 489 489 0 1 1 0 1 1
+4 0 489 489
+4 0 489
+3 0 489 489
+4 0 489
+4 0 489
+3 0 489
+3 0 489 489
+4 0 489 0 0 0 0 0 0 0 0 489
+6 0 489 489
+4 0 489 0 0 0 0 0 0 0 0 489
+6 0 489 489 0 1 0 0 1
+8 0 489 0 489
+4 0 489 0 489
+4 0 489 0 0 0 0 0 0 0 0 489 7
jcnd=419/489 +38 0 
* 0 
+2 0 70 70 0 0 2 0 0 2
+4 0 70
+3 0 70 0 0 0 0 0 0 0 0 70
+2 0 70 70
+5 0 70 0 0 0 0 0 0 0 0 70
+6 0 70 70
+4 0 70 0 70
+4 0 70 70
+4 0 70 0 70
+4 0 70
+4 0 70 0 0 0 0 0 0 0 0 70
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 9
jcnd=21/419 0x3877c7a2e3 0 
* 0 
+6 0 468 468
+4 0 468 468 0 1 0 0 1
+4 0 468 0 0 0 0 0 0 0 0 468
+6 0 468
+4 0 468
+7 0 468 0 468 0 0 7 0 0 7
+4 0 468 0 468
+4 0 468 0 468
+4 0 468 0 468
+4 0 468 0 0 0 0 0 0 0 0 468 2
jcnd=2/468 +7 0 
* 0 
+2 0 466 0 466
+5 0 466
+7 0 466 0 0 0 0 0 0 0 0 466 4
jcnd=459/466 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 461 0 0 1 0 0 1
+7 0 461 0 461
+4 0 461
+3 0 461
+3 0 461
+4 0 461
+3 0 461
+4 0 461
+3 0 461
+3 0 461
+4 0 461 0 461
+4 0 461 0 461 0 0 1 0 0 1
+4 0 461
jump=461 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 21
+7 0 21 0 21
+6 0 21
+3 0 21 0 0 0 0 0 0 0 0 21
jcnd=21/21 +7 0 
* 0 
+7 0 489
+4 0 489 0 0 1 0 0 1
+3 0 489
+3 0 489 0 489
cfn=(104)
calls=489 0x3877c77180 0 
* 0 1956 978 0 1 0 0 1 0 0 489
+5 0 489
+3 0 489
jump=489 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 356 0 0 1 0 0 1
+7 0 356
+2 0 356
+4 0 356
+3 0 356
+3 0 356 0 356
+5 0 356
+3 0 356
+4 0 356
+3 0 356 0 0 1 0 0 1
+4 0 356
+4 0 356
+3 0 356
+4 0 356 0 356
+4 0 356 0 356 0 0 13 0 0 13
+4 0 356
+3 0 356
+3 0 356 0 356
cfn=(104)
calls=356 0x3877c77180 0 
* 0 1424 712 0 0 0 0 0 0 0 356 1
+5 0 356
+3 0 356
jump=356 0x3877c79ae3 0 
* 0 

totals: 5946264 2396959 1404936 238 86 97 238 86 97 184798 3739 5930 120
