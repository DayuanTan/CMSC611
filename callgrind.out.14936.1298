version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1298


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1650533455 - 1652453364
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1776 0 0 1 0 0 1
+3 0 1776 0 0 0 0 0 0 0 0 1776
+2 0 1776
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1776 0x3877c7b8b0 0 
* 0 199599 51047 26141 21 6 0 21 6 0 48993 793
* 0 1776 1776 0 1 1 0 1 1 0 0 0 1776

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1776 0 1776 1 0 0 1
+1 0 1776
+5 0 1776
+3 0 1776 0 1776
+1 0 1776
+4 0 1776 0 0 1 0 0 1
+3 0 1776
+4 0 1776
+3 0 1776 0 1776 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1776 0x3877c7aa50 0 
* 0 484815 70275 70460 49 38 55 49 38 55 80732 2796
* 0 1776 1776 0 1 1 0 1 1 0 0 0 1776
+5 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776
jcnd=1776/1776 +96 0 
* 0 
+96 0 1776 0 0 1 0 0 1
+4 0 1776 1776
+1 0 1776 1776
+1 0 1776 1776

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 880 0 880 1 0 0 1
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880 1 0 0 1
+4 +1 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=880 0x4049d4 -35 
* * 5280 1760 2640 1 0 0 1
+5 * 880 880
+1 * 880 880

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 880 0 880 1 0 0 1
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 880
+4 * 880
+3 * 880 0 880
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=880 0x404520 -35 
* * 4400 1760 1760
+5 * 880 880
+1 * 880 880

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 880 0 880 1 0 0 1
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=880 0x404a28 -35 
* * 5280 1760 2640 1 0 1 1 0 1
+5 * 880 880
+1 * 880 880

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 880
+4 * 880
+3 * 880 0 880
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=880 0x4044cc -35 
* * 4400 1760 1760
+5 * 880 880
+1 * 880 880

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880
+4 * 880 880
+4 * 880 880
+1 * 880 880

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 440 0 440
+1 * 440
+3 * 440
+4 * 440 0 440
+4 * 440 0 440
+4 * 440 0 440
+4 +1 440 440
+4 * 440 440
+4 * 440 440
+4 * 440
+3 * 440
+3 * 440 0 440
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=440 0x40406a -87 
* * 10560 3520 3960 0 28 20 0 28 20 440
+5 * 440 440
+1 * 440 440

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 880 0 880
+1 * 880
+3 * 880 0 880
+4 * 880 880
+4 * 880 880
+1 * 880 880

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 440 0 440
+1 * 440
+3 * 440
+4 * 440 0 440
+4 * 440 0 440
+4 * 440 0 440
+4 +1 440 440
+4 * 440 440
+4 * 440 440
+4 * 440
+3 * 440
+3 * 440 0 440
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=440 0x403df2 -87 
* * 10560 3520 3960 0 29 4 0 29 4 440 2
+5 * 440 440
+1 * 440 440

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760 0 1760
+4 +1 1760 1760
+4 * 1760 1760
+1 * 1760 1760

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760
+4 * 1760 0 1760
+4 +1 1760
+4 * 1760
+3 * 1760 0 1760 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1760 0x40500c 790 
* * 10560 5280 3520 1 0 0 1
+5 * 1760 1760
+3 * 1760 1760
+1 * 1760 1760

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 960 0 960
+1 * 960
+3 * 960 0 960
+4 +1 960 960
+4 * 960 960
+1 * 960 960

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760 0 1760
+4 +1 1760 1760 0 1 0 0 1
+4 * 1760 1760
+1 * 1760 1760

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 960 0 960
+1 * 960
+3 * 960 0 960 0 0 1 0 0 1
+4 +1 960 960
+4 * 960 960
+1 * 960 960

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760
+4 * 1760 0 1760
+4 +1 1760
+4 * 1760
+3 * 1760 0 1760
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1760 0x404ffe 790 
* * 10560 5280 3520 1 0 0 1
+5 * 1760 1760
+3 * 1760 1760
+1 * 1760 1760

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 880 0 880
+1 * 880
+3 * 880 0 880
+4 * 880 0 880
+4 * 880 880
+4 * 880 880
+1 * 880 880

fl=(5)
fn=(28)
0x404992 113 904 0 904 1 0 0 1
+1 * 904
+3 * 904 0 904
+4 +1 904
+10 * 904 904
+1 * 904 904

fn=(176)
0x4044cc 86 880 0 880
+1 * 880
+3 * 880 0 880
+4 * 880 880
+1 * 880 880

fn=(224)
0x403df2 129 440 0 440
+1 * 440
+3 * 440
+4 * 440 0 440
+4 * 440 0 440
+4 * 440 0 440
+4 +1 440 440
+4 * 440
+3 * 440
+5 * 440 0 440
cfi=(16)
cfn=(226)
calls=440 0x402d61 -20 
* * 3080 1320 1320
+5 * 440
+3 * 440 0 0 0 0 0 0 0 0 440 2
+2 * 440 440
+4 * 440 440 0 0 29 0 0 29
+2 * 440 0 440 0 0 4 0 0 4
+2 * 440 440
+1 * 440 440

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 888 0 888
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 * 888 0 888
+4 +1 888 888
+4 * 888
+3 * 888 0 888
cob=(5)
cfi=(8)
cfn=(164)
calls=888 0x387e4bb2f0 0 
* * 96618 23971 10945 23 4 0 23 4 0 23538 726 888
* * 888 888 0 1 1 0 1 1 0 0 0 888
+5 * 888 888
+1 * 888 888

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 888 0 888
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 * 888 0 888
+4 +1 888 888
+4 * 888
+3 * 888 0 888
cob=(5)
cfi=(8)
cfn=(164)
calls=888 0x387e4bb2f0 0 
* * 110085 28852 15196 0 3 0 0 3 0 27231 67 888
* * 888 888 0 0 0 0 0 0 0 0 0 888
+5 * 888 888
+1 * 888 888

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 * 888 0 888
+4 +2 888 888
+4 * 888
+3 * 888 0 888
cfn=(102)
calls=888 0x4048de +12 
* * 5328 1776 1776 1 0 0 1
+5 * 888 888
+4 * 888 0 0 1 0 0 1
+3 * 888
+2 * 888 0 0 0 0 0 0 0 0 888
jcnd=888/888 +7 +3 
* * 
+7 +3 888 888
+4 * 888
+4 * 888
+3 * 888 0 888
cob=(5)
cfi=(8)
cfn=(32)
calls=888 0x387e4bd0b0 0 
* * 255103 37180 35067 31 12 39 31 12 39 40974 1699 888
* * 888 888 0 0 0 0 0 0 0 0 0 888
+5 +1 888 888
+1 * 888 888

fn=(18)
0x404a28 81 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880 0 0 1 0 0 1
+4 * 880 0 880
+4 * 880 880
+1 * 880 880

fn=(92)
0x4049d4 81 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880
+4 * 880 0 880
+4 * 880 880
+1 * 880 880

fn=(196)
0x404520 86 880 0 880
+1 * 880
+3 * 880 0 880
+4 * 880 880
+1 * 880 880

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 * 888 0 888 1 0 0 1
+4 +2 888 888
+4 * 888
+3 * 888 0 888
cfn=(28)
calls=888 0x404992 +12 
* * 5328 1776 1776 1 0 0 1
+5 * 888 888
+4 * 888
+3 * 888
+2 * 888 0 0 0 0 0 0 0 0 888
jcnd=888/888 +7 +3 
* * 
+7 +3 888 888
+4 * 888
+4 * 888
+3 * 888 0 888
cob=(5)
cfi=(8)
cfn=(32)
calls=888 0x387e4bd0b0 0 
* * 258128 40199 40721 22 27 17 22 27 17 41534 1097 888
* * 888 888 0 1 1 0 1 1 0 0 0 888
+5 +1 888 888
+1 * 888 888

fn=(102)
0x4048de 113 904 0 904 1 0 0 1
+1 * 904
+3 * 904 0 904
+4 +1 904
+10 * 904 904
+1 * 904 904

fn=(266)
0x40406a 129 440 0 440
+1 * 440
+3 * 440
+4 * 440 0 440
+4 * 440 0 440
+4 * 440 0 440
+4 +1 440 440
+4 * 440
+3 * 440
+5 * 440 0 440
cfi=(16)
cfn=(226)
calls=440 0x402d61 -20 
* * 3080 1320 1320
+5 * 440
+3 * 440 0 0 0 0 0 0 0 0 440
+2 * 440 440
+4 * 440 440 0 0 28 0 0 28
+2 * 440 0 440 0 0 20 0 0 20
+2 * 440 440
+1 * 440 440

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +2 880 880
+4 * 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=880 0x404484 107 
* * 504754 171180 165904 25 3 6 25 3 6 19712 1100 1756 219
+5 * 880 880
+1 * 880 880

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +2 880 880 0 1 0 0 1
+4 * 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=880 0x404a36 450 
* * 480114 162380 157104 24 3 6 24 3 6 19712 1100 1756 219
+5 * 880 880
+1 * 880 880

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +2 880 880
+4 * 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=880 0x40439c 107 
* * 504754 171180 165904 7 1 38 7 1 38 19712 1084 1756
+5 * 880 880
+1 * 880 880

fn=(116)
0x40439c 107 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +10 880 880
+4 * 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=880 0x4047d7 -26 
* * 492434 166780 161504 7 1 38 7 1 38 19712 1084 1756
+5 +1 880 880
+1 * 880 880

fn=(118)
0x4047d7 91 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +2 880 880
+4 * 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=880 0x4049e2 450 
* * 480114 162380 157104 7 1 38 7 1 38 19712 1084 1756
+5 * 880 880
+1 * 880 880

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +10 880 880
+4 * 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(52)
calls=880 0x404829 -26 
* * 492434 166780 161504 25 3 6 25 3 6 19712 1100 1756 219
+5 +1 880 880
+1 * 880 880

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 880 0 880
+1 * 880
+3 * 880 0 880
+1 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=880 0x4043ca -45 
* * 31680 11440 12320 4 0 4 4 0 4
+5 +1 880 880 0 1 0 0 1
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
calls=880 0x404412 +43 
* * 314219 61813 57049 27 13 9 27 13 9 42778 1045 1760
+5 * 880
jump=880 +28 * 
* * 
+28 * 880
+4 * 880 880
+1 * 880 880
+1 * 880 880

fn=(14)
0x4043ca 90 880 0 880 1 0 0 1
+1 * 880
+3 * 880
+4 * 880 0 880 0 0 1 0 0 1
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfi=(4)
cfn=(16)
calls=880 0x404804 +24 
* * 15840 5280 6160 2 0 1 2 0 1
+5 * 880 880
+4 * 880 0 880 0 0 2 0 0 2
+7 * 880 880
+4 * 880 0 880 1 0 0 1
+8 * 880 880
+4 * 880 0 880
+8 +1 880 880
+1 * 880 880

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880
+2 * 880 0 880
+2 * 880 0 880
+1 * 880 0 0 1 0 0 1
+4 * 880 0 880
+4 * 880 0 880
+4 +2 880 880
+4 * 880
+3 * 880 0 880
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=880 0x4039fc 117 
* * 5280 2640 1760 2 0 0 2
+5 * 880
+3 * 880 0 880
cfi=(3)
cfn=(84)
calls=880 0x4039ed -88 
* * 5280 2640 1760
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=880 0x402d74 645 
* * 11440 5280 1760
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880
+3 * 880
+3 * 880 0 880 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=880 0x403a0a 134 
* * 362184 76211 69738 23 6 36 23 6 36 42244 1641 1760
+5 +4 880 880
+4 * 880
+3 * 880 0 880
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=880 0x40325e 113 
* * 5280 2640 1760 1 0 0 1
+5 * 880
+3 * 880 880
+4 * 880 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=880 0x403a98 565 
* * 22000 8800 7040 2 0 0 2
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(112) std::vector<float, std::allocator<float> >::begin() const
calls=880 0x403a68 547 
* * 22000 8800 7040
+5 * 880
+3 * 880
+3 * 880
+3 * 880
+3 * 880 0 880
cfi=(11)
cfn=(114)
calls=880 0x403ac9 -60 
* * 517954 175580 171184 7 1 38 7 1 38 19712 1084 1756
+5 -3 880 880
+4 * 880 0 880
+4 * 880
jump=880 +28 +4 
* * 
+28 +4 880
+4 * 880 880
+1 * 880 880
+2 * 880 880
+2 * 880 880
+1 * 880 880

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 * 888 0 888
+4 +2 888 888
+5 * 888 0 0 0 0 0 0 0 0 888 8
+2 +1 888 888
+4 * 888 888
+4 * 888 888
+4 * 888
+3 * 888
+3 * 888 0 888
cfi=(5)
cfn=(190)
calls=888 0x40452a -65 
* * 120741 32404 19636 0 3 0 0 3 0 27231 67 1776
+5 +1 888 888
+1 * 888 888

fn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
0x404236 167 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888 1 0 0 1
+4 * 888 0 888
+4 0 888 888
+5 0 888 0 0 0 0 0 0 0 0 888
+2 0 888 888
+4 0 888 888
+4 0 888
+5 0 888
+3 0 888
+3 0 888 0 888
fi=(6) ???
cfi=(5)
cfn=(26)
calls=888 0x404730 99 
* 0 281216 47303 47825 26 28 17 26 28 17 42422 1097 1776
+5 0 888
fi=(6)
jump=888 +7 0 
* 0 
+7 0 888 888
+1 0 888 888

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 880 0 880 1 0 0 1
+1 * 880
+3 * 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+4 * 880 0 880
+4 * 880
+4 * 880 0 0 1 0 0 1
+4 * 880
+3 * 880
+3 * 880 0 880
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=880 0x404468 726 
* * 8800 4400 3520 1 0 0 1
+5 * 880 880
+4 * 880 880
+1 * 880 880

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+3 * 880 0 880
+4 * 880
+4 * 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfi=(10)
cfn=(44)
calls=880 0x404468 726 
* * 8800 4400 3520
+5 * 880 880
+4 * 880 880
+1 * 880 880

fn=(86)
0x403a0a 134 880 0 880
+1 * 880
+3 * 880 0 880
+1 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=880 0x4042e2 -45 
* * 31680 11440 12320 5 0 0 5
+5 +1 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880 1 0 0 1
cfn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
calls=880 0x40432a +43 
* * 311144 58611 51258 17 6 36 17 6 36 42244 1641 1760
+5 * 880
jump=880 +28 * 
* * 
+28 * 880
+4 * 880 880
+1 * 880 880
+1 * 880 880

fn=(88)
0x4042e2 90 880 0 880 1 0 0 1
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880 1 0 0 1
cfi=(4)
cfn=(90)
calls=880 0x4047b2 +24 
* * 15840 5280 6160 3 0 0 3
+5 * 880 880
+4 * 880 0 880
+7 * 880 880
+4 * 880 0 880
+8 * 880 880
+4 * 880 0 880
+8 +1 880 880
+1 * 880 880

fn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0x4031ec 159 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880
+1 * 880
+4 * 880 0 880
+4 +2 880 880
+4 * 880 880 0 1 0 0 1
+4 * 880
+3 * 880 880
+4 * 880 880
+3 * 880
+3 * 880
+3 * 880
+4 * 880
+3 * 880 880
+4 * 880 880
+3 -1 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
calls=880 0x403ce6 +11 
* * 120408 32564 19634 24 5 0 24 5 0 24224 720 1760
+5 +1 880 880
+4 * 880
+3 * 880 0 880
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=880 0x4031b8 -82 
* * 20240 7040 7040 1 0 0 1
+5 * 880
jump=880 +28 * 
* * 
+28 * 880
+4 * 880 880
+1 * 880 880
+1 * 880 880

fn=(172)
0x4031b8 79 880 0 880 1 0 0 1
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 880
+4 * 880
+3 * 880 0 880
cfi=(4)
cfn=(174)
calls=880 0x403ccc +42 
* * 12320 4400 4400
+5 * 880 880
+1 * 880 880

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246) std::vector<int, std::allocator<int> >::end()
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1792 0 1792 1 0 0 1
+1 * 1792
+3 * 1792 0 1792
+4 +1 1792 1792
+4 * 1792 1792 0 0 2 0 0 2
+4 * 1792
+3 * 1792 1792
+4 * 1792 1792
+3 * 1792
+3 * 1792
+3 * 1792
+4 * 1792 1792
+1 * 1792 1792

fn=(106)
0x40325e 113 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784 0 1784
+4 +1 1784 1784
+4 * 1784 1784
+1 * 1784 1784

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896 0 0 1 0 0 1
+4 +1 896 896
+4 * 896 896
+1 * 896 896

fn=(82)
0x4039fc 117 896 0 896 1 0 0 1
+1 * 896
+3 * 896 0 896 1 0 0 1
+4 +1 896 896
+4 * 896 896
+1 * 896 896

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 440 0 440
+1 * 440
+3 * 440
+4 * 440 0 440
+4 * 440 0 440
+4 +2 440 440
+4 * 440 440
+4 * 440 440
+4 * 440 440
+4 * 440
+3 * 440 0 0 0 0 0 0 0 0 440 8
jcnd=8/440 +51 +10 
* * 
+2 +3 432 432
+4 * 432 432
+4 * 432 432
+4 -1 432 432
+4 * 432
+3 * 432
+3 * 432 0 432
cfi=(3)
cfn=(222)
calls=432 0x403373 215 
* * 16416 5616 6048 0 28 3 0 28 3 432 2
+5 +2 432 432
+4 * 432 432
+4 * 432
+4 * 432 432
+4 * 432 0 432
+4 * 432
jump=432 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12683 3908 3397 43 7 7 43 7 7 856 70 47
+5 +2 440 440
+1 * 440 440

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880
+2 * 880 0 880
+2 * 880 0 880
+1 * 880
+4 * 880 0 880 1 0 0 1
+4 * 880 0 880
+4 +2 880 880
+4 * 880
+3 * 880 0 880
cfn=(6)
calls=880 0x403b08 117 
* * 5280 2640 1760 1 0 1 1 0 1
+5 * 880
+3 * 880 0 880
cfi=(3)
cfn=(8)
calls=880 0x403afa -88 
* * 5280 2640 1760 1 0 0 1
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(10)
calls=880 0x402f54 645 
* * 11440 5280 1760 1 1 0 1 1
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880
+3 * 880
+3 * 880 0 880
cfn=(12)
calls=880 0x403b16 134 
* * 365259 79413 75529 32 13 13 32 13 13 42778 1045 1760
+5 +4 880 880 0 1 0 0 1
+4 * 880
+3 * 880 0 880
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=880 0x40333c 113 
* * 5280 2640 1760 2 0 0 2
+5 * 880
+3 * 880 880
+4 * 880 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(42)
calls=880 0x403ba4 565 
* * 22000 8800 7040 3 0 0 3
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(46)
calls=880 0x403b74 547 
* * 22000 8800 7040
+5 * 880
+3 * 880
+3 * 880
+3 * 880
+3 * 880 0 880 1 0 0 1
cfi=(11)
cfn=(48)
calls=880 0x403bd5 -60 
* * 517954 175580 171184 26 3 6 26 3 6 19712 1100 1756 219
+5 -3 880 880
+4 * 880 0 880
+4 * 880
jump=880 +28 +4 
* * 
+28 +4 880
+4 * 880 880
+1 * 880 880
+2 * 880 880
+2 * 880 880
+1 * 880 880

fn=(108)
0x403a98 565 880 0 880 1 0 0 1
+1 * 880
+3 * 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+4 * 880 0 880
+4 * 880
+4 * 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=880 0x404380 726 
* * 8800 4400 3520 1 0 0 1
+5 * 880 880
+4 * 880 880
+1 * 880 880

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 880 0 880
+1 * 880
+3 * 880 0 880
+1 * 880
+4 * 880 0 880 1 0 0 1
+4 +2 880 880
+4 * 880
+3 * 880 0 880
cfn=(40)
calls=880 0x40333c 113 
* * 5280 2640 1760
+5 * 880
+3 * 880 880
+4 * 880 880
+4 * 880 880
+4 * 880 880
+3 -1 880
+3 * 880
+3 * 880 0 880
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=880 0x40334a 148 
* * 27280 8800 10560 2 0 0 2
+5 +1 880 880
+4 * 880
+3 * 880 0 880
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=880 0x4032ca 159 
* * 178722 54148 35322 3 3 0 3 3 0 27908 58 1760
+5 * 880
jump=880 +28 * 
* * 
+28 * 880 0 0 1 0 0 1
+4 * 880 880
+1 * 880 880
+1 * 880 880

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 888 0 888 1 0 0 1
+1 * 888 0 0 1 0 0 1
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 0 888 888
+5 0 888 0 0 0 0 0 0 0 0 888
+2 0 888 888
+4 0 888 888
+4 0 888
+5 0 888
+3 0 888
+3 0 888 0 888
fi=(6)
cfi=(5)
cfn=(100)
calls=888 0x40461a 99 
* 0 278191 44284 42171 34 12 39 34 12 39 41862 1699 1776
+5 0 888
fi=(6)
jump=888 +7 0 
* 0 
+7 0 888 888
+1 0 888 888

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 293260 0 293260
+1 * 293260
+3 * 293260 0 293260
+4 * 293260 0 293260
+4 +1 293260 293260
+4 * 293260 293260
+3 * 293260 293260
+4 * 293260
+4 * 293260
+3 * 293260 293260
+1 * 293260 293260

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 293260 0 293260
+1 * 293260
+3 * 293260 0 293260 1 0 0 1
+4 * 293260 0 293260
+4 +1 293260 293260
+4 * 293260 293260
+3 * 293260 293260
+4 * 293260
+4 * 293260
+3 * 293260 293260
+1 * 293260 293260

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 880
+4 * 880
+3 * 880 0 880
cfi=(4)
cfn=(194)
calls=880 0x403d7e +42 
* * 12320 4400 4400 1 0 0 1
+5 * 880 880
+1 * 880 880

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 880 0 880 1 0 0 1
+1 * 880
+3 * 880 0 880
+1 * 880
+4 * 880 0 880
+4 +2 880 880
+4 * 880 880
+4 * 880
+3 * 880 880
+4 * 880 880
+3 * 880
+3 * 880
+3 * 880
+4 * 880
+3 * 880 880
+4 * 880 880
+3 -1 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(188)
calls=880 0x403d98 +11 
* * 133842 37428 23882 1 3 0 1 3 0 27908 58 1760
+5 +1 880 880
+4 * 880
+3 * 880 0 880
cfn=(192)
calls=880 0x403296 -82 
* * 20240 7040 7040 1 0 0 1
+5 * 880
jump=880 +28 * 
* * 
+28 * 880
+4 * 880 880
+1 * 880 880
+1 * 880 880

fn=(2)
0x402d74 645 3552 0 3552 1 0 0 1
+1 * 3552
+3 * 3552 0 3552 0 0 1 0 0 1
+4 +1 3552 3552
+4 * 3552 3552 0 1 1 0 1 1
+4 * 3552
+3 * 3552 3552
+4 * 3552 3552
+3 * 3552
+3 * 3552
+3 * 3552
+4 * 3552 3552
+1 * 3552 3552

fn=(20)
0x404412 179 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 +2 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(22)
calls=880 0x404236 -14 
* * 292219 51253 50889 26 13 9 26 13 9 42778 1045 1760
+5 * 880 880
+4 * 880 0 880
+3 +1 880 880
+4 * 880 880 0 1 0 0 1
+3 * 880 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+3 * 880 880
+4 * 880
+4 * 880
+3 * 880 880
+4 * 880 0 880
+4 +1 880 880
+1 * 880 880

fn=(94)
0x40432a 179 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 +2 880 880
+4 * 880 880 0 1 0 0 1
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(96)
calls=880 0x403fbe -14 
* * 289144 48051 45098 16 6 36 16 6 36 42244 1641 1760
+5 * 880 880
+4 * 880 0 880
+3 +1 880 880
+4 * 880 880
+3 * 880 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+3 * 880 880
+4 * 880
+4 * 880
+3 * 880 880
+4 * 880 0 880
+4 +1 880 880
+1 * 880 880

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 440 0 440
+1 * 440
+3 * 440 0 0 1 0 0 1
+4 * 440 0 440
+4 * 440 0 440
+4 +2 440 440
+4 * 440 440
+4 * 440 440
+4 * 440 440
+4 * 440
+3 * 440 0 0 0 0 0 0 0 0 440
jcnd=8/440 +51 +10 
* * 
+2 +3 432 432
+4 * 432 432
+4 * 432 432
+4 -1 432 432
+4 * 432
+3 * 432
+3 * 432 0 432
cfi=(3)
cfn=(264)
calls=432 0x4036b1 215 
* * 16416 5616 6048 0 27 16 0 27 16 432
+5 +2 432 432
+4 * 432 432
+4 * 432
+4 * 432 432
+4 * 432 0 432
+4 * 432
jump=432 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246)
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12666 3742 3263 20 16 30 20 16 30 891 73 47
+5 +2 440 440
+1 * 440 440

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1784 0 1784 1 0 0 1
+1 * 1784
+3 * 1784 0 1784 1 0 0 1
+4 +1 1784 1784
+4 * 1784 1784
+1 * 1784 1784

fn=(112)
0x403a68 547 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 +1 880 880
+4 * 880 880
+3 * 880 0 880
+4 * 880
+4 * 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfi=(10)
cfn=(110)
calls=880 0x404380 726 
* * 8800 4400 3520
+5 * 880 880
+4 * 880 880
+1 * 880 880

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 880 0 880
+1 * 880
+3 * 880 0 880
+1 * 880
+4 * 880 0 880 1 0 0 1
+4 +2 880 880
+4 * 880
+3 * 880 0 880
cfn=(106)
calls=880 0x40325e 113 
* * 5280 2640 1760
+5 * 880
+3 * 880 880
+4 * 880 880
+4 * 880 880
+4 * 880 880
+3 -1 880
+3 * 880
+3 * 880 0 880
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=880 0x40326c 148 
* * 27280 8800 10560 4 0 0 4
+5 +1 880 880
+4 * 880
+3 * 880 0 880
cfn=(156)
calls=880 0x4031ec 159 
* * 165288 49284 31074 27 5 0 27 5 0 24224 720 1760
+5 * 880
jump=880 +28 * 
* * 
+28 * 880 0 0 1 0 0 1
+4 * 880 880
+1 * 880 880
+1 * 880 880

fn=(158)
0x403ce6 171 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 * 888 0 888
+4 +2 888 888
+5 * 888 0 0 0 0 0 0 0 0 888
+2 +1 888 888
+4 * 888 888
+4 * 888 888
+4 * 888
+3 * 888
+3 * 888 0 888
cfi=(5)
cfn=(160)
calls=888 0x4044d6 -65 
* * 107274 27523 15385 24 5 0 24 5 0 23538 726 1776
+5 +1 888 888
+1 * 888 888

fl=(12)
fn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
0x40492d 277 928 0 928 1 0 0 1
+1 * 928
+3 * 928
+4 * 928 0 928
+4 +1 928 928
+4 * 928
+3 * 928 0 928 1 0 0 1
cfi=(13)
cfn=(64)
calls=928 -33 -66 
* * 5568 2784 1856
+5 * 928 928
+1 * 928 928

fn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d9d 277 1760 0 1760
+1 * 1760
+3 * 1760
+4 * 1760 0 1760
+4 +1 1760 1760
+4 * 1760
+3 * 1760 0 1760
cfi=(13)
cfn=(68)
calls=1760 0x404f1a -58 
* * 28160 10560 8800 2 0 1 2 0 1
+5 * 1760 1760
+1 * 1760 1760

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 880 0 880
+1 * 880
+3 * 880 0 880
+1 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +10 880 880
+4 * 880
+3 * 880 0 880
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=880 0x404bc6 288 
* * 13200 5280 4400 3 0 0 3
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(122)
calls=880 0x404bc6 288 
* * 13200 5280 4400
+5 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=880 0x404be0 -36 
* * 434354 146540 141264 4 1 38 4 1 38 19712 1084 1756
+5 +1 880
+4 * 880 880
+1 * 880 880
+1 * 880 880

fn=(128)
0x404878 277 928 0 928
+1 * 928
+3 * 928
+4 * 928 0 928 1 0 0 1
+4 +1 928 928
+4 * 928
+3 * 928 0 928
cfi=(13)
cfn=(130)
calls=928 -33 -66 
* * 5568 2784 1856 0 0 1 0 0 1
+5 * 928 928
+1 * 928 928

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1760 0 1760
+1 * 1760
+3 * 1760
+4 * 1760 0 1760
+4 +1 1760 1760
+4 * 1760
+3 * 1760 0 1760
cfi=(13)
cfn=(134)
calls=1760 0x404e98 -58 
* * 28160 10560 8800 2 0 0 2
+5 * 1760 1760
+1 * 1760 1760

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +8 880 0 880
+4 +3 880 880
+4 * 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=880 0x404eb5 -22 
* * 339314 114860 108704 1 1 38 1 1 38 19712 1084 1756
+5 +1 880 880
+1 * 880 880

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760
+4 * 1760 0 1760
+4 +1 1760 1760
+4 * 1760
+3 * 1760 0 1760
cfi=(13)
cfn=(124)
calls=1760 0x404d36 -77 
* * 10560 5280 3520 2 0 0 2
+5 * 1760 1760
+1 * 1760 1760

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760
+4 * 1760 0 1760 1 0 0 1
+4 +1 1760 1760
+4 * 1760
+3 * 1760 0 1760
cfi=(13)
cfn=(58)
calls=1760 0x404d8f -77 
* * 10560 5280 3520 1 0 0 1
+5 * 1760 1760
+1 * 1760 1760

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896 1 0 0 1
+4 * 896 0 896
+4 * 896 0 896
+4 +2 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896 896
+5 * 896 0 0 0 0 0 0 0 0 896
jcnd=8/896 +33 +2 
* * 
+2 +1 888 888
+4 * 888
+8 * 888 888
+4 * 888 888
+4 * 888
+3 * 888 0 0 1 0 0 1
+3 * 888 0 888 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=888 0x3877c83840 0 
* * 315796 105496 103725 11 2 22 11 2 22 18916 1104 883 219
* * 888 888 0 1 1 0 1 1 0 0 0 888
+5 +1 896 896
+4 * 896
+8 * 896 896
+4 * 896
+3 +1 896 896
+1 * 896 896

fn=(140)
0x404eb5 368 896 0 896
+1 * 896
+3 * 896
+4 * 896 0 896 1 0 0 1
+4 * 896 0 896
+4 * 896 0 896 0 0 1 0 0 1
+4 +2 896 896
+4 * 896 896
+4 * 896
+3 * 896
+3 * 896
+4 * 896 0 896
+4 +1 896 896
+5 * 896 0 0 0 0 0 0 0 0 896
jcnd=8/896 +33 +2 
* * 
+2 +1 888 888
+4 * 888
+8 * 888 888
+4 * 888 888
+4 * 888
+3 * 888
+3 * 888 0 888
cob=(2)
cfi=(9)
cfn=(78)
calls=888 0x3877c83840 0 
* * 315796 105496 103725 0 1 39 0 1 39 18916 1090 883
* * 888 888 0 0 0 0 0 0 0 0 0 888
+5 +1 896 896
+4 * 896
+8 * 896 896
+4 * 896
+3 +1 896 896
+1 * 896 896

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 880 0 880
+1 * 880
+3 * 880
+4 * 880 0 880 1 0 0 1
+4 * 880 0 880
+4 * 880 0 880
+4 +8 880 0 880
+4 +3 880 880
+4 * 880 880
+4 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(74)
calls=880 0x404f37 -22 
* * 339314 114860 108704 14 3 5 14 3 5 19712 1100 1756 219
+5 +1 880 880
+1 * 880 880

fn=(126)
0x404be0 424 880 0 880
+1 * 880
+3 * 880 0 880
+2 * 880 0 880
+1 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +4 880 880
+4 * 880
+3 * 880 0 880
cfn=(128)
calls=880 0x404878 277 
* * 13200 5280 4400 1 0 0 1
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(132)
calls=880 0x404d44 277 
* * 22000 7920 7040 2 0 0 2
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(132)
calls=880 0x404d44 277 
* * 22000 7920 7040
+5 * 880
+3 * 880
+3 * 880
+3 * 880 0 880
cfn=(138)
calls=880 0x404d5e -49 
* * 352514 119260 113984 1 1 38 1 1 38 19712 1084 1756
+5 +1 880
+4 * 880 880
+1 * 880 880
+2 * 880 880
+1 * 880 880

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 880 0 880
+1 * 880
+3 * 880 0 880
+1 * 880
+4 * 880 0 880 1 0 0 1
+4 * 880 0 880
+4 * 880 0 880
+4 +10 880 880
+4 * 880
+3 * 880 0 880
cfn=(56)
calls=880 0x404c38 288 
* * 13200 5280 4400 3 0 0 3
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(56)
calls=880 0x404c38 288 
* * 13200 5280 4400
+5 * 880 880
+4 * 880
+3 * 880
+3 * 880 0 880
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=880 0x404c52 -36 
* * 434354 146540 141264 20 3 6 20 3 6 19712 1100 1756 219
+5 +1 880
+4 * 880 880
+1 * 880 880
+1 * 880 880

fn=(60)
0x404c52 424 880 0 880
+1 * 880
+3 * 880 0 880
+2 * 880 0 880
+1 * 880
+4 * 880 0 880
+4 * 880 0 880
+4 * 880 0 880
+4 +4 880 880
+4 * 880
+3 * 880 0 880
cfn=(62)
calls=880 0x40492d 277 
* * 13200 5280 4400 2 0 0 2
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880 1 0 0 1
cfn=(66)
calls=880 0x404d9d 277 
* * 22000 7920 7040 2 0 1 2 0 1
+5 * 880
+3 * 880 880
+4 * 880
+3 * 880 0 880
cfn=(66)
calls=880 0x404d9d 277 
* * 22000 7920 7040
+5 * 880
+3 * 880
+3 * 880
+3 * 880 0 880
cfn=(72)
calls=880 0x404db7 -49 
* * 352514 119260 113984 15 3 5 15 3 5 19712 1100 1756 219
+5 +1 880
+4 * 880 880
+1 * 880 880
+2 * 880 880
+1 * 880 880

fn=(282)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760 0 1760
+4 +1 1760 1760
+4 * 1760 1760
+1 * 1760 1760

fn=(110)
0x404380 726 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760 0 1760
+4 * 1760 0 1760
+4 * 1760 1760
+4 * 1760 1760
+3 * 1760 1760
+4 * 1760 0 1760
+3 * 1760 1760
+1 * 1760 1760

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1760 0 1760 1 0 0 1
+1 * 1760
+3 * 1760 0 1760
+4 +1 1760 1760
+4 * 1760 1760
+1 * 1760 1760

fn=(44)
0x404468 726 1760 0 1760
+1 * 1760
+3 * 1760 0 1760
+4 * 1760 0 1760
+4 * 1760 1760
+4 * 1760 1760
+3 * 1760 1760
+4 * 1760 0 1760 1 0 0 1
+3 * 1760 1760
+1 * 1760 1760

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888
+4 * 888 0 888 1 0 0 1
+4 * 888 888
+1 * 888 888

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 +4 888 888
+4 * 888 888
+4 * 888
+3 * 888
+3 * 888 0 888
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=888 0x40454c -14 
* * 5328 1776 2664 1 0 0 1
+5 +2 888 888
+1 * 888 888

fn=(150)
0x40326c 148 888 0 888
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 * 888 0 888
+4 +3 888 888 0 1 0 0 1
+4 * 888 888
+4 * 888
+3 * 888
+3 * 888 0 888
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=888 0x403d1a -29 
* * 15984 5328 6216 3 0 0 3
+5 +1 888 888
+1 * 888 888

fn=(180)
0x40334a 148 888 0 888
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 * 888 0 888
+4 +3 888 888
+4 * 888 888
+4 * 888
+3 * 888
+3 * 888 0 888
cfn=(182)
calls=888 0x403dcc -29 
* * 15984 5328 6216 2 0 0 2
+5 +1 888 888
+1 * 888 888

fn=(152)
0x403d1a 122 888 0 888 1 0 0 1
+1 * 888
+3 * 888
+4 * 888 0 888
+4 * 888 0 888
+4 +4 888 888
+4 * 888 888
+4 * 888
+3 * 888
+3 * 888 0 888
cfn=(154)
calls=888 0x4044f8 -14 
* * 5328 1776 2664 2 0 0 2
+5 +2 888 888
+1 * 888 888

fn=(184)
0x40454c 112 888 0 888 1 0 0 1
+1 * 888
+3 * 888 0 888
+4 * 888 0 888
+4 * 888 888
+1 * 888 888

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 3205 490 488 2 15 8 2 15 8 532 52 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3255 673 625 20 6 3 20 6 3 506 58 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 440 0 440 1 0 0 1
+1 * 440
+3 * 440
+4 * 440 0 440
+4 * 440 0 440
+4 +1 440 440
+4 * 440
+3 * 440 0 440
cfi=(2)
cfn=(2)
calls=440 0x402d74 645 
* * 5720 2640 880
+5 * 440
+3 * 440 0 440
+3 +1 440 440
+6 * 440 0 440
+3 * 440 440
+6 * 440 0 440
+3 +1 440 440
+6 * 440 0 440 1 0 0 1
+3 * 440 440
+6 * 440 0 440
+3 +2 440 0 440
+7 * 440
jump=440 +86 * 
* * 
+2 +1 97460 97460
+3 * 97460
+3 * 97460 97460
+4 * 97460
+3 * 97460
+3 * 97460 0 97460
cfi=(2)
cfn=(144)
calls=97460 0x402d9a 770 
* * 1072060 487300 292380
+5 * 97460 97460
+4 * 97460 97460
+5 * 97460
+4 * 97460 0 97460
+5 +1 97460 97460
+3 * 97460
+3 * 97460 97460
+4 * 97460
+3 * 97460
+3 * 97460 0 97460
cfi=(2)
cfn=(146)
calls=97460 0x402dba 770 
* * 1072060 487300 292380 1 0 0 1
+5 * 97460 97460
+2 * 97460
+4 * 97460 97460
+5 * 97460
+4 * 97460 0 97460
+5 -2 97460 0 97460
+4 * 97460 97460
+3 * 97460
+3 * 97460 97460
+3 * 97460 0 0 0 0 0 0 0 0 97460 441
jcnd=97020/97460 -93 +1 
* * 
-9 * 440 440 0 1 0 0 1
+3 * 440
+3 * 440 440
+3 * 440 0 0 0 0 0 0 0 0 440
jcnd=440/440 -93 +1 
* * 
+2 +4 440 440
+3 * 440
+3 * 440
+4 * 440 440 0 1 0 0 1
+5 * 440
+4 * 440
+3 * 440 0 440
+5 +1 440 440
+3 * 440
+3 * 440
+4 * 440 440
+5 * 440
+4 * 440
+3 * 440 0 440
+5 +1 440 0 440
+7 * 440
jump=440 0x4016ee * 
* * 
+2 +1 97460 97460
+3 * 97460
+3 * 97460 97460
+4 * 97460
+3 * 97460 0 0 1 0 0 1
+3 * 97460 0 97460
cfi=(2)
cfn=(146)
calls=97460 0x402dba 770 
* * 1072060 487300 292380
+5 * 97460 97460
+2 * 97460
+4 * 97460 97460
+5 * 97460 0 97460
+5 +1 97460 97460
+3 * 97460
+3 * 97460 97460
+4 * 97460
+3 * 97460
+3 * 97460 0 97460
cfi=(2)
cfn=(144)
calls=97460 0x402d9a 770 
* * 1072060 487300 292380
+5 * 97460 97460
+4 * 97460 97460
+5 * 97460 0 97460
+5 +1 97460 97460
+5 * 97460 97460
+5 * 97460 97460
+5 * 97460
+4 * 97460 0 97460
+5 +1 97460 97460
+5 * 97460 97460
+5 * 97460 97460
+5 * 97460
+4 * 97460 0 97460
+5 -4 97460 0 97460
+4 * 97460 97460
+3 * 97460
+3 * 97460 97460
+3 * 97460 0 0 0 0 0 0 0 0 97460 441
jcnd=97020/97460 0x401672 +1 
* * 
-9 * 440 440 0 1 0 0 1
+3 * 440
+3 * 440 440
+3 * 440 0 0 0 0 0 0 0 0 440
jcnd=440/440 0x401672 +1 
* * 
+6 +6 440 440 0 1 0 0 1
+5 * 440 440
+5 * 440 0 440
+5 +2 440 440
+3 +1 440 0 440
+3 * 440 440
+5 * 440 440
+1 * 440 440

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 440
+7 * 440
+7 * 440
+3 * 440
+3 * 440 0 440
cfi=(2)
cfn=(4)
calls=440 0x4030b2 310 
* * 499414 149066 140572 68 16 19 68 16 19 31257 1322 1758 219
+5 * 440
+7 * 440
+7 * 440
+3 * 440
+3 * 440 0 440
cfi=(2)
cfn=(80)
calls=440 0x402ff4 310 
* * 498183 147486 137704 38 7 74 38 7 74 31050 1627 1758
+5 * 440 0 0 1 0 0 1
+7 * 440
+7 * 440
+3 * 440
+3 * 440 0 440
cfn=(142)
calls=440 0x401585 -52 
* * 10164440 4494160 2346520 8 0 0 8 0 0 195800 882
+5 * 440 0 440
+8 * 440 440
+6 * 440 0 440
+6 * 440
+7 * 440
+3 * 440 0 440
cfi=(2)
cfn=(148)
calls=440 0x402df4 414 
* * 109484 34322 24337 33 5 0 33 5 0 12112 363 880
+5 * 440
+7 * 440
+3 * 440 0 440 1 0 0 1
cfi=(2)
cfn=(178)
calls=440 0x402e74 414 
* * 116201 36754 26461 7 3 0 7 3 0 13954 32 880
+5 +2 440
+7 * 440
+7 * 440
+3 * 440
+3 * 440 0 440
cfi=(2)
cfn=(4)
calls=440 0x4030b2 310 
* * 499079 149047 140461 2 1 1 2 1 1 31233 823 1758
+5 * 440
+7 * 440
+7 * 440
+3 * 440
+3 * 440 0 440
cfi=(2)
cfn=(80)
calls=440 0x402ff4 310 
* * 497235 147425 137538 0 0 0 0 0 0 30906 1098 1758
+5 * 440 440
+6 * 440 0 0 1 0 0 1
+7 * 440
+7 * 440 0 440
+6 * 440 440
+8 * 440
+3 * 440
+3 * 440 0 440
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=440 0x401719 -33 
* * 4704040 1958880 1078660 4 0 0 4 0 0 97900 441
+5 * 440 0 440
+8 * 440 440
+6 * 440 0 440
+6 * 440
+7 * 440 0 0 1 0 0 1
+3 * 440 0 440
cfi=(2)
cfn=(148)
calls=440 0x402df4 414 
* * 109484 34322 24337 0 0 0 0 0 0 12112 357 880
+5 * 440
+7 * 440
+3 * 440 0 440
cfi=(2)
cfn=(178)
calls=440 0x402e74 414 
* * 116201 36754 26461 0 0 0 0 0 0 13954 26 880
+5 +2 440 440
+7 * 440
+3 * 440 0 440
cfi=(2)
cfn=(2)
calls=440 0x402d74 645 
* * 5720 2640 880
+5 * 440 440
+6 * 440
+3 * 440
+3 * 440
+3 * 440 440
+7 * 440
+3 * 440 0 0 1 0 0 1
+3 * 440 0 440
cfi=(2)
cfn=(144)
calls=440 0x402d9a 770 
* * 4840 2200 1320
+5 * 440
+3 * 440
+7 * 440
+3 * 440
+3 * 440 0 440
cfi=(2)
cfn=(200)
calls=440 0x402eda 901 
* * 40691 15284 11701 46 35 10 46 35 10 1728 80 47
+5 +1 440 440
+7 * 440
+3 * 440 0 440
cfi=(2)
cfn=(10)
calls=440 0x402f54 645 
* * 5720 2640 880 0 1 0 0 1
+5 * 440 440
+6 * 440
+3 * 440
+3 * 440
+3 * 440 440
+7 * 440 0 0 1 0 0 1
+3 * 440
+3 * 440 0 440
cfi=(2)
cfn=(146)
calls=440 0x402dba 770 
* * 4840 2200 1320
+5 * 440
+3 * 440
+7 * 440
+3 * 440
+3 * 440 0 440
cfi=(2)
cfn=(244)
calls=440 0x402f7a 901 
* * 40674 15118 11567 21 43 46 21 43 46 1763 73 47
+5 +1 440 440
+7 * 440
+3 * 440 0 440
cfi=(2)
cfn=(10)
calls=440 0x402f54 645 
* * 5720 2640 880
+5 * 440 440
+6 * 440
+3 * 440
+3 * 440
+3 * 440 440 0 1 0 0 1
+7 * 440
+3 * 440
+3 * 440 0 440
cfi=(2)
cfn=(146)
calls=440 0x402dba 770 
* * 4840 2200 1320
+5 * 440 440
+2 * 440
+4 * 440 440
+8 * 440 440
+8 * 440 0 440
+8 +1 440 440
+7 * 440
+3 * 440 0 440
cfi=(2)
cfn=(2)
calls=440 0x402d74 645 
* * 5720 2640 880
+5 * 440 440 0 1 0 0 1
+6 * 440
+3 * 440
+3 * 440
+3 * 440 440
+7 * 440
+3 * 440
+3 * 440 0 440
cfi=(2)
cfn=(144)
calls=440 0x402d9a 770 
* * 4840 2200 1320
+5 * 440 440
+4 * 440 440
+8 * 440
+4 * 440 440
+8 * 440
+3 * 440 0 440
+8 +2 440 0 440
+7 -12 440 440
+8 * 440 440
+7 * 440 0 0 0 0 0 0 0 0 440 1
jcnd=1/440 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 440
+7 * 440
+3 * 440 0 440
cfi=(2)
cfn=(2)
calls=440 0x402d74 645 
* * 5720 2640 880 2 0 1 2 0 1
+5 * 440
+3 * 440 440
+7 * 440
+3 * 440 0 440
cfi=(2)
cfn=(2)
calls=440 0x402d74 645 
* * 5720 2640 880 0 1 0 0 1
+5 * 440
+3 * 440 0 0 0 0 0 0 0 0 440 2
+2 * 440 0 0 1 0 0 1
+5 * 440
jump=440 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 440
+2 * 440 0 0 0 0 0 0 0 0 440
jcnd=440/440 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 440 0 440
+1 * 440
+3 * 440
+4 * 440 0 440
+4 * 440 0 440
+4 * 440 0 440
+5 +1 440 440
+4 * 440
+3 * 440 0 440
cfi=(2)
cfn=(2)
calls=440 0x402d74 645 
* * 5720 2640 880
+5 * 440
+3 * 440 0 440
+3 +1 440 440 0 1 0 0 1
+6 * 440 0 440
+3 * 440 440
+6 * 440 0 440
+3 +2 440 0 440
+7 * 440
jump=440 +86 * 
* * 
+2 +1 97460 97460
+3 * 97460
+3 * 97460 97460
+4 * 97460
+3 * 97460
+3 * 97460 0 97460
cfi=(2)
cfn=(144)
calls=97460 0x402d9a 770 
* * 1072060 487300 292380
+5 * 97460 97460
+4 * 97460 97460
+5 * 97460
+4 * 97460 0 97460
+5 +1 97460 97460
+3 * 97460
+3 * 97460 97460
+4 * 97460
+3 * 97460
+3 * 97460 0 97460
cfi=(2)
cfn=(146)
calls=97460 0x402dba 770 
* * 1072060 487300 292380
+5 * 97460 97460
+2 * 97460
+4 * 97460 97460
+5 * 97460
+4 * 97460 0 97460
+5 -2 97460 0 97460
+4 * 97460 97460
+3 * 97460
+3 * 97460 97460
+3 * 97460 0 0 0 0 0 0 0 0 97460 441
jcnd=97020/97460 -93 +1 
* * 
-9 * 440 440 0 1 0 0 1
+3 * 440
+3 * 440 440
+3 * 440 0 0 0 0 0 0 0 0 440
jcnd=440/440 -93 +1 
* * 
+2 +4 440 440
+3 * 440
+3 * 440 0 0 1 0 0 1
+4 * 440 440
+5 * 440
+4 * 440
+3 * 440 0 440
+5 +1 440 440
+3 * 440
+3 * 440
+4 * 440 440
+5 * 440
+4 * 440
+3 * 440 0 440
+5 +1 440 440
+5 * 440 440
+5 * 440 440
+5 * 440 0 0 1 0 0 1
+4 * 440
+3 * 440 0 440
+5 +2 440 440
+3 +1 440 0 440
+3 * 440 440
+5 * 440 440
+1 * 440 440

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1776 0 1776 1 0 0 1
+5 0 1776 0 1776
+5 0 1776
+3 0 1776 0 1776
+5 0 1776
+4 0 1776 1776 0 0 1 0 0 1
+7 0 1776 1776 0 0 1 0 0 1
+3 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776 2
+6 0 1776 1776 0 0 1 0 0 1
+7 0 1776 1776 0 1 1 0 1 1
+4 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776
+2 0 1776 1776 0 0 1 0 0 1
+3 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776
jcnd=1776/1776 +97 0 
* 0 
+18 0 1776
+3 0 1776
+3 0 1776 0 1776
cfn=(38) _int_malloc
calls=1776 0x3877c79a00 0 
* 0 410223 50739 59804 45 32 55 45 32 55 62972 2765
+5 0 1776
+3 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776
+2 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776
+2 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776 15
+2 0 1776 1776
+7 0 1776 0 0 0 0 0 0 0 0 1776
jcnd=1776/1776 +13 0 
* 0 
+13 0 1776 0 1776
+2 0 1776 0 0 0 0 0 0 0 0 1776 14
+6 0 1776
+3 0 1776 1776
+4 0 1776 1776
+5 0 1776 1776
+5 0 1776
+4 0 1776 1776
+1 0 1776 0 0 1 0 0 1
+5 0 1776 1776 0 0 1 0 0 1
+7 0 1776 0 0 0 0 0 0 0 0 1776
jcnd=1776/1776 +14 0 
* 0 
+14 0 1776 0 1776 1 0 0 1
+3 0 1776 0 0 0 0 0 0 0 0 1776
+6 0 1776
jump=1776 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1776 0 1776 1 0 0 1
+2 0 1776
+3 0 1776
+3 0 1776 0 1776
+2 0 1776
+3 0 1776 0 1776
+1 0 1776
+3 0 1776 0 1776
+1 0 1776
+3 0 1776
+4 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776
+6 0 1776
+4 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776 7
jcnd=10/1776 0x3877c838d1 0 
* 0 
+2 0 1766
+3 0 1766
+3 0 1766
+3 0 1766
+3 0 1766
+3 0 1766 0 0 0 0 0 0 0 0 1766
jcnd=1766/1766 +41 0 
* 0 
+41 0 1766 0 0 1 0 0 1
+3 0 1766 0 0 0 0 0 0 0 0 1766
jcnd=1766/1766 0x3877c839c0 0 
* 0 
+24 0 1766
+3 0 1766
+4 0 1766
+3 0 1766
+3 0 1766
+3 0 1766
+3 0 1766
+3 0 1766 0 0 0 0 0 0 0 0 1766 880
jcnd=890/1766 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 886
+10 0 886 886 0 0 2 0 0 2
+3 0 886
+4 0 886 0 886
+3 0 886
+4 0 886
+4 0 886 0 0 0 0 0 0 0 0 886
jcnd=886/886 -18 0 
* 0 
-18 0 2714 2714
+3 0 2714
+4 0 2714 0 2714
+3 0 2714
+4 0 2714
+4 0 2714 0 0 0 0 0 0 0 0 2714 11
jcnd=1828/2714 -18 0 
* 0 
+2 0 1776
+4 0 1776
+3 0 1776 1776
+1 0 1776 1776
+1 0 1776 1776
+2 0 1776 1776 0 1 0 0 1
+2 0 1776 1776
0x3877c839c0 0 1766 0 0 1 0 0 1
+3 0 1766
+3 0 1766
+3 0 1766
+4 0 1766 0 1766 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1766 0x3877c89b20 0 
* 0 531162 198512 194980 6 1 60 6 1 60 25372 1296 1766 219
+5 0 1766
jump=1766 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1776 1776 0 1 1 0 1 1
+7 0 1776 1776 0 0 1 0 0 1
+3 0 1776
+3 0 1776 0 0 1 0 0 1 0 0 1776
+6 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776
+6 0 1776 1776
+4 0 1776
+4 0 1776
+2 0 1776 0 0 0 0 0 0 0 0 1776 2
+2 0 1776
+2 0 1776
+7 0 1776 0 0 0 0 0 0 0 0 1776
jcnd=1776/1776 +14 0 
* 0 
+14 0 1776
+2 0 1776
cfn=(170) _int_free
calls=1776 0x3877c78650 0 
* 0 172959 45719 26141 19 4 0 19 4 0 41889 791

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 19 19 0 1 0 0 1
+4 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 1
jcnd=18/19 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1 1
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 7
jcnd=7/18 0x3877c75f78 0 
* 0 
+6 0 19 19 0 1 0 0 1
+4 0 19 19
+4 0 19
+3 0 19 0 0 1 0 0 1
+4 0 19
+4 0 19 19
+5 0 19
+4 0 19
+2 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=8/19 +70 0 
* 0 
+2 0 11 11
+3 0 11
+3 0 11
+3 0 11 11
+4 0 11 11
+4 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+4 0 11 0 0 0 0 0 0 0 0 11
+6 0 11 11
+8 0 11 0 11
+4 0 11 0 11
+4 0 11 0 0 0 0 0 0 0 0 11
jcnd=11/11 +15 0 
* 0 
+15 0 19 19 0 1 0 0 1
+4 0 19 0 0 0 0 0 0 0 0 19
+2 0 19 19 0 0 1 0 0 1
+6 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=5/19 0x3877c75e68 0 
* 0 
+6 0 14 0 14
+6 0 14
jump=14 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1776 0 1776 1 0 0 1
+2 0 1776 0 1776
+2 0 1776 0 1776
+2 0 1776
+3 0 1776 0 1776
+2 0 1776 0 1776
+1 0 1776 0 1776
+1 0 1776
+3 0 1776
+4 0 1776 1776
+4 0 1776 0 1776
+4 0 1776
+3 0 1776
+4 0 1776
+3 0 1776
+3 0 1776
+3 0 1776 0 0 1 0 0 1 0 0 1776
+6 0 1776
+4 0 1776 0 0 0 0 0 0 0 0 1776
+6 0 1776
+4 0 1776 0 0 0 0 0 0 0 0 1776
+6 0 1776 1776
+7 0 1776 0 0 0 0 0 0 0 0 1776 4
jcnd=1652/1776 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1652
+2 0 1652 0 0 0 0 0 0 0 0 1652
+6 0 1652 1652 0 1 0 0 1
+4 0 1652
+3 0 1652
+2 0 1652 0 0 0 0 0 0 0 0 1652
jcnd=1652/1652 0x3877c78a40 0 
* 0 
+6 0 1652 1652
+4 0 1652
+3 0 1652 0 0 0 0 0 0 0 0 1652
+6 0 1652 1652
+5 0 1652
+4 0 1652 0 0 0 0 0 0 0 0 1652
jcnd=1652/1652 0x3877c7907c 0 
* 0 
+6 0 1652 1652
+5 0 1652
+4 0 1652 0 0 0 0 0 0 0 0 1652
+6 0 1652
+4 0 1652 0 0 1 0 0 1 0 0 1652
+6 0 1652
+4 0 1652 1652
+7 0 1652 0 0 0 0 0 0 0 0 1652
+6 0 1652 1652
+6 0 1652
+2 0 1652 0 0 0 0 0 0 0 0 1652
+6 0 1652 1652
+4 0 1652 0 0 0 0 0 0 0 0 1652 5
jcnd=1648/1652 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1652 1652 0 1 0 0 1
+4 0 1652 0 0 0 0 0 0 0 0 1652 642
jcnd=694/1652 0x3877c78bf0 0 
* 0 
+6 0 958 958 0 0 2 0 0 2
+6 0 958 0 0 1 0 0 1 0 0 958 64
jcnd=61/958 0x3877c78a78 0 
* 0 
+6 0 897 897
+5 0 897 897
+5 0 897 897
+4 0 897 0 0 0 0 0 0 0 0 897
+6 0 897 897
+4 0 897 0 0 0 0 0 0 0 0 897
+6 0 897 897
+9 0 897 0 897
+4 0 897 0 897
+4 0 897 0 0 0 0 0 0 0 0 897 4
jcnd=889/897 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 897
+3 0 897
+4 0 897 897
+4 0 897 897
+4 0 897 0 0 0 0 0 0 0 0 897
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 958
+7 0 958 0 958
+4 0 958 0 958
+4 0 958 0 0 0 0 0 0 0 0 958 68
jcnd=441/958 +18 0 
* 0 
+2 0 517 0 517
+8 0 517 0 517
+8 0 517 0 517
+4 0 517
+3 0 517 0 517 1 0 0 1
+4 0 517
+4 0 517 0 517
+4 0 517 0 517
+4 0 517
+7 0 517 0 0 0 0 0 0 0 0 517
jcnd=517/517 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 694
+7 0 694 0 0 0 0 0 0 0 0 694
jcnd=694/694 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1652 0 0 1 0 0 1
+5 0 1652 1652
+4 0 1652 1652
+7 0 1652 0 0 0 0 0 0 0 0 1652
jcnd=1652/1652 +16 0 
* 0 
+16 0 1652 0 1652
+5 0 1652 0 0 0 0 0 0 0 0 1652
+6 0 1652
+3 0 1652
jump=1652 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1652 1652 0 1 0 0 1
+4 0 1652
+2 0 1652 0 0 0 0 0 0 0 0 1652
+6 0 1652 1652
+7 0 1652 0 0 0 0 0 0 0 0 1652
jcnd=1652/1652 +15 0 
* 0 
+15 0 1652 0 1652 1 0 0 1
+4 0 1652 0 0 0 0 0 0 0 0 1652 2
+6 0 1652
+4 0 1652 1652
+1 0 1652 1652
+1 0 1652 1652
+2 0 1652 1652
+2 0 1652 1652
+2 0 1652 1652
+2 0 1652 1652
0x3877c78bf0 0 694 0 0 1 0 0 1
+3 0 694 0 694
+4 0 694
+3 0 694
+4 0 694 0 694 1 0 0 1
+4 0 694
jump=694 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1652 1652 0 1 1 0 1 1
+4 0 1652 0 0 1 0 0 1
+7 0 1652
+4 0 1652
+3 0 1652
+3 0 1652 0 0 0 0 0 0 0 0 1652
jcnd=1652/1652 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1766 0 0 1 0 0 1
+7 0 1766
+3 0 1766
+3 0 1766 1766 0 0 1 0 0 1
+4 0 1766
+4 0 1766 0 0 0 0 0 0 0 0 0 0 1766 219
jump=216 0x3877c89be8 0 
* 0 
jump=226 0x3877c89bd0 0 
* 0 
jump=216 0x3877c89bb8 0 
* 0 
jump=216 +11 0 
* 0 
jump=216 0x3877c89c48 0 
* 0 
jump=226 0x3877c89c30 0 
* 0 
jump=224 0x3877c89c18 0 
* 0 
jump=226 0x3877c89c00 0 
* 0 
+11 0 216 216
+3 0 216
+4 0 216
+4 0 216 216
+4 0 216
+4 0 216 0 216
+4 0 216
+9 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216
+4 0 216
+4 0 216 0 0 0 0 0 0 0 0 216
jcnd=8/216 0x3877c89c60 0 
* 0 
-40 0 24038 24038
+4 0 24038 0 24038 0 0 3 0 0 3
+4 0 24038 24038
+4 0 24038 0 24038 0 0 15 0 0 15
+4 0 24038 24038
+4 0 24038 0 24038 0 0 1 0 0 1
+4 0 24038 24038
+4 0 24038 0 24038 0 0 3 0 0 3
+4 0 24038
+4 0 24038
+4 0 24038 0 0 0 0 0 0 0 0 24038 1292
jcnd=1730/24038 0x3877c89c60 0 
* 0 
-32 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226
+4 0 226
+4 0 226 0 0 0 0 0 0 0 0 226
jcnd=10/226 0x3877c89c60 0 
* 0 
-24 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-16 0 226 226 0 1 0 0 1
+4 0 226 0 226
+4 0 226 0 0 1 0 0 1
+4 0 226
+4 0 226 0 0 0 0 0 0 0 0 226 4
jcnd=10/226 0x3877c89c60 0 
* 0 
+6 0 23164
+4 0 23164 23164
+3 0 23164 0 23164 0 0 22 0 0 22
+3 0 23164 23164
+4 0 23164 0 23164
+4 0 23164 23164
+4 0 23164 0 23164 0 0 14 0 0 14
+4 0 23164 23164
+4 0 23164 0 23164
+4 0 23164
jump=23164 -80 0 
* 0 
-30 0 216 216
+3 0 216 0 216
+3 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216 0 0 2 0 0 2
+4 0 216 216
+4 0 216 0 216
+4 0 216
jump=216 -80 0 
* 0 
-24 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226
jump=226 -80 0 
* 0 
-16 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216
+4 0 216
jump=216 -80 0 
* 0 
+8 0 216 216
+3 0 216
+4 0 216 0 0 1 0 0 1
+4 0 216
+4 0 216
jump=216 -39 0 
* 0 
+9 0 226
+3 0 226 0 0 0 0 0 0 0 0 226
+6 0 226 226
+3 0 226
+4 0 226
jump=226 -72 0 
* 0 
+8 0 216
+4 0 216 216
+3 0 216 0 0 0 0 0 0 0 0 216
+2 0 216
+4 0 216
jump=216 -99 0 
* 0 
+11 0 226 226 0 1 0 0 1
+3 0 226
+4 0 226
+4 0 226
+4 0 226
jump=226 0x3877c89b78 0 
* 0 
+9 0 224 224
+3 0 224
+4 0 224
+4 0 224
+4 0 224
jump=224 0x3877c89b70 0 
* 0 
+9 0 226 226
+3 0 226
+4 0 226
+4 0 226
+4 0 226
jump=226 0x3877c89b68 0 
* 0 
+9 0 216 216
+3 0 216
+4 0 216
+4 0 216
+4 0 216
jump=216 0x3877c89b60 0 
* 0 
+9 0 1766 0 1766 1 0 0 1
+3 0 1766 1766

fn=(104) alloc_perturb
0x3877c77180 0 1641 1641 0 1 0 0 1
+6 0 1641
+2 0 1641 0 0 0 0 0 0 0 0 1641 1
+2 0 1641 1641

fn=(38)
0x3877c79a00 0 1776 0 1776 1 0 0 1
+2 0 1776
+3 0 1776 0 1776
+2 0 1776 0 1776
+2 0 1776 0 1776 0 0 1 0 0 1
+2 0 1776
+3 0 1776 0 1776
+1 0 1776 0 1776
+1 0 1776
+4 0 1776
+4 0 1776 0 0 0 0 0 0 0 0 1776
+6 0 1776
+4 0 1776
+6 0 1776
+3 0 1776
+4 0 1776
+4 0 1776
+4 0 1776
+3 0 1776 0 0 0 0 0 0 0 0 1776
+6 0 1776 1776 0 1 1 0 1 1
+7 0 1776 0 0 0 0 0 0 0 0 1776 7
jcnd=1654/1776 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 23
jcnd=16/122 0x3877c79af8 0 
* 0 
+6 0 106
+4 0 106 106 0 0 1 0 0 1
+4 0 106
+3 0 106
+4 0 106 106 0 0 1 0 0 1
+9 0 106 0 0 0 0 0 0 0 0 106 2
jcnd=106/106 +3 0 
* 0 
+3 0 106 0 106 1 0 0 1
+5 0 106
+3 0 106
+3 0 106 0 0 0 0 0 0 0 0 106
+2 0 106
jump=106 0x3877c7a2db 0 
* 0 
+46 0 106 106
+4 0 106 0 0 1 0 0 1
+3 0 106
+3 0 106
+2 0 106 0 0 0 0 0 0 0 0 106
+6 0 135 135
+6 0 135
+4 0 135
+2 0 135 0 0 0 0 0 0 0 0 135
+6 0 135
+3 0 135
+4 0 135 135
+1 0 135 135
+1 0 135 135
+2 0 135 135
+2 0 135 135
+2 0 135 135
+2 0 135 135
-14 0 1641
+4 0 1641 1641
+1 0 1641 1641
+1 0 1641 1641
+2 0 1641 1641
+2 0 1641 1641
+2 0 1641 1641
+2 0 1641 1641
+7 0 1670
+7 0 1670 0 0 1 0 0 1 0 0 1670 7
jcnd=768/1670 0x3877c79b70 0 
* 0 
+2 0 902
+3 0 902
+5 0 902
+3 0 902
+4 0 902 0 902
+4 0 902
+2 0 902
+5 0 902 902 0 0 2 0 0 2
+4 0 902
+3 0 902 0 0 0 0 0 0 0 0 902
jcnd=902/902 0x3877c79bc2 0 
* 0 
+78 0 768 0 0 1 0 0 1
+3 0 768
+4 0 768
+4 0 768 0 0 1 0 0 1 0 0 768
jcnd=768/768 0x3877c7a1a4 0 
* 0 
+30 0 768 768
+6 0 768
+5 0 768 0 0 0 0 0 0 0 0 768 1
jcnd=767/768 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 847 224 179 8 1 0 8 1 0 175 23
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1669 0 0 1 0 0 1
+3 0 1669
+3 0 1669
+3 0 1669
+4 0 1669
+3 0 1669
+4 0 1669 0 1669
+5 0 1669
+3 0 1669 0 1669
+4 0 1669 0 1669
+4 0 1669 0 1669
+5 0 1669
+3 0 1669
+3 0 1669
+3 0 1669
+3 0 1669
+4 0 1669
+4 0 1669 0 0 1 0 0 1
+4 0 1669 0 1669
+4 0 1669
+4 0 1669 0 1669
+5 0 1669 0 1669
+5 0 1669
+3 0 1669
+3 0 1669 0 1669
+5 0 1669
+5 0 1669
+3 0 1669 0 1669
+4 0 1669 0 1669
+4 0 1669
+6 0 1669 0 1669
+4 0 1669 0 1669
+5 0 1669 0 0 1 0 0 1
+3 0 1669
+3 0 1669
+3 0 1669
jump=1669 +87 0 
* 0 
+8 0 1163
+3 0 1163
+4 0 1163
+2 0 1163
+2 0 1163
+3 0 1163
+3 0 1163
+3 0 1163
+2 0 1163
+2 0 1163
+5 0 1163
+2 0 1163 1163 0 0 1 0 0 1
+4 0 1163
+3 0 1163
+4 0 1163 0 1163
+4 0 1163 0 1163
+8 0 1163
+7 0 1163 0 1163
+4 0 1163 0 1163
+4 0 1163 0 1163
+4 0 1163 0 0 0 0 0 0 0 0 1163
-38 0 507
+3 0 507
+4 0 507 0 507
+4 0 507 0 507
+8 0 507
+7 0 507 0 507
+4 0 507 0 507
+4 0 507 0 507
+4 0 507 0 0 0 0 0 0 0 0 507
+6 0 3340 3340 0 1 0 0 1
+4 0 3340
+3 0 3340 0 0 0 0 0 0 0 0 3340 142
jcnd=1622/3340 0x3877c79ef0 0 
* 0 
+6 0 1718 1718
+4 0 1718 1718 0 0 1 0 0 1
+4 0 1718
+4 0 1718 0 0 0 0 0 0 0 0 1718
+6 0 1718 1718 0 1 1 0 1 1
+7 0 1718 0 0 0 0 0 0 0 0 1718
+6 0 1718
+4 0 1718
+7 0 1718 0 0 0 0 0 0 0 0 1718 6
jcnd=809/1718 +11 0 
* 0 
+2 0 909
+3 0 909 0 0 0 0 0 0 0 0 909 62
jcnd=833/909 0x3877c79e28 0 
* 0 
+6 0 1699
+3 0 1699 0 1699
+4 0 1699 0 1699
+5 0 1699 0 0 0 0 0 0 0 0 1699 17
jcnd=29/1699 0x3877c7a090 0 
* 0 
+6 0 1670
+7 0 1670 0 0 0 0 0 0 0 0 1670 370
jcnd=1163/1670 0x3877c79c50 0 
* 0 
+6 0 507 0 0 1 0 0 1
+3 0 507
+4 0 507
+4 0 507 0 0 0 0 0 0 0 0 507
+6 0 507
+3 0 507
+4 0 507
+2 0 507
+2 0 507
+3 0 507
+3 0 507
+8 0 507
+3 0 507
+2 0 507
+2 0 507
+4 0 507 507 0 0 2 0 0 2
+4 0 507
+3 0 507 0 0 1 0 0 1 0 0 507 9
jcnd=507/507 0x3877c79e15 0 
* 0 
0x3877c79e15 0 507 0 507
+4 0 507 0 507
+4 0 507
+3 0 507
jump=507 0x3877c79c73 0 
* 0 
+8 0 833 833 0 1 0 0 1
+4 0 833
+3 0 833 0 0 0 0 0 0 0 0 833 335
jcnd=428/833 0x3877c79ce1 0 
* 0 
+6 0 405 405
+5 0 405 0 0 0 0 0 0 0 0 405 5
jcnd=386/405 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 15 0 0 15
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9 0 0 1 0 0 1
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 1 0 0 1
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 1622 0 0 1 0 0 1
+7 0 1622
+3 0 1622 0 0 0 0 0 0 0 0 1622 4
jcnd=760/1622 0x3877c7a0b0 0 
* 0 
+6 0 1606 1606 0 1 0 0 1
+4 0 1606
+3 0 1606
+3 0 1606
+2 0 1606
+4 0 1606
+3 0 1606
+3 0 1606
+2 0 1606
+2 0 1606
+2 0 1606
+2 0 1606 1606 0 0 1 0 0 1
+8 0 1606
+5 0 1606
+5 0 1606
+2 0 1606 0 0 0 0 0 0 0 0 1606
-2 0 805
+2 0 805 0 0 0 0 0 0 0 0 805 1
jcnd=1/805 +14 0 
* 0 
+2 0 2410
+2 0 2410 0 0 0 0 0 0 0 0 2410 33
jcnd=1439/2410 +64 0 
* 0 
+2 0 971
+8 0 971
+3 0 971
+3 0 971 0 0 0 0 0 0 0 0 971 1
jcnd=1/971 0x3877c79fc0 0 
* 0 
-6 0 1120
+3 0 1120
+3 0 1120 0 0 0 0 0 0 0 0 1120 11
jcnd=695/1120 0x3877c79fc0 0 
* 0 
+2 0 1395
+2 0 1395 1395
+8 0 1395
+2 0 1395 0 0 0 0 0 0 0 0 1395 26
jcnd=1119/1395 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
jcnd=1/276 +14 0 
* 0 
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 11817
+4 0 11817
+2 0 11817
+2 0 11817 0 0 0 0 0 0 0 0 11817 849
jcnd=10317/11817 -8 0 
* 0 
-2 0 1439 0 0 1 0 0 1
+2 0 1439 0 0 0 0 0 0 0 0 1439 22
jcnd=1287/1439 -8 0 
* 0 
+2 0 1715 1715 0 0 16 0 0 16
+4 0 1715 0 0 1 0 0 1
+3 0 1715 0 0 0 0 0 0 0 0 1715 736
jcnd=910/1715 0x3877c7a1cf 0 
* 0 
+6 0 805
+2 0 805
+4 0 805
+2 0 805
+2 0 805
+2 0 805 0 805
+8 0 805
jump=805 0x3877c79f30 0 
* 0 
+37 0 696 696 0 1 0 0 1
+5 0 696 696
+4 0 696
+4 0 696 696
+5 0 696 0 0 0 0 0 0 0 0 696
jcnd=696/696 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 760 760
+4 0 760
+4 0 760
+2 0 760
+5 0 760 760 0 1 0 0 1
+4 0 760
+3 0 760 0 0 0 0 0 0 0 0 760 8
jcnd=728/760 0x3877c79f00 0 
* 0 
+6 0 32 32
+4 0 32 0 0 0 0 0 0 0 0 32 4
jcnd=16/32 0x3877c79f00 0 
* 0 
+6 0 16
+3 0 16 16
+4 0 16 16
+4 0 16
+3 0 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a650 0 
* 0 
+26 0 16 0 0 1 0 0 1
+3 0 16 16
+4 0 16
+3 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16 2
+6 0 16 16
+8 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16 0 1 0 0 1
+4 0 16
+3 0 16 0 0 0 0 0 0 0 0 16 16
jcnd=16/16 0x3877c7a659 0 
* 0 
+6 0 16
+4 0 16 0 0 0 0 0 0 0 0 16 4
jcnd=8/16 0x3877c7a2e3 0 
* 0 
+6 0 8 8
+4 0 8
+7 0 8 8
+4 0 8 0 0 0 0 0 0 0 0 8
+6 0 8
+4 0 8
+7 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 8
+4 0 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x3877c7a285 0 
* 0 
+31 0 768 0 0 1 0 0 1
+3 0 768 0 768
+4 0 768
jump=768 0x3877c79b99 0 
* 0 
+36 0 910 910 0 1 0 0 1
+4 0 910 910 0 0 2 0 0 2
+4 0 910
+3 0 910 910
+4 0 910
+4 0 910
+3 0 910
+3 0 910 910
+4 0 910 0 0 0 0 0 0 0 0 910
+6 0 910 910
+4 0 910 0 0 0 0 0 0 0 0 910
+6 0 910 910 0 1 0 0 1
+8 0 910 0 910
+4 0 910 0 910
+4 0 910 0 0 0 0 0 0 0 0 910 11
jcnd=418/910 +38 0 
* 0 
+2 0 492 492 0 0 1 0 0 1
+4 0 492
+3 0 492 0 0 0 0 0 0 0 0 492
+2 0 492 492
+5 0 492 0 0 0 0 0 0 0 0 492
+6 0 492 492
+4 0 492 0 492
+4 0 492 492
+4 0 492 0 492
+4 0 492
+4 0 492 0 0 0 0 0 0 0 0 492
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 889 889
+4 0 889 889 0 1 0 0 1
+4 0 889 0 0 0 0 0 0 0 0 889
+6 0 889
+4 0 889
+7 0 889 0 889 0 0 7 0 0 7
+4 0 889 0 889
+4 0 889 0 889
+4 0 889 0 889
+4 0 889 0 0 0 0 0 0 0 0 889 4
jcnd=424/889 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 424
+7 0 424 0 0 0 0 0 0 0 0 424
jcnd=424/424 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7 0 0 1 0 0 1
+4 0 7
jump=7 +71 0 
* 0 
-46 0 890
+7 0 890 0 890
+4 0 890
+3 0 890
+3 0 890
+4 0 890
+3 0 890
+4 0 890
+3 0 890
+3 0 890
+4 0 890 0 890
+4 0 890 0 890
+4 0 890
jump=890 +71 0 
* 0 
+40 0 106 0 0 1 0 0 1
+3 0 106
jump=106 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 926
+4 0 926 0 0 1 0 0 1
+3 0 926
+3 0 926 0 926
cfn=(104)
calls=926 0x3877c77180 0 
* 0 3704 1852 0 1 0 0 1 0 0 926
+5 0 926
+3 0 926
jump=926 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 696 0 0 1 0 0 1
+7 0 696
+2 0 696
+4 0 696
+3 0 696
+3 0 696 0 696
+5 0 696
+3 0 696
+4 0 696
+3 0 696 0 0 1 0 0 1
+4 0 696
+4 0 696
+3 0 696
+4 0 696 0 696
+4 0 696 0 696 0 0 25 0 0 25
+4 0 696
+3 0 696
+3 0 696 0 696
cfn=(104)
calls=696 0x3877c77180 0 
* 0 2784 1392 0 0 0 0 0 0 0 696 1
+5 0 696
+3 0 696
jump=696 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 16 16 0 1 0 0 1
+4 0 16
jump=16 0x3877c7a10e 0 
* 0 
+5 0 16 16
+5 0 16 0 0 0 0 0 0 0 0 16
+2 0 16 16
+4 0 16 0 16
+4 0 16 16
+4 0 16 0 16
+4 0 16
jump=16 0x3877c7a14b 0 
* 0 

totals: 17507336 7254261 4130080 241 114 152 241 114 152 475091 7127 10646 219
