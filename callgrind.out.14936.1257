version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1257


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1628590293 - 1628674031
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 250 0 0 1 0 0 1
+3 0 250 0 0 0 0 0 0 0 0 250
+2 0 250
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=250 0x3877c7b8b0 0 
* 0 26183 6552 3502 19 4 0 19 4 0 6061 75
* 0 250 250 0 1 1 0 1 1 0 0 0 250

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 250 0 250 1 0 0 1
+1 0 250
+5 0 250
+3 0 250 0 250
+1 0 250
+4 0 250 0 0 1 0 0 1
+3 0 250
+4 0 250
+3 0 250 0 250 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=250 0x3877c7aa50 0 
* 0 54077 8783 8166 31 26 32 31 26 32 9246 401
* 0 250 250 0 1 1 0 1 1 0 0 0 250
+5 0 250
+3 0 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 +96 0 
* 0 
+96 0 250 0 0 1 0 0 1
+4 0 250 250
+1 0 250 250
+1 0 250 250

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 120
+4 * 120
+3 * 120 0 120
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=120 0x4044cc -35 
* * 600 240 240
+5 * 120 120
+1 * 120 120

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120 1 0 0 1
+4 +1 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=120 0x4049d4 -35 
* * 720 240 360 1 0 0 1
+5 * 120 120
+1 * 120 120

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 120
+4 * 120
+3 * 120 0 120
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=120 0x404520 -35 
* * 600 240 240
+5 * 120 120
+1 * 120 120

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=120 0x404a28 -35 
* * 720 240 360 1 0 1 1 0 1
+5 * 120 120
+1 * 120 120

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 120 0 120 1 0 0 1
+1 * 120
+3 * 120 0 120
+4 * 120 120
+4 * 120 120
+1 * 120 120

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 60 0 60
+1 * 60
+3 * 60
+4 * 60 0 60
+4 * 60 0 60
+4 * 60 0 60
+4 +1 60 60
+4 * 60 60
+4 * 60 60
+4 * 60
+3 * 60
+3 * 60 0 60
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=60 0x40406a -87 
* * 1440 480 540 0 4 3 0 4 3 60
+5 * 60 60
+1 * 60 60

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=10 +8 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=10 +7 113 
* * 60 20 20
+5 * 10 10
+1 * 10 10

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 120 0 120
+1 * 120
+3 * 120 0 120
+4 * 120 120
+4 * 120 120
+1 * 120 120

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 60 0 60
+1 * 60
+3 * 60
+4 * 60 0 60
+4 * 60 0 60
+4 * 60 0 60
+4 +1 60 60
+4 * 60 60
+4 * 60 60
+4 * 60
+3 * 60
+3 * 60 0 60
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=60 0x403df2 -87 
* * 1440 480 540 0 5 1 0 5 1 60
+5 * 60 60
+1 * 60 60

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 170 0 170
+1 * 170
+3 * 170 0 170 0 0 1 0 0 1
+4 +1 170 170
+4 * 170 170
+1 * 170 170

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 +1 240
+4 * 240
+3 * 240 0 240
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=240 0x404ffe 790 
* * 1440 720 480 1 0 0 1
+5 * 240 240
+3 * 240 240
+1 * 240 240

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+4 +1 240 240
+4 * 240 240
+1 * 240 240

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 +1 240
+4 * 240
+3 * 240 0 240 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=240 0x40500c 790 
* * 1440 720 480 1 0 0 1
+5 * 240 240
+3 * 240 240
+1 * 240 240

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 170 0 170
+1 * 170
+3 * 170 0 170
+4 +1 170 170
+4 * 170 170
+1 * 170 170

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+4 +1 240 240 0 1 0 0 1
+4 * 240 240
+1 * 240 240

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 120 0 120
+1 * 120
+3 * 120 0 120
+4 * 120 0 120
+4 * 120 120
+4 * 120 120
+1 * 120 120

fl=(5)
fn=(28)
0x404992 113 135 0 135 1 0 0 1
+1 * 135
+3 * 135 0 135
+4 +1 135
+10 * 135 135
+1 * 135 135

fn=(176)
0x4044cc 86 120 0 120
+1 * 120
+3 * 120 0 120
+4 * 120 120
+1 * 120 120

fn=(224)
0x403df2 129 60 0 60
+1 * 60
+3 * 60
+4 * 60 0 60
+4 * 60 0 60
+4 * 60 0 60
+4 +1 60 60
+4 * 60
+3 * 60
+5 * 60 0 60
cfi=(16)
cfn=(226)
calls=60 0x402d61 -20 
* * 420 180 180
+5 * 60
+3 * 60 0 0 0 0 0 0 0 0 60
+2 * 60 60
+4 * 60 60 0 0 5 0 0 5
+2 * 60 0 60 0 0 1 0 0 1
+2 * 60 60
+1 * 60 60

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125
+3 * 125 0 125
cob=(5)
cfi=(8)
cfn=(164)
calls=125 0x387e4bb2f0 0 
* * 13702 3415 1802 21 5 0 21 5 0 3175 62 125
* * 125 125 0 1 1 0 1 1 0 0 0 125
+5 * 125 125
+1 * 125 125

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +1 125 125
+4 * 125
+3 * 125 0 125
cob=(5)
cfi=(8)
cfn=(164)
calls=125 0x387e4bb2f0 0 
* * 13481 3387 1700 0 0 0 0 0 0 3136 13 125
* * 125 125 0 0 0 0 0 0 0 0 0 125
+5 * 125 125
+1 * 125 125

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 125 0 125 1 0 0 1
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +2 125 125
+4 * 125
+3 * 125 0 125
cfn=(102)
calls=125 0x4048de +12 
* * 750 250 250 1 0 0 1
+5 * 125 125
+4 * 125 0 0 1 0 0 1
+3 * 125
+2 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 +7 +3 
* * 
+7 +3 125 125
+4 * 125
+4 * 125
+3 * 125 0 125
cob=(5)
cfi=(8)
cfn=(32)
calls=125 0x387e4bd0b0 0 
* * 29346 4923 4308 20 11 17 20 11 17 4877 186 125
* * 125 125 0 0 0 0 0 0 0 0 0 125
+5 +1 125 125
+1 * 125 125

fn=(18)
0x404a28 81 120 0 120 1 0 0 1
+1 * 120
+3 * 120 0 120 0 0 1 0 0 1
+4 * 120 0 120
+4 * 120 120
+1 * 120 120

fn=(92)
0x4049d4 81 120 0 120 1 0 0 1
+1 * 120
+3 * 120 0 120
+4 * 120 0 120
+4 * 120 120
+1 * 120 120

fn=(196)
0x404520 86 120 0 120
+1 * 120
+3 * 120 0 120
+4 * 120 120
+1 * 120 120

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 125 0 125 1 0 0 1
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125 1 0 0 1
+4 +2 125 125
+4 * 125
+3 * 125 0 125
cfn=(28)
calls=125 0x404992 +12 
* * 750 250 250 1 0 0 1
+5 * 125 125
+4 * 125
+3 * 125
+2 * 125 0 0 0 0 0 0 0 0 125
jcnd=125/125 +7 +3 
* * 
+7 +3 125 125
+4 * 125
+4 * 125
+3 * 125 0 125
cob=(5)
cfi=(8)
cfn=(32)
calls=125 0x387e4bd0b0 0 
* * 28731 4860 4608 15 16 16 15 16 16 4619 215 125
* * 125 125 0 1 1 0 1 1 0 0 0 125
+5 +1 125 125
+1 * 125 125

fn=(102)
0x4048de 113 135 0 135 1 0 0 1
+1 * 135
+3 * 135 0 135
+4 +1 135
+10 * 135 135
+1 * 135 135

fn=(266)
0x40406a 129 60 0 60
+1 * 60
+3 * 60
+4 * 60 0 60
+4 * 60 0 60
+4 * 60 0 60
+4 +1 60 60
+4 * 60
+3 * 60
+5 * 60 0 60
cfi=(16)
cfn=(226)
calls=60 0x402d61 -20 
* * 420 180 180
+5 * 60
+3 * 60 0 0 0 0 0 0 0 0 60
+2 * 60 60
+4 * 60 60 0 0 4 0 0 4
+2 * 60 0 60 0 0 3 0 0 3
+2 * 60 60
+1 * 60 60

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=120 0x404484 107 
* * 38966 11960 11244 25 3 2 25 3 2 1280 71 236 28
+5 * 120 120
+1 * 120 120

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=10 0x4048f2 107 
* * 2292 741 707 4 0 3 4 0 3 48 3 9
+5 * 10 10
+1 * 10 10

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +2 120 120 0 1 0 0 1
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=120 0x404a36 450 
* * 35606 10760 10044 24 3 2 24 3 2 1280 71 236 28
+5 * 120 120
+1 * 120 120

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=120 0x40439c 107 
* * 38966 11960 11244 7 0 3 7 0 3 1280 69 236
+5 * 120 120
+1 * 120 120

fn=(116)
0x40439c 107 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +10 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=120 0x4047d7 -26 
* * 37286 11360 10644 7 0 3 7 0 3 1280 69 236
+5 +1 120 120
+1 * 120 120

fn=(118)
0x4047d7 91 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=120 0x4049e2 450 
* * 35606 10760 10044 7 0 3 7 0 3 1280 69 236
+5 * 120 120
+1 * 120 120

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=10 0x404772 -25 
* * 2442 791 767 2 0 1 2 0 1 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +7 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(230)
calls=10 0x40465c -25 
* * 2442 791 767 5 0 3 5 0 3 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(232)
0x4048f2 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=10 0x404af4 -26 
* * 2152 691 657 4 0 3 4 0 3 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=10 0x404b99 -26 
* * 2152 691 657 2 0 1 2 0 1 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(274)
0x404b99 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=10 0x404cf0 450 
* * 2012 641 607 1 0 1 1 0 1 48 2 9
+5 * 10 10
+1 * 10 10

fn=(50)
0x404484 107 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +10 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(52)
calls=120 0x404829 -26 
* * 37286 11360 10644 25 3 2 25 3 2 1280 71 236 28
+5 +1 120 120
+1 * 120 120

fn=(270)
0x404772 256 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(272)
calls=10 0x4049a6 107 
* * 2292 741 707 2 0 1 2 0 1 48 2 9
+5 * 10 10
+1 * 10 10

fn=(234)
0x404af4 91 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10 1 0 0 1
+4 * 10 0 10
+4 +2 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=10 0x404caa 450 
* * 2012 641 607 2 0 3 2 0 3 48 3 9
+5 * 10 10
+1 * 10 10

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 500 0 500 1 0 0 1
+1 * 500
+3 * 500 0 500 0 0 1 0 0 1
+4 +1 500 500
+4 * 500 500 0 1 1 0 1 1
+4 * 500
+3 * 500 500
+4 * 500 500
+3 * 500
+3 * 500
+3 * 500
+4 * 500 500
+1 * 500 500

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=120 0x404236 -14 
* * 32688 6239 5860 21 16 12 21 16 12 4697 197 240
+5 * 120 120
+4 * 120 0 120
+3 +1 120 120
+4 * 120 120 0 1 0 0 1
+3 * 120 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+3 * 120 120
+4 * 120
+4 * 120
+3 * 120 120
+4 * 120 0 120
+4 +1 120 120
+1 * 120 120

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120 120 0 1 0 0 1
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=120 0x403fbe -14 
* * 33149 6287 5555 21 6 12 21 6 12 4920 159 240
+5 * 120 120
+4 * 120 0 120
+3 +1 120 120
+4 * 120 120
+3 * 120 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+3 * 120 120
+4 * 120
+4 * 120
+3 * 120 120
+4 * 120 0 120
+4 +1 120 120
+1 * 120 120

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 60 0 60
+1 * 60
+3 * 60 0 0 1 0 0 1
+4 * 60 0 60
+4 * 60 0 60
+4 +2 60 60
+4 * 60 60
+4 * 60 60
+4 * 60 60
+4 * 60
+3 * 60 0 0 0 0 0 0 0 0 60
jcnd=5/60 +51 +10 
* * 
+2 +3 55 55
+4 * 55 55
+4 * 55 55
+4 -1 55 55
+4 * 55
+3 * 55
+3 * 55 0 55
cfi=(3)
cfn=(264)
calls=55 0x4036b1 215 
* * 2090 715 770 0 4 1 0 4 1 55
+5 +2 55 55
+4 * 55 55
+4 * 55
+4 * 55 55
+4 * 55 0 55
+4 * 55
jump=55 +36 +8 
* * 
+2 +6 5 5
+4 * 5
+3 * 5 0 5
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=5 0x4039c4 556 
* * 115 45 35
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=5 0x4036de 318 
* * 6808 2127 1843 18 1 7 18 1 7 359 27 29
+5 +2 60 60
+1 * 60 60

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 255 0 255 1 0 0 1
+1 * 255
+3 * 255 0 255 1 0 0 1
+4 +1 255 255
+4 * 255 255
+1 * 255 255

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+3 * 120 0 120
+4 * 120
+4 * 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=120 0x404380 726 
* * 1200 600 480
+5 * 120 120
+4 * 120 120
+1 * 120 120

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 120 0 120
+1 * 120
+3 * 120 0 120
+1 * 120
+4 * 120 0 120 1 0 0 1
+4 +2 120 120
+4 * 120
+3 * 120 0 120
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=120 0x40325e 113 
* * 720 360 240
+5 * 120
+3 * 120 120
+4 * 120 120
+4 * 120 120
+4 * 120 120
+3 -1 120
+3 * 120
+3 * 120 0 120
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=120 0x40326c 148 
* * 3720 1200 1440 4 0 0 4
+5 +1 120 120
+4 * 120
+3 * 120 0 120
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=120 0x4031ec 159 
* * 22712 6786 4506 25 6 0 25 6 0 3194 61 240
+5 * 120
jump=120 +28 * 
* * 
+28 * 120 0 0 1 0 0 1
+4 * 120 120
+1 * 120 120
+1 * 120 120

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 125 0 125 1 0 0 1
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +2 125 125
+5 * 125 0 0 0 0 0 0 0 0 125
+2 +1 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfi=(5)
cfn=(160)
calls=125 0x4044d6 -65 
* * 15202 3915 2427 22 6 0 22 6 0 3175 62 250
+5 +1 125 125
+1 * 125 125

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 120 0 120
+1 * 120
+3 * 120 0 120
+1 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=120 0x4043ca -45 
* * 4320 1560 1680 4 0 4 4 0 4
+5 +1 120 120 0 1 0 0 1
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(20)
calls=120 0x404412 +43 
* * 35688 7679 6700 22 16 12 22 16 12 4697 197 240
+5 * 120
jump=120 +28 * 
* * 
+28 * 120
+4 * 120 120
+1 * 120 120
+1 * 120 120

fn=(14)
0x4043ca 90 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120 0 0 1 0 0 1
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(4)
cfn=(16)
calls=120 0x404804 +24 
* * 2160 720 840 2 0 1 2 0 1
+5 * 120 120
+4 * 120 0 120 0 0 2 0 0 2
+7 * 120 120
+4 * 120 0 120 1 0 0 1
+8 * 120 120
+4 * 120 0 120
+8 +1 120 120
+1 * 120 120

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 120 0 120 1 0 0 1
+1 * 120
+3 * 120 0 120
+2 * 120 0 120
+2 * 120 0 120
+1 * 120 0 0 1 0 0 1
+4 * 120 0 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120
+3 * 120 0 120
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=120 0x4039fc 117 
* * 720 360 240 2 0 0 2
+5 * 120
+3 * 120 0 120
cfi=(3)
cfn=(84)
calls=120 0x4039ed -88 
* * 720 360 240
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(2)
calls=120 0x402d74 645 
* * 1560 720 240
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120
+3 * 120
+3 * 120 0 120 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=120 0x403a0a 134 
* * 43109 10127 8915 28 6 12 28 6 12 4920 159 240
+5 +4 120 120
+4 * 120
+3 * 120 0 120
cfn=(106)
calls=120 0x40325e 113 
* * 720 360 240 1 0 0 1
+5 * 120
+3 * 120 120
+4 * 120 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=120 0x403a98 565 
* * 3000 1200 960 2 0 0 2
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(112)
calls=120 0x403a68 547 
* * 3000 1200 960
+5 * 120
+3 * 120
+3 * 120
+3 * 120
+3 * 120 0 120
cfi=(11)
cfn=(114)
calls=120 0x403ac9 -60 
* * 40766 12560 11964 7 0 3 7 0 3 1280 69 236
+5 -3 120 120
+4 * 120 0 120
+4 * 120
jump=120 +28 +4 
* * 
+28 +4 120
+4 * 120 120
+1 * 120 120
+2 * 120 120
+2 * 120 120
+1 * 120 120

fn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
0x403d98 171 125 0 125 1 0 0 1
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +2 125 125
+5 * 125 0 0 0 0 0 0 0 0 125 5
+2 +1 125 125
+4 * 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfi=(5)
cfn=(190)
calls=125 0x40452a -65 
* * 14981 3887 2325 0 0 0 0 0 0 3136 13 250
+5 +1 125 125
+1 * 125 125

fn=(22)
0x404236 167 125 0 125 1 0 0 1
+1 * 125
+3 * 125
+4 * 125 0 125 1 0 0 1
+4 * 125 0 125
+4 0 125 125
+5 0 125 0 0 0 0 0 0 0 0 125
+2 0 125 125
+4 0 125 125
+4 0 125
+5 0 125
+3 0 125
+3 0 125 0 125
fi=(6) ???
cfi=(5)
cfn=(26)
calls=125 0x404730 99 
* 0 31981 5860 5608 19 17 16 19 17 16 4744 215 250
+5 0 125
fi=(6)
jump=125 +7 0 
* 0 
+7 0 125 125
+1 0 125 125

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+4 * 120 0 120
+4 * 120
+4 * 120 0 0 1 0 0 1
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=120 0x404468 726 
* * 1200 600 480 1 0 0 1
+5 * 120 120
+4 * 120 120
+1 * 120 120

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+3 * 120 0 120
+4 * 120
+4 * 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(10)
cfn=(44)
calls=120 0x404468 726 
* * 1200 600 480
+5 * 120 120
+4 * 120 120
+1 * 120 120

fn=(86)
0x403a0a 134 120 0 120
+1 * 120
+3 * 120 0 120
+1 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=120 0x4042e2 -45 
* * 4320 1560 1680 5 0 0 5
+5 +1 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120 1 0 0 1
cfn=(94)
calls=120 0x40432a +43 
* * 36149 7727 6395 22 6 12 22 6 12 4920 159 240
+5 * 120
jump=120 +28 * 
* * 
+28 * 120
+4 * 120 120
+1 * 120 120
+1 * 120 120

fn=(88)
0x4042e2 90 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120 1 0 0 1
cfi=(4)
cfn=(90)
calls=120 0x4047b2 +24 
* * 2160 720 840 3 0 0 3
+5 * 120 120
+4 * 120 0 120
+7 * 120 120
+4 * 120 0 120
+8 * 120 120
+4 * 120 0 120
+8 +1 120 120
+1 * 120 120

fn=(156)
0x4031ec 159 120 0 120 1 0 0 1
+1 * 120
+3 * 120 0 120
+1 * 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120 120 0 1 0 0 1
+4 * 120
+3 * 120 120
+4 * 120 120
+3 * 120
+3 * 120
+3 * 120
+4 * 120
+3 * 120 120
+4 * 120 120
+3 -1 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(158)
calls=120 0x403ce6 +11 
* * 16592 4506 2946 22 6 0 22 6 0 3194 61 240
+5 +1 120 120
+4 * 120
+3 * 120 0 120
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=120 0x4031b8 -82 
* * 2760 960 960 1 0 0 1
+5 * 120
jump=120 +28 * 
* * 
+28 * 120
+4 * 120 120
+1 * 120 120
+1 * 120 120

fn=(172)
0x4031b8 79 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 120
+4 * 120
+3 * 120 0 120
cfi=(4)
cfn=(174)
calls=120 0x403ccc +42 
* * 1680 600 600
+5 * 120 120
+1 * 120 120

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 5 0 5 1 0 0 1
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=5 0x40404e 726 
* * 50 25 20 1 0 0 1
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=5 0x4045cc 650 
* * 160 55 55 1 0 0 1
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 5
+4 * 5
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(2)
calls=5 0x402d74 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(210)
calls=5 0x4045cc 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(246)
0x4039c4 556 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(248)
calls=5 0x4042c6 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 260 0 260 1 0 0 1
+1 * 260
+3 * 260 0 260
+4 +1 260 260
+4 * 260 260 0 0 2 0 0 2
+4 * 260
+3 * 260 260
+4 * 260 260
+3 * 260
+3 * 260
+3 * 260
+4 * 260 260
+1 * 260 260

fn=(106)
0x40325e 113 255 0 255 1 0 0 1
+1 * 255
+3 * 255 0 255
+4 +1 255 255
+4 * 255 255
+1 * 255 255

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 5 0 5
+1 * 5
+3 * 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(204)
calls=5 0x40404e 726 
* * 50 25 20
+5 * 5 5
+4 * 5 5
+1 * 5 5

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5
+3 * 5 5
+4 * 5 0 0 1 0 0 1
+3 * 5
+3 * 5
+2 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +14 +3 
* * 
+14 +3 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(12)
cfn=(214)
calls=5 0x4045ee 216 
* * 65 35 15 0 0 0 0 0 0 5
+5 * 5 5
+3 * 5
+3 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfn=(10)
calls=5 0x402f54 645 
* * 65 30 10
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
+2 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(254)
calls=5 0x40470e 650 
* * 160 55 55
+5 * 5 5
+4 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 +16 * 
* * 
+16 * 5 5 0 1 0 0 1
+4 +1 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 130 0 130 1 0 0 1
+1 * 130
+3 * 130 0 130 0 0 1 0 0 1
+4 +1 130 130
+4 * 130 130
+1 * 130 130

fn=(82)
0x4039fc 117 130 0 130 1 0 0 1
+1 * 130
+3 * 130 0 130 1 0 0 1
+4 +1 130 130
+4 * 130 130
+1 * 130 130

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 60 0 60
+1 * 60
+3 * 60
+4 * 60 0 60
+4 * 60 0 60
+4 +2 60 60
+4 * 60 60
+4 * 60 60
+4 * 60 60
+4 * 60
+3 * 60 0 0 0 0 0 0 0 0 60 6
jcnd=5/60 +51 +10 
* * 
+2 +3 55 55
+4 * 55 55
+4 * 55 55
+4 -1 55 55
+4 * 55
+3 * 55
+3 * 55 0 55
cfi=(3)
cfn=(222)
calls=55 0x403373 215 
* * 2090 715 770 0 3 0 0 3 0 55
+5 +2 55 55
+4 * 55 55
+4 * 55
+4 * 55 55
+4 * 55 0 55
+4 * 55
jump=55 +36 +8 
* * 
+2 +6 5 5 0 1 0 0 1
+4 * 5
+3 * 5 0 5
cfn=(202)
calls=5 0x403688 556 
* * 115 45 35 2 0 0 2
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=5 0x4033a0 318 
* * 6949 2136 1846 27 7 9 27 7 9 391 31 29
+5 +2 60 60
+1 * 60 60

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 120 0 120 1 0 0 1
+1 * 120
+3 * 120 0 120
+2 * 120 0 120
+2 * 120 0 120
+1 * 120
+4 * 120 0 120 1 0 0 1
+4 * 120 0 120
+4 +2 120 120
+4 * 120
+3 * 120 0 120
cfn=(6)
calls=120 0x403b08 117 
* * 720 360 240 1 0 1 1 0 1
+5 * 120
+3 * 120 0 120
cfi=(3)
cfn=(8)
calls=120 0x403afa -88 
* * 720 360 240 1 0 0 1
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(10)
calls=120 0x402f54 645 
* * 1560 720 240 1 1 0 1 1
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120
+3 * 120
+3 * 120 0 120
cfn=(12)
calls=120 0x403b16 134 
* * 42648 10079 9220 27 16 16 27 16 16 4697 197 240
+5 +4 120 120 0 1 0 0 1
+4 * 120
+3 * 120 0 120
cfn=(40)
calls=120 0x40333c 113 
* * 720 360 240 2 0 0 2
+5 * 120
+3 * 120 120
+4 * 120 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(42)
calls=120 0x403ba4 565 
* * 3000 1200 960 3 0 0 3
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(46)
calls=120 0x403b74 547 
* * 3000 1200 960
+5 * 120
+3 * 120
+3 * 120
+3 * 120
+3 * 120 0 120 1 0 0 1
cfi=(11)
cfn=(48)
calls=120 0x403bd5 -60 
* * 40766 12560 11964 26 3 2 26 3 2 1280 71 236 28
+5 -3 120 120
+4 * 120 0 120
+4 * 120
jump=120 +28 +4 
* * 
+28 +4 120
+4 * 120 120
+1 * 120 120
+2 * 120 120
+2 * 120 120
+1 * 120 120

fn=(108)
0x403a98 565 120 0 120 1 0 0 1
+1 * 120
+3 * 120
+4 * 120 0 120
+4 +1 120 120
+4 * 120 120
+4 * 120 0 120
+4 * 120
+4 * 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfi=(10)
cfn=(110)
calls=120 0x404380 726 
* * 1200 600 480 1 0 0 1
+5 * 120 120
+4 * 120 120
+1 * 120 120

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 120 0 120
+1 * 120
+3 * 120 0 120
+1 * 120
+4 * 120 0 120 1 0 0 1
+4 +2 120 120
+4 * 120
+3 * 120 0 120
cfn=(40)
calls=120 0x40333c 113 
* * 720 360 240
+5 * 120
+3 * 120 120
+4 * 120 120
+4 * 120 120
+4 * 120 120
+3 -1 120
+3 * 120
+3 * 120 0 120
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=120 0x40334a 148 
* * 3720 1200 1440 2 0 0 2
+5 +1 120 120
+4 * 120
+3 * 120 0 120
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=120 0x4032ca 159 
* * 22478 6752 4402 3 0 0 3 0 0 3152 11 240
+5 * 120
jump=120 +28 * 
* * 
+28 * 120 0 0 1 0 0 1
+4 * 120 120
+1 * 120 120
+1 * 120 120

fn=(210)
0x4045cc 650 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(82)
calls=10 0x4039fc 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(212)
calls=10 0x4048c3 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(96)
0x403fbe 167 125 0 125 1 0 0 1
+1 * 125 0 0 1 0 0 1
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 0 125 125
+5 0 125 0 0 0 0 0 0 0 0 125
+2 0 125 125
+4 0 125 125
+4 0 125
+5 0 125
+3 0 125
+3 0 125 0 125
fi=(6)
cfi=(5)
cfn=(100)
calls=125 0x40461a 99 
* 0 32596 5923 5308 23 11 17 23 11 17 5002 186 250
+5 0 125
fi=(6)
jump=125 +7 0 
* 0 
+7 0 125 125
+1 0 125 125

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 5790 0 5790
+1 * 5790
+3 * 5790 0 5790
+4 * 5790 0 5790
+4 +1 5790 5790
+4 * 5790 5790
+3 * 5790 5790
+4 * 5790
+4 * 5790
+3 * 5790 5790
+1 * 5790 5790

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 5790 0 5790
+1 * 5790
+3 * 5790 0 5790 1 0 0 1
+4 * 5790 0 5790
+4 +1 5790 5790
+4 * 5790 5790
+3 * 5790 5790
+4 * 5790
+4 * 5790
+3 * 5790 5790
+1 * 5790 5790

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 120
+4 * 120
+3 * 120 0 120
cfi=(4)
cfn=(194)
calls=120 0x403d7e +42 
* * 1680 600 600 1 0 0 1
+5 * 120 120
+1 * 120 120

fn=(254)
0x40470e 650 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(6)
calls=10 0x403b08 117 
* * 60 30 20
+5 * 10
+3 * 10 0 10
cfi=(3)
cfn=(256)
calls=10 0x404978 221 
* * 150 50 50
+5 * 10 10
+1 * 10 10

fn=(186)
0x4032ca 159 120 0 120 1 0 0 1
+1 * 120
+3 * 120 0 120
+1 * 120
+4 * 120 0 120
+4 +2 120 120
+4 * 120 120
+4 * 120
+3 * 120 120
+4 * 120 120
+3 * 120
+3 * 120
+3 * 120
+4 * 120
+3 * 120 120
+4 * 120 120
+3 -1 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(188)
calls=120 0x403d98 +11 
* * 16358 4472 2842 1 0 0 1 0 0 3152 11 240
+5 +1 120 120
+4 * 120
+3 * 120 0 120
cfn=(192)
calls=120 0x403296 -82 
* * 2760 960 960 1 0 0 1
+5 * 120
jump=120 +28 * 
* * 
+28 * 120
+4 * 120 120
+1 * 120 120
+1 * 120 120

fl=(12)
fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240 1 0 0 1
+4 +1 240 240
+4 * 240
+3 * 240 0 240
cfi=(13)
cfn=(58)
calls=240 0x404d8f -77 
* * 1440 720 480 1 0 0 1
+5 * 240 240
+1 * 240 240

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130 1 0 0 1
+4 * 130 0 130
+4 * 130 0 130
+4 +2 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130
+4 * 130 0 130
+4 +1 130 130
+5 * 130 0 0 0 0 0 0 0 0 130
jcnd=5/130 +33 +2 
* * 
+2 +1 125 125
+4 * 125
+8 * 125 125
+4 * 125 125
+4 * 125
+3 * 125 0 0 1 0 0 1
+3 * 125 0 125 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=125 0x3877c83840 0 
* * 13418 3031 2786 11 2 1 11 2 1 1198 73 120 28
* * 125 125 0 1 1 0 1 1 0 0 0 125
+5 +1 130 130
+4 * 130
+8 * 130 130
+4 * 130
+3 +1 130 130
+1 * 130 130

fn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
0x404eb5 368 130 0 130
+1 * 130
+3 * 130
+4 * 130 0 130 1 0 0 1
+4 * 130 0 130
+4 * 130 0 130 0 0 1 0 0 1
+4 +2 130 130
+4 * 130 130
+4 * 130
+3 * 130
+3 * 130
+4 * 130 0 130
+4 +1 130 130
+5 * 130 0 0 0 0 0 0 0 0 130
jcnd=5/130 +33 +2 
* * 
+2 +1 125 125
+4 * 125
+8 * 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cob=(2)
cfi=(9)
cfn=(78)
calls=125 0x3877c83840 0 
* * 13418 3031 2786 0 0 4 0 0 4 1198 72 120
* * 125 125 0 0 0 0 0 0 0 0 0 125
+5 +1 130 130
+4 * 130
+8 * 130 130
+4 * 130
+3 +1 130 130
+1 * 130 130

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120 1 0 0 1
+4 * 120 0 120
+4 * 120 0 120
+4 +8 120 0 120
+4 +3 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(74)
calls=120 0x404f37 -22 
* * 16406 4280 3444 14 3 1 14 3 1 1280 71 236 28
+5 +1 120 120
+1 * 120 120

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 120 0 120
+1 * 120
+3 * 120 0 120
+2 * 120 0 120
+1 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +4 120 120
+4 * 120
+3 * 120 0 120
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=120 0x404878 277 
* * 1800 720 600 1 0 0 1
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=120 0x404d44 277 
* * 3000 1080 960 2 0 0 2
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(132)
calls=120 0x404d44 277 
* * 3000 1080 960
+5 * 120
+3 * 120
+3 * 120
+3 * 120 0 120
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=120 0x404d5e -49 
* * 18206 4880 4164 1 0 3 1 0 3 1280 69 236
+5 +1 120
+4 * 120 120
+1 * 120 120
+2 * 120 120
+1 * 120 120

fn=(236)
0x404caa 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(238)
calls=10 0x40455a 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=10 0x404de8 -36 
* * 1492 461 427 1 0 3 1 0 3 48 3 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(54)
0x404a36 450 120 0 120
+1 * 120
+3 * 120 0 120
+1 * 120
+4 * 120 0 120 1 0 0 1
+4 * 120 0 120
+4 * 120 0 120
+4 +10 120 120
+4 * 120
+3 * 120 0 120
cfn=(56)
calls=120 0x404c38 288 
* * 1800 720 600 3 0 0 3
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(56)
calls=120 0x404c38 288 
* * 1800 720 600
+5 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=120 0x404c52 -36 
* * 29366 8600 7884 20 3 2 20 3 2 1280 71 236 28
+5 +1 120
+4 * 120 120
+1 * 120 120
+1 * 120 120

fn=(60)
0x404c52 424 120 0 120
+1 * 120
+3 * 120 0 120
+2 * 120 0 120
+1 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +4 120 120
+4 * 120
+3 * 120 0 120
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=120 0x40492d 277 
* * 1800 720 600 2 0 0 2
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=120 0x404d9d 277 
* * 3000 1080 960 2 0 1 2 0 1
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(66)
calls=120 0x404d9d 277 
* * 3000 1080 960
+5 * 120
+3 * 120
+3 * 120
+3 * 120 0 120
cfn=(72)
calls=120 0x404db7 -49 
* * 18206 4880 4164 15 3 1 15 3 1 1280 71 236 28
+5 +1 120
+4 * 120 120
+1 * 120 120
+2 * 120 120
+1 * 120 120

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(74)
calls=10 0x404f37 -22 
* * 612 161 117 0 0 1 0 0 1 48 2 9
+5 +1 10 10
+1 * 10 10

fn=(62)
0x40492d 277 150 0 150 1 0 0 1
+1 * 150
+3 * 150
+4 * 150 0 150
+4 +1 150 150
+4 * 150
+3 * 150 0 150 1 0 0 1
cfi=(13)
cfn=(64)
calls=150 -33 -66 
* * 900 450 300
+5 * 150 150
+1 * 150 150

fn=(66)
0x404d9d 277 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240
+3 * 240 0 240
cfi=(13)
cfn=(68)
calls=240 0x404f1a -58 
* * 3840 1440 1200 2 0 1 2 0 1
+5 * 240 240
+1 * 240 240

fn=(240)
0x404de8 424 10 0 10
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50 0 0 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(128)
calls=10 0x404878 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=10 0x404f9c -49 
* * 762 211 177 0 0 2 0 0 2 48 3 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(214)
0x4045ee 216 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 +5 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 0 0 0 0 0 0 0 10
jcnd=10/10 +8 +2 
* * 
+8 +2 10 10
+4 +1 10 10
+1 * 10 10

fn=(238)
0x40455a 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(130)
calls=20 0x40486a -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+2 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(62)
calls=10 0x40492d 277 
* * 150 60 50
+5 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(282)
calls=10 0x404fcd -49 
* * 762 211 177 0 0 1 0 0 1 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+2 * 10 10
+1 * 10 10

fn=(120)
0x4049e2 450 120 0 120
+1 * 120
+3 * 120 0 120
+1 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +10 120 120
+4 * 120
+3 * 120 0 120
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=120 0x404bc6 288 
* * 1800 720 600 3 0 0 3
+5 * 120
+3 * 120 120
+4 * 120
+3 * 120 0 120
cfn=(122)
calls=120 0x404bc6 288 
* * 1800 720 600
+5 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(126)
calls=120 0x404be0 -36 
* * 29366 8600 7884 4 0 3 4 0 3 1280 69 236
+5 +1 120
+4 * 120 120
+1 * 120 120
+1 * 120 120

fn=(128)
0x404878 277 150 0 150
+1 * 150
+3 * 150
+4 * 150 0 150 1 0 0 1
+4 +1 150 150
+4 * 150
+3 * 150 0 150
cfi=(13)
cfn=(130)
calls=150 -33 -66 
* * 900 450 300 0 0 1 0 0 1
+5 * 150 150
+1 * 150 150

fn=(132)
0x404d44 277 240 0 240
+1 * 240
+3 * 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240
+3 * 240 0 240
cfi=(13)
cfn=(134)
calls=240 0x404e98 -58 
* * 3840 1440 1200 2 0 0 2
+5 * 240 240
+1 * 240 240

fn=(138)
0x404d5e 379 120 0 120
+1 * 120
+3 * 120
+4 * 120 0 120
+4 * 120 0 120
+4 * 120 0 120
+4 +8 120 0 120
+4 +3 120 120
+4 * 120 120
+4 * 120 120
+4 * 120
+3 * 120
+3 * 120 0 120
cfn=(140)
calls=120 0x404eb5 -22 
* * 16406 4280 3444 1 0 3 1 0 3 1280 69 236
+5 +1 120 120
+1 * 120 120

fn=(242)
0x404f9c 379 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +8 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(140)
calls=10 0x404eb5 -22 
* * 612 161 117 0 0 2 0 0 2 48 3 9
+5 +1 10 10
+1 * 10 10

fn=(276)
0x404cf0 450 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +10 10 10
+4 * 10
+3 * 10 0 10
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(278)
calls=10 0x40469c 288 
* * 150 60 50
+5 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(280)
calls=10 0x404e40 -36 
* * 1492 461 427 1 0 1 1 0 1 48 2 9
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(278)
0x40469c 288 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfi=(13)
cfn=(64)
calls=20 0x40491f -77 
* * 120 60 40
+5 * 20 20
+1 * 20 20

fn=(122)
0x404bc6 288 240 0 240 1 0 0 1
+1 * 240
+3 * 240
+4 * 240 0 240
+4 +1 240 240
+4 * 240
+3 * 240 0 240
cfi=(13)
cfn=(124)
calls=240 0x404d36 -77 
* * 1440 720 480 2 0 0 2
+5 * 240 240
+1 * 240 240

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(204)
0x40404e 726 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=5 0x403e26 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(70)
0x40500c 790 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+4 +1 240 240
+4 * 240 240
+1 * 240 240

fn=(110)
0x404380 726 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+4 * 240 0 240
+4 * 240 240
+4 * 240 240
+3 * 240 240
+4 * 240 0 240
+3 * 240 240
+1 * 240 240

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 5 0 5
+1 * 5
+3 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 +2 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10 1 0 0 1
+5 * 5 5
+3 * 5
+3 * 5 5
+4 * 5
+3 * 5 0 5
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+4 * 5 5
+1 * 5 5
+1 * 5 5

fn=(136)
0x404ffe 790 240 0 240 1 0 0 1
+1 * 240
+3 * 240 0 240
+4 +1 240 240
+4 * 240 240
+1 * 240 240

fn=(44)
0x404468 726 240 0 240
+1 * 240
+3 * 240 0 240
+4 * 240 0 240
+4 * 240 240
+4 * 240 240
+3 * 240 240
+4 * 240 0 240 1 0 0 1
+3 * 240 240
+1 * 240 240

fn=(248)
0x4042c6 726 10 0 10
+1 * 10
+3 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 10
+1 * 10 10

fn=(220)
0x403e26 790 20 0 20 1 0 0 1
+1 * 20
+3 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 125 0 125 1 0 0 1
+1 * 125
+3 * 125 0 125
+4 * 125 0 125 1 0 0 1
+4 * 125 125
+1 * 125 125

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 125 0 125 1 0 0 1
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 +4 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=125 0x40454c -14 
* * 750 250 375 1 0 0 1
+5 +2 125 125
+1 * 125 125

fn=(150)
0x40326c 148 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +3 125 125 0 1 0 0 1
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=125 0x403d1a -29 
* * 2250 750 875 3 0 0 3
+5 +1 125 125
+1 * 125 125

fn=(180)
0x40334a 148 125 0 125
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 * 125 0 125
+4 +3 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfn=(182)
calls=125 0x403dcc -29 
* * 2250 750 875 2 0 0 2
+5 +1 125 125
+1 * 125 125

fn=(152)
0x403d1a 122 125 0 125 1 0 0 1
+1 * 125
+3 * 125
+4 * 125 0 125
+4 * 125 0 125
+4 +4 125 125
+4 * 125 125
+4 * 125
+3 * 125
+3 * 125 0 125
cfn=(154)
calls=125 0x4044f8 -14 
* * 750 250 375 2 0 0 2
+5 +2 125 125
+1 * 125 125

fn=(184)
0x40454c 112 125 0 125 1 0 0 1
+1 * 125
+3 * 125 0 125
+4 * 125 0 125
+4 * 125 125
+1 * 125 125

fl=(15)
fn=(250)
0x4036de 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x403799 +21 
* * 
0x403799 +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(252)
calls=5 0x404104 1336 
* * 905 335 235 4 0 0 4 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(258)
calls=5 0x4041ce 538 
* * 110 45 35
+5 * 5 0 5 1 0 0 1
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(260)
calls=5 0x4041f3 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(22)
calls=5 0x404236 167 
* * 1293 246 248 0 1 4 0 1 4 172 18 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5
+4 * 5 0 0 1 0 0 1
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(264)
calls=5 0x4036b1 215 
* * 190 65 70 0 0 2 0 0 2 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -88 
* * 1502 471 447 3 0 1 3 0 1 43 2 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(262)
calls=5 0x40409e 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(268)
calls=5 0x40426e -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(40)
calls=5 0x40333c 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5
+4 * 5 5
+3 -1 5 0 0 1 0 0 1
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(180)
calls=5 0x40334a 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(188)
calls=5 0x403d98 171 
* * 623 165 108 0 0 0 0 0 0 109 7 10
+5 +3 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x4039ba * 
* * 
0x4039ba * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fn=(206)
0x4033a0 318 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+1 * 5
+4 * 5 0 5
+4 * 5 0 5
+4 * 5 0 5
+4 +4 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+4 * 5
+3 * 5 0 0 0 0 0 0 0 0 5
jcnd=5/5 0x40345e +21 
* * 
0x40345e +21 5 5 0 1 0 0 1
+4 * 5
+5 * 5
+5 * 5
+3 * 5 0 5
cfi=(2)
cfn=(208)
calls=5 0x403e8c 1336 
* * 905 335 235 5 0 0 5 0 0 20
+5 * 5 0 5
+4 +1 5 5
+4 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(216)
calls=5 0x403f56 538 
* * 110 45 35
+5 * 5 0 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(10)
cfn=(218)
calls=5 0x403f7b 896 
* * 170 65 50 1 0 0 1
+5 * 5 0 5
+4 +1 5 5
+4 * 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(2)
cfn=(96)
calls=5 0x403fbe 167 
* * 1447 261 253 4 5 5 4 5 5 207 27 10
+5 * 5 0 5
+4 +1 5 5
+4 * 5 0 5
+4 +12 5 5 0 1 0 0 1
+4 * 5
+8 * 5 5
+4 * 5
+4 * 5 5
+4 -5 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(3)
cfn=(222)
calls=5 0x403373 215 
* * 190 65 70 0 2 1 0 2 1 5
+5 +7 5 0 5
+8 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5
+4 * 5 0 0 1 0 0 1
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 * 5 5
+4 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -88 
* * 1502 471 447 6 0 3 6 0 3 43 3 9
+5 * 5 0 5
+4 +5 5 0 5
+5 +5 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5
+4 * 5
+3 * 5 0 5
cfi=(10)
cfn=(220)
calls=5 0x403e26 790 
* * 30 15 10
+5 * 5 5
+3 -3 5 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(11)
cfn=(228)
calls=5 0x403ff6 -95 
* * 1090 380 380 0 0 0 0 0 0 5
+5 * 5 0 5
+4 +16 5 5
+4 * 5
+3 * 5 0 5
cfi=(2)
cfn=(106)
calls=5 0x40325e 113 
* * 30 15 10
+5 * 5
+3 * 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5 5
+3 -1 5
+3 * 5
+3 * 5 0 5
cfi=(14)
cfn=(150)
calls=5 0x40326c 148 
* * 155 50 60
+5 +4 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+3 * 5 5
+4 * 5 5
+3 * 5 5
+4 -2 5
+3 * 5
+3 * 5 0 5 1 0 0 1
cfi=(2)
cfn=(158)
calls=5 0x403ce6 171 
* * 610 159 106 1 0 0 1 0 0 106 1 10
+5 +3 5 5
+4 * 5 5
+4 * 5 0 5
+3 +1 5 5
+4 * 5 5
+4 * 5 0 5
+4 +1 5 5
+4 * 5
+8 * 5 5
+4 * 5
+3 * 5 5
+4 * 5 0 5
+4 +2 5
jump=5 0x40367f * 
* * 
0x40367f * 5 0 0 1 0 0 1
+4 * 5 5
+1 * 5 5
+2 * 5 5
+1 * 5 5

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 60 0 60 1 0 0 1
+1 * 60
+3 * 60
+4 * 60 0 60
+4 * 60 0 60
+4 +1 60 60
+4 * 60
+3 * 60 0 60
cfi=(2)
cfn=(2)
calls=60 0x402d74 645 
* * 780 360 120
+5 * 60
+3 * 60 0 60
+3 +1 60 60
+6 * 60 0 60
+3 * 60 60
+6 * 60 0 60
+3 +1 60 60
+6 * 60 0 60 1 0 0 1
+3 * 60 60
+6 * 60 0 60
+3 +2 60 0 60
+7 * 60
jump=60 +86 * 
* * 
+2 +1 1890 1890
+3 * 1890
+3 * 1890 1890
+4 * 1890
+3 * 1890
+3 * 1890 0 1890
cfi=(2)
cfn=(144)
calls=1890 0x402d9a 770 
* * 20790 9450 5670
+5 * 1890 1890
+4 * 1890 1890
+5 * 1890
+4 * 1890 0 1890
+5 +1 1890 1890
+3 * 1890
+3 * 1890 1890
+4 * 1890
+3 * 1890
+3 * 1890 0 1890
cfi=(2)
cfn=(146)
calls=1890 0x402dba 770 
* * 20790 9450 5670 1 0 0 1
+5 * 1890 1890
+2 * 1890
+4 * 1890 1890
+5 * 1890
+4 * 1890 0 1890
+5 -2 1890 0 1890
+4 * 1890 1890
+3 * 1890
+3 * 1890 1890
+3 * 1890 0 0 0 0 0 0 0 0 1890 61
jcnd=1830/1890 -93 +1 
* * 
-9 * 60 60 0 1 0 0 1
+3 * 60
+3 * 60 60
+3 * 60 0 0 0 0 0 0 0 0 60
jcnd=60/60 -93 +1 
* * 
+2 +4 60 60
+3 * 60
+3 * 60
+4 * 60 60 0 1 0 0 1
+5 * 60
+4 * 60
+3 * 60 0 60
+5 +1 60 60
+3 * 60
+3 * 60
+4 * 60 60
+5 * 60
+4 * 60
+3 * 60 0 60
+5 +1 60 0 60
+7 * 60
jump=60 0x4016ee * 
* * 
+2 +1 1890 1890
+3 * 1890
+3 * 1890 1890
+4 * 1890
+3 * 1890 0 0 1 0 0 1
+3 * 1890 0 1890
cfi=(2)
cfn=(146)
calls=1890 0x402dba 770 
* * 20790 9450 5670
+5 * 1890 1890
+2 * 1890
+4 * 1890 1890
+5 * 1890 0 1890
+5 +1 1890 1890
+3 * 1890
+3 * 1890 1890
+4 * 1890
+3 * 1890
+3 * 1890 0 1890
cfi=(2)
cfn=(144)
calls=1890 0x402d9a 770 
* * 20790 9450 5670
+5 * 1890 1890
+4 * 1890 1890
+5 * 1890 0 1890
+5 +1 1890 1890
+5 * 1890 1890
+5 * 1890 1890
+5 * 1890
+4 * 1890 0 1890
+5 +1 1890 1890
+5 * 1890 1890
+5 * 1890 1890
+5 * 1890
+4 * 1890 0 1890
+5 -4 1890 0 1890
+4 * 1890 1890
+3 * 1890
+3 * 1890 1890
+3 * 1890 0 0 0 0 0 0 0 0 1890 61
jcnd=1830/1890 0x401672 +1 
* * 
-9 * 60 60 0 1 0 0 1
+3 * 60
+3 * 60 60
+3 * 60 0 0 0 0 0 0 0 0 60
jcnd=60/60 0x401672 +1 
* * 
+6 +6 60 60 0 1 0 0 1
+5 * 60 60
+5 * 60 0 60
+5 +2 60 60
+3 +1 60 0 60
+3 * 60 60
+5 * 60 60
+1 * 60 60

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 60
+7 * 60
+7 * 60
+3 * 60
+3 * 60 0 60
cfi=(2)
cfn=(4)
calls=60 0x4030b2 310 
* * 49816 14276 12997 63 20 18 63 20 18 3014 182 238 28
+5 * 60
+7 * 60
+7 * 60
+3 * 60
+3 * 60 0 60
cfi=(2)
cfn=(80)
calls=60 0x402ff4 310 
* * 50123 14305 12856 43 6 15 43 6 15 3137 159 238
+5 * 60 0 0 1 0 0 1
+7 * 60
+7 * 60
+3 * 60
+3 * 60 0 60
cfn=(142)
calls=60 0x401585 -52 
* * 200460 88440 46380 8 0 0 8 0 0 3900 122
+5 * 60 0 60
+8 * 60 60
+6 * 60 0 60
+6 * 60
+7 * 60
+3 * 60 0 60
cfi=(2)
cfn=(148)
calls=60 0x402df4 414 
* * 15016 4713 3453 31 6 0 31 6 0 1597 32 120
+5 * 60
+7 * 60
+3 * 60 0 60 1 0 0 1
cfi=(2)
cfn=(178)
calls=60 0x402e74 414 
* * 14899 4696 3401 7 0 0 7 0 0 1576 7 120
+5 +2 60
+7 * 60
+7 * 60
+3 * 60
+3 * 60 0 60
cfi=(2)
cfn=(4)
calls=60 0x4030b2 310 
* * 49318 14243 12867 2 0 1 2 0 1 2963 86 238
+5 * 60
+7 * 60
+7 * 60
+3 * 60
+3 * 60 0 60
cfi=(2)
cfn=(80)
calls=60 0x402ff4 310 
* * 49472 14262 12703 0 0 0 0 0 0 3063 69 238
+5 * 60 60
+6 * 60 0 0 1 0 0 1
+7 * 60
+7 * 60 0 60
+6 * 60 60
+8 * 60
+3 * 60
+3 * 60 0 60
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=60 0x401719 -33 
* * 94260 39120 21690 4 0 0 4 0 0 1950 61
+5 * 60 0 60
+8 * 60 60
+6 * 60 0 60
+6 * 60
+7 * 60 0 0 1 0 0 1
+3 * 60 0 60
cfi=(2)
cfn=(148)
calls=60 0x402df4 414 
* * 15016 4713 3453 0 0 0 0 0 0 1597 29 120
+5 * 60
+7 * 60
+3 * 60 0 60
cfi=(2)
cfn=(178)
calls=60 0x402e74 414 
* * 14899 4696 3401 0 0 0 0 0 0 1576 4 120
+5 +2 60 60
+7 * 60
+3 * 60 0 60
cfi=(2)
cfn=(2)
calls=60 0x402d74 645 
* * 780 360 120
+5 * 60 60
+6 * 60
+3 * 60
+3 * 60
+3 * 60 60
+7 * 60
+3 * 60 0 0 1 0 0 1
+3 * 60 0 60
cfi=(2)
cfn=(144)
calls=60 0x402d9a 770 
* * 660 300 180
+5 * 60
+3 * 60
+7 * 60
+3 * 60
+3 * 60 0 60
cfi=(2)
cfn=(200)
calls=60 0x402eda 901 
* * 10694 3656 2951 30 10 9 30 10 9 506 37 29
+5 +1 60 60
+7 * 60
+3 * 60 0 60
cfi=(2)
cfn=(10)
calls=60 0x402f54 645 
* * 780 360 120 0 1 0 0 1
+5 * 60 60
+6 * 60
+3 * 60
+3 * 60
+3 * 60 60
+7 * 60 0 0 1 0 0 1
+3 * 60
+3 * 60 0 60
cfi=(2)
cfn=(146)
calls=60 0x402dba 770 
* * 660 300 180
+5 * 60
+3 * 60
+7 * 60
+3 * 60
+3 * 60 0 60
cfi=(2)
cfn=(244)
calls=60 0x402f7a 901 
* * 10553 3647 2948 19 5 8 19 5 8 474 27 29
+5 +1 60 60
+7 * 60
+3 * 60 0 60
cfi=(2)
cfn=(10)
calls=60 0x402f54 645 
* * 780 360 120
+5 * 60 60
+6 * 60
+3 * 60
+3 * 60
+3 * 60 60 0 1 0 0 1
+7 * 60
+3 * 60
+3 * 60 0 60
cfi=(2)
cfn=(146)
calls=60 0x402dba 770 
* * 660 300 180
+5 * 60 60
+2 * 60
+4 * 60 60
+8 * 60 60
+8 * 60 0 60
+8 +1 60 60
+7 * 60
+3 * 60 0 60
cfi=(2)
cfn=(2)
calls=60 0x402d74 645 
* * 780 360 120
+5 * 60 60 0 1 0 0 1
+6 * 60
+3 * 60
+3 * 60
+3 * 60 60
+7 * 60
+3 * 60
+3 * 60 0 60
cfi=(2)
cfn=(144)
calls=60 0x402d9a 770 
* * 660 300 180
+5 * 60 60
+4 * 60 60
+8 * 60
+4 * 60 60
+8 * 60
+3 * 60 0 60
+8 +2 60 0 60
+7 -12 60 60
+8 * 60 60
+7 * 60 0 0 0 0 0 0 0 0 60 2
jcnd=1/60 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 60
+7 * 60
+3 * 60 0 60
cfi=(2)
cfn=(2)
calls=60 0x402d74 645 
* * 780 360 120 2 0 1 2 0 1
+5 * 60
+3 * 60 60
+7 * 60
+3 * 60 0 60
cfi=(2)
cfn=(2)
calls=60 0x402d74 645 
* * 780 360 120 0 1 0 0 1
+5 * 60
+3 * 60 0 0 0 0 0 0 0 0 60
+2 * 60 0 0 1 0 0 1
+5 * 60
jump=60 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 60
+2 * 60 0 0 0 0 0 0 0 0 60
jcnd=60/60 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 60 0 60
+1 * 60
+3 * 60
+4 * 60 0 60
+4 * 60 0 60
+4 * 60 0 60
+5 +1 60 60
+4 * 60
+3 * 60 0 60
cfi=(2)
cfn=(2)
calls=60 0x402d74 645 
* * 780 360 120
+5 * 60
+3 * 60 0 60
+3 +1 60 60 0 1 0 0 1
+6 * 60 0 60
+3 * 60 60
+6 * 60 0 60
+3 +2 60 0 60
+7 * 60
jump=60 +86 * 
* * 
+2 +1 1890 1890
+3 * 1890
+3 * 1890 1890
+4 * 1890
+3 * 1890
+3 * 1890 0 1890
cfi=(2)
cfn=(144)
calls=1890 0x402d9a 770 
* * 20790 9450 5670
+5 * 1890 1890
+4 * 1890 1890
+5 * 1890
+4 * 1890 0 1890
+5 +1 1890 1890
+3 * 1890
+3 * 1890 1890
+4 * 1890
+3 * 1890
+3 * 1890 0 1890
cfi=(2)
cfn=(146)
calls=1890 0x402dba 770 
* * 20790 9450 5670
+5 * 1890 1890
+2 * 1890
+4 * 1890 1890
+5 * 1890
+4 * 1890 0 1890
+5 -2 1890 0 1890
+4 * 1890 1890
+3 * 1890
+3 * 1890 1890
+3 * 1890 0 0 0 0 0 0 0 0 1890 61
jcnd=1830/1890 -93 +1 
* * 
-9 * 60 60 0 1 0 0 1
+3 * 60
+3 * 60 60
+3 * 60 0 0 0 0 0 0 0 0 60
jcnd=60/60 -93 +1 
* * 
+2 +4 60 60
+3 * 60
+3 * 60 0 0 1 0 0 1
+4 * 60 60
+5 * 60
+4 * 60
+3 * 60 0 60
+5 +1 60 60
+3 * 60
+3 * 60
+4 * 60 60
+5 * 60
+4 * 60
+3 * 60 0 60
+5 +1 60 60
+5 * 60 60
+5 * 60 60
+5 * 60 0 0 1 0 0 1
+4 * 60
+3 * 60 0 60
+5 +2 60 60
+3 +1 60 0 60
+3 * 60 60
+5 * 60 60
+1 * 60 60

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 250 0 250 1 0 0 1
+5 0 250 0 250
+5 0 250
+3 0 250 0 250
+5 0 250
+4 0 250 250 0 0 1 0 0 1
+7 0 250 250 0 0 1 0 0 1
+3 0 250
+3 0 250 0 0 0 0 0 0 0 0 250
+6 0 250 250 0 0 1 0 0 1
+7 0 250 250 0 1 1 0 1 1
+4 0 250
+3 0 250 0 0 0 0 0 0 0 0 250
+2 0 250 250 0 0 1 0 0 1
+3 0 250
+3 0 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 +97 0 
* 0 
+18 0 250
+3 0 250
+3 0 250 0 250
cfn=(38) _int_malloc
calls=250 0x3877c79a00 0 
* 0 43577 6033 6666 27 20 32 27 20 32 6746 399
+5 0 250
+3 0 250
+3 0 250 0 0 0 0 0 0 0 0 250
+2 0 250
+3 0 250 0 0 0 0 0 0 0 0 250
+2 0 250
+3 0 250 0 0 0 0 0 0 0 0 250 2
+2 0 250 250
+7 0 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 +13 0 
* 0 
+13 0 250 0 250
+2 0 250 0 0 0 0 0 0 0 0 250
+6 0 250
+3 0 250 250
+4 0 250 250
+5 0 250 250
+5 0 250
+4 0 250 250
+1 0 250 0 0 1 0 0 1
+5 0 250 250 0 0 1 0 0 1
+7 0 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 +14 0 
* 0 
+14 0 250 0 250 1 0 0 1
+3 0 250 0 0 0 0 0 0 0 0 250
+6 0 250
jump=250 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 250 0 250 1 0 0 1
+2 0 250
+3 0 250
+3 0 250 0 250
+2 0 250
+3 0 250 0 250
+1 0 250
+3 0 250 0 250
+1 0 250
+3 0 250
+4 0 250
+3 0 250 0 0 0 0 0 0 0 0 250
+6 0 250
+4 0 250
+3 0 250 0 0 0 0 0 0 0 0 250 4
jcnd=10/250 0x3877c838d1 0 
* 0 
+2 0 240
+3 0 240
+3 0 240
+3 0 240
+3 0 240
+3 0 240 0 0 0 0 0 0 0 0 240
jcnd=240/240 +41 0 
* 0 
+41 0 240 0 0 1 0 0 1
+3 0 240 0 0 0 0 0 0 0 0 240
jcnd=240/240 0x3877c839c0 0 
* 0 
+24 0 240
+3 0 240
+4 0 240
+3 0 240
+3 0 240
+3 0 240
+3 0 240
+3 0 240 0 0 0 0 0 0 0 0 240 116
jcnd=124/240 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 126
+10 0 126 126 0 0 1 0 0 1
+3 0 126
+4 0 126 0 126
+3 0 126
+4 0 126
+4 0 126 0 0 0 0 0 0 0 0 126
jcnd=126/126 -18 0 
* 0 
-18 0 434 434
+3 0 434
+4 0 434 0 434
+3 0 434
+4 0 434
+4 0 434 0 0 0 0 0 0 0 0 434 8
jcnd=308/434 -18 0 
* 0 
+2 0 250
+4 0 250
+3 0 250 250
+1 0 250 250
+1 0 250 250
+2 0 250 250 0 1 0 0 1
+2 0 250 250
0x3877c839c0 0 240 0 0 1 0 0 1
+3 0 240
+3 0 240
+3 0 240
+4 0 240 0 240 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=240 0x3877c89b20 0 
* 0 12550 4252 3772 6 1 4 6 1 4 606 17 240 28
+5 0 240
jump=240 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 250 250 0 1 1 0 1 1
+7 0 250 250 0 0 1 0 0 1
+3 0 250
+3 0 250 0 0 1 0 0 1 0 0 250
+6 0 250
+3 0 250 0 0 0 0 0 0 0 0 250
+6 0 250 250
+4 0 250
+4 0 250
+2 0 250 0 0 0 0 0 0 0 0 250
+2 0 250
+2 0 250
+7 0 250 0 0 0 0 0 0 0 0 250
jcnd=250/250 +14 0 
* 0 
+14 0 250
+2 0 250
cfn=(170) _int_free
calls=250 0x3877c78650 0 
* 0 22433 5802 3502 17 2 0 17 2 0 5061 75

fn=(170)
0x3877c78650 0 250 0 250 1 0 0 1
+2 0 250 0 250
+2 0 250 0 250
+2 0 250
+3 0 250 0 250
+2 0 250 0 250
+1 0 250 0 250
+1 0 250
+3 0 250
+4 0 250 250
+4 0 250 0 250
+4 0 250
+3 0 250
+4 0 250
+3 0 250
+3 0 250
+3 0 250 0 0 1 0 0 1 0 0 250
+6 0 250
+4 0 250 0 0 0 0 0 0 0 0 250
+6 0 250
+4 0 250 0 0 0 0 0 0 0 0 250
+6 0 250 250
+7 0 250 0 0 0 0 0 0 0 0 250 2
jcnd=126/250 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126 126 0 1 0 0 1
+4 0 126
+3 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
jcnd=126/126 0x3877c78a40 0 
* 0 
+6 0 126 126
+4 0 126
+3 0 126 0 0 0 0 0 0 0 0 126
+6 0 126 126
+5 0 126
+4 0 126 0 0 0 0 0 0 0 0 126
jcnd=126/126 0x3877c7907c 0 
* 0 
+6 0 126 126
+5 0 126
+4 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+4 0 126 0 0 1 0 0 1 0 0 126
+6 0 126
+4 0 126 126
+7 0 126 0 0 0 0 0 0 0 0 126
+6 0 126 126
+6 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126 126
+4 0 126 0 0 0 0 0 0 0 0 126 1
jcnd=125/126 +70 0 
* 0 
+2 0 1 1
+3 0 1
+3 0 1
+3 0 1 1
+4 0 1 1
+4 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1 1
+6 0 1 1
+4 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +15 0 
* 0 
+15 0 126 126 0 1 0 0 1
+4 0 126 0 0 0 0 0 0 0 0 126
+6 0 126 126
+6 0 126 0 0 1 0 0 1 0 0 126 9
jcnd=6/126 0x3877c78a78 0 
* 0 
+6 0 120 120
+5 0 120 120
+5 0 120 120
+4 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+4 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+9 0 120 0 120
+4 0 120 0 120
+4 0 120 0 0 0 0 0 0 0 0 120 58
jcnd=58/120 +16 0 
* 0 
+2 0 62 62
+5 0 62
+3 0 62 0 0 1 0 0 1 0 0 62
+6 0 120
+3 0 120
+4 0 120 120
+4 0 120 120
+4 0 120 0 0 0 0 0 0 0 0 120
-12 0 6
+4 0 6 6
+4 0 6 6
+4 0 6 0 0 0 0 0 0 0 0 6
+6 0 126
+7 0 126 0 126
+4 0 126 0 126
+4 0 126 0 0 0 0 0 0 0 0 126 2
jcnd=64/126 +18 0 
* 0 
+2 0 62 0 62
+8 0 62 0 62
+8 0 62 0 62
+4 0 62
+3 0 62 0 62 1 0 0 1
+4 0 62
+4 0 62 0 62
+4 0 62 0 62
+4 0 62
+7 0 62 0 0 0 0 0 0 0 0 62
jcnd=62/62 0x3877c78b20 0 
* 0 
-30 0 64 0 64
+4 0 64
+3 0 64 0 64
+4 0 64
+4 0 64 0 64
+4 0 64 0 64
+4 0 64
+7 0 64 0 0 0 0 0 0 0 0 64
jcnd=64/64 0x3877c78b20 0 
* 0 
0x3877c78a40 0 126 0 0 1 0 0 1
+5 0 126 126
+4 0 126 126
+7 0 126 0 0 0 0 0 0 0 0 126
jcnd=126/126 +16 0 
* 0 
+16 0 126 0 126
+5 0 126 0 0 0 0 0 0 0 0 126
+6 0 126
+3 0 126
jump=126 0x3877c7878f 0 
* 0 
+10 0 6 0 6
+6 0 6 0 0 1 0 0 1
jump=6 0x3877c78885 0 
* 0 
0x3877c78b20 0 126 126 0 1 0 0 1
+4 0 126
+2 0 126 0 0 0 0 0 0 0 0 126
+6 0 126 126
+7 0 126 0 0 0 0 0 0 0 0 126
jcnd=126/126 +15 0 
* 0 
+15 0 126 0 126 1 0 0 1
+4 0 126 0 0 0 0 0 0 0 0 126 2
+6 0 126
+4 0 126 126
+1 0 126 126
+1 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
+2 0 126 126
0x3877c7907c 0 126 126 0 1 1 0 1 1
+4 0 126 0 0 1 0 0 1
+7 0 126
+4 0 126
+3 0 126
+3 0 126 0 0 0 0 0 0 0 0 126
jcnd=126/126 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 240 0 0 1 0 0 1
+7 0 240
+3 0 240
+3 0 240 240 0 0 1 0 0 1
+4 0 240
+4 0 240 0 0 0 0 0 0 0 0 0 0 240 28
jump=24 0x3877c89be8 0 
* 0 
jump=28 0x3877c89bd0 0 
* 0 
jump=24 0x3877c89bb8 0 
* 0 
jump=32 +11 0 
* 0 
jump=32 0x3877c89c48 0 
* 0 
jump=34 0x3877c89c30 0 
* 0 
jump=32 0x3877c89c18 0 
* 0 
jump=34 0x3877c89c00 0 
* 0 
+11 0 32 32
+3 0 32
+4 0 32
+4 0 32 32
+4 0 32
+4 0 32 0 32
+4 0 32
+9 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-40 0 422 422
+4 0 422 0 422
+4 0 422 422
+4 0 422 0 422
+4 0 422 422
+4 0 422 0 422 0 0 1 0 0 1
+4 0 422 422
+4 0 422 0 422
+4 0 422
+4 0 422
+4 0 422 0 0 0 0 0 0 0 0 422 13
jcnd=204/422 0x3877c89c60 0 
* 0 
-32 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34 34
+4 0 34 0 34
+4 0 34
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34
jcnd=10/34 0x3877c89c60 0 
* 0 
-24 0 32 32
+4 0 32 0 32
+4 0 32 32
+4 0 32 0 32
+4 0 32
+4 0 32
+4 0 32 0 0 0 0 0 0 0 0 32
jcnd=8/32 0x3877c89c60 0 
* 0 
-16 0 34 34 0 1 0 0 1
+4 0 34 0 34
+4 0 34 0 0 1 0 0 1
+4 0 34
+4 0 34 0 0 0 0 0 0 0 0 34 4
jcnd=10/34 0x3877c89c60 0 
* 0 
+6 0 314
+4 0 314 314
+3 0 314 0 314
+3 0 314 314
+4 0 314 0 314 0 0 1 0 0 1
+4 0 314 314
+4 0 314 0 314 0 0 1 0 0 1
+4 0 314 314
+4 0 314 0 314
+4 0 314
jump=314 -80 0 
* 0 
-30 0 24 24
+3 0 24 0 24
+3 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24 0 0 1 0 0 1
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
-24 0 28 28
+4 0 28 0 28
+4 0 28 28
+4 0 28 0 28
+4 0 28 28
+4 0 28 0 28
+4 0 28
jump=28 -80 0 
* 0 
-16 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 -80 0 
* 0 
+8 0 24 24
+3 0 24
+4 0 24 0 0 1 0 0 1
+4 0 24
+4 0 24
jump=24 -39 0 
* 0 
+9 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
+6 0 28 28
+3 0 28
+4 0 28
jump=28 -72 0 
* 0 
+8 0 24
+4 0 24 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24
+4 0 24
jump=24 -99 0 
* 0 
+11 0 34 34 0 1 0 0 1
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b78 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b70 0 
* 0 
+9 0 34 34
+3 0 34
+4 0 34
+4 0 34
+4 0 34
jump=34 0x3877c89b68 0 
* 0 
+9 0 32 32
+3 0 32
+4 0 32
+4 0 32
+4 0 32
jump=32 0x3877c89b60 0 
* 0 
+9 0 240 0 240 1 0 0 1
+3 0 240 240

fn=(104) alloc_perturb
0x3877c77180 0 141 141 0 1 0 0 1
+6 0 141
+2 0 141 0 0 0 0 0 0 0 0 141
+2 0 141 141

fn=(38)
0x3877c79a00 0 250 0 250 1 0 0 1
+2 0 250
+3 0 250 0 250
+2 0 250 0 250
+2 0 250 0 250 0 0 1 0 0 1
+2 0 250
+3 0 250 0 250
+1 0 250 0 250
+1 0 250
+4 0 250
+4 0 250 0 0 0 0 0 0 0 0 250
+6 0 250
+4 0 250
+6 0 250
+3 0 250
+4 0 250
+4 0 250
+4 0 250
+3 0 250 0 0 0 0 0 0 0 0 250
+6 0 250 250 0 1 1 0 1 1
+7 0 250 0 0 0 0 0 0 0 0 250 5
jcnd=128/250 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 109 109
+6 0 109
+4 0 109
+2 0 109 0 0 0 0 0 0 0 0 109
+6 0 109
+3 0 109
+4 0 109 109
+1 0 109 109
+1 0 109 109
+2 0 109 109
+2 0 109 109
+2 0 109 109
+2 0 109 109
-14 0 141
+4 0 141 141
+1 0 141 141
+1 0 141 141
+2 0 141 141
+2 0 141 141
+2 0 141 141
+2 0 141 141
+7 0 145
+7 0 145 0 0 1 0 0 1 0 0 145 2
+2 0 145
+3 0 145
+5 0 145
+3 0 145
+4 0 145 0 145
+4 0 145
+2 0 145
+5 0 145 145 0 0 3 0 0 3
+4 0 145
+3 0 145 0 0 0 0 0 0 0 0 145
jcnd=145/145 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 145 0 0 1 0 0 1
+3 0 145
+3 0 145
+3 0 145
+4 0 145
+3 0 145
+4 0 145 0 145
+5 0 145
+3 0 145 0 145
+4 0 145 0 145
+4 0 145 0 145
+5 0 145
+3 0 145
+3 0 145
+3 0 145
+3 0 145
+4 0 145
+4 0 145 0 0 1 0 0 1
+4 0 145 0 145
+4 0 145
+4 0 145 0 145
+5 0 145 0 145
+5 0 145
+3 0 145
+3 0 145 0 145
+5 0 145
+5 0 145
+3 0 145 0 145
+4 0 145 0 145
+4 0 145
+6 0 145 0 145
+4 0 145 0 145
+5 0 145 0 0 1 0 0 1
+3 0 145
+3 0 145
+3 0 145
jump=145 +87 0 
* 0 
+8 0 115
+3 0 115
+4 0 115
+2 0 115
+2 0 115
+3 0 115
+3 0 115
+3 0 115
+2 0 115
+2 0 115
+5 0 115
+2 0 115 115
+4 0 115
+3 0 115
+4 0 115 0 115
+4 0 115 0 115
+8 0 115
+7 0 115 0 115
+4 0 115 0 115
+4 0 115 0 115
+4 0 115 0 0 0 0 0 0 0 0 115
-38 0 59
+3 0 59
+4 0 59 0 59
+4 0 59 0 59
+8 0 59
+7 0 59 0 59
+4 0 59 0 59
+4 0 59 0 59
+4 0 59 0 0 0 0 0 0 0 0 59
+6 0 319 319 0 1 0 0 1
+4 0 319
+3 0 319 0 0 0 0 0 0 0 0 319 4
jcnd=120/319 0x3877c79ef0 0 
* 0 
+6 0 199 199
+4 0 199 199
+4 0 199
+4 0 199 0 0 0 0 0 0 0 0 199
+6 0 199 199 0 1 0 0 1
+7 0 199 0 0 0 0 0 0 0 0 199
+6 0 199
+4 0 199
+7 0 199 0 0 0 0 0 0 0 0 199 2
+2 0 199
+3 0 199 0 0 0 0 0 0 0 0 199 56
jcnd=144/199 0x3877c79e28 0 
* 0 
+6 0 178
+3 0 178 0 178
+4 0 178 0 178
+5 0 178 0 0 0 0 0 0 0 0 178 6
jcnd=4/178 0x3877c7a090 0 
* 0 
+6 0 174
+7 0 174 0 0 0 0 0 0 0 0 174 6
jcnd=115/174 0x3877c79c50 0 
* 0 
+6 0 59 0 0 1 0 0 1
+3 0 59
+4 0 59
+4 0 59 0 0 0 0 0 0 0 0 59
+6 0 59
+3 0 59
+4 0 59
+2 0 59
+2 0 59
+3 0 59
+3 0 59
+8 0 59
+3 0 59
+2 0 59
+2 0 59
+4 0 59 59 0 0 2 0 0 2
+4 0 59
+3 0 59 0 0 1 0 0 1 0 0 59 57
jcnd=59/59 0x3877c79e15 0 
* 0 
0x3877c79e15 0 59 0 59
+4 0 59 0 59
+4 0 59
+3 0 59
jump=59 0x3877c79c73 0 
* 0 
+8 0 144 144 0 1 0 0 1
+4 0 144
+3 0 144 0 0 0 0 0 0 0 0 144 10
jcnd=63/144 0x3877c79ce1 0 
* 0 
+6 0 81 81
+5 0 81 0 0 0 0 0 0 0 0 81 6
jcnd=60/81 0x3877c79ce1 0 
* 0 
+6 0 21 0 0 1 0 0 1
+3 0 21
+3 0 21
+3 0 21
+7 0 21 0 21
+4 0 21 0 21
+4 0 21
+3 0 21 0 21
+4 0 21 0 21 0 0 17 0 0 17
+4 0 21 0 21
+4 0 21 0 0 0 0 0 0 0 0 21 7
jcnd=13/21 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8 0 0 1 0 0 1
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 13
+7 0 13 0 13 1 0 0 1
+4 0 13
+3 0 13
+3 0 13
+3 0 13
+4 0 13
+3 0 13
+4 0 13
+3 0 13
+3 0 13
+4 0 13 0 13
+4 0 13 0 13 0 0 2 0 0 2
+4 0 13
+4 0 13
+3 0 13 0 13
cfn=(104)
calls=13 0x3877c77180 0 
* 0 52 26 0 0 0 0 0 0 0 13
+5 0 21
+3 0 21
jump=21 0x3877c79ae3 0 
* 0 
+55 0 120 0 0 1 0 0 1
+7 0 120
+3 0 120 0 0 0 0 0 0 0 0 120 2
+6 0 120 120 0 1 0 0 1
+4 0 120
+3 0 120
+3 0 120
+2 0 120
+4 0 120
+3 0 120
+3 0 120
+2 0 120
+2 0 120
+2 0 120
+2 0 120 120 0 0 1 0 0 1
+8 0 120
+5 0 120
+5 0 120
+2 0 120 0 0 0 0 0 0 0 0 120
-2 0 59
+2 0 59 0 0 0 0 0 0 0 0 59
+2 0 179
+2 0 179 0 0 0 0 0 0 0 0 179 8
jcnd=118/179 +64 0 
* 0 
+2 0 61
+8 0 61
+3 0 61
+3 0 61 0 0 0 0 0 0 0 0 61
-6 0 61
+3 0 61
+3 0 61 0 0 0 0 0 0 0 0 61
+2 0 122
+2 0 122 122
+8 0 122
+2 0 122 0 0 0 0 0 0 0 0 122 5
jcnd=61/122 -20 0 
* 0 
+2 0 61
+2 0 61
+5 0 61
+3 0 61
+3 0 61
+2 0 61
+2 0 61
+5 0 61 0 0 0 0 0 0 0 0 61
+2 0 61
+2 0 61
+4 0 61
+2 0 61
+2 0 61 0 0 0 0 0 0 0 0 61 2
jcnd=61/61 -8 0 
* 0 
-8 0 907
+4 0 907
+2 0 907
+2 0 907 0 0 0 0 0 0 0 0 907 78
jcnd=728/907 -8 0 
* 0 
-2 0 118 0 0 1 0 0 1
+2 0 118 0 0 0 0 0 0 0 0 118 2
jcnd=118/118 -8 0 
* 0 
+2 0 179 179 0 0 5 0 0 5
+4 0 179 0 0 1 0 0 1
+3 0 179 0 0 0 0 0 0 0 0 179 59
jcnd=120/179 0x3877c7a1cf 0 
* 0 
+6 0 59
+2 0 59
+4 0 59
+2 0 59
+2 0 59
+2 0 59 0 59
+8 0 59
jump=59 0x3877c79f30 0 
* 0 
0x3877c7a090 0 4 0 0 1 0 0 1
+7 0 4 0 4
+6 0 4
+3 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 120 120 0 1 2 0 1 2
+4 0 120 120 0 0 1 0 0 1
+4 0 120
+3 0 120 120
+4 0 120
+4 0 120
+3 0 120
+3 0 120 120
+4 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120
+4 0 120 0 0 0 0 0 0 0 0 120
+6 0 120 120 0 1 0 0 1
+8 0 120 0 120
+4 0 120 0 120
+4 0 120 0 0 0 0 0 0 0 0 120 55
jcnd=59/120 +38 0 
* 0 
+2 0 61 61 0 0 2 0 0 2
+4 0 61
+3 0 61 0 0 0 0 0 0 0 0 61
+2 0 61 61
+5 0 61 0 0 0 0 0 0 0 0 61
+6 0 61 61
+4 0 61 0 61
+4 0 61 61
+4 0 61 0 61
+4 0 61
+4 0 61 0 0 0 0 0 0 0 0 61
-4 0 59
+4 0 59 0 0 0 0 0 0 0 0 59
+6 0 120 120
+4 0 120 120 0 1 0 0 1
+4 0 120 0 0 0 0 0 0 0 0 120
+6 0 120
+4 0 120
+7 0 120 0 120 0 0 4 0 0 4
+4 0 120 0 120
+4 0 120 0 120
+4 0 120 0 120
+4 0 120 0 0 0 0 0 0 0 0 120 1
+2 0 120 0 120
+5 0 120
+7 0 120 0 0 0 0 0 0 0 0 120 1
jcnd=59/120 +18 0 
* 0 
+2 0 61 0 61 0 0 3 0 0 3
+8 0 61 0 61
+8 0 61
+7 0 61 0 61 0 0 2 0 0 2
+4 0 61
+3 0 61
+3 0 61
+4 0 61
+3 0 61
+4 0 61
+3 0 61
+3 0 61
+4 0 61 0 61
+4 0 61 0 61
+4 0 61
jump=61 +71 0 
* 0 
-46 0 59 0 0 1 0 0 1
+7 0 59 0 59 0 0 1 0 0 1
+4 0 59
+3 0 59
+3 0 59
+4 0 59
+3 0 59
+4 0 59
+3 0 59
+3 0 59
+4 0 59 0 59
+4 0 59 0 59
+4 0 59
jump=59 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+28 0 120
+4 0 120 0 0 1 0 0 1
+3 0 120
+3 0 120 0 120
cfn=(104)
calls=120 0x3877c77180 0 
* 0 480 240 0 1 0 0 1 0 0 120
+5 0 120
+3 0 120
jump=120 0x3877c79ae3 0 
* 0 

totals: 589836 215630 142341 221 51 53 221 51 53 25535 817 1490 28
