version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1387


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 1790683060 - 1792227279
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1572 0 0 1 0 0 1
+3 0 1572 0 0 0 0 0 0 0 0 1572
+2 0 1572
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1572 0x3877c7b8b0 0 
* 0 176629 45195 23145 21 4 0 21 4 0 43329 684
* 0 1572 1572 0 1 1 0 1 1 0 0 0 1572

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1572 0 1572 1 0 0 1
+1 0 1572
+5 0 1572
+3 0 1572 0 1572
+1 0 1572
+4 0 1572 0 0 1 0 0 1
+3 0 1572
+4 0 1572
+3 0 1572 0 1572 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1572 0x3877c7aa50 0 
* 0 429382 62010 62139 49 40 55 49 40 55 71790 2588
* 0 1572 1572 0 1 1 0 1 1 0 0 0 1572
+5 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572
jcnd=1572/1572 +96 0 
* 0 
+96 0 1572 0 0 1 0 0 1
+4 0 1572 1572
+1 0 1572 1572
+1 0 1572 1572

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 858 0 858
+1 * 858
+3 * 858 0 858 0 0 1 0 0 1
+4 +1 858 858
+4 * 858 858
+1 * 858 858

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1556 0 1556 1 0 0 1
+1 * 1556
+3 * 1556
+4 * 1556 0 1556
+4 +1 1556
+4 * 1556
+3 * 1556 0 1556
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1556 0x404ffe 790 
* * 9336 4668 3112 1 0 0 1
+5 * 1556 1556
+3 * 1556 1556
+1 * 1556 1556

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1556 0 1556 1 0 0 1
+1 * 1556
+3 * 1556 0 1556
+4 +1 1556 1556
+4 * 1556 1556
+1 * 1556 1556

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1556 0 1556 1 0 0 1
+1 * 1556
+3 * 1556
+4 * 1556 0 1556
+4 +1 1556
+4 * 1556
+3 * 1556 0 1556 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1556 0x40500c 790 
* * 9336 4668 3112 1 0 0 1
+5 * 1556 1556
+3 * 1556 1556
+1 * 1556 1556

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 858 0 858
+1 * 858
+3 * 858 0 858
+4 +1 858 858
+4 * 858 858
+1 * 858 858

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1556 0 1556 1 0 0 1
+1 * 1556
+3 * 1556 0 1556
+4 +1 1556 1556 0 1 0 0 1
+4 * 1556 1556
+1 * 1556 1556

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 778 0 778
+1 * 778
+3 * 778 0 778
+4 * 778 0 778
+4 * 778 778
+4 * 778 778
+1 * 778 778

fl=(5) /usr/include/c++/4.8/ext/new_allocator.h
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 786 0 786 1 0 0 1
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 * 786 0 786
+4 +2 786 786
+4 * 786
+3 * 786 0 786
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=786 0x4048de +12 
* * 4716 1572 1572 1 0 0 1
+5 * 786 786
+4 * 786 0 0 1 0 0 1
+3 * 786
+2 * 786 0 0 0 0 0 0 0 0 786
jcnd=786/786 +7 +3 
* * 
+7 +3 786 786
+4 * 786
+4 * 786
+3 * 786 0 786
cob=(5)
cfi=(8)
cfn=(32)
calls=786 0x387e4bd0b0 0 
* * 226888 33060 31066 26 12 41 26 12 41 36689 1504 786
* * 786 786 0 0 0 0 0 0 0 0 0 786
+5 +1 786 786
+1 * 786 786

fn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
0x404a28 81 778 0 778 1 0 0 1
+1 * 778
+3 * 778 0 778 0 0 1 0 0 1
+4 * 778 0 778
+4 * 778 778
+1 * 778 778

fn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
0x4049d4 81 778 0 778 1 0 0 1
+1 * 778
+3 * 778 0 778
+4 * 778 0 778
+4 * 778 778
+1 * 778 778

fn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
0x404520 86 778 0 778
+1 * 778
+3 * 778 0 778
+4 * 778 778
+1 * 778 778

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 786 0 786 1 0 0 1
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 * 786 0 786 1 0 0 1
+4 +2 786 786
+4 * 786
+3 * 786 0 786
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=786 0x404992 +12 
* * 4716 1572 1572 1 0 0 1
+5 * 786 786
+4 * 786
+3 * 786
+2 * 786 0 0 0 0 0 0 0 0 786
jcnd=786/786 +7 +3 
* * 
+7 +3 786 786
+4 * 786
+4 * 786
+3 * 786 0 786
cob=(5)
cfi=(8)
cfn=(32)
calls=786 0x387e4bd0b0 0 
* * 227646 35238 35789 27 29 15 27 29 15 36673 1084 786
* * 786 786 0 1 1 0 1 1 0 0 0 786
+5 +1 786 786
+1 * 786 786

fn=(102)
0x4048de 113 802 0 802 1 0 0 1
+1 * 802
+3 * 802 0 802
+4 +1 802
+10 * 802 802
+1 * 802 802

fn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
0x40406a 129 389 0 389
+1 * 389
+3 * 389
+4 * 389 0 389
+4 * 389 0 389
+4 * 389 0 389
+4 +1 389 389
+4 * 389
+3 * 389
+5 * 389 0 389
cfi=(16)
cfn=(226)
calls=389 0x402d61 -20 
* * 2723 1167 1167
+5 * 389
+3 * 389 0 0 0 0 0 0 0 0 389
+2 * 389 389
+4 * 389 389 0 0 24 0 0 24
+2 * 389 0 389 0 0 16 0 0 16
+2 * 389 389
+1 * 389 389

fn=(28)
0x404992 113 802 0 802 1 0 0 1
+1 * 802
+3 * 802 0 802
+4 +1 802
+10 * 802 802
+1 * 802 802

fn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
0x4044cc 86 778 0 778
+1 * 778
+3 * 778 0 778
+4 * 778 778
+1 * 778 778

fn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
0x403df2 129 389 0 389
+1 * 389
+3 * 389
+4 * 389 0 389
+4 * 389 0 389
+4 * 389 0 389
+4 +1 389 389
+4 * 389
+3 * 389
+5 * 389 0 389
cfi=(16)
cfn=(226)
calls=389 0x402d61 -20 
* * 2723 1167 1167
+5 * 389
+3 * 389 0 0 0 0 0 0 0 0 389 2
+2 * 389 389
+4 * 389 389 0 0 26 0 0 26
+2 * 389 0 389 0 0 3 0 0 3
+2 * 389 389
+1 * 389 389

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 786 0 786
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 * 786 0 786
+4 +1 786 786
+4 * 786
+3 * 786 0 786
cob=(5)
cfi=(8)
cfn=(164)
calls=786 0x387e4bb2f0 0 
* * 85990 21383 9887 23 4 0 23 4 0 20934 617 786
* * 786 786 0 1 1 0 1 1 0 0 0 786
+5 * 786 786
+1 * 786 786

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 786 0 786
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 * 786 0 786
+4 +1 786 786
+4 * 786
+3 * 786 0 786
cob=(5)
cfi=(8)
cfn=(164)
calls=786 0x387e4bb2f0 0 
* * 96927 25384 13258 0 1 0 0 1 0 23967 67 786
* * 786 786 0 0 0 0 0 0 0 0 0 786
+5 * 786 786
+1 * 786 786

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +2 778 778
+4 * 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=778 0x404484 107 
* * 420190 141418 136754 25 3 4 25 3 4 16186 947 1552 194
+5 * 778 778
+1 * 778 778

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +2 778 778 0 1 0 0 1
+4 * 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=778 0x404a36 450 
* * 398406 133638 128974 24 3 4 24 3 4 16186 947 1552 194
+5 * 778 778
+1 * 778 778

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +2 778 778
+4 * 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=778 0x40439c 107 
* * 420190 141418 136754 7 1 40 7 1 40 16186 931 1552
+5 * 778 778
+1 * 778 778

fn=(116)
0x40439c 107 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +10 778 778
+4 * 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=778 0x4047d7 -26 
* * 409298 137528 132864 7 1 40 7 1 40 16186 931 1552
+5 +1 778 778
+1 * 778 778

fn=(118)
0x4047d7 91 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +2 778 778
+4 * 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=778 0x4049e2 450 
* * 398406 133638 128974 7 1 40 7 1 40 16186 931 1552
+5 * 778 778
+1 * 778 778

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +10 778 778
+4 * 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(52)
calls=778 0x404829 -26 
* * 409298 137528 132864 25 3 4 25 3 4 16186 947 1552 194
+5 +1 778 778
+1 * 778 778

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 778 0 778 1 0 0 1
+1 * 778
+3 * 778 0 778
+1 * 778
+4 * 778 0 778
+4 +2 778 778
+4 * 778 778
+4 * 778
+3 * 778 778
+4 * 778 778
+3 * 778
+3 * 778
+3 * 778
+4 * 778
+3 * 778 778
+4 * 778 778
+3 -1 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=778 0x403d98 +11 
* * 117828 32940 20924 1 1 0 1 1 0 24542 58 1556
+5 +1 778 778
+4 * 778
+3 * 778 0 778
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=778 0x403296 -82 
* * 17894 6224 6224 1 0 0 1
+5 * 778
jump=778 +28 * 
* * 
+28 * 778
+4 * 778 778
+1 * 778 778
+1 * 778 778

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 3144 0 3144 1 0 0 1
+1 * 3144
+3 * 3144 0 3144 0 0 1 0 0 1
+4 +1 3144 3144
+4 * 3144 3144 0 1 1 0 1 1
+4 * 3144
+3 * 3144 3144
+4 * 3144 3144
+3 * 3144
+3 * 3144
+3 * 3144
+4 * 3144 3144
+1 * 3144 3144

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 +2 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=778 0x404236 -14 
* * 257521 44972 44739 24 13 8 24 13 8 37730 1026 1556
+5 * 778 778
+4 * 778 0 778
+3 +1 778 778
+4 * 778 778 0 1 0 0 1
+3 * 778 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+3 * 778 778
+4 * 778
+4 * 778
+3 * 778 778
+4 * 778 0 778
+4 +1 778 778
+1 * 778 778

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 +2 778 778
+4 * 778 778 0 1 0 0 1
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=778 0x403fbe -14 
* * 256683 42600 39874 18 6 36 18 6 36 37758 1446 1556
+5 * 778 778
+4 * 778 0 778
+3 +1 778 778
+4 * 778 778
+3 * 778 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+3 * 778 778
+4 * 778
+4 * 778
+3 * 778 778
+4 * 778 0 778
+4 +1 778 778
+1 * 778 778

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 389 0 389
+1 * 389
+3 * 389 0 0 1 0 0 1
+4 * 389 0 389
+4 * 389 0 389
+4 +2 389 389
+4 * 389 389
+4 * 389 389
+4 * 389 389
+4 * 389
+3 * 389 0 0 0 0 0 0 0 0 389
jcnd=8/389 +51 +10 
* * 
+2 +3 381 381
+4 * 381 381
+4 * 381 381
+4 -1 381 381
+4 * 381
+3 * 381
+3 * 381 0 381
cfi=(3) /usr/include/c++/4.8/ext/alloc_traits.h
cfn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
calls=381 0x4036b1 215 
* * 14478 4953 5334 0 24 12 0 24 12 381
+5 +2 381 381
+4 * 381 381
+4 * 381
+4 * 381 381
+4 * 381 0 381
+4 * 381
jump=381 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12598 3736 3257 27 17 29 27 17 29 874 79 47
+5 +2 389 389
+1 * 389 389

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1580 0 1580 1 0 0 1
+1 * 1580
+3 * 1580 0 1580 1 0 0 1
+4 +1 1580 1580
+4 * 1580 1580
+1 * 1580 1580

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+3 * 778 0 778
+4 * 778
+4 * 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=778 0x404380 726 
* * 7780 3890 3112
+5 * 778 778
+4 * 778 778
+1 * 778 778

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 778 0 778
+1 * 778
+3 * 778 0 778
+1 * 778
+4 * 778 0 778 1 0 0 1
+4 +2 778 778
+4 * 778
+3 * 778 0 778
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=778 0x40325e 113 
* * 4668 2334 1556
+5 * 778
+3 * 778 778
+4 * 778 778
+4 * 778 778
+4 * 778 778
+3 -1 778
+3 * 778
+3 * 778 0 778
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=778 0x40326c 148 
* * 24118 7780 9336 4 0 0 4
+5 +1 778 778
+4 * 778
+3 * 778 0 778
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=778 0x4031ec 159 
* * 146602 43738 27670 27 5 0 27 5 0 21518 610 1556
+5 * 778
jump=778 +28 * 
* * 
+28 * 778 0 0 1 0 0 1
+4 * 778 778
+1 * 778 778
+1 * 778 778

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 786 0 786 1 0 0 1
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 * 786 0 786
+4 +2 786 786
+5 * 786 0 0 0 0 0 0 0 0 786
+2 +1 786 786
+4 * 786 786
+4 * 786 786
+4 * 786
+3 * 786
+3 * 786 0 786
cfi=(5)
cfn=(160)
calls=786 0x4044d6 -65 
* * 95422 24527 13817 24 5 0 24 5 0 20934 617 1572
+5 +1 786 786
+1 * 786 786

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 778 0 778
+1 * 778
+3 * 778 0 778
+1 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=778 0x4043ca -45 
* * 28008 10114 10892 4 0 4 4 0 4
+5 +1 778 778 0 1 0 0 1
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(20)
calls=778 0x404412 +43 
* * 276971 54308 50185 25 13 8 25 13 8 37730 1026 1556
+5 * 778
jump=778 +28 * 
* * 
+28 * 778
+4 * 778 778
+1 * 778 778
+1 * 778 778

fn=(14)
0x4043ca 90 778 0 778 1 0 0 1
+1 * 778
+3 * 778
+4 * 778 0 778 0 0 1 0 0 1
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfi=(4) /usr/include/c++/4.8/bits/allocator.h
cfn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
calls=778 0x404804 +24 
* * 14004 4668 5446 2 0 1 2 0 1
+5 * 778 778
+4 * 778 0 778 0 0 2 0 0 2
+7 * 778 778
+4 * 778 0 778 1 0 0 1
+8 * 778 778
+4 * 778 0 778
+8 +1 778 778
+1 * 778 778

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 778 0 778 1 0 0 1
+1 * 778
+3 * 778 0 778
+2 * 778 0 778
+2 * 778 0 778
+1 * 778 0 0 1 0 0 1
+4 * 778 0 778
+4 * 778 0 778
+4 +2 778 778
+4 * 778
+3 * 778 0 778
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=778 0x4039fc 117 
* * 4668 2334 1556 2 0 0 2
+5 * 778
+3 * 778 0 778
cfi=(3)
cfn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
calls=778 0x4039ed -88 
* * 4668 2334 1556
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(2)
calls=778 0x402d74 645 
* * 10114 4668 1556
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778
+3 * 778
+3 * 778 0 778 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=778 0x403a0a 134 
* * 321257 67496 61658 25 6 36 25 6 36 37758 1446 1556
+5 +4 778 778
+4 * 778
+3 * 778 0 778
cfn=(106)
calls=778 0x40325e 113 
* * 4668 2334 1556 1 0 0 1
+5 * 778
+3 * 778 778
+4 * 778 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=778 0x403a98 565 
* * 19450 7780 6224 2 0 0 2
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(112)
calls=778 0x403a68 547 
* * 19450 7780 6224
+5 * 778
+3 * 778
+3 * 778
+3 * 778
+3 * 778 0 778
cfi=(11)
cfn=(114)
calls=778 0x403ac9 -60 
* * 431860 145308 141422 7 1 40 7 1 40 16186 931 1552
+5 -3 778 778
+4 * 778 0 778
+4 * 778
jump=778 +28 +4 
* * 
+28 +4 778
+4 * 778 778
+1 * 778 778
+2 * 778 778
+2 * 778 778
+1 * 778 778

fn=(188)
0x403d98 171 786 0 786 1 0 0 1
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 * 786 0 786
+4 +2 786 786
+5 * 786 0 0 0 0 0 0 0 0 786 8
+2 +1 786 786
+4 * 786 786
+4 * 786 786
+4 * 786
+3 * 786
+3 * 786 0 786
cfi=(5)
cfn=(190)
calls=786 0x40452a -65 
* * 106359 28528 17188 0 1 0 0 1 0 23967 67 1572
+5 +1 786 786
+1 * 786 786

fn=(22)
0x404236 167 786 0 786 1 0 0 1
+1 * 786
+3 * 786
+4 * 786 0 786 1 0 0 1
+4 * 786 0 786
+4 0 786 786
+5 0 786 0 0 0 0 0 0 0 0 786
+2 0 786 786
+4 0 786 786
+4 0 786
+5 0 786
+3 0 786
+3 0 786 0 786
fi=(6) ???
cfi=(5)
cfn=(26)
calls=786 0x404730 99 
* 0 248082 41526 42077 31 30 15 31 30 15 37459 1084 1572
+5 0 786
fi=(6)
jump=786 +7 0 
* 0 
+7 0 786 786
+1 0 786 786

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 778 0 778 1 0 0 1
+1 * 778
+3 * 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+4 * 778 0 778
+4 * 778
+4 * 778 0 0 1 0 0 1
+4 * 778
+3 * 778
+3 * 778 0 778
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=778 0x404468 726 
* * 7780 3890 3112 1 0 0 1
+5 * 778 778
+4 * 778 778
+1 * 778 778

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+3 * 778 0 778
+4 * 778
+4 * 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfi=(10)
cfn=(44)
calls=778 0x404468 726 
* * 7780 3890 3112
+5 * 778 778
+4 * 778 778
+1 * 778 778

fn=(86)
0x403a0a 134 778 0 778
+1 * 778
+3 * 778 0 778
+1 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=778 0x4042e2 -45 
* * 28008 10114 10892 5 0 0 5
+5 +1 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778 1 0 0 1
cfn=(94)
calls=778 0x40432a +43 
* * 276133 51936 45320 19 6 36 19 6 36 37758 1446 1556
+5 * 778
jump=778 +28 * 
* * 
+28 * 778
+4 * 778 778
+1 * 778 778
+1 * 778 778

fn=(88)
0x4042e2 90 778 0 778 1 0 0 1
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778 1 0 0 1
cfi=(4)
cfn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
calls=778 0x4047b2 +24 
* * 14004 4668 5446 3 0 0 3
+5 * 778 778
+4 * 778 0 778
+7 * 778 778
+4 * 778 0 778
+8 * 778 778
+4 * 778 0 778
+8 +1 778 778
+1 * 778 778

fn=(156)
0x4031ec 159 778 0 778 1 0 0 1
+1 * 778
+3 * 778 0 778
+1 * 778
+4 * 778 0 778
+4 +2 778 778
+4 * 778 778 0 1 0 0 1
+4 * 778
+3 * 778 778
+4 * 778 778
+3 * 778
+3 * 778
+3 * 778
+4 * 778
+3 * 778 778
+4 * 778 778
+3 -1 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(158)
calls=778 0x403ce6 +11 
* * 106924 28956 17556 24 5 0 24 5 0 21518 610 1556
+5 +1 778 778
+4 * 778
+3 * 778 0 778
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=778 0x4031b8 -82 
* * 17894 6224 6224 1 0 0 1
+5 * 778
jump=778 +28 * 
* * 
+28 * 778
+4 * 778 778
+1 * 778 778
+1 * 778 778

fn=(172)
0x4031b8 79 778 0 778 1 0 0 1
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 778
+4 * 778
+3 * 778 0 778
cfi=(4)
cfn=(174) std::allocator<float>::~allocator()
calls=778 0x403ccc +42 
* * 10892 3890 3890
+5 * 778 778
+1 * 778 778

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1588 0 1588 1 0 0 1
+1 * 1588
+3 * 1588 0 1588
+4 +1 1588 1588
+4 * 1588 1588 0 0 2 0 0 2
+4 * 1588
+3 * 1588 1588
+4 * 1588 1588
+3 * 1588
+3 * 1588
+3 * 1588
+4 * 1588 1588
+1 * 1588 1588

fn=(106)
0x40325e 113 1580 0 1580 1 0 0 1
+1 * 1580
+3 * 1580 0 1580
+4 +1 1580 1580
+4 * 1580 1580
+1 * 1580 1580

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 794 0 794 1 0 0 1
+1 * 794
+3 * 794 0 794 0 0 1 0 0 1
+4 +1 794 794
+4 * 794 794
+1 * 794 794

fn=(82)
0x4039fc 117 794 0 794 1 0 0 1
+1 * 794
+3 * 794 0 794 1 0 0 1
+4 +1 794 794
+4 * 794 794
+1 * 794 794

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 389 0 389
+1 * 389
+3 * 389
+4 * 389 0 389
+4 * 389 0 389
+4 +2 389 389
+4 * 389 389
+4 * 389 389
+4 * 389 389
+4 * 389
+3 * 389 0 0 0 0 0 0 0 0 389 8
jcnd=8/389 +51 +10 
* * 
+2 +3 381 381
+4 * 381 381
+4 * 381 381
+4 -1 381 381
+4 * 381
+3 * 381
+3 * 381 0 381
cfi=(3)
cfn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
calls=381 0x403373 215 
* * 14478 4953 5334 0 25 2 0 25 2 381 2
+5 +2 381 381
+4 * 381 381
+4 * 381
+4 * 381 381
+4 * 381 0 381
+4 * 381
jump=381 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12645 3913 3396 36 7 9 36 7 9 853 71 47
+5 +2 389 389
+1 * 389 389

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 778 0 778 1 0 0 1
+1 * 778
+3 * 778 0 778
+2 * 778 0 778
+2 * 778 0 778
+1 * 778
+4 * 778 0 778 1 0 0 1
+4 * 778 0 778
+4 +2 778 778
+4 * 778
+3 * 778 0 778
cfn=(6)
calls=778 0x403b08 117 
* * 4668 2334 1556 1 0 1 1 0 1
+5 * 778
+3 * 778 0 778
cfi=(3)
cfn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
calls=778 0x403afa -88 
* * 4668 2334 1556 1 0 0 1
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(10)
calls=778 0x402f54 645 
* * 10114 4668 1556 1 1 0 1 1
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778
+3 * 778
+3 * 778 0 778
cfn=(12)
calls=778 0x403b16 134 
* * 322095 69868 66523 30 13 12 30 13 12 37730 1026 1556
+5 +4 778 778 0 1 0 0 1
+4 * 778
+3 * 778 0 778
cfn=(40)
calls=778 0x40333c 113 
* * 4668 2334 1556 2 0 0 2
+5 * 778
+3 * 778 778
+4 * 778 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(42)
calls=778 0x403ba4 565 
* * 19450 7780 6224 3 0 0 3
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(46)
calls=778 0x403b74 547 
* * 19450 7780 6224
+5 * 778
+3 * 778
+3 * 778
+3 * 778
+3 * 778 0 778 1 0 0 1
cfi=(11)
cfn=(48)
calls=778 0x403bd5 -60 
* * 431860 145308 141422 26 3 4 26 3 4 16186 947 1552 194
+5 -3 778 778
+4 * 778 0 778
+4 * 778
jump=778 +28 +4 
* * 
+28 +4 778
+4 * 778 778
+1 * 778 778
+2 * 778 778
+2 * 778 778
+1 * 778 778

fn=(108)
0x403a98 565 778 0 778 1 0 0 1
+1 * 778
+3 * 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+4 * 778 0 778
+4 * 778
+4 * 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfi=(10)
cfn=(110)
calls=778 0x404380 726 
* * 7780 3890 3112 1 0 0 1
+5 * 778 778
+4 * 778 778
+1 * 778 778

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 778 0 778
+1 * 778
+3 * 778 0 778
+1 * 778
+4 * 778 0 778 1 0 0 1
+4 +2 778 778
+4 * 778
+3 * 778 0 778
cfn=(40)
calls=778 0x40333c 113 
* * 4668 2334 1556
+5 * 778
+3 * 778 778
+4 * 778 778
+4 * 778 778
+4 * 778 778
+3 -1 778
+3 * 778
+3 * 778 0 778
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=778 0x40334a 148 
* * 24118 7780 9336 2 0 0 2
+5 +1 778 778
+4 * 778
+3 * 778 0 778
cfn=(186)
calls=778 0x4032ca 159 
* * 157506 47722 31038 3 1 0 3 1 0 24542 58 1556
+5 * 778
jump=778 +28 * 
* * 
+28 * 778 0 0 1 0 0 1
+4 * 778 778
+1 * 778 778
+1 * 778 778

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 786 0 786 1 0 0 1
+1 * 786 0 0 1 0 0 1
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 0 786 786
+5 0 786 0 0 0 0 0 0 0 0 786
+2 0 786 786
+4 0 786 786
+4 0 786
+5 0 786
+3 0 786
+3 0 786 0 786
fi=(6)
cfi=(5)
cfn=(100)
calls=786 0x40461a 99 
* 0 247324 39348 37354 29 12 41 29 12 41 37475 1504 1572
+5 0 786
fi=(6)
jump=786 +7 0 
* 0 
+7 0 786 786
+1 0 786 786

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 229510 0 229510
+1 * 229510
+3 * 229510 0 229510
+4 * 229510 0 229510
+4 +1 229510 229510
+4 * 229510 229510
+3 * 229510 229510
+4 * 229510
+4 * 229510
+3 * 229510 229510
+1 * 229510 229510

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 229510 0 229510
+1 * 229510
+3 * 229510 0 229510 1 0 0 1
+4 * 229510 0 229510
+4 +1 229510 229510
+4 * 229510 229510
+3 * 229510 229510
+4 * 229510
+4 * 229510
+3 * 229510 229510
+1 * 229510 229510

fn=(192)
0x403296 79 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 778
+4 * 778
+3 * 778 0 778
cfi=(4)
cfn=(194) std::allocator<int>::~allocator()
calls=778 0x403d7e +42 
* * 10892 3890 3890 1 0 0 1
+5 * 778 778
+1 * 778 778

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(120)
0x4049e2 450 778 0 778
+1 * 778
+3 * 778 0 778
+1 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +10 778 778
+4 * 778
+3 * 778 0 778
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=778 0x404bc6 288 
* * 11670 4668 3890 3 0 0 3
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(122)
calls=778 0x404bc6 288 
* * 11670 4668 3890
+5 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=778 0x404be0 -36 
* * 357950 119634 114970 4 1 40 4 1 40 16186 931 1552
+5 +1 778
+4 * 778 778
+1 * 778 778
+1 * 778 778

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 826 0 826
+1 * 826
+3 * 826
+4 * 826 0 826 1 0 0 1
+4 +1 826 826
+4 * 826
+3 * 826 0 826
cfi=(13)
cfn=(130)
calls=826 -33 -66 
* * 4956 2478 1652 0 0 1 0 0 1
+5 * 826 826
+1 * 826 826

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1556 0 1556
+1 * 1556
+3 * 1556
+4 * 1556 0 1556
+4 +1 1556 1556
+4 * 1556
+3 * 1556 0 1556
cfi=(13)
cfn=(134)
calls=1556 0x404e98 -58 
* * 24896 9336 7780 2 0 0 2
+5 * 1556 1556
+1 * 1556 1556

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +8 778 0 778
+4 +3 778 778
+4 * 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=778 0x404eb5 -22 
* * 273926 91626 86184 1 1 40 1 1 40 16186 931 1552
+5 +1 778 778
+1 * 778 778

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1556 0 1556 1 0 0 1
+1 * 1556
+3 * 1556
+4 * 1556 0 1556
+4 +1 1556 1556
+4 * 1556
+3 * 1556 0 1556
cfi=(13)
cfn=(124)
calls=1556 0x404d36 -77 
* * 9336 4668 3112 2 0 0 2
+5 * 1556 1556
+1 * 1556 1556

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1556 0 1556 1 0 0 1
+1 * 1556
+3 * 1556
+4 * 1556 0 1556 1 0 0 1
+4 +1 1556 1556
+4 * 1556
+3 * 1556 0 1556
cfi=(13)
cfn=(58)
calls=1556 0x404d8f -77 
* * 9336 4668 3112 1 0 0 1
+5 * 1556 1556
+1 * 1556 1556

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 794 0 794
+1 * 794
+3 * 794
+4 * 794 0 794 1 0 0 1
+4 * 794 0 794
+4 * 794 0 794
+4 +2 794 794
+4 * 794 794
+4 * 794
+3 * 794
+3 * 794
+4 * 794 0 794
+4 +1 794 794
+5 * 794 0 0 0 0 0 0 0 0 794
jcnd=8/794 +33 +2 
* * 
+2 +1 786 786
+4 * 786
+8 * 786 786
+4 * 786 786
+4 * 786
+3 * 786 0 0 1 0 0 1
+3 * 786 0 786 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=786 0x3877c83840 0 
* * 253264 83384 81817 11 2 20 11 2 20 15492 951 781 194
* * 786 786 0 1 1 0 1 1 0 0 0 786
+5 +1 794 794
+4 * 794
+8 * 794 794
+4 * 794
+3 +1 794 794
+1 * 794 794

fn=(140)
0x404eb5 368 794 0 794
+1 * 794
+3 * 794
+4 * 794 0 794 1 0 0 1
+4 * 794 0 794
+4 * 794 0 794 0 0 1 0 0 1
+4 +2 794 794
+4 * 794 794
+4 * 794
+3 * 794
+3 * 794
+4 * 794 0 794
+4 +1 794 794
+5 * 794 0 0 0 0 0 0 0 0 794
jcnd=8/794 +33 +2 
* * 
+2 +1 786 786
+4 * 786
+8 * 786 786
+4 * 786 786
+4 * 786
+3 * 786
+3 * 786 0 786
cob=(2)
cfi=(9)
cfn=(78)
calls=786 0x3877c83840 0 
* * 253264 83384 81817 0 1 41 0 1 41 15492 937 781
* * 786 786 0 0 0 0 0 0 0 0 0 786
+5 +1 794 794
+4 * 794
+8 * 794 794
+4 * 794
+3 +1 794 794
+1 * 794 794

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778 1 0 0 1
+4 * 778 0 778
+4 * 778 0 778
+4 +8 778 0 778
+4 +3 778 778
+4 * 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(74)
calls=778 0x404f37 -22 
* * 273926 91626 86184 14 3 3 14 3 3 16186 947 1552 194
+5 +1 778 778
+1 * 778 778

fn=(126)
0x404be0 424 778 0 778
+1 * 778
+3 * 778 0 778
+2 * 778 0 778
+1 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +4 778 778
+4 * 778
+3 * 778 0 778
cfn=(128)
calls=778 0x404878 277 
* * 11670 4668 3890 1 0 0 1
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(132)
calls=778 0x404d44 277 
* * 19450 7002 6224 2 0 0 2
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(132)
calls=778 0x404d44 277 
* * 19450 7002 6224
+5 * 778
+3 * 778
+3 * 778
+3 * 778 0 778
cfn=(138)
calls=778 0x404d5e -49 
* * 285596 95516 90852 1 1 40 1 1 40 16186 931 1552
+5 +1 778
+4 * 778 778
+1 * 778 778
+2 * 778 778
+1 * 778 778

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 778 0 778
+1 * 778
+3 * 778 0 778
+1 * 778
+4 * 778 0 778 1 0 0 1
+4 * 778 0 778
+4 * 778 0 778
+4 +10 778 778
+4 * 778
+3 * 778 0 778
cfn=(56)
calls=778 0x404c38 288 
* * 11670 4668 3890 3 0 0 3
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(56)
calls=778 0x404c38 288 
* * 11670 4668 3890
+5 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=778 0x404c52 -36 
* * 357950 119634 114970 20 3 4 20 3 4 16186 947 1552 194
+5 +1 778
+4 * 778 778
+1 * 778 778
+1 * 778 778

fn=(60)
0x404c52 424 778 0 778
+1 * 778
+3 * 778 0 778
+2 * 778 0 778
+1 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 * 778 0 778
+4 +4 778 778
+4 * 778
+3 * 778 0 778
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=778 0x40492d 277 
* * 11670 4668 3890 2 0 0 2
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=778 0x404d9d 277 
* * 19450 7002 6224 2 0 1 2 0 1
+5 * 778
+3 * 778 778
+4 * 778
+3 * 778 0 778
cfn=(66)
calls=778 0x404d9d 277 
* * 19450 7002 6224
+5 * 778
+3 * 778
+3 * 778
+3 * 778 0 778
cfn=(72)
calls=778 0x404db7 -49 
* * 285596 95516 90852 15 3 3 15 3 3 16186 947 1552 194
+5 +1 778
+4 * 778 778
+1 * 778 778
+2 * 778 778
+1 * 778 778

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 826 0 826 1 0 0 1
+1 * 826
+3 * 826
+4 * 826 0 826
+4 +1 826 826
+4 * 826
+3 * 826 0 826 1 0 0 1
cfi=(13)
cfn=(64)
calls=826 -33 -66 
* * 4956 2478 1652
+5 * 826 826
+1 * 826 826

fn=(66)
0x404d9d 277 1556 0 1556
+1 * 1556
+3 * 1556
+4 * 1556 0 1556
+4 +1 1556 1556
+4 * 1556
+3 * 1556 0 1556
cfi=(13)
cfn=(68)
calls=1556 0x404f1a -58 
* * 24896 9336 7780 2 0 1 2 0 1
+5 * 1556 1556
+1 * 1556 1556

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1556 0 1556 1 0 0 1
+1 * 1556
+3 * 1556 0 1556
+4 +1 1556 1556
+4 * 1556 1556
+1 * 1556 1556

fn=(110)
0x404380 726 1556 0 1556 1 0 0 1
+1 * 1556
+3 * 1556 0 1556
+4 * 1556 0 1556
+4 * 1556 1556
+4 * 1556 1556
+3 * 1556 1556
+4 * 1556 0 1556
+3 * 1556 1556
+1 * 1556 1556

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1556 0 1556 1 0 0 1
+1 * 1556
+3 * 1556 0 1556
+4 +1 1556 1556
+4 * 1556 1556
+1 * 1556 1556

fn=(44)
0x404468 726 1556 0 1556
+1 * 1556
+3 * 1556 0 1556
+4 * 1556 0 1556
+4 * 1556 1556
+4 * 1556 1556
+3 * 1556 1556
+4 * 1556 0 1556 1 0 0 1
+3 * 1556 1556
+1 * 1556 1556

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 786 0 786 1 0 0 1
+1 * 786
+3 * 786 0 786
+4 * 786 0 786 1 0 0 1
+4 * 786 786
+1 * 786 786

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 786 0 786 1 0 0 1
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 +4 786 786
+4 * 786 786
+4 * 786
+3 * 786
+3 * 786 0 786
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=786 0x40454c -14 
* * 4716 1572 2358 1 0 0 1
+5 +2 786 786
+1 * 786 786

fn=(150)
0x40326c 148 786 0 786
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 * 786 0 786
+4 +3 786 786 0 1 0 0 1
+4 * 786 786
+4 * 786
+3 * 786
+3 * 786 0 786
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=786 0x403d1a -29 
* * 14148 4716 5502 3 0 0 3
+5 +1 786 786
+1 * 786 786

fn=(180)
0x40334a 148 786 0 786
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 * 786 0 786
+4 +3 786 786
+4 * 786 786
+4 * 786
+3 * 786
+3 * 786 0 786
cfn=(182)
calls=786 0x403dcc -29 
* * 14148 4716 5502 2 0 0 2
+5 +1 786 786
+1 * 786 786

fn=(152)
0x403d1a 122 786 0 786 1 0 0 1
+1 * 786
+3 * 786
+4 * 786 0 786
+4 * 786 0 786
+4 +4 786 786
+4 * 786 786
+4 * 786
+3 * 786
+3 * 786 0 786
cfn=(154)
calls=786 0x4044f8 -14 
* * 4716 1572 2358 2 0 0 2
+5 +2 786 786
+1 * 786 786

fn=(184)
0x40454c 112 786 0 786 1 0 0 1
+1 * 786
+3 * 786 0 786
+4 * 786 0 786
+4 * 786 786
+1 * 786 786

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 3137 484 482 9 17 7 9 17 7 515 58 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3217 678 624 13 6 5 13 6 5 503 58 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 389 0 389 1 0 0 1
+1 * 389
+3 * 389
+4 * 389 0 389
+4 * 389 0 389
+4 +1 389 389
+4 * 389
+3 * 389 0 389
cfi=(2)
cfn=(2)
calls=389 0x402d74 645 
* * 5057 2334 778
+5 * 389
+3 * 389 0 389
+3 +1 389 389
+6 * 389 0 389
+3 * 389 389
+6 * 389 0 389
+3 +1 389 389
+6 * 389 0 389 1 0 0 1
+3 * 389 389
+6 * 389 0 389
+3 +2 389 0 389
+7 * 389
jump=389 +86 * 
* * 
+2 +1 76244 76244
+3 * 76244
+3 * 76244 76244
+4 * 76244
+3 * 76244
+3 * 76244 0 76244
cfi=(2)
cfn=(144)
calls=76244 0x402d9a 770 
* * 838684 381220 228732
+5 * 76244 76244
+4 * 76244 76244
+5 * 76244
+4 * 76244 0 76244
+5 +1 76244 76244
+3 * 76244
+3 * 76244 76244
+4 * 76244
+3 * 76244
+3 * 76244 0 76244
cfi=(2)
cfn=(146)
calls=76244 0x402dba 770 
* * 838684 381220 228732 1 0 0 1
+5 * 76244 76244
+2 * 76244
+4 * 76244 76244
+5 * 76244
+4 * 76244 0 76244
+5 -2 76244 0 76244
+4 * 76244 76244
+3 * 76244
+3 * 76244 76244
+3 * 76244 0 0 0 0 0 0 0 0 76244 390
jcnd=75855/76244 -93 +1 
* * 
-9 * 389 389 0 1 0 0 1
+3 * 389
+3 * 389 389
+3 * 389 0 0 0 0 0 0 0 0 389
jcnd=389/389 -93 +1 
* * 
+2 +4 389 389
+3 * 389
+3 * 389
+4 * 389 389 0 1 0 0 1
+5 * 389
+4 * 389
+3 * 389 0 389
+5 +1 389 389
+3 * 389
+3 * 389
+4 * 389 389
+5 * 389
+4 * 389
+3 * 389 0 389
+5 +1 389 0 389
+7 * 389
jump=389 0x4016ee * 
* * 
+2 +1 76244 76244
+3 * 76244
+3 * 76244 76244
+4 * 76244
+3 * 76244 0 0 1 0 0 1
+3 * 76244 0 76244
cfi=(2)
cfn=(146)
calls=76244 0x402dba 770 
* * 838684 381220 228732
+5 * 76244 76244
+2 * 76244
+4 * 76244 76244
+5 * 76244 0 76244
+5 +1 76244 76244
+3 * 76244
+3 * 76244 76244
+4 * 76244
+3 * 76244
+3 * 76244 0 76244
cfi=(2)
cfn=(144)
calls=76244 0x402d9a 770 
* * 838684 381220 228732
+5 * 76244 76244
+4 * 76244 76244
+5 * 76244 0 76244
+5 +1 76244 76244
+5 * 76244 76244
+5 * 76244 76244
+5 * 76244
+4 * 76244 0 76244
+5 +1 76244 76244
+5 * 76244 76244
+5 * 76244 76244
+5 * 76244
+4 * 76244 0 76244
+5 -4 76244 0 76244
+4 * 76244 76244
+3 * 76244
+3 * 76244 76244
+3 * 76244 0 0 0 0 0 0 0 0 76244 390
jcnd=75855/76244 0x401672 +1 
* * 
-9 * 389 389 0 1 0 0 1
+3 * 389
+3 * 389 389
+3 * 389 0 0 0 0 0 0 0 0 389
jcnd=389/389 0x401672 +1 
* * 
+6 +6 389 389 0 1 0 0 1
+5 * 389 389
+5 * 389 0 389
+5 +2 389 389
+3 +1 389 0 389
+3 * 389 389
+5 * 389 389
+1 * 389 389

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 389
+7 * 389
+7 * 389
+3 * 389
+3 * 389 0 389
cfi=(2)
cfn=(4)
calls=389 0x4030b2 310 
* * 428128 126664 119199 66 16 16 66 16 16 26976 1210 1554 194
+5 * 389
+7 * 389
+7 * 389
+3 * 389
+3 * 389 0 389
cfi=(2)
cfn=(80)
calls=389 0x402ff4 310 
* * 427955 125489 116783 40 7 74 40 7 74 27039 1424 1554
+5 * 389 0 0 1 0 0 1
+7 * 389
+7 * 389
+3 * 389
+3 * 389 0 389
cfn=(142)
calls=389 0x401585 -52 
* * 7954661 3516949 1836469 8 0 0 8 0 0 153266 780
+5 * 389 0 389
+8 * 389 389
+6 * 389 0 389
+6 * 389
+7 * 389
+3 * 389 0 389
cfi=(2)
cfn=(148)
calls=389 0x402df4 414 
* * 97030 30427 21615 33 5 0 33 5 0 10759 308 778
+5 * 389
+7 * 389
+3 * 389 0 389 1 0 0 1
cfi=(2)
cfn=(178)
calls=389 0x402e74 414 
* * 102482 32419 23299 7 1 0 7 1 0 12271 32 778
+5 +2 389
+7 * 389
+7 * 389
+3 * 389
+3 * 389 0 389
cfi=(2)
cfn=(4)
calls=389 0x4030b2 310 
* * 427745 126634 119088 2 1 1 2 1 1 26940 763 1554
+5 * 389
+7 * 389
+7 * 389
+3 * 389
+3 * 389 0 389
cfi=(2)
cfn=(80)
calls=389 0x402ff4 310 
* * 427080 125437 116639 0 0 2 0 0 2 26905 953 1554
+5 * 389 389
+6 * 389 0 0 1 0 0 1
+7 * 389
+7 * 389 0 389
+6 * 389 389
+8 * 389
+3 * 389
+3 * 389 0 389
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=389 0x401719 -33 
* * 3682663 1533438 844519 4 0 0 4 0 0 76633 390
+5 * 389 0 389
+8 * 389 389
+6 * 389 0 389
+6 * 389
+7 * 389 0 0 1 0 0 1
+3 * 389 0 389
cfi=(2)
cfn=(148)
calls=389 0x402df4 414 
* * 97030 30427 21615 0 0 0 0 0 0 10759 302 778
+5 * 389
+7 * 389
+3 * 389 0 389
cfi=(2)
cfn=(178)
calls=389 0x402e74 414 
* * 102482 32419 23299 0 0 0 0 0 0 12271 26 778
+5 +2 389 389
+7 * 389
+3 * 389 0 389
cfi=(2)
cfn=(2)
calls=389 0x402d74 645 
* * 5057 2334 778
+5 * 389 389
+6 * 389
+3 * 389
+3 * 389
+3 * 389 389
+7 * 389
+3 * 389 0 0 1 0 0 1
+3 * 389 0 389
cfi=(2)
cfn=(144)
calls=389 0x402d9a 770 
* * 4279 1945 1167
+5 * 389
+3 * 389
+7 * 389
+3 * 389
+3 * 389 0 389
cfi=(2)
cfn=(200)
calls=389 0x402eda 901 
* * 37389 13963 10731 39 32 11 39 32 11 1623 81 47
+5 +1 389 389
+7 * 389
+3 * 389 0 389
cfi=(2)
cfn=(10)
calls=389 0x402f54 645 
* * 5057 2334 778 0 1 0 0 1
+5 * 389 389
+6 * 389
+3 * 389
+3 * 389
+3 * 389 389
+7 * 389 0 0 1 0 0 1
+3 * 389
+3 * 389 0 389
cfi=(2)
cfn=(146)
calls=389 0x402dba 770 
* * 4279 1945 1167
+5 * 389
+3 * 389
+7 * 389
+3 * 389
+3 * 389 0 389
cfi=(2)
cfn=(244)
calls=389 0x402f7a 901 
* * 37342 13786 10592 28 41 41 28 41 41 1644 79 47
+5 +1 389 389
+7 * 389
+3 * 389 0 389
cfi=(2)
cfn=(10)
calls=389 0x402f54 645 
* * 5057 2334 778
+5 * 389 389
+6 * 389
+3 * 389
+3 * 389
+3 * 389 389 0 1 0 0 1
+7 * 389
+3 * 389
+3 * 389 0 389
cfi=(2)
cfn=(146)
calls=389 0x402dba 770 
* * 4279 1945 1167
+5 * 389 389
+2 * 389
+4 * 389 389
+8 * 389 389
+8 * 389 0 389
+8 +1 389 389
+7 * 389
+3 * 389 0 389
cfi=(2)
cfn=(2)
calls=389 0x402d74 645 
* * 5057 2334 778
+5 * 389 389 0 1 0 0 1
+6 * 389
+3 * 389
+3 * 389
+3 * 389 389
+7 * 389
+3 * 389
+3 * 389 0 389
cfi=(2)
cfn=(144)
calls=389 0x402d9a 770 
* * 4279 1945 1167
+5 * 389 389
+4 * 389 389
+8 * 389
+4 * 389 389
+8 * 389
+3 * 389 0 389
+8 +2 389 0 389
+7 -12 389 389
+8 * 389 389
+7 * 389 0 0 0 0 0 0 0 0 389 1
jcnd=1/389 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 389
+7 * 389
+3 * 389 0 389
cfi=(2)
cfn=(2)
calls=389 0x402d74 645 
* * 5057 2334 778 2 0 1 2 0 1
+5 * 389
+3 * 389 389
+7 * 389
+3 * 389 0 389
cfi=(2)
cfn=(2)
calls=389 0x402d74 645 
* * 5057 2334 778 0 1 0 0 1
+5 * 389
+3 * 389 0 0 0 0 0 0 0 0 389 2
+2 * 389 0 0 1 0 0 1
+5 * 389
jump=389 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 389
+2 * 389 0 0 0 0 0 0 0 0 389
jcnd=389/389 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 389 0 389
+1 * 389
+3 * 389
+4 * 389 0 389
+4 * 389 0 389
+4 * 389 0 389
+5 +1 389 389
+4 * 389
+3 * 389 0 389
cfi=(2)
cfn=(2)
calls=389 0x402d74 645 
* * 5057 2334 778
+5 * 389
+3 * 389 0 389
+3 +1 389 389 0 1 0 0 1
+6 * 389 0 389
+3 * 389 389
+6 * 389 0 389
+3 +2 389 0 389
+7 * 389
jump=389 +86 * 
* * 
+2 +1 76244 76244
+3 * 76244
+3 * 76244 76244
+4 * 76244
+3 * 76244
+3 * 76244 0 76244
cfi=(2)
cfn=(144)
calls=76244 0x402d9a 770 
* * 838684 381220 228732
+5 * 76244 76244
+4 * 76244 76244
+5 * 76244
+4 * 76244 0 76244
+5 +1 76244 76244
+3 * 76244
+3 * 76244 76244
+4 * 76244
+3 * 76244
+3 * 76244 0 76244
cfi=(2)
cfn=(146)
calls=76244 0x402dba 770 
* * 838684 381220 228732
+5 * 76244 76244
+2 * 76244
+4 * 76244 76244
+5 * 76244
+4 * 76244 0 76244
+5 -2 76244 0 76244
+4 * 76244 76244
+3 * 76244
+3 * 76244 76244
+3 * 76244 0 0 0 0 0 0 0 0 76244 390
jcnd=75855/76244 -93 +1 
* * 
-9 * 389 389 0 1 0 0 1
+3 * 389
+3 * 389 389
+3 * 389 0 0 0 0 0 0 0 0 389
jcnd=389/389 -93 +1 
* * 
+2 +4 389 389
+3 * 389
+3 * 389 0 0 1 0 0 1
+4 * 389 389
+5 * 389
+4 * 389
+3 * 389 0 389
+5 +1 389 389
+3 * 389
+3 * 389
+4 * 389 389
+5 * 389
+4 * 389
+3 * 389 0 389
+5 +1 389 389
+5 * 389 389
+5 * 389 389
+5 * 389 0 0 1 0 0 1
+4 * 389
+3 * 389 0 389
+5 +2 389 389
+3 +1 389 0 389
+3 * 389 389
+5 * 389 389
+1 * 389 389

fl=(4)
fn=(174)
0x403ccc 121 778 0 778
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 778
+4 * 778
+3 * 778 0 778
cfi=(5)
cfn=(176)
calls=778 0x4044cc -35 
* * 3890 1556 1556
+5 * 778 778
+1 * 778 778

fn=(90)
0x4047b2 115 778 0 778 1 0 0 1
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778 1 0 0 1
+4 +1 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfi=(5)
cfn=(92)
calls=778 0x4049d4 -35 
* * 4668 1556 2334 1 0 0 1
+5 * 778 778
+1 * 778 778

fn=(194)
0x403d7e 121 778 0 778 1 0 0 1
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 778
+4 * 778
+3 * 778 0 778
cfi=(5)
cfn=(196)
calls=778 0x404520 -35 
* * 3890 1556 1556
+5 * 778 778
+1 * 778 778

fn=(16)
0x404804 115 778 0 778 1 0 0 1
+1 * 778
+3 * 778
+4 * 778 0 778
+4 * 778 0 778
+4 +1 778 778
+4 * 778 778
+4 * 778
+3 * 778
+3 * 778 0 778
cfi=(5)
cfn=(18)
calls=778 0x404a28 -35 
* * 4668 1556 2334 1 0 1 1 0 1
+5 * 778 778
+1 * 778 778

fl=(3)
fn=(8)
0x403afa 224 778 0 778 1 0 0 1
+1 * 778
+3 * 778 0 778
+4 * 778 778
+4 * 778 778
+1 * 778 778

fn=(264)
0x4036b1 215 389 0 389
+1 * 389
+3 * 389
+4 * 389 0 389
+4 * 389 0 389
+4 * 389 0 389
+4 +1 389 389
+4 * 389 389
+4 * 389 389
+4 * 389
+3 * 389
+3 * 389 0 389
cfi=(5)
cfn=(266)
calls=389 0x40406a -87 
* * 9336 3112 3501 0 24 16 0 24 16 389
+5 * 389 389
+1 * 389 389

fn=(212)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102)
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28)
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84)
0x4039ed 224 778 0 778
+1 * 778
+3 * 778 0 778
+4 * 778 778
+4 * 778 778
+1 * 778 778

fn=(222)
0x403373 215 389 0 389
+1 * 389
+3 * 389
+4 * 389 0 389
+4 * 389 0 389
+4 * 389 0 389
+4 +1 389 389
+4 * 389 389
+4 * 389 389
+4 * 389
+3 * 389
+3 * 389 0 389
cfi=(5)
cfn=(224)
calls=389 0x403df2 -87 
* * 9336 3112 3501 0 26 3 0 26 3 389 2
+5 * 389 389
+1 * 389 389

ob=(2)
fl=(9)
fn=(104) alloc_perturb
0x3877c77180 0 1438 1438 0 1 0 0 1
+6 0 1438
+2 0 1438 0 0 0 0 0 0 0 0 1438 1
+2 0 1438 1438

fn=(38) _int_malloc
0x3877c79a00 0 1572 0 1572 1 0 0 1
+2 0 1572
+3 0 1572 0 1572
+2 0 1572 0 1572
+2 0 1572 0 1572 0 0 1 0 0 1
+2 0 1572
+3 0 1572 0 1572
+1 0 1572 0 1572
+1 0 1572
+4 0 1572
+4 0 1572 0 0 0 0 0 0 0 0 1572
+6 0 1572
+4 0 1572
+6 0 1572
+3 0 1572
+4 0 1572
+4 0 1572
+4 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572
+6 0 1572 1572 0 1 1 0 1 1
+7 0 1572 0 0 0 0 0 0 0 0 1572 7
jcnd=1450/1572 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1438
+4 0 1438 1438
+1 0 1438 1438
+1 0 1438 1438
+2 0 1438 1438
+2 0 1438 1438
+2 0 1438 1438
+2 0 1438 1438
+7 0 1467
+7 0 1467 0 0 1 0 0 1 0 0 1467 7
jcnd=564/1467 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 2 0 0 2
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 564 0 0 1 0 0 1
+3 0 564
+4 0 564
+4 0 564 0 0 1 0 0 1 0 0 564
jcnd=564/564 0x3877c7a1a4 0 
* 0 
+30 0 564 564
+6 0 564
+5 0 564 0 0 0 0 0 0 0 0 564 1
jcnd=563/564 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 911 244 193 8 3 0 8 3 0 187 27
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1466 0 0 1 0 0 1
+3 0 1466
+3 0 1466
+3 0 1466
+4 0 1466
+3 0 1466
+4 0 1466 0 1466
+5 0 1466
+3 0 1466 0 1466
+4 0 1466 0 1466
+4 0 1466 0 1466
+5 0 1466
+3 0 1466
+3 0 1466
+3 0 1466
+3 0 1466
+4 0 1466
+4 0 1466 0 0 1 0 0 1
+4 0 1466 0 1466
+4 0 1466
+4 0 1466 0 1466
+5 0 1466 0 1466
+5 0 1466
+3 0 1466
+3 0 1466 0 1466
+5 0 1466
+5 0 1466
+3 0 1466 0 1466
+4 0 1466 0 1466
+4 0 1466
+6 0 1466 0 1466
+4 0 1466 0 1466
+5 0 1466 0 0 1 0 0 1
+3 0 1466
+3 0 1466
+3 0 1466
jump=1466 +87 0 
* 0 
+8 0 1059
+3 0 1059
+4 0 1059
+2 0 1059
+2 0 1059
+3 0 1059
+3 0 1059
+3 0 1059
+2 0 1059
+2 0 1059
+5 0 1059
+2 0 1059 1059 0 0 1 0 0 1
+4 0 1059
+3 0 1059
+4 0 1059 0 1059
+4 0 1059 0 1059
+8 0 1059
+7 0 1059 0 1059
+4 0 1059 0 1059 0 0 1 0 0 1
+4 0 1059 0 1059
+4 0 1059 0 0 0 0 0 0 0 0 1059
-38 0 413
+3 0 413
+4 0 413 0 413
+4 0 413 0 413
+8 0 413
+7 0 413 0 413
+4 0 413 0 413
+4 0 413 0 413
+4 0 413 0 0 0 0 0 0 0 0 413
+6 0 2939 2939 0 1 0 0 1
+4 0 2939
+3 0 2939 0 0 0 0 0 0 0 0 2939 149
jcnd=1418/2939 0x3877c79ef0 0 
* 0 
+6 0 1521 1521
+4 0 1521 1521
+4 0 1521
+4 0 1521 0 0 0 0 0 0 0 0 1521
+6 0 1521 1521 0 1 1 0 1 1
+7 0 1521 0 0 0 0 0 0 0 0 1521
+6 0 1521
+4 0 1521
+7 0 1521 0 0 0 0 0 0 0 0 1521 6
jcnd=611/1521 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1501
+3 0 1501 0 1501
+4 0 1501 0 1501
+5 0 1501 0 0 0 0 0 0 0 0 1501 17
jcnd=29/1501 0x3877c7a090 0 
* 0 
+6 0 1472
+7 0 1472 0 0 0 0 0 0 0 0 1472 264
jcnd=1059/1472 0x3877c79c50 0 
* 0 
+6 0 413 0 0 1 0 0 1
+3 0 413
+4 0 413
+4 0 413 0 0 0 0 0 0 0 0 413
+6 0 413
+3 0 413
+4 0 413
+2 0 413
+2 0 413
+3 0 413
+3 0 413
+8 0 413
+3 0 413
+2 0 413
+2 0 413
+4 0 413 413 0 0 2 0 0 2
+4 0 413
+3 0 413 0 0 1 0 0 1 0 0 413 9
jcnd=413/413 0x3877c79e15 0 
* 0 
0x3877c79e15 0 413 0 413
+4 0 413 0 413
+4 0 413
+3 0 413
jump=413 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 6
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 1418 0 0 1 0 0 1
+7 0 1418
+3 0 1418 0 0 0 0 0 0 0 0 1418 4
jcnd=556/1418 0x3877c7a0b0 0 
* 0 
+6 0 1394 1394 0 1 0 0 1
+4 0 1394
+3 0 1394
+3 0 1394
+2 0 1394
+4 0 1394
+3 0 1394
+3 0 1394
+2 0 1394
+2 0 1394
+2 0 1394
+2 0 1394 1394 0 0 1 0 0 1
+8 0 1394
+5 0 1394
+5 0 1394
+2 0 1394 0 0 0 0 0 0 0 0 1394
-2 0 691
+2 0 691 0 0 0 0 0 0 0 0 691 1
jcnd=1/691 +14 0 
* 0 
+2 0 2084
+2 0 2084 0 0 0 0 0 0 0 0 2084 31
jcnd=1223/2084 +64 0 
* 0 
+2 0 861
+8 0 861
+3 0 861
+3 0 861 0 0 0 0 0 0 0 0 861 2
jcnd=1/861 0x3877c79fc0 0 
* 0 
-6 0 1010
+3 0 1010
+3 0 1010 0 0 0 0 0 0 0 0 1010 11
jcnd=585/1010 0x3877c79fc0 0 
* 0 
+2 0 1285
+2 0 1285 1285
+8 0 1285
+2 0 1285 0 0 0 0 0 0 0 0 1285 26
jcnd=1009/1285 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
jcnd=1/276 +14 0 
* 0 
+2 0 275
+2 0 275
+4 0 275
+2 0 275
+2 0 275 0 0 0 0 0 0 0 0 275 6
jcnd=213/275 -8 0 
* 0 
-8 0 10880
+4 0 10880
+2 0 10880
+2 0 10880 0 0 0 0 0 0 0 0 10880 832
jcnd=9590/10880 -8 0 
* 0 
-2 0 1223 0 0 1 0 0 1
+2 0 1223 0 0 0 0 0 0 0 0 1223 24
jcnd=1077/1223 -8 0 
* 0 
+2 0 1499 1499 0 0 16 0 0 16
+4 0 1499 0 0 1 0 0 1
+3 0 1499 0 0 0 0 0 0 0 0 1499 627
jcnd=808/1499 0x3877c7a1cf 0 
* 0 
+6 0 691
+2 0 691
+4 0 691
+2 0 691
+2 0 691
+2 0 691 0 691
+8 0 691
jump=691 0x3877c79f30 0 
* 0 
+37 0 586 586 0 1 0 0 1
+5 0 586 586
+4 0 586
+4 0 586 586
+5 0 586 0 0 0 0 0 0 0 0 586
jcnd=586/586 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 556 556
+4 0 556
+4 0 556
+2 0 556
+5 0 556 556 0 1 0 0 1
+4 0 556
+3 0 556 0 0 0 0 0 0 0 0 556 4
jcnd=532/556 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 564 0 0 1 0 0 1
+3 0 564 0 564
+4 0 564
jump=564 0x3877c79b99 0 
* 0 
+36 0 808 808 0 1 1 0 1 1
+4 0 808 808
+4 0 808
+3 0 808 808
+4 0 808
+4 0 808
+3 0 808
+3 0 808 808
+4 0 808 0 0 0 0 0 0 0 0 808
+6 0 808 808
+4 0 808 0 0 0 0 0 0 0 0 808
+6 0 808 808 0 1 0 0 1
+8 0 808 0 808
+4 0 808 0 808
+4 0 808 0 0 0 0 0 0 0 0 808 11
jcnd=418/808 +38 0 
* 0 
+2 0 390 390 0 0 2 0 0 2
+4 0 390
+3 0 390 0 0 0 0 0 0 0 0 390
+2 0 390 390
+5 0 390 0 0 0 0 0 0 0 0 390
+6 0 390 390
+4 0 390 0 390
+4 0 390 390
+4 0 390 0 390
+4 0 390
+4 0 390 0 0 0 0 0 0 0 0 390
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 787 787
+4 0 787 787 0 1 0 0 1
+4 0 787 0 0 0 0 0 0 0 0 787
+6 0 787
+4 0 787
+7 0 787 0 787 0 0 7 0 0 7
+4 0 787 0 787
+4 0 787 0 787
+4 0 787 0 787
+4 0 787 0 0 0 0 0 0 0 0 787 4
jcnd=322/787 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 322
+7 0 322 0 0 0 0 0 0 0 0 322
jcnd=322/322 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 796
+7 0 796 0 796
+4 0 796
+3 0 796
+3 0 796
+4 0 796
+3 0 796
+4 0 796
+3 0 796
+3 0 796
+4 0 796 0 796
+4 0 796 0 796 0 0 1 0 0 1
+4 0 796
jump=796 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 832
+4 0 832 0 0 1 0 0 1
+3 0 832
+3 0 832 0 832
cfn=(104)
calls=832 0x3877c77180 0 
* 0 3328 1664 0 0 0 0 0 0 0 832
+5 0 832
+3 0 832
jump=832 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 586 0 0 1 0 0 1
+7 0 586
+2 0 586
+4 0 586
+3 0 586
+3 0 586 0 586
+5 0 586
+3 0 586
+4 0 586
+3 0 586 0 0 1 0 0 1
+4 0 586
+4 0 586
+3 0 586
+4 0 586 0 586
+4 0 586 0 586 0 0 22 0 0 22
+4 0 586
+3 0 586
+3 0 586 0 586
cfn=(104)
calls=586 0x3877c77180 0 
* 0 2344 1172 0 0 0 0 0 0 0 586 1
+5 0 586
+3 0 586
jump=586 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1572 0 1572 1 0 0 1
+5 0 1572 0 1572
+5 0 1572
+3 0 1572 0 1572
+5 0 1572
+4 0 1572 1572 0 0 1 0 0 1
+7 0 1572 1572 0 0 1 0 0 1
+3 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572 2
+6 0 1572 1572 0 0 1 0 0 1
+7 0 1572 1572 0 1 1 0 1 1
+4 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572
+2 0 1572 1572 0 0 1 0 0 1
+3 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572
jcnd=1572/1572 +97 0 
* 0 
+18 0 1572
+3 0 1572
+3 0 1572 0 1572
cfn=(38)
calls=1572 0x3877c79a00 0 
* 0 363358 44718 52707 45 34 55 45 34 55 56070 2549
+5 0 1572
+3 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572
+2 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572
+2 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572 23
+2 0 1572 1572
+7 0 1572 0 0 0 0 0 0 0 0 1572
jcnd=1572/1572 +13 0 
* 0 
+13 0 1572 0 1572
+2 0 1572 0 0 0 0 0 0 0 0 1572 14
+6 0 1572
+3 0 1572 1572
+4 0 1572 1572
+5 0 1572 1572
+5 0 1572
+4 0 1572 1572
+1 0 1572 0 0 1 0 0 1
+5 0 1572 1572 0 0 1 0 0 1
+7 0 1572 0 0 0 0 0 0 0 0 1572
jcnd=1572/1572 +14 0 
* 0 
+14 0 1572 0 1572 1 0 0 1
+3 0 1572 0 0 0 0 0 0 0 0 1572
+6 0 1572
jump=1572 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1572 0 1572 1 0 0 1
+2 0 1572
+3 0 1572
+3 0 1572 0 1572
+2 0 1572
+3 0 1572 0 1572
+1 0 1572
+3 0 1572 0 1572
+1 0 1572
+3 0 1572
+4 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572
+6 0 1572
+4 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572 7
jcnd=10/1572 0x3877c838d1 0 
* 0 
+2 0 1562
+3 0 1562
+3 0 1562
+3 0 1562
+3 0 1562
+3 0 1562 0 0 0 0 0 0 0 0 1562
jcnd=1562/1562 +41 0 
* 0 
+41 0 1562 0 0 1 0 0 1
+3 0 1562 0 0 0 0 0 0 0 0 1562
jcnd=1562/1562 0x3877c839c0 0 
* 0 
+24 0 1562
+3 0 1562
+4 0 1562
+3 0 1562
+3 0 1562
+3 0 1562
+3 0 1562
+3 0 1562 0 0 0 0 0 0 0 0 1562 778
jcnd=790/1562 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 782
+10 0 782 782 0 0 2 0 0 2
+3 0 782
+4 0 782 0 782
+3 0 782
+4 0 782
+4 0 782 0 0 0 0 0 0 0 0 782
jcnd=782/782 -18 0 
* 0 
-18 0 2402 2402
+3 0 2402
+4 0 2402 0 2402
+3 0 2402
+4 0 2402
+4 0 2402 0 0 0 0 0 0 0 0 2402 11
jcnd=1620/2402 -18 0 
* 0 
+2 0 1572
+4 0 1572
+3 0 1572 1572
+1 0 1572 1572
+1 0 1572 1572
+2 0 1572 1572 0 1 0 0 1
+2 0 1572 1572
0x3877c839c0 0 1562 0 0 1 0 0 1
+3 0 1562
+3 0 1562
+3 0 1562
+4 0 1562 0 1562 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1562 0x3877c89b20 0 
* 0 417674 155724 152600 6 1 60 6 1 60 19960 1092 1562 194
+5 0 1562
jump=1562 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1572 1572 0 1 1 0 1 1
+7 0 1572 1572 0 0 1 0 0 1
+3 0 1572
+3 0 1572 0 0 1 0 0 1 0 0 1572
+6 0 1572
+3 0 1572 0 0 0 0 0 0 0 0 1572
+6 0 1572 1572
+4 0 1572
+4 0 1572
+2 0 1572 0 0 0 0 0 0 0 0 1572 2
+2 0 1572
+2 0 1572
+7 0 1572 0 0 0 0 0 0 0 0 1572
jcnd=1572/1572 +14 0 
* 0 
+14 0 1572
+2 0 1572
cfn=(170) _int_free
calls=1572 0x3877c78650 0 
* 0 153049 40479 23145 19 2 0 19 2 0 37041 682

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 2
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 3 0 0 3
+6 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1572 0 1572 1 0 0 1
+2 0 1572 0 1572
+2 0 1572 0 1572
+2 0 1572
+3 0 1572 0 1572
+2 0 1572 0 1572
+1 0 1572 0 1572
+1 0 1572
+3 0 1572
+4 0 1572 1572
+4 0 1572 0 1572
+4 0 1572
+3 0 1572
+4 0 1572
+3 0 1572
+3 0 1572
+3 0 1572 0 0 1 0 0 1 0 0 1572
+6 0 1572
+4 0 1572 0 0 0 0 0 0 0 0 1572
+6 0 1572
+4 0 1572 0 0 0 0 0 0 0 0 1572
+6 0 1572 1572
+7 0 1572 0 0 0 0 0 0 0 0 1572 4
jcnd=1448/1572 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1448
+2 0 1448 0 0 0 0 0 0 0 0 1448
+6 0 1448 1448 0 1 0 0 1
+4 0 1448
+3 0 1448
+2 0 1448 0 0 0 0 0 0 0 0 1448
jcnd=1448/1448 0x3877c78a40 0 
* 0 
+6 0 1448 1448
+4 0 1448
+3 0 1448 0 0 0 0 0 0 0 0 1448
+6 0 1448 1448
+5 0 1448
+4 0 1448 0 0 0 0 0 0 0 0 1448
jcnd=1448/1448 0x3877c7907c 0 
* 0 
+6 0 1448 1448
+5 0 1448
+4 0 1448 0 0 0 0 0 0 0 0 1448
+6 0 1448
+4 0 1448 0 0 1 0 0 1 0 0 1448
+6 0 1448
+4 0 1448 1448
+7 0 1448 0 0 0 0 0 0 0 0 1448
+6 0 1448 1448
+6 0 1448
+2 0 1448 0 0 0 0 0 0 0 0 1448
+6 0 1448 1448
+4 0 1448 0 0 0 0 0 0 0 0 1448 5
jcnd=1444/1448 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1448 1448 0 1 0 0 1
+4 0 1448 0 0 0 0 0 0 0 0 1448 532
jcnd=584/1448 0x3877c78bf0 0 
* 0 
+6 0 864 864 0 0 1 0 0 1
+6 0 864 0 0 1 0 0 1 0 0 864 64
jcnd=61/864 0x3877c78a78 0 
* 0 
+6 0 803 803
+5 0 803 803
+5 0 803 803
+4 0 803 0 0 0 0 0 0 0 0 803
+6 0 803 803
+4 0 803 0 0 0 0 0 0 0 0 803
+6 0 803 803
+9 0 803 0 803
+4 0 803 0 803
+4 0 803 0 0 0 0 0 0 0 0 803 4
jcnd=795/803 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 803
+3 0 803
+4 0 803 803
+4 0 803 803
+4 0 803 0 0 0 0 0 0 0 0 803
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 864
+7 0 864 0 864
+4 0 864 0 864
+4 0 864 0 0 0 0 0 0 0 0 864 69
jcnd=441/864 +18 0 
* 0 
+2 0 423 0 423
+8 0 423 0 423
+8 0 423 0 423
+4 0 423
+3 0 423 0 423 1 0 0 1
+4 0 423
+4 0 423 0 423
+4 0 423 0 423
+4 0 423
+7 0 423 0 0 0 0 0 0 0 0 423
jcnd=423/423 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 584
+7 0 584 0 0 0 0 0 0 0 0 584
jcnd=584/584 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1448 0 0 1 0 0 1
+5 0 1448 1448
+4 0 1448 1448
+7 0 1448 0 0 0 0 0 0 0 0 1448
jcnd=1448/1448 +16 0 
* 0 
+16 0 1448 0 1448
+5 0 1448 0 0 0 0 0 0 0 0 1448
+6 0 1448
+3 0 1448
jump=1448 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1448 1448 0 1 0 0 1
+4 0 1448
+2 0 1448 0 0 0 0 0 0 0 0 1448
+6 0 1448 1448
+7 0 1448 0 0 0 0 0 0 0 0 1448
jcnd=1448/1448 +15 0 
* 0 
+15 0 1448 0 1448 1 0 0 1
+4 0 1448 0 0 0 0 0 0 0 0 1448 2
+6 0 1448
+4 0 1448 1448
+1 0 1448 1448
+1 0 1448 1448
+2 0 1448 1448
+2 0 1448 1448
+2 0 1448 1448
+2 0 1448 1448
0x3877c78bf0 0 584 0 0 1 0 0 1
+3 0 584 0 584
+4 0 584
+3 0 584
+4 0 584 0 584 1 0 0 1
+4 0 584
jump=584 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1448 1448 0 1 1 0 1 1
+4 0 1448 0 0 1 0 0 1
+7 0 1448
+4 0 1448
+3 0 1448
+3 0 1448 0 0 0 0 0 0 0 0 1448
jcnd=1448/1448 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1562 0 0 1 0 0 1
+7 0 1562
+3 0 1562
+3 0 1562 1562 0 0 1 0 0 1
+4 0 1562
+4 0 1562 0 0 0 0 0 0 0 0 0 0 1562 194
jump=192 0x3877c89be8 0 
* 0 
jump=202 0x3877c89bd0 0 
* 0 
jump=192 0x3877c89bb8 0 
* 0 
jump=192 +11 0 
* 0 
jump=192 0x3877c89c48 0 
* 0 
jump=194 0x3877c89c30 0 
* 0 
jump=196 0x3877c89c18 0 
* 0 
jump=202 0x3877c89c00 0 
* 0 
+11 0 192 192
+3 0 192
+4 0 192
+4 0 192 192
+4 0 192
+4 0 192 0 192
+4 0 192
+9 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192
+4 0 192
+4 0 192
+4 0 192 0 0 0 0 0 0 0 0 192
jcnd=8/192 0x3877c89c60 0 
* 0 
-40 0 18782 18782
+4 0 18782 0 18782 0 0 3 0 0 3
+4 0 18782 18782
+4 0 18782 0 18782 0 0 15 0 0 15
+4 0 18782 18782
+4 0 18782 0 18782 0 0 19 0 0 19
+4 0 18782 18782
+4 0 18782 0 18782
+4 0 18782
+4 0 18782
+4 0 18782 0 0 0 0 0 0 0 0 18782 1088
jcnd=1526/18782 0x3877c89c60 0 
* 0 
-32 0 194 194
+4 0 194 0 194
+4 0 194 194
+4 0 194 0 194
+4 0 194 194
+4 0 194 0 194
+4 0 194
+4 0 194
+4 0 194 0 0 0 0 0 0 0 0 194
jcnd=10/194 0x3877c89c60 0 
* 0 
-24 0 196 196
+4 0 196 0 196
+4 0 196 196
+4 0 196 0 196
+4 0 196
+4 0 196
+4 0 196 0 0 0 0 0 0 0 0 196
jcnd=8/196 0x3877c89c60 0 
* 0 
-16 0 202 202 0 1 0 0 1
+4 0 202 0 202
+4 0 202 0 0 1 0 0 1
+4 0 202
+4 0 202 0 0 0 0 0 0 0 0 202 4
jcnd=10/202 0x3877c89c60 0 
* 0 
+6 0 18004
+4 0 18004 18004
+3 0 18004 0 18004 0 0 1 0 0 1
+3 0 18004 18004
+4 0 18004 0 18004 0 0 3 0 0 3
+4 0 18004 18004
+4 0 18004 0 18004 0 0 18 0 0 18
+4 0 18004 18004
+4 0 18004 0 18004
+4 0 18004
jump=18004 -80 0 
* 0 
-30 0 192 192
+3 0 192 0 192
+3 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192 0 0 1 0 0 1
+4 0 192 192
+4 0 192 0 192
+4 0 192
jump=192 -80 0 
* 0 
-24 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202 202
+4 0 202 0 202
+4 0 202
jump=202 -80 0 
* 0 
-16 0 192 192
+4 0 192 0 192
+4 0 192 192
+4 0 192 0 192
+4 0 192
jump=192 -80 0 
* 0 
+8 0 192 192
+3 0 192
+4 0 192 0 0 1 0 0 1
+4 0 192
+4 0 192
jump=192 -39 0 
* 0 
+9 0 202
+3 0 202 0 0 0 0 0 0 0 0 202
+6 0 202 202
+3 0 202
+4 0 202
jump=202 -72 0 
* 0 
+8 0 192
+4 0 192 192
+3 0 192 0 0 0 0 0 0 0 0 192
+2 0 192
+4 0 192
jump=192 -99 0 
* 0 
+11 0 202 202 0 1 0 0 1
+3 0 202
+4 0 202
+4 0 202
+4 0 202
jump=202 0x3877c89b78 0 
* 0 
+9 0 196 196
+3 0 196
+4 0 196
+4 0 196
+4 0 196
jump=196 0x3877c89b70 0 
* 0 
+9 0 194 194
+3 0 194
+4 0 194
+4 0 194
+4 0 194
jump=194 0x3877c89b68 0 
* 0 
+9 0 192 192
+3 0 192
+4 0 192
+4 0 192
+4 0 192
jump=192 0x3877c89b60 0 
* 0 
+9 0 1562 0 1562 1 0 0 1
+3 0 1562 1562

totals: 13921192 5739564 3284855 241 107 147 241 107 147 388255 6351 9422 194
