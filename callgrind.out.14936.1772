version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 1772


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2226738668 - 2227257068
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 822 0 0 1 0 0 1
+3 0 822 0 0 0 0 0 0 0 0 822
+2 0 822
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=822 0x3877c7b8b0 0 
* 0 97625 25567 13755 19 3 0 19 3 0 23969 390
* 0 822 822 0 1 1 0 1 1 0 0 0 822

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 822 0 822 1 0 0 1
+1 0 822
+5 0 822
+3 0 822 0 822
+1 0 822
+4 0 822 0 0 1 0 0 1
+3 0 822
+4 0 822
+3 0 822 0 822 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=822 0x3877c7aa50 0 
* 0 252838 35514 36496 45 39 47 45 39 47 44078 1892
* 0 822 822 0 1 1 0 1 1 0 0 0 822
+5 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 +96 0 
* 0 
+96 0 822 0 0 1 0 0 1
+4 0 822 822
+1 0 822 822
+1 0 822 822

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 202 0 202 1 0 0 1
+1 * 202
+3 * 202
+4 * 202 0 202
+4 * 202 0 202
+4 +1 202 202
+4 * 202
+3 * 202 0 202
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=202 0x402d74 645 
* * 2626 1212 404
+5 * 202
+3 * 202 0 202
+3 +1 202 202
+6 * 202 0 202
+3 * 202 202
+6 * 202 0 202
+3 +1 202 202
+6 * 202 0 202 1 0 0 1
+3 * 202 202
+6 * 202 0 202
+3 +2 202 0 202
+7 * 202
jump=202 +86 * 
* * 
+2 +1 20705 20705
+3 * 20705
+3 * 20705 20705
+4 * 20705
+3 * 20705
+3 * 20705 0 20705
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=20705 0x402d9a 770 
* * 227755 103525 62115
+5 * 20705 20705
+4 * 20705 20705
+5 * 20705
+4 * 20705 0 20705
+5 +1 20705 20705
+3 * 20705
+3 * 20705 20705
+4 * 20705
+3 * 20705
+3 * 20705 0 20705
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=20705 0x402dba 770 
* * 227755 103525 62115 1 0 0 1
+5 * 20705 20705
+2 * 20705
+4 * 20705 20705
+5 * 20705
+4 * 20705 0 20705
+5 -2 20705 0 20705
+4 * 20705 20705
+3 * 20705
+3 * 20705 20705
+3 * 20705 0 0 0 0 0 0 0 0 20705 205
jcnd=20503/20705 -93 +1 
* * 
-9 * 202 202 0 1 0 0 1
+3 * 202
+3 * 202 202
+3 * 202 0 0 0 0 0 0 0 0 202
jcnd=202/202 -93 +1 
* * 
+2 +4 202 202
+3 * 202
+3 * 202
+4 * 202 202 0 1 0 0 1
+5 * 202
+4 * 202
+3 * 202 0 202
+5 +1 202 202
+3 * 202
+3 * 202
+4 * 202 202
+5 * 202
+4 * 202
+3 * 202 0 202
+5 +1 202 0 202
+7 * 202
jump=202 0x4016ee * 
* * 
+2 +1 20705 20705
+3 * 20705
+3 * 20705 20705
+4 * 20705
+3 * 20705 0 0 1 0 0 1
+3 * 20705 0 20705
cfi=(2)
cfn=(146)
calls=20705 0x402dba 770 
* * 227755 103525 62115
+5 * 20705 20705
+2 * 20705
+4 * 20705 20705
+5 * 20705 0 20705
+5 +1 20705 20705
+3 * 20705
+3 * 20705 20705
+4 * 20705
+3 * 20705
+3 * 20705 0 20705
cfi=(2)
cfn=(144)
calls=20705 0x402d9a 770 
* * 227755 103525 62115
+5 * 20705 20705
+4 * 20705 20705
+5 * 20705 0 20705
+5 +1 20705 20705
+5 * 20705 20705
+5 * 20705 20705
+5 * 20705
+4 * 20705 0 20705
+5 +1 20705 20705
+5 * 20705 20705
+5 * 20705 20705
+5 * 20705
+4 * 20705 0 20705
+5 -4 20705 0 20705
+4 * 20705 20705
+3 * 20705
+3 * 20705 20705
+3 * 20705 0 0 0 0 0 0 0 0 20705 203
jcnd=20503/20705 0x401672 +1 
* * 
-9 * 202 202 0 1 0 0 1
+3 * 202
+3 * 202 202
+3 * 202 0 0 0 0 0 0 0 0 202
jcnd=202/202 0x401672 +1 
* * 
+6 +6 202 202 0 1 0 0 1
+5 * 202 202
+5 * 202 0 202
+5 +2 202 202
+3 +1 202 0 202
+3 * 202 202
+5 * 202 202
+1 * 202 202

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 202
+7 * 202
+7 * 202
+3 * 202
+3 * 202 0 202
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=202 0x4030b2 310 
* * 203804 56562 53177 63 24 19 63 24 19 14195 738 806 100
+5 * 202
+7 * 202
+7 * 202
+3 * 202
+3 * 202 0 202
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=202 0x402ff4 310 
* * 205568 57006 52492 37 9 29 37 9 29 14802 705 806
+5 * 202 0 0 1 0 0 1
+7 * 202
+7 * 202
+3 * 202
+3 * 202 0 202
cfn=(142)
calls=202 0x401585 -52 
* * 2166450 957480 500354 8 0 0 8 0 0 41814 408
+5 * 202 0 202
+8 * 202 202
+6 * 202 0 202
+6 * 202
+7 * 202
+3 * 202 0 202
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=202 0x402df4 414 
* * 53556 16901 12245 31 5 0 31 5 0 6401 99 404
+5 * 202
+7 * 202
+3 * 202 0 202 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=202 0x402e74 414 
* * 52723 16716 11911 7 0 0 7 0 0 6232 93 404
+5 +2 202
+7 * 202
+7 * 202
+3 * 202
+3 * 202 0 202
cfi=(2)
cfn=(4)
calls=202 0x4030b2 310 
* * 203456 56539 53081 4 1 1 4 1 1 14165 544 806
+5 * 202
+7 * 202
+7 * 202
+3 * 202
+3 * 202 0 202
cfi=(2)
cfn=(80)
calls=202 0x402ff4 310 
* * 204869 56967 52358 0 2 2 0 2 2 14701 605 806
+5 * 202 202
+6 * 202 0 0 1 0 0 1
+7 * 202
+7 * 202 0 202
+6 * 202 202
+8 * 202
+3 * 202
+3 * 202 0 202
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=202 0x401719 -33 
* * 1005758 418544 230785 4 0 0 4 0 0 20907 205
+5 * 202 0 202
+8 * 202 202
+6 * 202 0 202
+6 * 202
+7 * 202 0 0 1 0 0 1
+3 * 202 0 202
cfi=(2)
cfn=(148)
calls=202 0x402df4 414 
* * 53556 16901 12245 0 0 0 0 0 0 6401 95 404
+5 * 202
+7 * 202
+3 * 202 0 202
cfi=(2)
cfn=(178)
calls=202 0x402e74 414 
* * 52723 16716 11911 0 0 0 0 0 0 6232 91 404
+5 +2 202 202
+7 * 202
+3 * 202 0 202
cfi=(2)
cfn=(2)
calls=202 0x402d74 645 
* * 2626 1212 404
+5 * 202 202
+6 * 202
+3 * 202
+3 * 202
+3 * 202 202
+7 * 202
+3 * 202 0 0 1 0 0 1
+3 * 202 0 202
cfi=(2)
cfn=(144)
calls=202 0x402d9a 770 
* * 2222 1010 606
+5 * 202
+3 * 202
+7 * 202
+3 * 202
+3 * 202 0 202
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=202 0x402eda 901 
* * 23848 8562 6711 39 18 11 39 18 11 1179 71 41
+5 +1 202 202
+7 * 202
+3 * 202 0 202
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=202 0x402f54 645 
* * 2626 1212 404 0 1 0 0 1
+5 * 202 202
+6 * 202
+3 * 202
+3 * 202
+3 * 202 202
+7 * 202 0 0 1 0 0 1
+3 * 202
+3 * 202 0 202
cfi=(2)
cfn=(146)
calls=202 0x402dba 770 
* * 2222 1010 606
+5 * 202
+3 * 202
+7 * 202
+3 * 202
+3 * 202 0 202
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=202 0x402f7a 901 
* * 22914 8323 6502 28 19 17 28 19 17 991 64 41
+5 +1 202 202
+7 * 202
+3 * 202 0 202
cfi=(2)
cfn=(10)
calls=202 0x402f54 645 
* * 2626 1212 404
+5 * 202 202
+6 * 202
+3 * 202
+3 * 202
+3 * 202 202 0 1 0 0 1
+7 * 202
+3 * 202
+3 * 202 0 202
cfi=(2)
cfn=(146)
calls=202 0x402dba 770 
* * 2222 1010 606
+5 * 202 202
+2 * 202
+4 * 202 202
+8 * 202 202
+8 * 202 0 202
+8 +1 202 202
+7 * 202
+3 * 202 0 202
cfi=(2)
cfn=(2)
calls=202 0x402d74 645 
* * 2626 1212 404
+5 * 202 202 0 1 0 0 1
+6 * 202
+3 * 202
+3 * 202
+3 * 202 202
+7 * 202
+3 * 202
+3 * 202 0 202
cfi=(2)
cfn=(144)
calls=202 0x402d9a 770 
* * 2222 1010 606
+5 * 202 202
+4 * 202 202
+8 * 202
+4 * 202 202
+8 * 202
+3 * 202 0 202
+8 +2 202 0 202
+7 -12 202 202
+8 * 202 202
+7 * 202 0 0 0 0 0 0 0 0 202 3
jcnd=1/202 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 202
+7 * 202
+3 * 202 0 202
cfi=(2)
cfn=(2)
calls=202 0x402d74 645 
* * 2626 1212 404 2 0 1 2 0 1
+5 * 202
+3 * 202 202
+7 * 202
+3 * 202 0 202
cfi=(2)
cfn=(2)
calls=202 0x402d74 645 
* * 2626 1212 404 0 1 0 0 1
+5 * 202
+3 * 202 0 0 0 0 0 0 0 0 202
+2 * 202 0 0 1 0 0 1
+5 * 202
jump=202 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 202
+2 * 202 0 0 0 0 0 0 0 0 202
jcnd=202/202 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 202 0 202
+1 * 202
+3 * 202
+4 * 202 0 202
+4 * 202 0 202
+4 * 202 0 202
+5 +1 202 202
+4 * 202
+3 * 202 0 202
cfi=(2)
cfn=(2)
calls=202 0x402d74 645 
* * 2626 1212 404
+5 * 202
+3 * 202 0 202
+3 +1 202 202 0 1 0 0 1
+6 * 202 0 202
+3 * 202 202
+6 * 202 0 202
+3 +2 202 0 202
+7 * 202
jump=202 +86 * 
* * 
+2 +1 20705 20705
+3 * 20705
+3 * 20705 20705
+4 * 20705
+3 * 20705
+3 * 20705 0 20705
cfi=(2)
cfn=(144)
calls=20705 0x402d9a 770 
* * 227755 103525 62115
+5 * 20705 20705
+4 * 20705 20705
+5 * 20705
+4 * 20705 0 20705
+5 +1 20705 20705
+3 * 20705
+3 * 20705 20705
+4 * 20705
+3 * 20705
+3 * 20705 0 20705
cfi=(2)
cfn=(146)
calls=20705 0x402dba 770 
* * 227755 103525 62115
+5 * 20705 20705
+2 * 20705
+4 * 20705 20705
+5 * 20705
+4 * 20705 0 20705
+5 -2 20705 0 20705
+4 * 20705 20705
+3 * 20705
+3 * 20705 20705
+3 * 20705 0 0 0 0 0 0 0 0 20705 205
jcnd=20503/20705 -93 +1 
* * 
-9 * 202 202 0 1 0 0 1
+3 * 202
+3 * 202 202
+3 * 202 0 0 0 0 0 0 0 0 202
jcnd=202/202 -93 +1 
* * 
+2 +4 202 202
+3 * 202
+3 * 202 0 0 1 0 0 1
+4 * 202 202
+5 * 202
+4 * 202
+3 * 202 0 202
+5 +1 202 202
+3 * 202
+3 * 202
+4 * 202 202
+5 * 202
+4 * 202
+3 * 202 0 202
+5 +1 202 202
+5 * 202 202
+5 * 202 202
+5 * 202 0 0 1 0 0 1
+4 * 202
+3 * 202 0 202
+5 +2 202 202
+3 +1 202 0 202
+3 * 202 202
+5 * 202 202
+1 * 202 202

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 404 0 404 1 0 0 1
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=404 0x404a28 -35 
* * 2424 808 1212 1 0 1 1 0 1
+5 * 404 404
+1 * 404 404

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 404
+4 * 404
+3 * 404 0 404
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=404 0x4044cc -35 
* * 2020 808 808
+5 * 404 404
+1 * 404 404

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 404 0 404 1 0 0 1
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404 1 0 0 1
+4 +1 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=404 0x4049d4 -35 
* * 2424 808 1212 1 0 0 1
+5 * 404 404
+1 * 404 404

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 404 0 404 1 0 0 1
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 404
+4 * 404
+3 * 404 0 404
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=404 0x404520 -35 
* * 2020 808 808
+5 * 404 404
+1 * 404 404

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 404 0 404 1 0 0 1
+1 * 404
+3 * 404 0 404
+4 * 404 404
+4 * 404 404
+1 * 404 404

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 202 0 202
+1 * 202
+3 * 202
+4 * 202 0 202
+4 * 202 0 202
+4 * 202 0 202
+4 +1 202 202
+4 * 202 202
+4 * 202 202
+4 * 202
+3 * 202
+3 * 202 0 202
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=202 0x40406a -87 
* * 4848 1616 1818 0 14 7 0 14 7 202
+5 * 202 202
+1 * 202 202

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=14 +8 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=14 +7 113 
* * 84 28 28
+5 * 14 14
+1 * 14 14

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 404 0 404
+1 * 404
+3 * 404 0 404
+4 * 404 404
+4 * 404 404
+1 * 404 404

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 202 0 202
+1 * 202
+3 * 202
+4 * 202 0 202
+4 * 202 0 202
+4 * 202 0 202
+4 +1 202 202
+4 * 202 202
+4 * 202 202
+4 * 202
+3 * 202
+3 * 202 0 202
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=202 0x403df2 -87 
* * 4848 1616 1818 0 13 4 0 13 4 202
+5 * 202 202
+1 * 202 202

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+4 +1 808 808
+4 * 808 808
+1 * 808 808

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808
+4 * 808
+3 * 808 0 808 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=808 0x40500c 790 
* * 4848 2424 1616 1 0 0 1
+5 * 808 808
+3 * 808 808
+1 * 808 808

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 474 0 474
+1 * 474
+3 * 474 0 474
+4 +1 474 474
+4 * 474 474
+1 * 474 474

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+4 +1 808 808 0 1 0 0 1
+4 * 808 808
+1 * 808 808

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 474 0 474
+1 * 474
+3 * 474 0 474 0 0 1 0 0 1
+4 +1 474 474
+4 * 474 474
+1 * 474 474

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808
+4 * 808
+3 * 808 0 808
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=808 0x404ffe 790 
* * 4848 2424 1616 1 0 0 1
+5 * 808 808
+3 * 808 808
+1 * 808 808

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 404 0 404
+1 * 404
+3 * 404 0 404
+4 * 404 0 404
+4 * 404 404
+4 * 404 404
+1 * 404 404

fl=(5)
fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 411 0 411 1 0 0 1
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 * 411 0 411
+4 +2 411 411
+4 * 411
+3 * 411 0 411
cfn=(102)
calls=411 0x4048de +12 
* * 2466 822 822 1 0 0 1
+5 * 411 411
+4 * 411 0 0 1 0 0 1
+3 * 411
+2 * 411 0 0 0 0 0 0 0 0 411
jcnd=411/411 +7 +3 
* * 
+7 +3 411 411
+4 * 411
+4 * 411
+3 * 411 0 411
cob=(5)
cfi=(8)
cfn=(32)
calls=411 0x387e4bd0b0 0 
* * 135067 19965 18883 23 15 29 23 15 29 23120 996 411
* * 411 411 0 0 0 0 0 0 0 0 0 411
+5 +1 411 411
+1 * 411 411

fn=(18)
0x404a28 81 404 0 404 1 0 0 1
+1 * 404
+3 * 404 0 404 0 0 1 0 0 1
+4 * 404 0 404
+4 * 404 404
+1 * 404 404

fn=(92)
0x4049d4 81 404 0 404 1 0 0 1
+1 * 404
+3 * 404 0 404
+4 * 404 0 404
+4 * 404 404
+1 * 404 404

fn=(196)
0x404520 86 404 0 404
+1 * 404
+3 * 404 0 404
+4 * 404 404
+1 * 404 404

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 411 0 411 1 0 0 1
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 * 411 0 411 1 0 0 1
+4 +2 411 411
+4 * 411
+3 * 411 0 411
cfn=(28)
calls=411 0x404992 +12 
* * 2466 822 822 1 0 0 1
+5 * 411 411
+4 * 411
+3 * 411
+2 * 411 0 0 0 0 0 0 0 0 411
jcnd=411/411 +7 +3 
* * 
+7 +3 411 411
+4 * 411
+4 * 411
+3 * 411 0 411
cob=(5)
cfi=(8)
cfn=(32)
calls=411 0x387e4bd0b0 0 
* * 130923 18837 20079 26 25 19 26 25 19 21780 896 411
* * 411 411 0 1 1 0 1 1 0 0 0 411
+5 +1 411 411
+1 * 411 411

fn=(102)
0x4048de 113 425 0 425 1 0 0 1
+1 * 425
+3 * 425 0 425
+4 +1 425
+10 * 425 425
+1 * 425 425

fn=(266)
0x40406a 129 202 0 202
+1 * 202
+3 * 202
+4 * 202 0 202
+4 * 202 0 202
+4 * 202 0 202
+4 +1 202 202
+4 * 202
+3 * 202
+5 * 202 0 202
cfi=(16)
cfn=(226)
calls=202 0x402d61 -20 
* * 1414 606 606
+5 * 202
+3 * 202 0 0 0 0 0 0 0 0 202
+2 * 202 202
+4 * 202 202 0 0 14 0 0 14
+2 * 202 0 202 0 0 7 0 0 7
+2 * 202 202
+1 * 202 202

fn=(28)
0x404992 113 425 0 425 1 0 0 1
+1 * 425
+3 * 425 0 425
+4 +1 425
+10 * 425 425
+1 * 425 425

fn=(176)
0x4044cc 86 404 0 404
+1 * 404
+3 * 404 0 404
+4 * 404 404
+1 * 404 404

fn=(224)
0x403df2 129 202 0 202
+1 * 202
+3 * 202
+4 * 202 0 202
+4 * 202 0 202
+4 * 202 0 202
+4 +1 202 202
+4 * 202
+3 * 202
+5 * 202 0 202
cfi=(16)
cfn=(226)
calls=202 0x402d61 -20 
* * 1414 606 606
+5 * 202
+3 * 202 0 0 0 0 0 0 0 0 202
+2 * 202 202
+4 * 202 202 0 0 13 0 0 13
+2 * 202 0 202 0 0 4 0 0 4
+2 * 202 202
+1 * 202 202

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 411 0 411
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 * 411 0 411
+4 +1 411 411
+4 * 411
+3 * 411 0 411
cob=(5)
cfi=(8)
cfn=(164)
calls=411 0x387e4bb2f0 0 
* * 51273 13371 7210 21 4 0 21 4 0 12560 198 411
* * 411 411 0 1 1 0 1 1 0 0 0 411
+5 * 411 411
+1 * 411 411

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 411 0 411
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 * 411 0 411
+4 +1 411 411
+4 * 411
+3 * 411 0 411
cob=(5)
cfi=(8)
cfn=(164)
calls=411 0x387e4bb2f0 0 
* * 49640 13018 6545 0 0 0 0 0 0 12231 192 411
* * 411 411 0 0 0 0 0 0 0 0 0 411
+5 * 411 411
+1 * 411 411

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=404 0x404484 107 
* * 168668 54560 52140 25 3 2 25 3 2 6056 432 804 100
+5 * 404 404
+1 * 404 404

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 0 0 1 0 0 1
+3 * 14
+3 * 14 0 14
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=14 0x4048f2 107 
* * 3420 1119 1071 4 0 3 4 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404 0 1 0 0 1
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=404 0x404a36 450 
* * 157356 50520 48100 24 3 2 24 3 2 6056 432 804 100
+5 * 404 404
+1 * 404 404

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=404 0x40439c 107 
* * 168668 54560 52140 7 1 6 7 1 6 6056 369 804
+5 * 404 404
+1 * 404 404

fn=(116)
0x40439c 107 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +10 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=404 0x4047d7 -26 
* * 163012 52540 50120 7 1 6 7 1 6 6056 369 804
+5 +1 404 404
+1 * 404 404

fn=(118)
0x4047d7 91 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=404 0x4049e2 450 
* * 157356 50520 48100 7 1 6 7 1 6 6056 369 804
+5 * 404 404
+1 * 404 404

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=14 0x404772 -25 
* * 3630 1189 1155 2 0 4 2 0 4 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +7 14 14
+4 * 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(230)
calls=14 0x40465c -25 
* * 3630 1189 1155 5 0 3 5 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(232)
0x4048f2 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=14 0x404af4 -26 
* * 3224 1049 1001 4 0 3 4 0 3 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=14 0x404b99 -26 
* * 3224 1049 1001 2 0 4 2 0 4 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(274)
0x404b99 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=14 0x404cf0 450 
* * 3028 979 931 1 0 4 1 0 4 76 3 13
+5 * 14 14
+1 * 14 14

fn=(50)
0x404484 107 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +10 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(52)
calls=404 0x404829 -26 
* * 163012 52540 50120 25 3 2 25 3 2 6056 432 804 100
+5 +1 404 404
+1 * 404 404

fn=(270)
0x404772 256 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(272)
calls=14 0x4049a6 107 
* * 3420 1119 1071 2 0 4 2 0 4 76 3 13
+5 * 14 14
+1 * 14 14

fn=(234)
0x404af4 91 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14 1 0 0 1
+4 * 14 0 14
+4 +2 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=14 0x404caa 450 
* * 3028 979 931 2 0 3 2 0 3 76 4 13
+5 * 14 14
+1 * 14 14

fl=(2)
fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 411 0 411 1 0 0 1
+1 * 411 0 0 1 0 0 1
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 0 411 411
+5 0 411 0 0 0 0 0 0 0 0 411
+2 0 411 411
+4 0 411 411
+4 0 411
+5 0 411
+3 0 411
+3 0 411 0 411
fi=(6) ???
cfi=(5)
cfn=(100)
calls=411 0x40461a 99 
* 0 145753 23253 22171 26 15 29 26 15 29 23531 996 822
+5 0 411
fi=(6)
jump=411 +7 0 
* 0 
+7 0 411 411
+1 0 411 411

fn=(144)
0x402d9a 770 62519 0 62519
+1 * 62519
+3 * 62519 0 62519
+4 * 62519 0 62519
+4 +1 62519 62519
+4 * 62519 62519
+3 * 62519 62519
+4 * 62519
+4 * 62519
+3 * 62519 62519
+1 * 62519 62519

fn=(146)
0x402dba 770 62519 0 62519
+1 * 62519
+3 * 62519 0 62519 1 0 0 1
+4 * 62519 0 62519
+4 +1 62519 62519
+4 * 62519 62519
+3 * 62519 62519
+4 * 62519
+4 * 62519
+3 * 62519 62519
+1 * 62519 62519

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 404
+4 * 404
+3 * 404 0 404
cfi=(4)
cfn=(194)
calls=404 0x403d7e +42 
* * 5656 2020 2020 1 0 0 1
+5 * 404 404
+1 * 404 404

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=14 0x403b08 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(256)
calls=14 0x404978 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 404 0 404 1 0 0 1
+1 * 404
+3 * 404 0 404
+1 * 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404
+4 * 404
+3 * 404 404
+4 * 404 404
+3 * 404
+3 * 404
+3 * 404
+4 * 404
+3 * 404 404
+4 * 404 404
+3 -1 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=404 0x403d98 +11 
* * 60198 16868 10490 1 0 0 1 0 0 12464 184 808
+5 +1 404 404
+4 * 404
+3 * 404 0 404
cfn=(192)
calls=404 0x403296 -82 
* * 9292 3232 3232 1 0 0 1
+5 * 404
jump=404 +28 * 
* * 
+28 * 404
+4 * 404 404
+1 * 404 404
+1 * 404 404

fn=(2)
0x402d74 645 1644 0 1644 1 0 0 1
+1 * 1644
+3 * 1644 0 1644 0 0 1 0 0 1
+4 +1 1644 1644
+4 * 1644 1644 0 1 1 0 1 1
+4 * 1644
+3 * 1644 1644
+4 * 1644 1644
+3 * 1644
+3 * 1644
+3 * 1644
+4 * 1644 1644
+1 * 1644 1644

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=404 0x404236 -14 
* * 146076 23797 24626 23 21 13 23 21 13 22304 850 808
+5 * 404 404
+4 * 404 0 404
+3 +1 404 404
+4 * 404 404 0 1 0 0 1
+3 * 404 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+3 * 404 404
+4 * 404
+4 * 404
+3 * 404 404
+4 * 404 0 404
+4 +1 404 404
+1 * 404 404

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404 0 1 0 0 1
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(96)
calls=404 0x403fbe -14 
* * 149253 24669 23218 15 10 25 15 10 25 23447 941 808
+5 * 404 404
+4 * 404 0 404
+3 +1 404 404
+4 * 404 404
+3 * 404 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+3 * 404 404
+4 * 404
+4 * 404
+3 * 404 404
+4 * 404 0 404
+4 +1 404 404
+1 * 404 404

fn=(244)
0x402f7a 901 202 0 202
+1 * 202
+3 * 202 0 0 1 0 0 1
+4 * 202 0 202
+4 * 202 0 202
+4 +2 202 202
+4 * 202 202
+4 * 202 202
+4 * 202 202
+4 * 202
+3 * 202 0 0 0 0 0 0 0 0 202
jcnd=7/202 +51 +10 
* * 
+2 +3 195 195
+4 * 195 195
+4 * 195 195
+4 -1 195 195
+4 * 195
+3 * 195
+3 * 195 0 195
cfi=(3)
cfn=(264)
calls=195 0x4036b1 215 
* * 7410 2535 2730 0 13 4 0 13 4 195
+5 +2 195 195
+4 * 195 195
+4 * 195
+4 * 195 195
+4 * 195 0 195
+4 * 195
jump=195 +36 +8 
* * 
+2 +6 7 7
+4 * 7
+3 * 7 0 7
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=7 0x4039c4 556 
* * 161 63 49
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=7 0x4036de 318 
* * 10119 3127 2713 27 6 13 27 6 13 594 64 41
+5 +2 202 202
+1 * 202 202

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 829 0 829 1 0 0 1
+1 * 829
+3 * 829 0 829 1 0 0 1
+4 +1 829 829
+4 * 829 829
+1 * 829 829

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+3 * 404 0 404
+4 * 404
+4 * 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=404 0x404380 726 
* * 4040 2020 1616
+5 * 404 404
+4 * 404 404
+1 * 404 404

fn=(148)
0x402df4 414 404 0 404
+1 * 404
+3 * 404 0 404
+1 * 404
+4 * 404 0 404 1 0 0 1
+4 +2 404 404
+4 * 404
+3 * 404 0 404
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=404 0x40325e 113 
* * 2424 1212 808
+5 * 404
+3 * 404 404
+4 * 404 404
+4 * 404 404
+4 * 404 404
+3 -1 404
+3 * 404
+3 * 404 0 404
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=404 0x40326c 148 
* * 12524 4040 4848 4 0 0 4
+5 +1 404 404
+4 * 404
+3 * 404 0 404
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=404 0x4031ec 159 
* * 82468 24914 16410 25 5 0 25 5 0 12802 194 808
+5 * 404
jump=404 +28 * 
* * 
+28 * 404 0 0 1 0 0 1
+4 * 404 404
+1 * 404 404
+1 * 404 404

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 411 0 411 1 0 0 1
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 * 411 0 411
+4 +2 411 411
+5 * 411 0 0 0 0 0 0 0 0 411
+2 +1 411 411
+4 * 411 411
+4 * 411 411
+4 * 411
+3 * 411
+3 * 411 0 411
cfi=(5)
cfn=(160)
calls=411 0x4044d6 -65 
* * 56205 15015 9265 22 5 0 22 5 0 12560 198 822
+5 +1 411 411
+1 * 411 411

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 404 0 404
+1 * 404
+3 * 404 0 404
+1 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=404 0x4043ca -45 
* * 14544 5252 5656 4 0 4 4 0 4
+5 +1 404 404 0 1 0 0 1
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(20)
calls=404 0x404412 +43 
* * 156176 28645 27454 24 21 13 24 21 13 22304 850 808
+5 * 404
jump=404 +28 * 
* * 
+28 * 404
+4 * 404 404
+1 * 404 404
+1 * 404 404

fn=(14)
0x4043ca 90 404 0 404 1 0 0 1
+1 * 404
+3 * 404
+4 * 404 0 404 0 0 1 0 0 1
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(4)
cfn=(16)
calls=404 0x404804 +24 
* * 7272 2424 2828 2 0 1 2 0 1
+5 * 404 404
+4 * 404 0 404 0 0 2 0 0 2
+7 * 404 404
+4 * 404 0 404 1 0 0 1
+8 * 404 404
+4 * 404 0 404
+8 +1 404 404
+1 * 404 404

fn=(80)
0x402ff4 310 404 0 404 1 0 0 1
+1 * 404
+3 * 404 0 404
+2 * 404 0 404
+2 * 404 0 404
+1 * 404 0 0 1 0 0 1
+4 * 404 0 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404
+3 * 404 0 404
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=404 0x4039fc 117 
* * 2424 1212 808 2 0 0 2
+5 * 404
+3 * 404 0 404
cfi=(3)
cfn=(84)
calls=404 0x4039ed -88 
* * 2424 1212 808
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(2)
calls=404 0x402d74 645 
* * 5252 2424 808
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404
+3 * 404
+3 * 404 0 404 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=404 0x403a0a 134 
* * 182785 37597 34530 22 10 25 22 10 25 23447 941 808
+5 +4 404 404
+4 * 404
+3 * 404 0 404
cfn=(106)
calls=404 0x40325e 113 
* * 2424 1212 808 1 0 0 1
+5 * 404
+3 * 404 404
+4 * 404 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=404 0x403a98 565 
* * 10100 4040 3232 2 0 0 2
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(112)
calls=404 0x403a68 547 
* * 10100 4040 3232
+5 * 404
+3 * 404
+3 * 404
+3 * 404
+3 * 404 0 404
cfi=(11)
cfn=(114)
calls=404 0x403ac9 -60 
* * 174728 56580 54564 7 1 6 7 1 6 6056 369 804
+5 -3 404 404
+4 * 404 0 404
+4 * 404
jump=404 +28 +4 
* * 
+28 +4 404
+4 * 404 404
+1 * 404 404
+2 * 404 404
+2 * 404 404
+1 * 404 404

fn=(188)
0x403d98 171 411 0 411 1 0 0 1
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 * 411 0 411
+4 +2 411 411
+5 * 411 0 0 0 0 0 0 0 0 411 7
+2 +1 411 411
+4 * 411 411
+4 * 411 411
+4 * 411
+3 * 411
+3 * 411 0 411
cfi=(5)
cfn=(190)
calls=411 0x40452a -65 
* * 54572 14662 8600 0 0 0 0 0 0 12231 192 822
+5 +1 411 411
+1 * 411 411

fn=(22)
0x404236 167 411 0 411 1 0 0 1
+1 * 411
+3 * 411
+4 * 411 0 411 1 0 0 1
+4 * 411 0 411
+4 0 411 411
+5 0 411 0 0 0 0 0 0 0 0 411
+2 0 411 411
+4 0 411 411
+4 0 411
+5 0 411
+3 0 411
+3 0 411 0 411
fi=(6)
cfi=(5)
cfn=(26)
calls=411 0x404730 99 
* 0 141609 22125 23367 30 26 19 30 26 19 22191 896 822
+5 0 411
fi=(6)
jump=411 +7 0 
* 0 
+7 0 411 411
+1 0 411 411

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 404 0 404 1 0 0 1
+1 * 404
+3 * 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+4 * 404 0 404
+4 * 404
+4 * 404 0 0 1 0 0 1
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=404 0x404468 726 
* * 4040 2020 1616 1 0 0 1
+5 * 404 404
+4 * 404 404
+1 * 404 404

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+3 * 404 0 404
+4 * 404
+4 * 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(10)
cfn=(44)
calls=404 0x404468 726 
* * 4040 2020 1616
+5 * 404 404
+4 * 404 404
+1 * 404 404

fn=(86)
0x403a0a 134 404 0 404
+1 * 404
+3 * 404 0 404
+1 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=404 0x4042e2 -45 
* * 14544 5252 5656 5 0 0 5
+5 +1 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404 1 0 0 1
cfn=(94)
calls=404 0x40432a +43 
* * 159353 29517 26046 16 10 25 16 10 25 23447 941 808
+5 * 404
jump=404 +28 * 
* * 
+28 * 404
+4 * 404 404
+1 * 404 404
+1 * 404 404

fn=(88)
0x4042e2 90 404 0 404 1 0 0 1
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404 1 0 0 1
cfi=(4)
cfn=(90)
calls=404 0x4047b2 +24 
* * 7272 2424 2828 3 0 0 3
+5 * 404 404
+4 * 404 0 404
+7 * 404 404
+4 * 404 0 404
+8 * 404 404
+4 * 404 0 404
+8 +1 404 404
+1 * 404 404

fn=(156)
0x4031ec 159 404 0 404 1 0 0 1
+1 * 404
+3 * 404 0 404
+1 * 404
+4 * 404 0 404
+4 +2 404 404
+4 * 404 404 0 1 0 0 1
+4 * 404
+3 * 404 404
+4 * 404 404
+3 * 404
+3 * 404
+3 * 404
+4 * 404
+3 * 404 404
+4 * 404 404
+3 -1 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(158)
calls=404 0x403ce6 +11 
* * 61864 17238 11158 22 5 0 22 5 0 12802 194 808
+5 +1 404 404
+4 * 404
+3 * 404 0 404
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=404 0x4031b8 -82 
* * 9292 3232 3232 1 0 0 1
+5 * 404
jump=404 +28 * 
* * 
+28 * 404
+4 * 404 404
+1 * 404 404
+1 * 404 404

fn=(172)
0x4031b8 79 404 0 404 1 0 0 1
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 404
+4 * 404
+3 * 404 0 404
cfi=(4)
cfn=(174)
calls=404 0x403ccc +42 
* * 5656 2020 2020
+5 * 404 404
+1 * 404 404

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=7 0x40404e 726 
* * 70 35 28 1 0 0 1
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=7 0x4045cc 650 
* * 224 77 77 1 0 0 1
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 7
+4 * 7
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(2)
calls=7 0x402d74 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(210)
calls=7 0x4045cc 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(246)
0x4039c4 556 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(248)
calls=7 0x4042c6 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(10)
0x402f54 645 836 0 836 1 0 0 1
+1 * 836
+3 * 836 0 836
+4 +1 836 836
+4 * 836 836 0 0 2 0 0 2
+4 * 836
+3 * 836 836
+4 * 836 836
+3 * 836
+3 * 836
+3 * 836
+4 * 836 836
+1 * 836 836

fn=(106)
0x40325e 113 829 0 829 1 0 0 1
+1 * 829
+3 * 829 0 829
+4 +1 829 829
+4 * 829 829
+1 * 829 829

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 7 0 7
+1 * 7
+3 * 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(204)
calls=7 0x40404e 726 
* * 70 35 28
+5 * 7 7
+4 * 7 7
+1 * 7 7

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7
+3 * 7 7
+4 * 7 0 0 1 0 0 1
+3 * 7
+3 * 7
+2 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +14 +3 
* * 
+14 +3 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(12)
cfn=(214)
calls=7 0x4045ee 216 
* * 91 49 21 0 0 0 0 0 0 7
+5 * 7 7
+3 * 7
+3 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfn=(10)
calls=7 0x402f54 645 
* * 91 42 14
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
+2 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(254)
calls=7 0x40470e 650 
* * 224 77 77
+5 * 7 7
+4 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 +16 * 
* * 
+16 * 7 7 0 1 0 0 1
+4 +1 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(6)
0x403b08 117 418 0 418 1 0 0 1
+1 * 418
+3 * 418 0 418 0 0 1 0 0 1
+4 +1 418 418
+4 * 418 418
+1 * 418 418

fn=(82)
0x4039fc 117 418 0 418 1 0 0 1
+1 * 418
+3 * 418 0 418 1 0 0 1
+4 +1 418 418
+4 * 418 418
+1 * 418 418

fn=(200)
0x402eda 901 202 0 202
+1 * 202
+3 * 202
+4 * 202 0 202
+4 * 202 0 202
+4 +2 202 202
+4 * 202 202
+4 * 202 202
+4 * 202 202
+4 * 202
+3 * 202 0 0 0 0 0 0 0 0 202 8
jcnd=7/202 +51 +10 
* * 
+2 +3 195 195
+4 * 195 195
+4 * 195 195
+4 -1 195 195
+4 * 195
+3 * 195
+3 * 195 0 195
cfi=(3)
cfn=(222)
calls=195 0x403373 215 
* * 7410 2535 2730 0 12 3 0 12 3 195
+5 +2 195 195
+4 * 195 195
+4 * 195
+4 * 195 195
+4 * 195 0 195
+4 * 195
jump=195 +36 +8 
* * 
+2 +6 7 7 0 1 0 0 1
+4 * 7
+3 * 7 0 7
cfn=(202)
calls=7 0x403688 556 
* * 161 63 49 2 0 0 2
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=7 0x4033a0 318 
* * 11053 3366 2922 36 6 8 36 6 8 782 63 41
+5 +2 202 202
+1 * 202 202

fn=(4)
0x4030b2 310 404 0 404 1 0 0 1
+1 * 404
+3 * 404 0 404
+2 * 404 0 404
+2 * 404 0 404
+1 * 404
+4 * 404 0 404 1 0 0 1
+4 * 404 0 404
+4 +2 404 404
+4 * 404
+3 * 404 0 404
cfn=(6)
calls=404 0x403b08 117 
* * 2424 1212 808 1 0 1 1 0 1
+5 * 404
+3 * 404 0 404
cfi=(3)
cfn=(8)
calls=404 0x403afa -88 
* * 2424 1212 808 1 0 0 1
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(10)
calls=404 0x402f54 645 
* * 5252 2424 808 1 1 0 1 1
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404
+3 * 404
+3 * 404 0 404
cfn=(12)
calls=404 0x403b16 134 
* * 179608 36725 35938 29 21 17 29 21 17 22304 850 808
+5 +4 404 404 0 1 0 0 1
+4 * 404
+3 * 404 0 404
cfn=(40)
calls=404 0x40333c 113 
* * 2424 1212 808 2 0 0 2
+5 * 404
+3 * 404 404
+4 * 404 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(42)
calls=404 0x403ba4 565 
* * 10100 4040 3232 3 0 0 3
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(46)
calls=404 0x403b74 547 
* * 10100 4040 3232
+5 * 404
+3 * 404
+3 * 404
+3 * 404
+3 * 404 0 404 1 0 0 1
cfi=(11)
cfn=(48)
calls=404 0x403bd5 -60 
* * 174728 56580 54564 26 3 2 26 3 2 6056 432 804 100
+5 -3 404 404
+4 * 404 0 404
+4 * 404
jump=404 +28 +4 
* * 
+28 +4 404
+4 * 404 404
+1 * 404 404
+2 * 404 404
+2 * 404 404
+1 * 404 404

fn=(108)
0x403a98 565 404 0 404 1 0 0 1
+1 * 404
+3 * 404
+4 * 404 0 404
+4 +1 404 404
+4 * 404 404
+4 * 404 0 404
+4 * 404
+4 * 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfi=(10)
cfn=(110)
calls=404 0x404380 726 
* * 4040 2020 1616 1 0 0 1
+5 * 404 404
+4 * 404 404
+1 * 404 404

fn=(178)
0x402e74 414 404 0 404
+1 * 404
+3 * 404 0 404
+1 * 404
+4 * 404 0 404 1 0 0 1
+4 +2 404 404
+4 * 404
+3 * 404 0 404
cfn=(40)
calls=404 0x40333c 113 
* * 2424 1212 808
+5 * 404
+3 * 404 404
+4 * 404 404
+4 * 404 404
+4 * 404 404
+3 -1 404
+3 * 404
+3 * 404 0 404
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=404 0x40334a 148 
* * 12524 4040 4848 2 0 0 2
+5 +1 404 404
+4 * 404
+3 * 404 0 404
cfn=(186)
calls=404 0x4032ca 159 
* * 80802 24544 15742 3 0 0 3 0 0 12464 184 808
+5 * 404
jump=404 +28 * 
* * 
+28 * 404 0 0 1 0 0 1
+4 * 404 404
+1 * 404 404
+1 * 404 404

fn=(210)
0x4045cc 650 14 0 14 1 0 0 1
+1 * 14
+3 * 14
+4 * 14 0 14
+4 +1 14 14
+4 * 14
+3 * 14 0 14
cfn=(82)
calls=14 0x4039fc 117 
* * 84 42 28
+5 * 14
+3 * 14 0 14
cfi=(3)
cfn=(212)
calls=14 0x4048c3 221 
* * 210 70 70
+5 * 14 14
+1 * 14 14

fl=(12)
fn=(54)
0x404a36 450 404 0 404
+1 * 404
+3 * 404 0 404
+1 * 404
+4 * 404 0 404 1 0 0 1
+4 * 404 0 404
+4 * 404 0 404
+4 +10 404 404
+4 * 404
+3 * 404 0 404
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=404 0x404c38 288 
* * 6060 2424 2020 3 0 0 3
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(56)
calls=404 0x404c38 288 
* * 6060 2424 2020
+5 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=404 0x404c52 -36 
* * 136348 43248 40828 20 3 2 20 3 2 6056 432 804 100
+5 +1 404
+4 * 404 404
+1 * 404 404
+1 * 404 404

fn=(60)
0x404c52 424 404 0 404
+1 * 404
+3 * 404 0 404
+2 * 404 0 404
+1 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +4 404 404
+4 * 404
+3 * 404 0 404
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=404 0x40492d 277 
* * 6060 2424 2020 2 0 0 2
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=404 0x404d9d 277 
* * 10100 3636 3232 2 0 1 2 0 1
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(66)
calls=404 0x404d9d 277 
* * 10100 3636 3232
+5 * 404
+3 * 404
+3 * 404
+3 * 404 0 404
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=404 0x404db7 -49 
* * 98776 30724 28304 15 3 1 15 3 1 6056 432 804 100
+5 +1 404
+4 * 404 404
+1 * 404 404
+2 * 404 404
+1 * 404 404

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=14 0x404f37 -22 
* * 1068 307 245 0 0 4 0 0 4 76 3 13
+5 +1 14 14
+1 * 14 14

fn=(62)
0x40492d 277 446 0 446 1 0 0 1
+1 * 446
+3 * 446
+4 * 446 0 446
+4 +1 446 446
+4 * 446
+3 * 446 0 446 1 0 0 1
cfi=(13)
cfn=(64)
calls=446 -33 -66 
* * 2676 1338 892
+5 * 446 446
+1 * 446 446

fn=(66)
0x404d9d 277 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808
+3 * 808 0 808
cfi=(13)
cfn=(68)
calls=808 0x404f1a -58 
* * 12928 4848 4040 2 0 1 2 0 1
+5 * 808 808
+1 * 808 808

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 14 0 14
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=14 0x404878 277 
* * 210 84 70 0 0 1 0 0 1
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(128)
calls=14 0x404878 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=14 0x404f9c -49 
* * 1278 377 329 0 0 2 0 0 2 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(214)
0x4045ee 216 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 +5 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 14
+3 * 14
+3 * 14 0 0 0 0 0 0 0 0 14
jcnd=14/14 +8 +2 
* * 
+8 +2 14 14
+4 +1 14 14
+1 * 14 14

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(130)
calls=28 0x40486a -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+2 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +4 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(62)
calls=14 0x40492d 277 
* * 210 84 70
+5 * 14
+3 * 14
+3 * 14
+3 * 14 0 14
cfn=(282)
calls=14 0x404fcd -49 
* * 1278 377 329 0 0 4 0 0 4 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+2 * 14 14
+1 * 14 14

fn=(120)
0x4049e2 450 404 0 404
+1 * 404
+3 * 404 0 404
+1 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +10 404 404
+4 * 404
+3 * 404 0 404
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=404 0x404bc6 288 
* * 6060 2424 2020 3 0 0 3
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(122)
calls=404 0x404bc6 288 
* * 6060 2424 2020
+5 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=404 0x404be0 -36 
* * 136348 43248 40828 4 1 6 4 1 6 6056 369 804
+5 +1 404
+4 * 404 404
+1 * 404 404
+1 * 404 404

fn=(128)
0x404878 277 446 0 446
+1 * 446
+3 * 446
+4 * 446 0 446 1 0 0 1
+4 +1 446 446
+4 * 446
+3 * 446 0 446
cfi=(13)
cfn=(130)
calls=446 -33 -66 
* * 2676 1338 892 0 0 1 0 0 1
+5 * 446 446
+1 * 446 446

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 808 0 808
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808
+3 * 808 0 808
cfi=(13)
cfn=(134)
calls=808 0x404e98 -58 
* * 12928 4848 4040 2 0 0 2
+5 * 808 808
+1 * 808 808

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +8 404 0 404
+4 +3 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=404 0x404eb5 -22 
* * 92716 28704 25880 1 1 6 1 1 6 6056 369 804
+5 +1 404 404
+1 * 404 404

fn=(242)
0x404f9c 379 14 0 14
+1 * 14
+3 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +8 14 0 14
+4 +3 14 14
+4 * 14 14
+4 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(140)
calls=14 0x404eb5 -22 
* * 1068 307 245 0 0 2 0 0 2 76 4 13
+5 +1 14 14
+1 * 14 14

fn=(276)
0x404cf0 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14
+4 * 14
+3 * 14 0 14
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(278)
calls=14 0x40469c 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(280)
calls=14 0x404e40 -36 
* * 2300 727 679 1 0 4 1 0 4 76 3 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fn=(278)
0x40469c 288 28 0 28
+1 * 28
+3 * 28
+4 * 28 0 28
+4 +1 28 28
+4 * 28
+3 * 28 0 28
cfi=(13)
cfn=(64)
calls=28 0x40491f -77 
* * 168 84 56
+5 * 28 28
+1 * 28 28

fn=(122)
0x404bc6 288 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808
+4 +1 808 808
+4 * 808
+3 * 808 0 808
cfi=(13)
cfn=(124)
calls=808 0x404d36 -77 
* * 4848 2424 1616 2 0 0 2
+5 * 808 808
+1 * 808 808

fn=(56)
0x404c38 288 808 0 808 1 0 0 1
+1 * 808
+3 * 808
+4 * 808 0 808 1 0 0 1
+4 +1 808 808
+4 * 808
+3 * 808 0 808
cfi=(13)
cfn=(58)
calls=808 0x404d8f -77 
* * 4848 2424 1616 1 0 0 1
+5 * 808 808
+1 * 808 808

fn=(74)
0x404f37 368 418 0 418
+1 * 418
+3 * 418
+4 * 418 0 418 1 0 0 1
+4 * 418 0 418
+4 * 418 0 418
+4 +2 418 418
+4 * 418 418
+4 * 418
+3 * 418
+3 * 418
+4 * 418 0 418
+4 +1 418 418
+5 * 418 0 0 0 0 0 0 0 0 418
jcnd=7/418 +33 +2 
* * 
+2 +1 411 411
+4 * 411
+8 * 411 411
+4 * 411 411
+4 * 411
+3 * 411 0 0 1 0 0 1
+3 * 411 0 411 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=411 0x3877c83840 0 
* * 82136 24441 23624 11 2 4 11 2 4 5714 435 406 100
* * 411 411 0 1 1 0 1 1 0 0 0 411
+5 +1 418 418
+4 * 418
+8 * 418 418
+4 * 418
+3 +1 418 418
+1 * 418 418

fn=(140)
0x404eb5 368 418 0 418
+1 * 418
+3 * 418
+4 * 418 0 418 1 0 0 1
+4 * 418 0 418
+4 * 418 0 418 0 0 1 0 0 1
+4 +2 418 418
+4 * 418 418
+4 * 418
+3 * 418
+3 * 418
+4 * 418 0 418
+4 +1 418 418
+5 * 418 0 0 0 0 0 0 0 0 418
jcnd=7/418 +33 +2 
* * 
+2 +1 411 411
+4 * 411
+8 * 411 411
+4 * 411 411
+4 * 411
+3 * 411
+3 * 411 0 411
cob=(2)
cfi=(9)
cfn=(78)
calls=411 0x3877c83840 0 
* * 82136 24441 23624 0 1 7 0 1 7 5714 373 406
* * 411 411 0 0 0 0 0 0 0 0 0 411
+5 +1 418 418
+4 * 418
+8 * 418 418
+4 * 418
+3 +1 418 418
+1 * 418 418

fn=(72)
0x404db7 379 404 0 404
+1 * 404
+3 * 404
+4 * 404 0 404 1 0 0 1
+4 * 404 0 404
+4 * 404 0 404
+4 +8 404 0 404
+4 +3 404 404
+4 * 404 404
+4 * 404 404
+4 * 404
+3 * 404
+3 * 404 0 404
cfn=(74)
calls=404 0x404f37 -22 
* * 92716 28704 25880 14 3 1 14 3 1 6056 432 804 100
+5 +1 404 404
+1 * 404 404

fn=(126)
0x404be0 424 404 0 404
+1 * 404
+3 * 404 0 404
+2 * 404 0 404
+1 * 404
+4 * 404 0 404
+4 * 404 0 404
+4 * 404 0 404
+4 +4 404 404
+4 * 404
+3 * 404 0 404
cfn=(128)
calls=404 0x404878 277 
* * 6060 2424 2020 1 0 0 1
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(132)
calls=404 0x404d44 277 
* * 10100 3636 3232 2 0 0 2
+5 * 404
+3 * 404 404
+4 * 404
+3 * 404 0 404
cfn=(132)
calls=404 0x404d44 277 
* * 10100 3636 3232
+5 * 404
+3 * 404
+3 * 404
+3 * 404 0 404
cfn=(138)
calls=404 0x404d5e -49 
* * 98776 30724 28304 1 1 6 1 1 6 6056 369 804
+5 +1 404
+4 * 404 404
+1 * 404 404
+2 * 404 404
+1 * 404 404

fn=(236)
0x404caa 450 14 0 14
+1 * 14
+3 * 14 0 14
+1 * 14
+4 * 14 0 14
+4 * 14 0 14
+4 * 14 0 14
+4 +10 14 14 0 1 0 0 1
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14
+3 * 14 14
+4 * 14
+3 * 14 0 14
cfn=(238)
calls=14 0x40455a 288 
* * 210 84 70
+5 * 14 14
+4 * 14
+3 * 14
+3 * 14 0 14
cfn=(240)
calls=14 0x404de8 -36 
* * 2300 727 679 1 0 3 1 0 3 76 4 13
+5 +1 14
+4 * 14 14
+1 * 14 14
+1 * 14 14

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fn=(204)
0x40404e 726 14 0 14 1 0 0 1
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=7 0x403e26 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(70)
0x40500c 790 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+4 +1 808 808
+4 * 808 808
+1 * 808 808

fn=(110)
0x404380 726 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+4 * 808 0 808
+4 * 808 808
+4 * 808 808
+3 * 808 808
+4 * 808 0 808
+3 * 808 808
+1 * 808 808

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 7 0 7
+1 * 7
+3 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 +2 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14 1 0 0 1
+5 * 7 7
+3 * 7
+3 * 7 7
+4 * 7
+3 * 7 0 7
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+4 * 7 7
+1 * 7 7
+1 * 7 7

fn=(136)
0x404ffe 790 808 0 808 1 0 0 1
+1 * 808
+3 * 808 0 808
+4 +1 808 808
+4 * 808 808
+1 * 808 808

fn=(44)
0x404468 726 808 0 808
+1 * 808
+3 * 808 0 808
+4 * 808 0 808
+4 * 808 808
+4 * 808 808
+3 * 808 808
+4 * 808 0 808 1 0 0 1
+3 * 808 808
+1 * 808 808

fn=(248)
0x4042c6 726 14 0 14
+1 * 14
+3 * 14 0 14
+4 * 14 0 14
+4 * 14 14
+4 * 14 14
+3 * 14 14
+4 * 14 0 14
+3 * 14 14
+1 * 14 14

fn=(220)
0x403e26 790 28 0 28 1 0 0 1
+1 * 28
+3 * 28 0 28
+4 +1 28 28
+4 * 28 28
+1 * 28 28

fl=(14)
fn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
0x40454c 112 411 0 411 1 0 0 1
+1 * 411
+3 * 411 0 411
+4 * 411 0 411
+4 * 411 411
+1 * 411 411

fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 411 0 411 1 0 0 1
+1 * 411
+3 * 411 0 411
+4 * 411 0 411 1 0 0 1
+4 * 411 411
+1 * 411 411

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 411 0 411 1 0 0 1
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 +4 411 411
+4 * 411 411
+4 * 411
+3 * 411
+3 * 411 0 411
cfn=(184)
calls=411 0x40454c -14 
* * 2466 822 1233 1 0 0 1
+5 +2 411 411
+1 * 411 411

fn=(150)
0x40326c 148 411 0 411
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 * 411 0 411
+4 +3 411 411 0 1 0 0 1
+4 * 411 411
+4 * 411
+3 * 411
+3 * 411 0 411
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=411 0x403d1a -29 
* * 7398 2466 2877 3 0 0 3
+5 +1 411 411
+1 * 411 411

fn=(180)
0x40334a 148 411 0 411
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 * 411 0 411
+4 +3 411 411
+4 * 411 411
+4 * 411
+3 * 411
+3 * 411 0 411
cfn=(182)
calls=411 0x403dcc -29 
* * 7398 2466 2877 2 0 0 2
+5 +1 411 411
+1 * 411 411

fn=(152)
0x403d1a 122 411 0 411 1 0 0 1
+1 * 411
+3 * 411
+4 * 411 0 411
+4 * 411 0 411
+4 +4 411 411
+4 * 411 411
+4 * 411
+3 * 411
+3 * 411 0 411
cfn=(154)
calls=411 0x4044f8 -14 
* * 2466 822 1233 2 0 0 2
+5 +2 411 411
+1 * 411 411

fl=(15)
fn=(250)
0x4036de 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x403799 +21 
* * 
0x403799 +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(252)
calls=7 0x404104 1336 
* * 1267 469 329 4 0 0 4 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(258)
calls=7 0x4041ce 538 
* * 154 63 49
+5 * 7 0 7 1 0 0 1
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(260)
calls=7 0x4041f3 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(22)
calls=7 0x404236 167 
* * 2109 383 385 9 5 6 9 5 6 298 46 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7
+4 * 7 0 0 1 0 0 1
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(264)
calls=7 0x4036b1 215 
* * 266 91 98 0 1 3 0 1 3 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -88 
* * 2314 741 707 3 0 4 3 0 4 69 3 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(262)
calls=7 0x40409e 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(268)
calls=7 0x40426e -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(40)
calls=7 0x40333c 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7
+4 * 7 7
+3 -1 7 0 0 1 0 0 1
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(180)
calls=7 0x40334a 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(188)
calls=7 0x403d98 171 
* * 950 260 165 0 0 0 0 0 0 178 15 14
+5 +3 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x4039ba * 
* * 
0x4039ba * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

fn=(206)
0x4033a0 318 7 0 7 1 0 0 1
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+1 * 7
+4 * 7 0 7
+4 * 7 0 7
+4 * 7 0 7
+4 +4 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+4 * 7
+3 * 7 0 0 0 0 0 0 0 0 7
jcnd=7/7 0x40345e +21 
* * 
0x40345e +21 7 7 0 1 0 0 1
+4 * 7
+5 * 7
+5 * 7
+3 * 7 0 7
cfi=(2)
cfn=(208)
calls=7 0x403e8c 1336 
* * 1267 469 329 5 0 0 5 0 0 28
+5 * 7 0 7
+4 +1 7 7
+4 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(216)
calls=7 0x403f56 538 
* * 154 63 49
+5 * 7 0 7
+4 * 7
+4 * 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(10)
cfn=(218)
calls=7 0x403f7b 896 
* * 238 91 70 1 0 0 1
+5 * 7 0 7
+4 +1 7 7
+4 * 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(2)
cfn=(96)
calls=7 0x403fbe 167 
* * 3076 639 597 13 5 4 13 5 4 495 55 14
+5 * 7 0 7
+4 +1 7 7
+4 * 7 0 7
+4 +12 7 7 0 1 0 0 1
+4 * 7
+8 * 7 7
+4 * 7
+4 * 7 7
+4 -5 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(3)
cfn=(222)
calls=7 0x403373 215 
* * 266 91 98 0 1 1 0 1 1 7
+5 +7 7 0 7
+8 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7
+4 * 7 0 0 1 0 0 1
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 * 7 7
+4 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -88 
* * 2314 741 707 6 0 3 6 0 3 69 4 13
+5 * 7 0 7
+4 +5 7 0 7
+5 +5 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7
+4 * 7
+3 * 7 0 7
cfi=(10)
cfn=(220)
calls=7 0x403e26 790 
* * 42 21 14
+5 * 7 7
+3 -3 7 7
+4 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfi=(11)
cfn=(228)
calls=7 0x403ff6 -95 
* * 1526 532 532 0 0 0 0 0 0 7
+5 * 7 0 7
+4 +16 7 7
+4 * 7
+3 * 7 0 7
cfi=(2)
cfn=(106)
calls=7 0x40325e 113 
* * 42 21 14
+5 * 7
+3 * 7 7
+4 * 7 7
+4 * 7 7 0 1 0 0 1
+4 * 7 7
+3 -1 7
+3 * 7
+3 * 7 0 7
cfi=(14)
cfn=(150)
calls=7 0x40326c 148 
* * 217 70 84
+5 +4 7 7
+4 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7
+3 * 7
+3 * 7
+4 * 7
+3 * 7 7
+4 * 7 7
+3 * 7 7
+4 -2 7
+3 * 7
+3 * 7 0 7 1 0 0 1
cfi=(2)
cfn=(158)
calls=7 0x403ce6 171 
* * 917 243 162 1 0 0 1 0 0 169 4 14
+5 +3 7 7
+4 * 7 7
+4 * 7 0 7
+3 +1 7 7
+4 * 7 7
+4 * 7 0 7
+4 +1 7 7
+4 * 7
+8 * 7 7
+4 * 7
+3 * 7 7
+4 * 7 0 7
+4 +2 7
jump=7 0x40367f * 
* * 
0x40367f * 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+2 * 7 7
+1 * 7 7

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 822 0 822 1 0 0 1
+5 0 822 0 822
+5 0 822
+3 0 822 0 822
+5 0 822
+4 0 822 822 0 0 1 0 0 1
+7 0 822 822 0 0 1 0 0 1
+3 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822 0 0 1 0 0 1
+7 0 822 822 0 1 1 0 1 1
+4 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
+2 0 822 822 0 0 1 0 0 1
+3 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 +97 0 
* 0 
+18 0 822
+3 0 822
+3 0 822 0 822
cfn=(38) _int_malloc
calls=822 0x3877c79a00 0 
* 0 218314 26472 31564 41 33 47 41 33 47 35858 1825
+5 0 822
+3 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
+2 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
+2 0 822
+3 0 822 0 0 0 0 0 0 0 0 822 5
+2 0 822 822
+7 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 +13 0 
* 0 
+13 0 822 0 822
+2 0 822 0 0 0 0 0 0 0 0 822 62
+6 0 822
+3 0 822 822
+4 0 822 822
+5 0 822 822
+5 0 822
+4 0 822 822
+1 0 822 0 0 1 0 0 1
+5 0 822 822 0 0 1 0 0 1
+7 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 +14 0 
* 0 
+14 0 822 0 822 1 0 0 1
+3 0 822 0 0 0 0 0 0 0 0 822
+6 0 822
jump=822 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 822 0 822 1 0 0 1
+2 0 822
+3 0 822
+3 0 822 0 822
+2 0 822
+3 0 822 0 822
+1 0 822
+3 0 822 0 822
+1 0 822
+3 0 822
+4 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
+6 0 822
+4 0 822
+3 0 822 0 0 0 0 0 0 0 0 822 4
jcnd=10/822 0x3877c838d1 0 
* 0 
+2 0 812
+3 0 812
+3 0 812
+3 0 812
+3 0 812
+3 0 812 0 0 0 0 0 0 0 0 812
jcnd=812/812 +41 0 
* 0 
+41 0 812 0 0 1 0 0 1
+3 0 812 0 0 0 0 0 0 0 0 812
jcnd=812/812 0x3877c839c0 0 
* 0 
+24 0 812
+3 0 812
+4 0 812
+3 0 812
+3 0 812
+3 0 812
+3 0 812
+3 0 812 0 0 0 0 0 0 0 0 812 455
jcnd=412/812 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 410
+10 0 410 410 0 0 2 0 0 2
+3 0 410
+4 0 410 0 410
+3 0 410
+4 0 410
+4 0 410 0 0 0 0 0 0 0 0 410
jcnd=410/410 -18 0 
* 0 
-18 0 1286 1286
+3 0 1286
+4 0 1286 0 1286
+3 0 1286
+4 0 1286
+4 0 1286 0 0 0 0 0 0 0 0 1286 8
jcnd=876/1286 -18 0 
* 0 
+2 0 822
+4 0 822
+3 0 822 822
+1 0 822 822
+1 0 822 822
+2 0 822 822 0 1 0 0 1
+2 0 822 822
0x3877c839c0 0 812 0 0 1 0 0 1
+3 0 812
+3 0 812
+3 0 812
+4 0 812 0 812 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=812 0x3877c89b20 0 
* 0 117718 43076 41452 6 1 10 6 1 10 5642 341 812 100
+5 0 812
jump=812 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 822 822 0 1 1 0 1 1
+7 0 822 822 0 0 1 0 0 1
+3 0 822
+3 0 822 0 0 1 0 0 1 0 0 822
+6 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822
+4 0 822
+4 0 822
+2 0 822 0 0 0 0 0 0 0 0 822
+2 0 822
+2 0 822
+7 0 822 0 0 0 0 0 0 0 0 822
jcnd=822/822 +14 0 
* 0 
+14 0 822
+2 0 822
cfn=(170) _int_free
calls=822 0x3877c78650 0 
* 0 85295 23101 13755 17 1 0 17 1 0 20681 390

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 5 5
+5 0 5
+3 0 5 5
+5 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+4 0 5 0 0 0 0 0 0 0 0 5
+6 0 5 5
+9 0 5 0 5
+4 0 5 0 5
+4 0 5 0 0 0 0 0 0 0 0 5 3
jcnd=5/5 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 6
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 6
jcnd=7/20 +70 0 
* 0 
+2 0 13 13
+3 0 13
+3 0 13
+3 0 13 13
+4 0 13 13
+4 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+4 0 13 0 0 0 0 0 0 0 0 13
+6 0 13 13
+8 0 13 0 13
+4 0 13 0 13
+4 0 13 0 0 0 0 0 0 0 0 13
jcnd=12/13 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20
+6 0 20 0 0 0 0 0 0 0 0 20 4
jcnd=5/20 0x3877c75e68 0 
* 0 
+6 0 15 0 15
+6 0 15
jump=15 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 822 0 822 1 0 0 1
+2 0 822 0 822
+2 0 822 0 822
+2 0 822
+3 0 822 0 822
+2 0 822 0 822
+1 0 822 0 822
+1 0 822
+3 0 822
+4 0 822 822
+4 0 822 0 822
+4 0 822
+3 0 822
+4 0 822
+3 0 822
+3 0 822
+3 0 822 0 0 1 0 0 1 0 0 822
+6 0 822
+4 0 822 0 0 0 0 0 0 0 0 822
+6 0 822
+4 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822
+7 0 822 0 0 0 0 0 0 0 0 822 2
jcnd=698/822 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 698
+2 0 698 0 0 0 0 0 0 0 0 698
+6 0 698 698 0 1 0 0 1
+4 0 698
+3 0 698
+2 0 698 0 0 0 0 0 0 0 0 698
jcnd=698/698 0x3877c78a40 0 
* 0 
+6 0 698 698
+4 0 698
+3 0 698 0 0 0 0 0 0 0 0 698
+6 0 698 698
+5 0 698
+4 0 698 0 0 0 0 0 0 0 0 698
jcnd=698/698 0x3877c7907c 0 
* 0 
+6 0 698 698
+5 0 698
+4 0 698 0 0 0 0 0 0 0 0 698
+6 0 698
+4 0 698 0 0 1 0 0 1 0 0 698
+6 0 698
+4 0 698 698
+7 0 698 0 0 0 0 0 0 0 0 698
+6 0 698 698
+6 0 698
+2 0 698 0 0 0 0 0 0 0 0 698
+6 0 698 698
+4 0 698 0 0 0 0 0 0 0 0 698 5
jcnd=694/698 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 698 698 0 1 0 0 1
+4 0 698 0 0 0 0 0 0 0 0 698
+6 0 698 698
+6 0 698 0 0 1 0 0 1 0 0 698 44
jcnd=29/698 0x3877c78a78 0 
* 0 
+6 0 669 669
+5 0 669 669
+5 0 669 669
+4 0 669 0 0 0 0 0 0 0 0 669
+6 0 669 669
+4 0 669 0 0 0 0 0 0 0 0 669
+6 0 669 669
+9 0 669 0 669
+4 0 669 0 669
+4 0 669 0 0 0 0 0 0 0 0 669 291
jcnd=371/669 +16 0 
* 0 
+2 0 298 298
+5 0 298
+3 0 298 0 0 1 0 0 1 0 0 298 2
+6 0 669
+3 0 669
+4 0 669 669
+4 0 669 669
+4 0 669 0 0 0 0 0 0 0 0 669
-12 0 29
+4 0 29 29
+4 0 29 29
+4 0 29 0 0 0 0 0 0 0 0 29
+6 0 698
+7 0 698 0 698
+4 0 698 0 698
+4 0 698 0 0 0 0 0 0 0 0 698 44
jcnd=363/698 +18 0 
* 0 
+2 0 335 0 335
+8 0 335 0 335
+8 0 335 0 335
+4 0 335
+3 0 335 0 335 1 0 0 1
+4 0 335
+4 0 335 0 335
+4 0 335 0 335
+4 0 335
+7 0 335 0 0 0 0 0 0 0 0 335
jcnd=335/335 0x3877c78b20 0 
* 0 
-30 0 363 0 363
+4 0 363
+3 0 363 0 363
+4 0 363
+4 0 363 0 363
+4 0 363 0 363
+4 0 363
+7 0 363 0 0 0 0 0 0 0 0 363
jcnd=363/363 0x3877c78b20 0 
* 0 
0x3877c78a40 0 698 0 0 1 0 0 1
+5 0 698 698
+4 0 698 698
+7 0 698 0 0 0 0 0 0 0 0 698
jcnd=698/698 +16 0 
* 0 
+16 0 698 0 698
+5 0 698 0 0 0 0 0 0 0 0 698
+6 0 698
+3 0 698
jump=698 0x3877c7878f 0 
* 0 
+10 0 29 0 29
+6 0 29 0 0 1 0 0 1
jump=29 0x3877c78885 0 
* 0 
0x3877c78b20 0 698 698 0 1 0 0 1
+4 0 698
+2 0 698 0 0 0 0 0 0 0 0 698
+6 0 698 698
+7 0 698 0 0 0 0 0 0 0 0 698
jcnd=698/698 +15 0 
* 0 
+15 0 698 0 698 1 0 0 1
+4 0 698 0 0 0 0 0 0 0 0 698
+6 0 698
+4 0 698 698
+1 0 698 698
+1 0 698 698
+2 0 698 698
+2 0 698 698
+2 0 698 698
+2 0 698 698
0x3877c7907c 0 698 698 0 1 1 0 1 1
+4 0 698 0 0 1 0 0 1
+7 0 698
+4 0 698
+3 0 698
+3 0 698 0 0 0 0 0 0 0 0 698
jcnd=698/698 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 812 0 0 1 0 0 1
+7 0 812
+3 0 812
+3 0 812 812 0 0 1 0 0 1
+4 0 812
+4 0 812 0 0 0 0 0 0 0 0 0 0 812 100
jump=96 0x3877c89be8 0 
* 0 
jump=104 0x3877c89bd0 0 
* 0 
jump=96 0x3877c89bb8 0 
* 0 
jump=96 +11 0 
* 0 
jump=104 0x3877c89c48 0 
* 0 
jump=106 0x3877c89c30 0 
* 0 
jump=104 0x3877c89c18 0 
* 0 
jump=106 0x3877c89c00 0 
* 0 
+11 0 96 96
+3 0 96
+4 0 96
+4 0 96 96
+4 0 96
+4 0 96 0 96
+4 0 96
+9 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96
+4 0 96
+4 0 96
+4 0 96 0 0 0 0 0 0 0 0 96
jcnd=8/96 0x3877c89c60 0 
* 0 
-40 0 5030 5030
+4 0 5030 0 5030
+4 0 5030 5030
+4 0 5030 0 5030 0 0 3 0 0 3
+4 0 5030 5030
+4 0 5030 0 5030 0 0 4 0 0 4
+4 0 5030 5030
+4 0 5030 0 5030
+4 0 5030
+4 0 5030
+4 0 5030 0 0 0 0 0 0 0 0 5030 339
jcnd=776/5030 0x3877c89c60 0 
* 0 
-32 0 106 106
+4 0 106 0 106
+4 0 106 106
+4 0 106 0 106
+4 0 106 106
+4 0 106 0 106
+4 0 106
+4 0 106
+4 0 106 0 0 0 0 0 0 0 0 106
jcnd=10/106 0x3877c89c60 0 
* 0 
-24 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104
+4 0 104
+4 0 104 0 0 0 0 0 0 0 0 104
jcnd=8/104 0x3877c89c60 0 
* 0 
-16 0 106 106 0 1 0 0 1
+4 0 106 0 106
+4 0 106 0 0 1 0 0 1
+4 0 106
+4 0 106 0 0 0 0 0 0 0 0 106 2
jcnd=10/106 0x3877c89c60 0 
* 0 
+6 0 4630
+4 0 4630 4630
+3 0 4630 0 4630
+3 0 4630 4630
+4 0 4630 0 4630 0 0 1 0 0 1
+4 0 4630 4630
+4 0 4630 0 4630 0 0 1 0 0 1
+4 0 4630 4630
+4 0 4630 0 4630
+4 0 4630
jump=4630 -80 0 
* 0 
-30 0 96 96
+3 0 96 0 96
+3 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96 0 0 1 0 0 1
+4 0 96 96
+4 0 96 0 96
+4 0 96
jump=96 -80 0 
* 0 
-24 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104 104
+4 0 104 0 104
+4 0 104
jump=104 -80 0 
* 0 
-16 0 96 96
+4 0 96 0 96
+4 0 96 96
+4 0 96 0 96
+4 0 96
jump=96 -80 0 
* 0 
+8 0 96 96
+3 0 96
+4 0 96 0 0 1 0 0 1
+4 0 96
+4 0 96
jump=96 -39 0 
* 0 
+9 0 104
+3 0 104 0 0 0 0 0 0 0 0 104
+6 0 104 104
+3 0 104
+4 0 104
jump=104 -72 0 
* 0 
+8 0 96
+4 0 96 96
+3 0 96 0 0 0 0 0 0 0 0 96
+2 0 96
+4 0 96
jump=96 -99 0 
* 0 
+11 0 106 106 0 1 0 0 1
+3 0 106
+4 0 106
+4 0 106
+4 0 106
jump=106 0x3877c89b78 0 
* 0 
+9 0 104 104
+3 0 104
+4 0 104
+4 0 104
+4 0 104
jump=104 0x3877c89b70 0 
* 0 
+9 0 106 106
+3 0 106
+4 0 106
+4 0 106
+4 0 106
jump=106 0x3877c89b68 0 
* 0 
+9 0 104 104
+3 0 104
+4 0 104
+4 0 104
+4 0 104
jump=104 0x3877c89b60 0 
* 0 
+9 0 812 0 812 1 0 0 1
+3 0 812 812

fn=(104) alloc_perturb
0x3877c77180 0 704 704 0 1 0 0 1
+6 0 704
+2 0 704 0 0 0 0 0 0 0 0 704 33
+2 0 704 704

fn=(38)
0x3877c79a00 0 822 0 822 1 0 0 1
+2 0 822
+3 0 822 0 822
+2 0 822 0 822
+2 0 822 0 822 0 0 1 0 0 1
+2 0 822
+3 0 822 0 822
+1 0 822 0 822
+1 0 822
+4 0 822
+4 0 822 0 0 0 0 0 0 0 0 822
+6 0 822
+4 0 822
+6 0 822
+3 0 822
+4 0 822
+4 0 822
+4 0 822
+3 0 822 0 0 0 0 0 0 0 0 822
+6 0 822 822 0 1 1 0 1 1
+7 0 822 0 0 0 0 0 0 0 0 822 5
jcnd=700/822 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 704
+4 0 704 704
+1 0 704 704
+1 0 704 704
+2 0 704 704
+2 0 704 704
+2 0 704 704
+2 0 704 704
+7 0 717
+7 0 717 0 0 1 0 0 1 0 0 717 5
jcnd=2/717 0x3877c79b70 0 
* 0 
+2 0 715
+3 0 715
+5 0 715
+3 0 715
+4 0 715 0 715
+4 0 715
+2 0 715
+5 0 715 715 0 0 10 0 0 10
+4 0 715
+3 0 715 0 0 0 0 0 0 0 0 715
jcnd=715/715 0x3877c79bc2 0 
* 0 
+78 0 2 0 0 1 0 0 1
+3 0 2
+4 0 2
+4 0 2 0 0 1 0 0 1 0 0 2
jcnd=2/2 0x3877c7a1a4 0 
* 0 
+30 0 2 2
+6 0 2
+5 0 2 0 0 0 0 0 0 0 0 2 1
jcnd=1/2 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 907 243 192 8 0 0 8 0 0 187 24
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 716 0 0 1 0 0 1
+3 0 716
+3 0 716
+3 0 716
+4 0 716
+3 0 716
+4 0 716 0 716
+5 0 716
+3 0 716 0 716
+4 0 716 0 716
+4 0 716 0 716
+5 0 716
+3 0 716
+3 0 716
+3 0 716
+3 0 716
+4 0 716
+4 0 716 0 0 1 0 0 1
+4 0 716 0 716
+4 0 716
+4 0 716 0 716
+5 0 716 0 716
+5 0 716
+3 0 716
+3 0 716 0 716
+5 0 716
+5 0 716
+3 0 716 0 716
+4 0 716 0 716
+4 0 716
+6 0 716 0 716
+4 0 716 0 716
+5 0 716 0 0 1 0 0 1
+3 0 716
+3 0 716
+3 0 716
jump=716 +87 0 
* 0 
+8 0 676
+3 0 676
+4 0 676
+2 0 676
+2 0 676
+3 0 676
+3 0 676
+3 0 676
+2 0 676
+2 0 676
+5 0 676
+2 0 676 676 0 0 2 0 0 2
+4 0 676
+3 0 676
+4 0 676 0 676
+4 0 676 0 676
+8 0 676
+7 0 676 0 676
+4 0 676 0 676 0 0 1 0 0 1
+4 0 676 0 676
+4 0 676 0 0 0 0 0 0 0 0 676
-38 0 333
+3 0 333
+4 0 333 0 333
+4 0 333 0 333
+8 0 333
+7 0 333 0 333
+4 0 333 0 333
+4 0 333 0 333
+4 0 333 0 0 0 0 0 0 0 0 333
+6 0 1726 1726 0 1 0 0 1
+4 0 1726
+3 0 1726 0 0 0 0 0 0 0 0 1726 29
jcnd=685/1726 0x3877c79ef0 0 
* 0 
+6 0 1041 1041
+4 0 1041 1041
+4 0 1041
+4 0 1041 0 0 0 0 0 0 0 0 1041
+6 0 1041 1041 0 1 1 0 1 1
+7 0 1041 0 0 0 0 0 0 0 0 1041 2
+6 0 1041
+4 0 1041
+7 0 1041 0 0 0 0 0 0 0 0 1041 7
jcnd=8/1041 +11 0 
* 0 
+2 0 1033
+3 0 1033 0 0 0 0 0 0 0 0 1033 472
jcnd=693/1033 0x3877c79e28 0 
* 0 
+6 0 1022
+3 0 1022 0 1022
+4 0 1022 0 1022
+5 0 1022 0 0 0 0 0 0 0 0 1022 11
jcnd=13/1022 0x3877c7a090 0 
* 0 
+6 0 1009
+7 0 1009 0 0 0 0 0 0 0 0 1009 11
jcnd=676/1009 0x3877c79c50 0 
* 0 
+6 0 333 0 0 1 0 0 1
+3 0 333
+4 0 333
+4 0 333 0 0 0 0 0 0 0 0 333 7
jcnd=265/333 0x3877c79db0 0 
* 0 
+6 0 68
+3 0 68
+4 0 68
+2 0 68
+2 0 68
+3 0 68
+3 0 68
+8 0 68
+3 0 68
+2 0 68
+2 0 68
+4 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 1 0 0 1 0 0 68 31
jcnd=68/68 0x3877c79e15 0 
* 0 
-36 0 265
+2 0 265
+2 0 265
+3 0 265
+3 0 265
+8 0 265
+3 0 265
+2 0 265
+2 0 265
+4 0 265 265
+4 0 265
+3 0 265 0 0 0 0 0 0 0 0 265
jcnd=265/265 0x3877c79e15 0 
* 0 
0x3877c79db0 0 265 0 0 1 0 0 1
+3 0 265
+4 0 265
+4 0 265 0 0 0 0 0 0 0 0 265
+2 0 265
+3 0 265 0 0 1 0 0 1
+7 0 265
jump=265 0x3877c79d18 0 
* 0 
+78 0 333 0 333
+4 0 333 0 333
+4 0 333
+3 0 333
jump=333 0x3877c79c73 0 
* 0 
+8 0 693 693 0 1 0 0 1
+4 0 693
+3 0 693 0 0 0 0 0 0 0 0 693 9
jcnd=349/693 0x3877c79ce1 0 
* 0 
+6 0 344 344
+5 0 344 0 0 0 0 0 0 0 0 344 5
jcnd=325/344 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 5
jcnd=11/19 +18 0 
* 0 
+2 0 8 0 8 0 0 1 0 0 1
+8 0 8 0 8
+8 0 8
+7 0 8 0 8
+4 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8
+3 0 8
+4 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
+4 0 8 0 8 0 0 1 0 0 1
+4 0 8
+4 0 8
+3 0 8 0 8
cfn=(104)
calls=8 0x3877c77180 0 
* 0 32 16 0 0 0 0 0 0 0 8
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 685 0 0 1 0 0 1
+7 0 685
+3 0 685 0 0 0 0 0 0 0 0 685 3
jcnd=2/685 0x3877c7a0b0 0 
* 0 
+6 0 685 685 0 1 0 0 1
+4 0 685
+3 0 685
+3 0 685
+2 0 685
+4 0 685
+3 0 685
+3 0 685
+2 0 685
+2 0 685
+2 0 685
+2 0 685 685 0 0 1 0 0 1
+8 0 685
+5 0 685
+5 0 685
+2 0 685 0 0 0 0 0 0 0 0 685
-2 0 348
+2 0 348 0 0 0 0 0 0 0 0 348
+2 0 1033
+2 0 1033 0 0 0 0 0 0 0 0 1033 31
jcnd=493/1033 +64 0 
* 0 
+2 0 540
+8 0 540
+3 0 540
+3 0 540 0 0 0 0 0 0 0 0 540
-6 0 331
+3 0 331
+3 0 331 0 0 0 0 0 0 0 0 331 2
+2 0 871
+2 0 871 871
+8 0 871
+2 0 871 0 0 0 0 0 0 0 0 871 18
jcnd=331/871 -20 0 
* 0 
+2 0 540
+2 0 540
+5 0 540
+3 0 540
+3 0 540
+2 0 540
+2 0 540
+5 0 540 0 0 0 0 0 0 0 0 540
+2 0 540
+2 0 540
+4 0 540
+2 0 540
+2 0 540 0 0 0 0 0 0 0 0 540
jcnd=540/540 -8 0 
* 0 
-8 0 7046
+4 0 7046
+2 0 7046
+2 0 7046 0 0 0 0 0 0 0 0 7046 391
jcnd=6046/7046 -8 0 
* 0 
-2 0 493 0 0 1 0 0 1
+2 0 493 0 0 0 0 0 0 0 0 493 24
jcnd=460/493 -8 0 
* 0 
+2 0 1033 1033 0 0 6 0 0 6
+4 0 1033 0 0 1 0 0 1
+3 0 1033 0 0 0 0 0 0 0 0 1033 482
jcnd=685/1033 0x3877c7a1cf 0 
* 0 
+6 0 348
+2 0 348
+4 0 348
+2 0 348
+2 0 348
+2 0 348 0 348
+8 0 348
jump=348 0x3877c79f30 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
+16 0 2 2
+4 0 2
+4 0 2
+2 0 2
+5 0 2 2 0 1 1 0 1 1
+4 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 2 0 0 1 0 0 1
+3 0 2 0 2
+4 0 2
jump=2 0x3877c79b99 0 
* 0 
+36 0 685 685 0 1 2 0 1 2
+4 0 685 685 0 0 2 0 0 2
+4 0 685
+3 0 685 685
+4 0 685
+4 0 685
+3 0 685
+3 0 685 685
+4 0 685 0 0 0 0 0 0 0 0 685
+6 0 685 685 0 0 1 0 0 1
+4 0 685 0 0 0 0 0 0 0 0 685
+6 0 685 685 0 1 0 0 1
+8 0 685 0 685
+4 0 685 0 685
+4 0 685 0 0 0 0 0 0 0 0 685 173
jcnd=349/685 +38 0 
* 0 
+2 0 336 336 0 0 1 0 0 1
+4 0 336
+3 0 336 0 0 0 0 0 0 0 0 336
+2 0 336 336
+5 0 336 0 0 0 0 0 0 0 0 336
+6 0 336 336
+4 0 336 0 336
+4 0 336 336
+4 0 336 0 336
+4 0 336
+4 0 336 0 0 0 0 0 0 0 0 336
-4 0 349
+4 0 349 0 0 0 0 0 0 0 0 349 9
jcnd=13/349 0x3877c7a2e3 0 
* 0 
+6 0 672 672
+4 0 672 672 0 1 0 0 1
+4 0 672 0 0 0 0 0 0 0 0 672
+6 0 672
+4 0 672
+7 0 672 0 672 0 0 9 0 0 9
+4 0 672 0 672
+4 0 672 0 672
+4 0 672 0 672
+4 0 672 0 0 0 0 0 0 0 0 672 4
jcnd=2/672 +7 0 
* 0 
+2 0 670 0 670
+5 0 670
+7 0 670 0 0 0 0 0 0 0 0 670 4
jcnd=373/670 +18 0 
* 0 
-7 0 2
+7 0 2 0 0 0 0 0 0 0 0 2 2
jcnd=2/2 +18 0 
* 0 
+2 0 297 0 297 0 0 12 0 0 12
+8 0 297 0 297
+8 0 297
+7 0 297 0 297 0 0 3 0 0 3
+4 0 297
+3 0 297
+3 0 297
+4 0 297
+3 0 297
+4 0 297
+3 0 297
+3 0 297
+4 0 297 0 297
+4 0 297 0 297
+4 0 297
jump=297 +71 0 
* 0 
-46 0 375 0 0 1 0 0 1
+7 0 375 0 375 0 0 1 0 0 1
+4 0 375
+3 0 375
+3 0 375
+4 0 375
+3 0 375
+4 0 375
+3 0 375
+3 0 375
+4 0 375 0 375
+4 0 375 0 375
+4 0 375
jump=375 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 13
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 +7 0 
* 0 
+7 0 685
+4 0 685 0 0 1 0 0 1
+3 0 685
+3 0 685 0 685
cfn=(104)
calls=685 0x3877c77180 0 
* 0 2740 1370 0 0 0 0 0 0 0 685 33
+5 0 685
+3 0 685
jump=685 0x3877c79ae3 0 
* 0 

totals: 4300745 1703582 1014681 235 82 81 235 82 81 148628 3721 4922 100
