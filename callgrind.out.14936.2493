version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2493


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2955776839 - 2955909895
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 348 0 0 1 0 0 1
+3 0 348 0 0 0 0 0 0 0 0 348
+2 0 348
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=348 0x3877c7b8b0 0 
* 0 37308 9408 4984 21 4 0 21 4 0 8814 144
* 0 348 348 0 1 1 0 1 1 0 0 0 348

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 348 0 348 1 0 0 1
+1 0 348
+5 0 348
+3 0 348 0 348
+1 0 348
+4 0 348 0 0 1 0 0 1
+3 0 348
+4 0 348
+3 0 348 0 348 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=348 0x3877c7aa50 0 
* 0 78402 12661 11989 34 30 34 34 30 34 13037 438
* 0 348 348 0 1 1 0 1 1 0 0 0 348
+5 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
jcnd=348/348 +96 0 
* 0 
+96 0 348 0 0 1 0 0 1
+4 0 348 348
+1 0 348 348
+1 0 348 348

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 168
+4 * 168
+3 * 168 0 168
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=168 0x4044cc -35 
* * 840 336 336
+5 * 168 168
+1 * 168 168

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 168 0 168 1 0 0 1
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168 1 0 0 1
+4 +1 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=168 0x4049d4 -35 
* * 1008 336 504 1 0 0 1
+5 * 168 168
+1 * 168 168

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 168 0 168 1 0 0 1
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 168
+4 * 168
+3 * 168 0 168
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=168 0x404520 -35 
* * 840 336 336
+5 * 168 168
+1 * 168 168

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 168 0 168 1 0 0 1
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=168 0x404a28 -35 
* * 1008 336 504 1 0 1 1 0 1
+5 * 168 168
+1 * 168 168

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 84 0 84
+1 * 84
+3 * 84
+4 * 84 0 84
+4 * 84 0 84
+4 * 84 0 84
+4 +1 84 84
+4 * 84 84
+4 * 84 84
+4 * 84
+3 * 84
+3 * 84 0 84
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=84 0x403df2 -87 
* * 2016 672 756 0 6 2 0 6 2 84
+5 * 84 84
+1 * 84 84

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 168 0 168 1 0 0 1
+1 * 168
+3 * 168 0 168
+4 * 168 168
+4 * 168 168
+1 * 168 168

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 84 0 84
+1 * 84
+3 * 84
+4 * 84 0 84
+4 * 84 0 84
+4 * 84 0 84
+4 +1 84 84
+4 * 84 84
+4 * 84 84
+4 * 84
+3 * 84
+3 * 84 0 84
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=84 0x40406a -87 
* * 2016 672 756 0 5 5 0 5 5 84
+5 * 84 84
+1 * 84 84

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=12 +8 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=12 +7 113 
* * 72 24 24
+5 * 12 12
+1 * 12 12

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 168 0 168
+1 * 168
+3 * 168 0 168
+4 * 168 168
+4 * 168 168
+1 * 168 168

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 228 0 228
+1 * 228
+3 * 228 0 228
+4 +1 228 228
+4 * 228 228
+1 * 228 228

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 336 0 336 1 0 0 1
+1 * 336
+3 * 336 0 336
+4 +1 336 336 0 1 0 0 1
+4 * 336 336
+1 * 336 336

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 228 0 228
+1 * 228
+3 * 228 0 228 0 0 1 0 0 1
+4 +1 228 228
+4 * 228 228
+1 * 228 228

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 336 0 336 1 0 0 1
+1 * 336
+3 * 336
+4 * 336 0 336
+4 +1 336
+4 * 336
+3 * 336 0 336
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=336 0x404ffe 790 
* * 2016 1008 672 1 0 0 1
+5 * 336 336
+3 * 336 336
+1 * 336 336

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 336 0 336 1 0 0 1
+1 * 336
+3 * 336 0 336
+4 +1 336 336
+4 * 336 336
+1 * 336 336

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 336 0 336 1 0 0 1
+1 * 336
+3 * 336
+4 * 336 0 336
+4 +1 336
+4 * 336
+3 * 336 0 336 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=336 0x40500c 790 
* * 2016 1008 672 1 0 0 1
+5 * 336 336
+3 * 336 336
+1 * 336 336

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 168 0 168
+1 * 168
+3 * 168 0 168
+4 * 168 0 168
+4 * 168 168
+4 * 168 168
+1 * 168 168

fl=(5)
fn=(28)
0x404992 113 186 0 186 1 0 0 1
+1 * 186
+3 * 186 0 186
+4 +1 186
+10 * 186 186
+1 * 186 186

fn=(176)
0x4044cc 86 168 0 168
+1 * 168
+3 * 168 0 168
+4 * 168 168
+1 * 168 168

fn=(224)
0x403df2 129 84 0 84
+1 * 84
+3 * 84
+4 * 84 0 84
+4 * 84 0 84
+4 * 84 0 84
+4 +1 84 84
+4 * 84
+3 * 84
+5 * 84 0 84
cfi=(16)
cfn=(226)
calls=84 0x402d61 -20 
* * 588 252 252
+5 * 84
+3 * 84 0 0 0 0 0 0 0 0 84
+2 * 84 84
+4 * 84 84 0 0 6 0 0 6
+2 * 84 0 84 0 0 2 0 0 2
+2 * 84 84
+1 * 84 84

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 174 0 174
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 * 174 0 174
+4 +1 174 174
+4 * 174
+3 * 174 0 174
cob=(5)
cfi=(8)
cfn=(164)
calls=174 0x387e4bb2f0 0 
* * 19136 4782 2466 23 5 0 23 5 0 4506 112 174
* * 174 174 0 1 1 0 1 1 0 0 0 174
+5 * 174 174
+1 * 174 174

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 174 0 174
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 * 174 0 174
+4 +1 174 174
+4 * 174
+3 * 174 0 174
cob=(5)
cfi=(8)
cfn=(164)
calls=174 0x387e4bb2f0 0 
* * 19564 4974 2518 0 0 0 0 0 0 4656 32 174
* * 174 174 0 0 0 0 0 0 0 0 0 174
+5 * 174 174
+1 * 174 174

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 174 0 174 1 0 0 1
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 * 174 0 174
+4 +2 174 174
+4 * 174
+3 * 174 0 174
cfn=(102)
calls=174 0x4048de +12 
* * 1044 348 348 1 0 0 1
+5 * 174 174
+4 * 174 0 0 1 0 0 1
+3 * 174
+2 * 174 0 0 0 0 0 0 0 0 174
jcnd=174/174 +7 +3 
* * 
+7 +3 174 174
+4 * 174
+4 * 174
+3 * 174 0 174
cob=(5)
cfi=(8)
cfn=(32)
calls=174 0x387e4bd0b0 0 
* * 41851 7029 6216 21 13 21 21 13 21 6686 206 174
* * 174 174 0 0 0 0 0 0 0 0 0 174
+5 +1 174 174
+1 * 174 174

fn=(18)
0x404a28 81 168 0 168 1 0 0 1
+1 * 168
+3 * 168 0 168 0 0 1 0 0 1
+4 * 168 0 168
+4 * 168 168
+1 * 168 168

fn=(92)
0x4049d4 81 168 0 168 1 0 0 1
+1 * 168
+3 * 168 0 168
+4 * 168 0 168
+4 * 168 168
+1 * 168 168

fn=(196)
0x404520 86 168 0 168
+1 * 168
+3 * 168 0 168
+4 * 168 168
+1 * 168 168

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 174 0 174 1 0 0 1
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 * 174 0 174 1 0 0 1
+4 +2 174 174
+4 * 174
+3 * 174 0 174
cfn=(28)
calls=174 0x404992 +12 
* * 1044 348 348 1 0 0 1
+5 * 174 174
+4 * 174
+3 * 174
+2 * 174 0 0 0 0 0 0 0 0 174
jcnd=174/174 +7 +3 
* * 
+7 +3 174 174
+4 * 174
+4 * 174
+3 * 174 0 174
cob=(5)
cfi=(8)
cfn=(32)
calls=174 0x387e4bd0b0 0 
* * 42119 7024 6817 17 18 14 17 18 14 6699 232 174
* * 174 174 0 1 1 0 1 1 0 0 0 174
+5 +1 174 174
+1 * 174 174

fn=(102)
0x4048de 113 186 0 186 1 0 0 1
+1 * 186
+3 * 186 0 186
+4 +1 186
+10 * 186 186
+1 * 186 186

fn=(266)
0x40406a 129 84 0 84
+1 * 84
+3 * 84
+4 * 84 0 84
+4 * 84 0 84
+4 * 84 0 84
+4 +1 84 84
+4 * 84
+3 * 84
+5 * 84 0 84
cfi=(16)
cfn=(226)
calls=84 0x402d61 -20 
* * 588 252 252
+5 * 84
+3 * 84 0 0 0 0 0 0 0 0 84
+2 * 84 84
+4 * 84 84 0 0 5 0 0 5
+2 * 84 0 84 0 0 5 0 0 5
+2 * 84 84
+1 * 84 84

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=12 0x404caa 450 
* * 2478 794 753 2 0 3 2 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +2 168 168
+4 * 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=168 0x404484 107 
* * 57166 17744 16740 25 3 4 25 3 4 1912 109 332 41
+5 * 168 168
+1 * 168 168

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12 0 12
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=12 0x4048f2 107 
* * 2814 914 873 4 0 3 4 0 3 60 4 11
+5 * 12 12
+1 * 12 12

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +2 168 168 0 1 0 0 1
+4 * 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=168 0x404a36 450 
* * 52462 16064 15060 24 3 4 24 3 4 1912 109 332 41
+5 * 168 168
+1 * 168 168

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +2 168 168
+4 * 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=168 0x40439c 107 
* * 57166 17744 16740 7 1 7 7 1 7 1912 94 332
+5 * 168 168
+1 * 168 168

fn=(116)
0x40439c 107 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +10 168 168
+4 * 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=168 0x4047d7 -26 
* * 54814 16904 15900 7 1 7 7 1 7 1912 94 332
+5 +1 168 168
+1 * 168 168

fn=(118)
0x4047d7 91 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +2 168 168
+4 * 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=168 0x4049e2 450 
* * 52462 16064 15060 7 1 7 7 1 7 1912 94 332
+5 * 168 168
+1 * 168 168

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=12 0x404772 -25 
* * 2994 974 945 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +7 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(230)
calls=12 0x40465c -25 
* * 2994 974 945 5 0 3 5 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(232)
0x4048f2 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(234)
calls=12 0x404af4 -26 
* * 2646 854 813 4 0 3 4 0 3 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=12 0x404b99 -26 
* * 2646 854 813 2 0 3 2 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(274)
0x404b99 91 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=12 0x404cf0 450 
* * 2478 794 753 1 0 3 1 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fn=(50)
0x404484 107 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +10 168 168
+4 * 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(52)
calls=168 0x404829 -26 
* * 54814 16904 15900 25 3 4 25 3 4 1912 109 332 41
+5 +1 168 168
+1 * 168 168

fn=(270)
0x404772 256 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(272)
calls=12 0x4049a6 107 
* * 2814 914 873 2 0 3 2 0 3 60 2 11
+5 * 12 12
+1 * 12 12

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 168 0 168 1 0 0 1
+1 * 168
+3 * 168 0 168
+1 * 168
+4 * 168 0 168
+4 +2 168 168
+4 * 168 168
+4 * 168
+3 * 168 168
+4 * 168 168
+3 * 168
+3 * 168
+3 * 168
+4 * 168
+3 * 168 168
+4 * 168 168
+3 -1 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=168 0x403d98 +11 
* * 23654 6504 4122 1 0 0 1 0 0 4688 28 336
+5 +1 168 168
+4 * 168
+3 * 168 0 168
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=168 0x403296 -82 
* * 3864 1344 1344 1 0 0 1
+5 * 168
jump=168 +28 * 
* * 
+28 * 168
+4 * 168 168
+1 * 168 168
+1 * 168 168

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 696 0 696 1 0 0 1
+1 * 696
+3 * 696 0 696 0 0 1 0 0 1
+4 +1 696 696
+4 * 696 696 0 1 1 0 1 1
+4 * 696
+3 * 696 696
+4 * 696 696
+3 * 696
+3 * 696
+3 * 696
+4 * 696 696
+1 * 696 696

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 +2 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=168 0x404236 -14 
* * 47533 8957 8579 23 13 8 23 13 8 6768 192 336
+5 * 168 168
+4 * 168 0 168
+3 +1 168 168
+4 * 168 168 0 1 0 0 1
+3 * 168 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+3 * 168 168
+4 * 168
+4 * 168
+3 * 168 168
+4 * 168 0 168
+4 +1 168 168
+1 * 168 168

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 +2 168 168
+4 * 168 168 0 1 0 0 1
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=168 0x403fbe -14 
* * 47551 8984 8002 23 11 17 23 11 17 6814 194 336
+5 * 168 168
+4 * 168 0 168
+3 +1 168 168
+4 * 168 168
+3 * 168 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+3 * 168 168
+4 * 168
+4 * 168
+3 * 168 168
+4 * 168 0 168
+4 +1 168 168
+1 * 168 168

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 84 0 84
+1 * 84
+3 * 84 0 0 1 0 0 1
+4 * 84 0 84
+4 * 84 0 84
+4 +2 84 84
+4 * 84 84
+4 * 84 84
+4 * 84 84
+4 * 84
+3 * 84 0 0 0 0 0 0 0 0 84
jcnd=6/84 +51 +10 
* * 
+2 +3 78 78
+4 * 78 78
+4 * 78 78
+4 -1 78 78
+4 * 78
+3 * 78
+3 * 78 0 78
cfi=(3)
cfn=(264)
calls=78 0x4036b1 215 
* * 2964 1014 1092 0 5 2 0 5 2 78
+5 +2 78 78
+4 * 78 78
+4 * 78
+4 * 78 78
+4 * 78 0 78
+4 * 78
jump=78 +36 +8 
* * 
+2 +6 6 6
+4 * 6
+3 * 6 0 6
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=6 0x4039c4 556 
* * 138 54 42
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=6 0x4036de 318 
* * 8610 2623 2271 18 6 12 18 6 12 517 52 35
+5 +2 84 84
+1 * 84 84

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 354 0 354 1 0 0 1
+1 * 354
+3 * 354 0 354 1 0 0 1
+4 +1 354 354
+4 * 354 354
+1 * 354 354

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+3 * 168 0 168
+4 * 168
+4 * 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=168 0x404380 726 
* * 1680 840 672
+5 * 168 168
+4 * 168 168
+1 * 168 168

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 168 0 168
+1 * 168
+3 * 168 0 168
+1 * 168
+4 * 168 0 168 1 0 0 1
+4 +2 168 168
+4 * 168
+3 * 168 0 168
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=168 0x40325e 113 
* * 1008 504 336
+5 * 168
+3 * 168 168
+4 * 168 168
+4 * 168 168
+4 * 168 168
+3 -1 168
+3 * 168
+3 * 168 0 168
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=168 0x40326c 148 
* * 5208 1680 2016 4 0 0 4
+5 +1 168 168
+4 * 168
+3 * 168 0 168
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=168 0x4031ec 159 
* * 31820 9516 6258 27 6 0 27 6 0 4544 110 336
+5 * 168
jump=168 +28 * 
* * 
+28 * 168 0 0 1 0 0 1
+4 * 168 168
+1 * 168 168
+1 * 168 168

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 174 0 174 1 0 0 1
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 * 174 0 174
+4 +2 174 174
+5 * 174 0 0 0 0 0 0 0 0 174
+2 +1 174 174
+4 * 174 174
+4 * 174 174
+4 * 174
+3 * 174
+3 * 174 0 174
cfi=(5)
cfn=(160)
calls=174 0x4044d6 -65 
* * 21224 5478 3336 24 6 0 24 6 0 4506 112 348
+5 +1 174 174
+1 * 174 174

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 168 0 168
+1 * 168
+3 * 168 0 168
+1 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=168 0x4043ca -45 
* * 6048 2184 2352 4 0 4 4 0 4
+5 +1 168 168 0 1 0 0 1
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(20)
calls=168 0x404412 +43 
* * 51733 10973 9755 24 13 8 24 13 8 6768 192 336
+5 * 168
jump=168 +28 * 
* * 
+28 * 168
+4 * 168 168
+1 * 168 168
+1 * 168 168

fn=(14)
0x4043ca 90 168 0 168 1 0 0 1
+1 * 168
+3 * 168
+4 * 168 0 168 0 0 1 0 0 1
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfi=(4)
cfn=(16)
calls=168 0x404804 +24 
* * 3024 1008 1176 2 0 1 2 0 1
+5 * 168 168
+4 * 168 0 168 0 0 2 0 0 2
+7 * 168 168
+4 * 168 0 168 1 0 0 1
+8 * 168 168
+4 * 168 0 168
+8 +1 168 168
+1 * 168 168

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 168 0 168 1 0 0 1
+1 * 168
+3 * 168 0 168
+2 * 168 0 168
+2 * 168 0 168
+1 * 168 0 0 1 0 0 1
+4 * 168 0 168
+4 * 168 0 168
+4 +2 168 168
+4 * 168
+3 * 168 0 168
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=168 0x4039fc 117 
* * 1008 504 336 2 0 0 2
+5 * 168
+3 * 168 0 168
cfi=(3)
cfn=(84)
calls=168 0x4039ed -88 
* * 1008 504 336
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(2)
calls=168 0x402d74 645 
* * 2184 1008 336
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168
+3 * 168
+3 * 168 0 168 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=168 0x403a0a 134 
* * 61495 14360 12706 30 11 17 30 11 17 6814 194 336
+5 +4 168 168
+4 * 168
+3 * 168 0 168
cfn=(106)
calls=168 0x40325e 113 
* * 1008 504 336 1 0 0 1
+5 * 168
+3 * 168 168
+4 * 168 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=168 0x403a98 565 
* * 4200 1680 1344 2 0 0 2
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(112)
calls=168 0x403a68 547 
* * 4200 1680 1344
+5 * 168
+3 * 168
+3 * 168
+3 * 168
+3 * 168 0 168
cfi=(11)
cfn=(114)
calls=168 0x403ac9 -60 
* * 59686 18584 17748 7 1 7 7 1 7 1912 94 332
+5 -3 168 168
+4 * 168 0 168
+4 * 168
jump=168 +28 +4 
* * 
+28 +4 168
+4 * 168 168
+1 * 168 168
+2 * 168 168
+2 * 168 168
+1 * 168 168

fn=(188)
0x403d98 171 174 0 174 1 0 0 1
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 * 174 0 174
+4 +2 174 174
+5 * 174 0 0 0 0 0 0 0 0 174 6
+2 +1 174 174
+4 * 174 174
+4 * 174 174
+4 * 174
+3 * 174
+3 * 174 0 174
cfi=(5)
cfn=(190)
calls=174 0x40452a -65 
* * 21652 5670 3388 0 0 0 0 0 0 4656 32 348
+5 +1 174 174
+1 * 174 174

fn=(22)
0x404236 167 174 0 174 1 0 0 1
+1 * 174
+3 * 174
+4 * 174 0 174 1 0 0 1
+4 * 174 0 174
+4 0 174 174
+5 0 174 0 0 0 0 0 0 0 0 174
+2 0 174 174
+4 0 174 174
+4 0 174
+5 0 174
+3 0 174
+3 0 174 0 174
fi=(6) ???
cfi=(5)
cfn=(26)
calls=174 0x404730 99 
* 0 46643 8416 8209 21 19 14 21 19 14 6873 232 348
+5 0 174
fi=(6)
jump=174 +7 0 
* 0 
+7 0 174 174
+1 0 174 174

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 168 0 168 1 0 0 1
+1 * 168
+3 * 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+4 * 168 0 168
+4 * 168
+4 * 168 0 0 1 0 0 1
+4 * 168
+3 * 168
+3 * 168 0 168
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=168 0x404468 726 
* * 1680 840 672 1 0 0 1
+5 * 168 168
+4 * 168 168
+1 * 168 168

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+3 * 168 0 168
+4 * 168
+4 * 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfi=(10)
cfn=(44)
calls=168 0x404468 726 
* * 1680 840 672
+5 * 168 168
+4 * 168 168
+1 * 168 168

fn=(86)
0x403a0a 134 168 0 168
+1 * 168
+3 * 168 0 168
+1 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=168 0x4042e2 -45 
* * 6048 2184 2352 5 0 0 5
+5 +1 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168 1 0 0 1
cfn=(94)
calls=168 0x40432a +43 
* * 51751 11000 9178 24 11 17 24 11 17 6814 194 336
+5 * 168
jump=168 +28 * 
* * 
+28 * 168
+4 * 168 168
+1 * 168 168
+1 * 168 168

fn=(88)
0x4042e2 90 168 0 168 1 0 0 1
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168 1 0 0 1
cfi=(4)
cfn=(90)
calls=168 0x4047b2 +24 
* * 3024 1008 1176 3 0 0 3
+5 * 168 168
+4 * 168 0 168
+7 * 168 168
+4 * 168 0 168
+8 * 168 168
+4 * 168 0 168
+8 +1 168 168
+1 * 168 168

fn=(156)
0x4031ec 159 168 0 168 1 0 0 1
+1 * 168
+3 * 168 0 168
+1 * 168
+4 * 168 0 168
+4 +2 168 168
+4 * 168 168 0 1 0 0 1
+4 * 168
+3 * 168 168
+4 * 168 168
+3 * 168
+3 * 168
+3 * 168
+4 * 168
+3 * 168 168
+4 * 168 168
+3 -1 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(158)
calls=168 0x403ce6 +11 
* * 23252 6324 4074 24 6 0 24 6 0 4544 110 336
+5 +1 168 168
+4 * 168
+3 * 168 0 168
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=168 0x4031b8 -82 
* * 3864 1344 1344 1 0 0 1
+5 * 168
jump=168 +28 * 
* * 
+28 * 168
+4 * 168 168
+1 * 168 168
+1 * 168 168

fn=(172)
0x4031b8 79 168 0 168 1 0 0 1
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 168
+4 * 168
+3 * 168 0 168
cfi=(4)
cfn=(174)
calls=168 0x403ccc +42 
* * 2352 840 840
+5 * 168 168
+1 * 168 168

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=6 0x40404e 726 
* * 60 30 24 1 0 0 1
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=6 0x4045cc 650 
* * 192 66 66 1 0 0 1
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 6
+4 * 6
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(2)
calls=6 0x402d74 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(210)
calls=6 0x4045cc 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(246)
0x4039c4 556 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(248)
calls=6 0x4042c6 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 360 0 360 1 0 0 1
+1 * 360
+3 * 360 0 360
+4 +1 360 360
+4 * 360 360 0 0 2 0 0 2
+4 * 360
+3 * 360 360
+4 * 360 360
+3 * 360
+3 * 360
+3 * 360
+4 * 360 360
+1 * 360 360

fn=(106)
0x40325e 113 354 0 354 1 0 0 1
+1 * 354
+3 * 354 0 354
+4 +1 354 354
+4 * 354 354
+1 * 354 354

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(204)
calls=6 0x40404e 726 
* * 60 30 24
+5 * 6 6
+4 * 6 6
+1 * 6 6

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6
+3 * 6 6
+4 * 6 0 0 1 0 0 1
+3 * 6
+3 * 6
+2 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +14 +3 
* * 
+14 +3 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(12)
cfn=(214)
calls=6 0x4045ee 216 
* * 78 42 18 0 0 0 0 0 0 6
+5 * 6 6
+3 * 6
+3 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfn=(10)
calls=6 0x402f54 645 
* * 78 36 12
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
+2 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(254)
calls=6 0x40470e 650 
* * 192 66 66
+5 * 6 6
+4 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 +16 * 
* * 
+16 * 6 6 0 1 0 0 1
+4 +1 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 180 0 180 1 0 0 1
+1 * 180
+3 * 180 0 180 0 0 1 0 0 1
+4 +1 180 180
+4 * 180 180
+1 * 180 180

fn=(82)
0x4039fc 117 180 0 180 1 0 0 1
+1 * 180
+3 * 180 0 180 1 0 0 1
+4 +1 180 180
+4 * 180 180
+1 * 180 180

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 84 0 84
+1 * 84
+3 * 84
+4 * 84 0 84
+4 * 84 0 84
+4 +2 84 84
+4 * 84 84
+4 * 84 84
+4 * 84 84
+4 * 84
+3 * 84 0 0 0 0 0 0 0 0 84 6
jcnd=6/84 +51 +10 
* * 
+2 +3 78 78
+4 * 78 78
+4 * 78 78
+4 -1 78 78
+4 * 78
+3 * 78
+3 * 78 0 78
cfi=(3)
cfn=(222)
calls=78 0x403373 215 
* * 2964 1014 1092 0 5 1 0 5 1 78
+5 +2 78 78
+4 * 78 78
+4 * 78
+4 * 78 78
+4 * 78 0 78
+4 * 78
jump=78 +36 +8 
* * 
+2 +6 6 6 0 1 0 0 1
+4 * 6
+3 * 6 0 6
cfn=(202)
calls=6 0x403688 556 
* * 138 54 42 2 0 0 2
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=6 0x4033a0 318 
* * 8298 2589 2243 26 3 8 26 3 8 452 18 35
+5 +2 84 84
+1 * 84 84

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 168 0 168 1 0 0 1
+1 * 168
+3 * 168 0 168
+2 * 168 0 168
+2 * 168 0 168
+1 * 168
+4 * 168 0 168 1 0 0 1
+4 * 168 0 168
+4 +2 168 168
+4 * 168
+3 * 168 0 168
cfn=(6)
calls=168 0x403b08 117 
* * 1008 504 336 1 0 1 1 0 1
+5 * 168
+3 * 168 0 168
cfi=(3)
cfn=(8)
calls=168 0x403afa -88 
* * 1008 504 336 1 0 0 1
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(10)
calls=168 0x402f54 645 
* * 2184 1008 336 1 1 0 1 1
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168
+3 * 168
+3 * 168 0 168
cfn=(12)
calls=168 0x403b16 134 
* * 61477 14333 13283 29 13 12 29 13 12 6768 192 336
+5 +4 168 168 0 1 0 0 1
+4 * 168
+3 * 168 0 168
cfn=(40)
calls=168 0x40333c 113 
* * 1008 504 336 2 0 0 2
+5 * 168
+3 * 168 168
+4 * 168 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(42)
calls=168 0x403ba4 565 
* * 4200 1680 1344 3 0 0 3
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(46)
calls=168 0x403b74 547 
* * 4200 1680 1344
+5 * 168
+3 * 168
+3 * 168
+3 * 168
+3 * 168 0 168 1 0 0 1
cfi=(11)
cfn=(48)
calls=168 0x403bd5 -60 
* * 59686 18584 17748 26 3 4 26 3 4 1912 109 332 41
+5 -3 168 168
+4 * 168 0 168
+4 * 168
jump=168 +28 +4 
* * 
+28 +4 168
+4 * 168 168
+1 * 168 168
+2 * 168 168
+2 * 168 168
+1 * 168 168

fn=(108)
0x403a98 565 168 0 168 1 0 0 1
+1 * 168
+3 * 168
+4 * 168 0 168
+4 +1 168 168
+4 * 168 168
+4 * 168 0 168
+4 * 168
+4 * 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfi=(10)
cfn=(110)
calls=168 0x404380 726 
* * 1680 840 672 1 0 0 1
+5 * 168 168
+4 * 168 168
+1 * 168 168

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 168 0 168
+1 * 168
+3 * 168 0 168
+1 * 168
+4 * 168 0 168 1 0 0 1
+4 +2 168 168
+4 * 168
+3 * 168 0 168
cfn=(40)
calls=168 0x40333c 113 
* * 1008 504 336
+5 * 168
+3 * 168 168
+4 * 168 168
+4 * 168 168
+4 * 168 168
+3 -1 168
+3 * 168
+3 * 168 0 168
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=168 0x40334a 148 
* * 5208 1680 2016 2 0 0 2
+5 +1 168 168
+4 * 168
+3 * 168 0 168
cfn=(186)
calls=168 0x4032ca 159 
* * 32222 9696 6306 3 0 0 3 0 0 4688 28 336
+5 * 168
jump=168 +28 * 
* * 
+28 * 168 0 0 1 0 0 1
+4 * 168 168
+1 * 168 168
+1 * 168 168

fn=(210)
0x4045cc 650 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(82)
calls=12 0x4039fc 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(212)
calls=12 0x4048c3 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fn=(96)
0x403fbe 167 174 0 174 1 0 0 1
+1 * 174 0 0 1 0 0 1
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 0 174 174
+5 0 174 0 0 0 0 0 0 0 0 174
+2 0 174 174
+4 0 174 174
+4 0 174
+5 0 174
+3 0 174
+3 0 174 0 174
fi=(6)
cfi=(5)
cfn=(100)
calls=174 0x40461a 99 
* 0 46375 8421 7608 24 13 21 24 13 21 6860 206 348
+5 0 174
fi=(6)
jump=174 +7 0 
* 0 
+7 0 174 174
+1 0 174 174

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 11130 0 11130
+1 * 11130
+3 * 11130 0 11130
+4 * 11130 0 11130
+4 +1 11130 11130
+4 * 11130 11130
+3 * 11130 11130
+4 * 11130
+4 * 11130
+3 * 11130 11130
+1 * 11130 11130

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 11130 0 11130
+1 * 11130
+3 * 11130 0 11130 1 0 0 1
+4 * 11130 0 11130
+4 +1 11130 11130
+4 * 11130 11130
+3 * 11130 11130
+4 * 11130
+4 * 11130
+3 * 11130 11130
+1 * 11130 11130

fn=(192)
0x403296 79 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 168
+4 * 168
+3 * 168 0 168
cfi=(4)
cfn=(194)
calls=168 0x403d7e +42 
* * 2352 840 840 1 0 0 1
+5 * 168 168
+1 * 168 168

fn=(254)
0x40470e 650 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(6)
calls=12 0x403b08 117 
* * 72 36 24
+5 * 12
+3 * 12 0 12
cfi=(3)
cfn=(256)
calls=12 0x404978 221 
* * 180 60 60
+5 * 12 12
+1 * 12 12

fl=(12)
fn=(54)
0x404a36 450 168 0 168
+1 * 168
+3 * 168 0 168
+1 * 168
+4 * 168 0 168 1 0 0 1
+4 * 168 0 168
+4 * 168 0 168
+4 +10 168 168
+4 * 168
+3 * 168 0 168
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=168 0x404c38 288 
* * 2520 1008 840 3 0 0 3
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(56)
calls=168 0x404c38 288 
* * 2520 1008 840
+5 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=168 0x404c52 -36 
* * 43726 13040 12036 20 3 4 20 3 4 1912 109 332 41
+5 +1 168
+4 * 168 168
+1 * 168 168
+1 * 168 168

fn=(60)
0x404c52 424 168 0 168
+1 * 168
+3 * 168 0 168
+2 * 168 0 168
+1 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +4 168 168
+4 * 168
+3 * 168 0 168
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=168 0x40492d 277 
* * 2520 1008 840 2 0 0 2
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=168 0x404d9d 277 
* * 4200 1512 1344 2 0 1 2 0 1
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(66)
calls=168 0x404d9d 277 
* * 4200 1512 1344
+5 * 168
+3 * 168
+3 * 168
+3 * 168 0 168
cfn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
calls=168 0x404db7 -49 
* * 28102 7832 6828 15 3 3 15 3 3 1912 109 332 41
+5 +1 168
+4 * 168 168
+1 * 168 168
+2 * 168 168
+1 * 168 168

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=12 0x404f37 -22 
* * 798 218 165 0 0 3 0 0 3 60 2 11
+5 +1 12 12
+1 * 12 12

fn=(62)
0x40492d 277 204 0 204 1 0 0 1
+1 * 204
+3 * 204
+4 * 204 0 204
+4 +1 204 204
+4 * 204
+3 * 204 0 204 1 0 0 1
cfi=(13)
cfn=(64)
calls=204 -33 -66 
* * 1224 612 408
+5 * 204 204
+1 * 204 204

fn=(66)
0x404d9d 277 336 0 336
+1 * 336
+3 * 336
+4 * 336 0 336
+4 +1 336 336
+4 * 336
+3 * 336 0 336
cfi=(13)
cfn=(68)
calls=336 0x404f1a -58 
* * 5376 2016 1680 2 0 1 2 0 1
+5 * 336 336
+1 * 336 336

fn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
0x404de8 424 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=12 0x404878 277 
* * 180 72 60 0 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(128)
calls=12 0x404878 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=12 0x404f9c -49 
* * 978 278 237 0 0 2 0 0 2 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(214)
0x4045ee 216 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 +5 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +8 +2 
* * 
+8 +2 12 12
+4 +1 12 12
+1 * 12 12

fn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
0x40455a 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(130)
calls=24 0x40486a -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(62)
calls=12 0x40492d 277 
* * 180 72 60
+5 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfn=(282)
calls=12 0x404fcd -49 
* * 978 278 237 0 0 3 0 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(120)
0x4049e2 450 168 0 168
+1 * 168
+3 * 168 0 168
+1 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +10 168 168
+4 * 168
+3 * 168 0 168
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=168 0x404bc6 288 
* * 2520 1008 840 3 0 0 3
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(122)
calls=168 0x404bc6 288 
* * 2520 1008 840
+5 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=168 0x404be0 -36 
* * 43726 13040 12036 4 1 7 4 1 7 1912 94 332
+5 +1 168
+4 * 168 168
+1 * 168 168
+1 * 168 168

fn=(128)
0x404878 277 204 0 204
+1 * 204
+3 * 204
+4 * 204 0 204 1 0 0 1
+4 +1 204 204
+4 * 204
+3 * 204 0 204
cfi=(13)
cfn=(130)
calls=204 -33 -66 
* * 1224 612 408 0 0 1 0 0 1
+5 * 204 204
+1 * 204 204

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 336 0 336
+1 * 336
+3 * 336
+4 * 336 0 336
+4 +1 336 336
+4 * 336
+3 * 336 0 336
cfi=(13)
cfn=(134)
calls=336 0x404e98 -58 
* * 5376 2016 1680 2 0 0 2
+5 * 336 336
+1 * 336 336

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +8 168 0 168
+4 +3 168 168
+4 * 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=168 0x404eb5 -22 
* * 25582 6992 5820 1 1 7 1 1 7 1912 94 332
+5 +1 168 168
+1 * 168 168

fn=(242)
0x404f9c 379 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +8 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(140)
calls=12 0x404eb5 -22 
* * 798 218 165 0 0 2 0 0 2 60 4 11
+5 +1 12 12
+1 * 12 12

fn=(276)
0x404cf0 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12
+4 * 12
+3 * 12 0 12
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(278)
calls=12 0x40469c 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(280)
calls=12 0x404e40 -36 
* * 1854 578 537 1 0 3 1 0 3 60 2 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(278)
0x40469c 288 24 0 24
+1 * 24
+3 * 24
+4 * 24 0 24
+4 +1 24 24
+4 * 24
+3 * 24 0 24
cfi=(13)
cfn=(64)
calls=24 0x40491f -77 
* * 144 72 48
+5 * 24 24
+1 * 24 24

fn=(122)
0x404bc6 288 336 0 336 1 0 0 1
+1 * 336
+3 * 336
+4 * 336 0 336
+4 +1 336 336
+4 * 336
+3 * 336 0 336
cfi=(13)
cfn=(124)
calls=336 0x404d36 -77 
* * 2016 1008 672 2 0 0 2
+5 * 336 336
+1 * 336 336

fn=(56)
0x404c38 288 336 0 336 1 0 0 1
+1 * 336
+3 * 336
+4 * 336 0 336 1 0 0 1
+4 +1 336 336
+4 * 336
+3 * 336 0 336
cfi=(13)
cfn=(58)
calls=336 0x404d8f -77 
* * 2016 1008 672 1 0 0 1
+5 * 336 336
+1 * 336 336

fn=(74)
0x404f37 368 180 0 180
+1 * 180
+3 * 180
+4 * 180 0 180 1 0 0 1
+4 * 180 0 180
+4 * 180 0 180
+4 +2 180 180
+4 * 180 180
+4 * 180
+3 * 180
+3 * 180
+4 * 180 0 180
+4 +1 180 180
+5 * 180 0 0 0 0 0 0 0 0 180
jcnd=6/180 +33 +2 
* * 
+2 +1 174 174
+4 * 174
+8 * 174 174
+4 * 174 174
+4 * 174
+3 * 174 0 0 1 0 0 1
+3 * 174 0 174 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=174 0x3877c83840 0 
* * 21388 5254 4911 11 2 5 11 2 5 1792 111 169 41
* * 174 174 0 1 1 0 1 1 0 0 0 174
+5 +1 180 180
+4 * 180
+8 * 180 180
+4 * 180
+3 +1 180 180
+1 * 180 180

fn=(140)
0x404eb5 368 180 0 180
+1 * 180
+3 * 180
+4 * 180 0 180 1 0 0 1
+4 * 180 0 180
+4 * 180 0 180 0 0 1 0 0 1
+4 +2 180 180
+4 * 180 180
+4 * 180
+3 * 180
+3 * 180
+4 * 180 0 180
+4 +1 180 180
+5 * 180 0 0 0 0 0 0 0 0 180
jcnd=6/180 +33 +2 
* * 
+2 +1 174 174
+4 * 174
+8 * 174 174
+4 * 174 174
+4 * 174
+3 * 174
+3 * 174 0 174
cob=(2)
cfi=(9)
cfn=(78)
calls=174 0x3877c83840 0 
* * 21388 5254 4911 0 1 8 0 1 8 1792 98 169
* * 174 174 0 0 0 0 0 0 0 0 0 174
+5 +1 180 180
+4 * 180
+8 * 180 180
+4 * 180
+3 +1 180 180
+1 * 180 180

fn=(72)
0x404db7 379 168 0 168
+1 * 168
+3 * 168
+4 * 168 0 168 1 0 0 1
+4 * 168 0 168
+4 * 168 0 168
+4 +8 168 0 168
+4 +3 168 168
+4 * 168 168
+4 * 168 168
+4 * 168
+3 * 168
+3 * 168 0 168
cfn=(74)
calls=168 0x404f37 -22 
* * 25582 6992 5820 14 3 3 14 3 3 1912 109 332 41
+5 +1 168 168
+1 * 168 168

fn=(126)
0x404be0 424 168 0 168
+1 * 168
+3 * 168 0 168
+2 * 168 0 168
+1 * 168
+4 * 168 0 168
+4 * 168 0 168
+4 * 168 0 168
+4 +4 168 168
+4 * 168
+3 * 168 0 168
cfn=(128)
calls=168 0x404878 277 
* * 2520 1008 840 1 0 0 1
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(132)
calls=168 0x404d44 277 
* * 4200 1512 1344 2 0 0 2
+5 * 168
+3 * 168 168
+4 * 168
+3 * 168 0 168
cfn=(132)
calls=168 0x404d44 277 
* * 4200 1512 1344
+5 * 168
+3 * 168
+3 * 168
+3 * 168 0 168
cfn=(138)
calls=168 0x404d5e -49 
* * 28102 7832 6828 1 1 7 1 1 7 1912 94 332
+5 +1 168
+4 * 168 168
+1 * 168 168
+2 * 168 168
+1 * 168 168

fn=(236)
0x404caa 450 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +10 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(238)
calls=12 0x40455a 288 
* * 180 72 60
+5 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(240)
calls=12 0x404de8 -36 
* * 1854 578 537 1 0 3 1 0 3 60 4 11
+5 +1 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fn=(204)
0x40404e 726 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=6 0x403e26 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(70)
0x40500c 790 336 0 336 1 0 0 1
+1 * 336
+3 * 336 0 336
+4 +1 336 336
+4 * 336 336
+1 * 336 336

fn=(110)
0x404380 726 336 0 336 1 0 0 1
+1 * 336
+3 * 336 0 336
+4 * 336 0 336
+4 * 336 336
+4 * 336 336
+3 * 336 336
+4 * 336 0 336
+3 * 336 336
+1 * 336 336

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 +2 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12 1 0 0 1
+5 * 6 6
+3 * 6
+3 * 6 6
+4 * 6
+3 * 6 0 6
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+4 * 6 6
+1 * 6 6
+1 * 6 6

fn=(136)
0x404ffe 790 336 0 336 1 0 0 1
+1 * 336
+3 * 336 0 336
+4 +1 336 336
+4 * 336 336
+1 * 336 336

fn=(44)
0x404468 726 336 0 336
+1 * 336
+3 * 336 0 336
+4 * 336 0 336
+4 * 336 336
+4 * 336 336
+3 * 336 336
+4 * 336 0 336 1 0 0 1
+3 * 336 336
+1 * 336 336

fn=(248)
0x4042c6 726 12 0 12
+1 * 12
+3 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12 0 12
+3 * 12 12
+1 * 12 12

fn=(220)
0x403e26 790 24 0 24 1 0 0 1
+1 * 24
+3 * 24 0 24
+4 +1 24 24
+4 * 24 24
+1 * 24 24

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 174 0 174 1 0 0 1
+1 * 174
+3 * 174 0 174
+4 * 174 0 174 1 0 0 1
+4 * 174 174
+1 * 174 174

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 174 0 174 1 0 0 1
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 +4 174 174
+4 * 174 174
+4 * 174
+3 * 174
+3 * 174 0 174
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=174 0x40454c -14 
* * 1044 348 522 1 0 0 1
+5 +2 174 174
+1 * 174 174

fn=(150)
0x40326c 148 174 0 174
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 * 174 0 174
+4 +3 174 174 0 1 0 0 1
+4 * 174 174
+4 * 174
+3 * 174
+3 * 174 0 174
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=174 0x403d1a -29 
* * 3132 1044 1218 3 0 0 3
+5 +1 174 174
+1 * 174 174

fn=(180)
0x40334a 148 174 0 174
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 * 174 0 174
+4 +3 174 174
+4 * 174 174
+4 * 174
+3 * 174
+3 * 174 0 174
cfn=(182)
calls=174 0x403dcc -29 
* * 3132 1044 1218 2 0 0 2
+5 +1 174 174
+1 * 174 174

fn=(152)
0x403d1a 122 174 0 174 1 0 0 1
+1 * 174
+3 * 174
+4 * 174 0 174
+4 * 174 0 174
+4 +4 174 174
+4 * 174 174
+4 * 174
+3 * 174
+3 * 174 0 174
cfn=(154)
calls=174 0x4044f8 -14 
* * 1044 348 522 2 0 0 2
+5 +2 174 174
+1 * 174 174

fn=(184)
0x40454c 112 174 0 174 1 0 0 1
+1 * 174
+3 * 174 0 174
+4 * 174 0 174
+4 * 174 174
+1 * 174 174

fl=(15)
fn=(250)
0x4036de 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x403799 +21 
* * 
0x403799 +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(252)
calls=6 0x404104 1336 
* * 1086 402 282 4 0 0 4 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(258)
calls=6 0x4041ce 538 
* * 132 54 42
+5 * 6 0 6 1 0 0 1
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(260)
calls=6 0x4041f3 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(22)
calls=6 0x404236 167 
* * 1894 329 326 0 6 6 0 6 6 279 40 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6
+4 * 6 0 0 1 0 0 1
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(264)
calls=6 0x4036b1 215 
* * 228 78 84 0 0 3 0 0 3 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -88 
* * 1866 590 561 3 0 3 3 0 3 54 2 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(262)
calls=6 0x40409e 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(268)
calls=6 0x40426e -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(40)
calls=6 0x40333c 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6
+4 * 6 6
+3 -1 6 0 0 1 0 0 1
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(180)
calls=6 0x40334a 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(188)
calls=6 0x403d98 171 
* * 782 210 136 0 0 0 0 0 0 142 10 12
+5 +3 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x4039ba * 
* * 
0x4039ba * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fn=(206)
0x4033a0 318 6 0 6 1 0 0 1
+1 * 6
+3 * 6 0 6
+2 * 6 0 6
+1 * 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 +4 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+4 * 6
+3 * 6 0 0 0 0 0 0 0 0 6
jcnd=6/6 0x40345e +21 
* * 
0x40345e +21 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(2)
cfn=(208)
calls=6 0x403e8c 1336 
* * 1086 402 282 5 0 0 5 0 0 24
+5 * 6 0 6
+4 +1 6 6
+4 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(216)
calls=6 0x403f56 538 
* * 132 54 42
+5 * 6 0 6
+4 * 6
+4 * 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(10)
cfn=(218)
calls=6 0x403f7b 896 
* * 204 78 60 1 0 0 1
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(2)
cfn=(96)
calls=6 0x403fbe 167 
* * 1608 307 302 3 2 4 3 2 4 220 12 12
+5 * 6 0 6
+4 +1 6 6
+4 * 6 0 6
+4 +12 6 6 0 1 0 0 1
+4 * 6
+8 * 6 6
+4 * 6
+4 * 6 6
+4 -5 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(3)
cfn=(222)
calls=6 0x403373 215 
* * 228 78 84 0 1 1 0 1 1 6
+5 +7 6 0 6
+8 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6
+4 * 6 0 0 1 0 0 1
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 * 6 6
+4 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -88 
* * 1866 590 561 6 0 3 6 0 3 54 4 11
+5 * 6 0 6
+4 +5 6 0 6
+5 +5 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6
+4 * 6
+3 * 6 0 6
cfi=(10)
cfn=(220)
calls=6 0x403e26 790 
* * 36 18 12
+5 * 6 6
+3 -3 6 6
+4 * 6
+3 * 6
+3 * 6
+3 * 6 0 6
cfi=(11)
cfn=(228)
calls=6 0x403ff6 -95 
* * 1308 456 456 0 0 0 0 0 0 6
+5 * 6 0 6
+4 +16 6 6
+4 * 6
+3 * 6 0 6
cfi=(2)
cfn=(106)
calls=6 0x40325e 113 
* * 36 18 12
+5 * 6
+3 * 6 6
+4 * 6 6
+4 * 6 6 0 1 0 0 1
+4 * 6 6
+3 -1 6
+3 * 6
+3 * 6 0 6
cfi=(14)
cfn=(150)
calls=6 0x40326c 148 
* * 186 60 72
+5 +4 6 6
+4 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6 6
+4 * 6 6
+3 * 6 6
+4 -2 6
+3 * 6
+3 * 6 0 6 1 0 0 1
cfi=(2)
cfn=(158)
calls=6 0x403ce6 171 
* * 756 198 132 1 0 0 1 0 0 136 2 12
+5 +3 6 6
+4 * 6 6
+4 * 6 0 6
+3 +1 6 6
+4 * 6 6
+4 * 6 0 6
+4 +1 6 6
+4 * 6
+8 * 6 6
+4 * 6
+3 * 6 6
+4 * 6 0 6
+4 +2 6
jump=6 0x40367f * 
* * 
0x40367f * 6 0 0 1 0 0 1
+4 * 6 6
+1 * 6 6
+2 * 6 6
+1 * 6 6

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 84 0 84 1 0 0 1
+1 * 84
+3 * 84
+4 * 84 0 84
+4 * 84 0 84
+4 +1 84 84
+4 * 84
+3 * 84 0 84
cfi=(2)
cfn=(2)
calls=84 0x402d74 645 
* * 1092 504 168
+5 * 84
+3 * 84 0 84
+3 +1 84 84
+6 * 84 0 84
+3 * 84 84
+6 * 84 0 84
+3 +1 84 84
+6 * 84 0 84 1 0 0 1
+3 * 84 84
+6 * 84 0 84
+3 +2 84 0 84
+7 * 84
jump=84 +86 * 
* * 
+2 +1 3654 3654
+3 * 3654
+3 * 3654 3654
+4 * 3654
+3 * 3654
+3 * 3654 0 3654
cfi=(2)
cfn=(144)
calls=3654 0x402d9a 770 
* * 40194 18270 10962
+5 * 3654 3654
+4 * 3654 3654
+5 * 3654
+4 * 3654 0 3654
+5 +1 3654 3654
+3 * 3654
+3 * 3654 3654
+4 * 3654
+3 * 3654
+3 * 3654 0 3654
cfi=(2)
cfn=(146)
calls=3654 0x402dba 770 
* * 40194 18270 10962 1 0 0 1
+5 * 3654 3654
+2 * 3654
+4 * 3654 3654
+5 * 3654
+4 * 3654 0 3654
+5 -2 3654 0 3654
+4 * 3654 3654
+3 * 3654
+3 * 3654 3654
+3 * 3654 0 0 0 0 0 0 0 0 3654 85
jcnd=3570/3654 -93 +1 
* * 
-9 * 84 84 0 1 0 0 1
+3 * 84
+3 * 84 84
+3 * 84 0 0 0 0 0 0 0 0 84
jcnd=84/84 -93 +1 
* * 
+2 +4 84 84
+3 * 84
+3 * 84
+4 * 84 84 0 1 0 0 1
+5 * 84
+4 * 84
+3 * 84 0 84
+5 +1 84 84
+3 * 84
+3 * 84
+4 * 84 84
+5 * 84
+4 * 84
+3 * 84 0 84
+5 +1 84 0 84
+7 * 84
jump=84 0x4016ee * 
* * 
+2 +1 3654 3654
+3 * 3654
+3 * 3654 3654
+4 * 3654
+3 * 3654 0 0 1 0 0 1
+3 * 3654 0 3654
cfi=(2)
cfn=(146)
calls=3654 0x402dba 770 
* * 40194 18270 10962
+5 * 3654 3654
+2 * 3654
+4 * 3654 3654
+5 * 3654 0 3654
+5 +1 3654 3654
+3 * 3654
+3 * 3654 3654
+4 * 3654
+3 * 3654
+3 * 3654 0 3654
cfi=(2)
cfn=(144)
calls=3654 0x402d9a 770 
* * 40194 18270 10962
+5 * 3654 3654
+4 * 3654 3654
+5 * 3654 0 3654
+5 +1 3654 3654
+5 * 3654 3654
+5 * 3654 3654
+5 * 3654
+4 * 3654 0 3654
+5 +1 3654 3654
+5 * 3654 3654
+5 * 3654 3654
+5 * 3654
+4 * 3654 0 3654
+5 -4 3654 0 3654
+4 * 3654 3654
+3 * 3654
+3 * 3654 3654
+3 * 3654 0 0 0 0 0 0 0 0 3654 85
jcnd=3570/3654 0x401672 +1 
* * 
-9 * 84 84 0 1 0 0 1
+3 * 84
+3 * 84 84
+3 * 84 0 0 0 0 0 0 0 0 84
jcnd=84/84 0x401672 +1 
* * 
+6 +6 84 84 0 1 0 0 1
+5 * 84 84
+5 * 84 0 84
+5 +2 84 84
+3 +1 84 0 84
+3 * 84 84
+5 * 84 84
+1 * 84 84

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 84
+7 * 84
+7 * 84
+3 * 84
+3 * 84 0 84
cfi=(2)
cfn=(4)
calls=84 0x4030b2 310 
* * 71749 20586 18843 65 17 16 65 17 16 4352 202 334 41
+5 * 84
+7 * 84
+7 * 84
+3 * 84
+3 * 84 0 84
cfi=(2)
cfn=(80)
calls=84 0x402ff4 310 
* * 72045 20618 18577 45 12 22 45 12 22 4433 212 334
+5 * 84 0 0 1 0 0 1
+7 * 84
+7 * 84
+3 * 84
+3 * 84 0 84
cfn=(142)
calls=84 0x401585 -52 
* * 385476 170184 89124 8 0 0 8 0 0 7476 170
+5 * 84 0 84
+8 * 84 84
+6 * 84 0 84
+6 * 84
+7 * 84
+3 * 84 0 84
cfi=(2)
cfn=(148)
calls=84 0x402df4 414 
* * 21034 6606 4809 33 6 0 33 6 0 2272 57 168
+5 * 84
+7 * 84
+3 * 84 0 84 1 0 0 1
cfi=(2)
cfn=(178)
calls=84 0x402e74 414 
* * 21235 6696 4833 7 0 0 7 0 0 2344 16 168
+5 +2 84
+7 * 84
+7 * 84
+3 * 84
+3 * 84 0 84
cfi=(2)
cfn=(4)
calls=84 0x4030b2 310 
* * 71422 20563 18740 2 0 1 2 0 1 4328 99 334
+5 * 84
+7 * 84
+7 * 84
+3 * 84
+3 * 84 0 84
cfi=(2)
cfn=(80)
calls=84 0x402ff4 310 
* * 71144 20558 18429 0 0 2 0 0 2 4293 76 334
+5 * 84 84
+6 * 84 0 0 1 0 0 1
+7 * 84
+7 * 84 0 84
+6 * 84 84
+8 * 84
+3 * 84
+3 * 84 0 84
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=84 0x401719 -33 
* * 180348 74928 41454 4 0 0 4 0 0 3738 85
+5 * 84 0 84
+8 * 84 84
+6 * 84 0 84
+6 * 84
+7 * 84 0 0 1 0 0 1
+3 * 84 0 84
cfi=(2)
cfn=(148)
calls=84 0x402df4 414 
* * 21034 6606 4809 0 0 0 0 0 0 2272 53 168
+5 * 84
+7 * 84
+3 * 84 0 84
cfi=(2)
cfn=(178)
calls=84 0x402e74 414 
* * 21235 6696 4833 0 0 0 0 0 0 2344 12 168
+5 +2 84 84
+7 * 84
+3 * 84 0 84
cfi=(2)
cfn=(2)
calls=84 0x402d74 645 
* * 1092 504 168
+5 * 84 84
+6 * 84
+3 * 84
+3 * 84
+3 * 84 84
+7 * 84
+3 * 84 0 0 1 0 0 1
+3 * 84 0 84
cfi=(2)
cfn=(144)
calls=84 0x402d9a 770 
* * 924 420 252
+5 * 84
+3 * 84
+7 * 84
+3 * 84
+3 * 84 0 84
cfi=(2)
cfn=(200)
calls=84 0x402eda 901 
* * 13560 4725 3797 29 8 9 29 8 9 614 24 35
+5 +1 84 84
+7 * 84
+3 * 84 0 84
cfi=(2)
cfn=(10)
calls=84 0x402f54 645 
* * 1092 504 168 0 1 0 0 1
+5 * 84 84
+6 * 84
+3 * 84
+3 * 84
+3 * 84 84
+7 * 84 0 0 1 0 0 1
+3 * 84
+3 * 84 0 84
cfi=(2)
cfn=(146)
calls=84 0x402dba 770 
* * 924 420 252
+5 * 84
+3 * 84
+7 * 84
+3 * 84
+3 * 84 0 84
cfi=(2)
cfn=(244)
calls=84 0x402f7a 901 
* * 13872 4759 3825 19 11 14 19 11 14 679 52 35
+5 +1 84 84
+7 * 84
+3 * 84 0 84
cfi=(2)
cfn=(10)
calls=84 0x402f54 645 
* * 1092 504 168
+5 * 84 84
+6 * 84
+3 * 84
+3 * 84
+3 * 84 84 0 1 0 0 1
+7 * 84
+3 * 84
+3 * 84 0 84
cfi=(2)
cfn=(146)
calls=84 0x402dba 770 
* * 924 420 252
+5 * 84 84
+2 * 84
+4 * 84 84
+8 * 84 84
+8 * 84 0 84
+8 +1 84 84
+7 * 84
+3 * 84 0 84
cfi=(2)
cfn=(2)
calls=84 0x402d74 645 
* * 1092 504 168
+5 * 84 84 0 1 0 0 1
+6 * 84
+3 * 84
+3 * 84
+3 * 84 84
+7 * 84
+3 * 84
+3 * 84 0 84
cfi=(2)
cfn=(144)
calls=84 0x402d9a 770 
* * 924 420 252
+5 * 84 84
+4 * 84 84
+8 * 84
+4 * 84 84
+8 * 84
+3 * 84 0 84
+8 +2 84 0 84
+7 -12 84 84
+8 * 84 84
+7 * 84 0 0 0 0 0 0 0 0 84 1
jcnd=1/84 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 84
+7 * 84
+3 * 84 0 84
cfi=(2)
cfn=(2)
calls=84 0x402d74 645 
* * 1092 504 168 2 0 1 2 0 1
+5 * 84
+3 * 84 84
+7 * 84
+3 * 84 0 84
cfi=(2)
cfn=(2)
calls=84 0x402d74 645 
* * 1092 504 168 0 1 0 0 1
+5 * 84
+3 * 84 0 0 0 0 0 0 0 0 84
+2 * 84 0 0 1 0 0 1
+5 * 84
jump=84 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 84
+2 * 84 0 0 0 0 0 0 0 0 84
jcnd=84/84 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 84 0 84
+1 * 84
+3 * 84
+4 * 84 0 84
+4 * 84 0 84
+4 * 84 0 84
+5 +1 84 84
+4 * 84
+3 * 84 0 84
cfi=(2)
cfn=(2)
calls=84 0x402d74 645 
* * 1092 504 168
+5 * 84
+3 * 84 0 84
+3 +1 84 84 0 1 0 0 1
+6 * 84 0 84
+3 * 84 84
+6 * 84 0 84
+3 +2 84 0 84
+7 * 84
jump=84 +86 * 
* * 
+2 +1 3654 3654
+3 * 3654
+3 * 3654 3654
+4 * 3654
+3 * 3654
+3 * 3654 0 3654
cfi=(2)
cfn=(144)
calls=3654 0x402d9a 770 
* * 40194 18270 10962
+5 * 3654 3654
+4 * 3654 3654
+5 * 3654
+4 * 3654 0 3654
+5 +1 3654 3654
+3 * 3654
+3 * 3654 3654
+4 * 3654
+3 * 3654
+3 * 3654 0 3654
cfi=(2)
cfn=(146)
calls=3654 0x402dba 770 
* * 40194 18270 10962
+5 * 3654 3654
+2 * 3654
+4 * 3654 3654
+5 * 3654
+4 * 3654 0 3654
+5 -2 3654 0 3654
+4 * 3654 3654
+3 * 3654
+3 * 3654 3654
+3 * 3654 0 0 0 0 0 0 0 0 3654 85
jcnd=3570/3654 -93 +1 
* * 
-9 * 84 84 0 1 0 0 1
+3 * 84
+3 * 84 84
+3 * 84 0 0 0 0 0 0 0 0 84
jcnd=84/84 -93 +1 
* * 
+2 +4 84 84
+3 * 84
+3 * 84 0 0 1 0 0 1
+4 * 84 84
+5 * 84
+4 * 84
+3 * 84 0 84
+5 +1 84 84
+3 * 84
+3 * 84
+4 * 84 84
+5 * 84
+4 * 84
+3 * 84 0 84
+5 +1 84 84
+5 * 84 84
+5 * 84 84
+5 * 84 0 0 1 0 0 1
+4 * 84
+3 * 84 0 84
+5 +2 84 84
+3 +1 84 0 84
+3 * 84 84
+5 * 84 84
+1 * 84 84

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 348 0 348 1 0 0 1
+5 0 348 0 348
+5 0 348
+3 0 348 0 348
+5 0 348
+4 0 348 348 0 0 1 0 0 1
+7 0 348 348 0 0 1 0 0 1
+3 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
+6 0 348 348 0 0 1 0 0 1
+7 0 348 348 0 1 1 0 1 1
+4 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
+2 0 348 348 0 0 1 0 0 1
+3 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
jcnd=348/348 +97 0 
* 0 
+18 0 348
+3 0 348
+3 0 348 0 348
cfn=(38) _int_malloc
calls=348 0x3877c79a00 0 
* 0 63786 8833 9901 30 24 34 30 24 34 9557 421
+5 0 348
+3 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
+2 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
+2 0 348
+3 0 348 0 0 0 0 0 0 0 0 348 3
+2 0 348 348
+7 0 348 0 0 0 0 0 0 0 0 348
jcnd=348/348 +13 0 
* 0 
+13 0 348 0 348
+2 0 348 0 0 0 0 0 0 0 0 348 14
+6 0 348
+3 0 348 348
+4 0 348 348
+5 0 348 348
+5 0 348
+4 0 348 348
+1 0 348 0 0 1 0 0 1
+5 0 348 348 0 0 1 0 0 1
+7 0 348 0 0 0 0 0 0 0 0 348
jcnd=348/348 +14 0 
* 0 
+14 0 348 0 348 1 0 0 1
+3 0 348 0 0 0 0 0 0 0 0 348
+6 0 348
jump=348 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 348 0 348 1 0 0 1
+2 0 348
+3 0 348
+3 0 348 0 348
+2 0 348
+3 0 348 0 348
+1 0 348
+3 0 348 0 348
+1 0 348
+3 0 348
+4 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
+6 0 348
+4 0 348
+3 0 348 0 0 0 0 0 0 0 0 348 7
jcnd=10/348 0x3877c838d1 0 
* 0 
+2 0 338
+3 0 338
+3 0 338
+3 0 338
+3 0 338
+3 0 338 0 0 0 0 0 0 0 0 338
jcnd=338/338 +41 0 
* 0 
+41 0 338 0 0 1 0 0 1
+3 0 338 0 0 0 0 0 0 0 0 338
jcnd=338/338 0x3877c839c0 0 
* 0 
+24 0 338
+3 0 338
+4 0 338
+3 0 338
+3 0 338
+3 0 338
+3 0 338
+3 0 338 0 0 0 0 0 0 0 0 338 168
jcnd=174/338 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 174
+10 0 174 174 0 0 2 0 0 2
+3 0 174
+4 0 174 0 174
+3 0 174
+4 0 174
+4 0 174 0 0 0 0 0 0 0 0 174
jcnd=174/174 -18 0 
* 0 
-18 0 578 578
+3 0 578
+4 0 578 0 578
+3 0 578
+4 0 578
+4 0 578 0 0 0 0 0 0 0 0 578 11
jcnd=404/578 -18 0 
* 0 
+2 0 348
+4 0 348
+3 0 348 348
+1 0 348 348
+1 0 348 348
+2 0 348 348 0 1 0 0 1
+2 0 348 348
0x3877c839c0 0 338 0 0 1 0 0 1
+3 0 338
+3 0 338
+3 0 338
+4 0 338 0 338 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=338 0x3877c89b20 0 
* 0 22978 8016 7340 6 1 12 6 1 12 1112 23 338 41
+5 0 338
jump=338 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 348 348 0 1 1 0 1 1
+7 0 348 348 0 0 1 0 0 1
+3 0 348
+3 0 348 0 0 1 0 0 1 0 0 348
+6 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
+6 0 348 348
+4 0 348
+4 0 348
+2 0 348 0 0 0 0 0 0 0 0 348
+2 0 348
+2 0 348
+7 0 348 0 0 0 0 0 0 0 0 348
jcnd=348/348 +14 0 
* 0 
+14 0 348
+2 0 348
cfn=(170) _int_free
calls=348 0x3877c78650 0 
* 0 32088 8364 4984 19 2 0 19 2 0 7422 144

fn=(170)
0x3877c78650 0 348 0 348 1 0 0 1
+2 0 348 0 348
+2 0 348 0 348
+2 0 348
+3 0 348 0 348
+2 0 348 0 348
+1 0 348 0 348
+1 0 348
+3 0 348
+4 0 348 348
+4 0 348 0 348
+4 0 348
+3 0 348
+4 0 348
+3 0 348
+3 0 348
+3 0 348 0 0 1 0 0 1 0 0 348
+6 0 348
+4 0 348 0 0 0 0 0 0 0 0 348
+6 0 348
+4 0 348 0 0 0 0 0 0 0 0 348
+6 0 348 348
+7 0 348 0 0 0 0 0 0 0 0 348 4
jcnd=224/348 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 224
+2 0 224 0 0 0 0 0 0 0 0 224
+6 0 224 224 0 1 0 0 1
+4 0 224
+3 0 224
+2 0 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 0x3877c78a40 0 
* 0 
+6 0 224 224
+4 0 224
+3 0 224 0 0 0 0 0 0 0 0 224
+6 0 224 224
+5 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 0x3877c7907c 0 
* 0 
+6 0 224 224
+5 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
+6 0 224
+4 0 224 0 0 1 0 0 1 0 0 224
+6 0 224
+4 0 224 224
+7 0 224 0 0 0 0 0 0 0 0 224
+6 0 224 224
+6 0 224
+2 0 224 0 0 0 0 0 0 0 0 224
+6 0 224 224
+4 0 224 0 0 0 0 0 0 0 0 224 2
jcnd=222/224 +70 0 
* 0 
+2 0 2 2
+3 0 2
+3 0 2
+3 0 2 2
+4 0 2 2
+4 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2 2
+6 0 2 2
+4 0 2 0 0 0 0 0 0 0 0 2
+6 0 2 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 0 0 0 0 0 0 0 2
jcnd=2/2 +15 0 
* 0 
+15 0 224 224 0 1 0 0 1
+4 0 224 0 0 0 0 0 0 0 0 224 30
jcnd=30/224 0x3877c78bf0 0 
* 0 
+6 0 194 194
+6 0 194 0 0 1 0 0 1 0 0 194 40
jcnd=24/194 0x3877c78a78 0 
* 0 
+6 0 170 170
+5 0 170 170
+5 0 170 170
+4 0 170 0 0 0 0 0 0 0 0 170
+6 0 170 170
+4 0 170 0 0 0 0 0 0 0 0 170
+6 0 170 170
+9 0 170 0 170
+4 0 170 0 170
+4 0 170 0 0 0 0 0 0 0 0 170 4
jcnd=162/170 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 170
+3 0 170
+4 0 170 170
+4 0 170 170
+4 0 170 0 0 0 0 0 0 0 0 170
-12 0 24
+4 0 24 24
+4 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 194
+7 0 194 0 194
+4 0 194 0 194
+4 0 194 0 0 0 0 0 0 0 0 194 62
jcnd=126/194 +18 0 
* 0 
+2 0 68 0 68
+8 0 68 0 68
+8 0 68 0 68
+4 0 68
+3 0 68 0 68 1 0 0 1
+4 0 68
+4 0 68 0 68
+4 0 68 0 68
+4 0 68
+7 0 68 0 0 0 0 0 0 0 0 68
jcnd=68/68 0x3877c78b20 0 
* 0 
-30 0 126 0 126
+4 0 126
+3 0 126 0 126
+4 0 126
+4 0 126 0 126
+4 0 126 0 126
+4 0 126
+7 0 126 0 0 0 0 0 0 0 0 126
jcnd=126/126 0x3877c78b20 0 
* 0 
-7 0 30
+7 0 30 0 0 0 0 0 0 0 0 30
jcnd=30/30 0x3877c78b20 0 
* 0 
0x3877c78a40 0 224 0 0 1 0 0 1
+5 0 224 224
+4 0 224 224
+7 0 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 +16 0 
* 0 
+16 0 224 0 224
+5 0 224 0 0 0 0 0 0 0 0 224
+6 0 224
+3 0 224
jump=224 0x3877c7878f 0 
* 0 
+10 0 24 0 24
+6 0 24 0 0 1 0 0 1
jump=24 0x3877c78885 0 
* 0 
0x3877c78b20 0 224 224 0 1 0 0 1
+4 0 224
+2 0 224 0 0 0 0 0 0 0 0 224
+6 0 224 224
+7 0 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 +15 0 
* 0 
+15 0 224 0 224 1 0 0 1
+4 0 224 0 0 0 0 0 0 0 0 224
+6 0 224
+4 0 224 224
+1 0 224 224
+1 0 224 224
+2 0 224 224
+2 0 224 224
+2 0 224 224
+2 0 224 224
0x3877c78bf0 0 30 0 0 1 0 0 1
+3 0 30 0 30
+4 0 30
+3 0 30
+4 0 30 0 30 1 0 0 1
+4 0 30
jump=30 0x3877c788cf 0 
* 0 
0x3877c7907c 0 224 224 0 1 1 0 1 1
+4 0 224 0 0 1 0 0 1
+7 0 224
+4 0 224
+3 0 224
+3 0 224 0 0 0 0 0 0 0 0 224
jcnd=224/224 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 338 0 0 1 0 0 1
+7 0 338
+3 0 338
+3 0 338 338 0 0 1 0 0 1
+4 0 338
+4 0 338 0 0 0 0 0 0 0 0 0 0 338 41
jump=40 0x3877c89be8 0 
* 0 
jump=46 0x3877c89bd0 0 
* 0 
jump=40 0x3877c89bb8 0 
* 0 
jump=40 +11 0 
* 0 
jump=40 0x3877c89c48 0 
* 0 
jump=42 0x3877c89c30 0 
* 0 
jump=40 0x3877c89c18 0 
* 0 
jump=50 0x3877c89c00 0 
* 0 
+11 0 40 40
+3 0 40
+4 0 40
+4 0 40 40
+4 0 40
+4 0 40 0 40
+4 0 40
+9 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-40 0 854 854
+4 0 854 0 854 0 0 3 0 0 3
+4 0 854 854
+4 0 854 0 854
+4 0 854 854
+4 0 854 0 854 0 0 1 0 0 1
+4 0 854 854
+4 0 854 0 854
+4 0 854
+4 0 854
+4 0 854 0 0 0 0 0 0 0 0 854 19
jcnd=302/854 0x3877c89c60 0 
* 0 
-32 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42 42
+4 0 42 0 42
+4 0 42
+4 0 42
+4 0 42 0 0 0 0 0 0 0 0 42
jcnd=10/42 0x3877c89c60 0 
* 0 
-24 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
+4 0 40
+4 0 40 0 0 0 0 0 0 0 0 40
jcnd=8/40 0x3877c89c60 0 
* 0 
-16 0 50 50 0 1 0 0 1
+4 0 50 0 50
+4 0 50 0 0 1 0 0 1
+4 0 50
+4 0 50 0 0 0 0 0 0 0 0 50 4
jcnd=10/50 0x3877c89c60 0 
* 0 
+6 0 688
+4 0 688 688
+3 0 688 0 688 0 0 1 0 0 1
+3 0 688 688
+4 0 688 0 688 0 0 3 0 0 3
+4 0 688 688
+4 0 688 0 688 0 0 4 0 0 4
+4 0 688 688
+4 0 688 0 688
+4 0 688
jump=688 -80 0 
* 0 
-30 0 40 40
+3 0 40 0 40
+3 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 -80 0 
* 0 
-24 0 46 46
+4 0 46 0 46
+4 0 46 46
+4 0 46 0 46
+4 0 46 46
+4 0 46 0 46
+4 0 46
jump=46 -80 0 
* 0 
-16 0 40 40
+4 0 40 0 40
+4 0 40 40
+4 0 40 0 40
+4 0 40
jump=40 -80 0 
* 0 
+8 0 40 40
+3 0 40
+4 0 40 0 0 1 0 0 1
+4 0 40
+4 0 40
jump=40 -39 0 
* 0 
+9 0 46
+3 0 46 0 0 0 0 0 0 0 0 46
+6 0 46 46
+3 0 46
+4 0 46
jump=46 -72 0 
* 0 
+8 0 40
+4 0 40 40
+3 0 40 0 0 0 0 0 0 0 0 40
+2 0 40
+4 0 40
jump=40 -99 0 
* 0 
+11 0 50 50 0 1 0 0 1
+3 0 50
+4 0 50
+4 0 50
+4 0 50
jump=50 0x3877c89b78 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b70 0 
* 0 
+9 0 42 42
+3 0 42
+4 0 42
+4 0 42
+4 0 42
jump=42 0x3877c89b68 0 
* 0 
+9 0 40 40
+3 0 40
+4 0 40
+4 0 40
+4 0 40
jump=40 0x3877c89b60 0 
* 0 
+9 0 338 0 338 1 0 0 1
+3 0 338 338

fn=(104) alloc_perturb
0x3877c77180 0 230 230 0 1 0 0 1
+6 0 230
+2 0 230 0 0 0 0 0 0 0 0 230 1
+2 0 230 230

fn=(38)
0x3877c79a00 0 348 0 348 1 0 0 1
+2 0 348
+3 0 348 0 348
+2 0 348 0 348
+2 0 348 0 348 0 0 1 0 0 1
+2 0 348
+3 0 348 0 348
+1 0 348 0 348
+1 0 348
+4 0 348
+4 0 348 0 0 0 0 0 0 0 0 348
+6 0 348
+4 0 348
+6 0 348
+3 0 348
+4 0 348
+4 0 348
+4 0 348
+3 0 348 0 0 0 0 0 0 0 0 348
+6 0 348 348 0 1 1 0 1 1
+7 0 348 0 0 0 0 0 0 0 0 348 7
jcnd=226/348 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 1
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 118 118
+6 0 118
+4 0 118
+2 0 118 0 0 0 0 0 0 0 0 118
+6 0 118
+3 0 118
+4 0 118 118
+1 0 118 118
+1 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
+2 0 118 118
-14 0 230
+4 0 230 230
+1 0 230 230
+1 0 230 230
+2 0 230 230
+2 0 230 230
+2 0 230 230
+2 0 230 230
+7 0 243
+7 0 243 0 0 1 0 0 1 0 0 243
+2 0 243
+3 0 243
+5 0 243
+3 0 243
+4 0 243 0 243
+4 0 243
+2 0 243
+5 0 243 243 0 0 4 0 0 4
+4 0 243
+3 0 243 0 0 0 0 0 0 0 0 243
jcnd=243/243 0x3877c79bc2 0 
* 0 
0x3877c79bc2 0 243 0 0 1 0 0 1
+3 0 243
+3 0 243
+3 0 243
+4 0 243
+3 0 243
+4 0 243 0 243
+5 0 243
+3 0 243 0 243
+4 0 243 0 243
+4 0 243 0 243
+5 0 243
+3 0 243
+3 0 243
+3 0 243
+3 0 243
+4 0 243
+4 0 243 0 0 1 0 0 1
+4 0 243 0 243
+4 0 243
+4 0 243 0 243
+5 0 243 0 243
+5 0 243
+3 0 243
+3 0 243 0 243
+5 0 243
+5 0 243
+3 0 243 0 243
+4 0 243 0 243
+4 0 243
+6 0 243 0 243
+4 0 243 0 243
+5 0 243 0 0 1 0 0 1
+3 0 243
+3 0 243
+3 0 243
jump=243 +87 0 
* 0 
+8 0 202
+3 0 202
+4 0 202
+2 0 202
+2 0 202
+3 0 202
+3 0 202
+3 0 202
+2 0 202
+2 0 202
+5 0 202
+2 0 202 202
+4 0 202
+3 0 202
+4 0 202 0 202
+4 0 202 0 202
+8 0 202
+7 0 202 0 202
+4 0 202 0 202
+4 0 202 0 202
+4 0 202 0 0 0 0 0 0 0 0 202
-38 0 66
+3 0 66
+4 0 66 0 66
+4 0 66 0 66
+8 0 66
+7 0 66 0 66
+4 0 66 0 66
+4 0 66 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 511 511 0 1 0 0 1
+4 0 511
+3 0 511 0 0 0 0 0 0 0 0 511 19
jcnd=211/511 0x3877c79ef0 0 
* 0 
+6 0 300 300
+4 0 300 300
+4 0 300
+4 0 300 0 0 0 0 0 0 0 0 300
+6 0 300 300 0 1 0 0 1
+7 0 300 0 0 0 0 0 0 0 0 300
+6 0 300
+4 0 300
+7 0 300 0 0 0 0 0 0 0 0 300
+2 0 300
+3 0 300 0 0 0 0 0 0 0 0 300 64
jcnd=224/300 0x3877c79e28 0 
* 0 
+6 0 281
+3 0 281 0 281
+4 0 281 0 281
+5 0 281 0 0 0 0 0 0 0 0 281 8
jcnd=13/281 0x3877c7a090 0 
* 0 
+6 0 268
+7 0 268 0 0 0 0 0 0 0 0 268 6
jcnd=202/268 0x3877c79c50 0 
* 0 
+6 0 66 0 0 1 0 0 1
+3 0 66
+4 0 66
+4 0 66 0 0 0 0 0 0 0 0 66
+6 0 66
+3 0 66
+4 0 66
+2 0 66
+2 0 66
+3 0 66
+3 0 66
+8 0 66
+3 0 66
+2 0 66
+2 0 66
+4 0 66 66
+4 0 66
+3 0 66 0 0 1 0 0 1 0 0 66 3
jcnd=66/66 0x3877c79e15 0 
* 0 
0x3877c79e15 0 66 0 66
+4 0 66 0 66
+4 0 66
+3 0 66
jump=66 0x3877c79c73 0 
* 0 
+8 0 224 224 0 1 0 0 1
+4 0 224
+3 0 224 0 0 0 0 0 0 0 0 224 37
jcnd=113/224 0x3877c79ce1 0 
* 0 
+6 0 111 111
+5 0 111 0 0 0 0 0 0 0 0 111 5
jcnd=92/111 0x3877c79ce1 0 
* 0 
+6 0 19 0 0 1 0 0 1
+3 0 19
+3 0 19
+3 0 19
+7 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19 0 19
+4 0 19 0 19 0 0 16 0 0 16
+4 0 19 0 19
+4 0 19 0 0 0 0 0 0 0 0 19 4
jcnd=10/19 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9 1 0 0 1
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 10
+7 0 10 0 10
+4 0 10
+3 0 10
+3 0 10
+3 0 10
+4 0 10
+3 0 10
+4 0 10
+3 0 10
+3 0 10
+4 0 10 0 10
+4 0 10 0 10 0 0 2 0 0 2
+4 0 10
+4 0 10
+3 0 10 0 10
cfn=(104)
calls=10 0x3877c77180 0 
* 0 40 20 0 0 0 0 0 0 0 10
+5 0 19
+3 0 19
jump=19 0x3877c79ae3 0 
* 0 
+55 0 211 0 0 1 0 0 1
+7 0 211
+3 0 211 0 0 0 0 0 0 0 0 211
+6 0 211 211 0 1 0 0 1
+4 0 211
+3 0 211
+3 0 211
+2 0 211
+4 0 211
+3 0 211
+3 0 211
+2 0 211
+2 0 211
+2 0 211
+2 0 211 211 0 0 1 0 0 1
+8 0 211
+5 0 211
+5 0 211
+2 0 211 0 0 0 0 0 0 0 0 211
-2 0 115
+2 0 115 0 0 0 0 0 0 0 0 115
+2 0 326
+2 0 326 0 0 0 0 0 0 0 0 326 19
jcnd=153/326 +64 0 
* 0 
+2 0 173
+8 0 173
+3 0 173
+3 0 173 0 0 0 0 0 0 0 0 173 1
jcnd=1/173 0x3877c79fc0 0 
* 0 
-6 0 124
+3 0 124
+3 0 124 0 0 0 0 0 0 0 0 124 2
jcnd=29/124 0x3877c79fc0 0 
* 0 
+2 0 267
+2 0 267 267
+8 0 267
+2 0 267 0 0 0 0 0 0 0 0 267 14
jcnd=124/267 -20 0 
* 0 
+2 0 143
+2 0 143
+5 0 143
+3 0 143
+3 0 143
+2 0 143
+2 0 143
+5 0 143 0 0 0 0 0 0 0 0 143
+2 0 143
+2 0 143
+4 0 143
+2 0 143
+2 0 143 0 0 0 0 0 0 0 0 143 8
jcnd=80/143 -8 0 
* 0 
-8 0 638
+4 0 638
+2 0 638
+2 0 638 0 0 0 0 0 0 0 0 638 62
jcnd=430/638 -8 0 
* 0 
-2 0 153 0 0 1 0 0 1
+2 0 153 0 0 0 0 0 0 0 0 153 15
jcnd=128/153 -8 0 
* 0 
+2 0 296 296 0 0 10 0 0 10
+4 0 296 0 0 1 0 0 1
+3 0 296 0 0 0 0 0 0 0 0 296 105
jcnd=181/296 0x3877c7a1cf 0 
* 0 
+6 0 115
+2 0 115
+4 0 115
+2 0 115
+2 0 115
+2 0 115 0 115
+8 0 115
jump=115 0x3877c79f30 0 
* 0 
+37 0 30 30 0 1 0 0 1
+5 0 30 30
+4 0 30
+4 0 30 30
+5 0 30 0 0 0 0 0 0 0 0 30
jcnd=30/30 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 13 0 0 1 0 0 1
+7 0 13 0 13
+6 0 13
+3 0 13 0 0 0 0 0 0 0 0 13
jcnd=13/13 0x3877c79ace 0 
* 0 
0x3877c7a1cf 0 181 181 0 1 2 0 1 2
+4 0 181 181 0 0 1 0 0 1
+4 0 181
+3 0 181 181
+4 0 181
+4 0 181
+3 0 181
+3 0 181 181
+4 0 181 0 0 0 0 0 0 0 0 181
+6 0 181 181
+4 0 181 0 0 0 0 0 0 0 0 181
+6 0 181 181 0 1 0 0 1
+8 0 181 0 181
+4 0 181 0 181
+4 0 181 0 0 0 0 0 0 0 0 181 5
jcnd=113/181 +38 0 
* 0 
+2 0 68 68 0 0 2 0 0 2
+4 0 68
+3 0 68 0 0 0 0 0 0 0 0 68
+2 0 68 68
+5 0 68 0 0 0 0 0 0 0 0 68
+6 0 68 68
+4 0 68 0 68
+4 0 68 68
+4 0 68 0 68
+4 0 68
+4 0 68 0 0 0 0 0 0 0 0 68
-4 0 113
+4 0 113 0 0 0 0 0 0 0 0 113 6
jcnd=9/113 0x3877c7a2e3 0 
* 0 
+6 0 172 172
+4 0 172 172 0 1 0 0 1
+4 0 172 0 0 0 0 0 0 0 0 172
+6 0 172
+4 0 172
+7 0 172 0 172 0 0 7 0 0 7
+4 0 172 0 172
+4 0 172 0 172
+4 0 172 0 172
+4 0 172 0 0 0 0 0 0 0 0 172
+2 0 172 0 172
+5 0 172
+7 0 172 0 0 0 0 0 0 0 0 172 4
jcnd=165/172 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 165 0 0 1 0 0 1
+7 0 165 0 165 0 0 1 0 0 1
+4 0 165
+3 0 165
+3 0 165
+4 0 165
+3 0 165
+4 0 165
+3 0 165
+3 0 165
+4 0 165 0 165
+4 0 165 0 165 0 0 1 0 0 1
+4 0 165
jump=165 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 9
+7 0 9 0 9
+6 0 9
+3 0 9 0 0 0 0 0 0 0 0 9
jcnd=9/9 +7 0 
* 0 
+7 0 181
+4 0 181 0 0 1 0 0 1
+3 0 181
+3 0 181 0 181
cfn=(104)
calls=181 0x3877c77180 0 
* 0 724 362 0 1 0 0 1 0 0 181
+5 0 181
+3 0 181
jump=181 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 30 0 0 1 0 0 1
+7 0 30
+2 0 30
+4 0 30
+3 0 30
+3 0 30 0 30
+5 0 30
+3 0 30
+4 0 30
+3 0 30 0 0 1 0 0 1
+4 0 30
+4 0 30
+3 0 30
+4 0 30 0 30
+4 0 30 0 30 0 0 2 0 0 2
+4 0 30
+3 0 30
+3 0 30 0 30
cfn=(104)
calls=30 0x3877c77180 0 
* 0 120 60 0 0 0 0 0 0 0 30 1
+5 0 30
+3 0 30
jump=30 0x3877c79ae3 0 
* 0 

totals: 985584 370332 236610 226 58 66 226 58 66 39399 1059 2078 41
