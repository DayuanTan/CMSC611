version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 382


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 419431089 - 421402289
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1796 0 0 1 0 0 1
+3 0 1796 0 0 0 0 0 0 0 0 1796
+2 0 1796
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1796 0x3877c7b8b0 0 
* 0 211165 54843 29257 21 5 0 21 5 0 52065 857
* 0 1796 1796 0 1 1 0 1 1 0 0 0 1796

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1796 0 1796 1 0 0 1
+1 0 1796
+5 0 1796
+3 0 1796 0 1796
+1 0 1796
+4 0 1796 0 0 1 0 0 1
+3 0 1796
+4 0 1796
+3 0 1796 0 1796 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1796 0x3877c7aa50 0 
* 0 533834 76273 78312 48 41 62 48 41 62 90719 3737
* 0 1796 1796 0 1 1 0 1 1 0 0 0 1796
+5 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796
jcnd=1796/1796 +96 0 
* 0 
+96 0 1796 0 0 1 0 0 1
+4 0 1796 1796
+1 0 1796 1796
+1 0 1796 1796

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 890 0 890 1 0 0 1
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=890 0x404a28 -35 
* * 5340 1780 2670 1 0 1 1 0 1
+5 * 890 890
+1 * 890 890

fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 890
+4 * 890
+3 * 890 0 890
cfi=(5)
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=890 0x4044cc -35 
* * 4450 1780 1780
+5 * 890 890
+1 * 890 890

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 890 0 890 1 0 0 1
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890 1 0 0 1
+4 +1 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=890 0x4049d4 -35 
* * 5340 1780 2670 1 0 0 1
+5 * 890 890
+1 * 890 890

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 890 0 890 1 0 0 1
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 890
+4 * 890
+3 * 890 0 890
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=890 0x404520 -35 
* * 4450 1780 1780
+5 * 890 890
+1 * 890 890

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 445 0 445
+1 * 445
+3 * 445
+4 * 445 0 445
+4 * 445 0 445
+4 * 445 0 445
+4 +1 445 445
+4 * 445 445
+4 * 445 445
+4 * 445
+3 * 445
+3 * 445 0 445
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=445 0x403df2 -87 
* * 10680 3560 4005 0 29 4 0 29 4 445 2
+5 * 445 445
+1 * 445 445

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 890 0 890 1 0 0 1
+1 * 890
+3 * 890 0 890
+4 * 890 890
+4 * 890 890
+1 * 890 890

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 445 0 445
+1 * 445
+3 * 445
+4 * 445 0 445
+4 * 445 0 445
+4 * 445 0 445
+4 +1 445 445
+4 * 445 445
+4 * 445 445
+4 * 445
+3 * 445
+3 * 445 0 445
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=445 0x40406a -87 
* * 10680 3560 4005 0 29 20 0 29 20 445
+5 * 445 445
+1 * 445 445

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 890 0 890
+1 * 890
+3 * 890 0 890
+4 * 890 890
+4 * 890 890
+1 * 890 890

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1780 0 1780 1 0 0 1
+1 * 1780
+3 * 1780 0 1780
+4 +1 1780 1780
+4 * 1780 1780
+1 * 1780 1780

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1780 0 1780 1 0 0 1
+1 * 1780
+3 * 1780
+4 * 1780 0 1780
+4 +1 1780
+4 * 1780
+3 * 1780 0 1780 0 0 1 0 0 1
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1780 0x40500c 790 
* * 10680 5340 3560 1 0 0 1
+5 * 1780 1780
+3 * 1780 1780
+1 * 1780 1780

fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 970 0 970
+1 * 970
+3 * 970 0 970
+4 +1 970 970
+4 * 970 970
+1 * 970 970

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1780 0 1780 1 0 0 1
+1 * 1780
+3 * 1780 0 1780
+4 +1 1780 1780 0 1 0 0 1
+4 * 1780 1780
+1 * 1780 1780

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 970 0 970
+1 * 970
+3 * 970 0 970 0 0 1 0 0 1
+4 +1 970 970
+4 * 970 970
+1 * 970 970

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1780 0 1780 1 0 0 1
+1 * 1780
+3 * 1780
+4 * 1780 0 1780
+4 +1 1780
+4 * 1780
+3 * 1780 0 1780
cfi=(10)
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1780 0x404ffe 790 
* * 10680 5340 3560 1 0 0 1
+5 * 1780 1780
+3 * 1780 1780
+1 * 1780 1780

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 890 0 890
+1 * 890
+3 * 890 0 890
+4 * 890 0 890
+4 * 890 890
+4 * 890 890
+1 * 890 890

fl=(5)
fn=(102)
0x4048de 113 914 0 914 1 0 0 1
+1 * 914
+3 * 914 0 914
+4 +1 914
+10 * 914 914
+1 * 914 914

fn=(266)
0x40406a 129 445 0 445
+1 * 445
+3 * 445
+4 * 445 0 445
+4 * 445 0 445
+4 * 445 0 445
+4 +1 445 445
+4 * 445
+3 * 445
+5 * 445 0 445
cfi=(16)
cfn=(226)
calls=445 0x402d61 -20 
* * 3115 1335 1335
+5 * 445
+3 * 445 0 0 0 0 0 0 0 0 445
+2 * 445 445
+4 * 445 445 0 0 29 0 0 29
+2 * 445 0 445 0 0 20 0 0 20
+2 * 445 445
+1 * 445 445

fn=(28)
0x404992 113 914 0 914 1 0 0 1
+1 * 914
+3 * 914 0 914
+4 +1 914
+10 * 914 914
+1 * 914 914

fn=(176)
0x4044cc 86 890 0 890
+1 * 890
+3 * 890 0 890
+4 * 890 890
+1 * 890 890

fn=(224)
0x403df2 129 445 0 445
+1 * 445
+3 * 445
+4 * 445 0 445
+4 * 445 0 445
+4 * 445 0 445
+4 +1 445 445
+4 * 445
+3 * 445
+5 * 445 0 445
cfi=(16)
cfn=(226)
calls=445 0x402d61 -20 
* * 3115 1335 1335
+5 * 445
+3 * 445 0 0 0 0 0 0 0 0 445 2
+2 * 445 445
+4 * 445 445 0 0 29 0 0 29
+2 * 445 0 445 0 0 4 0 0 4
+2 * 445 445
+1 * 445 445

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 898 0 898
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 * 898 0 898
+4 +1 898 898
+4 * 898
+3 * 898 0 898
cob=(5)
cfi=(8)
cfn=(164)
calls=898 0x387e4bb2f0 0 
* * 106246 27195 13647 23 5 0 23 5 0 26114 551 898
* * 898 898 0 1 1 0 1 1 0 0 0 898
+5 * 898 898
+1 * 898 898

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 898 0 898
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 * 898 0 898
+4 +1 898 898
+4 * 898
+3 * 898 0 898
cob=(5)
cfi=(8)
cfn=(164)
calls=898 0x387e4bb2f0 0 
* * 112103 29444 15610 0 1 0 0 1 0 27747 306 898
* * 898 898 0 0 0 0 0 0 0 0 0 898
+5 * 898 898
+1 * 898 898

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 898 0 898 1 0 0 1
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 * 898 0 898
+4 +2 898 898
+4 * 898
+3 * 898 0 898
cfn=(102)
calls=898 0x4048de +12 
* * 5388 1796 1796 1 0 0 1
+5 * 898 898
+4 * 898 0 0 1 0 0 1
+3 * 898
+2 * 898 0 0 0 0 0 0 0 0 898
jcnd=898/898 +7 +3 
* * 
+7 +3 898 898
+4 * 898
+4 * 898
+3 * 898 0 898
cob=(5)
cfi=(8)
cfn=(32)
calls=898 0x387e4bd0b0 0 
* * 279397 40861 39293 34 24 46 34 24 46 46028 2029 898
* * 898 898 0 0 0 0 0 0 0 0 0 898
+5 +1 898 898
+1 * 898 898

fn=(18)
0x404a28 81 890 0 890 1 0 0 1
+1 * 890
+3 * 890 0 890 0 0 1 0 0 1
+4 * 890 0 890
+4 * 890 890
+1 * 890 890

fn=(92)
0x4049d4 81 890 0 890 1 0 0 1
+1 * 890
+3 * 890 0 890
+4 * 890 0 890
+4 * 890 890
+1 * 890 890

fn=(196)
0x404520 86 890 0 890
+1 * 890
+3 * 890 0 890
+4 * 890 890
+1 * 890 890

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 898 0 898 1 0 0 1
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 * 898 0 898 1 0 0 1
+4 +2 898 898
+4 * 898
+3 * 898 0 898
cfn=(28)
calls=898 0x404992 +12 
* * 5388 1796 1796 1 0 0 1
+5 * 898 898
+4 * 898
+3 * 898
+2 * 898 0 0 0 0 0 0 0 0 898
jcnd=898/898 +7 +3 
* * 
+7 +3 898 898
+4 * 898
+4 * 898
+3 * 898 0 898
cob=(5)
cfi=(8)
cfn=(32)
calls=898 0x387e4bd0b0 0 
* * 283173 42596 44407 18 18 17 18 18 17 46487 1708 898
* * 898 898 0 1 1 0 1 1 0 0 0 898
+5 +1 898 898
+1 * 898 898

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +2 890 890
+4 * 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=890 0x404484 107 
* * 513382 174234 168898 25 3 6 25 3 6 20068 1181 1776 222
+5 * 890 890
+1 * 890 890

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +2 890 890 0 1 0 0 1
+4 * 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfi=(12)
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=890 0x404a36 450 
* * 488462 165334 159998 24 3 6 24 3 6 20068 1181 1776 222
+5 * 890 890
+1 * 890 890

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +2 890 890
+4 * 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=890 0x40439c 107 
* * 513382 174234 168898 7 0 35 7 0 35 20068 1099 1776
+5 * 890 890
+1 * 890 890

fn=(116)
0x40439c 107 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +10 890 890
+4 * 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=890 0x4047d7 -26 
* * 500922 169784 164448 7 0 35 7 0 35 20068 1099 1776
+5 +1 890 890
+1 * 890 890

fn=(118)
0x4047d7 91 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +2 890 890
+4 * 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=890 0x4049e2 450 
* * 488462 165334 159998 7 0 35 7 0 35 20068 1099 1776
+5 * 890 890
+1 * 890 890

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 5 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +10 890 890
+4 * 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(52)
calls=890 0x404829 -26 
* * 500922 169784 164448 25 3 6 25 3 6 20068 1181 1776 222
+5 +1 890 890
+1 * 890 890

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 5 15
+5 * 16 16
+1 * 16 16

fl=(2) /usr/include/c++/4.8/bits/stl_vector.h
fn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
0x4032ca 159 890 0 890 1 0 0 1
+1 * 890
+3 * 890 0 890
+1 * 890
+4 * 890 0 890
+4 +2 890 890
+4 * 890 890
+4 * 890
+3 * 890 890
+4 * 890 890
+3 * 890
+3 * 890
+3 * 890
+4 * 890
+3 * 890 890
+4 * 890 890
+3 -1 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=890 0x403d98 +11 
* * 136140 38120 24396 1 1 0 1 1 0 28434 295 1780
+5 +1 890 890
+4 * 890
+3 * 890 0 890
cfn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
calls=890 0x403296 -82 
* * 20470 7120 7120 1 0 0 1
+5 * 890
jump=890 +28 * 
* * 
+28 * 890
+4 * 890 890
+1 * 890 890
+1 * 890 890

fn=(2) std::vector<float, std::allocator<float> >::size() const
0x402d74 645 3592 0 3592 1 0 0 1
+1 * 3592
+3 * 3592 0 3592 0 0 1 0 0 1
+4 +1 3592 3592
+4 * 3592 3592 0 1 1 0 1 1
+4 * 3592
+3 * 3592 3592
+4 * 3592 3592
+3 * 3592
+3 * 3592
+3 * 3592
+4 * 3592 3592
+1 * 3592 3592

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 +2 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=890 0x404236 -14 
* * 318452 53827 54733 24 18 9 24 18 9 47939 1661 1780
+5 * 890 890
+4 * 890 0 890
+3 +1 890 890
+4 * 890 890 0 1 0 0 1
+3 * 890 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+3 * 890 890
+4 * 890
+4 * 890
+3 * 890 890
+4 * 890 0 890
+4 +1 890 890
+1 * 890 890

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 +2 890 890
+4 * 890 890 0 1 0 0 1
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
calls=890 0x403fbe -14 
* * 313709 51833 49413 23 17 43 23 17 43 47286 1960 1780
+5 * 890 890
+4 * 890 0 890
+3 +1 890 890
+4 * 890 890
+3 * 890 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+3 * 890 890
+4 * 890
+4 * 890
+3 * 890 890
+4 * 890 0 890
+4 +1 890 890
+1 * 890 890

fn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
0x402f7a 901 445 0 445
+1 * 445
+3 * 445 0 0 1 0 0 1
+4 * 445 0 445
+4 * 445 0 445
+4 +2 445 445
+4 * 445 445
+4 * 445 445
+4 * 445 445
+4 * 445
+3 * 445 0 0 0 0 0 0 0 0 445
jcnd=8/445 +51 +10 
* * 
+2 +3 437 437
+4 * 437 437
+4 * 437 437
+4 -1 437 437
+4 * 437
+3 * 437
+3 * 437 0 437
cfi=(3)
cfn=(264)
calls=437 0x4036b1 215 
* * 16606 5681 6118 0 28 16 0 28 16 437
+5 +2 437 437
+4 * 437 437
+4 * 437
+4 * 437 437
+4 * 437 0 437
+4 * 437
jump=437 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 11898 3695 3225 18 2 30 18 2 30 703 72 47
+5 +2 445 445
+1 * 445 445

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
0x40333c 113 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804 0 1804 1 0 0 1
+4 +1 1804 1804
+4 * 1804 1804
+1 * 1804 1804

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+3 * 890 0 890
+4 * 890
+4 * 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=890 0x404380 726 
* * 8900 4450 3560
+5 * 890 890
+4 * 890 890
+1 * 890 890

fn=(148) std::vector<float, std::allocator<float> >::~vector()
0x402df4 414 890 0 890
+1 * 890
+3 * 890 0 890
+1 * 890
+4 * 890 0 890 1 0 0 1
+4 +2 890 890
+4 * 890
+3 * 890 0 890
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=890 0x40325e 113 
* * 5340 2670 1780
+5 * 890
+3 * 890 890
+4 * 890 890
+4 * 890 890
+4 * 890 890
+3 -1 890
+3 * 890
+3 * 890 0 890
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=890 0x40326c 148 
* * 27590 8900 10680 4 0 0 4
+5 +1 890 890
+4 * 890
+3 * 890 0 890
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=890 0x4031ec 159 
* * 175706 52798 34006 27 6 0 27 6 0 26810 545 1780
+5 * 890
jump=890 +28 * 
* * 
+28 * 890 0 0 1 0 0 1
+4 * 890 890
+1 * 890 890
+1 * 890 890

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 898 0 898 1 0 0 1
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 * 898 0 898
+4 +2 898 898
+5 * 898 0 0 0 0 0 0 0 0 898
+2 +1 898 898
+4 * 898 898
+4 * 898 898
+4 * 898
+3 * 898
+3 * 898 0 898
cfi=(5)
cfn=(160)
calls=898 0x4044d6 -65 
* * 117022 30787 18137 24 6 0 24 6 0 26114 551 1796
+5 +1 898 898
+1 * 898 898

fn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
0x403b16 134 890 0 890
+1 * 890
+3 * 890 0 890
+1 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=890 0x4043ca -45 
* * 32040 11570 12460 4 0 4 4 0 4
+5 +1 890 890 0 1 0 0 1
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(20)
calls=890 0x404412 +43 
* * 340702 64507 60963 25 18 9 25 18 9 47939 1661 1780
+5 * 890
jump=890 +28 * 
* * 
+28 * 890
+4 * 890 890
+1 * 890 890
+1 * 890 890

fn=(14)
0x4043ca 90 890 0 890 1 0 0 1
+1 * 890
+3 * 890
+4 * 890 0 890 0 0 1 0 0 1
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfi=(4)
cfn=(16)
calls=890 0x404804 +24 
* * 16020 5340 6230 2 0 1 2 0 1
+5 * 890 890
+4 * 890 0 890 0 0 2 0 0 2
+7 * 890 890
+4 * 890 0 890 1 0 0 1
+8 * 890 890
+4 * 890 0 890
+8 +1 890 890
+1 * 890 890

fn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
0x402ff4 310 890 0 890 1 0 0 1
+1 * 890
+3 * 890 0 890
+2 * 890 0 890
+2 * 890 0 890
+1 * 890 0 0 1 0 0 1
+4 * 890 0 890
+4 * 890 0 890
+4 +2 890 890
+4 * 890
+3 * 890 0 890
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=890 0x4039fc 117 
* * 5340 2670 1780 2 0 0 2
+5 * 890
+3 * 890 0 890
cfi=(3)
cfn=(84)
calls=890 0x4039ed -88 
* * 5340 2670 1780
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(2)
calls=890 0x402d74 645 
* * 11570 5340 1780
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890
+3 * 890
+3 * 890 0 890 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=890 0x403a0a 134 
* * 387579 80313 74333 30 17 43 30 17 43 47286 1960 1780
+5 +4 890 890
+4 * 890
+3 * 890 0 890
cfn=(106)
calls=890 0x40325e 113 
* * 5340 2670 1780 1 0 0 1
+5 * 890
+3 * 890 890
+4 * 890 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(108) std::vector<float, std::allocator<float> >::end() const
calls=890 0x403a98 565 
* * 22250 8900 7120 2 0 0 2
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(112)
calls=890 0x403a68 547 
* * 22250 8900 7120
+5 * 890
+3 * 890
+3 * 890
+3 * 890
+3 * 890 0 890
cfi=(11)
cfn=(114)
calls=890 0x403ac9 -60 
* * 526732 178684 174238 7 0 35 7 0 35 20068 1099 1776
+5 -3 890 890
+4 * 890 0 890
+4 * 890
jump=890 +28 +4 
* * 
+28 +4 890
+4 * 890 890
+1 * 890 890
+2 * 890 890
+2 * 890 890
+1 * 890 890

fn=(188)
0x403d98 171 898 0 898 1 0 0 1
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 * 898 0 898
+4 +2 898 898
+5 * 898 0 0 0 0 0 0 0 0 898 8
+2 +1 898 898
+4 * 898 898
+4 * 898 898
+4 * 898
+3 * 898
+3 * 898 0 898
cfi=(5)
cfn=(190)
calls=898 0x40452a -65 
* * 122879 33036 20100 0 1 0 0 1 0 27747 306 1796
+5 +1 898 898
+1 * 898 898

fn=(22)
0x404236 167 898 0 898 1 0 0 1
+1 * 898
+3 * 898
+4 * 898 0 898 1 0 0 1
+4 * 898 0 898
+4 0 898 898
+5 0 898 0 0 0 0 0 0 0 0 898
+2 0 898 898
+4 0 898 898
+4 0 898
+5 0 898
+3 0 898
+3 0 898 0 898
fi=(6) ???
cfi=(5)
cfn=(26)
calls=898 0x404730 99 
* 0 306521 49780 51591 22 19 17 22 19 17 47385 1708 1796
+5 0 898
fi=(6)
jump=898 +7 0 
* 0 
+7 0 898 898
+1 0 898 898

fn=(42) std::vector<int, std::allocator<int> >::end() const
0x403ba4 565 890 0 890 1 0 0 1
+1 * 890
+3 * 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+4 * 890 0 890
+4 * 890
+4 * 890 0 0 1 0 0 1
+4 * 890
+3 * 890
+3 * 890 0 890
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=890 0x404468 726 
* * 8900 4450 3560 1 0 0 1
+5 * 890 890
+4 * 890 890
+1 * 890 890

fn=(46) std::vector<int, std::allocator<int> >::begin() const
0x403b74 547 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+3 * 890 0 890
+4 * 890
+4 * 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfi=(10)
cfn=(44)
calls=890 0x404468 726 
* * 8900 4450 3560
+5 * 890 890
+4 * 890 890
+1 * 890 890

fn=(86)
0x403a0a 134 890 0 890
+1 * 890
+3 * 890 0 890
+1 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=890 0x4042e2 -45 
* * 32040 11570 12460 5 0 0 5
+5 +1 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890 1 0 0 1
cfn=(94)
calls=890 0x40432a +43 
* * 335959 62513 55643 24 17 43 24 17 43 47286 1960 1780
+5 * 890
jump=890 +28 * 
* * 
+28 * 890
+4 * 890 890
+1 * 890 890
+1 * 890 890

fn=(88)
0x4042e2 90 890 0 890 1 0 0 1
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890 1 0 0 1
cfi=(4)
cfn=(90)
calls=890 0x4047b2 +24 
* * 16020 5340 6230 3 0 0 3
+5 * 890 890
+4 * 890 0 890
+7 * 890 890
+4 * 890 0 890
+8 * 890 890
+4 * 890 0 890
+8 +1 890 890
+1 * 890 890

fn=(156)
0x4031ec 159 890 0 890 1 0 0 1
+1 * 890
+3 * 890 0 890
+1 * 890
+4 * 890 0 890
+4 +2 890 890
+4 * 890 890 0 1 0 0 1
+4 * 890
+3 * 890 890
+4 * 890 890
+3 * 890
+3 * 890
+3 * 890
+4 * 890
+3 * 890 890
+4 * 890 890
+3 -1 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(158)
calls=890 0x403ce6 +11 
* * 130316 35888 22436 24 6 0 24 6 0 26810 545 1780
+5 +1 890 890
+4 * 890
+3 * 890 0 890
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=890 0x4031b8 -82 
* * 20470 7120 7120 1 0 0 1
+5 * 890
jump=890 +28 * 
* * 
+28 * 890
+4 * 890 890
+1 * 890 890
+1 * 890 890

fn=(172)
0x4031b8 79 890 0 890 1 0 0 1
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 890
+4 * 890
+3 * 890 0 890
cfi=(4)
cfn=(174)
calls=890 0x403ccc +42 
* * 12460 4450 4450
+5 * 890 890
+1 * 890 890

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210) std::vector<float, std::allocator<float> >::max_size() const
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10) std::vector<int, std::allocator<int> >::size() const
0x402f54 645 1812 0 1812 1 0 0 1
+1 * 1812
+3 * 1812 0 1812
+4 +1 1812 1812
+4 * 1812 1812 0 0 2 0 0 2
+4 * 1812
+3 * 1812 1812
+4 * 1812 1812
+3 * 1812
+3 * 1812
+3 * 1812
+4 * 1812 1812
+1 * 1812 1812

fn=(106)
0x40325e 113 1804 0 1804 1 0 0 1
+1 * 1804
+3 * 1804 0 1804
+4 +1 1804 1804
+4 * 1804 1804
+1 * 1804 1804

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254) std::vector<int, std::allocator<int> >::max_size() const
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8 1
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
0x403b08 117 906 0 906 1 0 0 1
+1 * 906
+3 * 906 0 906 0 0 1 0 0 1
+4 +1 906 906
+4 * 906 906
+1 * 906 906

fn=(82)
0x4039fc 117 906 0 906 1 0 0 1
+1 * 906
+3 * 906 0 906 1 0 0 1
+4 +1 906 906
+4 * 906 906
+1 * 906 906

fn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
0x402eda 901 445 0 445
+1 * 445
+3 * 445
+4 * 445 0 445
+4 * 445 0 445
+4 +2 445 445
+4 * 445 445
+4 * 445 445
+4 * 445 445
+4 * 445
+3 * 445 0 0 0 0 0 0 0 0 445 9
jcnd=8/445 +51 +10 
* * 
+2 +3 437 437
+4 * 437 437
+4 * 437 437
+4 -1 437 437
+4 * 437
+3 * 437
+3 * 437 0 437
cfi=(3)
cfn=(222)
calls=437 0x403373 215 
* * 16606 5681 6118 0 28 3 0 28 3 437 2
+5 +2 437 437
+4 * 437 437
+4 * 437
+4 * 437 437
+4 * 437 0 437
+4 * 437
jump=437 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12832 3937 3428 39 8 7 39 8 7 888 81 47
+5 +2 445 445
+1 * 445 445

fn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
0x4030b2 310 890 0 890 1 0 0 1
+1 * 890
+3 * 890 0 890
+2 * 890 0 890
+2 * 890 0 890
+1 * 890
+4 * 890 0 890 1 0 0 1
+4 * 890 0 890
+4 +2 890 890
+4 * 890
+3 * 890 0 890
cfn=(6)
calls=890 0x403b08 117 
* * 5340 2670 1780 1 0 1 1 0 1
+5 * 890
+3 * 890 0 890
cfi=(3)
cfn=(8)
calls=890 0x403afa -88 
* * 5340 2670 1780 1 0 0 1
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(10)
calls=890 0x402f54 645 
* * 11570 5340 1780 1 1 0 1 1
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890
+3 * 890
+3 * 890 0 890
cfn=(12)
calls=890 0x403b16 134 
* * 392322 82307 79653 30 18 13 30 18 13 47939 1661 1780
+5 +4 890 890 0 1 0 0 1
+4 * 890
+3 * 890 0 890
cfn=(40)
calls=890 0x40333c 113 
* * 5340 2670 1780 2 0 0 2
+5 * 890
+3 * 890 890
+4 * 890 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(42)
calls=890 0x403ba4 565 
* * 22250 8900 7120 3 0 0 3
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(46)
calls=890 0x403b74 547 
* * 22250 8900 7120
+5 * 890
+3 * 890
+3 * 890
+3 * 890
+3 * 890 0 890 1 0 0 1
cfi=(11)
cfn=(48)
calls=890 0x403bd5 -60 
* * 526732 178684 174238 26 3 6 26 3 6 20068 1181 1776 222
+5 -3 890 890
+4 * 890 0 890
+4 * 890
jump=890 +28 +4 
* * 
+28 +4 890
+4 * 890 890
+1 * 890 890
+2 * 890 890
+2 * 890 890
+1 * 890 890

fn=(108)
0x403a98 565 890 0 890 1 0 0 1
+1 * 890
+3 * 890
+4 * 890 0 890
+4 +1 890 890
+4 * 890 890
+4 * 890 0 890
+4 * 890
+4 * 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfi=(10)
cfn=(110)
calls=890 0x404380 726 
* * 8900 4450 3560 1 0 0 1
+5 * 890 890
+4 * 890 890
+1 * 890 890

fn=(178) std::vector<int, std::allocator<int> >::~vector()
0x402e74 414 890 0 890
+1 * 890
+3 * 890 0 890
+1 * 890
+4 * 890 0 890 1 0 0 1
+4 +2 890 890
+4 * 890
+3 * 890 0 890
cfn=(40)
calls=890 0x40333c 113 
* * 5340 2670 1780
+5 * 890
+3 * 890 890
+4 * 890 890
+4 * 890 890
+4 * 890 890
+3 -1 890
+3 * 890
+3 * 890 0 890
cfi=(14)
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=890 0x40334a 148 
* * 27590 8900 10680 2 0 0 2
+5 +1 890 890
+4 * 890
+3 * 890 0 890
cfn=(186)
calls=890 0x4032ca 159 
* * 181530 55030 35966 3 1 0 3 1 0 28434 295 1780
+5 * 890
jump=890 +28 * 
* * 
+28 * 890 0 0 1 0 0 1
+4 * 890 890
+1 * 890 890
+1 * 890 890

fn=(210)
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82)
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96)
0x403fbe 167 898 0 898 1 0 0 1
+1 * 898 0 0 1 0 0 1
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 0 898 898
+5 0 898 0 0 0 0 0 0 0 0 898
+2 0 898 898
+4 0 898 898
+4 0 898
+5 0 898
+3 0 898
+3 0 898 0 898
fi=(6)
cfi=(5)
cfn=(100)
calls=898 0x40461a 99 
* 0 302745 48045 46477 37 24 46 37 24 46 46926 2029 1796
+5 0 898
fi=(6)
jump=898 +7 0 
* 0 
+7 0 898 898
+1 0 898 898

fn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
0x402d9a 770 299930 0 299930
+1 * 299930
+3 * 299930 0 299930
+4 * 299930 0 299930
+4 +1 299930 299930
+4 * 299930 299930
+3 * 299930 299930
+4 * 299930
+4 * 299930
+3 * 299930 299930
+1 * 299930 299930

fn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
0x402dba 770 299930 0 299930
+1 * 299930
+3 * 299930 0 299930 1 0 0 1
+4 * 299930 0 299930
+4 +1 299930 299930
+4 * 299930 299930
+3 * 299930 299930
+4 * 299930
+4 * 299930
+3 * 299930 299930
+1 * 299930 299930

fn=(192)
0x403296 79 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 890
+4 * 890
+3 * 890 0 890
cfi=(4)
cfn=(194)
calls=890 0x403d7e +42 
* * 12460 4450 4450 1 0 0 1
+5 * 890 890
+1 * 890 890

fn=(254)
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fl=(12)
fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890 1 0 0 1
+4 * 890 0 890
+4 * 890 0 890
+4 +8 890 0 890
+4 +3 890 890
+4 * 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
calls=890 0x404f37 -22 
* * 346062 117274 111048 14 3 5 14 3 5 20068 1181 1776 222
+5 +1 890 890
+1 * 890 890

fn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
0x404be0 424 890 0 890
+1 * 890
+3 * 890 0 890
+2 * 890 0 890
+1 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +4 890 890
+4 * 890
+3 * 890 0 890
cfn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
calls=890 0x404878 277 
* * 13350 5340 4450 1 0 0 1
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=890 0x404d44 277 
* * 22250 8010 7120 2 0 0 2
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(132)
calls=890 0x404d44 277 
* * 22250 8010 7120
+5 * 890
+3 * 890
+3 * 890
+3 * 890 0 890
cfn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
calls=890 0x404d5e -49 
* * 359412 121724 116388 1 0 35 1 0 35 20068 1099 1776
+5 +1 890
+4 * 890 890
+1 * 890 890
+2 * 890 890
+1 * 890 890

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 890 0 890
+1 * 890
+3 * 890 0 890
+1 * 890
+4 * 890 0 890 1 0 0 1
+4 * 890 0 890
+4 * 890 0 890
+4 +10 890 890
+4 * 890
+3 * 890 0 890
cfn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=890 0x404c38 288 
* * 13350 5340 4450 3 0 0 3
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(56)
calls=890 0x404c38 288 
* * 13350 5340 4450
+5 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=890 0x404c52 -36 
* * 442182 149314 143978 20 3 6 20 3 6 20068 1181 1776 222
+5 +1 890
+4 * 890 890
+1 * 890 890
+1 * 890 890

fn=(60)
0x404c52 424 890 0 890
+1 * 890
+3 * 890 0 890
+2 * 890 0 890
+1 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +4 890 890
+4 * 890
+3 * 890 0 890
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=890 0x40492d 277 
* * 13350 5340 4450 2 0 0 2
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=890 0x404d9d 277 
* * 22250 8010 7120 2 0 1 2 0 1
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(66)
calls=890 0x404d9d 277 
* * 22250 8010 7120
+5 * 890
+3 * 890
+3 * 890
+3 * 890 0 890
cfn=(72)
calls=890 0x404db7 -49 
* * 359412 121724 116388 15 3 5 15 3 5 20068 1181 1776 222
+5 +1 890
+4 * 890 890
+1 * 890 890
+2 * 890 890
+1 * 890 890

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 5 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 938 0 938 1 0 0 1
+1 * 938
+3 * 938
+4 * 938 0 938
+4 +1 938 938
+4 * 938
+3 * 938 0 938 1 0 0 1
cfi=(13)
cfn=(64)
calls=938 -33 -66 
* * 5628 2814 1876
+5 * 938 938
+1 * 938 938

fn=(66)
0x404d9d 277 1780 0 1780
+1 * 1780
+3 * 1780
+4 * 1780 0 1780
+4 +1 1780 1780
+4 * 1780
+3 * 1780 0 1780
cfi=(13)
cfn=(68)
calls=1780 0x404f1a -58 
* * 28480 10680 8900 2 0 1 2 0 1
+5 * 1780 1780
+1 * 1780 1780

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(120)
0x4049e2 450 890 0 890
+1 * 890
+3 * 890 0 890
+1 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +10 890 890
+4 * 890
+3 * 890 0 890
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=890 0x404bc6 288 
* * 13350 5340 4450 3 0 0 3
+5 * 890
+3 * 890 890
+4 * 890
+3 * 890 0 890
cfn=(122)
calls=890 0x404bc6 288 
* * 13350 5340 4450
+5 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(126)
calls=890 0x404be0 -36 
* * 442182 149314 143978 4 0 35 4 0 35 20068 1099 1776
+5 +1 890
+4 * 890 890
+1 * 890 890
+1 * 890 890

fn=(128)
0x404878 277 938 0 938
+1 * 938
+3 * 938
+4 * 938 0 938 1 0 0 1
+4 +1 938 938
+4 * 938
+3 * 938 0 938
cfi=(13)
cfn=(130)
calls=938 -33 -66 
* * 5628 2814 1876 0 0 1 0 0 1
+5 * 938 938
+1 * 938 938

fn=(132)
0x404d44 277 1780 0 1780
+1 * 1780
+3 * 1780
+4 * 1780 0 1780
+4 +1 1780 1780
+4 * 1780
+3 * 1780 0 1780
cfi=(13)
cfn=(134)
calls=1780 0x404e98 -58 
* * 28480 10680 8900 2 0 0 2
+5 * 1780 1780
+1 * 1780 1780

fn=(138)
0x404d5e 379 890 0 890
+1 * 890
+3 * 890
+4 * 890 0 890
+4 * 890 0 890
+4 * 890 0 890
+4 +8 890 0 890
+4 +3 890 890
+4 * 890 890
+4 * 890 890
+4 * 890
+3 * 890
+3 * 890 0 890
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=890 0x404eb5 -22 
* * 346062 117274 111048 1 0 35 1 0 35 20068 1099 1776
+5 +1 890 890
+1 * 890 890

fn=(242)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 5 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1780 0 1780 1 0 0 1
+1 * 1780
+3 * 1780
+4 * 1780 0 1780
+4 +1 1780 1780
+4 * 1780
+3 * 1780 0 1780
cfi=(13)
cfn=(124)
calls=1780 0x404d36 -77 
* * 10680 5340 3560 2 0 0 2
+5 * 1780 1780
+1 * 1780 1780

fn=(56)
0x404c38 288 1780 0 1780 1 0 0 1
+1 * 1780
+3 * 1780
+4 * 1780 0 1780 1 0 0 1
+4 +1 1780 1780
+4 * 1780
+3 * 1780 0 1780
cfi=(13)
cfn=(58)
calls=1780 0x404d8f -77 
* * 10680 5340 3560 1 0 0 1
+5 * 1780 1780
+1 * 1780 1780

fn=(74)
0x404f37 368 906 0 906
+1 * 906
+3 * 906
+4 * 906 0 906 1 0 0 1
+4 * 906 0 906
+4 * 906 0 906
+4 +2 906 906
+4 * 906 906
+4 * 906
+3 * 906
+3 * 906
+4 * 906 0 906
+4 +1 906 906
+5 * 906 0 0 0 0 0 0 0 0 906
jcnd=8/906 +33 +2 
* * 
+2 +1 898 898
+4 * 898
+8 * 898 898
+4 * 898 898
+4 * 898
+3 * 898 0 0 1 0 0 1
+3 * 898 0 898 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=898 0x3877c83840 0 
* * 322264 107800 106009 11 2 22 11 2 22 19262 1186 893 222
* * 898 898 0 1 1 0 1 1 0 0 0 898
+5 +1 906 906
+4 * 906
+8 * 906 906
+4 * 906
+3 +1 906 906
+1 * 906 906

fn=(140)
0x404eb5 368 906 0 906
+1 * 906
+3 * 906
+4 * 906 0 906 1 0 0 1
+4 * 906 0 906
+4 * 906 0 906 0 0 1 0 0 1
+4 +2 906 906
+4 * 906 906
+4 * 906
+3 * 906
+3 * 906
+4 * 906 0 906
+4 +1 906 906
+5 * 906 0 0 0 0 0 0 0 0 906
jcnd=8/906 +33 +2 
* * 
+2 +1 898 898
+4 * 898
+8 * 898 898
+4 * 898 898
+4 * 898
+3 * 898
+3 * 898 0 898
cob=(2)
cfi=(9)
cfn=(78)
calls=898 0x3877c83840 0 
* * 322264 107800 106009 0 0 36 0 0 36 19262 1105 893
* * 898 898 0 0 0 0 0 0 0 0 0 898
+5 +1 906 906
+4 * 906
+8 * 906 906
+4 * 906
+3 +1 906 906
+1 * 906 906

fl=(10)
fn=(44)
0x404468 726 1780 0 1780
+1 * 1780
+3 * 1780 0 1780
+4 * 1780 0 1780
+4 * 1780 1780
+4 * 1780 1780
+3 * 1780 1780
+4 * 1780 0 1780 1 0 0 1
+3 * 1780 1780
+1 * 1780 1780

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1780 0 1780 1 0 0 1
+1 * 1780
+3 * 1780 0 1780
+4 +1 1780 1780
+4 * 1780 1780
+1 * 1780 1780

fn=(110)
0x404380 726 1780 0 1780 1 0 0 1
+1 * 1780
+3 * 1780 0 1780
+4 * 1780 0 1780
+4 * 1780 1780
+4 * 1780 1780
+3 * 1780 1780
+4 * 1780 0 1780
+3 * 1780 1780
+1 * 1780 1780

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1780 0 1780 1 0 0 1
+1 * 1780
+3 * 1780 0 1780
+4 +1 1780 1780
+4 * 1780 1780
+1 * 1780 1780

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 898 0 898 1 0 0 1
+1 * 898
+3 * 898 0 898
+4 * 898 0 898 1 0 0 1
+4 * 898 898
+1 * 898 898

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 898 0 898 1 0 0 1
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 +4 898 898
+4 * 898 898
+4 * 898
+3 * 898
+3 * 898 0 898
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=898 0x40454c -14 
* * 5388 1796 2694 1 0 0 1
+5 +2 898 898
+1 * 898 898

fn=(150)
0x40326c 148 898 0 898
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 * 898 0 898
+4 +3 898 898 0 1 0 0 1
+4 * 898 898
+4 * 898
+3 * 898
+3 * 898 0 898
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=898 0x403d1a -29 
* * 16164 5388 6286 3 0 0 3
+5 +1 898 898
+1 * 898 898

fn=(180)
0x40334a 148 898 0 898
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 * 898 0 898
+4 +3 898 898
+4 * 898 898
+4 * 898
+3 * 898
+3 * 898 0 898
cfn=(182)
calls=898 0x403dcc -29 
* * 16164 5388 6286 2 0 0 2
+5 +1 898 898
+1 * 898 898

fn=(152)
0x403d1a 122 898 0 898 1 0 0 1
+1 * 898
+3 * 898
+4 * 898 0 898
+4 * 898 0 898
+4 +4 898 898
+4 * 898 898
+4 * 898
+3 * 898
+3 * 898 0 898
cfn=(154)
calls=898 0x4044f8 -14 
* * 5388 1796 2694 2 0 0 2
+5 +2 898 898
+1 * 898 898

fn=(184)
0x40454c 112 898 0 898 1 0 0 1
+1 * 898
+3 * 898 0 898
+4 * 898 0 898
+4 * 898 898
+1 * 898 898

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2437 443 450 0 1 8 0 1 8 344 47 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 1 4 0 1 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 5 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 19 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3404 702 656 16 7 3 16 7 3 538 69 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 6 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 445 0 445 1 0 0 1
+1 * 445
+3 * 445
+4 * 445 0 445
+4 * 445 0 445
+4 +1 445 445
+4 * 445
+3 * 445 0 445
cfi=(2)
cfn=(2)
calls=445 0x402d74 645 
* * 5785 2670 890
+5 * 445
+3 * 445 0 445
+3 +1 445 445
+6 * 445 0 445
+3 * 445 445
+6 * 445 0 445
+3 +1 445 445
+6 * 445 0 445 1 0 0 1
+3 * 445 445
+6 * 445 0 445
+3 +2 445 0 445
+7 * 445
jump=445 +86 * 
* * 
+2 +1 99680 99680
+3 * 99680
+3 * 99680 99680
+4 * 99680
+3 * 99680
+3 * 99680 0 99680
cfi=(2)
cfn=(144)
calls=99680 0x402d9a 770 
* * 1096480 498400 299040
+5 * 99680 99680
+4 * 99680 99680
+5 * 99680
+4 * 99680 0 99680
+5 +1 99680 99680
+3 * 99680
+3 * 99680 99680
+4 * 99680
+3 * 99680
+3 * 99680 0 99680
cfi=(2)
cfn=(146)
calls=99680 0x402dba 770 
* * 1096480 498400 299040 1 0 0 1
+5 * 99680 99680
+2 * 99680
+4 * 99680 99680
+5 * 99680
+4 * 99680 0 99680
+5 -2 99680 0 99680
+4 * 99680 99680
+3 * 99680
+3 * 99680 99680
+3 * 99680 0 0 0 0 0 0 0 0 99680 446
jcnd=99235/99680 -93 +1 
* * 
-9 * 445 445 0 1 0 0 1
+3 * 445
+3 * 445 445
+3 * 445 0 0 0 0 0 0 0 0 445
jcnd=445/445 -93 +1 
* * 
+2 +4 445 445
+3 * 445
+3 * 445
+4 * 445 445 0 1 0 0 1
+5 * 445
+4 * 445
+3 * 445 0 445
+5 +1 445 445
+3 * 445
+3 * 445
+4 * 445 445
+5 * 445
+4 * 445
+3 * 445 0 445
+5 +1 445 0 445
+7 * 445
jump=445 0x4016ee * 
* * 
+2 +1 99680 99680
+3 * 99680
+3 * 99680 99680
+4 * 99680
+3 * 99680 0 0 1 0 0 1
+3 * 99680 0 99680
cfi=(2)
cfn=(146)
calls=99680 0x402dba 770 
* * 1096480 498400 299040
+5 * 99680 99680
+2 * 99680
+4 * 99680 99680
+5 * 99680 0 99680
+5 +1 99680 99680
+3 * 99680
+3 * 99680 99680
+4 * 99680
+3 * 99680
+3 * 99680 0 99680
cfi=(2)
cfn=(144)
calls=99680 0x402d9a 770 
* * 1096480 498400 299040
+5 * 99680 99680
+4 * 99680 99680
+5 * 99680 0 99680
+5 +1 99680 99680
+5 * 99680 99680
+5 * 99680 99680
+5 * 99680
+4 * 99680 0 99680
+5 +1 99680 99680
+5 * 99680 99680
+5 * 99680 99680
+5 * 99680
+4 * 99680 0 99680
+5 -4 99680 0 99680
+4 * 99680 99680
+3 * 99680
+3 * 99680 99680
+3 * 99680 0 0 0 0 0 0 0 0 99680 446
jcnd=99235/99680 0x401672 +1 
* * 
-9 * 445 445 0 1 0 0 1
+3 * 445
+3 * 445 445
+3 * 445 0 0 0 0 0 0 0 0 445
jcnd=445/445 0x401672 +1 
* * 
+6 +6 445 445 0 1 0 0 1
+5 * 445 445
+5 * 445 0 445
+5 +2 445 445
+3 +1 445 0 445
+3 * 445 445
+5 * 445 445
+1 * 445 445

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 445
+7 * 445
+7 * 445
+3 * 445
+3 * 445 0 445
cfi=(2)
cfn=(4)
calls=445 0x4030b2 310 
* * 518013 152315 144361 64 22 19 64 22 19 34018 1636 1778 222
+5 * 445
+7 * 445
+7 * 445
+3 * 445
+3 * 445 0 445
cfi=(2)
cfn=(80)
calls=445 0x402ff4 310 
* * 516222 151357 141743 45 17 78 45 17 78 33817 1700 1778
+5 * 445 0 0 1 0 0 1
+7 * 445
+7 * 445
+3 * 445
+3 * 445 0 445
cfn=(142)
calls=445 0x401585 -52 
* * 10395645 4596405 2399885 8 0 0 8 0 0 200250 892
+5 * 445 0 445
+8 * 445 445
+6 * 445 0 445
+6 * 445
+7 * 445
+3 * 445 0 445
cfi=(2)
cfn=(148)
calls=445 0x402df4 414 
* * 114998 36189 25903 33 6 0 33 6 0 13405 274 890
+5 * 445
+7 * 445
+3 * 445 0 445 1 0 0 1
cfi=(2)
cfn=(178)
calls=445 0x402e74 414 
* * 117910 37305 26883 7 1 0 7 1 0 14217 148 890
+5 +2 445
+7 * 445
+7 * 445
+3 * 445
+3 * 445 0 445
cfi=(2)
cfn=(4)
calls=445 0x4030b2 310 
* * 517631 152286 144240 4 0 1 4 0 1 33989 1206 1778
+5 * 445
+7 * 445
+7 * 445
+3 * 445
+3 * 445 0 445
cfi=(2)
cfn=(80)
calls=445 0x402ff4 310 
* * 514679 151250 141538 0 0 0 0 0 0 33537 1359 1778
+5 * 445 445
+6 * 445 0 0 1 0 0 1
+7 * 445
+7 * 445 0 445
+6 * 445 445
+8 * 445
+3 * 445
+3 * 445 0 445
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=445 0x401719 -33 
* * 4810895 2003390 1103155 4 0 0 4 0 0 100125 446
+5 * 445 0 445
+8 * 445 445
+6 * 445 0 445
+6 * 445
+7 * 445 0 0 1 0 0 1
+3 * 445 0 445
cfi=(2)
cfn=(148)
calls=445 0x402df4 414 
* * 114998 36189 25903 0 0 0 0 0 0 13405 271 890
+5 * 445
+7 * 445
+3 * 445 0 445
cfi=(2)
cfn=(178)
calls=445 0x402e74 414 
* * 117910 37305 26883 0 0 0 0 0 0 14217 147 890
+5 +2 445 445
+7 * 445
+3 * 445 0 445
cfi=(2)
cfn=(2)
calls=445 0x402d74 645 
* * 5785 2670 890
+5 * 445 445
+6 * 445
+3 * 445
+3 * 445
+3 * 445 445
+7 * 445
+3 * 445 0 0 1 0 0 1
+3 * 445 0 445
cfi=(2)
cfn=(144)
calls=445 0x402d9a 770 
* * 4895 2225 1335
+5 * 445
+3 * 445
+7 * 445
+3 * 445
+3 * 445 0 445
cfi=(2)
cfn=(200)
calls=445 0x402eda 901 
* * 41160 15443 11827 42 36 10 42 36 10 1770 92 47
+5 +1 445 445
+7 * 445
+3 * 445 0 445
cfi=(2)
cfn=(10)
calls=445 0x402f54 645 
* * 5785 2670 890 0 1 0 0 1
+5 * 445 445
+6 * 445
+3 * 445
+3 * 445
+3 * 445 445
+7 * 445 0 0 1 0 0 1
+3 * 445
+3 * 445 0 445
cfi=(2)
cfn=(146)
calls=445 0x402dba 770 
* * 4895 2225 1335
+5 * 445
+3 * 445
+7 * 445
+3 * 445
+3 * 445 0 445
cfi=(2)
cfn=(244)
calls=445 0x402f7a 901 
* * 40226 15201 11624 19 30 46 19 30 46 1585 72 47
+5 +1 445 445
+7 * 445
+3 * 445 0 445
cfi=(2)
cfn=(10)
calls=445 0x402f54 645 
* * 5785 2670 890
+5 * 445 445
+6 * 445
+3 * 445
+3 * 445
+3 * 445 445 0 1 0 0 1
+7 * 445
+3 * 445
+3 * 445 0 445
cfi=(2)
cfn=(146)
calls=445 0x402dba 770 
* * 4895 2225 1335
+5 * 445 445
+2 * 445
+4 * 445 445
+8 * 445 445
+8 * 445 0 445
+8 +1 445 445
+7 * 445
+3 * 445 0 445
cfi=(2)
cfn=(2)
calls=445 0x402d74 645 
* * 5785 2670 890
+5 * 445 445 0 1 0 0 1
+6 * 445
+3 * 445
+3 * 445
+3 * 445 445
+7 * 445
+3 * 445
+3 * 445 0 445
cfi=(2)
cfn=(144)
calls=445 0x402d9a 770 
* * 4895 2225 1335
+5 * 445 445
+4 * 445 445
+8 * 445
+4 * 445 445
+8 * 445
+3 * 445 0 445
+8 +2 445 0 445
+7 -12 445 445
+8 * 445 445
+7 * 445 0 0 0 0 0 0 0 0 445 2
jcnd=1/445 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 445
+7 * 445
+3 * 445 0 445
cfi=(2)
cfn=(2)
calls=445 0x402d74 645 
* * 5785 2670 890 2 0 1 2 0 1
+5 * 445
+3 * 445 445
+7 * 445
+3 * 445 0 445
cfi=(2)
cfn=(2)
calls=445 0x402d74 645 
* * 5785 2670 890 0 1 0 0 1
+5 * 445
+3 * 445 0 0 0 0 0 0 0 0 445
+2 * 445 0 0 1 0 0 1
+5 * 445
jump=445 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 445
+2 * 445 0 0 0 0 0 0 0 0 445
jcnd=445/445 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 445 0 445
+1 * 445
+3 * 445
+4 * 445 0 445
+4 * 445 0 445
+4 * 445 0 445
+5 +1 445 445
+4 * 445
+3 * 445 0 445
cfi=(2)
cfn=(2)
calls=445 0x402d74 645 
* * 5785 2670 890
+5 * 445
+3 * 445 0 445
+3 +1 445 445 0 1 0 0 1
+6 * 445 0 445
+3 * 445 445
+6 * 445 0 445
+3 +2 445 0 445
+7 * 445
jump=445 +86 * 
* * 
+2 +1 99680 99680
+3 * 99680
+3 * 99680 99680
+4 * 99680
+3 * 99680
+3 * 99680 0 99680
cfi=(2)
cfn=(144)
calls=99680 0x402d9a 770 
* * 1096480 498400 299040
+5 * 99680 99680
+4 * 99680 99680
+5 * 99680
+4 * 99680 0 99680
+5 +1 99680 99680
+3 * 99680
+3 * 99680 99680
+4 * 99680
+3 * 99680
+3 * 99680 0 99680
cfi=(2)
cfn=(146)
calls=99680 0x402dba 770 
* * 1096480 498400 299040
+5 * 99680 99680
+2 * 99680
+4 * 99680 99680
+5 * 99680
+4 * 99680 0 99680
+5 -2 99680 0 99680
+4 * 99680 99680
+3 * 99680
+3 * 99680 99680
+3 * 99680 0 0 0 0 0 0 0 0 99680 446
jcnd=99235/99680 -93 +1 
* * 
-9 * 445 445 0 1 0 0 1
+3 * 445
+3 * 445 445
+3 * 445 0 0 0 0 0 0 0 0 445
jcnd=445/445 -93 +1 
* * 
+2 +4 445 445
+3 * 445
+3 * 445 0 0 1 0 0 1
+4 * 445 445
+5 * 445
+4 * 445
+3 * 445 0 445
+5 +1 445 445
+3 * 445
+3 * 445
+4 * 445 445
+5 * 445
+4 * 445
+3 * 445 0 445
+5 +1 445 445
+5 * 445 445
+5 * 445 445
+5 * 445 0 0 1 0 0 1
+4 * 445
+3 * 445 0 445
+5 +2 445 445
+3 +1 445 0 445
+3 * 445 445
+5 * 445 445
+1 * 445 445

ob=(2)
fl=(9)
fn=(36)
0x3877c7aa50 0 1796 0 1796 1 0 0 1
+5 0 1796 0 1796
+5 0 1796
+3 0 1796 0 1796
+5 0 1796
+4 0 1796 1796 0 0 1 0 0 1
+7 0 1796 1796 0 0 1 0 0 1
+3 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796
+6 0 1796 1796 0 0 1 0 0 1
+7 0 1796 1796 0 1 1 0 1 1
+4 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796
+2 0 1796 1796 0 0 1 0 0 1
+3 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796
jcnd=1796/1796 +97 0 
* 0 
+18 0 1796
+3 0 1796
+3 0 1796 0 1796
cfn=(38) _int_malloc
calls=1796 0x3877c79a00 0 
* 0 458402 56517 67536 44 35 62 44 35 62 72759 3649
+5 0 1796
+3 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796
+2 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796
+2 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796 5
+2 0 1796 1796
+7 0 1796 0 0 0 0 0 0 0 0 1796
jcnd=1796/1796 +13 0 
* 0 
+13 0 1796 0 1796
+2 0 1796 0 0 0 0 0 0 0 0 1796 83
+6 0 1796
+3 0 1796 1796
+4 0 1796 1796
+5 0 1796 1796
+5 0 1796
+4 0 1796 1796
+1 0 1796 0 0 1 0 0 1
+5 0 1796 1796 0 0 1 0 0 1
+7 0 1796 0 0 0 0 0 0 0 0 1796
jcnd=1796/1796 +14 0 
* 0 
+14 0 1796 0 1796 1 0 0 1
+3 0 1796 0 0 0 0 0 0 0 0 1796
+6 0 1796
jump=1796 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1796 0 1796 1 0 0 1
+2 0 1796
+3 0 1796
+3 0 1796 0 1796
+2 0 1796
+3 0 1796 0 1796
+1 0 1796
+3 0 1796 0 1796
+1 0 1796
+3 0 1796
+4 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796
+6 0 1796
+4 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796 4
jcnd=10/1796 0x3877c838d1 0 
* 0 
+2 0 1786
+3 0 1786
+3 0 1786
+3 0 1786
+3 0 1786
+3 0 1786 0 0 0 0 0 0 0 0 1786
jcnd=1786/1786 +41 0 
* 0 
+41 0 1786 0 0 1 0 0 1
+3 0 1786 0 0 0 0 0 0 0 0 1786
jcnd=1786/1786 0x3877c839c0 0 
* 0 
+24 0 1786
+3 0 1786
+4 0 1786
+3 0 1786
+3 0 1786
+3 0 1786
+3 0 1786
+3 0 1786 0 0 0 0 0 0 0 0 1786 960
jcnd=902/1786 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 894
+10 0 894 894 0 0 1 0 0 1
+3 0 894
+4 0 894 0 894
+3 0 894
+4 0 894
+4 0 894 0 0 0 0 0 0 0 0 894
jcnd=894/894 -18 0 
* 0 
-18 0 2738 2738
+3 0 2738
+4 0 2738 0 2738
+3 0 2738
+4 0 2738
+4 0 2738 0 0 0 0 0 0 0 0 2738 8
jcnd=1844/2738 -18 0 
* 0 
+2 0 1796
+4 0 1796
+3 0 1796 1796
+1 0 1796 1796
+1 0 1796 1796
+2 0 1796 1796 0 1 0 0 1
+2 0 1796 1796
0x3877c839c0 0 1786 0 0 1 0 0 1
+3 0 1786
+3 0 1786
+3 0 1786
+4 0 1786 0 1786 0 0 1 0 0 1
cfn=(284) _wordcopy_fwd_aligned
calls=1786 0x3877c89b20 0 
* 0 543018 202988 199416 6 1 57 6 1 57 25932 1319 1786 222
+5 0 1786
jump=1786 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1796 1796 0 1 1 0 1 1
+7 0 1796 1796 0 0 1 0 0 1
+3 0 1796
+3 0 1796 0 0 1 0 0 1 0 0 1796
+6 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796
+6 0 1796 1796
+4 0 1796
+4 0 1796
+2 0 1796 0 0 0 0 0 0 0 0 1796
+2 0 1796
+2 0 1796
+7 0 1796 0 0 0 0 0 0 0 0 1796
jcnd=1796/1796 +14 0 
* 0 
+14 0 1796
+2 0 1796
cfn=(170) _int_free
calls=1796 0x3877c78650 0 
* 0 184225 49455 29257 19 3 0 19 3 0 44881 857

fn=(286) malloc_consolidate
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 7 7
+5 0 7
+3 0 7 7
+5 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+4 0 7 0 0 0 0 0 0 0 0 7
+6 0 7 7
+9 0 7 0 7
+4 0 7 0 7
+4 0 7 0 0 0 0 0 0 0 0 7 3
jcnd=7/7 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=19/20 +18 0 
* 0 
+2 0 1 0 1
+8 0 1 0 1
+8 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
-29 0 19
+3 0 19 0 19
+4 0 19 0 19
+4 0 19
+4 0 19 0 19
+4 0 19 0 19
+4 0 19
+3 0 19
+3 0 19 0 0 0 0 0 0 0 0 19 8
jcnd=7/19 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 7
jcnd=8/20 +70 0 
* 0 
+2 0 12 12
+3 0 12
+3 0 12
+3 0 12 12
+4 0 12 12
+4 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+4 0 12 0 0 0 0 0 0 0 0 12
+6 0 12 12
+8 0 12 0 12
+4 0 12 0 12
+4 0 12 0 0 0 0 0 0 0 0 12
jcnd=12/12 +15 0 
* 0 
+15 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 1 0 0 1
+6 0 20 0 0 0 0 0 0 0 0 20 10
jcnd=7/20 0x3877c75e68 0 
* 0 
+6 0 13 0 13
+6 0 13
jump=13 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(170)
0x3877c78650 0 1796 0 1796 1 0 0 1
+2 0 1796 0 1796
+2 0 1796 0 1796
+2 0 1796
+3 0 1796 0 1796
+2 0 1796 0 1796
+1 0 1796 0 1796
+1 0 1796
+3 0 1796
+4 0 1796 1796
+4 0 1796 0 1796
+4 0 1796
+3 0 1796
+4 0 1796
+3 0 1796
+3 0 1796
+3 0 1796 0 0 1 0 0 1 0 0 1796
+6 0 1796
+4 0 1796 0 0 0 0 0 0 0 0 1796
+6 0 1796
+4 0 1796 0 0 0 0 0 0 0 0 1796
+6 0 1796 1796
+7 0 1796 0 0 0 0 0 0 0 0 1796 2
jcnd=1672/1796 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124 0 0 1 0 0 1
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1672
+2 0 1672 0 0 0 0 0 0 0 0 1672
+6 0 1672 1672 0 1 0 0 1
+4 0 1672
+3 0 1672
+2 0 1672 0 0 0 0 0 0 0 0 1672
jcnd=1672/1672 0x3877c78a40 0 
* 0 
+6 0 1672 1672
+4 0 1672
+3 0 1672 0 0 0 0 0 0 0 0 1672
+6 0 1672 1672
+5 0 1672
+4 0 1672 0 0 0 0 0 0 0 0 1672
jcnd=1672/1672 0x3877c7907c 0 
* 0 
+6 0 1672 1672
+5 0 1672
+4 0 1672 0 0 0 0 0 0 0 0 1672
+6 0 1672
+4 0 1672 0 0 1 0 0 1 0 0 1672
+6 0 1672
+4 0 1672 1672
+7 0 1672 0 0 0 0 0 0 0 0 1672
+6 0 1672 1672
+6 0 1672
+2 0 1672 0 0 0 0 0 0 0 0 1672
+6 0 1672 1672
+4 0 1672 0 0 0 0 0 0 0 0 1672 5
jcnd=1668/1672 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 1
jcnd=4/4 +15 0 
* 0 
+15 0 1672 1672 0 1 0 0 1
+4 0 1672 0 0 0 0 0 0 0 0 1672 352
jcnd=352/1672 0x3877c78bf0 0 
* 0 
+6 0 1320 1320 0 0 1 0 0 1
+6 0 1320 0 0 1 0 0 1 0 0 1320 76
jcnd=61/1320 0x3877c78a78 0 
* 0 
+6 0 1259 1259
+5 0 1259 1259
+5 0 1259 1259
+4 0 1259 0 0 0 0 0 0 0 0 1259
+6 0 1259 1259
+4 0 1259 0 0 0 0 0 0 0 0 1259
+6 0 1259 1259
+9 0 1259 0 1259
+4 0 1259 0 1259
+4 0 1259 0 0 0 0 0 0 0 0 1259 331
jcnd=851/1259 +16 0 
* 0 
+2 0 408 408
+5 0 408
+3 0 408 0 0 1 0 0 1 0 0 408
+6 0 1259
+3 0 1259
+4 0 1259 1259
+4 0 1259 1259
+4 0 1259 0 0 0 0 0 0 0 0 1259
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 1320
+7 0 1320 0 1320
+4 0 1320 0 1320
+4 0 1320 0 0 0 0 0 0 0 0 1320 88
jcnd=441/1320 +18 0 
* 0 
+2 0 879 0 879
+8 0 879 0 879
+8 0 879 0 879
+4 0 879
+3 0 879 0 879 1 0 0 1
+4 0 879
+4 0 879 0 879
+4 0 879 0 879
+4 0 879
+7 0 879 0 0 0 0 0 0 0 0 879
jcnd=879/879 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 352
+7 0 352 0 0 0 0 0 0 0 0 352
jcnd=352/352 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1672 0 0 1 0 0 1
+5 0 1672 1672
+4 0 1672 1672
+7 0 1672 0 0 0 0 0 0 0 0 1672
jcnd=1672/1672 +16 0 
* 0 
+16 0 1672 0 1672
+5 0 1672 0 0 0 0 0 0 0 0 1672
+6 0 1672
+3 0 1672
jump=1672 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1672 1672 0 1 0 0 1
+4 0 1672
+2 0 1672 0 0 0 0 0 0 0 0 1672
+6 0 1672 1672
+7 0 1672 0 0 0 0 0 0 0 0 1672
jcnd=1672/1672 +15 0 
* 0 
+15 0 1672 0 1672 1 0 0 1
+4 0 1672 0 0 0 0 0 0 0 0 1672
+6 0 1672
+4 0 1672 1672
+1 0 1672 1672
+1 0 1672 1672
+2 0 1672 1672
+2 0 1672 1672
+2 0 1672 1672
+2 0 1672 1672
0x3877c78bf0 0 352 0 0 1 0 0 1
+3 0 352 0 352
+4 0 352
+3 0 352
+4 0 352 0 352 1 0 0 1
+4 0 352
jump=352 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1672 1672 0 1 1 0 1 1
+4 0 1672 0 0 1 0 0 1
+7 0 1672
+4 0 1672
+3 0 1672
+3 0 1672 0 0 0 0 0 0 0 0 1672
jcnd=1672/1672 0x3877c787ab 0 
* 0 

fn=(284)
0x3877c89b20 0 1786 0 0 1 0 0 1
+7 0 1786
+3 0 1786
+3 0 1786 1786 0 0 1 0 0 1
+4 0 1786
+4 0 1786 0 0 0 0 0 0 0 0 0 0 1786 222
jump=216 0x3877c89be8 0 
* 0 
jump=226 0x3877c89bd0 0 
* 0 
jump=220 0x3877c89bb8 0 
* 0 
jump=224 +11 0 
* 0 
jump=224 0x3877c89c48 0 
* 0 
jump=226 0x3877c89c30 0 
* 0 
jump=224 0x3877c89c18 0 
* 0 
jump=226 0x3877c89c00 0 
* 0 
+11 0 224 224
+3 0 224
+4 0 224
+4 0 224 224
+4 0 224
+4 0 224 0 224
+4 0 224
+9 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-40 0 24590 24590
+4 0 24590 0 24590 0 0 14 0 0 14
+4 0 24590 24590
+4 0 24590 0 24590
+4 0 24590 24590
+4 0 24590 0 24590 0 0 4 0 0 4
+4 0 24590 24590
+4 0 24590 0 24590 0 0 18 0 0 18
+4 0 24590
+4 0 24590
+4 0 24590 0 0 0 0 0 0 0 0 24590 1313
jcnd=1750/24590 0x3877c89c60 0 
* 0 
-32 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226
+4 0 226
+4 0 226 0 0 0 0 0 0 0 0 226
jcnd=10/226 0x3877c89c60 0 
* 0 
-24 0 224 224
+4 0 224 0 224
+4 0 224 224
+4 0 224 0 224
+4 0 224
+4 0 224
+4 0 224 0 0 0 0 0 0 0 0 224
jcnd=8/224 0x3877c89c60 0 
* 0 
-16 0 226 226 0 1 0 0 1
+4 0 226 0 226
+4 0 226 0 0 1 0 0 1
+4 0 226
+4 0 226 0 0 0 0 0 0 0 0 226 6
jcnd=10/226 0x3877c89c60 0 
* 0 
+6 0 23704
+4 0 23704 23704
+3 0 23704 0 23704 0 0 20 0 0 20
+3 0 23704 23704
+4 0 23704 0 23704
+4 0 23704 23704
+4 0 23704 0 23704
+4 0 23704 23704
+4 0 23704 0 23704
+4 0 23704
jump=23704 -80 0 
* 0 
-30 0 216 216
+3 0 216 0 216
+3 0 216 216
+4 0 216 0 216
+4 0 216 216
+4 0 216 0 216 0 0 1 0 0 1
+4 0 216 216
+4 0 216 0 216
+4 0 216
jump=216 -80 0 
* 0 
-24 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226 226
+4 0 226 0 226
+4 0 226
jump=226 -80 0 
* 0 
-16 0 220 220
+4 0 220 0 220
+4 0 220 220
+4 0 220 0 220
+4 0 220
jump=220 -80 0 
* 0 
+8 0 220 220
+3 0 220
+4 0 220 0 0 1 0 0 1
+4 0 220
+4 0 220
jump=220 -39 0 
* 0 
+9 0 226
+3 0 226 0 0 0 0 0 0 0 0 226
+6 0 226 226
+3 0 226
+4 0 226
jump=226 -72 0 
* 0 
+8 0 216
+4 0 216 216
+3 0 216 0 0 0 0 0 0 0 0 216
+2 0 216
+4 0 216
jump=216 -99 0 
* 0 
+11 0 226 226 0 1 0 0 1
+3 0 226
+4 0 226
+4 0 226
+4 0 226
jump=226 0x3877c89b78 0 
* 0 
+9 0 224 224
+3 0 224
+4 0 224
+4 0 224
+4 0 224
jump=224 0x3877c89b70 0 
* 0 
+9 0 226 226
+3 0 226
+4 0 226
+4 0 226
+4 0 226
jump=226 0x3877c89b68 0 
* 0 
+9 0 224 224
+3 0 224
+4 0 224
+4 0 224
+4 0 224
jump=224 0x3877c89b60 0 
* 0 
+9 0 1786 0 1786 1 0 0 1
+3 0 1786 1786

fn=(104) alloc_perturb
0x3877c77180 0 1662 1662 0 1 0 0 1
+6 0 1662
+2 0 1662 0 0 0 0 0 0 0 0 1662 34
+2 0 1662 1662

fn=(38)
0x3877c79a00 0 1796 0 1796 1 0 0 1
+2 0 1796
+3 0 1796 0 1796
+2 0 1796 0 1796
+2 0 1796 0 1796 0 0 1 0 0 1
+2 0 1796
+3 0 1796 0 1796
+1 0 1796 0 1796
+1 0 1796
+4 0 1796
+4 0 1796 0 0 0 0 0 0 0 0 1796
+6 0 1796
+4 0 1796
+6 0 1796
+3 0 1796
+4 0 1796
+4 0 1796
+4 0 1796
+3 0 1796 0 0 0 0 0 0 0 0 1796
+6 0 1796 1796 0 1 1 0 1 1
+7 0 1796 0 0 0 0 0 0 0 0 1796 5
jcnd=1674/1796 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1662
+4 0 1662 1662
+1 0 1662 1662
+1 0 1662 1662
+2 0 1662 1662
+2 0 1662 1662
+2 0 1662 1662
+2 0 1662 1662
+7 0 1691
+7 0 1691 0 0 1 0 0 1 0 0 1691 7
jcnd=788/1691 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 11 0 0 11
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 788 0 0 1 0 0 1
+3 0 788
+4 0 788
+4 0 788 0 0 1 0 0 1 0 0 788 2
jcnd=788/788 0x3877c7a1a4 0 
* 0 
+30 0 788 788
+6 0 788
+5 0 788 0 0 0 0 0 0 0 0 788 1
jcnd=787/788 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286)
calls=1 0x3877c75e10 0 
* 0 907 246 190 8 1 0 8 1 0 189 33
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1690 0 0 1 0 0 1
+3 0 1690
+3 0 1690
+3 0 1690
+4 0 1690
+3 0 1690
+4 0 1690 0 1690
+5 0 1690
+3 0 1690 0 1690
+4 0 1690 0 1690
+4 0 1690 0 1690
+5 0 1690
+3 0 1690
+3 0 1690
+3 0 1690
+3 0 1690
+4 0 1690
+4 0 1690 0 0 1 0 0 1
+4 0 1690 0 1690
+4 0 1690
+4 0 1690 0 1690
+5 0 1690 0 1690
+5 0 1690
+3 0 1690
+3 0 1690 0 1690
+5 0 1690
+5 0 1690
+3 0 1690 0 1690
+4 0 1690 0 1690
+4 0 1690
+6 0 1690 0 1690
+4 0 1690 0 1690
+5 0 1690 0 0 1 0 0 1
+3 0 1690
+3 0 1690
+3 0 1690
jump=1690 +87 0 
* 0 
+8 0 1173
+3 0 1173
+4 0 1173
+2 0 1173
+2 0 1173
+3 0 1173
+3 0 1173
+3 0 1173
+2 0 1173
+2 0 1173
+5 0 1173
+2 0 1173 1173 0 0 1 0 0 1
+4 0 1173
+3 0 1173
+4 0 1173 0 1173
+4 0 1173 0 1173
+8 0 1173
+7 0 1173 0 1173
+4 0 1173 0 1173 0 0 1 0 0 1
+4 0 1173 0 1173
+4 0 1173 0 0 0 0 0 0 0 0 1173
-38 0 854
+3 0 854
+4 0 854 0 854
+4 0 854 0 854
+8 0 854
+7 0 854 0 854
+4 0 854 0 854
+4 0 854 0 854
+4 0 854 0 0 0 0 0 0 0 0 854
+6 0 3718 3718 0 1 0 0 1
+4 0 3718
+3 0 3718 0 0 0 0 0 0 0 0 3718 91
jcnd=1627/3718 0x3877c79ef0 0 
* 0 
+6 0 2091 2091
+4 0 2091 2091
+4 0 2091
+4 0 2091 0 0 0 0 0 0 0 0 2091
+6 0 2091 2091 0 1 0 0 1
+7 0 2091 0 0 0 0 0 0 0 0 2091 2
+6 0 2091
+4 0 2091
+7 0 2091 0 0 0 0 0 0 0 0 2091 9
jcnd=807/2091 +11 0 
* 0 
+2 0 1284
+3 0 1284 0 0 0 0 0 0 0 0 1284 599
jcnd=865/1284 0x3877c79e28 0 
* 0 
+6 0 2056
+3 0 2056 0 2056
+4 0 2056 0 2056
+5 0 2056 0 0 0 0 0 0 0 0 2056 17
jcnd=29/2056 0x3877c7a090 0 
* 0 
+6 0 2027
+7 0 2027 0 0 0 0 0 0 0 0 2027 391
jcnd=1173/2027 0x3877c79c50 0 
* 0 
+6 0 854 0 0 1 0 0 1
+3 0 854
+4 0 854
+4 0 854 0 0 0 0 0 0 0 0 854 12
jcnd=384/854 0x3877c79db0 0 
* 0 
+6 0 470
+3 0 470
+4 0 470
+2 0 470
+2 0 470
+3 0 470
+3 0 470
+8 0 470
+3 0 470
+2 0 470
+2 0 470
+4 0 470 470 0 0 1 0 0 1
+4 0 470
+3 0 470 0 0 1 0 0 1 0 0 470 9
jcnd=470/470 0x3877c79e15 0 
* 0 
-36 0 384
+2 0 384
+2 0 384
+3 0 384
+3 0 384
+8 0 384
+3 0 384
+2 0 384
+2 0 384
+4 0 384 384
+4 0 384
+3 0 384 0 0 0 0 0 0 0 0 384
jcnd=384/384 0x3877c79e15 0 
* 0 
0x3877c79db0 0 384 0 0 1 0 0 1
+3 0 384
+4 0 384
+4 0 384 0 0 0 0 0 0 0 0 384
+2 0 384
+3 0 384 0 0 1 0 0 1
+7 0 384
jump=384 0x3877c79d18 0 
* 0 
+78 0 854 0 854
+4 0 854 0 854
+4 0 854
+3 0 854
jump=854 0x3877c79c73 0 
* 0 
+8 0 865 865 0 1 0 0 1
+4 0 865
+3 0 865 0 0 0 0 0 0 0 0 865 24
jcnd=443/865 0x3877c79ce1 0 
* 0 
+6 0 422 422
+5 0 422 0 0 0 0 0 0 0 0 422 8
jcnd=387/422 0x3877c79ce1 0 
* 0 
+6 0 35 0 0 1 0 0 1
+3 0 35
+3 0 35
+3 0 35
+7 0 35 0 35
+4 0 35 0 35
+4 0 35
+3 0 35 0 35
+4 0 35 0 35 0 0 16 0 0 16
+4 0 35 0 35
+4 0 35 0 0 0 0 0 0 0 0 35 4
jcnd=12/35 +18 0 
* 0 
+2 0 23 0 23 0 0 1 0 0 1
+8 0 23 0 23
+8 0 23
+7 0 23 0 23
+4 0 23
+3 0 23
+3 0 23
+3 0 23
+4 0 23
+3 0 23
+4 0 23
+3 0 23
+3 0 23
+4 0 23 0 23
+4 0 23 0 23 0 0 2 0 0 2
+4 0 23
+4 0 23
+3 0 23 0 23
cfn=(104)
calls=23 0x3877c77180 0 
* 0 92 46 0 0 0 0 0 0 0 23
-56 0 12
+7 0 12 0 12 1 0 0 1
+4 0 12
+3 0 12
+3 0 12
+3 0 12
+4 0 12
+3 0 12
+4 0 12
+3 0 12
+3 0 12
+4 0 12 0 12
+4 0 12 0 12 0 0 1 0 0 1
+4 0 12
+4 0 12
+3 0 12 0 12
cfn=(104)
calls=12 0x3877c77180 0 
* 0 48 24 0 0 0 0 0 0 0 12
+5 0 35
+3 0 35
jump=35 0x3877c79ae3 0 
* 0 
+55 0 1627 0 0 1 0 0 1
+7 0 1627
+3 0 1627 0 0 0 0 0 0 0 0 1627 8
jcnd=780/1627 0x3877c7a0b0 0 
* 0 
+6 0 1627 1627 0 1 0 0 1
+4 0 1627
+3 0 1627
+3 0 1627
+2 0 1627
+4 0 1627
+3 0 1627
+3 0 1627
+2 0 1627
+2 0 1627
+2 0 1627
+2 0 1627 1627 0 0 1 0 0 1
+8 0 1627
+5 0 1627
+5 0 1627
+2 0 1627 0 0 0 0 0 0 0 0 1627
-2 0 821
+2 0 821 0 0 0 0 0 0 0 0 821
+2 0 2448
+2 0 2448 0 0 0 0 0 0 0 0 2448 38
jcnd=1436/2448 +64 0 
* 0 
+2 0 1012
+8 0 1012
+3 0 1012
+3 0 1012 0 0 0 0 0 0 0 0 1012 2
jcnd=1/1012 0x3877c79fc0 0 
* 0 
-6 0 768
+3 0 768
+3 0 768 0 0 0 0 0 0 0 0 768 4
jcnd=351/768 0x3877c79fc0 0 
* 0 
+2 0 1428
+2 0 1428 1428
+8 0 1428
+2 0 1428 0 0 0 0 0 0 0 0 1428 23
jcnd=768/1428 -20 0 
* 0 
+2 0 660
+2 0 660
+5 0 660
+3 0 660
+3 0 660
+2 0 660
+2 0 660
+5 0 660 0 0 0 0 0 0 0 0 660
+2 0 660
+2 0 660
+4 0 660
+2 0 660
+2 0 660 0 0 0 0 0 0 0 0 660 9
jcnd=596/660 -8 0 
* 0 
-8 0 13607
+4 0 13607
+2 0 13607
+2 0 13607 0 0 0 0 0 0 0 0 13607 915
jcnd=11680/13607 -8 0 
* 0 
-2 0 1436 0 0 1 0 0 1
+2 0 1436 0 0 0 0 0 0 0 0 1436 32
jcnd=1331/1436 -8 0 
* 0 
+2 0 2096 2096 0 0 10 0 0 10
+4 0 2096 0 0 1 0 0 1
+3 0 2096 0 0 0 0 0 0 0 0 2096 1077
jcnd=1275/2096 0x3877c7a1cf 0 
* 0 
+6 0 821
+2 0 821
+4 0 821
+2 0 821
+2 0 821
+2 0 821 0 821
+8 0 821
jump=821 0x3877c79f30 0 
* 0 
+37 0 352 352 0 1 0 0 1
+5 0 352 352
+4 0 352
+4 0 352 352
+5 0 352 0 0 0 0 0 0 0 0 352
jcnd=352/352 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 780 780
+4 0 780
+4 0 780
+2 0 780
+5 0 780 780 0 1 1 0 1 1
+4 0 780
+3 0 780 0 0 0 0 0 0 0 0 780 9
jcnd=732/780 0x3877c79f00 0 
* 0 
+6 0 48 48
+4 0 48 0 0 0 0 0 0 0 0 48 2
jcnd=48/48 0x3877c79f00 0 
* 0 
0x3877c7a1a4 0 788 0 0 1 0 0 1
+3 0 788 0 788
+4 0 788
jump=788 0x3877c79b99 0 
* 0 
+36 0 1275 1275 0 1 3 0 1 3
+4 0 1275 1275 0 0 1 0 0 1
+4 0 1275
+3 0 1275 1275
+4 0 1275
+4 0 1275
+3 0 1275
+3 0 1275 1275
+4 0 1275 0 0 0 0 0 0 0 0 1275
+6 0 1275 1275
+4 0 1275 0 0 0 0 0 0 0 0 1275
+6 0 1275 1275 0 1 0 0 1
+8 0 1275 0 1275
+4 0 1275 0 1275
+4 0 1275 0 0 0 0 0 0 0 0 1275 226
jcnd=419/1275 +38 0 
* 0 
+2 0 856 856 0 0 1 0 0 1
+4 0 856
+3 0 856 0 0 0 0 0 0 0 0 856
+2 0 856 856
+5 0 856 0 0 0 0 0 0 0 0 856
+6 0 856 856
+4 0 856 0 856
+4 0 856 856
+4 0 856 0 856
+4 0 856
+4 0 856 0 0 0 0 0 0 0 0 856 8
jcnd=8/856 0x3877c7a2e3 0 
* 0 
-4 0 419
+4 0 419 0 0 0 0 0 0 0 0 419 7
jcnd=20/419 0x3877c7a2e3 0 
* 0 
+6 0 1247 1247
+4 0 1247 1247 0 1 0 0 1
+4 0 1247 0 0 0 0 0 0 0 0 1247
+6 0 1247
+4 0 1247
+7 0 1247 0 1247 0 0 12 0 0 12
+4 0 1247 0 1247
+4 0 1247 0 1247
+4 0 1247 0 1247
+4 0 1247 0 0 0 0 0 0 0 0 1247 7
jcnd=420/1247 +7 0 
* 0 
+2 0 827 0 827
+5 0 827
+7 0 827 0 0 0 0 0 0 0 0 827 4
jcnd=460/827 +18 0 
* 0 
-7 0 420
+7 0 420 0 0 0 0 0 0 0 0 420 5
jcnd=395/420 +18 0 
* 0 
+2 0 392 0 392 0 0 11 0 0 11
+8 0 392 0 392
+8 0 392
+7 0 392 0 392 0 0 3 0 0 3
+4 0 392
+3 0 392
+3 0 392
+4 0 392
+3 0 392
+4 0 392
+3 0 392
+3 0 392
+4 0 392 0 392
+4 0 392 0 392 0 0 1 0 0 1
+4 0 392
jump=392 +71 0 
* 0 
-46 0 855 0 0 1 0 0 1
+7 0 855 0 855 0 0 1 0 0 1
+4 0 855
+3 0 855
+3 0 855
+4 0 855
+3 0 855
+4 0 855
+3 0 855
+3 0 855
+4 0 855 0 855
+4 0 855 0 855
+4 0 855
jump=855 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 28
+7 0 28 0 28
+6 0 28
+3 0 28 0 0 0 0 0 0 0 0 28
jcnd=28/28 +7 0 
* 0 
+7 0 1275
+4 0 1275 0 0 1 0 0 1
+3 0 1275
+3 0 1275 0 1275
cfn=(104)
calls=1275 0x3877c77180 0 
* 0 5100 2550 0 1 0 0 1 0 0 1275 33
+5 0 1275
+3 0 1275
jump=1275 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 352 0 0 1 0 0 1
+7 0 352
+2 0 352
+4 0 352
+3 0 352
+3 0 352 0 352
+5 0 352
+3 0 352
+4 0 352
+3 0 352 0 0 1 0 0 1
+4 0 352
+4 0 352
+3 0 352
+4 0 352 0 352
+4 0 352 0 352 0 0 12 0 0 12
+4 0 352
+3 0 352
+3 0 352 0 352
cfn=(104)
calls=352 0x3877c77180 0 
* 0 1408 704 0 0 0 0 0 0 0 352 1
+5 0 352
+3 0 352
jump=352 0x3877c79ae3 0 
* 0 

totals: 17933772 7420683 4227976 240 116 156 240 116 156 495672 8245 10766 222
