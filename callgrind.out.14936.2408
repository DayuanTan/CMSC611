version: 1
creator: callgrind-3.8.1
pid: 14936
cmd:  ./a.out
part: 2408


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 20971520 B, 64 B, 20-way associative

desc: Timerange: Basic block 2790079065 - 2791312125
desc: Trigger: Client Request

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
summary: 0


ob=(5) /usr/lib64/libstdc++.so.6.0.13
fl=(8) ???
fn=(164) operator delete(void*)
0x387e4bb2f0 0 1384 0 0 1 0 0 1
+3 0 1384 0 0 0 0 0 0 0 0 1384
+2 0 1384
cob=(2) /lib64/libc-2.12.so
cfi=(9) ???
cfn=(168) free
calls=1384 0x3877c7b8b0 0 
* 0 155291 39743 20325 21 4 0 21 4 0 38065 590
* 0 1384 1384 0 1 1 0 1 1 0 0 0 1384

fn=(32) operator new(unsigned long)
0x387e4bd0b0 0 1384 0 1384 1 0 0 1
+1 0 1384
+5 0 1384
+3 0 1384 0 1384
+1 0 1384
+4 0 1384 0 0 1 0 0 1
+3 0 1384
+4 0 1384
+3 0 1384 0 1384 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(36) malloc
calls=1384 0x3877c7aa50 0 
* 0 375878 54291 54326 49 40 52 49 40 52 62973 2254
* 0 1384 1384 0 1 1 0 1 1 0 0 0 1384
+5 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384
jcnd=1384/1384 +96 0 
* 0 
+96 0 1384 0 0 1 0 0 1
+4 0 1384 1384
+1 0 1384 1384
+1 0 1384 1384

ob=(4) /afs/umbc.edu/users/p/a/palkpon1/home/CMSC611/a.out
fl=(1) /home/paul878934/CMSC611/lin.cpp
fn=(142) get_b1(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >)
0x401585 12 342 0 342 1 0 0 1
+1 * 342
+3 * 342
+4 * 342 0 342
+4 * 342 0 342
+4 +1 342 342
+4 * 342
+3 * 342 0 342
cfi=(2) /usr/include/c++/4.8/bits/stl_vector.h
cfn=(2) std::vector<float, std::allocator<float> >::size() const
calls=342 0x402d74 645 
* * 4446 2052 684
+5 * 342
+3 * 342 0 342
+3 +1 342 342
+6 * 342 0 342
+3 * 342 342
+6 * 342 0 342
+3 +1 342 342
+6 * 342 0 342 1 0 0 1
+3 * 342 342
+6 * 342 0 342
+3 +2 342 0 342
+7 * 342
jump=342 +86 * 
* * 
+2 +1 58995 58995
+3 * 58995
+3 * 58995 58995
+4 * 58995
+3 * 58995
+3 * 58995 0 58995
cfi=(2)
cfn=(144) std::vector<float, std::allocator<float> >::operator[](unsigned long)
calls=58995 0x402d9a 770 
* * 648945 294975 176985
+5 * 58995 58995
+4 * 58995 58995
+5 * 58995
+4 * 58995 0 58995
+5 +1 58995 58995
+3 * 58995
+3 * 58995 58995
+4 * 58995
+3 * 58995
+3 * 58995 0 58995
cfi=(2)
cfn=(146) std::vector<int, std::allocator<int> >::operator[](unsigned long)
calls=58995 0x402dba 770 
* * 648945 294975 176985 1 0 0 1
+5 * 58995 58995
+2 * 58995
+4 * 58995 58995
+5 * 58995
+4 * 58995 0 58995
+5 -2 58995 0 58995
+4 * 58995 58995
+3 * 58995
+3 * 58995 58995
+3 * 58995 0 0 0 0 0 0 0 0 58995 343
jcnd=58653/58995 -93 +1 
* * 
-9 * 342 342 0 1 0 0 1
+3 * 342
+3 * 342 342
+3 * 342 0 0 0 0 0 0 0 0 342
jcnd=342/342 -93 +1 
* * 
+2 +4 342 342
+3 * 342
+3 * 342
+4 * 342 342 0 1 0 0 1
+5 * 342
+4 * 342
+3 * 342 0 342
+5 +1 342 342
+3 * 342
+3 * 342
+4 * 342 342
+5 * 342
+4 * 342
+3 * 342 0 342
+5 +1 342 0 342
+7 * 342
jump=342 0x4016ee * 
* * 
+2 +1 58995 58995
+3 * 58995
+3 * 58995 58995
+4 * 58995
+3 * 58995 0 0 1 0 0 1
+3 * 58995 0 58995
cfi=(2)
cfn=(146)
calls=58995 0x402dba 770 
* * 648945 294975 176985
+5 * 58995 58995
+2 * 58995
+4 * 58995 58995
+5 * 58995 0 58995
+5 +1 58995 58995
+3 * 58995
+3 * 58995 58995
+4 * 58995
+3 * 58995
+3 * 58995 0 58995
cfi=(2)
cfn=(144)
calls=58995 0x402d9a 770 
* * 648945 294975 176985
+5 * 58995 58995
+4 * 58995 58995
+5 * 58995 0 58995
+5 +1 58995 58995
+5 * 58995 58995
+5 * 58995 58995
+5 * 58995
+4 * 58995 0 58995
+5 +1 58995 58995
+5 * 58995 58995
+5 * 58995 58995
+5 * 58995
+4 * 58995 0 58995
+5 -4 58995 0 58995
+4 * 58995 58995
+3 * 58995
+3 * 58995 58995
+3 * 58995 0 0 0 0 0 0 0 0 58995 343
jcnd=58653/58995 0x401672 +1 
* * 
-9 * 342 342 0 1 0 0 1
+3 * 342
+3 * 342 342
+3 * 342 0 0 0 0 0 0 0 0 342
jcnd=342/342 0x401672 +1 
* * 
+6 +6 342 342 0 1 0 0 1
+5 * 342 342
+5 * 342 0 342
+5 +2 342 342
+3 +1 342 0 342
+3 * 342 342
+5 * 342 342
+1 * 342 342

fn=(1) output(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, std::string)'2
0x4019b2 60 1 0 0 1 0 0 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 1 0 1 0 0 1
+7 +1 1
jump=1 0x401c08 * 
* * 
+5 +3 342
+7 * 342
+7 * 342
+3 * 342
+3 * 342 0 342
cfi=(2)
cfn=(4) std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&)
calls=342 0x4030b2 310 
* * 364911 107149 100624 66 16 16 66 16 16 23045 1064 1366 170
+5 * 342
+7 * 342
+7 * 342
+3 * 342
+3 * 342 0 342
cfi=(2)
cfn=(80) std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
calls=342 0x402ff4 310 
* * 365678 106350 98631 40 7 71 40 7 71 23343 1217 1366
+5 * 342 0 0 1 0 0 1
+7 * 342
+7 * 342
+3 * 342
+3 * 342 0 342
cfn=(142)
calls=342 0x401585 -52 
* * 6157710 2722320 1421694 8 0 0 8 0 0 118674 686
+5 * 342 0 342
+8 * 342 342
+6 * 342 0 342
+6 * 342
+7 * 342
+3 * 342 0 342
cfi=(2)
cfn=(148) std::vector<float, std::allocator<float> >::~vector()
calls=342 0x402df4 414 
* * 85468 26808 19077 33 5 0 33 5 0 9490 261 684
+5 * 342
+7 * 342
+3 * 342 0 342 1 0 0 1
cfi=(2)
cfn=(178) std::vector<int, std::allocator<int> >::~vector()
calls=342 0x402e74 414 
* * 89839 28424 20385 7 1 0 7 1 0 10720 32 684
+5 +2 342
+7 * 342
+7 * 342
+3 * 342
+3 * 342 0 342
cfi=(2)
cfn=(4)
calls=342 0x4030b2 310 
* * 364528 107119 100513 2 1 1 2 1 1 23009 665 1366
+5 * 342
+7 * 342
+7 * 342
+3 * 342
+3 * 342 0 342
cfi=(2)
cfn=(80)
calls=342 0x402ff4 310 
* * 364803 106298 98487 0 0 2 0 0 2 23209 793 1366
+5 * 342 342
+6 * 342 0 0 1 0 0 1
+7 * 342
+7 * 342 0 342
+6 * 342 342
+8 * 342
+3 * 342
+3 * 342 0 342
cfn=(198) get_b0(std::vector<float, std::allocator<float> >, std::vector<int, std::allocator<int> >, float)
calls=342 0x401719 -33 
* * 2851938 1187424 654075 4 0 0 4 0 0 59337 343
+5 * 342 0 342
+8 * 342 342
+6 * 342 0 342
+6 * 342
+7 * 342 0 0 1 0 0 1
+3 * 342 0 342
cfi=(2)
cfn=(148)
calls=342 0x402df4 414 
* * 85468 26808 19077 0 0 0 0 0 0 9490 255 684
+5 * 342
+7 * 342
+3 * 342 0 342
cfi=(2)
cfn=(178)
calls=342 0x402e74 414 
* * 89839 28424 20385 0 0 0 0 0 0 10720 26 684
+5 +2 342 342
+7 * 342
+3 * 342 0 342
cfi=(2)
cfn=(2)
calls=342 0x402d74 645 
* * 4446 2052 684
+5 * 342 342
+6 * 342
+3 * 342
+3 * 342
+3 * 342 342
+7 * 342
+3 * 342 0 0 1 0 0 1
+3 * 342 0 342
cfi=(2)
cfn=(144)
calls=342 0x402d9a 770 
* * 3762 1710 1026
+5 * 342
+3 * 342
+7 * 342
+3 * 342
+3 * 342 0 342
cfi=(2)
cfn=(200) std::vector<float, std::allocator<float> >::push_back(float const&)
calls=342 0x402eda 901 
* * 34381 12741 9838 39 30 11 39 30 11 1529 74 47
+5 +1 342 342
+7 * 342
+3 * 342 0 342
cfi=(2)
cfn=(10) std::vector<int, std::allocator<int> >::size() const
calls=342 0x402f54 645 
* * 4446 2052 684 0 1 0 0 1
+5 * 342 342
+6 * 342
+3 * 342
+3 * 342
+3 * 342 342
+7 * 342 0 0 1 0 0 1
+3 * 342
+3 * 342 0 342
cfi=(2)
cfn=(146)
calls=342 0x402dba 770 
* * 3762 1710 1026
+5 * 342
+3 * 342
+7 * 342
+3 * 342
+3 * 342 0 342
cfi=(2)
cfn=(244) std::vector<int, std::allocator<int> >::push_back(int const&)
calls=342 0x402f7a 901 
* * 34194 12553 9688 28 37 38 28 37 38 1515 81 47
+5 +1 342 342
+7 * 342
+3 * 342 0 342
cfi=(2)
cfn=(10)
calls=342 0x402f54 645 
* * 4446 2052 684
+5 * 342 342
+6 * 342
+3 * 342
+3 * 342
+3 * 342 342 0 1 0 0 1
+7 * 342
+3 * 342
+3 * 342 0 342
cfi=(2)
cfn=(146)
calls=342 0x402dba 770 
* * 3762 1710 1026
+5 * 342 342
+2 * 342
+4 * 342 342
+8 * 342 342
+8 * 342 0 342
+8 +1 342 342
+7 * 342
+3 * 342 0 342
cfi=(2)
cfn=(2)
calls=342 0x402d74 645 
* * 4446 2052 684
+5 * 342 342 0 1 0 0 1
+6 * 342
+3 * 342
+3 * 342
+3 * 342 342
+7 * 342
+3 * 342
+3 * 342 0 342
cfi=(2)
cfn=(144)
calls=342 0x402d9a 770 
* * 3762 1710 1026
+5 * 342 342
+4 * 342 342
+8 * 342
+4 * 342 342
+8 * 342
+3 * 342 0 342
+8 +2 342 0 342
+7 -12 342 342
+8 * 342 342
+7 * 342 0 0 0 0 0 0 0 0 342 1
jcnd=1/342 +47 * 
* * 
-15 * 1 1 0 1 1 0 1 1
+8 * 1 1 0 0 1 0 0 1
+7 * 1 0 0 0 0 0 0 0 0 1
+2 * 342
+7 * 342
+3 * 342 0 342
cfi=(2)
cfn=(2)
calls=342 0x402d74 645 
* * 4446 2052 684 2 0 1 2 0 1
+5 * 342
+3 * 342 342
+7 * 342
+3 * 342 0 342
cfi=(2)
cfn=(2)
calls=342 0x402d74 645 
* * 4446 2052 684 0 1 0 0 1
+5 * 342
+3 * 342 0 0 0 0 0 0 0 0 342 2
+2 * 342 0 0 1 0 0 1
+5 * 342
jump=342 +7 * 
* * 
+2 * 1
+5 * 1
+2 * 1 0 0 0 0 0 0 0 0 1
-2 * 342
+2 * 342 0 0 0 0 0 0 0 0 342
jcnd=342/342 0x4019c8 +3 
* * 

fn=(198)
0x401719 33 342 0 342
+1 * 342
+3 * 342
+4 * 342 0 342
+4 * 342 0 342
+4 * 342 0 342
+5 +1 342 342
+4 * 342
+3 * 342 0 342
cfi=(2)
cfn=(2)
calls=342 0x402d74 645 
* * 4446 2052 684
+5 * 342
+3 * 342 0 342
+3 +1 342 342 0 1 0 0 1
+6 * 342 0 342
+3 * 342 342
+6 * 342 0 342
+3 +2 342 0 342
+7 * 342
jump=342 +86 * 
* * 
+2 +1 58995 58995
+3 * 58995
+3 * 58995 58995
+4 * 58995
+3 * 58995
+3 * 58995 0 58995
cfi=(2)
cfn=(144)
calls=58995 0x402d9a 770 
* * 648945 294975 176985
+5 * 58995 58995
+4 * 58995 58995
+5 * 58995
+4 * 58995 0 58995
+5 +1 58995 58995
+3 * 58995
+3 * 58995 58995
+4 * 58995
+3 * 58995
+3 * 58995 0 58995
cfi=(2)
cfn=(146)
calls=58995 0x402dba 770 
* * 648945 294975 176985
+5 * 58995 58995
+2 * 58995
+4 * 58995 58995
+5 * 58995
+4 * 58995 0 58995
+5 -2 58995 0 58995
+4 * 58995 58995
+3 * 58995
+3 * 58995 58995
+3 * 58995 0 0 0 0 0 0 0 0 58995 343
jcnd=58653/58995 -93 +1 
* * 
-9 * 342 342 0 1 0 0 1
+3 * 342
+3 * 342 342
+3 * 342 0 0 0 0 0 0 0 0 342
jcnd=342/342 -93 +1 
* * 
+2 +4 342 342
+3 * 342
+3 * 342 0 0 1 0 0 1
+4 * 342 342
+5 * 342
+4 * 342
+3 * 342 0 342
+5 +1 342 342
+3 * 342
+3 * 342
+4 * 342 342
+5 * 342
+4 * 342
+3 * 342 0 342
+5 +1 342 342
+5 * 342 342
+5 * 342 342
+5 * 342 0 0 1 0 0 1
+4 * 342
+3 * 342 0 342
+5 +2 342 342
+3 +1 342 0 342
+3 * 342 342
+5 * 342 342
+1 * 342 342

fl=(4) /usr/include/c++/4.8/bits/allocator.h
fn=(174) std::allocator<float>::~allocator()
0x403ccc 121 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 684
+4 * 684
+3 * 684 0 684
cfi=(5) /usr/include/c++/4.8/ext/new_allocator.h
cfn=(176) __gnu_cxx::new_allocator<float>::~new_allocator()
calls=684 0x4044cc -35 
* * 3420 1368 1368
+5 * 684 684
+1 * 684 684

fn=(90) std::allocator<float>::allocator(std::allocator<float> const&)
0x4047b2 115 684 0 684 1 0 0 1
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684 1 0 0 1
+4 +1 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfi=(5)
cfn=(92) __gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)
calls=684 0x4049d4 -35 
* * 4104 1368 2052 1 0 0 1
+5 * 684 684
+1 * 684 684

fn=(194) std::allocator<int>::~allocator()
0x403d7e 121 684 0 684 1 0 0 1
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 684
+4 * 684
+3 * 684 0 684
cfi=(5)
cfn=(196) __gnu_cxx::new_allocator<int>::~new_allocator()
calls=684 0x404520 -35 
* * 3420 1368 1368
+5 * 684 684
+1 * 684 684

fn=(16) std::allocator<int>::allocator(std::allocator<int> const&)
0x404804 115 684 0 684 1 0 0 1
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfi=(5)
cfn=(18) __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
calls=684 0x404a28 -35 
* * 4104 1368 2052 1 0 1 1 0 1
+5 * 684 684
+1 * 684 684

fl=(3) /usr/include/c++/4.8/ext/alloc_traits.h
fn=(256) __gnu_cxx::__alloc_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
0x404978 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(28) __gnu_cxx::new_allocator<int>::max_size() const
calls=16 +7 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fn=(84) __gnu_cxx::__alloc_traits<std::allocator<float> >::_S_select_on_copy(std::allocator<float> const&)
0x4039ed 224 684 0 684
+1 * 684
+3 * 684 0 684
+4 * 684 684
+4 * 684 684
+1 * 684 684

fn=(222) void __gnu_cxx::__alloc_traits<std::allocator<float> >::construct<float>(std::allocator<float>&, float*, float const&)
0x403373 215 342 0 342
+1 * 342
+3 * 342
+4 * 342 0 342
+4 * 342 0 342
+4 * 342 0 342
+4 +1 342 342
+4 * 342 342
+4 * 342 342
+4 * 342
+3 * 342
+3 * 342 0 342
cfi=(5)
cfn=(224) __gnu_cxx::new_allocator<float>::construct(float*, float const&)
calls=342 0x403df2 -87 
* * 8208 2736 3078 0 23 3 0 23 3 342 2
+5 * 342 342
+1 * 342 342

fn=(8) __gnu_cxx::__alloc_traits<std::allocator<int> >::_S_select_on_copy(std::allocator<int> const&)
0x403afa 224 684 0 684 1 0 0 1
+1 * 684
+3 * 684 0 684
+4 * 684 684
+4 * 684 684
+1 * 684 684

fn=(264) void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
0x4036b1 215 342 0 342
+1 * 342
+3 * 342
+4 * 342 0 342
+4 * 342 0 342
+4 * 342 0 342
+4 +1 342 342
+4 * 342 342
+4 * 342 342
+4 * 342
+3 * 342
+3 * 342 0 342
cfi=(5)
cfn=(266) __gnu_cxx::new_allocator<int>::construct(int*, int const&)
calls=342 0x40406a -87 
* * 8208 2736 3078 0 21 13 0 21 13 342
+5 * 342 342
+1 * 342 342

fn=(212) __gnu_cxx::__alloc_traits<std::allocator<float> >::max_size(std::allocator<float> const&)
0x4048c3 221 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(5)
cfn=(102) __gnu_cxx::new_allocator<float>::max_size() const
calls=16 +8 113 
* * 96 32 32
+5 * 16 16
+1 * 16 16

fl=(13) /usr/include/c++/4.8/bits/stl_iterator_base_types.h
fn=(64) std::_Iter_base<int*, false>::_S_base(int*)
0x40491f 212 764 0 764
+1 * 764
+3 * 764 0 764
+4 +1 764 764
+4 * 764 764
+1 * 764 764

fn=(124) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, false>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d36 212 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368 0 1368
+4 +1 1368 1368 0 1 0 0 1
+4 * 1368 1368
+1 * 1368 1368

fn=(130) std::_Iter_base<float*, false>::_S_base(float*)
0x40486a 212 764 0 764
+1 * 764
+3 * 764 0 764 0 0 1 0 0 1
+4 +1 764 764
+4 * 764 764
+1 * 764 764

fn=(134) std::_Iter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, true>::_S_base(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404e98 220 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368
+4 * 1368 0 1368
+4 +1 1368
+4 * 1368
+3 * 1368 0 1368
cfi=(10) /usr/include/c++/4.8/bits/stl_iterator.h
cfn=(136) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::base() const
calls=1368 0x404ffe 790 
* * 8208 4104 2736 1 0 0 1
+5 * 1368 1368
+3 * 1368 1368
+1 * 1368 1368

fn=(58) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404d8f 212 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368 0 1368
+4 +1 1368 1368
+4 * 1368 1368
+1 * 1368 1368

fn=(68) std::_Iter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404f1a 220 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368
+4 * 1368 0 1368
+4 +1 1368
+4 * 1368
+3 * 1368 0 1368 0 0 1 0 0 1
cfi=(10)
cfn=(70) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
calls=1368 0x40500c 790 
* * 8208 4104 2736 1 0 0 1
+5 * 1368 1368
+3 * 1368 1368
+1 * 1368 1368

fl=(16) /usr/include/c++/4.8/new
fn=(226) operator new(unsigned long, void*)
0x402d61 110 684 0 684
+1 * 684
+3 * 684 0 684
+4 * 684 0 684
+4 * 684 684
+4 * 684 684
+1 * 684 684

fl=(5)
fn=(28)
0x404992 113 708 0 708 1 0 0 1
+1 * 708
+3 * 708 0 708
+4 +1 708
+10 * 708 708
+1 * 708 708

fn=(176)
0x4044cc 86 684 0 684
+1 * 684
+3 * 684 0 684
+4 * 684 684
+1 * 684 684

fn=(224)
0x403df2 129 342 0 342
+1 * 342
+3 * 342
+4 * 342 0 342
+4 * 342 0 342
+4 * 342 0 342
+4 +1 342 342
+4 * 342
+3 * 342
+5 * 342 0 342
cfi=(16)
cfn=(226)
calls=342 0x402d61 -20 
* * 2394 1026 1026
+5 * 342
+3 * 342 0 0 0 0 0 0 0 0 342 2
+2 * 342 342
+4 * 342 342 0 0 23 0 0 23
+2 * 342 0 342 0 0 3 0 0 3
+2 * 342 342
+1 * 342 342

fn=(160) __gnu_cxx::new_allocator<float>::deallocate(float*, unsigned long)
0x4044d6 109 692 0 692
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 * 692 0 692
+4 +1 692 692
+4 * 692
+3 * 692 0 692
cob=(5)
cfi=(8)
cfn=(164)
calls=692 0x387e4bb2f0 0 
* * 76026 18939 8853 23 4 0 23 4 0 18490 523 692
* * 692 692 0 1 1 0 1 1 0 0 0 692
+5 * 692 692
+1 * 692 692

fn=(190) __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
0x40452a 109 692 0 692
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 * 692 0 692
+4 +1 692 692
+4 * 692
+3 * 692 0 692
cob=(5)
cfi=(8)
cfn=(164)
calls=692 0x387e4bb2f0 0 
* * 84801 22188 11472 0 1 0 0 1 0 20959 67 692
* * 692 692 0 0 0 0 0 0 0 0 0 692
+5 * 692 692
+1 * 692 692

fn=(100) __gnu_cxx::new_allocator<float>::allocate(unsigned long, void const*)
0x40461a 99 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 * 692 0 692
+4 +2 692 692
+4 * 692
+3 * 692 0 692
cfn=(102)
calls=692 0x4048de +12 
* * 4152 1384 1384 1 0 0 1
+5 * 692 692
+4 * 692 0 0 1 0 0 1
+3 * 692
+2 * 692 0 0 0 0 0 0 0 0 692
jcnd=692/692 +7 +3 
* * 
+7 +3 692 692
+4 * 692
+4 * 692
+3 * 692 0 692
cob=(5)
cfi=(8)
cfn=(32)
calls=692 0x387e4bd0b0 0 
* * 199642 29206 27306 26 13 38 26 13 38 32439 1271 692
* * 692 692 0 0 0 0 0 0 0 0 0 692
+5 +1 692 692
+1 * 692 692

fn=(18)
0x404a28 81 684 0 684 1 0 0 1
+1 * 684
+3 * 684 0 684 0 0 1 0 0 1
+4 * 684 0 684
+4 * 684 684
+1 * 684 684

fn=(92)
0x4049d4 81 684 0 684 1 0 0 1
+1 * 684
+3 * 684 0 684
+4 * 684 0 684
+4 * 684 684
+1 * 684 684

fn=(196)
0x404520 86 684 0 684
+1 * 684
+3 * 684 0 684
+4 * 684 684
+1 * 684 684

fn=(26) __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
0x404730 99 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 * 692 0 692 1 0 0 1
+4 +2 692 692
+4 * 692
+3 * 692 0 692
cfn=(28)
calls=692 0x404992 +12 
* * 4152 1384 1384 1 0 0 1
+5 * 692 692
+4 * 692
+3 * 692
+2 * 692 0 0 0 0 0 0 0 0 692
jcnd=692/692 +7 +3 
* * 
+7 +3 692 692
+4 * 692
+4 * 692
+3 * 692 0 692
cob=(5)
cfi=(8)
cfn=(32)
calls=692 0x387e4bd0b0 0 
* * 198380 30621 31172 27 28 15 27 28 15 31918 983 692
* * 692 692 0 1 1 0 1 1 0 0 0 692
+5 +1 692 692
+1 * 692 692

fn=(102)
0x4048de 113 708 0 708 1 0 0 1
+1 * 708
+3 * 708 0 708
+4 +1 708
+10 * 708 708
+1 * 708 708

fn=(266)
0x40406a 129 342 0 342
+1 * 342
+3 * 342
+4 * 342 0 342
+4 * 342 0 342
+4 * 342 0 342
+4 +1 342 342
+4 * 342
+3 * 342
+5 * 342 0 342
cfi=(16)
cfn=(226)
calls=342 0x402d61 -20 
* * 2394 1026 1026
+5 * 342
+3 * 342 0 0 0 0 0 0 0 0 342
+2 * 342 342
+4 * 342 342 0 0 21 0 0 21
+2 * 342 0 342 0 0 13 0 0 13
+2 * 342 342
+1 * 342 342

fl=(11) /usr/include/c++/4.8/bits/stl_uninitialized.h
fn=(48) int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
0x403bd5 256 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +2 684 684
+4 * 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684 1 0 0 1
cfn=(50) int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=684 0x404484 107 
* * 348356 116300 112200 25 3 4 25 3 4 13232 806 1364 170
+5 * 684 684
+1 * 684 684

fn=(230) float* std::__uninitialized_copy_a<float*, float*, float>(float*, float*, float*, std::allocator<float>&)
0x40465c 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 0 1 0 0 1
+3 * 16
+3 * 16 0 16
cfn=(232) float* std::uninitialized_copy<float*, float*>(float*, float*, float*)
calls=16 0x4048f2 107 
* * 4194 1388 1333 4 0 3 4 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fn=(52) int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
0x404829 91 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +2 684 684 0 1 0 0 1
+4 * 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfi=(12) /usr/include/c++/4.8/bits/stl_algobase.h
cfn=(54) int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=684 0x404a36 450 
* * 329204 109460 105360 24 3 4 24 3 4 13232 806 1364 170
+5 * 684 684
+1 * 684 684

fn=(114) float* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, float>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*, std::allocator<float>&)
0x403ac9 256 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +2 684 684
+4 * 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(116) float* std::uninitialized_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=684 0x40439c 107 
* * 348356 116300 112200 7 1 40 7 1 40 13232 790 1364
+5 * 684 684
+1 * 684 684

fn=(116)
0x40439c 107 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +10 684 684
+4 * 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(118) float* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=684 0x4047d7 -26 
* * 338780 112880 108780 7 1 40 7 1 40 13232 790 1364
+5 +1 684 684
+1 * 684 684

fn=(118)
0x4047d7 91 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +2 684 684
+4 * 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfi=(12)
cfn=(120) float* std::copy<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=684 0x4049e2 450 
* * 329204 109460 105360 7 1 40 7 1 40 13232 790 1364
+5 * 684 684
+1 * 684 684

fn=(268) int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
0x40426e 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(270) int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
calls=16 0x404772 -25 
* * 4434 1468 1429 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(228) float* std::__uninitialized_move_if_noexcept_a<float*, float*, std::allocator<float> >(float*, float*, float*, std::allocator<float>&)
0x403ff6 274 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +7 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(230)
calls=16 0x40465c -25 
* * 4434 1468 1429 5 0 3 5 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(232)
0x4048f2 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(234) float* std::__uninitialized_copy<true>::__uninit_copy<float*, float*>(float*, float*, float*)
calls=16 0x404af4 -26 
* * 3970 1308 1253 4 0 3 4 0 3 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(272) int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
0x4049a6 107 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(274) int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
calls=16 0x404b99 -26 
* * 3970 1308 1253 2 0 18 2 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(274)
0x404b99 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(276) int* std::copy<int*, int*>(int*, int*, int*)
calls=16 0x404cf0 450 
* * 3746 1228 1173 1 0 18 1 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(50)
0x404484 107 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +10 684 684
+4 * 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(52)
calls=684 0x404829 -26 
* * 338780 112880 108780 25 3 4 25 3 4 13232 806 1364 170
+5 +1 684 684
+1 * 684 684

fn=(270)
0x404772 256 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(272)
calls=16 0x4049a6 107 
* * 4194 1388 1333 2 0 18 2 0 18 100 4 15
+5 * 16 16
+1 * 16 16

fn=(234)
0x404af4 91 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(12)
cfn=(236) float* std::copy<float*, float*>(float*, float*, float*)
calls=16 0x404caa 450 
* * 3746 1228 1173 2 0 3 2 0 3 100 6 15
+5 * 16 16
+1 * 16 16

fl=(2)
fn=(4)
0x4030b2 310 684 0 684 1 0 0 1
+1 * 684
+3 * 684 0 684
+2 * 684 0 684
+2 * 684 0 684
+1 * 684
+4 * 684 0 684 1 0 0 1
+4 * 684 0 684
+4 +2 684 684
+4 * 684
+3 * 684 0 684
cfn=(6) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
calls=684 0x403b08 117 
* * 4104 2052 1368 1 0 1 1 0 1
+5 * 684
+3 * 684 0 684
cfi=(3)
cfn=(8)
calls=684 0x403afa -88 
* * 4104 2052 1368 1 0 0 1
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(10)
calls=684 0x402f54 645 
* * 8892 4104 1368 1 1 0 1 1
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684
+3 * 684
+3 * 684 0 684
cfn=(12) std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
calls=684 0x403b16 134 
* * 281219 61032 58157 30 13 12 30 13 12 32822 923 1368
+5 +4 684 684 0 1 0 0 1
+4 * 684
+3 * 684 0 684
cfn=(40) std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
calls=684 0x40333c 113 
* * 4104 2052 1368 2 0 0 2
+5 * 684
+3 * 684 684
+4 * 684 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(42) std::vector<int, std::allocator<int> >::end() const
calls=684 0x403ba4 565 
* * 17100 6840 5472 3 0 0 3
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(46) std::vector<int, std::allocator<int> >::begin() const
calls=684 0x403b74 547 
* * 17100 6840 5472
+5 * 684
+3 * 684
+3 * 684
+3 * 684
+3 * 684 0 684 1 0 0 1
cfi=(11)
cfn=(48)
calls=684 0x403bd5 -60 
* * 358616 119720 116304 26 3 4 26 3 4 13232 806 1364 170
+5 -3 684 684
+4 * 684 0 684
+4 * 684
jump=684 +28 +4 
* * 
+28 +4 684
+4 * 684 684
+1 * 684 684
+2 * 684 684
+2 * 684 684
+1 * 684 684

fn=(108) std::vector<float, std::allocator<float> >::end() const
0x403a98 565 684 0 684 1 0 0 1
+1 * 684
+3 * 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+4 * 684 0 684
+4 * 684
+4 * 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfi=(10)
cfn=(110) __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >::__normal_iterator(float const* const&)
calls=684 0x404380 726 
* * 6840 3420 2736 1 0 0 1
+5 * 684 684
+4 * 684 684
+1 * 684 684

fn=(178)
0x402e74 414 684 0 684
+1 * 684
+3 * 684 0 684
+1 * 684
+4 * 684 0 684 1 0 0 1
+4 +2 684 684
+4 * 684
+3 * 684 0 684
cfn=(40)
calls=684 0x40333c 113 
* * 4104 2052 1368
+5 * 684
+3 * 684 684
+4 * 684 684
+4 * 684 684
+4 * 684 684
+3 -1 684
+3 * 684
+3 * 684 0 684
cfi=(14) /usr/include/c++/4.8/bits/stl_construct.h
cfn=(180) void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
calls=684 0x40334a 148 
* * 21204 6840 8208 2 0 0 2
+5 +1 684 684
+4 * 684
+3 * 684 0 684
cfn=(186) std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
calls=684 0x4032ca 159 
* * 137954 41800 27090 3 1 0 3 1 0 21440 58 1368
+5 * 684
jump=684 +28 * 
* * 
+28 * 684 0 0 1 0 0 1
+4 * 684 684
+1 * 684 684
+1 * 684 684

fn=(210) std::vector<float, std::allocator<float> >::max_size() const
0x4045cc 650 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(82) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator() const
calls=16 0x4039fc 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(212)
calls=16 0x4048c3 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(96) std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned long)
0x403fbe 167 692 0 692 1 0 0 1
+1 * 692 0 0 1 0 0 1
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 0 692 692
+5 0 692 0 0 0 0 0 0 0 0 692
+2 0 692 692
+4 0 692 692
+4 0 692
+5 0 692
+3 0 692
+3 0 692 0 692
fi=(6) ???
cfi=(5)
cfn=(100)
calls=692 0x40461a 99 
* 0 217634 34742 32842 29 13 38 29 13 38 33131 1271 1384
+5 0 692
fi=(6)
jump=692 +7 0 
* 0 
+7 0 692 692
+1 0 692 692

fn=(144)
0x402d9a 770 177669 0 177669
+1 * 177669
+3 * 177669 0 177669
+4 * 177669 0 177669
+4 +1 177669 177669
+4 * 177669 177669
+3 * 177669 177669
+4 * 177669
+4 * 177669
+3 * 177669 177669
+1 * 177669 177669

fn=(146)
0x402dba 770 177669 0 177669
+1 * 177669
+3 * 177669 0 177669 1 0 0 1
+4 * 177669 0 177669
+4 +1 177669 177669
+4 * 177669 177669
+3 * 177669 177669
+4 * 177669
+4 * 177669
+3 * 177669 177669
+1 * 177669 177669

fn=(192) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
0x403296 79 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 684
+4 * 684
+3 * 684 0 684
cfi=(4)
cfn=(194)
calls=684 0x403d7e +42 
* * 9576 3420 3420 1 0 0 1
+5 * 684 684
+1 * 684 684

fn=(254) std::vector<int, std::allocator<int> >::max_size() const
0x40470e 650 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfn=(6)
calls=16 0x403b08 117 
* * 96 48 32
+5 * 16
+3 * 16 0 16
cfi=(3)
cfn=(256)
calls=16 0x404978 221 
* * 240 80 80
+5 * 16 16
+1 * 16 16

fn=(186)
0x4032ca 159 684 0 684 1 0 0 1
+1 * 684
+3 * 684 0 684
+1 * 684
+4 * 684 0 684
+4 +2 684 684
+4 * 684 684
+4 * 684
+3 * 684 684
+4 * 684 684
+3 * 684
+3 * 684
+3 * 684
+4 * 684
+3 * 684 684
+4 * 684 684
+3 -1 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(188) std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
calls=684 0x403d98 +11 
* * 103070 28804 18198 1 1 0 1 1 0 21440 58 1368
+5 +1 684 684
+4 * 684
+3 * 684 0 684
cfn=(192)
calls=684 0x403296 -82 
* * 15732 5472 5472 1 0 0 1
+5 * 684
jump=684 +28 * 
* * 
+28 * 684
+4 * 684 684
+1 * 684 684
+1 * 684 684

fn=(2)
0x402d74 645 2768 0 2768 1 0 0 1
+1 * 2768
+3 * 2768 0 2768 0 0 1 0 0 1
+4 +1 2768 2768
+4 * 2768 2768 0 1 1 0 1 1
+4 * 2768
+3 * 2768 2768
+4 * 2768 2768
+3 * 2768
+3 * 2768
+3 * 2768
+4 * 2768 2768
+1 * 2768 2768

fn=(20) std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
0x404412 179 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 +2 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(22) std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
calls=684 0x404236 -14 
* * 224447 39144 39005 24 13 8 24 13 8 32822 923 1368
+5 * 684 684
+4 * 684 0 684
+3 +1 684 684
+4 * 684 684 0 1 0 0 1
+3 * 684 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+3 * 684 684
+4 * 684
+4 * 684
+3 * 684 684
+4 * 684 0 684
+4 +1 684 684
+1 * 684 684

fn=(94) std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned long)
0x40432a 179 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 +2 684 684
+4 * 684 684 0 1 0 0 1
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(96)
calls=684 0x403fbe -14 
* * 225489 37524 34986 18 6 33 18 6 33 33320 1220 1368
+5 * 684 684
+4 * 684 0 684
+3 +1 684 684
+4 * 684 684
+3 * 684 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+3 * 684 684
+4 * 684
+4 * 684
+3 * 684 684
+4 * 684 0 684
+4 +1 684 684
+1 * 684 684

fn=(244)
0x402f7a 901 342 0 342
+1 * 342
+3 * 342 0 0 1 0 0 1
+4 * 342 0 342
+4 * 342 0 342
+4 +2 342 342
+4 * 342 342
+4 * 342 342
+4 * 342 342
+4 * 342
+3 * 342 0 0 0 0 0 0 0 0 342
jcnd=8/342 +51 +10 
* * 
+2 +3 334 334
+4 * 334 334
+4 * 334 334
+4 -1 334 334
+4 * 334
+3 * 334
+3 * 334 0 334
cfi=(3)
cfn=(264)
calls=334 0x4036b1 215 
* * 12692 4342 4676 0 21 9 0 21 9 334
+5 +2 334 334
+4 * 334 334
+4 * 334
+4 * 334 334
+4 * 334 0 334
+4 * 334
jump=334 +36 +8 
* * 
+2 +6 8 8
+4 * 8
+3 * 8 0 8
cfn=(246) std::vector<int, std::allocator<int> >::end()
calls=8 0x4039c4 556 
* * 184 72 56
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15) /usr/include/c++/4.8/bits/vector.tcc
cfn=(250) std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
calls=8 0x4036de 318 
* * 12458 3725 3246 27 16 29 27 16 29 839 81 47
+5 +2 342 342
+1 * 342 342

fn=(258) std::vector<int, std::allocator<int> >::begin()
0x4041ce 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(40)
0x40333c 113 1392 0 1392 1 0 0 1
+1 * 1392
+3 * 1392 0 1392 1 0 0 1
+4 +1 1392 1392
+4 * 1392 1392
+1 * 1392 1392

fn=(112) std::vector<float, std::allocator<float> >::begin() const
0x403a68 547 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+3 * 684 0 684
+4 * 684
+4 * 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfi=(10)
cfn=(110)
calls=684 0x404380 726 
* * 6840 3420 2736
+5 * 684 684
+4 * 684 684
+1 * 684 684

fn=(148)
0x402df4 414 684 0 684
+1 * 684
+3 * 684 0 684
+1 * 684
+4 * 684 0 684 1 0 0 1
+4 +2 684 684
+4 * 684
+3 * 684 0 684
cfn=(106) std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()
calls=684 0x40325e 113 
* * 4104 2052 1368
+5 * 684
+3 * 684 684
+4 * 684 684
+4 * 684 684
+4 * 684 684
+3 -1 684
+3 * 684
+3 * 684 0 684
cfi=(14)
cfn=(150) void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)
calls=684 0x40326c 148 
* * 21204 6840 8208 4 0 0 4
+5 +1 684 684
+4 * 684
+3 * 684 0 684
cfn=(156) std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
calls=684 0x4031ec 159 
* * 129212 38568 24474 27 5 0 27 5 0 18980 516 1368
+5 * 684
jump=684 +28 * 
* * 
+28 * 684 0 0 1 0 0 1
+4 * 684 684
+1 * 684 684
+1 * 684 684

fn=(158) std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned long)
0x403ce6 171 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 * 692 0 692
+4 +2 692 692
+5 * 692 0 0 0 0 0 0 0 0 692
+2 +1 692 692
+4 * 692 692
+4 * 692 692
+4 * 692
+3 * 692
+3 * 692 0 692
cfi=(5)
cfn=(160)
calls=692 0x4044d6 -65 
* * 84330 21707 12313 24 5 0 24 5 0 18490 523 1384
+5 +1 692 692
+1 * 692 692

fn=(12)
0x403b16 134 684 0 684
+1 * 684
+3 * 684 0 684
+1 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(14) std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
calls=684 0x4043ca -45 
* * 24624 8892 9576 4 0 4 4 0 4
+5 +1 684 684 0 1 0 0 1
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(20)
calls=684 0x404412 +43 
* * 241547 47352 43793 25 13 8 25 13 8 32822 923 1368
+5 * 684
jump=684 +28 * 
* * 
+28 * 684
+4 * 684 684
+1 * 684 684
+1 * 684 684

fn=(14)
0x4043ca 90 684 0 684 1 0 0 1
+1 * 684
+3 * 684
+4 * 684 0 684 0 0 1 0 0 1
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfi=(4)
cfn=(16)
calls=684 0x404804 +24 
* * 12312 4104 4788 2 0 1 2 0 1
+5 * 684 684
+4 * 684 0 684 0 0 2 0 0 2
+7 * 684 684
+4 * 684 0 684 1 0 0 1
+8 * 684 684
+4 * 684 0 684
+8 +1 684 684
+1 * 684 684

fn=(80)
0x402ff4 310 684 0 684 1 0 0 1
+1 * 684
+3 * 684 0 684
+2 * 684 0 684
+2 * 684 0 684
+1 * 684 0 0 1 0 0 1
+4 * 684 0 684
+4 * 684 0 684
+4 +2 684 684
+4 * 684
+3 * 684 0 684
cfn=(82)
calls=684 0x4039fc 117 
* * 4104 2052 1368 2 0 0 2
+5 * 684
+3 * 684 0 684
cfi=(3)
cfn=(84)
calls=684 0x4039ed -88 
* * 4104 2052 1368
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(2)
calls=684 0x402d74 645 
* * 8892 4104 1368
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684
+3 * 684
+3 * 684 0 684 1 0 0 1
cfn=(86) std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned long, std::allocator<float> const&)
calls=684 0x403a0a 134 
* * 282261 59412 54138 25 6 33 25 6 33 33320 1220 1368
+5 +4 684 684
+4 * 684
+3 * 684 0 684
cfn=(106)
calls=684 0x40325e 113 
* * 4104 2052 1368 1 0 0 1
+5 * 684
+3 * 684 684
+4 * 684 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(108)
calls=684 0x403a98 565 
* * 17100 6840 5472 2 0 0 2
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(112)
calls=684 0x403a68 547 
* * 17100 6840 5472
+5 * 684
+3 * 684
+3 * 684
+3 * 684
+3 * 684 0 684
cfi=(11)
cfn=(114)
calls=684 0x403ac9 -60 
* * 358616 119720 116304 7 1 40 7 1 40 13232 790 1364
+5 -3 684 684
+4 * 684 0 684
+4 * 684
jump=684 +28 +4 
* * 
+28 +4 684
+4 * 684 684
+1 * 684 684
+2 * 684 684
+2 * 684 684
+1 * 684 684

fn=(188)
0x403d98 171 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 * 692 0 692
+4 +2 692 692
+5 * 692 0 0 0 0 0 0 0 0 692 8
+2 +1 692 692
+4 * 692 692
+4 * 692 692
+4 * 692
+3 * 692
+3 * 692 0 692
cfi=(5)
cfn=(190)
calls=692 0x40452a -65 
* * 93105 24956 14932 0 1 0 0 1 0 20959 67 1384
+5 +1 692 692
+1 * 692 692

fn=(22)
0x404236 167 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692 1 0 0 1
+4 * 692 0 692
+4 0 692 692
+5 0 692 0 0 0 0 0 0 0 0 692
+2 0 692 692
+4 0 692 692
+4 0 692
+5 0 692
+3 0 692
+3 0 692 0 692
fi=(6)
cfi=(5)
cfn=(26)
calls=692 0x404730 99 
* 0 216372 36157 36708 31 29 15 31 29 15 32610 983 1384
+5 0 692
fi=(6)
jump=692 +7 0 
* 0 
+7 0 692 692
+1 0 692 692

fn=(42)
0x403ba4 565 684 0 684 1 0 0 1
+1 * 684
+3 * 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+4 * 684 0 684
+4 * 684
+4 * 684 0 0 1 0 0 1
+4 * 684
+3 * 684
+3 * 684 0 684
cfi=(10)
cfn=(44) __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
calls=684 0x404468 726 
* * 6840 3420 2736 1 0 0 1
+5 * 684 684
+4 * 684 684
+1 * 684 684

fn=(46)
0x403b74 547 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+3 * 684 0 684
+4 * 684
+4 * 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfi=(10)
cfn=(44)
calls=684 0x404468 726 
* * 6840 3420 2736
+5 * 684 684
+4 * 684 684
+1 * 684 684

fn=(86)
0x403a0a 134 684 0 684
+1 * 684
+3 * 684 0 684
+1 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(88) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)
calls=684 0x4042e2 -45 
* * 24624 8892 9576 5 0 0 5
+5 +1 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684 1 0 0 1
cfn=(94)
calls=684 0x40432a +43 
* * 242589 45732 39774 19 6 33 19 6 33 33320 1220 1368
+5 * 684
jump=684 +28 * 
* * 
+28 * 684
+4 * 684 684
+1 * 684 684
+1 * 684 684

fn=(88)
0x4042e2 90 684 0 684 1 0 0 1
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 +1 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684 1 0 0 1
cfi=(4)
cfn=(90)
calls=684 0x4047b2 +24 
* * 12312 4104 4788 3 0 0 3
+5 * 684 684
+4 * 684 0 684
+7 * 684 684
+4 * 684 0 684
+8 * 684 684
+4 * 684 0 684
+8 +1 684 684
+1 * 684 684

fn=(156)
0x4031ec 159 684 0 684 1 0 0 1
+1 * 684
+3 * 684 0 684
+1 * 684
+4 * 684 0 684
+4 +2 684 684
+4 * 684 684 0 1 0 0 1
+4 * 684
+3 * 684 684
+4 * 684 684
+3 * 684
+3 * 684
+3 * 684
+4 * 684
+3 * 684 684
+4 * 684 684
+3 -1 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(158)
calls=684 0x403ce6 +11 
* * 94328 25572 15582 24 5 0 24 5 0 18980 516 1368
+5 +1 684 684
+4 * 684
+3 * 684 0 684
cfn=(172) std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()
calls=684 0x4031b8 -82 
* * 15732 5472 5472 1 0 0 1
+5 * 684
jump=684 +28 * 
* * 
+28 * 684
+4 * 684 684
+1 * 684 684
+1 * 684 684

fn=(172)
0x4031b8 79 684 0 684 1 0 0 1
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 684
+4 * 684
+3 * 684 0 684
cfi=(4)
cfn=(174)
calls=684 0x403ccc +42 
* * 9576 3420 3420
+5 * 684 684
+1 * 684 684

fn=(202) std::vector<float, std::allocator<float> >::end()
0x403688 556 8 0 8 1 0 0 1
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::__normal_iterator(float* const&)
calls=8 0x40404e 726 
* * 80 40 32 1 0 0 1
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(208) std::vector<float, std::allocator<float> >::_M_check_len(unsigned long, char const*) const
0x403e8c 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88 1 0 0 1
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 8
+4 * 8
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(12)
cfn=(214) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(2)
calls=8 0x402d74 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(210)
calls=8 0x4045cc 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(246)
0x4039c4 556 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(248)
calls=8 0x4042c6 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(10)
0x402f54 645 1400 0 1400 1 0 0 1
+1 * 1400
+3 * 1400 0 1400
+4 +1 1400 1400
+4 * 1400 1400 0 0 2 0 0 2
+4 * 1400
+3 * 1400 1400
+4 * 1400 1400
+3 * 1400
+3 * 1400
+3 * 1400
+4 * 1400 1400
+1 * 1400 1400

fn=(106)
0x40325e 113 1392 0 1392 1 0 0 1
+1 * 1392
+3 * 1392 0 1392
+4 +1 1392 1392
+4 * 1392 1392
+1 * 1392 1392

fn=(216) std::vector<float, std::allocator<float> >::begin()
0x403f56 538 8 0 8
+1 * 8
+3 * 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(204)
calls=8 0x40404e 726 
* * 80 40 32
+5 * 8 8
+4 * 8 8
+1 * 8 8

fn=(252) std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
0x404104 1336 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8
+3 * 8 8
+4 * 8 0 0 1 0 0 1
+3 * 8
+3 * 8
+2 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +14 +3 
* * 
+14 +3 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(12)
cfn=(214)
calls=8 0x4045ee 216 
* * 104 56 24 0 0 0 0 0 0 8
+5 * 8 8
+3 * 8
+3 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfn=(10)
calls=8 0x402f54 645 
* * 104 48 16
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
+2 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(254)
calls=8 0x40470e 650 
* * 256 88 88
+5 * 8 8
+4 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 +16 * 
* * 
+16 * 8 8 0 1 0 0 1
+4 +1 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(6)
0x403b08 117 700 0 700 1 0 0 1
+1 * 700
+3 * 700 0 700 0 0 1 0 0 1
+4 +1 700 700
+4 * 700 700
+1 * 700 700

fn=(82)
0x4039fc 117 700 0 700 1 0 0 1
+1 * 700
+3 * 700 0 700 1 0 0 1
+4 +1 700 700
+4 * 700 700
+1 * 700 700

fn=(200)
0x402eda 901 342 0 342
+1 * 342
+3 * 342
+4 * 342 0 342
+4 * 342 0 342
+4 +2 342 342
+4 * 342 342
+4 * 342 342
+4 * 342 342
+4 * 342
+3 * 342 0 0 0 0 0 0 0 0 342 8
jcnd=8/342 +51 +10 
* * 
+2 +3 334 334
+4 * 334 334
+4 * 334 334
+4 -1 334 334
+4 * 334
+3 * 334
+3 * 334 0 334
cfi=(3)
cfn=(222)
calls=334 0x403373 215 
* * 12692 4342 4676 0 22 2 0 22 2 334 2
+5 +2 334 334
+4 * 334 334
+4 * 334
+4 * 334 334
+4 * 334 0 334
+4 * 334
jump=334 +36 +8 
* * 
+2 +6 8 8 0 1 0 0 1
+4 * 8
+3 * 8 0 8
cfn=(202)
calls=8 0x403688 556 
* * 184 72 56 2 0 0 2
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(15)
cfn=(206) std::vector<float, std::allocator<float> >::_M_insert_aux(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
calls=8 0x4033a0 318 
* * 12645 3913 3396 36 8 9 36 8 9 853 64 47
+5 +2 342 342
+1 * 342 342

fl=(12)
fn=(120)
0x4049e2 450 684 0 684
+1 * 684
+3 * 684 0 684
+1 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +10 684 684
+4 * 684
+3 * 684 0 684
cfn=(122) std::_Miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
calls=684 0x404bc6 288 
* * 10260 4104 3420 3 0 0 3
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(122)
calls=684 0x404bc6 288 
* * 10260 4104 3420
+5 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(126) float* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, float*)
calls=684 0x404be0 -36 
* * 293636 97148 93048 4 1 40 4 1 40 13232 790 1364
+5 +1 684
+4 * 684 684
+1 * 684 684
+1 * 684 684

fn=(128) std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)
0x404878 277 732 0 732
+1 * 732
+3 * 732
+4 * 732 0 732 1 0 0 1
+4 +1 732 732
+4 * 732
+3 * 732 0 732
cfi=(13)
cfn=(130)
calls=732 -33 -66 
* * 4392 2196 1464 0 0 1 0 0 1
+5 * 732 732
+1 * 732 732

fn=(132) std::_Niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
0x404d44 277 1368 0 1368
+1 * 1368
+3 * 1368
+4 * 1368 0 1368
+4 +1 1368 1368
+4 * 1368
+3 * 1368 0 1368
cfi=(13)
cfn=(134)
calls=1368 0x404e98 -58 
* * 21888 8208 6840 2 0 0 2
+5 * 1368 1368
+1 * 1368 1368

fn=(138) float* std::__copy_move_a<false, float const*, float*>(float const*, float const*, float*)
0x404d5e 379 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +8 684 0 684
+4 +3 684 684
+4 * 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(140) float* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<float>(float const*, float const*, float*)
calls=684 0x404eb5 -22 
* * 219764 72524 67740 1 1 40 1 1 40 13232 790 1364
+5 +1 684 684
+1 * 684 684

fn=(242) float* std::__copy_move_a<false, float*, float*>(float*, float*, float*)
0x404f9c 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(140)
calls=16 0x404eb5 -22 
* * 1506 460 389 0 0 2 0 0 2 100 6 15
+5 +1 16 16
+1 * 16 16

fn=(276)
0x404cf0 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16
+4 * 16
+3 * 16 0 16
cfn=(278) std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(278)
calls=16 0x40469c 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(280) int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
calls=16 0x404e40 -36 
* * 2914 940 885 1 0 18 1 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(278)
0x40469c 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(64)
calls=32 0x40491f -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(122)
0x404bc6 288 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368
+4 * 1368 0 1368
+4 +1 1368 1368
+4 * 1368
+3 * 1368 0 1368
cfi=(13)
cfn=(124)
calls=1368 0x404d36 -77 
* * 8208 4104 2736 2 0 0 2
+5 * 1368 1368
+1 * 1368 1368

fn=(56) std::_Miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
0x404c38 288 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368
+4 * 1368 0 1368 1 0 0 1
+4 +1 1368 1368
+4 * 1368
+3 * 1368 0 1368
cfi=(13)
cfn=(58)
calls=1368 0x404d8f -77 
* * 8208 4104 2736 1 0 0 1
+5 * 1368 1368
+1 * 1368 1368

fn=(74) int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
0x404f37 368 700 0 700
+1 * 700
+3 * 700
+4 * 700 0 700 1 0 0 1
+4 * 700 0 700
+4 * 700 0 700
+4 +2 700 700
+4 * 700 700
+4 * 700
+3 * 700
+3 * 700
+4 * 700 0 700
+4 +1 700 700
+5 * 700 0 0 0 0 0 0 0 0 700
jcnd=8/700 +33 +2 
* * 
+2 +1 692 692
+4 * 692
+8 * 692 692
+4 * 692 692
+4 * 692
+3 * 692 0 0 1 0 0 1
+3 * 692 0 692 0 0 1 0 0 1
cob=(2)
cfi=(9)
cfn=(78) memmove
calls=692 0x3877c83840 0 
* * 201734 65316 63937 11 2 20 11 2 20 12632 810 687 170
* * 692 692 0 1 1 0 1 1 0 0 0 692
+5 +1 700 700
+4 * 700
+8 * 700 700
+4 * 700
+3 +1 700 700
+1 * 700 700

fn=(140)
0x404eb5 368 700 0 700
+1 * 700
+3 * 700
+4 * 700 0 700 1 0 0 1
+4 * 700 0 700
+4 * 700 0 700 0 0 1 0 0 1
+4 +2 700 700
+4 * 700 700
+4 * 700
+3 * 700
+3 * 700
+4 * 700 0 700
+4 +1 700 700
+5 * 700 0 0 0 0 0 0 0 0 700
jcnd=8/700 +33 +2 
* * 
+2 +1 692 692
+4 * 692
+8 * 692 692
+4 * 692 692
+4 * 692
+3 * 692
+3 * 692 0 692
cob=(2)
cfi=(9)
cfn=(78)
calls=692 0x3877c83840 0 
* * 201734 65316 63937 0 1 41 0 1 41 12632 796 687
* * 692 692 0 0 0 0 0 0 0 0 0 692
+5 +1 700 700
+4 * 700
+8 * 700 700
+4 * 700
+3 +1 700 700
+1 * 700 700

fn=(72) int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
0x404db7 379 684 0 684
+1 * 684
+3 * 684
+4 * 684 0 684 1 0 0 1
+4 * 684 0 684
+4 * 684 0 684
+4 +8 684 0 684
+4 +3 684 684
+4 * 684 684
+4 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(74)
calls=684 0x404f37 -22 
* * 219764 72524 67740 14 3 3 14 3 3 13232 806 1364 170
+5 +1 684 684
+1 * 684 684

fn=(126)
0x404be0 424 684 0 684
+1 * 684
+3 * 684 0 684
+2 * 684 0 684
+1 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +4 684 684
+4 * 684
+3 * 684 0 684
cfn=(128)
calls=684 0x404878 277 
* * 10260 4104 3420 1 0 0 1
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(132)
calls=684 0x404d44 277 
* * 17100 6156 5472 2 0 0 2
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(132)
calls=684 0x404d44 277 
* * 17100 6156 5472
+5 * 684
+3 * 684
+3 * 684
+3 * 684 0 684
cfn=(138)
calls=684 0x404d5e -49 
* * 230024 75944 71844 1 1 40 1 1 40 13232 790 1364
+5 +1 684
+4 * 684 684
+1 * 684 684
+2 * 684 684
+1 * 684 684

fn=(236)
0x404caa 450 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +10 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(238) std::_Miter_base<float*>::iterator_type std::__miter_base<float*>(float*)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(238)
calls=16 0x40455a 288 
* * 240 96 80
+5 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(240) float* std::__copy_move_a2<false, float*, float*>(float*, float*, float*)
calls=16 0x404de8 -36 
* * 2914 940 885 1 0 3 1 0 3 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(54)
0x404a36 450 684 0 684
+1 * 684
+3 * 684 0 684
+1 * 684
+4 * 684 0 684 1 0 0 1
+4 * 684 0 684
+4 * 684 0 684
+4 +10 684 684
+4 * 684
+3 * 684 0 684
cfn=(56)
calls=684 0x404c38 288 
* * 10260 4104 3420 3 0 0 3
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(56)
calls=684 0x404c38 288 
* * 10260 4104 3420
+5 * 684 684
+4 * 684
+3 * 684
+3 * 684 0 684
cfn=(60) int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
calls=684 0x404c52 -36 
* * 293636 97148 93048 20 3 4 20 3 4 13232 806 1364 170
+5 +1 684
+4 * 684 684
+1 * 684 684
+1 * 684 684

fn=(60)
0x404c52 424 684 0 684
+1 * 684
+3 * 684 0 684
+2 * 684 0 684
+1 * 684
+4 * 684 0 684
+4 * 684 0 684
+4 * 684 0 684
+4 +4 684 684
+4 * 684
+3 * 684 0 684
cfn=(62) std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
calls=684 0x40492d 277 
* * 10260 4104 3420 2 0 0 2
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684 1 0 0 1
cfn=(66) std::_Niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
calls=684 0x404d9d 277 
* * 17100 6156 5472 2 0 1 2 0 1
+5 * 684
+3 * 684 684
+4 * 684
+3 * 684 0 684
cfn=(66)
calls=684 0x404d9d 277 
* * 17100 6156 5472
+5 * 684
+3 * 684
+3 * 684
+3 * 684 0 684
cfn=(72)
calls=684 0x404db7 -49 
* * 230024 75944 71844 15 3 3 15 3 3 13232 806 1364 170
+5 +1 684
+4 * 684 684
+1 * 684 684
+2 * 684 684
+1 * 684 684

fn=(282) int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
0x404fcd 379 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +8 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(74)
calls=16 0x404f37 -22 
* * 1506 460 389 0 0 18 0 0 18 100 4 15
+5 +1 16 16
+1 * 16 16

fn=(62)
0x40492d 277 732 0 732 1 0 0 1
+1 * 732
+3 * 732
+4 * 732 0 732
+4 +1 732 732
+4 * 732
+3 * 732 0 732 1 0 0 1
cfi=(13)
cfn=(64)
calls=732 -33 -66 
* * 4392 2196 1464
+5 * 732 732
+1 * 732 732

fn=(66)
0x404d9d 277 1368 0 1368
+1 * 1368
+3 * 1368
+4 * 1368 0 1368
+4 +1 1368 1368
+4 * 1368
+3 * 1368 0 1368
cfi=(13)
cfn=(68)
calls=1368 0x404f1a -58 
* * 21888 8208 6840 2 0 1 2 0 1
+5 * 1368 1368
+1 * 1368 1368

fn=(240)
0x404de8 424 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(128)
calls=16 0x404878 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(242)
calls=16 0x404f9c -49 
* * 1746 540 485 0 0 2 0 0 2 100 6 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(214)
0x4045ee 216 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 +5 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 +8 +2 
* * 
+8 +2 16 16
+4 +1 16 16
+1 * 16 16

fn=(238)
0x40455a 288 32 0 32
+1 * 32
+3 * 32
+4 * 32 0 32
+4 +1 32 32
+4 * 32
+3 * 32 0 32
cfi=(13)
cfn=(130)
calls=32 0x40486a -77 
* * 192 96 64
+5 * 32 32
+1 * 32 32

fn=(280)
0x404e40 424 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(62)
calls=16 0x40492d 277 
* * 240 96 80
+5 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfn=(282)
calls=16 0x404fcd -49 
* * 1746 540 485 0 0 18 0 0 18 100 4 15
+5 +1 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fl=(10)
fn=(262) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
0x40409e 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fn=(204)
0x40404e 726 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(218) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::difference_type __gnu_cxx::operator-<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > const&)
0x403f7b 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(220) __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >::base() const
calls=8 0x403e26 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(70)
0x40500c 790 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368 0 1368
+4 +1 1368 1368
+4 * 1368 1368
+1 * 1368 1368

fn=(110)
0x404380 726 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368 0 1368
+4 * 1368 0 1368
+4 * 1368 1368
+4 * 1368 1368
+3 * 1368 1368
+4 * 1368 0 1368
+3 * 1368 1368
+1 * 1368 1368

fn=(260) __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
0x4041f3 896 8 0 8
+1 * 8
+3 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 +2 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16 1 0 0 1
+5 * 8 8
+3 * 8
+3 * 8 8
+4 * 8
+3 * 8 0 8
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+4 * 8 8
+1 * 8 8
+1 * 8 8

fn=(136)
0x404ffe 790 1368 0 1368 1 0 0 1
+1 * 1368
+3 * 1368 0 1368
+4 +1 1368 1368
+4 * 1368 1368
+1 * 1368 1368

fn=(44)
0x404468 726 1368 0 1368
+1 * 1368
+3 * 1368 0 1368
+4 * 1368 0 1368
+4 * 1368 1368
+4 * 1368 1368
+3 * 1368 1368
+4 * 1368 0 1368 1 0 0 1
+3 * 1368 1368
+1 * 1368 1368

fn=(248)
0x4042c6 726 16 0 16
+1 * 16
+3 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16 16
+3 * 16 16
+4 * 16 0 16
+3 * 16 16
+1 * 16 16

fn=(220)
0x403e26 790 32 0 32 1 0 0 1
+1 * 32
+3 * 32 0 32
+4 +1 32 32
+4 * 32 32
+1 * 32 32

fl=(14)
fn=(154) void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)
0x4044f8 112 692 0 692 1 0 0 1
+1 * 692
+3 * 692 0 692
+4 * 692 0 692 1 0 0 1
+4 * 692 692
+1 * 692 692

fn=(182) void std::_Destroy<int*>(int*, int*)
0x403dcc 122 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 +4 692 692
+4 * 692 692
+4 * 692
+3 * 692
+3 * 692 0 692
cfn=(184) void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
calls=692 0x40454c -14 
* * 4152 1384 2076 1 0 0 1
+5 +2 692 692
+1 * 692 692

fn=(150)
0x40326c 148 692 0 692
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 * 692 0 692
+4 +3 692 692 0 1 0 0 1
+4 * 692 692
+4 * 692
+3 * 692
+3 * 692 0 692
cfn=(152) void std::_Destroy<float*>(float*, float*)
calls=692 0x403d1a -29 
* * 12456 4152 4844 3 0 0 3
+5 +1 692 692
+1 * 692 692

fn=(180)
0x40334a 148 692 0 692
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 * 692 0 692
+4 +3 692 692
+4 * 692 692
+4 * 692
+3 * 692
+3 * 692 0 692
cfn=(182)
calls=692 0x403dcc -29 
* * 12456 4152 4844 2 0 0 2
+5 +1 692 692
+1 * 692 692

fn=(152)
0x403d1a 122 692 0 692 1 0 0 1
+1 * 692
+3 * 692
+4 * 692 0 692
+4 * 692 0 692
+4 +4 692 692
+4 * 692 692
+4 * 692
+3 * 692
+3 * 692 0 692
cfn=(154)
calls=692 0x4044f8 -14 
* * 4152 1384 2076 2 0 0 2
+5 +2 692 692
+1 * 692 692

fn=(184)
0x40454c 112 692 0 692 1 0 0 1
+1 * 692
+3 * 692 0 692
+4 * 692 0 692
+4 * 692 692
+1 * 692 692

fl=(15)
fn=(250)
0x4036de 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x403799 +21 
* * 
0x403799 +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(252)
calls=8 0x404104 1336 
* * 1448 536 376 4 0 0 4 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(258)
calls=8 0x4041ce 538 
* * 176 72 56
+5 * 8 0 8 1 0 0 1
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(260)
calls=8 0x4041f3 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(22)
calls=8 0x404236 167 
* * 2997 473 471 9 16 7 9 16 7 480 60 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8
+4 * 8 0 0 1 0 0 1
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(264)
calls=8 0x4036b1 215 
* * 304 104 112 0 0 4 0 0 4 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -88 
* * 2930 956 917 3 0 18 3 0 18 92 4 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(262)
calls=8 0x40409e 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(268)
calls=8 0x40426e -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(40)
calls=8 0x40333c 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8
+4 * 8 8
+3 -1 8 0 0 1 0 0 1
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(180)
calls=8 0x40334a 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(188)
calls=8 0x403d98 171 
* * 1107 304 194 0 0 0 0 0 0 211 17 16
+5 +3 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x4039ba * 
* * 
0x4039ba * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

fn=(206)
0x4033a0 318 8 0 8 1 0 0 1
+1 * 8
+3 * 8 0 8
+2 * 8 0 8
+1 * 8
+4 * 8 0 8
+4 * 8 0 8
+4 * 8 0 8
+4 +4 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+4 * 8
+3 * 8 0 0 0 0 0 0 0 0 8
jcnd=8/8 0x40345e +21 
* * 
0x40345e +21 8 8 0 1 0 0 1
+4 * 8
+5 * 8
+5 * 8
+3 * 8 0 8
cfi=(2)
cfn=(208)
calls=8 0x403e8c 1336 
* * 1448 536 376 5 0 0 5 0 0 32
+5 * 8 0 8
+4 +1 8 8
+4 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(216)
calls=8 0x403f56 538 
* * 176 72 56
+5 * 8 0 8
+4 * 8
+4 * 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(10)
cfn=(218)
calls=8 0x403f7b 896 
* * 272 104 80 1 0 0 1
+5 * 8 0 8
+4 +1 8 8
+4 * 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(2)
cfn=(96)
calls=8 0x403fbe 167 
* * 3217 678 624 13 7 5 13 7 5 503 51 16
+5 * 8 0 8
+4 +1 8 8
+4 * 8 0 8
+4 +12 8 8 0 1 0 0 1
+4 * 8
+8 * 8 8
+4 * 8
+4 * 8 8
+4 -5 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(3)
cfn=(222)
calls=8 0x403373 215 
* * 304 104 112 0 1 1 0 1 1 8
+5 +7 8 0 8
+8 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8
+4 * 8 0 0 1 0 0 1
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 * 8 8
+4 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -88 
* * 2930 956 917 6 0 3 6 0 3 92 6 15
+5 * 8 0 8
+4 +5 8 0 8
+5 +5 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8
+4 * 8
+3 * 8 0 8
cfi=(10)
cfn=(220)
calls=8 0x403e26 790 
* * 48 24 16
+5 * 8 8
+3 -3 8 8
+4 * 8
+3 * 8
+3 * 8
+3 * 8 0 8
cfi=(11)
cfn=(228)
calls=8 0x403ff6 -95 
* * 1744 608 608 0 0 0 0 0 0 8
+5 * 8 0 8
+4 +16 8 8
+4 * 8
+3 * 8 0 8
cfi=(2)
cfn=(106)
calls=8 0x40325e 113 
* * 48 24 16
+5 * 8
+3 * 8 8
+4 * 8 8
+4 * 8 8 0 1 0 0 1
+4 * 8 8
+3 -1 8
+3 * 8
+3 * 8 0 8
cfi=(14)
cfn=(150)
calls=8 0x40326c 148 
* * 248 80 96
+5 +4 8 8
+4 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8
+3 * 8
+3 * 8
+4 * 8
+3 * 8 8
+4 * 8 8
+3 * 8 8
+4 -2 8
+3 * 8
+3 * 8 0 8 1 0 0 1
cfi=(2)
cfn=(158)
calls=8 0x403ce6 171 
* * 1074 287 191 1 0 0 1 0 0 202 7 16
+5 +3 8 8
+4 * 8 8
+4 * 8 0 8
+3 +1 8 8
+4 * 8 8
+4 * 8 0 8
+4 +1 8 8
+4 * 8
+8 * 8 8
+4 * 8
+3 * 8 8
+4 * 8 0 8
+4 +2 8
jump=8 0x40367f * 
* * 
0x40367f * 8 0 0 1 0 0 1
+4 * 8 8
+1 * 8 8
+2 * 8 8
+1 * 8 8

ob=(2)
fl=(9)
fn=(170) _int_free
0x3877c78650 0 1384 0 1384 1 0 0 1
+2 0 1384 0 1384
+2 0 1384 0 1384
+2 0 1384
+3 0 1384 0 1384
+2 0 1384 0 1384
+1 0 1384 0 1384
+1 0 1384
+3 0 1384
+4 0 1384 1384
+4 0 1384 0 1384
+4 0 1384
+3 0 1384
+4 0 1384
+3 0 1384
+3 0 1384
+3 0 1384 0 0 1 0 0 1 0 0 1384
+6 0 1384
+4 0 1384 0 0 0 0 0 0 0 0 1384
+6 0 1384
+4 0 1384 0 0 0 0 0 0 0 0 1384
+6 0 1384 1384
+7 0 1384 0 0 0 0 0 0 0 0 1384 4
jcnd=1260/1384 0x3877c78778 0 
* 0 
+6 0 124
+4 0 124 124
+4 0 124
+4 0 124 0 0 0 0 0 0 0 0 124
+6 0 124
+4 0 124 124
+7 0 124 0 0 1 0 0 1 0 0 124
+6 0 124 124
+6 0 124
+2 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+5 0 124
+3 0 124
+3 0 124
+2 0 124 124
+5 0 124
+5 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+6 0 124 124 0 1 0 0 1
+4 0 124
+6 0 124
+2 0 124
+4 0 124
jump=124 +20 0 
* 0 
+20 0 124
+3 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +14 0 
* 0 
+14 0 124 0 124
+4 0 124 0 0 1 0 0 1
+3 0 124 124
+9 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +3 0 
* 0 
+3 0 124 0 124
+4 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
+2 0 124
+3 0 124 0 0 0 0 0 0 0 0 124
jcnd=124/124 +11 0 
* 0 
+11 0 124
+4 0 124 124
+1 0 124 124
+1 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+2 0 124 124
+4 0 1260
+2 0 1260 0 0 0 0 0 0 0 0 1260
+6 0 1260 1260 0 1 0 0 1
+4 0 1260
+3 0 1260
+2 0 1260 0 0 0 0 0 0 0 0 1260
jcnd=1260/1260 0x3877c78a40 0 
* 0 
+6 0 1260 1260
+4 0 1260
+3 0 1260 0 0 0 0 0 0 0 0 1260
+6 0 1260 1260
+5 0 1260
+4 0 1260 0 0 0 0 0 0 0 0 1260
jcnd=1260/1260 0x3877c7907c 0 
* 0 
+6 0 1260 1260
+5 0 1260
+4 0 1260 0 0 0 0 0 0 0 0 1260
+6 0 1260
+4 0 1260 0 0 1 0 0 1 0 0 1260
+6 0 1260
+4 0 1260 1260
+7 0 1260 0 0 0 0 0 0 0 0 1260
+6 0 1260 1260
+6 0 1260
+2 0 1260 0 0 0 0 0 0 0 0 1260
+6 0 1260 1260
+4 0 1260 0 0 0 0 0 0 0 0 1260 5
jcnd=1256/1260 +70 0 
* 0 
+2 0 4 4
+3 0 4
+3 0 4
+3 0 4 4
+4 0 4 4
+4 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4 2
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+8 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4
jcnd=4/4 +15 0 
* 0 
+15 0 1260 1260 0 1 0 0 1
+4 0 1260 0 0 0 0 0 0 0 0 1260 438
jcnd=490/1260 0x3877c78bf0 0 
* 0 
+6 0 770 770 0 0 1 0 0 1
+6 0 770 0 0 1 0 0 1 0 0 770 64
jcnd=61/770 0x3877c78a78 0 
* 0 
+6 0 709 709
+5 0 709 709
+5 0 709 709
+4 0 709 0 0 0 0 0 0 0 0 709
+6 0 709 709
+4 0 709 0 0 0 0 0 0 0 0 709
+6 0 709 709
+9 0 709 0 709
+4 0 709 0 709
+4 0 709 0 0 0 0 0 0 0 0 709 4
jcnd=701/709 +16 0 
* 0 
+2 0 8 8
+5 0 8
+3 0 8 0 0 1 0 0 1 0 0 8
+6 0 709
+3 0 709
+4 0 709 709
+4 0 709 709
+4 0 709 0 0 0 0 0 0 0 0 709
-12 0 61
+4 0 61 61
+4 0 61 61
+4 0 61 0 0 0 0 0 0 0 0 61
+6 0 770
+7 0 770 0 770
+4 0 770 0 770
+4 0 770 0 0 0 0 0 0 0 0 770 69
jcnd=441/770 +18 0 
* 0 
+2 0 329 0 329
+8 0 329 0 329
+8 0 329 0 329
+4 0 329
+3 0 329 0 329 1 0 0 1
+4 0 329
+4 0 329 0 329
+4 0 329 0 329
+4 0 329
+7 0 329 0 0 0 0 0 0 0 0 329
jcnd=329/329 0x3877c78b20 0 
* 0 
-30 0 441 0 441
+4 0 441
+3 0 441 0 441
+4 0 441
+4 0 441 0 441
+4 0 441 0 441
+4 0 441
+7 0 441 0 0 0 0 0 0 0 0 441
jcnd=441/441 0x3877c78b20 0 
* 0 
-7 0 490
+7 0 490 0 0 0 0 0 0 0 0 490
jcnd=490/490 0x3877c78b20 0 
* 0 
0x3877c78a40 0 1260 0 0 1 0 0 1
+5 0 1260 1260
+4 0 1260 1260
+7 0 1260 0 0 0 0 0 0 0 0 1260
jcnd=1260/1260 +16 0 
* 0 
+16 0 1260 0 1260
+5 0 1260 0 0 0 0 0 0 0 0 1260
+6 0 1260
+3 0 1260
jump=1260 0x3877c7878f 0 
* 0 
+10 0 61 0 61
+6 0 61 0 0 1 0 0 1
jump=61 0x3877c78885 0 
* 0 
0x3877c78b20 0 1260 1260 0 1 0 0 1
+4 0 1260
+2 0 1260 0 0 0 0 0 0 0 0 1260
+6 0 1260 1260
+7 0 1260 0 0 0 0 0 0 0 0 1260
jcnd=1260/1260 +15 0 
* 0 
+15 0 1260 0 1260 1 0 0 1
+4 0 1260 0 0 0 0 0 0 0 0 1260 2
+6 0 1260
+4 0 1260 1260
+1 0 1260 1260
+1 0 1260 1260
+2 0 1260 1260
+2 0 1260 1260
+2 0 1260 1260
+2 0 1260 1260
0x3877c78bf0 0 490 0 0 1 0 0 1
+3 0 490 0 490
+4 0 490
+3 0 490
+4 0 490 0 490 1 0 0 1
+4 0 490
jump=490 0x3877c788cf 0 
* 0 
0x3877c7907c 0 1260 1260 0 1 1 0 1 1
+4 0 1260 0 0 1 0 0 1
+7 0 1260
+4 0 1260
+3 0 1260
+3 0 1260 0 0 0 0 0 0 0 0 1260
jcnd=1260/1260 0x3877c787ab 0 
* 0 

fn=(284) _wordcopy_fwd_aligned
0x3877c89b20 0 1374 0 0 1 0 0 1
+7 0 1374
+3 0 1374
+3 0 1374 1374 0 0 1 0 0 1
+4 0 1374
+4 0 1374 0 0 0 0 0 0 0 0 0 0 1374 170
jump=168 0x3877c89be8 0 
* 0 
jump=178 0x3877c89bd0 0 
* 0 
jump=168 0x3877c89bb8 0 
* 0 
jump=168 +11 0 
* 0 
jump=168 0x3877c89c48 0 
* 0 
jump=170 0x3877c89c30 0 
* 0 
jump=176 0x3877c89c18 0 
* 0 
jump=178 0x3877c89c00 0 
* 0 
+11 0 168 168
+3 0 168
+4 0 168
+4 0 168 168
+4 0 168
+4 0 168 0 168
+4 0 168
+9 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
+4 0 168
+4 0 168 0 0 0 0 0 0 0 0 168
jcnd=8/168 0x3877c89c60 0 
* 0 
-40 0 14510 14510
+4 0 14510 0 14510 0 0 3 0 0 3
+4 0 14510 14510
+4 0 14510 0 14510 0 0 15 0 0 15
+4 0 14510 14510
+4 0 14510 0 14510 0 0 19 0 0 19
+4 0 14510 14510
+4 0 14510 0 14510
+4 0 14510
+4 0 14510
+4 0 14510 0 0 0 0 0 0 0 0 14510 900
jcnd=1338/14510 0x3877c89c60 0 
* 0 
-32 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170 170
+4 0 170 0 170
+4 0 170
+4 0 170
+4 0 170 0 0 0 0 0 0 0 0 170
jcnd=10/170 0x3877c89c60 0 
* 0 
-24 0 176 176
+4 0 176 0 176
+4 0 176 176
+4 0 176 0 176
+4 0 176
+4 0 176
+4 0 176 0 0 0 0 0 0 0 0 176
jcnd=8/176 0x3877c89c60 0 
* 0 
-16 0 178 178 0 1 0 0 1
+4 0 178 0 178
+4 0 178 0 0 1 0 0 1
+4 0 178
+4 0 178 0 0 0 0 0 0 0 0 178 4
jcnd=10/178 0x3877c89c60 0 
* 0 
+6 0 13828
+4 0 13828 13828
+3 0 13828 0 13828 0 0 1 0 0 1
+3 0 13828 13828
+4 0 13828 0 13828 0 0 3 0 0 3
+4 0 13828 13828
+4 0 13828 0 13828 0 0 18 0 0 18
+4 0 13828 13828
+4 0 13828 0 13828
+4 0 13828
jump=13828 -80 0 
* 0 
-30 0 168 168
+3 0 168 0 168
+3 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168 0 0 1 0 0 1
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
-24 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178 178
+4 0 178 0 178
+4 0 178
jump=178 -80 0 
* 0 
-16 0 168 168
+4 0 168 0 168
+4 0 168 168
+4 0 168 0 168
+4 0 168
jump=168 -80 0 
* 0 
+8 0 168 168
+3 0 168
+4 0 168 0 0 1 0 0 1
+4 0 168
+4 0 168
jump=168 -39 0 
* 0 
+9 0 178
+3 0 178 0 0 0 0 0 0 0 0 178
+6 0 178 178
+3 0 178
+4 0 178
jump=178 -72 0 
* 0 
+8 0 168
+4 0 168 168
+3 0 168 0 0 0 0 0 0 0 0 168
+2 0 168
+4 0 168
jump=168 -99 0 
* 0 
+11 0 178 178 0 1 0 0 1
+3 0 178
+4 0 178
+4 0 178
+4 0 178
jump=178 0x3877c89b78 0 
* 0 
+9 0 176 176
+3 0 176
+4 0 176
+4 0 176
+4 0 176
jump=176 0x3877c89b70 0 
* 0 
+9 0 170 170
+3 0 170
+4 0 170
+4 0 170
+4 0 170
jump=170 0x3877c89b68 0 
* 0 
+9 0 168 168
+3 0 168
+4 0 168
+4 0 168
+4 0 168
jump=168 0x3877c89b60 0 
* 0 
+9 0 1374 0 1374 1 0 0 1
+3 0 1374 1374

fn=(104) alloc_perturb
0x3877c77180 0 1250 1250 0 1 0 0 1
+6 0 1250
+2 0 1250 0 0 0 0 0 0 0 0 1250 1
+2 0 1250 1250

fn=(38) _int_malloc
0x3877c79a00 0 1384 0 1384 1 0 0 1
+2 0 1384
+3 0 1384 0 1384
+2 0 1384 0 1384
+2 0 1384 0 1384 0 0 1 0 0 1
+2 0 1384
+3 0 1384 0 1384
+1 0 1384 0 1384
+1 0 1384
+4 0 1384
+4 0 1384 0 0 0 0 0 0 0 0 1384
+6 0 1384
+4 0 1384
+6 0 1384
+3 0 1384
+4 0 1384
+4 0 1384
+4 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384
+6 0 1384 1384 0 1 1 0 1 1
+7 0 1384 0 0 0 0 0 0 0 0 1384 7
jcnd=1262/1384 0x3877c79af8 0 
* 0 
+6 0 122
+3 0 122
+3 0 122
+3 0 122
+2 0 122 122 0 0 1 0 0 1
+5 0 122
+3 0 122 0 0 0 0 0 0 0 0 122 25
jcnd=17/122 0x3877c79af8 0 
* 0 
+6 0 105
+4 0 105 105 0 0 1 0 0 1
+4 0 105
+3 0 105
+4 0 105 105 0 0 1 0 0 1
+9 0 105 0 0 0 0 0 0 0 0 105 2
jcnd=105/105 +3 0 
* 0 
+3 0 105 0 105 1 0 0 1
+5 0 105
+3 0 105
+3 0 105 0 0 0 0 0 0 0 0 105
+2 0 105
jump=105 0x3877c7a2db 0 
* 0 
+46 0 105 105 0 0 1 0 0 1
+4 0 105 0 0 1 0 0 1
+3 0 105
+3 0 105
+2 0 105 0 0 0 0 0 0 0 0 105
+6 0 134 134
+6 0 134
+4 0 134
+2 0 134 0 0 0 0 0 0 0 0 134
+6 0 134
+3 0 134
+4 0 134 134
+1 0 134 134
+1 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
+2 0 134 134
-14 0 1250
+4 0 1250 1250
+1 0 1250 1250
+1 0 1250 1250
+2 0 1250 1250
+2 0 1250 1250
+2 0 1250 1250
+2 0 1250 1250
+7 0 1279
+7 0 1279 0 0 1 0 0 1 0 0 1279 7
jcnd=376/1279 0x3877c79b70 0 
* 0 
+2 0 903
+3 0 903
+5 0 903
+3 0 903
+4 0 903 0 903
+4 0 903
+2 0 903
+5 0 903 903 0 0 3 0 0 3
+4 0 903
+3 0 903 0 0 0 0 0 0 0 0 903
jcnd=903/903 0x3877c79bc2 0 
* 0 
+78 0 376 0 0 1 0 0 1
+3 0 376
+4 0 376
+4 0 376 0 0 1 0 0 1 0 0 376
jcnd=376/376 0x3877c7a1a4 0 
* 0 
+30 0 376 376
+6 0 376
+5 0 376 0 0 0 0 0 0 0 0 376 1
jcnd=375/376 +30 0 
* 0 
+2 0 1
+3 0 1 0 1
+5 0 1 0 1
+5 0 1 0 1
cfn=(286) malloc_consolidate
calls=1 0x3877c75e10 0 
* 0 911 244 193 8 3 0 8 3 0 187 19
+5 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1
+5 0 1 0 1
+5 0 1
+3 0 1
+3 0 1 0 1
+5 0 1
+5 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1
+6 0 1 0 1
+4 0 1 0 1
+5 0 1
+3 0 1
+3 0 1
+3 0 1
jump=1 +87 0 
* 0 
0x3877c79bc2 0 1278 0 0 1 0 0 1
+3 0 1278
+3 0 1278
+3 0 1278
+4 0 1278
+3 0 1278
+4 0 1278 0 1278
+5 0 1278
+3 0 1278 0 1278
+4 0 1278 0 1278
+4 0 1278 0 1278
+5 0 1278
+3 0 1278
+3 0 1278
+3 0 1278
+3 0 1278
+4 0 1278
+4 0 1278 0 0 1 0 0 1
+4 0 1278 0 1278
+4 0 1278
+4 0 1278 0 1278
+5 0 1278 0 1278
+5 0 1278
+3 0 1278
+3 0 1278 0 1278
+5 0 1278
+5 0 1278
+3 0 1278 0 1278
+4 0 1278 0 1278
+4 0 1278
+6 0 1278 0 1278
+4 0 1278 0 1278
+5 0 1278 0 0 1 0 0 1
+3 0 1278
+3 0 1278
+3 0 1278
jump=1278 +87 0 
* 0 
+8 0 965
+3 0 965
+4 0 965
+2 0 965
+2 0 965
+3 0 965
+3 0 965
+3 0 965
+2 0 965
+2 0 965
+5 0 965
+2 0 965 965 0 0 2 0 0 2
+4 0 965
+3 0 965
+4 0 965 0 965
+4 0 965 0 965
+8 0 965
+7 0 965 0 965
+4 0 965 0 965 0 0 1 0 0 1
+4 0 965 0 965
+4 0 965 0 0 0 0 0 0 0 0 965
-38 0 319
+3 0 319
+4 0 319 0 319
+4 0 319 0 319
+8 0 319
+7 0 319 0 319
+4 0 319 0 319
+4 0 319 0 319
+4 0 319 0 0 0 0 0 0 0 0 319
+6 0 2563 2563 0 1 0 0 1
+4 0 2563
+3 0 2563 0 0 0 0 0 0 0 0 2563 149
jcnd=1230/2563 0x3877c79ef0 0 
* 0 
+6 0 1333 1333
+4 0 1333 1333
+4 0 1333
+4 0 1333 0 0 0 0 0 0 0 0 1333
+6 0 1333 1333 0 1 1 0 1 1
+7 0 1333 0 0 0 0 0 0 0 0 1333
+6 0 1333
+4 0 1333
+7 0 1333 0 0 0 0 0 0 0 0 1333 6
jcnd=423/1333 +11 0 
* 0 
+2 0 910
+3 0 910 0 0 0 0 0 0 0 0 910 62
jcnd=834/910 0x3877c79e28 0 
* 0 
+6 0 1313
+3 0 1313 0 1313
+4 0 1313 0 1313
+5 0 1313 0 0 0 0 0 0 0 0 1313 17
jcnd=29/1313 0x3877c7a090 0 
* 0 
+6 0 1284
+7 0 1284 0 0 0 0 0 0 0 0 1284 170
jcnd=965/1284 0x3877c79c50 0 
* 0 
+6 0 319 0 0 1 0 0 1
+3 0 319
+4 0 319
+4 0 319 0 0 0 0 0 0 0 0 319
+6 0 319
+3 0 319
+4 0 319
+2 0 319
+2 0 319
+3 0 319
+3 0 319
+8 0 319
+3 0 319
+2 0 319
+2 0 319
+4 0 319 319 0 0 2 0 0 2
+4 0 319
+3 0 319 0 0 1 0 0 1 0 0 319 9
jcnd=319/319 0x3877c79e15 0 
* 0 
0x3877c79e15 0 319 0 319
+4 0 319 0 319
+4 0 319
+3 0 319
jump=319 0x3877c79c73 0 
* 0 
+8 0 834 834 0 1 0 0 1
+4 0 834
+3 0 834 0 0 0 0 0 0 0 0 834 335
jcnd=428/834 0x3877c79ce1 0 
* 0 
+6 0 406 406
+5 0 406 0 0 0 0 0 0 0 0 406 6
jcnd=386/406 0x3877c79ce1 0 
* 0 
+6 0 20 0 0 1 0 0 1
+3 0 20
+3 0 20
+3 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20
+3 0 20 0 20
+4 0 20 0 20 0 0 17 0 0 17
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 5
jcnd=11/20 +18 0 
* 0 
+2 0 9 0 9 0 0 1 0 0 1
+8 0 9 0 9
+8 0 9
+7 0 9 0 9
+4 0 9
+3 0 9
+3 0 9
+3 0 9
+4 0 9
+3 0 9
+4 0 9
+3 0 9
+3 0 9
+4 0 9 0 9
+4 0 9 0 9
+4 0 9
+4 0 9
+3 0 9 0 9
cfn=(104)
calls=9 0x3877c77180 0 
* 0 36 18 0 0 0 0 0 0 0 9
-56 0 11
+7 0 11 0 11 1 0 0 1
+4 0 11
+3 0 11
+3 0 11
+3 0 11
+4 0 11
+3 0 11
+4 0 11
+3 0 11
+3 0 11
+4 0 11 0 11
+4 0 11 0 11 0 0 2 0 0 2
+4 0 11
+4 0 11
+3 0 11 0 11
cfn=(104)
calls=11 0x3877c77180 0 
* 0 44 22 0 1 0 0 1 0 0 11
+5 0 20
+3 0 20
jump=20 0x3877c79ae3 0 
* 0 
+55 0 1230 0 0 1 0 0 1
+7 0 1230
+3 0 1230 0 0 0 0 0 0 0 0 1230 4
jcnd=368/1230 0x3877c7a0b0 0 
* 0 
+6 0 1206 1206 0 1 0 0 1
+4 0 1206
+3 0 1206
+3 0 1206
+2 0 1206
+4 0 1206
+3 0 1206
+3 0 1206
+2 0 1206
+2 0 1206
+2 0 1206
+2 0 1206 1206 0 0 1 0 0 1
+8 0 1206
+5 0 1206
+5 0 1206
+2 0 1206 0 0 0 0 0 0 0 0 1206
-2 0 586
+2 0 586 0 0 0 0 0 0 0 0 586
+2 0 1792
+2 0 1792 0 0 0 0 0 0 0 0 1792 33
jcnd=1024/1792 +64 0 
* 0 
+2 0 768
+8 0 768
+3 0 768
+3 0 768 0 0 0 0 0 0 0 0 768 1
jcnd=1/768 0x3877c79fc0 0 
* 0 
-6 0 915
+3 0 915
+3 0 915 0 0 0 0 0 0 0 0 915 11
jcnd=491/915 0x3877c79fc0 0 
* 0 
+2 0 1191
+2 0 1191 1191
+8 0 1191
+2 0 1191 0 0 0 0 0 0 0 0 1191 26
jcnd=915/1191 -20 0 
* 0 
+2 0 276
+2 0 276
+5 0 276
+3 0 276
+3 0 276
+2 0 276
+2 0 276
+5 0 276 0 0 0 0 0 0 0 0 276
+2 0 276
+2 0 276
+4 0 276
+2 0 276
+2 0 276 0 0 0 0 0 0 0 0 276 6
jcnd=214/276 -8 0 
* 0 
-8 0 9531
+4 0 9531
+2 0 9531
+2 0 9531 0 0 0 0 0 0 0 0 9531 692
jcnd=8428/9531 -8 0 
* 0 
-2 0 1024 0 0 1 0 0 1
+2 0 1024 0 0 0 0 0 0 0 0 1024 26
jcnd=889/1024 -8 0 
* 0 
+2 0 1300 1300 0 0 14 0 0 14
+4 0 1300 0 0 1 0 0 1
+3 0 1300 0 0 0 0 0 0 0 0 1300 533
jcnd=714/1300 0x3877c7a1cf 0 
* 0 
+6 0 586
+2 0 586
+4 0 586
+2 0 586
+2 0 586
+2 0 586 0 586
+8 0 586
jump=586 0x3877c79f30 0 
* 0 
+37 0 492 492 0 1 0 0 1
+5 0 492 492
+4 0 492
+4 0 492 492
+5 0 492 0 0 0 0 0 0 0 0 492
jcnd=492/492 0x3877c7a41c 0 
* 0 
0x3877c7a090 0 29 0 0 1 0 0 1
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29
jcnd=29/29 0x3877c79ace 0 
* 0 
+16 0 368 368
+4 0 368
+4 0 368
+2 0 368
+5 0 368 368 0 1 0 0 1
+4 0 368
+3 0 368 0 0 0 0 0 0 0 0 368 4
jcnd=344/368 0x3877c79f00 0 
* 0 
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24
+3 0 24 24
+4 0 24 24
+4 0 24
+3 0 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24
jcnd=24/24 0x3877c7a650 0 
* 0 
+26 0 24 0 0 1 0 0 1
+3 0 24 24
+4 0 24
+3 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24
+6 0 24 24
+4 0 24 0 0 0 0 0 0 0 0 24 2
+6 0 24 24
+8 0 24 0 24
+4 0 24 0 24
+4 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24 0 1 0 0 1
+4 0 24
+3 0 24 0 0 0 0 0 0 0 0 24 24
jcnd=24/24 0x3877c7a659 0 
* 0 
+6 0 24
+4 0 24 0 0 0 0 0 0 0 0 24 4
jcnd=8/24 0x3877c7a2e3 0 
* 0 
+6 0 16 16
+4 0 16
+7 0 16 16
+4 0 16 0 0 0 0 0 0 0 0 16
+6 0 16
+4 0 16
+7 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16 0 0 0 0 0 0 0 0 16
jcnd=16/16 0x3877c7a285 0 
* 0 
+31 0 376 0 0 1 0 0 1
+3 0 376 0 376
+4 0 376
jump=376 0x3877c79b99 0 
* 0 
+36 0 714 714 0 1 1 0 1 1
+4 0 714 714
+4 0 714
+3 0 714 714
+4 0 714
+4 0 714
+3 0 714
+3 0 714 714
+4 0 714 0 0 0 0 0 0 0 0 714
+6 0 714 714
+4 0 714 0 0 0 0 0 0 0 0 714
+6 0 714 714 0 1 0 0 1
+8 0 714 0 714
+4 0 714 0 714
+4 0 714 0 0 0 0 0 0 0 0 714 11
jcnd=418/714 +38 0 
* 0 
+2 0 296 296 0 0 2 0 0 2
+4 0 296
+3 0 296 0 0 0 0 0 0 0 0 296
+2 0 296 296
+5 0 296 0 0 0 0 0 0 0 0 296
+6 0 296 296
+4 0 296 0 296
+4 0 296 296
+4 0 296 0 296
+4 0 296
+4 0 296 0 0 0 0 0 0 0 0 296
-4 0 418
+4 0 418 0 0 0 0 0 0 0 0 418 7
jcnd=21/418 0x3877c7a2e3 0 
* 0 
+6 0 693 693
+4 0 693 693 0 1 0 0 1
+4 0 693 0 0 0 0 0 0 0 0 693
+6 0 693
+4 0 693
+7 0 693 0 693 0 0 7 0 0 7
+4 0 693 0 693
+4 0 693 0 693
+4 0 693 0 693
+4 0 693 0 0 0 0 0 0 0 0 693 4
jcnd=228/693 +7 0 
* 0 
+2 0 465 0 465
+5 0 465
+7 0 465 0 0 0 0 0 0 0 0 465 4
jcnd=458/465 +18 0 
* 0 
-7 0 228
+7 0 228 0 0 0 0 0 0 0 0 228
jcnd=228/228 +18 0 
* 0 
+2 0 7 0 7 0 0 1 0 0 1
+8 0 7 0 7 1 0 0 1
+8 0 7
+7 0 7 0 7 0 0 2 0 0 2
+4 0 7
+3 0 7
+3 0 7
+4 0 7
+3 0 7
+4 0 7
+3 0 7
+3 0 7
+4 0 7 0 7
+4 0 7 0 7
+4 0 7
jump=7 +71 0 
* 0 
-46 0 702
+7 0 702 0 702
+4 0 702
+3 0 702
+3 0 702
+4 0 702
+3 0 702
+4 0 702
+3 0 702
+3 0 702
+4 0 702 0 702
+4 0 702 0 702 0 0 1 0 0 1
+4 0 702
jump=702 +71 0 
* 0 
+40 0 105 0 0 1 0 0 1
+3 0 105
jump=105 0x3877c79abc 0 
* 0 
+5 0 29
+7 0 29 0 29
+6 0 29
+3 0 29 0 0 0 0 0 0 0 0 29 2
jcnd=29/29 +7 0 
* 0 
+7 0 738
+4 0 738 0 0 1 0 0 1
+3 0 738
+3 0 738 0 738
cfn=(104)
calls=738 0x3877c77180 0 
* 0 2952 1476 0 0 0 0 0 0 0 738
+5 0 738
+3 0 738
jump=738 0x3877c79ae3 0 
* 0 
0x3877c7a41c 0 492 0 0 1 0 0 1
+7 0 492
+2 0 492
+4 0 492
+3 0 492
+3 0 492 0 492
+5 0 492
+3 0 492
+4 0 492
+3 0 492 0 0 1 0 0 1
+4 0 492
+4 0 492
+3 0 492
+4 0 492 0 492
+4 0 492 0 492 0 0 19 0 0 19
+4 0 492
+3 0 492
+3 0 492 0 492
cfn=(104)
calls=492 0x3877c77180 0 
* 0 1968 984 0 0 0 0 0 0 0 492 1
+5 0 492
+3 0 492
jump=492 0x3877c79ae3 0 
* 0 
0x3877c7a650 0 24 24 0 1 0 0 1
+4 0 24
jump=24 0x3877c7a10e 0 
* 0 
+5 0 24 24
+5 0 24 0 0 0 0 0 0 0 0 24
+2 0 24 24
+4 0 24 0 24
+4 0 24 24
+4 0 24 0 24
+4 0 24
jump=24 0x3877c7a14b 0 
* 0 

fn=(36)
0x3877c7aa50 0 1384 0 1384 1 0 0 1
+5 0 1384 0 1384
+5 0 1384
+3 0 1384 0 1384
+5 0 1384
+4 0 1384 1384 0 0 1 0 0 1
+7 0 1384 1384 0 0 1 0 0 1
+3 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384 2
+6 0 1384 1384 0 0 1 0 0 1
+7 0 1384 1384 0 1 1 0 1 1
+4 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384
+2 0 1384 1384 0 0 1 0 0 1
+3 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384
jcnd=1384/1384 +97 0 
* 0 
+18 0 1384
+3 0 1384
+3 0 1384 0 1384
cfn=(38)
calls=1384 0x3877c79a00 0 
* 0 317750 39067 46022 45 34 52 45 34 52 49133 2215
+5 0 1384
+3 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384
+2 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384
+2 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384 23
+2 0 1384 1384
+7 0 1384 0 0 0 0 0 0 0 0 1384
jcnd=1384/1384 +13 0 
* 0 
+13 0 1384 0 1384
+2 0 1384 0 0 0 0 0 0 0 0 1384 14
+6 0 1384
+3 0 1384 1384
+4 0 1384 1384
+5 0 1384 1384
+5 0 1384
+4 0 1384 1384
+1 0 1384 0 0 1 0 0 1
+5 0 1384 1384 0 0 1 0 0 1
+7 0 1384 0 0 0 0 0 0 0 0 1384
jcnd=1384/1384 +14 0 
* 0 
+14 0 1384 0 1384 1 0 0 1
+3 0 1384 0 0 0 0 0 0 0 0 1384
+6 0 1384
jump=1384 0x3877c7aaa1 0 
* 0 

fn=(78)
0x3877c83840 0 1384 0 1384 1 0 0 1
+2 0 1384
+3 0 1384
+3 0 1384 0 1384
+2 0 1384
+3 0 1384 0 1384
+1 0 1384
+3 0 1384 0 1384
+1 0 1384
+3 0 1384
+4 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384
+6 0 1384
+4 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384 7
jcnd=10/1384 0x3877c838d1 0 
* 0 
+2 0 1374
+3 0 1374
+3 0 1374
+3 0 1374
+3 0 1374
+3 0 1374 0 0 0 0 0 0 0 0 1374
jcnd=1374/1374 +41 0 
* 0 
+41 0 1374 0 0 1 0 0 1
+3 0 1374 0 0 0 0 0 0 0 0 1374
jcnd=1374/1374 0x3877c839c0 0 
* 0 
+24 0 1374
+3 0 1374
+4 0 1374
+3 0 1374
+3 0 1374
+3 0 1374
+3 0 1374
+3 0 1374 0 0 0 0 0 0 0 0 1374 684
jcnd=694/1374 +32 0 
* 0 
-3 0 10 0 0 1 0 0 1
+3 0 10 0 0 0 0 0 0 0 0 10
+2 0 690
+10 0 690 690 0 0 2 0 0 2
+3 0 690
+4 0 690 0 690
+3 0 690
+4 0 690
+4 0 690 0 0 0 0 0 0 0 0 690
jcnd=690/690 -18 0 
* 0 
-18 0 2126 2126
+3 0 2126
+4 0 2126 0 2126
+3 0 2126
+4 0 2126
+4 0 2126 0 0 0 0 0 0 0 0 2126 11
jcnd=1436/2126 -18 0 
* 0 
+2 0 1384
+4 0 1384
+3 0 1384 1384
+1 0 1384 1384
+1 0 1384 1384
+2 0 1384 1384 0 1 0 0 1
+2 0 1384 1384
0x3877c839c0 0 1374 0 0 1 0 0 1
+3 0 1374
+3 0 1374
+3 0 1374
+4 0 1374 0 1374 0 0 1 0 0 1
cfn=(284)
calls=1374 0x3877c89b20 0 
* 0 325186 120896 118148 6 1 60 6 1 60 15548 904 1374 170
+5 0 1374
jump=1374 0x3877c838be 0 
* 0 

fn=(168)
0x3877c7b8b0 0 1384 1384 0 1 1 0 1 1
+7 0 1384 1384 0 0 1 0 0 1
+3 0 1384
+3 0 1384 0 0 1 0 0 1 0 0 1384
+6 0 1384
+3 0 1384 0 0 0 0 0 0 0 0 1384
+6 0 1384 1384
+4 0 1384
+4 0 1384
+2 0 1384 0 0 0 0 0 0 0 0 1384 2
+2 0 1384
+2 0 1384
+7 0 1384 0 0 0 0 0 0 0 0 1384
jcnd=1384/1384 +14 0 
* 0 
+14 0 1384
+2 0 1384
cfn=(170)
calls=1384 0x3877c78650 0 
* 0 134531 35591 20325 19 2 0 19 2 0 32529 588

fn=(286)
0x3877c75e10 0 1 0 1 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+8 0 1 0 0 0 0 0 0 0 0 1
+6 0 1 1
+9 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 +3 0 
* 0 
+3 0 1 0 1
+4 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1
+4 0 1
+5 0 1
+2 0 1 1 1 0 0 0 0 0 0 1
+3 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
jcnd=1/1 0x3877c75ef2 0 
* 0 
-8 0 9
+2 0 9 9 9 0 0 0 0 0 0 9
+3 0 9
+3 0 9 0 0 0 0 0 0 0 0 9 1
jcnd=6/9 0x3877c75ef2 0 
* 0 
+6 0 3
jump=3 0x3877c75f78 0 
* 0 
+10 0 4 4
+5 0 4
+3 0 4 4
+5 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+4 0 4 0 0 0 0 0 0 0 0 4
+6 0 4 4
+9 0 4 0 4
+4 0 4 0 4
+4 0 4 0 0 0 0 0 0 0 0 4 3
jcnd=4/4 +16 0 
* 0 
+16 0 20 20 0 1 0 0 1
+4 0 20
+7 0 20 0 20
+4 0 20 0 20
+4 0 20 0 0 0 0 0 0 0 0 20 1
jcnd=18/20 +18 0 
* 0 
+2 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
+4 0 2 0 2
+4 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2
+3 0 2
+3 0 2 0 0 0 0 0 0 0 0 2
jcnd=1/2 0x3877c75f78 0 
* 0 
-29 0 18
+3 0 18 0 18
+4 0 18 0 18
+4 0 18
+4 0 18 0 18
+4 0 18 0 18
+4 0 18
+3 0 18
+3 0 18 0 0 0 0 0 0 0 0 18 8
jcnd=6/18 0x3877c75f78 0 
* 0 
+6 0 20 20 0 1 0 0 1
+4 0 20 20
+4 0 20
+3 0 20 0 0 1 0 0 1
+4 0 20
+4 0 20 20
+5 0 20
+4 0 20
+2 0 20 0 0 0 0 0 0 0 0 20 2
jcnd=6/20 +70 0 
* 0 
+2 0 14 14
+3 0 14
+3 0 14
+3 0 14 14
+4 0 14 14
+4 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+4 0 14 0 0 0 0 0 0 0 0 14
+6 0 14 14
+8 0 14 0 14
+4 0 14 0 14
+4 0 14 0 0 0 0 0 0 0 0 14 1
jcnd=13/14 +15 0 
* 0 
+2 0 1 1
+4 0 1
+3 0 1 0 0 0 0 0 0 0 0 1
+6 0 20 20 0 1 0 0 1
+4 0 20 0 0 0 0 0 0 0 0 20
+2 0 20 20 0 0 3 0 0 3
+6 0 20 0 0 0 0 0 0 0 0 20 3
jcnd=4/20 0x3877c75e68 0 
* 0 
+6 0 16 0 16
+6 0 16
jump=16 0x3877c75eaa 0 
* 0 
+10 0 10
+3 0 10 0 0 1 0 0 1 0 0 10
jcnd=1/10 0x3877c76168 0 
* 0 
+6 0 9
+4 0 9
jump=9 0x3877c75e50 0 
* 0 
0x3877c76168 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

totals: 10975977 4500123 2590943 241 101 141 241 101 141 315109 5500 8294 170
